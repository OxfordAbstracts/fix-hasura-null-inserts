schema  {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""whether this query should be cached (Hasura Cloud only)"""
directive @cached ("""measured in seconds"""
ttl: Int! , """refresh the cache entry"""
refresh: Boolean! ) on QUERY

type AuthorizeOutput {
   url: String! 
}

"""
Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean! ]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean! ]
}

type CardData {
   brand: String! 
   expiry_month: Int! 
   expiry_year: Int! 
   last4: String! 
}

input ChangeSubmissionOwner {
  from: Int! 
  send_email: Boolean! 
  submission_id: Int! 
  to: String! 
}

type ChangedSubmissionOwner {
   changed: Boolean! 
}

input DrAddon {
  id: String! 
  ticket_id: String! 
}

type DrAddonIdCollection {
   addon_id: String! 
}

type DrAdminAddon {
   description: String
   id: String! 
   max_per_order: Int
   name: String! 
   price: Int! 
   tax_rules: [DrTaxRule! ]! 
   ticket_ids: [String! ]! 
}

type DrAdminGroup {
   display_order: Int! 
   id: String
   name: String
   tickets: [DrAdminTicket! ]! 
}

type DrAdminTicket {
   description: String
   id: String! 
   name: String! 
   price: Int! 
   tax_rules: [DrTaxRule! ]! 
   ticket_group_id: String
}

type DrAdminTicketsAndAddons {
   addons: [DrAdminAddon! ]! 
   groups: [DrAdminGroup! ]! 
}

input DrAttendee {
  addons: [DrAddon! ]
  email: String! 
  first_name: String! 
  last_name: String! 
  responses: [DrResponse! ]
  tickets: [DrTicket! ]! 
}

input DrAttendeeAddon {
  id: String! 
}

input DrAttendeeSubmit {
  attendee_id: String! 
  responses: [DrResponse! ]
}

type DrAttendeeSubmitOutput {
   registered: Boolean! 
}

input DrAttendeeTicket {
  id: String! 
}

input DrAuthorizeRegister {
  api_key_id: String! 
  signature_key: String! 
  transaction_key: String! 
}

type DrAuthorizeRegisterOutput {
   api_key_id: String! 
   signature_key: String! 
   transaction_key: String! 
   webhook_id: String! 
}

type DrAuthorizeUnregisterOutput {
   success: Boolean! 
}

input DrAuthorizeWebhook {
  event_id: Int! 
  order_number: Int! 
  webhook_id: String! 
}

type DrAuthorizeWebhookOutput {
   success: Boolean! 
}

input DrChangeAttendeeOwner {
  attendee_id: String! 
  first_name: String
  from: Int! 
  last_name: String
  send_email: Boolean! 
  to: String! 
}

type DrChangedAttendeeOwner {
   changed: Boolean! 
}

input DrCoupon {
  id: String! 
}

type DrCouponCheck {
   addons: [DrAddonIdCollection! ]! 
   code: String! 
   discount_amount: Int! 
   discount_type: String! 
   id: String! 
   tickets: [DrTicketIdCollection! ]! 
}

type DrCouponCheckOutput {
   coupon: DrCouponCheck
}

input DrInvoiceLink {
  email: String! 
  order_id: String! 
}

type DrOfflinePaymentOutput {
   success: Boolean! 
}

type DrOrderAddon {
   addon_id: String! 
   addon_name: String! 
   coupon_discount_percentage: Int! 
   coupon_discount_type: String! 
   price_at_purchase: Int! 
   status: String! 
   tax_rules_at_purchase: [DrOrderTaxRuleAtPurchase! ]! 
   ticket_id: String! 
}

type DrOrderAddonData {
   description: String
   id: String! 
   max_per_order: Int
   name: String! 
   price: Int! 
   quantity_available: Int
}

type DrOrderAttendee {
   answered_by: Int
   attendee_addons: [DrOrderAddon! ]! 
   attendee_tickets: [DrOrderTicket! ]! 
   id: String! 
   question_responses: [DrOrderQuestionResponse! ]! 
   user_view: DrOrderUserView
}

type DrOrderClient {
   vat_code: String! 
}

type DrOrderData {
   attendees: [DrOrderAttendee! ]! 
   coupon_id: String
   coupon_name_at_purchase: String
   created_at: timestamptz! 
   currency: String! 
   invoice_address: String
   invoice_business_name: String
   invoice_link_email: String
   invoice_payer_name: String
   invoice_tax_number: String
   order_number: Int! 
   paid: Boolean! 
   payment_type: String
   service_fee_absorbed: Boolean! 
   service_fee_paid: Int! 
   transactions: [DrOrderTransaction! ]! 
   user: DrOrderUser! 
}

type DrOrderDataOutput {
   addons: [DrOrderAddonData! ]! 
   event: DrOrderEvent! 
   event_details: DrOrderEventDetails! 
   groups: [DrOrderGroup! ]! 
   invoice_setup: DrOrderInvoiceSetup! 
   order: DrOrderData! 
   paypal_setup: DrPaypalSetupForOrder
}

type DrOrderEvent {
   abbreviation: String
   client: DrOrderClient! 
   event_end_date: date
   event_logo: String
   event_start_date: date
   event_title: String! 
   notification_email: String
   telephone_number: String
   theme_logo: String
   venue: String
}

type DrOrderEventDetails {
   authorize_payments_allowed: Boolean
   registration_active: Boolean! 
   stripe_account_id_exists: Boolean
}

type DrOrderGroup {
   display_order: Int! 
   id: String
   name: String
   tickets: [DrOrderTicketData! ]! 
}

type DrOrderInvoiceSetup {
   buyer_email: Boolean! 
   delegate_order_number: Boolean! 
   delegate_registration_date: Boolean! 
   email: Boolean! 
   end_date: Boolean! 
   footer_html: String
   header_html: String
   payer_address: Boolean
   payer_business_name: Boolean
   payer_name: Boolean
   payer_tax_number: Boolean
   start_date: Boolean! 
   telephone: Boolean! 
   title: String! 
   venue: Boolean! 
}

type DrOrderOptionResponse {
   question_option: DrOrderQuestionOption! 
}

type DrOrderQuestionOption {
   id: String! 
   value: String! 
}

type DrOrderQuestionResponse {
   answer: String
   id: String! 
   option_responses: [DrOrderOptionResponse! ]! 
   question_id: String! 
}

type DrOrderTaxRuleAtPurchase {
   percentage_at_purchase: Float! 
   tax_rule_id: String! 
   tax_rule_name_at_purchase: String! 
}

type DrOrderTicket {
   coupon_discount_percentage: Int! 
   coupon_discount_type: String! 
   price_at_purchase: Int! 
   status: String! 
   tax_rules_at_purchase: [DrOrderTaxRuleAtPurchase! ]! 
   ticket_id: String! 
   ticket_name: String! 
}

type DrOrderTicketData {
   description: String
   id: String! 
   name: String! 
   price: Int! 
   quantity_available: Int
   ticket_group_id: String
}

type DrOrderTransaction {
   card_brand: String
   card_expire_month: Int
   card_expire_year: Int
   card_last4: String
   created_at: timestamptz! 
}

type DrOrderUser {
   email: String! 
   first_name: String
   id: Int! 
   last_name: String
}

type DrOrderUserView {
   email: String! 
   first_name: String! 
   last_name: String! 
   user_id: Int! 
}

type DrPayPalPartnerCheckOutput {
   success: Boolean! 
}

input DrPaypalConfirm {
  id: String! 
  order_id: String! 
}

type DrPaypalConfirmOutput {
   confirmed: Boolean! 
}

type DrPaypalSetupForOrder {
   merchant_id_in_paypal: String! 
}

type DrPaypalSignUpLinkOutput {
   tracking_id: String! 
   url: String! 
}

input DrRefund {
  order_id: String! 
  partial_refund: DrRefundAttendee
  refund_offline: Boolean! 
}

input DrRefundAttendee {
  addons: [DrAttendeeTicket! ]
  tickets: [DrAttendeeAddon! ]
}

type DrRefundOutput {
   error: String
   refunded: Boolean! 
}

type DrRegisterOutput {
   order_id: String! 
}

input DrResponse {
  question_id: String! 
  response: String
  response_option_ids: [String! ]
}

type DrSendCancelledTicketEmailOutput {
   sent: Boolean! 
}

input DrStripeMetaData {
  event_id: Int! 
  order_id: String! 
  order_number: String! 
}

type DrStripeRegisterAccountOutput {
   connected: Boolean! 
}

type DrStripeRemovedCard {
   removed: Boolean! 
}

type DrStripeUnregisterAccountOutput {
   disconnected: Boolean! 
}

input DrStripeWebhook {
  account: String! 
  data: DrStripeWebhookData! 
  type: String! 
}

input DrStripeWebhookData {
  object: DrStripeWebhookObject! 
}

input DrStripeWebhookObject {
  amount_subtotal: Int! 
  amount_total: Int! 
  cancel_url: String! 
  id: String! 
  livemode: Boolean! 
  metadata: DrStripeMetaData! 
  mode: String! 
  object: String! 
  payment_intent: String! 
  payment_method_types: [String! ]! 
  success_url: String! 
}

type DrStripeWebhookOutput {
   success: Boolean! 
}

type DrTaxRule {
   id: String! 
   name: String! 
   percentage_amount: Float! 
}

input DrTicket {
  id: String! 
}

type DrTicketIdCollection {
   ticket_id: String! 
}

type EmailExistsOutput {
   exists: Boolean! 
}

"""
Boolean expression to compare columns of type "Float". All fields are combined with logical 'AND'.
"""
input Float_comparison_exp {
  _eq: Float
  _gt: Float
  _gte: Float
  _in: [Float! ]
  _is_null: Boolean
  _lt: Float
  _lte: Float
  _neq: Float
  _nin: [Float! ]
}

input GenerateFileUploadUrlFile {
  file_name: String! 
}

type GenerateFileUploadUrlOutput {
   signed_request: String! 
   url: String! 
}

input InputEmailAttachment {
  name: String! 
  url: String! 
}

input InputEmailRecipient {
  email: String! 
  merges: [InputKeyVal! ]! 
  user_id: Int! 
}

input InputKeyVal {
  key: String! 
  val: String! 
}

"""
Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int! ]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int! ]
}

type InvoiceLinkOutput {
   success: Boolean! 
}

type IsAdminOutput {
   admin: Boolean! 
}

type PdfToDownload {
   url: String! 
}

type SendEventAdminEmailsOutput {
   could_not_send_to: [String! ]! 
   sent_count: Int! 
}

type ServiceFeeChargeOutput {
   success: Boolean! 
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String
  """does the column match the given case-insensitive pattern"""
_ilike: String
  _in: [String! ]
  """
  does the column match the given POSIX regular expression, case insensitive
  """
_iregex: String
  _is_null: Boolean
  """does the column match the given pattern"""
_like: String
  _lt: String
  _lte: String
  _neq: String
  """does the column NOT match the given case-insensitive pattern"""
_nilike: String
  _nin: [String! ]
  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
_niregex: String
  """does the column NOT match the given pattern"""
_nlike: String
  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
_nregex: String
  """does the column NOT match the given SQL regular expression"""
_nsimilar: String
  """
  does the column match the given POSIX regular expression, case sensitive
  """
_regex: String
  """does the column match the given SQL regular expression"""
_similar: String
}

type StripeOutput {
   url: String! 
}

input TelephoneNumberToValidate {
  country: String! 
  number: String! 
}

type TelephoneValidationOutput {
   number: String! 
   validation: String
}

scalar _delegate_registration_status 

"""
Boolean expression to compare columns of type "_delegate_registration_status". All fields are combined with logical 'AND'.
"""
input _delegate_registration_status_comparison_exp {
  _eq: _delegate_registration_status
  _gt: _delegate_registration_status
  _gte: _delegate_registration_status
  _in: [_delegate_registration_status! ]
  _is_null: Boolean
  _lt: _delegate_registration_status
  _lte: _delegate_registration_status
  _neq: _delegate_registration_status
  _nin: [_delegate_registration_status! ]
}

scalar _int4 

"""
Boolean expression to compare columns of type "_int4". All fields are combined with logical 'AND'.
"""
input _int4_comparison_exp {
  _eq: _int4
  _gt: _int4
  _gte: _int4
  _in: [_int4! ]
  _is_null: Boolean
  _lt: _int4
  _lte: _int4
  _neq: _int4
  _nin: [_int4! ]
}

scalar _text 

"""
Boolean expression to compare columns of type "_text". All fields are combined with logical 'AND'.
"""
input _text_comparison_exp {
  _eq: _text
  _gt: _text
  _gte: _text
  _in: [_text! ]
  _is_null: Boolean
  _lt: _text
  _lte: _text
  _neq: _text
  _nin: [_text! ]
}

"""
columns and relationships of "accepted_submissions"
"""
type accepted_submissions {
   event_id: Int
   submission_id: Int
}

"""
aggregated selection of "accepted_submissions"
"""
type accepted_submissions_aggregate {
   aggregate: accepted_submissions_aggregate_fields
   nodes: [accepted_submissions! ]! 
}

input accepted_submissions_aggregate_bool_exp {
  count: accepted_submissions_aggregate_bool_exp_count
}

input accepted_submissions_aggregate_bool_exp_count {
  arguments: [accepted_submissions_select_column! ]
  distinct: Boolean
  filter: accepted_submissions_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "accepted_submissions"
"""
type accepted_submissions_aggregate_fields {
   avg: accepted_submissions_avg_fields
   count(columns: [accepted_submissions_select_column! ], distinct: Boolean): Int! 
   max: accepted_submissions_max_fields
   min: accepted_submissions_min_fields
   stddev: accepted_submissions_stddev_fields
   stddev_pop: accepted_submissions_stddev_pop_fields
   stddev_samp: accepted_submissions_stddev_samp_fields
   sum: accepted_submissions_sum_fields
   var_pop: accepted_submissions_var_pop_fields
   var_samp: accepted_submissions_var_samp_fields
   variance: accepted_submissions_variance_fields
}

"""
order by aggregate values of table "accepted_submissions"
"""
input accepted_submissions_aggregate_order_by {
  avg: accepted_submissions_avg_order_by
  count: order_by
  max: accepted_submissions_max_order_by
  min: accepted_submissions_min_order_by
  stddev: accepted_submissions_stddev_order_by
  stddev_pop: accepted_submissions_stddev_pop_order_by
  stddev_samp: accepted_submissions_stddev_samp_order_by
  sum: accepted_submissions_sum_order_by
  var_pop: accepted_submissions_var_pop_order_by
  var_samp: accepted_submissions_var_samp_order_by
  variance: accepted_submissions_variance_order_by
}

"""
input type for inserting array relation for remote table "accepted_submissions"
"""
input accepted_submissions_arr_rel_insert_input {
  data: [accepted_submissions_insert_input! ]! 
}

"""aggregate avg on columns"""
type accepted_submissions_avg_fields {
   event_id: Float
   submission_id: Float
}

"""
order by avg() on columns of table "accepted_submissions"
"""
input accepted_submissions_avg_order_by {
  event_id: order_by
  submission_id: order_by
}

"""
Boolean expression to filter rows from the table "accepted_submissions". All fields are combined with a logical 'AND'.
"""
input accepted_submissions_bool_exp {
  _and: [accepted_submissions_bool_exp! ]
  _not: accepted_submissions_bool_exp
  _or: [accepted_submissions_bool_exp! ]
  event_id: Int_comparison_exp
  submission_id: Int_comparison_exp
}

"""
input type for inserting data into table "accepted_submissions"
"""
input accepted_submissions_insert_input {
  event_id: Int
  submission_id: Int
}

"""aggregate max on columns"""
type accepted_submissions_max_fields {
   event_id: Int
   submission_id: Int
}

"""
order by max() on columns of table "accepted_submissions"
"""
input accepted_submissions_max_order_by {
  event_id: order_by
  submission_id: order_by
}

"""aggregate min on columns"""
type accepted_submissions_min_fields {
   event_id: Int
   submission_id: Int
}

"""
order by min() on columns of table "accepted_submissions"
"""
input accepted_submissions_min_order_by {
  event_id: order_by
  submission_id: order_by
}

"""Ordering options when selecting data from "accepted_submissions"."""
input accepted_submissions_order_by {
  event_id: order_by
  submission_id: order_by
}

"""
select columns of table "accepted_submissions"
"""
enum accepted_submissions_select_column {
  """column name"""
event_id
  """column name"""
submission_id
}

"""aggregate stddev on columns"""
type accepted_submissions_stddev_fields {
   event_id: Float
   submission_id: Float
}

"""
order by stddev() on columns of table "accepted_submissions"
"""
input accepted_submissions_stddev_order_by {
  event_id: order_by
  submission_id: order_by
}

"""aggregate stddev_pop on columns"""
type accepted_submissions_stddev_pop_fields {
   event_id: Float
   submission_id: Float
}

"""
order by stddev_pop() on columns of table "accepted_submissions"
"""
input accepted_submissions_stddev_pop_order_by {
  event_id: order_by
  submission_id: order_by
}

"""aggregate stddev_samp on columns"""
type accepted_submissions_stddev_samp_fields {
   event_id: Float
   submission_id: Float
}

"""
order by stddev_samp() on columns of table "accepted_submissions"
"""
input accepted_submissions_stddev_samp_order_by {
  event_id: order_by
  submission_id: order_by
}

"""
Streaming cursor of the table "accepted_submissions"
"""
input accepted_submissions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: accepted_submissions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input accepted_submissions_stream_cursor_value_input {
  event_id: Int
  submission_id: Int
}

"""aggregate sum on columns"""
type accepted_submissions_sum_fields {
   event_id: Int
   submission_id: Int
}

"""
order by sum() on columns of table "accepted_submissions"
"""
input accepted_submissions_sum_order_by {
  event_id: order_by
  submission_id: order_by
}

"""aggregate var_pop on columns"""
type accepted_submissions_var_pop_fields {
   event_id: Float
   submission_id: Float
}

"""
order by var_pop() on columns of table "accepted_submissions"
"""
input accepted_submissions_var_pop_order_by {
  event_id: order_by
  submission_id: order_by
}

"""aggregate var_samp on columns"""
type accepted_submissions_var_samp_fields {
   event_id: Float
   submission_id: Float
}

"""
order by var_samp() on columns of table "accepted_submissions"
"""
input accepted_submissions_var_samp_order_by {
  event_id: order_by
  submission_id: order_by
}

"""aggregate variance on columns"""
type accepted_submissions_variance_fields {
   event_id: Float
   submission_id: Float
}

"""
order by variance() on columns of table "accepted_submissions"
"""
input accepted_submissions_variance_order_by {
  event_id: order_by
  submission_id: order_by
}

"""
columns and relationships of "affiliation_versions"
"""
type affiliation_versions {
   affiliation_id: Int! 
   affiliation_order: Int! 
  """An array relationship"""
 author("""distinct select on columns"""
distinct_on: [author_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_versions_order_by! ], """filter the rows returned"""
where: author_versions_bool_exp): [author_versions! ]! 
  """An aggregate relationship"""
 author_aggregate("""distinct select on columns"""
distinct_on: [author_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_versions_order_by! ], """filter the rows returned"""
where: author_versions_bool_exp): author_versions_aggregate! 
   author_id: Int! 
   city: String
   country: String
   created_at: timestamptz! 
   deleted: Boolean! 
   ecr_id: String
   id: bigint! 
   institution: String
   state: String
}

"""
aggregated selection of "affiliation_versions"
"""
type affiliation_versions_aggregate {
   aggregate: affiliation_versions_aggregate_fields
   nodes: [affiliation_versions! ]! 
}

input affiliation_versions_aggregate_bool_exp {
  bool_and: affiliation_versions_aggregate_bool_exp_bool_and
  bool_or: affiliation_versions_aggregate_bool_exp_bool_or
  count: affiliation_versions_aggregate_bool_exp_count
}

input affiliation_versions_aggregate_bool_exp_bool_and {
  arguments: affiliation_versions_select_column_affiliation_versions_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: affiliation_versions_bool_exp
  predicate: Boolean_comparison_exp! 
}

input affiliation_versions_aggregate_bool_exp_bool_or {
  arguments: affiliation_versions_select_column_affiliation_versions_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: affiliation_versions_bool_exp
  predicate: Boolean_comparison_exp! 
}

input affiliation_versions_aggregate_bool_exp_count {
  arguments: [affiliation_versions_select_column! ]
  distinct: Boolean
  filter: affiliation_versions_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "affiliation_versions"
"""
type affiliation_versions_aggregate_fields {
   avg: affiliation_versions_avg_fields
   count(columns: [affiliation_versions_select_column! ], distinct: Boolean): Int! 
   max: affiliation_versions_max_fields
   min: affiliation_versions_min_fields
   stddev: affiliation_versions_stddev_fields
   stddev_pop: affiliation_versions_stddev_pop_fields
   stddev_samp: affiliation_versions_stddev_samp_fields
   sum: affiliation_versions_sum_fields
   var_pop: affiliation_versions_var_pop_fields
   var_samp: affiliation_versions_var_samp_fields
   variance: affiliation_versions_variance_fields
}

"""
order by aggregate values of table "affiliation_versions"
"""
input affiliation_versions_aggregate_order_by {
  avg: affiliation_versions_avg_order_by
  count: order_by
  max: affiliation_versions_max_order_by
  min: affiliation_versions_min_order_by
  stddev: affiliation_versions_stddev_order_by
  stddev_pop: affiliation_versions_stddev_pop_order_by
  stddev_samp: affiliation_versions_stddev_samp_order_by
  sum: affiliation_versions_sum_order_by
  var_pop: affiliation_versions_var_pop_order_by
  var_samp: affiliation_versions_var_samp_order_by
  variance: affiliation_versions_variance_order_by
}

"""
input type for inserting array relation for remote table "affiliation_versions"
"""
input affiliation_versions_arr_rel_insert_input {
  data: [affiliation_versions_insert_input! ]! 
  """upsert condition"""
on_conflict: affiliation_versions_on_conflict
}

"""aggregate avg on columns"""
type affiliation_versions_avg_fields {
   affiliation_id: Float
   affiliation_order: Float
   author_id: Float
   id: Float
}

"""
order by avg() on columns of table "affiliation_versions"
"""
input affiliation_versions_avg_order_by {
  affiliation_id: order_by
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "affiliation_versions". All fields are combined with a logical 'AND'.
"""
input affiliation_versions_bool_exp {
  _and: [affiliation_versions_bool_exp! ]
  _not: affiliation_versions_bool_exp
  _or: [affiliation_versions_bool_exp! ]
  affiliation_id: Int_comparison_exp
  affiliation_order: Int_comparison_exp
  author: author_versions_bool_exp
  author_aggregate: author_versions_aggregate_bool_exp
  author_id: Int_comparison_exp
  city: String_comparison_exp
  country: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted: Boolean_comparison_exp
  ecr_id: String_comparison_exp
  id: bigint_comparison_exp
  institution: String_comparison_exp
  state: String_comparison_exp
}

"""
unique or primary key constraints on table "affiliation_versions"
"""
enum affiliation_versions_constraint {
  """
  unique or primary key constraint on columns "id"
  """
affiliation_versions_pkey
}

"""
input type for incrementing numeric columns in table "affiliation_versions"
"""
input affiliation_versions_inc_input {
  affiliation_id: Int
  affiliation_order: Int
  author_id: Int
  id: bigint
}

"""
input type for inserting data into table "affiliation_versions"
"""
input affiliation_versions_insert_input {
  affiliation_id: Int! 
  affiliation_order: Int! 
  author: author_versions_arr_rel_insert_input
  author_id: Int! 
  city: String
  country: String
  created_at: timestamptz! 
  deleted: Boolean! 
  ecr_id: String
  id: bigint! 
  institution: String
  state: String
}

"""aggregate max on columns"""
type affiliation_versions_max_fields {
   affiliation_id: Int
   affiliation_order: Int
   author_id: Int
   city: String
   country: String
   created_at: timestamptz
   ecr_id: String
   id: bigint
   institution: String
   state: String
}

"""
order by max() on columns of table "affiliation_versions"
"""
input affiliation_versions_max_order_by {
  affiliation_id: order_by
  affiliation_order: order_by
  author_id: order_by
  city: order_by
  country: order_by
  created_at: order_by
  ecr_id: order_by
  id: order_by
  institution: order_by
  state: order_by
}

"""aggregate min on columns"""
type affiliation_versions_min_fields {
   affiliation_id: Int
   affiliation_order: Int
   author_id: Int
   city: String
   country: String
   created_at: timestamptz
   ecr_id: String
   id: bigint
   institution: String
   state: String
}

"""
order by min() on columns of table "affiliation_versions"
"""
input affiliation_versions_min_order_by {
  affiliation_id: order_by
  affiliation_order: order_by
  author_id: order_by
  city: order_by
  country: order_by
  created_at: order_by
  ecr_id: order_by
  id: order_by
  institution: order_by
  state: order_by
}

"""
response of any mutation on the table "affiliation_versions"
"""
type affiliation_versions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [affiliation_versions! ]! 
}

"""
on_conflict condition type for table "affiliation_versions"
"""
input affiliation_versions_on_conflict {
  constraint: affiliation_versions_constraint! 
  update_columns: [affiliation_versions_update_column! ]! 
  where: affiliation_versions_bool_exp
}

"""Ordering options when selecting data from "affiliation_versions"."""
input affiliation_versions_order_by {
  affiliation_id: order_by
  affiliation_order: order_by
  author_aggregate: author_versions_aggregate_order_by
  author_id: order_by
  city: order_by
  country: order_by
  created_at: order_by
  deleted: order_by
  ecr_id: order_by
  id: order_by
  institution: order_by
  state: order_by
}

"""primary key columns input for table: affiliation_versions"""
input affiliation_versions_pk_columns_input {
  id: bigint! 
}

"""
select columns of table "affiliation_versions"
"""
enum affiliation_versions_select_column {
  """column name"""
affiliation_id
  """column name"""
affiliation_order
  """column name"""
author_id
  """column name"""
city
  """column name"""
country
  """column name"""
created_at
  """column name"""
deleted
  """column name"""
ecr_id
  """column name"""
id
  """column name"""
institution
  """column name"""
state
}

"""
select "affiliation_versions_aggregate_bool_exp_bool_and_arguments_columns" columns of table "affiliation_versions"
"""
enum affiliation_versions_select_column_affiliation_versions_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
deleted
}

"""
select "affiliation_versions_aggregate_bool_exp_bool_or_arguments_columns" columns of table "affiliation_versions"
"""
enum affiliation_versions_select_column_affiliation_versions_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
deleted
}

"""
input type for updating data in table "affiliation_versions"
"""
input affiliation_versions_set_input {
  affiliation_id: Int
  affiliation_order: Int
  author_id: Int
  city: String
  country: String
  created_at: timestamptz
  deleted: Boolean
  ecr_id: String
  id: bigint
  institution: String
  state: String
}

"""aggregate stddev on columns"""
type affiliation_versions_stddev_fields {
   affiliation_id: Float
   affiliation_order: Float
   author_id: Float
   id: Float
}

"""
order by stddev() on columns of table "affiliation_versions"
"""
input affiliation_versions_stddev_order_by {
  affiliation_id: order_by
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type affiliation_versions_stddev_pop_fields {
   affiliation_id: Float
   affiliation_order: Float
   author_id: Float
   id: Float
}

"""
order by stddev_pop() on columns of table "affiliation_versions"
"""
input affiliation_versions_stddev_pop_order_by {
  affiliation_id: order_by
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type affiliation_versions_stddev_samp_fields {
   affiliation_id: Float
   affiliation_order: Float
   author_id: Float
   id: Float
}

"""
order by stddev_samp() on columns of table "affiliation_versions"
"""
input affiliation_versions_stddev_samp_order_by {
  affiliation_id: order_by
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""
Streaming cursor of the table "affiliation_versions"
"""
input affiliation_versions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: affiliation_versions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input affiliation_versions_stream_cursor_value_input {
  affiliation_id: Int
  affiliation_order: Int
  author_id: Int
  city: String
  country: String
  created_at: timestamptz
  deleted: Boolean
  ecr_id: String
  id: bigint
  institution: String
  state: String
}

"""aggregate sum on columns"""
type affiliation_versions_sum_fields {
   affiliation_id: Int
   affiliation_order: Int
   author_id: Int
   id: bigint
}

"""
order by sum() on columns of table "affiliation_versions"
"""
input affiliation_versions_sum_order_by {
  affiliation_id: order_by
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""
update columns of table "affiliation_versions"
"""
enum affiliation_versions_update_column {
  """column name"""
affiliation_id
  """column name"""
affiliation_order
  """column name"""
author_id
  """column name"""
city
  """column name"""
country
  """column name"""
created_at
  """column name"""
deleted
  """column name"""
ecr_id
  """column name"""
id
  """column name"""
institution
  """column name"""
state
}

input affiliation_versions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: affiliation_versions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: affiliation_versions_set_input
  where: affiliation_versions_bool_exp! 
}

"""aggregate var_pop on columns"""
type affiliation_versions_var_pop_fields {
   affiliation_id: Float
   affiliation_order: Float
   author_id: Float
   id: Float
}

"""
order by var_pop() on columns of table "affiliation_versions"
"""
input affiliation_versions_var_pop_order_by {
  affiliation_id: order_by
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type affiliation_versions_var_samp_fields {
   affiliation_id: Float
   affiliation_order: Float
   author_id: Float
   id: Float
}

"""
order by var_samp() on columns of table "affiliation_versions"
"""
input affiliation_versions_var_samp_order_by {
  affiliation_id: order_by
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type affiliation_versions_variance_fields {
   affiliation_id: Float
   affiliation_order: Float
   author_id: Float
   id: Float
}

"""
order by variance() on columns of table "affiliation_versions"
"""
input affiliation_versions_variance_order_by {
  affiliation_id: order_by
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""
columns and relationships of "affiliations"
"""
type affiliations {
   affiliation_order: Int! 
  """An object relationship"""
 author: authors! 
   author_id: Int! 
   city: String
   country: String
   ecr_id: String
   id: Int! 
   institution: String
   state: String
}

"""
aggregated selection of "affiliations"
"""
type affiliations_aggregate {
   aggregate: affiliations_aggregate_fields
   nodes: [affiliations! ]! 
}

input affiliations_aggregate_bool_exp {
  count: affiliations_aggregate_bool_exp_count
}

input affiliations_aggregate_bool_exp_count {
  arguments: [affiliations_select_column! ]
  distinct: Boolean
  filter: affiliations_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "affiliations"
"""
type affiliations_aggregate_fields {
   avg: affiliations_avg_fields
   count(columns: [affiliations_select_column! ], distinct: Boolean): Int! 
   max: affiliations_max_fields
   min: affiliations_min_fields
   stddev: affiliations_stddev_fields
   stddev_pop: affiliations_stddev_pop_fields
   stddev_samp: affiliations_stddev_samp_fields
   sum: affiliations_sum_fields
   var_pop: affiliations_var_pop_fields
   var_samp: affiliations_var_samp_fields
   variance: affiliations_variance_fields
}

"""
order by aggregate values of table "affiliations"
"""
input affiliations_aggregate_order_by {
  avg: affiliations_avg_order_by
  count: order_by
  max: affiliations_max_order_by
  min: affiliations_min_order_by
  stddev: affiliations_stddev_order_by
  stddev_pop: affiliations_stddev_pop_order_by
  stddev_samp: affiliations_stddev_samp_order_by
  sum: affiliations_sum_order_by
  var_pop: affiliations_var_pop_order_by
  var_samp: affiliations_var_samp_order_by
  variance: affiliations_variance_order_by
}

"""
input type for inserting array relation for remote table "affiliations"
"""
input affiliations_arr_rel_insert_input {
  data: [affiliations_insert_input! ]! 
  """upsert condition"""
on_conflict: affiliations_on_conflict
}

"""aggregate avg on columns"""
type affiliations_avg_fields {
   affiliation_order: Float
   author_id: Float
   id: Float
}

"""
order by avg() on columns of table "affiliations"
"""
input affiliations_avg_order_by {
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "affiliations". All fields are combined with a logical 'AND'.
"""
input affiliations_bool_exp {
  _and: [affiliations_bool_exp! ]
  _not: affiliations_bool_exp
  _or: [affiliations_bool_exp! ]
  affiliation_order: Int_comparison_exp
  author: authors_bool_exp
  author_id: Int_comparison_exp
  city: String_comparison_exp
  country: String_comparison_exp
  ecr_id: String_comparison_exp
  id: Int_comparison_exp
  institution: String_comparison_exp
  state: String_comparison_exp
}

"""
unique or primary key constraints on table "affiliations"
"""
enum affiliations_constraint {
  """
  unique or primary key constraint on columns "affiliation_id"
  """
affiliations_pkey
}

"""
input type for incrementing numeric columns in table "affiliations"
"""
input affiliations_inc_input {
  affiliation_order: Int
  author_id: Int
  id: Int
}

"""
input type for inserting data into table "affiliations"
"""
input affiliations_insert_input {
  affiliation_order: Int! 
  author: authors_obj_rel_insert_input
  author_id: Int! 
  city: String
  country: String
  ecr_id: String
  id: Int
  institution: String
  state: String
}

"""aggregate max on columns"""
type affiliations_max_fields {
   affiliation_order: Int
   author_id: Int
   city: String
   country: String
   ecr_id: String
   id: Int
   institution: String
   state: String
}

"""
order by max() on columns of table "affiliations"
"""
input affiliations_max_order_by {
  affiliation_order: order_by
  author_id: order_by
  city: order_by
  country: order_by
  ecr_id: order_by
  id: order_by
  institution: order_by
  state: order_by
}

"""aggregate min on columns"""
type affiliations_min_fields {
   affiliation_order: Int
   author_id: Int
   city: String
   country: String
   ecr_id: String
   id: Int
   institution: String
   state: String
}

"""
order by min() on columns of table "affiliations"
"""
input affiliations_min_order_by {
  affiliation_order: order_by
  author_id: order_by
  city: order_by
  country: order_by
  ecr_id: order_by
  id: order_by
  institution: order_by
  state: order_by
}

"""
response of any mutation on the table "affiliations"
"""
type affiliations_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [affiliations! ]! 
}

"""
on_conflict condition type for table "affiliations"
"""
input affiliations_on_conflict {
  constraint: affiliations_constraint! 
  update_columns: [affiliations_update_column! ]! 
  where: affiliations_bool_exp
}

"""Ordering options when selecting data from "affiliations"."""
input affiliations_order_by {
  affiliation_order: order_by
  author: authors_order_by
  author_id: order_by
  city: order_by
  country: order_by
  ecr_id: order_by
  id: order_by
  institution: order_by
  state: order_by
}

"""primary key columns input for table: affiliations"""
input affiliations_pk_columns_input {
  id: Int! 
}

"""
select columns of table "affiliations"
"""
enum affiliations_select_column {
  """column name"""
affiliation_order
  """column name"""
author_id
  """column name"""
city
  """column name"""
country
  """column name"""
ecr_id
  """column name"""
id
  """column name"""
institution
  """column name"""
state
}

"""
input type for updating data in table "affiliations"
"""
input affiliations_set_input {
  affiliation_order: Int
  author_id: Int
  city: String
  country: String
  ecr_id: String
  id: Int
  institution: String
  state: String
}

"""aggregate stddev on columns"""
type affiliations_stddev_fields {
   affiliation_order: Float
   author_id: Float
   id: Float
}

"""
order by stddev() on columns of table "affiliations"
"""
input affiliations_stddev_order_by {
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type affiliations_stddev_pop_fields {
   affiliation_order: Float
   author_id: Float
   id: Float
}

"""
order by stddev_pop() on columns of table "affiliations"
"""
input affiliations_stddev_pop_order_by {
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type affiliations_stddev_samp_fields {
   affiliation_order: Float
   author_id: Float
   id: Float
}

"""
order by stddev_samp() on columns of table "affiliations"
"""
input affiliations_stddev_samp_order_by {
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""
Streaming cursor of the table "affiliations"
"""
input affiliations_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: affiliations_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input affiliations_stream_cursor_value_input {
  affiliation_order: Int
  author_id: Int
  city: String
  country: String
  ecr_id: String
  id: Int
  institution: String
  state: String
}

"""aggregate sum on columns"""
type affiliations_sum_fields {
   affiliation_order: Int
   author_id: Int
   id: Int
}

"""
order by sum() on columns of table "affiliations"
"""
input affiliations_sum_order_by {
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""
update columns of table "affiliations"
"""
enum affiliations_update_column {
  """column name"""
affiliation_order
  """column name"""
author_id
  """column name"""
city
  """column name"""
country
  """column name"""
ecr_id
  """column name"""
id
  """column name"""
institution
  """column name"""
state
}

input affiliations_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: affiliations_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: affiliations_set_input
  where: affiliations_bool_exp! 
}

"""aggregate var_pop on columns"""
type affiliations_var_pop_fields {
   affiliation_order: Float
   author_id: Float
   id: Float
}

"""
order by var_pop() on columns of table "affiliations"
"""
input affiliations_var_pop_order_by {
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type affiliations_var_samp_fields {
   affiliation_order: Float
   author_id: Float
   id: Float
}

"""
order by var_samp() on columns of table "affiliations"
"""
input affiliations_var_samp_order_by {
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type affiliations_variance_fields {
   affiliation_order: Float
   author_id: Float
   id: Float
}

"""
order by variance() on columns of table "affiliations"
"""
input affiliations_variance_order_by {
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""
columns and relationships of "affiliations_without_hidden_responses"
"""
type affiliations_without_hidden_responses {
   affiliation_order: Int
  """An object relationship"""
 author: authors
   author_id: Int
   city: String
   country: String
   ecr_id: String
   id: Int
   institution: String
   state: String
}

"""
aggregated selection of "affiliations_without_hidden_responses"
"""
type affiliations_without_hidden_responses_aggregate {
   aggregate: affiliations_without_hidden_responses_aggregate_fields
   nodes: [affiliations_without_hidden_responses! ]! 
}

input affiliations_without_hidden_responses_aggregate_bool_exp {
  count: affiliations_without_hidden_responses_aggregate_bool_exp_count
}

input affiliations_without_hidden_responses_aggregate_bool_exp_count {
  arguments: [affiliations_without_hidden_responses_select_column! ]
  distinct: Boolean
  filter: affiliations_without_hidden_responses_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "affiliations_without_hidden_responses"
"""
type affiliations_without_hidden_responses_aggregate_fields {
   avg: affiliations_without_hidden_responses_avg_fields
   count(columns: [affiliations_without_hidden_responses_select_column! ], distinct: Boolean): Int! 
   max: affiliations_without_hidden_responses_max_fields
   min: affiliations_without_hidden_responses_min_fields
   stddev: affiliations_without_hidden_responses_stddev_fields
   stddev_pop: affiliations_without_hidden_responses_stddev_pop_fields
   stddev_samp: affiliations_without_hidden_responses_stddev_samp_fields
   sum: affiliations_without_hidden_responses_sum_fields
   var_pop: affiliations_without_hidden_responses_var_pop_fields
   var_samp: affiliations_without_hidden_responses_var_samp_fields
   variance: affiliations_without_hidden_responses_variance_fields
}

"""
order by aggregate values of table "affiliations_without_hidden_responses"
"""
input affiliations_without_hidden_responses_aggregate_order_by {
  avg: affiliations_without_hidden_responses_avg_order_by
  count: order_by
  max: affiliations_without_hidden_responses_max_order_by
  min: affiliations_without_hidden_responses_min_order_by
  stddev: affiliations_without_hidden_responses_stddev_order_by
  stddev_pop: affiliations_without_hidden_responses_stddev_pop_order_by
  stddev_samp: affiliations_without_hidden_responses_stddev_samp_order_by
  sum: affiliations_without_hidden_responses_sum_order_by
  var_pop: affiliations_without_hidden_responses_var_pop_order_by
  var_samp: affiliations_without_hidden_responses_var_samp_order_by
  variance: affiliations_without_hidden_responses_variance_order_by
}

"""
input type for inserting array relation for remote table "affiliations_without_hidden_responses"
"""
input affiliations_without_hidden_responses_arr_rel_insert_input {
  data: [affiliations_without_hidden_responses_insert_input! ]! 
}

"""aggregate avg on columns"""
type affiliations_without_hidden_responses_avg_fields {
   affiliation_order: Float
   author_id: Float
   id: Float
}

"""
order by avg() on columns of table "affiliations_without_hidden_responses"
"""
input affiliations_without_hidden_responses_avg_order_by {
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "affiliations_without_hidden_responses". All fields are combined with a logical 'AND'.
"""
input affiliations_without_hidden_responses_bool_exp {
  _and: [affiliations_without_hidden_responses_bool_exp! ]
  _not: affiliations_without_hidden_responses_bool_exp
  _or: [affiliations_without_hidden_responses_bool_exp! ]
  affiliation_order: Int_comparison_exp
  author: authors_bool_exp
  author_id: Int_comparison_exp
  city: String_comparison_exp
  country: String_comparison_exp
  ecr_id: String_comparison_exp
  id: Int_comparison_exp
  institution: String_comparison_exp
  state: String_comparison_exp
}

"""
input type for inserting data into table "affiliations_without_hidden_responses"
"""
input affiliations_without_hidden_responses_insert_input {
  affiliation_order: Int
  author: authors_obj_rel_insert_input
  author_id: Int
  city: String
  country: String
  ecr_id: String
  id: Int
  institution: String
  state: String
}

"""aggregate max on columns"""
type affiliations_without_hidden_responses_max_fields {
   affiliation_order: Int
   author_id: Int
   city: String
   country: String
   ecr_id: String
   id: Int
   institution: String
   state: String
}

"""
order by max() on columns of table "affiliations_without_hidden_responses"
"""
input affiliations_without_hidden_responses_max_order_by {
  affiliation_order: order_by
  author_id: order_by
  city: order_by
  country: order_by
  ecr_id: order_by
  id: order_by
  institution: order_by
  state: order_by
}

"""aggregate min on columns"""
type affiliations_without_hidden_responses_min_fields {
   affiliation_order: Int
   author_id: Int
   city: String
   country: String
   ecr_id: String
   id: Int
   institution: String
   state: String
}

"""
order by min() on columns of table "affiliations_without_hidden_responses"
"""
input affiliations_without_hidden_responses_min_order_by {
  affiliation_order: order_by
  author_id: order_by
  city: order_by
  country: order_by
  ecr_id: order_by
  id: order_by
  institution: order_by
  state: order_by
}

"""
Ordering options when selecting data from "affiliations_without_hidden_responses".
"""
input affiliations_without_hidden_responses_order_by {
  affiliation_order: order_by
  author: authors_order_by
  author_id: order_by
  city: order_by
  country: order_by
  ecr_id: order_by
  id: order_by
  institution: order_by
  state: order_by
}

"""
select columns of table "affiliations_without_hidden_responses"
"""
enum affiliations_without_hidden_responses_select_column {
  """column name"""
affiliation_order
  """column name"""
author_id
  """column name"""
city
  """column name"""
country
  """column name"""
ecr_id
  """column name"""
id
  """column name"""
institution
  """column name"""
state
}

"""aggregate stddev on columns"""
type affiliations_without_hidden_responses_stddev_fields {
   affiliation_order: Float
   author_id: Float
   id: Float
}

"""
order by stddev() on columns of table "affiliations_without_hidden_responses"
"""
input affiliations_without_hidden_responses_stddev_order_by {
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type affiliations_without_hidden_responses_stddev_pop_fields {
   affiliation_order: Float
   author_id: Float
   id: Float
}

"""
order by stddev_pop() on columns of table "affiliations_without_hidden_responses"
"""
input affiliations_without_hidden_responses_stddev_pop_order_by {
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type affiliations_without_hidden_responses_stddev_samp_fields {
   affiliation_order: Float
   author_id: Float
   id: Float
}

"""
order by stddev_samp() on columns of table "affiliations_without_hidden_responses"
"""
input affiliations_without_hidden_responses_stddev_samp_order_by {
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""
Streaming cursor of the table "affiliations_without_hidden_responses"
"""
input affiliations_without_hidden_responses_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: affiliations_without_hidden_responses_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input affiliations_without_hidden_responses_stream_cursor_value_input {
  affiliation_order: Int
  author_id: Int
  city: String
  country: String
  ecr_id: String
  id: Int
  institution: String
  state: String
}

"""aggregate sum on columns"""
type affiliations_without_hidden_responses_sum_fields {
   affiliation_order: Int
   author_id: Int
   id: Int
}

"""
order by sum() on columns of table "affiliations_without_hidden_responses"
"""
input affiliations_without_hidden_responses_sum_order_by {
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""aggregate var_pop on columns"""
type affiliations_without_hidden_responses_var_pop_fields {
   affiliation_order: Float
   author_id: Float
   id: Float
}

"""
order by var_pop() on columns of table "affiliations_without_hidden_responses"
"""
input affiliations_without_hidden_responses_var_pop_order_by {
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type affiliations_without_hidden_responses_var_samp_fields {
   affiliation_order: Float
   author_id: Float
   id: Float
}

"""
order by var_samp() on columns of table "affiliations_without_hidden_responses"
"""
input affiliations_without_hidden_responses_var_samp_order_by {
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type affiliations_without_hidden_responses_variance_fields {
   affiliation_order: Float
   author_id: Float
   id: Float
}

"""
order by variance() on columns of table "affiliations_without_hidden_responses"
"""
input affiliations_without_hidden_responses_variance_order_by {
  affiliation_order: order_by
  author_id: order_by
  id: order_by
}

"""
columns and relationships of "all_event_categories"
"""
type all_event_categories {
   category: String
   event_id: Int
   in_poster_gallery: Boolean
}

"""
aggregated selection of "all_event_categories"
"""
type all_event_categories_aggregate {
   aggregate: all_event_categories_aggregate_fields
   nodes: [all_event_categories! ]! 
}

"""
aggregate fields of "all_event_categories"
"""
type all_event_categories_aggregate_fields {
   avg: all_event_categories_avg_fields
   count(columns: [all_event_categories_select_column! ], distinct: Boolean): Int! 
   max: all_event_categories_max_fields
   min: all_event_categories_min_fields
   stddev: all_event_categories_stddev_fields
   stddev_pop: all_event_categories_stddev_pop_fields
   stddev_samp: all_event_categories_stddev_samp_fields
   sum: all_event_categories_sum_fields
   var_pop: all_event_categories_var_pop_fields
   var_samp: all_event_categories_var_samp_fields
   variance: all_event_categories_variance_fields
}

"""aggregate avg on columns"""
type all_event_categories_avg_fields {
   event_id: Float
}

"""
Boolean expression to filter rows from the table "all_event_categories". All fields are combined with a logical 'AND'.
"""
input all_event_categories_bool_exp {
  _and: [all_event_categories_bool_exp! ]
  _not: all_event_categories_bool_exp
  _or: [all_event_categories_bool_exp! ]
  category: String_comparison_exp
  event_id: Int_comparison_exp
  in_poster_gallery: Boolean_comparison_exp
}

"""aggregate max on columns"""
type all_event_categories_max_fields {
   category: String
   event_id: Int
}

"""aggregate min on columns"""
type all_event_categories_min_fields {
   category: String
   event_id: Int
}

"""Ordering options when selecting data from "all_event_categories"."""
input all_event_categories_order_by {
  category: order_by
  event_id: order_by
  in_poster_gallery: order_by
}

"""
select columns of table "all_event_categories"
"""
enum all_event_categories_select_column {
  """column name"""
category
  """column name"""
event_id
  """column name"""
in_poster_gallery
}

"""aggregate stddev on columns"""
type all_event_categories_stddev_fields {
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type all_event_categories_stddev_pop_fields {
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type all_event_categories_stddev_samp_fields {
   event_id: Float
}

"""
Streaming cursor of the table "all_event_categories"
"""
input all_event_categories_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: all_event_categories_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input all_event_categories_stream_cursor_value_input {
  category: String
  event_id: Int
  in_poster_gallery: Boolean
}

"""aggregate sum on columns"""
type all_event_categories_sum_fields {
   event_id: Int
}

"""aggregate var_pop on columns"""
type all_event_categories_var_pop_fields {
   event_id: Float
}

"""aggregate var_samp on columns"""
type all_event_categories_var_samp_fields {
   event_id: Float
}

"""aggregate variance on columns"""
type all_event_categories_variance_fields {
   event_id: Float
}

scalar allowed_auth_type 

"""
Boolean expression to compare columns of type "allowed_auth_type". All fields are combined with logical 'AND'.
"""
input allowed_auth_type_comparison_exp {
  _eq: allowed_auth_type
  _gt: allowed_auth_type
  _gte: allowed_auth_type
  _in: [allowed_auth_type! ]
  _is_null: Boolean
  _lt: allowed_auth_type
  _lte: allowed_auth_type
  _neq: allowed_auth_type
  _nin: [allowed_auth_type! ]
}

"""
columns and relationships of "allowed_submitters"
"""
type allowed_submitters {
   created_at: timestamptz
   created_by: Int
   email: citext! 
   id: Int! 
   source: String
  """An object relationship"""
 stage: stages! 
   stage_id: Int! 
}

"""
aggregated selection of "allowed_submitters"
"""
type allowed_submitters_aggregate {
   aggregate: allowed_submitters_aggregate_fields
   nodes: [allowed_submitters! ]! 
}

"""
aggregate fields of "allowed_submitters"
"""
type allowed_submitters_aggregate_fields {
   avg: allowed_submitters_avg_fields
   count(columns: [allowed_submitters_select_column! ], distinct: Boolean): Int! 
   max: allowed_submitters_max_fields
   min: allowed_submitters_min_fields
   stddev: allowed_submitters_stddev_fields
   stddev_pop: allowed_submitters_stddev_pop_fields
   stddev_samp: allowed_submitters_stddev_samp_fields
   sum: allowed_submitters_sum_fields
   var_pop: allowed_submitters_var_pop_fields
   var_samp: allowed_submitters_var_samp_fields
   variance: allowed_submitters_variance_fields
}

"""aggregate avg on columns"""
type allowed_submitters_avg_fields {
   created_by: Float
   id: Float
   stage_id: Float
}

"""
Boolean expression to filter rows from the table "allowed_submitters". All fields are combined with a logical 'AND'.
"""
input allowed_submitters_bool_exp {
  _and: [allowed_submitters_bool_exp! ]
  _not: allowed_submitters_bool_exp
  _or: [allowed_submitters_bool_exp! ]
  created_at: timestamptz_comparison_exp
  created_by: Int_comparison_exp
  email: citext_comparison_exp
  id: Int_comparison_exp
  source: String_comparison_exp
  stage: stages_bool_exp
  stage_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "allowed_submitters"
"""
enum allowed_submitters_constraint {
  """
  unique or primary key constraint on columns "id"
  """
allowed_submitters_pkey
}

"""
input type for incrementing numeric columns in table "allowed_submitters"
"""
input allowed_submitters_inc_input {
  created_by: Int
  id: Int
  stage_id: Int
}

"""
input type for inserting data into table "allowed_submitters"
"""
input allowed_submitters_insert_input {
  created_at: timestamptz! 
  created_by: Int
  email: citext! 
  id: Int! 
  source: String
  stage: stages_obj_rel_insert_input
  stage_id: Int! 
}

"""aggregate max on columns"""
type allowed_submitters_max_fields {
   created_at: timestamptz
   created_by: Int
   email: citext
   id: Int
   source: String
   stage_id: Int
}

"""aggregate min on columns"""
type allowed_submitters_min_fields {
   created_at: timestamptz
   created_by: Int
   email: citext
   id: Int
   source: String
   stage_id: Int
}

"""
response of any mutation on the table "allowed_submitters"
"""
type allowed_submitters_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [allowed_submitters! ]! 
}

"""
on_conflict condition type for table "allowed_submitters"
"""
input allowed_submitters_on_conflict {
  constraint: allowed_submitters_constraint! 
  update_columns: [allowed_submitters_update_column! ]! 
  where: allowed_submitters_bool_exp
}

"""Ordering options when selecting data from "allowed_submitters"."""
input allowed_submitters_order_by {
  created_at: order_by
  created_by: order_by
  email: order_by
  id: order_by
  source: order_by
  stage: stages_order_by
  stage_id: order_by
}

"""primary key columns input for table: allowed_submitters"""
input allowed_submitters_pk_columns_input {
  id: Int! 
}

"""
select columns of table "allowed_submitters"
"""
enum allowed_submitters_select_column {
  """column name"""
created_at
  """column name"""
created_by
  """column name"""
email
  """column name"""
id
  """column name"""
source
  """column name"""
stage_id
}

"""
input type for updating data in table "allowed_submitters"
"""
input allowed_submitters_set_input {
  created_at: timestamptz
  created_by: Int
  email: citext
  id: Int
  source: String
  stage_id: Int
}

"""aggregate stddev on columns"""
type allowed_submitters_stddev_fields {
   created_by: Float
   id: Float
   stage_id: Float
}

"""aggregate stddev_pop on columns"""
type allowed_submitters_stddev_pop_fields {
   created_by: Float
   id: Float
   stage_id: Float
}

"""aggregate stddev_samp on columns"""
type allowed_submitters_stddev_samp_fields {
   created_by: Float
   id: Float
   stage_id: Float
}

"""
Streaming cursor of the table "allowed_submitters"
"""
input allowed_submitters_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: allowed_submitters_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input allowed_submitters_stream_cursor_value_input {
  created_at: timestamptz
  created_by: Int
  email: citext
  id: Int
  source: String
  stage_id: Int
}

"""aggregate sum on columns"""
type allowed_submitters_sum_fields {
   created_by: Int
   id: Int
   stage_id: Int
}

"""
update columns of table "allowed_submitters"
"""
enum allowed_submitters_update_column {
  """column name"""
created_at
  """column name"""
created_by
  """column name"""
email
  """column name"""
id
  """column name"""
source
  """column name"""
stage_id
}

input allowed_submitters_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: allowed_submitters_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: allowed_submitters_set_input
  where: allowed_submitters_bool_exp! 
}

"""aggregate var_pop on columns"""
type allowed_submitters_var_pop_fields {
   created_by: Float
   id: Float
   stage_id: Float
}

"""aggregate var_samp on columns"""
type allowed_submitters_var_samp_fields {
   created_by: Float
   id: Float
   stage_id: Float
}

"""aggregate variance on columns"""
type allowed_submitters_variance_fields {
   created_by: Float
   id: Float
   stage_id: Float
}

"""
columns and relationships of "api_keys"
"""
type api_keys {
   api_key: String! 
   user_id: Int! 
}

"""
aggregated selection of "api_keys"
"""
type api_keys_aggregate {
   aggregate: api_keys_aggregate_fields
   nodes: [api_keys! ]! 
}

"""
aggregate fields of "api_keys"
"""
type api_keys_aggregate_fields {
   avg: api_keys_avg_fields
   count(columns: [api_keys_select_column! ], distinct: Boolean): Int! 
   max: api_keys_max_fields
   min: api_keys_min_fields
   stddev: api_keys_stddev_fields
   stddev_pop: api_keys_stddev_pop_fields
   stddev_samp: api_keys_stddev_samp_fields
   sum: api_keys_sum_fields
   var_pop: api_keys_var_pop_fields
   var_samp: api_keys_var_samp_fields
   variance: api_keys_variance_fields
}

"""aggregate avg on columns"""
type api_keys_avg_fields {
   user_id: Float
}

"""
Boolean expression to filter rows from the table "api_keys". All fields are combined with a logical 'AND'.
"""
input api_keys_bool_exp {
  _and: [api_keys_bool_exp! ]
  _not: api_keys_bool_exp
  _or: [api_keys_bool_exp! ]
  api_key: String_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "api_keys"
"""
enum api_keys_constraint {
  """
  unique or primary key constraint on columns "user_id"
  """
api_keys_user_id_key
}

"""
input type for incrementing numeric columns in table "api_keys"
"""
input api_keys_inc_input {
  user_id: Int
}

"""
input type for inserting data into table "api_keys"
"""
input api_keys_insert_input {
  api_key: String! 
  user_id: Int! 
}

"""aggregate max on columns"""
type api_keys_max_fields {
   api_key: String
   user_id: Int
}

"""aggregate min on columns"""
type api_keys_min_fields {
   api_key: String
   user_id: Int
}

"""
response of any mutation on the table "api_keys"
"""
type api_keys_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [api_keys! ]! 
}

"""
on_conflict condition type for table "api_keys"
"""
input api_keys_on_conflict {
  constraint: api_keys_constraint! 
  update_columns: [api_keys_update_column! ]! 
  where: api_keys_bool_exp
}

"""Ordering options when selecting data from "api_keys"."""
input api_keys_order_by {
  api_key: order_by
  user_id: order_by
}

"""
select columns of table "api_keys"
"""
enum api_keys_select_column {
  """column name"""
api_key
  """column name"""
user_id
}

"""
input type for updating data in table "api_keys"
"""
input api_keys_set_input {
  api_key: String
  user_id: Int
}

"""aggregate stddev on columns"""
type api_keys_stddev_fields {
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type api_keys_stddev_pop_fields {
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type api_keys_stddev_samp_fields {
   user_id: Float
}

"""
Streaming cursor of the table "api_keys"
"""
input api_keys_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: api_keys_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input api_keys_stream_cursor_value_input {
  api_key: String
  user_id: Int
}

"""aggregate sum on columns"""
type api_keys_sum_fields {
   user_id: Int
}

"""
update columns of table "api_keys"
"""
enum api_keys_update_column {
  """column name"""
api_key
  """column name"""
user_id
}

input api_keys_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: api_keys_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: api_keys_set_input
  where: api_keys_bool_exp! 
}

"""aggregate var_pop on columns"""
type api_keys_var_pop_fields {
   user_id: Float
}

"""aggregate var_samp on columns"""
type api_keys_var_samp_fields {
   user_id: Float
}

"""aggregate variance on columns"""
type api_keys_variance_fields {
   user_id: Float
}

scalar author_field_input_types 

"""
Boolean expression to compare columns of type "author_field_input_types". All fields are combined with logical 'AND'.
"""
input author_field_input_types_comparison_exp {
  _eq: author_field_input_types
  _gt: author_field_input_types
  _gte: author_field_input_types
  _in: [author_field_input_types! ]
  _is_null: Boolean
  _lt: author_field_input_types
  _lte: author_field_input_types
  _neq: author_field_input_types
  _nin: [author_field_input_types! ]
}

scalar author_field_question_types 

"""
Boolean expression to compare columns of type "author_field_question_types". All fields are combined with logical 'AND'.
"""
input author_field_question_types_comparison_exp {
  _eq: author_field_question_types
  _gt: author_field_question_types
  _gte: author_field_question_types
  _in: [author_field_question_types! ]
  _is_null: Boolean
  _lt: author_field_question_types
  _lte: author_field_question_types
  _neq: author_field_question_types
  _nin: [author_field_question_types! ]
}

"""
columns and relationships of "author_field_response_versions"
"""
type author_field_response_versions {
  """An array relationship"""
 author("""distinct select on columns"""
distinct_on: [author_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_versions_order_by! ], """filter the rows returned"""
where: author_versions_bool_exp): [author_versions! ]! 
  """An aggregate relationship"""
 author_aggregate("""distinct select on columns"""
distinct_on: [author_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_versions_order_by! ], """filter the rows returned"""
where: author_versions_bool_exp): author_versions_aggregate! 
  """An object relationship"""
 author_field: author_fields! 
   author_field_id: Int! 
   author_id: Int! 
   created_at: timestamptz! 
   deleted: Boolean! 
   id: bigint! 
   value: String
}

"""
aggregated selection of "author_field_response_versions"
"""
type author_field_response_versions_aggregate {
   aggregate: author_field_response_versions_aggregate_fields
   nodes: [author_field_response_versions! ]! 
}

input author_field_response_versions_aggregate_bool_exp {
  bool_and: author_field_response_versions_aggregate_bool_exp_bool_and
  bool_or: author_field_response_versions_aggregate_bool_exp_bool_or
  count: author_field_response_versions_aggregate_bool_exp_count
}

input author_field_response_versions_aggregate_bool_exp_bool_and {
  arguments: author_field_response_versions_select_column_author_field_response_versions_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: author_field_response_versions_bool_exp
  predicate: Boolean_comparison_exp! 
}

input author_field_response_versions_aggregate_bool_exp_bool_or {
  arguments: author_field_response_versions_select_column_author_field_response_versions_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: author_field_response_versions_bool_exp
  predicate: Boolean_comparison_exp! 
}

input author_field_response_versions_aggregate_bool_exp_count {
  arguments: [author_field_response_versions_select_column! ]
  distinct: Boolean
  filter: author_field_response_versions_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "author_field_response_versions"
"""
type author_field_response_versions_aggregate_fields {
   avg: author_field_response_versions_avg_fields
   count(columns: [author_field_response_versions_select_column! ], distinct: Boolean): Int! 
   max: author_field_response_versions_max_fields
   min: author_field_response_versions_min_fields
   stddev: author_field_response_versions_stddev_fields
   stddev_pop: author_field_response_versions_stddev_pop_fields
   stddev_samp: author_field_response_versions_stddev_samp_fields
   sum: author_field_response_versions_sum_fields
   var_pop: author_field_response_versions_var_pop_fields
   var_samp: author_field_response_versions_var_samp_fields
   variance: author_field_response_versions_variance_fields
}

"""
order by aggregate values of table "author_field_response_versions"
"""
input author_field_response_versions_aggregate_order_by {
  avg: author_field_response_versions_avg_order_by
  count: order_by
  max: author_field_response_versions_max_order_by
  min: author_field_response_versions_min_order_by
  stddev: author_field_response_versions_stddev_order_by
  stddev_pop: author_field_response_versions_stddev_pop_order_by
  stddev_samp: author_field_response_versions_stddev_samp_order_by
  sum: author_field_response_versions_sum_order_by
  var_pop: author_field_response_versions_var_pop_order_by
  var_samp: author_field_response_versions_var_samp_order_by
  variance: author_field_response_versions_variance_order_by
}

"""
input type for inserting array relation for remote table "author_field_response_versions"
"""
input author_field_response_versions_arr_rel_insert_input {
  data: [author_field_response_versions_insert_input! ]! 
  """upsert condition"""
on_conflict: author_field_response_versions_on_conflict
}

"""aggregate avg on columns"""
type author_field_response_versions_avg_fields {
   author_field_id: Float
   author_id: Float
   id: Float
}

"""
order by avg() on columns of table "author_field_response_versions"
"""
input author_field_response_versions_avg_order_by {
  author_field_id: order_by
  author_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "author_field_response_versions". All fields are combined with a logical 'AND'.
"""
input author_field_response_versions_bool_exp {
  _and: [author_field_response_versions_bool_exp! ]
  _not: author_field_response_versions_bool_exp
  _or: [author_field_response_versions_bool_exp! ]
  author: author_versions_bool_exp
  author_aggregate: author_versions_aggregate_bool_exp
  author_field: author_fields_bool_exp
  author_field_id: Int_comparison_exp
  author_id: Int_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted: Boolean_comparison_exp
  id: bigint_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "author_field_response_versions"
"""
enum author_field_response_versions_constraint {
  """
  unique or primary key constraint on columns "id"
  """
author_field_response_versions_pkey
}

"""
input type for incrementing numeric columns in table "author_field_response_versions"
"""
input author_field_response_versions_inc_input {
  author_field_id: Int
  author_id: Int
  id: bigint
}

"""
input type for inserting data into table "author_field_response_versions"
"""
input author_field_response_versions_insert_input {
  author: author_versions_arr_rel_insert_input
  author_field: author_fields_obj_rel_insert_input
  author_field_id: Int! 
  author_id: Int! 
  created_at: timestamptz! 
  deleted: Boolean! 
  id: bigint! 
  value: String
}

"""aggregate max on columns"""
type author_field_response_versions_max_fields {
   author_field_id: Int
   author_id: Int
   created_at: timestamptz
   id: bigint
   value: String
}

"""
order by max() on columns of table "author_field_response_versions"
"""
input author_field_response_versions_max_order_by {
  author_field_id: order_by
  author_id: order_by
  created_at: order_by
  id: order_by
  value: order_by
}

"""aggregate min on columns"""
type author_field_response_versions_min_fields {
   author_field_id: Int
   author_id: Int
   created_at: timestamptz
   id: bigint
   value: String
}

"""
order by min() on columns of table "author_field_response_versions"
"""
input author_field_response_versions_min_order_by {
  author_field_id: order_by
  author_id: order_by
  created_at: order_by
  id: order_by
  value: order_by
}

"""
response of any mutation on the table "author_field_response_versions"
"""
type author_field_response_versions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [author_field_response_versions! ]! 
}

"""
on_conflict condition type for table "author_field_response_versions"
"""
input author_field_response_versions_on_conflict {
  constraint: author_field_response_versions_constraint! 
  update_columns: [author_field_response_versions_update_column! ]! 
  where: author_field_response_versions_bool_exp
}

"""
Ordering options when selecting data from "author_field_response_versions".
"""
input author_field_response_versions_order_by {
  author_aggregate: author_versions_aggregate_order_by
  author_field: author_fields_order_by
  author_field_id: order_by
  author_id: order_by
  created_at: order_by
  deleted: order_by
  id: order_by
  value: order_by
}

"""primary key columns input for table: author_field_response_versions"""
input author_field_response_versions_pk_columns_input {
  id: bigint! 
}

"""
select columns of table "author_field_response_versions"
"""
enum author_field_response_versions_select_column {
  """column name"""
author_field_id
  """column name"""
author_id
  """column name"""
created_at
  """column name"""
deleted
  """column name"""
id
  """column name"""
value
}

"""
select "author_field_response_versions_aggregate_bool_exp_bool_and_arguments_columns" columns of table "author_field_response_versions"
"""
enum author_field_response_versions_select_column_author_field_response_versions_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
deleted
}

"""
select "author_field_response_versions_aggregate_bool_exp_bool_or_arguments_columns" columns of table "author_field_response_versions"
"""
enum author_field_response_versions_select_column_author_field_response_versions_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
deleted
}

"""
input type for updating data in table "author_field_response_versions"
"""
input author_field_response_versions_set_input {
  author_field_id: Int
  author_id: Int
  created_at: timestamptz
  deleted: Boolean
  id: bigint
  value: String
}

"""aggregate stddev on columns"""
type author_field_response_versions_stddev_fields {
   author_field_id: Float
   author_id: Float
   id: Float
}

"""
order by stddev() on columns of table "author_field_response_versions"
"""
input author_field_response_versions_stddev_order_by {
  author_field_id: order_by
  author_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type author_field_response_versions_stddev_pop_fields {
   author_field_id: Float
   author_id: Float
   id: Float
}

"""
order by stddev_pop() on columns of table "author_field_response_versions"
"""
input author_field_response_versions_stddev_pop_order_by {
  author_field_id: order_by
  author_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type author_field_response_versions_stddev_samp_fields {
   author_field_id: Float
   author_id: Float
   id: Float
}

"""
order by stddev_samp() on columns of table "author_field_response_versions"
"""
input author_field_response_versions_stddev_samp_order_by {
  author_field_id: order_by
  author_id: order_by
  id: order_by
}

"""
Streaming cursor of the table "author_field_response_versions"
"""
input author_field_response_versions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: author_field_response_versions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input author_field_response_versions_stream_cursor_value_input {
  author_field_id: Int
  author_id: Int
  created_at: timestamptz
  deleted: Boolean
  id: bigint
  value: String
}

"""aggregate sum on columns"""
type author_field_response_versions_sum_fields {
   author_field_id: Int
   author_id: Int
   id: bigint
}

"""
order by sum() on columns of table "author_field_response_versions"
"""
input author_field_response_versions_sum_order_by {
  author_field_id: order_by
  author_id: order_by
  id: order_by
}

"""
update columns of table "author_field_response_versions"
"""
enum author_field_response_versions_update_column {
  """column name"""
author_field_id
  """column name"""
author_id
  """column name"""
created_at
  """column name"""
deleted
  """column name"""
id
  """column name"""
value
}

input author_field_response_versions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: author_field_response_versions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: author_field_response_versions_set_input
  where: author_field_response_versions_bool_exp! 
}

"""aggregate var_pop on columns"""
type author_field_response_versions_var_pop_fields {
   author_field_id: Float
   author_id: Float
   id: Float
}

"""
order by var_pop() on columns of table "author_field_response_versions"
"""
input author_field_response_versions_var_pop_order_by {
  author_field_id: order_by
  author_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type author_field_response_versions_var_samp_fields {
   author_field_id: Float
   author_id: Float
   id: Float
}

"""
order by var_samp() on columns of table "author_field_response_versions"
"""
input author_field_response_versions_var_samp_order_by {
  author_field_id: order_by
  author_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type author_field_response_versions_variance_fields {
   author_field_id: Float
   author_id: Float
   id: Float
}

"""
order by variance() on columns of table "author_field_response_versions"
"""
input author_field_response_versions_variance_order_by {
  author_field_id: order_by
  author_id: order_by
  id: order_by
}

"""
columns and relationships of "author_field_responses"
"""
type author_field_responses {
  """An object relationship"""
 author: authors! 
   author_field_id: Int! 
   author_id: Int! 
   fe_epoch: bigint
  """An object relationship"""
 field: author_fields! 
   id: Int! 
  """An object relationship"""
 user_email: users
   value: String
}

"""
aggregated selection of "author_field_responses"
"""
type author_field_responses_aggregate {
   aggregate: author_field_responses_aggregate_fields
   nodes: [author_field_responses! ]! 
}

input author_field_responses_aggregate_bool_exp {
  count: author_field_responses_aggregate_bool_exp_count
}

input author_field_responses_aggregate_bool_exp_count {
  arguments: [author_field_responses_select_column! ]
  distinct: Boolean
  filter: author_field_responses_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "author_field_responses"
"""
type author_field_responses_aggregate_fields {
   avg: author_field_responses_avg_fields
   count(columns: [author_field_responses_select_column! ], distinct: Boolean): Int! 
   max: author_field_responses_max_fields
   min: author_field_responses_min_fields
   stddev: author_field_responses_stddev_fields
   stddev_pop: author_field_responses_stddev_pop_fields
   stddev_samp: author_field_responses_stddev_samp_fields
   sum: author_field_responses_sum_fields
   var_pop: author_field_responses_var_pop_fields
   var_samp: author_field_responses_var_samp_fields
   variance: author_field_responses_variance_fields
}

"""
order by aggregate values of table "author_field_responses"
"""
input author_field_responses_aggregate_order_by {
  avg: author_field_responses_avg_order_by
  count: order_by
  max: author_field_responses_max_order_by
  min: author_field_responses_min_order_by
  stddev: author_field_responses_stddev_order_by
  stddev_pop: author_field_responses_stddev_pop_order_by
  stddev_samp: author_field_responses_stddev_samp_order_by
  sum: author_field_responses_sum_order_by
  var_pop: author_field_responses_var_pop_order_by
  var_samp: author_field_responses_var_samp_order_by
  variance: author_field_responses_variance_order_by
}

"""
input type for inserting array relation for remote table "author_field_responses"
"""
input author_field_responses_arr_rel_insert_input {
  data: [author_field_responses_insert_input! ]! 
  """upsert condition"""
on_conflict: author_field_responses_on_conflict
}

"""aggregate avg on columns"""
type author_field_responses_avg_fields {
   author_field_id: Float
   author_id: Float
   fe_epoch: Float
   id: Float
}

"""
order by avg() on columns of table "author_field_responses"
"""
input author_field_responses_avg_order_by {
  author_field_id: order_by
  author_id: order_by
  fe_epoch: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "author_field_responses". All fields are combined with a logical 'AND'.
"""
input author_field_responses_bool_exp {
  _and: [author_field_responses_bool_exp! ]
  _not: author_field_responses_bool_exp
  _or: [author_field_responses_bool_exp! ]
  author: authors_bool_exp
  author_field_id: Int_comparison_exp
  author_id: Int_comparison_exp
  fe_epoch: bigint_comparison_exp
  field: author_fields_bool_exp
  id: Int_comparison_exp
  user_email: users_bool_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "author_field_responses"
"""
enum author_field_responses_constraint {
  """
  unique or primary key constraint on columns "author_field_id", "author_id"
  """
author_field_responses_author_field_id_author_id_key
  """
  unique or primary key constraint on columns "author_field_response_id"
  """
author_field_responses_pkey
}

"""
input type for incrementing numeric columns in table "author_field_responses"
"""
input author_field_responses_inc_input {
  author_field_id: Int
  author_id: Int
  fe_epoch: bigint
  id: Int
}

"""
input type for inserting data into table "author_field_responses"
"""
input author_field_responses_insert_input {
  author: authors_obj_rel_insert_input
  author_field_id: Int! 
  author_id: Int! 
  fe_epoch: bigint
  field: author_fields_obj_rel_insert_input
  id: Int
  user_email: users_obj_rel_insert_input
  value: String
}

"""aggregate max on columns"""
type author_field_responses_max_fields {
   author_field_id: Int
   author_id: Int
   fe_epoch: bigint
   id: Int
   value: String
}

"""
order by max() on columns of table "author_field_responses"
"""
input author_field_responses_max_order_by {
  author_field_id: order_by
  author_id: order_by
  fe_epoch: order_by
  id: order_by
  value: order_by
}

"""aggregate min on columns"""
type author_field_responses_min_fields {
   author_field_id: Int
   author_id: Int
   fe_epoch: bigint
   id: Int
   value: String
}

"""
order by min() on columns of table "author_field_responses"
"""
input author_field_responses_min_order_by {
  author_field_id: order_by
  author_id: order_by
  fe_epoch: order_by
  id: order_by
  value: order_by
}

"""
response of any mutation on the table "author_field_responses"
"""
type author_field_responses_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [author_field_responses! ]! 
}

"""
on_conflict condition type for table "author_field_responses"
"""
input author_field_responses_on_conflict {
  constraint: author_field_responses_constraint! 
  update_columns: [author_field_responses_update_column! ]! 
  where: author_field_responses_bool_exp
}

"""Ordering options when selecting data from "author_field_responses"."""
input author_field_responses_order_by {
  author: authors_order_by
  author_field_id: order_by
  author_id: order_by
  fe_epoch: order_by
  field: author_fields_order_by
  id: order_by
  user_email: users_order_by
  value: order_by
}

"""primary key columns input for table: author_field_responses"""
input author_field_responses_pk_columns_input {
  id: Int! 
}

"""
select columns of table "author_field_responses"
"""
enum author_field_responses_select_column {
  """column name"""
author_field_id
  """column name"""
author_id
  """column name"""
fe_epoch
  """column name"""
id
  """column name"""
value
}

"""
input type for updating data in table "author_field_responses"
"""
input author_field_responses_set_input {
  author_field_id: Int
  author_id: Int
  fe_epoch: bigint
  id: Int
  value: String
}

"""aggregate stddev on columns"""
type author_field_responses_stddev_fields {
   author_field_id: Float
   author_id: Float
   fe_epoch: Float
   id: Float
}

"""
order by stddev() on columns of table "author_field_responses"
"""
input author_field_responses_stddev_order_by {
  author_field_id: order_by
  author_id: order_by
  fe_epoch: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type author_field_responses_stddev_pop_fields {
   author_field_id: Float
   author_id: Float
   fe_epoch: Float
   id: Float
}

"""
order by stddev_pop() on columns of table "author_field_responses"
"""
input author_field_responses_stddev_pop_order_by {
  author_field_id: order_by
  author_id: order_by
  fe_epoch: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type author_field_responses_stddev_samp_fields {
   author_field_id: Float
   author_id: Float
   fe_epoch: Float
   id: Float
}

"""
order by stddev_samp() on columns of table "author_field_responses"
"""
input author_field_responses_stddev_samp_order_by {
  author_field_id: order_by
  author_id: order_by
  fe_epoch: order_by
  id: order_by
}

"""
Streaming cursor of the table "author_field_responses"
"""
input author_field_responses_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: author_field_responses_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input author_field_responses_stream_cursor_value_input {
  author_field_id: Int
  author_id: Int
  fe_epoch: bigint
  id: Int
  value: String
}

"""aggregate sum on columns"""
type author_field_responses_sum_fields {
   author_field_id: Int
   author_id: Int
   fe_epoch: bigint
   id: Int
}

"""
order by sum() on columns of table "author_field_responses"
"""
input author_field_responses_sum_order_by {
  author_field_id: order_by
  author_id: order_by
  fe_epoch: order_by
  id: order_by
}

"""
update columns of table "author_field_responses"
"""
enum author_field_responses_update_column {
  """column name"""
author_field_id
  """column name"""
author_id
  """column name"""
fe_epoch
  """column name"""
id
  """column name"""
value
}

input author_field_responses_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: author_field_responses_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: author_field_responses_set_input
  where: author_field_responses_bool_exp! 
}

"""aggregate var_pop on columns"""
type author_field_responses_var_pop_fields {
   author_field_id: Float
   author_id: Float
   fe_epoch: Float
   id: Float
}

"""
order by var_pop() on columns of table "author_field_responses"
"""
input author_field_responses_var_pop_order_by {
  author_field_id: order_by
  author_id: order_by
  fe_epoch: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type author_field_responses_var_samp_fields {
   author_field_id: Float
   author_id: Float
   fe_epoch: Float
   id: Float
}

"""
order by var_samp() on columns of table "author_field_responses"
"""
input author_field_responses_var_samp_order_by {
  author_field_id: order_by
  author_id: order_by
  fe_epoch: order_by
  id: order_by
}

"""aggregate variance on columns"""
type author_field_responses_variance_fields {
   author_field_id: Float
   author_id: Float
   fe_epoch: Float
   id: Float
}

"""
order by variance() on columns of table "author_field_responses"
"""
input author_field_responses_variance_order_by {
  author_field_id: order_by
  author_id: order_by
  fe_epoch: order_by
  id: order_by
}

"""
columns and relationships of "author_fields"
"""
type author_fields {
   answered_individually: Boolean! 
   author_field_index: Int! 
   description: String
   dropdownoptions: _text
  """An object relationship"""
 event: events! 
   event_id: Int! 
   id: Int! 
   input_type: author_field_input_types! 
   mandatory: Boolean! 
   mandatory_for_presenter: Boolean! 
   only_for_presenter: Boolean! 
   question_type: author_field_question_types! 
  """An array relationship"""
 responses("""distinct select on columns"""
distinct_on: [author_field_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_field_responses_order_by! ], """filter the rows returned"""
where: author_field_responses_bool_exp): [author_field_responses! ]! 
  """An aggregate relationship"""
 responses_aggregate("""distinct select on columns"""
distinct_on: [author_field_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_field_responses_order_by! ], """filter the rows returned"""
where: author_field_responses_bool_exp): author_field_responses_aggregate! 
   show_field: Boolean! 
   show_in_book: Boolean! 
   show_in_program: Boolean! 
   title: String
   word_limit: Int
}

"""
aggregated selection of "author_fields"
"""
type author_fields_aggregate {
   aggregate: author_fields_aggregate_fields
   nodes: [author_fields! ]! 
}

input author_fields_aggregate_bool_exp {
  bool_and: author_fields_aggregate_bool_exp_bool_and
  bool_or: author_fields_aggregate_bool_exp_bool_or
  count: author_fields_aggregate_bool_exp_count
}

input author_fields_aggregate_bool_exp_bool_and {
  arguments: author_fields_select_column_author_fields_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: author_fields_bool_exp
  predicate: Boolean_comparison_exp! 
}

input author_fields_aggregate_bool_exp_bool_or {
  arguments: author_fields_select_column_author_fields_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: author_fields_bool_exp
  predicate: Boolean_comparison_exp! 
}

input author_fields_aggregate_bool_exp_count {
  arguments: [author_fields_select_column! ]
  distinct: Boolean
  filter: author_fields_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "author_fields"
"""
type author_fields_aggregate_fields {
   avg: author_fields_avg_fields
   count(columns: [author_fields_select_column! ], distinct: Boolean): Int! 
   max: author_fields_max_fields
   min: author_fields_min_fields
   stddev: author_fields_stddev_fields
   stddev_pop: author_fields_stddev_pop_fields
   stddev_samp: author_fields_stddev_samp_fields
   sum: author_fields_sum_fields
   var_pop: author_fields_var_pop_fields
   var_samp: author_fields_var_samp_fields
   variance: author_fields_variance_fields
}

"""
order by aggregate values of table "author_fields"
"""
input author_fields_aggregate_order_by {
  avg: author_fields_avg_order_by
  count: order_by
  max: author_fields_max_order_by
  min: author_fields_min_order_by
  stddev: author_fields_stddev_order_by
  stddev_pop: author_fields_stddev_pop_order_by
  stddev_samp: author_fields_stddev_samp_order_by
  sum: author_fields_sum_order_by
  var_pop: author_fields_var_pop_order_by
  var_samp: author_fields_var_samp_order_by
  variance: author_fields_variance_order_by
}

"""
input type for inserting array relation for remote table "author_fields"
"""
input author_fields_arr_rel_insert_input {
  data: [author_fields_insert_input! ]! 
  """upsert condition"""
on_conflict: author_fields_on_conflict
}

"""aggregate avg on columns"""
type author_fields_avg_fields {
   author_field_index: Float
   event_id: Float
   id: Float
   word_limit: Float
}

"""
order by avg() on columns of table "author_fields"
"""
input author_fields_avg_order_by {
  author_field_index: order_by
  event_id: order_by
  id: order_by
  word_limit: order_by
}

"""
Boolean expression to filter rows from the table "author_fields". All fields are combined with a logical 'AND'.
"""
input author_fields_bool_exp {
  _and: [author_fields_bool_exp! ]
  _not: author_fields_bool_exp
  _or: [author_fields_bool_exp! ]
  answered_individually: Boolean_comparison_exp
  author_field_index: Int_comparison_exp
  description: String_comparison_exp
  dropdownoptions: _text_comparison_exp
  event: events_bool_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  input_type: author_field_input_types_comparison_exp
  mandatory: Boolean_comparison_exp
  mandatory_for_presenter: Boolean_comparison_exp
  only_for_presenter: Boolean_comparison_exp
  question_type: author_field_question_types_comparison_exp
  responses: author_field_responses_bool_exp
  responses_aggregate: author_field_responses_aggregate_bool_exp
  show_field: Boolean_comparison_exp
  show_in_book: Boolean_comparison_exp
  show_in_program: Boolean_comparison_exp
  title: String_comparison_exp
  word_limit: Int_comparison_exp
}

"""
unique or primary key constraints on table "author_fields"
"""
enum author_fields_constraint {
  """
  unique or primary key constraint on columns "id"
  """
author_fields_pkey
}

"""
input type for incrementing numeric columns in table "author_fields"
"""
input author_fields_inc_input {
  author_field_index: Int
  event_id: Int
  id: Int
  word_limit: Int
}

"""
input type for inserting data into table "author_fields"
"""
input author_fields_insert_input {
  answered_individually: Boolean! 
  author_field_index: Int! 
  description: String
  dropdownoptions: _text
  event: events_obj_rel_insert_input
  event_id: Int! 
  id: Int! 
  input_type: author_field_input_types! 
  mandatory: Boolean! 
  mandatory_for_presenter: Boolean! 
  only_for_presenter: Boolean! 
  question_type: author_field_question_types! 
  responses: author_field_responses_arr_rel_insert_input
  show_field: Boolean! 
  show_in_book: Boolean! 
  show_in_program: Boolean! 
  title: String
  word_limit: Int
}

"""aggregate max on columns"""
type author_fields_max_fields {
   author_field_index: Int
   description: String
   event_id: Int
   id: Int
   input_type: author_field_input_types
   question_type: author_field_question_types
   title: String
   word_limit: Int
}

"""
order by max() on columns of table "author_fields"
"""
input author_fields_max_order_by {
  author_field_index: order_by
  description: order_by
  event_id: order_by
  id: order_by
  input_type: order_by
  question_type: order_by
  title: order_by
  word_limit: order_by
}

"""aggregate min on columns"""
type author_fields_min_fields {
   author_field_index: Int
   description: String
   event_id: Int
   id: Int
   input_type: author_field_input_types
   question_type: author_field_question_types
   title: String
   word_limit: Int
}

"""
order by min() on columns of table "author_fields"
"""
input author_fields_min_order_by {
  author_field_index: order_by
  description: order_by
  event_id: order_by
  id: order_by
  input_type: order_by
  question_type: order_by
  title: order_by
  word_limit: order_by
}

"""
response of any mutation on the table "author_fields"
"""
type author_fields_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [author_fields! ]! 
}

"""
input type for inserting object relation for remote table "author_fields"
"""
input author_fields_obj_rel_insert_input {
  data: author_fields_insert_input! 
  """upsert condition"""
on_conflict: author_fields_on_conflict
}

"""
on_conflict condition type for table "author_fields"
"""
input author_fields_on_conflict {
  constraint: author_fields_constraint! 
  update_columns: [author_fields_update_column! ]! 
  where: author_fields_bool_exp
}

"""Ordering options when selecting data from "author_fields"."""
input author_fields_order_by {
  answered_individually: order_by
  author_field_index: order_by
  description: order_by
  dropdownoptions: order_by
  event: events_order_by
  event_id: order_by
  id: order_by
  input_type: order_by
  mandatory: order_by
  mandatory_for_presenter: order_by
  only_for_presenter: order_by
  question_type: order_by
  responses_aggregate: author_field_responses_aggregate_order_by
  show_field: order_by
  show_in_book: order_by
  show_in_program: order_by
  title: order_by
  word_limit: order_by
}

"""primary key columns input for table: author_fields"""
input author_fields_pk_columns_input {
  id: Int! 
}

"""
select columns of table "author_fields"
"""
enum author_fields_select_column {
  """column name"""
answered_individually
  """column name"""
author_field_index
  """column name"""
description
  """column name"""
dropdownoptions
  """column name"""
event_id
  """column name"""
id
  """column name"""
input_type
  """column name"""
mandatory
  """column name"""
mandatory_for_presenter
  """column name"""
only_for_presenter
  """column name"""
question_type
  """column name"""
show_field
  """column name"""
show_in_book
  """column name"""
show_in_program
  """column name"""
title
  """column name"""
word_limit
}

"""
select "author_fields_aggregate_bool_exp_bool_and_arguments_columns" columns of table "author_fields"
"""
enum author_fields_select_column_author_fields_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
answered_individually
  """column name"""
mandatory
  """column name"""
mandatory_for_presenter
  """column name"""
only_for_presenter
  """column name"""
show_field
  """column name"""
show_in_book
  """column name"""
show_in_program
}

"""
select "author_fields_aggregate_bool_exp_bool_or_arguments_columns" columns of table "author_fields"
"""
enum author_fields_select_column_author_fields_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
answered_individually
  """column name"""
mandatory
  """column name"""
mandatory_for_presenter
  """column name"""
only_for_presenter
  """column name"""
show_field
  """column name"""
show_in_book
  """column name"""
show_in_program
}

"""
input type for updating data in table "author_fields"
"""
input author_fields_set_input {
  answered_individually: Boolean
  author_field_index: Int
  description: String
  dropdownoptions: _text
  event_id: Int
  id: Int
  input_type: author_field_input_types
  mandatory: Boolean
  mandatory_for_presenter: Boolean
  only_for_presenter: Boolean
  question_type: author_field_question_types
  show_field: Boolean
  show_in_book: Boolean
  show_in_program: Boolean
  title: String
  word_limit: Int
}

"""aggregate stddev on columns"""
type author_fields_stddev_fields {
   author_field_index: Float
   event_id: Float
   id: Float
   word_limit: Float
}

"""
order by stddev() on columns of table "author_fields"
"""
input author_fields_stddev_order_by {
  author_field_index: order_by
  event_id: order_by
  id: order_by
  word_limit: order_by
}

"""aggregate stddev_pop on columns"""
type author_fields_stddev_pop_fields {
   author_field_index: Float
   event_id: Float
   id: Float
   word_limit: Float
}

"""
order by stddev_pop() on columns of table "author_fields"
"""
input author_fields_stddev_pop_order_by {
  author_field_index: order_by
  event_id: order_by
  id: order_by
  word_limit: order_by
}

"""aggregate stddev_samp on columns"""
type author_fields_stddev_samp_fields {
   author_field_index: Float
   event_id: Float
   id: Float
   word_limit: Float
}

"""
order by stddev_samp() on columns of table "author_fields"
"""
input author_fields_stddev_samp_order_by {
  author_field_index: order_by
  event_id: order_by
  id: order_by
  word_limit: order_by
}

"""
Streaming cursor of the table "author_fields"
"""
input author_fields_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: author_fields_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input author_fields_stream_cursor_value_input {
  answered_individually: Boolean
  author_field_index: Int
  description: String
  dropdownoptions: _text
  event_id: Int
  id: Int
  input_type: author_field_input_types
  mandatory: Boolean
  mandatory_for_presenter: Boolean
  only_for_presenter: Boolean
  question_type: author_field_question_types
  show_field: Boolean
  show_in_book: Boolean
  show_in_program: Boolean
  title: String
  word_limit: Int
}

"""aggregate sum on columns"""
type author_fields_sum_fields {
   author_field_index: Int
   event_id: Int
   id: Int
   word_limit: Int
}

"""
order by sum() on columns of table "author_fields"
"""
input author_fields_sum_order_by {
  author_field_index: order_by
  event_id: order_by
  id: order_by
  word_limit: order_by
}

"""
update columns of table "author_fields"
"""
enum author_fields_update_column {
  """column name"""
answered_individually
  """column name"""
author_field_index
  """column name"""
description
  """column name"""
dropdownoptions
  """column name"""
event_id
  """column name"""
id
  """column name"""
input_type
  """column name"""
mandatory
  """column name"""
mandatory_for_presenter
  """column name"""
only_for_presenter
  """column name"""
question_type
  """column name"""
show_field
  """column name"""
show_in_book
  """column name"""
show_in_program
  """column name"""
title
  """column name"""
word_limit
}

input author_fields_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: author_fields_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: author_fields_set_input
  where: author_fields_bool_exp! 
}

"""aggregate var_pop on columns"""
type author_fields_var_pop_fields {
   author_field_index: Float
   event_id: Float
   id: Float
   word_limit: Float
}

"""
order by var_pop() on columns of table "author_fields"
"""
input author_fields_var_pop_order_by {
  author_field_index: order_by
  event_id: order_by
  id: order_by
  word_limit: order_by
}

"""aggregate var_samp on columns"""
type author_fields_var_samp_fields {
   author_field_index: Float
   event_id: Float
   id: Float
   word_limit: Float
}

"""
order by var_samp() on columns of table "author_fields"
"""
input author_fields_var_samp_order_by {
  author_field_index: order_by
  event_id: order_by
  id: order_by
  word_limit: order_by
}

"""aggregate variance on columns"""
type author_fields_variance_fields {
   author_field_index: Float
   event_id: Float
   id: Float
   word_limit: Float
}

"""
order by variance() on columns of table "author_fields"
"""
input author_fields_variance_order_by {
  author_field_index: order_by
  event_id: order_by
  id: order_by
  word_limit: order_by
}

"""
columns and relationships of "author_users"
"""
type author_users {
  """An object relationship"""
 author: authors
   author_id: Int
  """An array relationship"""
 user("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): [users! ]! 
  """An aggregate relationship"""
 user_aggregate("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): users_aggregate! 
   user_id: Int
}

"""
aggregated selection of "author_users"
"""
type author_users_aggregate {
   aggregate: author_users_aggregate_fields
   nodes: [author_users! ]! 
}

"""
aggregate fields of "author_users"
"""
type author_users_aggregate_fields {
   avg: author_users_avg_fields
   count(columns: [author_users_select_column! ], distinct: Boolean): Int! 
   max: author_users_max_fields
   min: author_users_min_fields
   stddev: author_users_stddev_fields
   stddev_pop: author_users_stddev_pop_fields
   stddev_samp: author_users_stddev_samp_fields
   sum: author_users_sum_fields
   var_pop: author_users_var_pop_fields
   var_samp: author_users_var_samp_fields
   variance: author_users_variance_fields
}

"""aggregate avg on columns"""
type author_users_avg_fields {
   author_id: Float
   user_id: Float
}

"""
Boolean expression to filter rows from the table "author_users". All fields are combined with a logical 'AND'.
"""
input author_users_bool_exp {
  _and: [author_users_bool_exp! ]
  _not: author_users_bool_exp
  _or: [author_users_bool_exp! ]
  author: authors_bool_exp
  author_id: Int_comparison_exp
  user: users_bool_exp
  user_aggregate: users_aggregate_bool_exp
  user_id: Int_comparison_exp
}

"""aggregate max on columns"""
type author_users_max_fields {
   author_id: Int
   user_id: Int
}

"""aggregate min on columns"""
type author_users_min_fields {
   author_id: Int
   user_id: Int
}

"""Ordering options when selecting data from "author_users"."""
input author_users_order_by {
  author: authors_order_by
  author_id: order_by
  user_aggregate: users_aggregate_order_by
  user_id: order_by
}

"""
select columns of table "author_users"
"""
enum author_users_select_column {
  """column name"""
author_id
  """column name"""
user_id
}

"""aggregate stddev on columns"""
type author_users_stddev_fields {
   author_id: Float
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type author_users_stddev_pop_fields {
   author_id: Float
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type author_users_stddev_samp_fields {
   author_id: Float
   user_id: Float
}

"""
Streaming cursor of the table "author_users"
"""
input author_users_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: author_users_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input author_users_stream_cursor_value_input {
  author_id: Int
  user_id: Int
}

"""aggregate sum on columns"""
type author_users_sum_fields {
   author_id: Int
   user_id: Int
}

"""aggregate var_pop on columns"""
type author_users_var_pop_fields {
   author_id: Float
   user_id: Float
}

"""aggregate var_samp on columns"""
type author_users_var_samp_fields {
   author_id: Float
   user_id: Float
}

"""aggregate variance on columns"""
type author_users_variance_fields {
   author_id: Float
   user_id: Float
}

"""
columns and relationships of "author_versions"
"""
type author_versions {
  """An array relationship"""
 affiliations("""distinct select on columns"""
distinct_on: [affiliation_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [affiliation_versions_order_by! ], """filter the rows returned"""
where: affiliation_versions_bool_exp): [affiliation_versions! ]! 
  """An aggregate relationship"""
 affiliations_aggregate("""distinct select on columns"""
distinct_on: [affiliation_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [affiliation_versions_order_by! ], """filter the rows returned"""
where: affiliation_versions_bool_exp): affiliation_versions_aggregate! 
   author_id: Int! 
   author_order: Int! 
   created_at: timestamptz! 
   degree: String
   deleted: Boolean! 
   email: String
   first_name: String
   id: bigint! 
   last_name: String
   middle_initial: String
   orcid_id: String
   presenting: Boolean! 
   profile_picture: String
  """An array relationship"""
 responses("""distinct select on columns"""
distinct_on: [author_field_response_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_field_response_versions_order_by! ], """filter the rows returned"""
where: author_field_response_versions_bool_exp): [author_field_response_versions! ]! 
  """An aggregate relationship"""
 responses_aggregate("""distinct select on columns"""
distinct_on: [author_field_response_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_field_response_versions_order_by! ], """filter the rows returned"""
where: author_field_response_versions_bool_exp): author_field_response_versions_aggregate! 
  """An object relationship"""
 submission: submissions
   submission_id: Int! 
   title: String
}

"""
aggregated selection of "author_versions"
"""
type author_versions_aggregate {
   aggregate: author_versions_aggregate_fields
   nodes: [author_versions! ]! 
}

input author_versions_aggregate_bool_exp {
  bool_and: author_versions_aggregate_bool_exp_bool_and
  bool_or: author_versions_aggregate_bool_exp_bool_or
  count: author_versions_aggregate_bool_exp_count
}

input author_versions_aggregate_bool_exp_bool_and {
  arguments: author_versions_select_column_author_versions_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: author_versions_bool_exp
  predicate: Boolean_comparison_exp! 
}

input author_versions_aggregate_bool_exp_bool_or {
  arguments: author_versions_select_column_author_versions_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: author_versions_bool_exp
  predicate: Boolean_comparison_exp! 
}

input author_versions_aggregate_bool_exp_count {
  arguments: [author_versions_select_column! ]
  distinct: Boolean
  filter: author_versions_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "author_versions"
"""
type author_versions_aggregate_fields {
   avg: author_versions_avg_fields
   count(columns: [author_versions_select_column! ], distinct: Boolean): Int! 
   max: author_versions_max_fields
   min: author_versions_min_fields
   stddev: author_versions_stddev_fields
   stddev_pop: author_versions_stddev_pop_fields
   stddev_samp: author_versions_stddev_samp_fields
   sum: author_versions_sum_fields
   var_pop: author_versions_var_pop_fields
   var_samp: author_versions_var_samp_fields
   variance: author_versions_variance_fields
}

"""
order by aggregate values of table "author_versions"
"""
input author_versions_aggregate_order_by {
  avg: author_versions_avg_order_by
  count: order_by
  max: author_versions_max_order_by
  min: author_versions_min_order_by
  stddev: author_versions_stddev_order_by
  stddev_pop: author_versions_stddev_pop_order_by
  stddev_samp: author_versions_stddev_samp_order_by
  sum: author_versions_sum_order_by
  var_pop: author_versions_var_pop_order_by
  var_samp: author_versions_var_samp_order_by
  variance: author_versions_variance_order_by
}

"""
input type for inserting array relation for remote table "author_versions"
"""
input author_versions_arr_rel_insert_input {
  data: [author_versions_insert_input! ]! 
  """upsert condition"""
on_conflict: author_versions_on_conflict
}

"""aggregate avg on columns"""
type author_versions_avg_fields {
   author_id: Float
   author_order: Float
   id: Float
   submission_id: Float
}

"""
order by avg() on columns of table "author_versions"
"""
input author_versions_avg_order_by {
  author_id: order_by
  author_order: order_by
  id: order_by
  submission_id: order_by
}

"""
Boolean expression to filter rows from the table "author_versions". All fields are combined with a logical 'AND'.
"""
input author_versions_bool_exp {
  _and: [author_versions_bool_exp! ]
  _not: author_versions_bool_exp
  _or: [author_versions_bool_exp! ]
  affiliations: affiliation_versions_bool_exp
  affiliations_aggregate: affiliation_versions_aggregate_bool_exp
  author_id: Int_comparison_exp
  author_order: Int_comparison_exp
  created_at: timestamptz_comparison_exp
  degree: String_comparison_exp
  deleted: Boolean_comparison_exp
  email: String_comparison_exp
  first_name: String_comparison_exp
  id: bigint_comparison_exp
  last_name: String_comparison_exp
  middle_initial: String_comparison_exp
  orcid_id: String_comparison_exp
  presenting: Boolean_comparison_exp
  profile_picture: String_comparison_exp
  responses: author_field_response_versions_bool_exp
  responses_aggregate: author_field_response_versions_aggregate_bool_exp
  submission: submissions_bool_exp
  submission_id: Int_comparison_exp
  title: String_comparison_exp
}

"""
unique or primary key constraints on table "author_versions"
"""
enum author_versions_constraint {
  """
  unique or primary key constraint on columns "id"
  """
author_versions_pkey
}

"""
input type for incrementing numeric columns in table "author_versions"
"""
input author_versions_inc_input {
  author_id: Int
  author_order: Int
  id: bigint
  submission_id: Int
}

"""
input type for inserting data into table "author_versions"
"""
input author_versions_insert_input {
  affiliations: affiliation_versions_arr_rel_insert_input
  author_id: Int! 
  author_order: Int! 
  created_at: timestamptz! 
  degree: String
  deleted: Boolean! 
  email: String
  first_name: String
  id: bigint! 
  last_name: String
  middle_initial: String
  orcid_id: String
  presenting: Boolean! 
  profile_picture: String
  responses: author_field_response_versions_arr_rel_insert_input
  submission: submissions_obj_rel_insert_input
  submission_id: Int! 
  title: String
}

"""aggregate max on columns"""
type author_versions_max_fields {
   author_id: Int
   author_order: Int
   created_at: timestamptz
   degree: String
   email: String
   first_name: String
   id: bigint
   last_name: String
   middle_initial: String
   orcid_id: String
   profile_picture: String
   submission_id: Int
   title: String
}

"""
order by max() on columns of table "author_versions"
"""
input author_versions_max_order_by {
  author_id: order_by
  author_order: order_by
  created_at: order_by
  degree: order_by
  email: order_by
  first_name: order_by
  id: order_by
  last_name: order_by
  middle_initial: order_by
  orcid_id: order_by
  profile_picture: order_by
  submission_id: order_by
  title: order_by
}

"""aggregate min on columns"""
type author_versions_min_fields {
   author_id: Int
   author_order: Int
   created_at: timestamptz
   degree: String
   email: String
   first_name: String
   id: bigint
   last_name: String
   middle_initial: String
   orcid_id: String
   profile_picture: String
   submission_id: Int
   title: String
}

"""
order by min() on columns of table "author_versions"
"""
input author_versions_min_order_by {
  author_id: order_by
  author_order: order_by
  created_at: order_by
  degree: order_by
  email: order_by
  first_name: order_by
  id: order_by
  last_name: order_by
  middle_initial: order_by
  orcid_id: order_by
  profile_picture: order_by
  submission_id: order_by
  title: order_by
}

"""
response of any mutation on the table "author_versions"
"""
type author_versions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [author_versions! ]! 
}

"""
on_conflict condition type for table "author_versions"
"""
input author_versions_on_conflict {
  constraint: author_versions_constraint! 
  update_columns: [author_versions_update_column! ]! 
  where: author_versions_bool_exp
}

"""Ordering options when selecting data from "author_versions"."""
input author_versions_order_by {
  affiliations_aggregate: affiliation_versions_aggregate_order_by
  author_id: order_by
  author_order: order_by
  created_at: order_by
  degree: order_by
  deleted: order_by
  email: order_by
  first_name: order_by
  id: order_by
  last_name: order_by
  middle_initial: order_by
  orcid_id: order_by
  presenting: order_by
  profile_picture: order_by
  responses_aggregate: author_field_response_versions_aggregate_order_by
  submission: submissions_order_by
  submission_id: order_by
  title: order_by
}

"""primary key columns input for table: author_versions"""
input author_versions_pk_columns_input {
  id: bigint! 
}

"""
select columns of table "author_versions"
"""
enum author_versions_select_column {
  """column name"""
author_id
  """column name"""
author_order
  """column name"""
created_at
  """column name"""
degree
  """column name"""
deleted
  """column name"""
email
  """column name"""
first_name
  """column name"""
id
  """column name"""
last_name
  """column name"""
middle_initial
  """column name"""
orcid_id
  """column name"""
presenting
  """column name"""
profile_picture
  """column name"""
submission_id
  """column name"""
title
}

"""
select "author_versions_aggregate_bool_exp_bool_and_arguments_columns" columns of table "author_versions"
"""
enum author_versions_select_column_author_versions_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
deleted
  """column name"""
presenting
}

"""
select "author_versions_aggregate_bool_exp_bool_or_arguments_columns" columns of table "author_versions"
"""
enum author_versions_select_column_author_versions_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
deleted
  """column name"""
presenting
}

"""
input type for updating data in table "author_versions"
"""
input author_versions_set_input {
  author_id: Int
  author_order: Int
  created_at: timestamptz
  degree: String
  deleted: Boolean
  email: String
  first_name: String
  id: bigint
  last_name: String
  middle_initial: String
  orcid_id: String
  presenting: Boolean
  profile_picture: String
  submission_id: Int
  title: String
}

"""aggregate stddev on columns"""
type author_versions_stddev_fields {
   author_id: Float
   author_order: Float
   id: Float
   submission_id: Float
}

"""
order by stddev() on columns of table "author_versions"
"""
input author_versions_stddev_order_by {
  author_id: order_by
  author_order: order_by
  id: order_by
  submission_id: order_by
}

"""aggregate stddev_pop on columns"""
type author_versions_stddev_pop_fields {
   author_id: Float
   author_order: Float
   id: Float
   submission_id: Float
}

"""
order by stddev_pop() on columns of table "author_versions"
"""
input author_versions_stddev_pop_order_by {
  author_id: order_by
  author_order: order_by
  id: order_by
  submission_id: order_by
}

"""aggregate stddev_samp on columns"""
type author_versions_stddev_samp_fields {
   author_id: Float
   author_order: Float
   id: Float
   submission_id: Float
}

"""
order by stddev_samp() on columns of table "author_versions"
"""
input author_versions_stddev_samp_order_by {
  author_id: order_by
  author_order: order_by
  id: order_by
  submission_id: order_by
}

"""
Streaming cursor of the table "author_versions"
"""
input author_versions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: author_versions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input author_versions_stream_cursor_value_input {
  author_id: Int
  author_order: Int
  created_at: timestamptz
  degree: String
  deleted: Boolean
  email: String
  first_name: String
  id: bigint
  last_name: String
  middle_initial: String
  orcid_id: String
  presenting: Boolean
  profile_picture: String
  submission_id: Int
  title: String
}

"""aggregate sum on columns"""
type author_versions_sum_fields {
   author_id: Int
   author_order: Int
   id: bigint
   submission_id: Int
}

"""
order by sum() on columns of table "author_versions"
"""
input author_versions_sum_order_by {
  author_id: order_by
  author_order: order_by
  id: order_by
  submission_id: order_by
}

"""
update columns of table "author_versions"
"""
enum author_versions_update_column {
  """column name"""
author_id
  """column name"""
author_order
  """column name"""
created_at
  """column name"""
degree
  """column name"""
deleted
  """column name"""
email
  """column name"""
first_name
  """column name"""
id
  """column name"""
last_name
  """column name"""
middle_initial
  """column name"""
orcid_id
  """column name"""
presenting
  """column name"""
profile_picture
  """column name"""
submission_id
  """column name"""
title
}

input author_versions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: author_versions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: author_versions_set_input
  where: author_versions_bool_exp! 
}

"""aggregate var_pop on columns"""
type author_versions_var_pop_fields {
   author_id: Float
   author_order: Float
   id: Float
   submission_id: Float
}

"""
order by var_pop() on columns of table "author_versions"
"""
input author_versions_var_pop_order_by {
  author_id: order_by
  author_order: order_by
  id: order_by
  submission_id: order_by
}

"""aggregate var_samp on columns"""
type author_versions_var_samp_fields {
   author_id: Float
   author_order: Float
   id: Float
   submission_id: Float
}

"""
order by var_samp() on columns of table "author_versions"
"""
input author_versions_var_samp_order_by {
  author_id: order_by
  author_order: order_by
  id: order_by
  submission_id: order_by
}

"""aggregate variance on columns"""
type author_versions_variance_fields {
   author_id: Float
   author_order: Float
   id: Float
   submission_id: Float
}

"""
order by variance() on columns of table "author_versions"
"""
input author_versions_variance_order_by {
  author_id: order_by
  author_order: order_by
  id: order_by
  submission_id: order_by
}

"""
columns and relationships of "authors"
"""
type authors {
  """An array relationship"""
 affiliations("""distinct select on columns"""
distinct_on: [affiliations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [affiliations_order_by! ], """filter the rows returned"""
where: affiliations_bool_exp): [affiliations! ]! 
  """An aggregate relationship"""
 affiliations_aggregate("""distinct select on columns"""
distinct_on: [affiliations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [affiliations_order_by! ], """filter the rows returned"""
where: affiliations_bool_exp): affiliations_aggregate! 
  """An array relationship"""
 affiliations_without_hidden_responses("""distinct select on columns"""
distinct_on: [affiliations_without_hidden_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [affiliations_without_hidden_responses_order_by! ], """filter the rows returned"""
where: affiliations_without_hidden_responses_bool_exp): [affiliations_without_hidden_responses! ]! 
  """An aggregate relationship"""
 affiliations_without_hidden_responses_aggregate("""distinct select on columns"""
distinct_on: [affiliations_without_hidden_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [affiliations_without_hidden_responses_order_by! ], """filter the rows returned"""
where: affiliations_without_hidden_responses_bool_exp): affiliations_without_hidden_responses_aggregate! 
   author_order: Int! 
   degree: String
   email: String
   fe_epoch: bigint
   first_name: String
   id: Int! 
   last_name: String
   middle_initial: String
   orcid_id: String
  """An array relationship"""
 ordered_program_submissions_by_title("""distinct select on columns"""
distinct_on: [ordered_program_submissions_by_title_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_submissions_by_title_order_by! ], """filter the rows returned"""
where: ordered_program_submissions_by_title_bool_exp): [ordered_program_submissions_by_title! ]! 
  """An aggregate relationship"""
 ordered_program_submissions_by_title_aggregate("""distinct select on columns"""
distinct_on: [ordered_program_submissions_by_title_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_submissions_by_title_order_by! ], """filter the rows returned"""
where: ordered_program_submissions_by_title_bool_exp): ordered_program_submissions_by_title_aggregate! 
   presenting: Boolean! 
   profile_picture: String
  """An array relationship"""
 responses("""distinct select on columns"""
distinct_on: [author_field_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_field_responses_order_by! ], """filter the rows returned"""
where: author_field_responses_bool_exp): [author_field_responses! ]! 
  """An aggregate relationship"""
 responses_aggregate("""distinct select on columns"""
distinct_on: [author_field_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_field_responses_order_by! ], """filter the rows returned"""
where: author_field_responses_bool_exp): author_field_responses_aggregate! 
  """An array relationship"""
 submission("""distinct select on columns"""
distinct_on: [submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submissions_order_by! ], """filter the rows returned"""
where: submissions_bool_exp): [submissions! ]! 
  """An aggregate relationship"""
 submission_aggregate("""distinct select on columns"""
distinct_on: [submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submissions_order_by! ], """filter the rows returned"""
where: submissions_bool_exp): submissions_aggregate! 
   submission_id: Int! 
   title: String
  """An array relationship"""
 user("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): [users! ]! 
  """An aggregate relationship"""
 user_aggregate("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): users_aggregate! 
}

"""
aggregated selection of "authors"
"""
type authors_aggregate {
   aggregate: authors_aggregate_fields
   nodes: [authors! ]! 
}

input authors_aggregate_bool_exp {
  bool_and: authors_aggregate_bool_exp_bool_and
  bool_or: authors_aggregate_bool_exp_bool_or
  count: authors_aggregate_bool_exp_count
}

input authors_aggregate_bool_exp_bool_and {
  arguments: authors_select_column_authors_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: authors_bool_exp
  predicate: Boolean_comparison_exp! 
}

input authors_aggregate_bool_exp_bool_or {
  arguments: authors_select_column_authors_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: authors_bool_exp
  predicate: Boolean_comparison_exp! 
}

input authors_aggregate_bool_exp_count {
  arguments: [authors_select_column! ]
  distinct: Boolean
  filter: authors_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "authors"
"""
type authors_aggregate_fields {
   avg: authors_avg_fields
   count(columns: [authors_select_column! ], distinct: Boolean): Int! 
   max: authors_max_fields
   min: authors_min_fields
   stddev: authors_stddev_fields
   stddev_pop: authors_stddev_pop_fields
   stddev_samp: authors_stddev_samp_fields
   sum: authors_sum_fields
   var_pop: authors_var_pop_fields
   var_samp: authors_var_samp_fields
   variance: authors_variance_fields
}

"""
order by aggregate values of table "authors"
"""
input authors_aggregate_order_by {
  avg: authors_avg_order_by
  count: order_by
  max: authors_max_order_by
  min: authors_min_order_by
  stddev: authors_stddev_order_by
  stddev_pop: authors_stddev_pop_order_by
  stddev_samp: authors_stddev_samp_order_by
  sum: authors_sum_order_by
  var_pop: authors_var_pop_order_by
  var_samp: authors_var_samp_order_by
  variance: authors_variance_order_by
}

"""
input type for inserting array relation for remote table "authors"
"""
input authors_arr_rel_insert_input {
  data: [authors_insert_input! ]! 
  """upsert condition"""
on_conflict: authors_on_conflict
}

"""aggregate avg on columns"""
type authors_avg_fields {
   author_order: Float
   fe_epoch: Float
   id: Float
   submission_id: Float
}

"""
order by avg() on columns of table "authors"
"""
input authors_avg_order_by {
  author_order: order_by
  fe_epoch: order_by
  id: order_by
  submission_id: order_by
}

"""
Boolean expression to filter rows from the table "authors". All fields are combined with a logical 'AND'.
"""
input authors_bool_exp {
  _and: [authors_bool_exp! ]
  _not: authors_bool_exp
  _or: [authors_bool_exp! ]
  affiliations: affiliations_bool_exp
  affiliations_aggregate: affiliations_aggregate_bool_exp
  affiliations_without_hidden_responses: affiliations_without_hidden_responses_bool_exp
  affiliations_without_hidden_responses_aggregate: affiliations_without_hidden_responses_aggregate_bool_exp
  author_order: Int_comparison_exp
  degree: String_comparison_exp
  email: String_comparison_exp
  fe_epoch: bigint_comparison_exp
  first_name: String_comparison_exp
  id: Int_comparison_exp
  last_name: String_comparison_exp
  middle_initial: String_comparison_exp
  orcid_id: String_comparison_exp
  ordered_program_submissions_by_title: ordered_program_submissions_by_title_bool_exp
  ordered_program_submissions_by_title_aggregate: ordered_program_submissions_by_title_aggregate_bool_exp
  presenting: Boolean_comparison_exp
  profile_picture: String_comparison_exp
  responses: author_field_responses_bool_exp
  responses_aggregate: author_field_responses_aggregate_bool_exp
  submission: submissions_bool_exp
  submission_aggregate: submissions_aggregate_bool_exp
  submission_id: Int_comparison_exp
  title: String_comparison_exp
  user: users_bool_exp
  user_aggregate: users_aggregate_bool_exp
}

"""
unique or primary key constraints on table "authors"
"""
enum authors_constraint {
  """
  unique or primary key constraint on columns "author_id"
  """
authors_pkey
}

"""
input type for incrementing numeric columns in table "authors"
"""
input authors_inc_input {
  author_order: Int
  fe_epoch: bigint
  id: Int
  submission_id: Int
}

"""
input type for inserting data into table "authors"
"""
input authors_insert_input {
  affiliations: affiliations_arr_rel_insert_input
  affiliations_without_hidden_responses: affiliations_without_hidden_responses_arr_rel_insert_input
  author_order: Int! 
  degree: String
  email: String
  fe_epoch: bigint
  first_name: String
  id: Int
  last_name: String
  middle_initial: String
  orcid_id: String
  ordered_program_submissions_by_title: ordered_program_submissions_by_title_arr_rel_insert_input
  presenting: Boolean! 
  profile_picture: String
  responses: author_field_responses_arr_rel_insert_input
  submission: submissions_arr_rel_insert_input
  submission_id: Int! 
  title: String
  user: users_arr_rel_insert_input
}

"""
columns and relationships of "authors_last_updated"
"""
type authors_last_updated {
   authors_last_updated: timestamptz
   event_id: Int
   submission_id: Int
}

"""
aggregated selection of "authors_last_updated"
"""
type authors_last_updated_aggregate {
   aggregate: authors_last_updated_aggregate_fields
   nodes: [authors_last_updated! ]! 
}

input authors_last_updated_aggregate_bool_exp {
  count: authors_last_updated_aggregate_bool_exp_count
}

input authors_last_updated_aggregate_bool_exp_count {
  arguments: [authors_last_updated_select_column! ]
  distinct: Boolean
  filter: authors_last_updated_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "authors_last_updated"
"""
type authors_last_updated_aggregate_fields {
   avg: authors_last_updated_avg_fields
   count(columns: [authors_last_updated_select_column! ], distinct: Boolean): Int! 
   max: authors_last_updated_max_fields
   min: authors_last_updated_min_fields
   stddev: authors_last_updated_stddev_fields
   stddev_pop: authors_last_updated_stddev_pop_fields
   stddev_samp: authors_last_updated_stddev_samp_fields
   sum: authors_last_updated_sum_fields
   var_pop: authors_last_updated_var_pop_fields
   var_samp: authors_last_updated_var_samp_fields
   variance: authors_last_updated_variance_fields
}

"""
order by aggregate values of table "authors_last_updated"
"""
input authors_last_updated_aggregate_order_by {
  avg: authors_last_updated_avg_order_by
  count: order_by
  max: authors_last_updated_max_order_by
  min: authors_last_updated_min_order_by
  stddev: authors_last_updated_stddev_order_by
  stddev_pop: authors_last_updated_stddev_pop_order_by
  stddev_samp: authors_last_updated_stddev_samp_order_by
  sum: authors_last_updated_sum_order_by
  var_pop: authors_last_updated_var_pop_order_by
  var_samp: authors_last_updated_var_samp_order_by
  variance: authors_last_updated_variance_order_by
}

"""
input type for inserting array relation for remote table "authors_last_updated"
"""
input authors_last_updated_arr_rel_insert_input {
  data: [authors_last_updated_insert_input! ]! 
}

"""aggregate avg on columns"""
type authors_last_updated_avg_fields {
   event_id: Float
   submission_id: Float
}

"""
order by avg() on columns of table "authors_last_updated"
"""
input authors_last_updated_avg_order_by {
  event_id: order_by
  submission_id: order_by
}

"""
Boolean expression to filter rows from the table "authors_last_updated". All fields are combined with a logical 'AND'.
"""
input authors_last_updated_bool_exp {
  _and: [authors_last_updated_bool_exp! ]
  _not: authors_last_updated_bool_exp
  _or: [authors_last_updated_bool_exp! ]
  authors_last_updated: timestamptz_comparison_exp
  event_id: Int_comparison_exp
  submission_id: Int_comparison_exp
}

"""
input type for inserting data into table "authors_last_updated"
"""
input authors_last_updated_insert_input {
  authors_last_updated: timestamptz
  event_id: Int
  submission_id: Int
}

"""aggregate max on columns"""
type authors_last_updated_max_fields {
   authors_last_updated: timestamptz
   event_id: Int
   submission_id: Int
}

"""
order by max() on columns of table "authors_last_updated"
"""
input authors_last_updated_max_order_by {
  authors_last_updated: order_by
  event_id: order_by
  submission_id: order_by
}

"""aggregate min on columns"""
type authors_last_updated_min_fields {
   authors_last_updated: timestamptz
   event_id: Int
   submission_id: Int
}

"""
order by min() on columns of table "authors_last_updated"
"""
input authors_last_updated_min_order_by {
  authors_last_updated: order_by
  event_id: order_by
  submission_id: order_by
}

"""Ordering options when selecting data from "authors_last_updated"."""
input authors_last_updated_order_by {
  authors_last_updated: order_by
  event_id: order_by
  submission_id: order_by
}

"""
select columns of table "authors_last_updated"
"""
enum authors_last_updated_select_column {
  """column name"""
authors_last_updated
  """column name"""
event_id
  """column name"""
submission_id
}

"""aggregate stddev on columns"""
type authors_last_updated_stddev_fields {
   event_id: Float
   submission_id: Float
}

"""
order by stddev() on columns of table "authors_last_updated"
"""
input authors_last_updated_stddev_order_by {
  event_id: order_by
  submission_id: order_by
}

"""aggregate stddev_pop on columns"""
type authors_last_updated_stddev_pop_fields {
   event_id: Float
   submission_id: Float
}

"""
order by stddev_pop() on columns of table "authors_last_updated"
"""
input authors_last_updated_stddev_pop_order_by {
  event_id: order_by
  submission_id: order_by
}

"""aggregate stddev_samp on columns"""
type authors_last_updated_stddev_samp_fields {
   event_id: Float
   submission_id: Float
}

"""
order by stddev_samp() on columns of table "authors_last_updated"
"""
input authors_last_updated_stddev_samp_order_by {
  event_id: order_by
  submission_id: order_by
}

"""
Streaming cursor of the table "authors_last_updated"
"""
input authors_last_updated_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: authors_last_updated_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input authors_last_updated_stream_cursor_value_input {
  authors_last_updated: timestamptz
  event_id: Int
  submission_id: Int
}

"""aggregate sum on columns"""
type authors_last_updated_sum_fields {
   event_id: Int
   submission_id: Int
}

"""
order by sum() on columns of table "authors_last_updated"
"""
input authors_last_updated_sum_order_by {
  event_id: order_by
  submission_id: order_by
}

"""aggregate var_pop on columns"""
type authors_last_updated_var_pop_fields {
   event_id: Float
   submission_id: Float
}

"""
order by var_pop() on columns of table "authors_last_updated"
"""
input authors_last_updated_var_pop_order_by {
  event_id: order_by
  submission_id: order_by
}

"""aggregate var_samp on columns"""
type authors_last_updated_var_samp_fields {
   event_id: Float
   submission_id: Float
}

"""
order by var_samp() on columns of table "authors_last_updated"
"""
input authors_last_updated_var_samp_order_by {
  event_id: order_by
  submission_id: order_by
}

"""aggregate variance on columns"""
type authors_last_updated_variance_fields {
   event_id: Float
   submission_id: Float
}

"""
order by variance() on columns of table "authors_last_updated"
"""
input authors_last_updated_variance_order_by {
  event_id: order_by
  submission_id: order_by
}

"""aggregate max on columns"""
type authors_max_fields {
   author_order: Int
   degree: String
   email: String
   fe_epoch: bigint
   first_name: String
   id: Int
   last_name: String
   middle_initial: String
   orcid_id: String
   profile_picture: String
   submission_id: Int
   title: String
}

"""
order by max() on columns of table "authors"
"""
input authors_max_order_by {
  author_order: order_by
  degree: order_by
  email: order_by
  fe_epoch: order_by
  first_name: order_by
  id: order_by
  last_name: order_by
  middle_initial: order_by
  orcid_id: order_by
  profile_picture: order_by
  submission_id: order_by
  title: order_by
}

"""aggregate min on columns"""
type authors_min_fields {
   author_order: Int
   degree: String
   email: String
   fe_epoch: bigint
   first_name: String
   id: Int
   last_name: String
   middle_initial: String
   orcid_id: String
   profile_picture: String
   submission_id: Int
   title: String
}

"""
order by min() on columns of table "authors"
"""
input authors_min_order_by {
  author_order: order_by
  degree: order_by
  email: order_by
  fe_epoch: order_by
  first_name: order_by
  id: order_by
  last_name: order_by
  middle_initial: order_by
  orcid_id: order_by
  profile_picture: order_by
  submission_id: order_by
  title: order_by
}

"""
response of any mutation on the table "authors"
"""
type authors_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [authors! ]! 
}

"""
input type for inserting object relation for remote table "authors"
"""
input authors_obj_rel_insert_input {
  data: authors_insert_input! 
  """upsert condition"""
on_conflict: authors_on_conflict
}

"""
on_conflict condition type for table "authors"
"""
input authors_on_conflict {
  constraint: authors_constraint! 
  update_columns: [authors_update_column! ]! 
  where: authors_bool_exp
}

"""Ordering options when selecting data from "authors"."""
input authors_order_by {
  affiliations_aggregate: affiliations_aggregate_order_by
  affiliations_without_hidden_responses_aggregate: affiliations_without_hidden_responses_aggregate_order_by
  author_order: order_by
  degree: order_by
  email: order_by
  fe_epoch: order_by
  first_name: order_by
  id: order_by
  last_name: order_by
  middle_initial: order_by
  orcid_id: order_by
  ordered_program_submissions_by_title_aggregate: ordered_program_submissions_by_title_aggregate_order_by
  presenting: order_by
  profile_picture: order_by
  responses_aggregate: author_field_responses_aggregate_order_by
  submission_aggregate: submissions_aggregate_order_by
  submission_id: order_by
  title: order_by
  user_aggregate: users_aggregate_order_by
}

"""primary key columns input for table: authors"""
input authors_pk_columns_input {
  id: Int! 
}

"""
select columns of table "authors"
"""
enum authors_select_column {
  """column name"""
author_order
  """column name"""
degree
  """column name"""
email
  """column name"""
fe_epoch
  """column name"""
first_name
  """column name"""
id
  """column name"""
last_name
  """column name"""
middle_initial
  """column name"""
orcid_id
  """column name"""
presenting
  """column name"""
profile_picture
  """column name"""
submission_id
  """column name"""
title
}

"""
select "authors_aggregate_bool_exp_bool_and_arguments_columns" columns of table "authors"
"""
enum authors_select_column_authors_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
presenting
}

"""
select "authors_aggregate_bool_exp_bool_or_arguments_columns" columns of table "authors"
"""
enum authors_select_column_authors_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
presenting
}

"""
input type for updating data in table "authors"
"""
input authors_set_input {
  author_order: Int
  degree: String
  email: String
  fe_epoch: bigint
  first_name: String
  id: Int
  last_name: String
  middle_initial: String
  orcid_id: String
  presenting: Boolean
  profile_picture: String
  submission_id: Int
  title: String
}

"""aggregate stddev on columns"""
type authors_stddev_fields {
   author_order: Float
   fe_epoch: Float
   id: Float
   submission_id: Float
}

"""
order by stddev() on columns of table "authors"
"""
input authors_stddev_order_by {
  author_order: order_by
  fe_epoch: order_by
  id: order_by
  submission_id: order_by
}

"""aggregate stddev_pop on columns"""
type authors_stddev_pop_fields {
   author_order: Float
   fe_epoch: Float
   id: Float
   submission_id: Float
}

"""
order by stddev_pop() on columns of table "authors"
"""
input authors_stddev_pop_order_by {
  author_order: order_by
  fe_epoch: order_by
  id: order_by
  submission_id: order_by
}

"""aggregate stddev_samp on columns"""
type authors_stddev_samp_fields {
   author_order: Float
   fe_epoch: Float
   id: Float
   submission_id: Float
}

"""
order by stddev_samp() on columns of table "authors"
"""
input authors_stddev_samp_order_by {
  author_order: order_by
  fe_epoch: order_by
  id: order_by
  submission_id: order_by
}

"""
Streaming cursor of the table "authors"
"""
input authors_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: authors_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input authors_stream_cursor_value_input {
  author_order: Int
  degree: String
  email: String
  fe_epoch: bigint
  first_name: String
  id: Int
  last_name: String
  middle_initial: String
  orcid_id: String
  presenting: Boolean
  profile_picture: String
  submission_id: Int
  title: String
}

"""aggregate sum on columns"""
type authors_sum_fields {
   author_order: Int
   fe_epoch: bigint
   id: Int
   submission_id: Int
}

"""
order by sum() on columns of table "authors"
"""
input authors_sum_order_by {
  author_order: order_by
  fe_epoch: order_by
  id: order_by
  submission_id: order_by
}

"""
update columns of table "authors"
"""
enum authors_update_column {
  """column name"""
author_order
  """column name"""
degree
  """column name"""
email
  """column name"""
fe_epoch
  """column name"""
first_name
  """column name"""
id
  """column name"""
last_name
  """column name"""
middle_initial
  """column name"""
orcid_id
  """column name"""
presenting
  """column name"""
profile_picture
  """column name"""
submission_id
  """column name"""
title
}

input authors_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: authors_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: authors_set_input
  where: authors_bool_exp! 
}

"""aggregate var_pop on columns"""
type authors_var_pop_fields {
   author_order: Float
   fe_epoch: Float
   id: Float
   submission_id: Float
}

"""
order by var_pop() on columns of table "authors"
"""
input authors_var_pop_order_by {
  author_order: order_by
  fe_epoch: order_by
  id: order_by
  submission_id: order_by
}

"""aggregate var_samp on columns"""
type authors_var_samp_fields {
   author_order: Float
   fe_epoch: Float
   id: Float
   submission_id: Float
}

"""
order by var_samp() on columns of table "authors"
"""
input authors_var_samp_order_by {
  author_order: order_by
  fe_epoch: order_by
  id: order_by
  submission_id: order_by
}

"""aggregate variance on columns"""
type authors_variance_fields {
   author_order: Float
   fe_epoch: Float
   id: Float
   submission_id: Float
}

"""
order by variance() on columns of table "authors"
"""
input authors_variance_order_by {
  author_order: order_by
  fe_epoch: order_by
  id: order_by
  submission_id: order_by
}

scalar bigint 

"""
Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'.
"""
input bigint_comparison_exp {
  _eq: bigint
  _gt: bigint
  _gte: bigint
  _in: [bigint! ]
  _is_null: Boolean
  _lt: bigint
  _lte: bigint
  _neq: bigint
  _nin: [bigint! ]
}

"""
columns and relationships of "browser_errors"
"""
type browser_errors {
   caught: Boolean! 
   created_at: timestamptz
   error_msg: String! 
   error_stack: String
   event_id: Int
   id: Int! 
   timestamp: timestamp! 
   updated_at: timestamptz
   url: String! 
   user_agent: String
   user_id: Int
}

"""
aggregated selection of "browser_errors"
"""
type browser_errors_aggregate {
   aggregate: browser_errors_aggregate_fields
   nodes: [browser_errors! ]! 
}

"""
aggregate fields of "browser_errors"
"""
type browser_errors_aggregate_fields {
   avg: browser_errors_avg_fields
   count(columns: [browser_errors_select_column! ], distinct: Boolean): Int! 
   max: browser_errors_max_fields
   min: browser_errors_min_fields
   stddev: browser_errors_stddev_fields
   stddev_pop: browser_errors_stddev_pop_fields
   stddev_samp: browser_errors_stddev_samp_fields
   sum: browser_errors_sum_fields
   var_pop: browser_errors_var_pop_fields
   var_samp: browser_errors_var_samp_fields
   variance: browser_errors_variance_fields
}

"""aggregate avg on columns"""
type browser_errors_avg_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
Boolean expression to filter rows from the table "browser_errors". All fields are combined with a logical 'AND'.
"""
input browser_errors_bool_exp {
  _and: [browser_errors_bool_exp! ]
  _not: browser_errors_bool_exp
  _or: [browser_errors_bool_exp! ]
  caught: Boolean_comparison_exp
  created_at: timestamptz_comparison_exp
  error_msg: String_comparison_exp
  error_stack: String_comparison_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  timestamp: timestamp_comparison_exp
  updated_at: timestamptz_comparison_exp
  url: String_comparison_exp
  user_agent: String_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "browser_errors"
"""
enum browser_errors_constraint {
  """
  unique or primary key constraint on columns "id"
  """
browser_errors_pkey
}

"""
input type for incrementing numeric columns in table "browser_errors"
"""
input browser_errors_inc_input {
  event_id: Int
  id: Int
  user_id: Int
}

"""
input type for inserting data into table "browser_errors"
"""
input browser_errors_insert_input {
  caught: Boolean! 
  created_at: timestamptz! 
  error_msg: String! 
  error_stack: String
  event_id: Int
  id: Int! 
  timestamp: timestamp! 
  updated_at: timestamptz! 
  url: String! 
  user_agent: String
  user_id: Int
}

"""aggregate max on columns"""
type browser_errors_max_fields {
   created_at: timestamptz
   error_msg: String
   error_stack: String
   event_id: Int
   id: Int
   timestamp: timestamp
   updated_at: timestamptz
   url: String
   user_agent: String
   user_id: Int
}

"""aggregate min on columns"""
type browser_errors_min_fields {
   created_at: timestamptz
   error_msg: String
   error_stack: String
   event_id: Int
   id: Int
   timestamp: timestamp
   updated_at: timestamptz
   url: String
   user_agent: String
   user_id: Int
}

"""
response of any mutation on the table "browser_errors"
"""
type browser_errors_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [browser_errors! ]! 
}

"""
on_conflict condition type for table "browser_errors"
"""
input browser_errors_on_conflict {
  constraint: browser_errors_constraint! 
  update_columns: [browser_errors_update_column! ]! 
  where: browser_errors_bool_exp
}

"""Ordering options when selecting data from "browser_errors"."""
input browser_errors_order_by {
  caught: order_by
  created_at: order_by
  error_msg: order_by
  error_stack: order_by
  event_id: order_by
  id: order_by
  timestamp: order_by
  updated_at: order_by
  url: order_by
  user_agent: order_by
  user_id: order_by
}

"""primary key columns input for table: browser_errors"""
input browser_errors_pk_columns_input {
  id: Int! 
}

"""
select columns of table "browser_errors"
"""
enum browser_errors_select_column {
  """column name"""
caught
  """column name"""
created_at
  """column name"""
error_msg
  """column name"""
error_stack
  """column name"""
event_id
  """column name"""
id
  """column name"""
timestamp
  """column name"""
updated_at
  """column name"""
url
  """column name"""
user_agent
  """column name"""
user_id
}

"""
input type for updating data in table "browser_errors"
"""
input browser_errors_set_input {
  caught: Boolean
  created_at: timestamptz
  error_msg: String
  error_stack: String
  event_id: Int
  id: Int
  timestamp: timestamp
  updated_at: timestamptz
  url: String
  user_agent: String
  user_id: Int
}

"""aggregate stddev on columns"""
type browser_errors_stddev_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type browser_errors_stddev_pop_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type browser_errors_stddev_samp_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
Streaming cursor of the table "browser_errors"
"""
input browser_errors_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: browser_errors_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input browser_errors_stream_cursor_value_input {
  caught: Boolean
  created_at: timestamptz
  error_msg: String
  error_stack: String
  event_id: Int
  id: Int
  timestamp: timestamp
  updated_at: timestamptz
  url: String
  user_agent: String
  user_id: Int
}

"""aggregate sum on columns"""
type browser_errors_sum_fields {
   event_id: Int
   id: Int
   user_id: Int
}

"""
update columns of table "browser_errors"
"""
enum browser_errors_update_column {
  """column name"""
caught
  """column name"""
created_at
  """column name"""
error_msg
  """column name"""
error_stack
  """column name"""
event_id
  """column name"""
id
  """column name"""
timestamp
  """column name"""
updated_at
  """column name"""
url
  """column name"""
user_agent
  """column name"""
user_id
}

input browser_errors_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: browser_errors_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: browser_errors_set_input
  where: browser_errors_bool_exp! 
}

"""aggregate var_pop on columns"""
type browser_errors_var_pop_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""aggregate var_samp on columns"""
type browser_errors_var_samp_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""aggregate variance on columns"""
type browser_errors_variance_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
columns and relationships of "categories"
"""
type categories {
   category: String
   child_category: String
   committee_member_user_id: Int! 
   no_category: Boolean
   parent_category: String
  """An object relationship"""
 stage: stages
   stage_id: Int
}

"""
aggregated selection of "categories"
"""
type categories_aggregate {
   aggregate: categories_aggregate_fields
   nodes: [categories! ]! 
}

"""
aggregate fields of "categories"
"""
type categories_aggregate_fields {
   avg: categories_avg_fields
   count(columns: [categories_select_column! ], distinct: Boolean): Int! 
   max: categories_max_fields
   min: categories_min_fields
   stddev: categories_stddev_fields
   stddev_pop: categories_stddev_pop_fields
   stddev_samp: categories_stddev_samp_fields
   sum: categories_sum_fields
   var_pop: categories_var_pop_fields
   var_samp: categories_var_samp_fields
   variance: categories_variance_fields
}

"""aggregate avg on columns"""
type categories_avg_fields {
   committee_member_user_id: Float
   stage_id: Float
}

"""
Boolean expression to filter rows from the table "categories". All fields are combined with a logical 'AND'.
"""
input categories_bool_exp {
  _and: [categories_bool_exp! ]
  _not: categories_bool_exp
  _or: [categories_bool_exp! ]
  category: String_comparison_exp
  child_category: String_comparison_exp
  committee_member_user_id: Int_comparison_exp
  no_category: Boolean_comparison_exp
  parent_category: String_comparison_exp
  stage: stages_bool_exp
  stage_id: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "categories"
"""
input categories_inc_input {
  committee_member_user_id: Int
  stage_id: Int
}

"""
input type for inserting data into table "categories"
"""
input categories_insert_input {
  category: String
  child_category: String
  committee_member_user_id: Int! 
  no_category: Boolean! 
  parent_category: String
  stage: stages_obj_rel_insert_input
  stage_id: Int
}

"""aggregate max on columns"""
type categories_max_fields {
   category: String
   child_category: String
   committee_member_user_id: Int
   parent_category: String
   stage_id: Int
}

"""aggregate min on columns"""
type categories_min_fields {
   category: String
   child_category: String
   committee_member_user_id: Int
   parent_category: String
   stage_id: Int
}

"""
response of any mutation on the table "categories"
"""
type categories_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [categories! ]! 
}

"""Ordering options when selecting data from "categories"."""
input categories_order_by {
  category: order_by
  child_category: order_by
  committee_member_user_id: order_by
  no_category: order_by
  parent_category: order_by
  stage: stages_order_by
  stage_id: order_by
}

"""
select columns of table "categories"
"""
enum categories_select_column {
  """column name"""
category
  """column name"""
child_category
  """column name"""
committee_member_user_id
  """column name"""
no_category
  """column name"""
parent_category
  """column name"""
stage_id
}

"""
input type for updating data in table "categories"
"""
input categories_set_input {
  category: String
  child_category: String
  committee_member_user_id: Int
  no_category: Boolean
  parent_category: String
  stage_id: Int
}

"""aggregate stddev on columns"""
type categories_stddev_fields {
   committee_member_user_id: Float
   stage_id: Float
}

"""aggregate stddev_pop on columns"""
type categories_stddev_pop_fields {
   committee_member_user_id: Float
   stage_id: Float
}

"""aggregate stddev_samp on columns"""
type categories_stddev_samp_fields {
   committee_member_user_id: Float
   stage_id: Float
}

"""
Streaming cursor of the table "categories"
"""
input categories_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: categories_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input categories_stream_cursor_value_input {
  category: String
  child_category: String
  committee_member_user_id: Int
  no_category: Boolean
  parent_category: String
  stage_id: Int
}

"""aggregate sum on columns"""
type categories_sum_fields {
   committee_member_user_id: Int
   stage_id: Int
}

input categories_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: categories_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: categories_set_input
  where: categories_bool_exp! 
}

"""aggregate var_pop on columns"""
type categories_var_pop_fields {
   committee_member_user_id: Float
   stage_id: Float
}

"""aggregate var_samp on columns"""
type categories_var_samp_fields {
   committee_member_user_id: Float
   stage_id: Float
}

"""aggregate variance on columns"""
type categories_variance_fields {
   committee_member_user_id: Float
   stage_id: Float
}

scalar citext 

"""
Boolean expression to compare columns of type "citext". All fields are combined with logical 'AND'.
"""
input citext_comparison_exp {
  _eq: citext
  _gt: citext
  _gte: citext
  """does the column match the given case-insensitive pattern"""
_ilike: citext
  _in: [citext! ]
  """
  does the column match the given POSIX regular expression, case insensitive
  """
_iregex: citext
  _is_null: Boolean
  """does the column match the given pattern"""
_like: citext
  _lt: citext
  _lte: citext
  _neq: citext
  """does the column NOT match the given case-insensitive pattern"""
_nilike: citext
  _nin: [citext! ]
  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
_niregex: citext
  """does the column NOT match the given pattern"""
_nlike: citext
  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
_nregex: citext
  """does the column NOT match the given SQL regular expression"""
_nsimilar: citext
  """
  does the column match the given POSIX regular expression, case sensitive
  """
_regex: citext
  """does the column match the given SQL regular expression"""
_similar: citext
}

scalar client_role 

"""
Boolean expression to compare columns of type "client_role". All fields are combined with logical 'AND'.
"""
input client_role_comparison_exp {
  _eq: client_role
  _gt: client_role
  _gte: client_role
  _in: [client_role! ]
  _is_null: Boolean
  _lt: client_role
  _lte: client_role
  _neq: client_role
  _nin: [client_role! ]
}

"""
columns and relationships of "clients"
"""
type clients {
   can_purchase_own_events: Boolean! 
  """A unique identifier for each client"""
 client_id: Int! 
   client_name: String! 
  """An array relationship"""
 clients_permissions("""distinct select on columns"""
distinct_on: [clients_permissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [clients_permissions_order_by! ], """filter the rows returned"""
where: clients_permissions_bool_exp): [clients_permissions! ]! 
  """An aggregate relationship"""
 clients_permissions_aggregate("""distinct select on columns"""
distinct_on: [clients_permissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [clients_permissions_order_by! ], """filter the rows returned"""
where: clients_permissions_bool_exp): clients_permissions_aggregate! 
   contact_email: citext
   created_at: timestamptz
   currency: paypal_payment_currency! 
  """An array relationship"""
 events("""distinct select on columns"""
distinct_on: [events_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [events_order_by! ], """filter the rows returned"""
where: events_bool_exp): [events! ]! 
  """An aggregate relationship"""
 events_aggregate("""distinct select on columns"""
distinct_on: [events_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [events_order_by! ], """filter the rows returned"""
where: events_bool_exp): events_aggregate! 
   has_access_to_coms_report: Boolean! 
   lost_client_last_contacted: date
   lost_client_notes: String
   primary_contact_user_id: Int
   vat_code: vat_code! 
}

"""
aggregated selection of "clients"
"""
type clients_aggregate {
   aggregate: clients_aggregate_fields
   nodes: [clients! ]! 
}

"""
aggregate fields of "clients"
"""
type clients_aggregate_fields {
   avg: clients_avg_fields
   count(columns: [clients_select_column! ], distinct: Boolean): Int! 
   max: clients_max_fields
   min: clients_min_fields
   stddev: clients_stddev_fields
   stddev_pop: clients_stddev_pop_fields
   stddev_samp: clients_stddev_samp_fields
   sum: clients_sum_fields
   var_pop: clients_var_pop_fields
   var_samp: clients_var_samp_fields
   variance: clients_variance_fields
}

"""aggregate avg on columns"""
type clients_avg_fields {
  """A unique identifier for each client"""
 client_id: Float
   primary_contact_user_id: Float
}

"""
Boolean expression to filter rows from the table "clients". All fields are combined with a logical 'AND'.
"""
input clients_bool_exp {
  _and: [clients_bool_exp! ]
  _not: clients_bool_exp
  _or: [clients_bool_exp! ]
  can_purchase_own_events: Boolean_comparison_exp
  client_id: Int_comparison_exp
  client_name: String_comparison_exp
  clients_permissions: clients_permissions_bool_exp
  clients_permissions_aggregate: clients_permissions_aggregate_bool_exp
  contact_email: citext_comparison_exp
  created_at: timestamptz_comparison_exp
  currency: paypal_payment_currency_comparison_exp
  events: events_bool_exp
  events_aggregate: events_aggregate_bool_exp
  has_access_to_coms_report: Boolean_comparison_exp
  lost_client_last_contacted: date_comparison_exp
  lost_client_notes: String_comparison_exp
  primary_contact_user_id: Int_comparison_exp
  vat_code: vat_code_comparison_exp
}

"""
unique or primary key constraints on table "clients"
"""
enum clients_constraint {
  """
  unique or primary key constraint on columns "client_name"
  """
clients_client_name_key
  """
  unique or primary key constraint on columns "client_id"
  """
clients_pkey
}

"""
input type for incrementing numeric columns in table "clients"
"""
input clients_inc_input {
  """A unique identifier for each client"""
client_id: Int
  primary_contact_user_id: Int
}

"""
input type for inserting data into table "clients"
"""
input clients_insert_input {
  can_purchase_own_events: Boolean! 
  """A unique identifier for each client"""
client_id: Int! 
  client_name: String! 
  clients_permissions: clients_permissions_arr_rel_insert_input
  contact_email: citext
  created_at: timestamptz! 
  currency: paypal_payment_currency! 
  events: events_arr_rel_insert_input
  has_access_to_coms_report: Boolean! 
  lost_client_last_contacted: date
  lost_client_notes: String
  primary_contact_user_id: Int
  vat_code: vat_code! 
}

"""aggregate max on columns"""
type clients_max_fields {
  """A unique identifier for each client"""
 client_id: Int
   client_name: String
   contact_email: citext
   created_at: timestamptz
   currency: paypal_payment_currency
   lost_client_last_contacted: date
   lost_client_notes: String
   primary_contact_user_id: Int
   vat_code: vat_code
}

"""aggregate min on columns"""
type clients_min_fields {
  """A unique identifier for each client"""
 client_id: Int
   client_name: String
   contact_email: citext
   created_at: timestamptz
   currency: paypal_payment_currency
   lost_client_last_contacted: date
   lost_client_notes: String
   primary_contact_user_id: Int
   vat_code: vat_code
}

"""
response of any mutation on the table "clients"
"""
type clients_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [clients! ]! 
}

"""
input type for inserting object relation for remote table "clients"
"""
input clients_obj_rel_insert_input {
  data: clients_insert_input! 
  """upsert condition"""
on_conflict: clients_on_conflict
}

"""
on_conflict condition type for table "clients"
"""
input clients_on_conflict {
  constraint: clients_constraint! 
  update_columns: [clients_update_column! ]! 
  where: clients_bool_exp
}

"""Ordering options when selecting data from "clients"."""
input clients_order_by {
  can_purchase_own_events: order_by
  client_id: order_by
  client_name: order_by
  clients_permissions_aggregate: clients_permissions_aggregate_order_by
  contact_email: order_by
  created_at: order_by
  currency: order_by
  events_aggregate: events_aggregate_order_by
  has_access_to_coms_report: order_by
  lost_client_last_contacted: order_by
  lost_client_notes: order_by
  primary_contact_user_id: order_by
  vat_code: order_by
}

"""
columns and relationships of "clients_permissions"
"""
type clients_permissions {
  """An object relationship"""
 client: clients! 
   client_id: Int! 
   permissions: client_role! 
   registration_email: citext
   time_stamp: bigint! 
  """An object relationship"""
 user: users! 
   user_id: Int! 
}

"""
aggregated selection of "clients_permissions"
"""
type clients_permissions_aggregate {
   aggregate: clients_permissions_aggregate_fields
   nodes: [clients_permissions! ]! 
}

input clients_permissions_aggregate_bool_exp {
  count: clients_permissions_aggregate_bool_exp_count
}

input clients_permissions_aggregate_bool_exp_count {
  arguments: [clients_permissions_select_column! ]
  distinct: Boolean
  filter: clients_permissions_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "clients_permissions"
"""
type clients_permissions_aggregate_fields {
   avg: clients_permissions_avg_fields
   count(columns: [clients_permissions_select_column! ], distinct: Boolean): Int! 
   max: clients_permissions_max_fields
   min: clients_permissions_min_fields
   stddev: clients_permissions_stddev_fields
   stddev_pop: clients_permissions_stddev_pop_fields
   stddev_samp: clients_permissions_stddev_samp_fields
   sum: clients_permissions_sum_fields
   var_pop: clients_permissions_var_pop_fields
   var_samp: clients_permissions_var_samp_fields
   variance: clients_permissions_variance_fields
}

"""
order by aggregate values of table "clients_permissions"
"""
input clients_permissions_aggregate_order_by {
  avg: clients_permissions_avg_order_by
  count: order_by
  max: clients_permissions_max_order_by
  min: clients_permissions_min_order_by
  stddev: clients_permissions_stddev_order_by
  stddev_pop: clients_permissions_stddev_pop_order_by
  stddev_samp: clients_permissions_stddev_samp_order_by
  sum: clients_permissions_sum_order_by
  var_pop: clients_permissions_var_pop_order_by
  var_samp: clients_permissions_var_samp_order_by
  variance: clients_permissions_variance_order_by
}

"""
input type for inserting array relation for remote table "clients_permissions"
"""
input clients_permissions_arr_rel_insert_input {
  data: [clients_permissions_insert_input! ]! 
}

"""aggregate avg on columns"""
type clients_permissions_avg_fields {
   client_id: Float
   time_stamp: Float
   user_id: Float
}

"""
order by avg() on columns of table "clients_permissions"
"""
input clients_permissions_avg_order_by {
  client_id: order_by
  time_stamp: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "clients_permissions". All fields are combined with a logical 'AND'.
"""
input clients_permissions_bool_exp {
  _and: [clients_permissions_bool_exp! ]
  _not: clients_permissions_bool_exp
  _or: [clients_permissions_bool_exp! ]
  client: clients_bool_exp
  client_id: Int_comparison_exp
  permissions: client_role_comparison_exp
  registration_email: citext_comparison_exp
  time_stamp: bigint_comparison_exp
  user: users_bool_exp
  user_id: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "clients_permissions"
"""
input clients_permissions_inc_input {
  client_id: Int
  time_stamp: bigint
  user_id: Int
}

"""
input type for inserting data into table "clients_permissions"
"""
input clients_permissions_insert_input {
  client: clients_obj_rel_insert_input
  client_id: Int! 
  permissions: client_role! 
  registration_email: citext
  time_stamp: bigint! 
  user: users_obj_rel_insert_input
  user_id: Int! 
}

"""aggregate max on columns"""
type clients_permissions_max_fields {
   client_id: Int
   permissions: client_role
   registration_email: citext
   time_stamp: bigint
   user_id: Int
}

"""
order by max() on columns of table "clients_permissions"
"""
input clients_permissions_max_order_by {
  client_id: order_by
  permissions: order_by
  registration_email: order_by
  time_stamp: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type clients_permissions_min_fields {
   client_id: Int
   permissions: client_role
   registration_email: citext
   time_stamp: bigint
   user_id: Int
}

"""
order by min() on columns of table "clients_permissions"
"""
input clients_permissions_min_order_by {
  client_id: order_by
  permissions: order_by
  registration_email: order_by
  time_stamp: order_by
  user_id: order_by
}

"""
response of any mutation on the table "clients_permissions"
"""
type clients_permissions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [clients_permissions! ]! 
}

"""Ordering options when selecting data from "clients_permissions"."""
input clients_permissions_order_by {
  client: clients_order_by
  client_id: order_by
  permissions: order_by
  registration_email: order_by
  time_stamp: order_by
  user: users_order_by
  user_id: order_by
}

"""
select columns of table "clients_permissions"
"""
enum clients_permissions_select_column {
  """column name"""
client_id
  """column name"""
permissions
  """column name"""
registration_email
  """column name"""
time_stamp
  """column name"""
user_id
}

"""
input type for updating data in table "clients_permissions"
"""
input clients_permissions_set_input {
  client_id: Int
  permissions: client_role
  registration_email: citext
  time_stamp: bigint
  user_id: Int
}

"""aggregate stddev on columns"""
type clients_permissions_stddev_fields {
   client_id: Float
   time_stamp: Float
   user_id: Float
}

"""
order by stddev() on columns of table "clients_permissions"
"""
input clients_permissions_stddev_order_by {
  client_id: order_by
  time_stamp: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type clients_permissions_stddev_pop_fields {
   client_id: Float
   time_stamp: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "clients_permissions"
"""
input clients_permissions_stddev_pop_order_by {
  client_id: order_by
  time_stamp: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type clients_permissions_stddev_samp_fields {
   client_id: Float
   time_stamp: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "clients_permissions"
"""
input clients_permissions_stddev_samp_order_by {
  client_id: order_by
  time_stamp: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "clients_permissions"
"""
input clients_permissions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: clients_permissions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input clients_permissions_stream_cursor_value_input {
  client_id: Int
  permissions: client_role
  registration_email: citext
  time_stamp: bigint
  user_id: Int
}

"""aggregate sum on columns"""
type clients_permissions_sum_fields {
   client_id: Int
   time_stamp: bigint
   user_id: Int
}

"""
order by sum() on columns of table "clients_permissions"
"""
input clients_permissions_sum_order_by {
  client_id: order_by
  time_stamp: order_by
  user_id: order_by
}

input clients_permissions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: clients_permissions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: clients_permissions_set_input
  where: clients_permissions_bool_exp! 
}

"""aggregate var_pop on columns"""
type clients_permissions_var_pop_fields {
   client_id: Float
   time_stamp: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "clients_permissions"
"""
input clients_permissions_var_pop_order_by {
  client_id: order_by
  time_stamp: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type clients_permissions_var_samp_fields {
   client_id: Float
   time_stamp: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "clients_permissions"
"""
input clients_permissions_var_samp_order_by {
  client_id: order_by
  time_stamp: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type clients_permissions_variance_fields {
   client_id: Float
   time_stamp: Float
   user_id: Float
}

"""
order by variance() on columns of table "clients_permissions"
"""
input clients_permissions_variance_order_by {
  client_id: order_by
  time_stamp: order_by
  user_id: order_by
}

"""primary key columns input for table: clients"""
input clients_pk_columns_input {
  """A unique identifier for each client"""
client_id: Int! 
}

"""
select columns of table "clients"
"""
enum clients_select_column {
  """column name"""
can_purchase_own_events
  """column name"""
client_id
  """column name"""
client_name
  """column name"""
contact_email
  """column name"""
created_at
  """column name"""
currency
  """column name"""
has_access_to_coms_report
  """column name"""
lost_client_last_contacted
  """column name"""
lost_client_notes
  """column name"""
primary_contact_user_id
  """column name"""
vat_code
}

"""
input type for updating data in table "clients"
"""
input clients_set_input {
  can_purchase_own_events: Boolean
  """A unique identifier for each client"""
client_id: Int
  client_name: String
  contact_email: citext
  created_at: timestamptz
  currency: paypal_payment_currency
  has_access_to_coms_report: Boolean
  lost_client_last_contacted: date
  lost_client_notes: String
  primary_contact_user_id: Int
  vat_code: vat_code
}

"""aggregate stddev on columns"""
type clients_stddev_fields {
  """A unique identifier for each client"""
 client_id: Float
   primary_contact_user_id: Float
}

"""aggregate stddev_pop on columns"""
type clients_stddev_pop_fields {
  """A unique identifier for each client"""
 client_id: Float
   primary_contact_user_id: Float
}

"""aggregate stddev_samp on columns"""
type clients_stddev_samp_fields {
  """A unique identifier for each client"""
 client_id: Float
   primary_contact_user_id: Float
}

"""
Streaming cursor of the table "clients"
"""
input clients_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: clients_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input clients_stream_cursor_value_input {
  can_purchase_own_events: Boolean
  """A unique identifier for each client"""
client_id: Int
  client_name: String
  contact_email: citext
  created_at: timestamptz
  currency: paypal_payment_currency
  has_access_to_coms_report: Boolean
  lost_client_last_contacted: date
  lost_client_notes: String
  primary_contact_user_id: Int
  vat_code: vat_code
}

"""aggregate sum on columns"""
type clients_sum_fields {
  """A unique identifier for each client"""
 client_id: Int
   primary_contact_user_id: Int
}

"""
update columns of table "clients"
"""
enum clients_update_column {
  """column name"""
can_purchase_own_events
  """column name"""
client_id
  """column name"""
client_name
  """column name"""
contact_email
  """column name"""
created_at
  """column name"""
currency
  """column name"""
has_access_to_coms_report
  """column name"""
lost_client_last_contacted
  """column name"""
lost_client_notes
  """column name"""
primary_contact_user_id
  """column name"""
vat_code
}

input clients_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: clients_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: clients_set_input
  where: clients_bool_exp! 
}

"""aggregate var_pop on columns"""
type clients_var_pop_fields {
  """A unique identifier for each client"""
 client_id: Float
   primary_contact_user_id: Float
}

"""aggregate var_samp on columns"""
type clients_var_samp_fields {
  """A unique identifier for each client"""
 client_id: Float
   primary_contact_user_id: Float
}

"""aggregate variance on columns"""
type clients_variance_fields {
  """A unique identifier for each client"""
 client_id: Float
   primary_contact_user_id: Float
}

scalar colour_type 

"""
Boolean expression to compare columns of type "colour_type". All fields are combined with logical 'AND'.
"""
input colour_type_comparison_exp {
  _eq: colour_type
  _gt: colour_type
  _gte: colour_type
  _in: [colour_type! ]
  _is_null: Boolean
  _lt: colour_type
  _lte: colour_type
  _neq: colour_type
  _nin: [colour_type! ]
}

scalar column_headers_status 

"""
Boolean expression to compare columns of type "column_headers_status". All fields are combined with logical 'AND'.
"""
input column_headers_status_comparison_exp {
  _eq: column_headers_status
  _gt: column_headers_status
  _gte: column_headers_status
  _in: [column_headers_status! ]
  _is_null: Boolean
  _lt: column_headers_status
  _lte: column_headers_status
  _neq: column_headers_status
  _nin: [column_headers_status! ]
}

"""
columns and relationships of "combined_word_limits"
"""
type combined_word_limits {
   combined_word_limit: smallint
   combined_word_limit_id: Int! 
  """An array relationship"""
 questions("""distinct select on columns"""
distinct_on: [questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_order_by! ], """filter the rows returned"""
where: questions_bool_exp): [questions! ]! 
  """An aggregate relationship"""
 questions_aggregate("""distinct select on columns"""
distinct_on: [questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_order_by! ], """filter the rows returned"""
where: questions_bool_exp): questions_aggregate! 
}

"""
aggregated selection of "combined_word_limits"
"""
type combined_word_limits_aggregate {
   aggregate: combined_word_limits_aggregate_fields
   nodes: [combined_word_limits! ]! 
}

"""
aggregate fields of "combined_word_limits"
"""
type combined_word_limits_aggregate_fields {
   avg: combined_word_limits_avg_fields
   count(columns: [combined_word_limits_select_column! ], distinct: Boolean): Int! 
   max: combined_word_limits_max_fields
   min: combined_word_limits_min_fields
   stddev: combined_word_limits_stddev_fields
   stddev_pop: combined_word_limits_stddev_pop_fields
   stddev_samp: combined_word_limits_stddev_samp_fields
   sum: combined_word_limits_sum_fields
   var_pop: combined_word_limits_var_pop_fields
   var_samp: combined_word_limits_var_samp_fields
   variance: combined_word_limits_variance_fields
}

"""aggregate avg on columns"""
type combined_word_limits_avg_fields {
   combined_word_limit: Float
   combined_word_limit_id: Float
}

"""
Boolean expression to filter rows from the table "combined_word_limits". All fields are combined with a logical 'AND'.
"""
input combined_word_limits_bool_exp {
  _and: [combined_word_limits_bool_exp! ]
  _not: combined_word_limits_bool_exp
  _or: [combined_word_limits_bool_exp! ]
  combined_word_limit: smallint_comparison_exp
  combined_word_limit_id: Int_comparison_exp
  questions: questions_bool_exp
  questions_aggregate: questions_aggregate_bool_exp
}

"""
unique or primary key constraints on table "combined_word_limits"
"""
enum combined_word_limits_constraint {
  """
  unique or primary key constraint on columns "combined_word_limit_id"
  """
combined_word_limits_pkey
}

"""
input type for incrementing numeric columns in table "combined_word_limits"
"""
input combined_word_limits_inc_input {
  combined_word_limit: smallint
  combined_word_limit_id: Int
}

"""
input type for inserting data into table "combined_word_limits"
"""
input combined_word_limits_insert_input {
  combined_word_limit: smallint
  combined_word_limit_id: Int! 
  questions: questions_arr_rel_insert_input
}

"""aggregate max on columns"""
type combined_word_limits_max_fields {
   combined_word_limit: smallint
   combined_word_limit_id: Int
}

"""aggregate min on columns"""
type combined_word_limits_min_fields {
   combined_word_limit: smallint
   combined_word_limit_id: Int
}

"""
response of any mutation on the table "combined_word_limits"
"""
type combined_word_limits_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [combined_word_limits! ]! 
}

"""
on_conflict condition type for table "combined_word_limits"
"""
input combined_word_limits_on_conflict {
  constraint: combined_word_limits_constraint! 
  update_columns: [combined_word_limits_update_column! ]! 
  where: combined_word_limits_bool_exp
}

"""Ordering options when selecting data from "combined_word_limits"."""
input combined_word_limits_order_by {
  combined_word_limit: order_by
  combined_word_limit_id: order_by
  questions_aggregate: questions_aggregate_order_by
}

"""primary key columns input for table: combined_word_limits"""
input combined_word_limits_pk_columns_input {
  combined_word_limit_id: Int! 
}

"""
select columns of table "combined_word_limits"
"""
enum combined_word_limits_select_column {
  """column name"""
combined_word_limit
  """column name"""
combined_word_limit_id
}

"""
input type for updating data in table "combined_word_limits"
"""
input combined_word_limits_set_input {
  combined_word_limit: smallint
  combined_word_limit_id: Int
}

"""aggregate stddev on columns"""
type combined_word_limits_stddev_fields {
   combined_word_limit: Float
   combined_word_limit_id: Float
}

"""aggregate stddev_pop on columns"""
type combined_word_limits_stddev_pop_fields {
   combined_word_limit: Float
   combined_word_limit_id: Float
}

"""aggregate stddev_samp on columns"""
type combined_word_limits_stddev_samp_fields {
   combined_word_limit: Float
   combined_word_limit_id: Float
}

"""
Streaming cursor of the table "combined_word_limits"
"""
input combined_word_limits_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: combined_word_limits_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input combined_word_limits_stream_cursor_value_input {
  combined_word_limit: smallint
  combined_word_limit_id: Int
}

"""aggregate sum on columns"""
type combined_word_limits_sum_fields {
   combined_word_limit: smallint
   combined_word_limit_id: Int
}

"""
update columns of table "combined_word_limits"
"""
enum combined_word_limits_update_column {
  """column name"""
combined_word_limit
  """column name"""
combined_word_limit_id
}

input combined_word_limits_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: combined_word_limits_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: combined_word_limits_set_input
  where: combined_word_limits_bool_exp! 
}

"""aggregate var_pop on columns"""
type combined_word_limits_var_pop_fields {
   combined_word_limit: Float
   combined_word_limit_id: Float
}

"""aggregate var_samp on columns"""
type combined_word_limits_var_samp_fields {
   combined_word_limit: Float
   combined_word_limit_id: Float
}

"""aggregate variance on columns"""
type combined_word_limits_variance_fields {
   combined_word_limit: Float
   combined_word_limit_id: Float
}

"""ordering argument of a cursor"""
enum cursor_ordering {
  """ascending ordering of the cursor"""
ASC
  """descending ordering of the cursor"""
DESC
}

"""
columns and relationships of "custom_logs"
"""
type custom_logs {
   created_at: timestamptz
   custom_log_id: Int! 
   event_id: Int
   log: String! 
   time_stamp: bigint! 
}

"""
aggregated selection of "custom_logs"
"""
type custom_logs_aggregate {
   aggregate: custom_logs_aggregate_fields
   nodes: [custom_logs! ]! 
}

"""
aggregate fields of "custom_logs"
"""
type custom_logs_aggregate_fields {
   avg: custom_logs_avg_fields
   count(columns: [custom_logs_select_column! ], distinct: Boolean): Int! 
   max: custom_logs_max_fields
   min: custom_logs_min_fields
   stddev: custom_logs_stddev_fields
   stddev_pop: custom_logs_stddev_pop_fields
   stddev_samp: custom_logs_stddev_samp_fields
   sum: custom_logs_sum_fields
   var_pop: custom_logs_var_pop_fields
   var_samp: custom_logs_var_samp_fields
   variance: custom_logs_variance_fields
}

"""aggregate avg on columns"""
type custom_logs_avg_fields {
   custom_log_id: Float
   event_id: Float
   time_stamp: Float
}

"""
Boolean expression to filter rows from the table "custom_logs". All fields are combined with a logical 'AND'.
"""
input custom_logs_bool_exp {
  _and: [custom_logs_bool_exp! ]
  _not: custom_logs_bool_exp
  _or: [custom_logs_bool_exp! ]
  created_at: timestamptz_comparison_exp
  custom_log_id: Int_comparison_exp
  event_id: Int_comparison_exp
  log: String_comparison_exp
  time_stamp: bigint_comparison_exp
}

"""
unique or primary key constraints on table "custom_logs"
"""
enum custom_logs_constraint {
  """
  unique or primary key constraint on columns "custom_log_id"
  """
custom_logs_pkey
}

"""
input type for incrementing numeric columns in table "custom_logs"
"""
input custom_logs_inc_input {
  custom_log_id: Int
  event_id: Int
  time_stamp: bigint
}

"""
input type for inserting data into table "custom_logs"
"""
input custom_logs_insert_input {
  created_at: timestamptz! 
  custom_log_id: Int! 
  event_id: Int
  log: String! 
  time_stamp: bigint! 
}

"""aggregate max on columns"""
type custom_logs_max_fields {
   created_at: timestamptz
   custom_log_id: Int
   event_id: Int
   log: String
   time_stamp: bigint
}

"""aggregate min on columns"""
type custom_logs_min_fields {
   created_at: timestamptz
   custom_log_id: Int
   event_id: Int
   log: String
   time_stamp: bigint
}

"""
response of any mutation on the table "custom_logs"
"""
type custom_logs_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [custom_logs! ]! 
}

"""
on_conflict condition type for table "custom_logs"
"""
input custom_logs_on_conflict {
  constraint: custom_logs_constraint! 
  update_columns: [custom_logs_update_column! ]! 
  where: custom_logs_bool_exp
}

"""Ordering options when selecting data from "custom_logs"."""
input custom_logs_order_by {
  created_at: order_by
  custom_log_id: order_by
  event_id: order_by
  log: order_by
  time_stamp: order_by
}

"""primary key columns input for table: custom_logs"""
input custom_logs_pk_columns_input {
  custom_log_id: Int! 
}

"""
select columns of table "custom_logs"
"""
enum custom_logs_select_column {
  """column name"""
created_at
  """column name"""
custom_log_id
  """column name"""
event_id
  """column name"""
log
  """column name"""
time_stamp
}

"""
input type for updating data in table "custom_logs"
"""
input custom_logs_set_input {
  created_at: timestamptz
  custom_log_id: Int
  event_id: Int
  log: String
  time_stamp: bigint
}

"""aggregate stddev on columns"""
type custom_logs_stddev_fields {
   custom_log_id: Float
   event_id: Float
   time_stamp: Float
}

"""aggregate stddev_pop on columns"""
type custom_logs_stddev_pop_fields {
   custom_log_id: Float
   event_id: Float
   time_stamp: Float
}

"""aggregate stddev_samp on columns"""
type custom_logs_stddev_samp_fields {
   custom_log_id: Float
   event_id: Float
   time_stamp: Float
}

"""
Streaming cursor of the table "custom_logs"
"""
input custom_logs_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: custom_logs_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input custom_logs_stream_cursor_value_input {
  created_at: timestamptz
  custom_log_id: Int
  event_id: Int
  log: String
  time_stamp: bigint
}

"""aggregate sum on columns"""
type custom_logs_sum_fields {
   custom_log_id: Int
   event_id: Int
   time_stamp: bigint
}

"""
update columns of table "custom_logs"
"""
enum custom_logs_update_column {
  """column name"""
created_at
  """column name"""
custom_log_id
  """column name"""
event_id
  """column name"""
log
  """column name"""
time_stamp
}

input custom_logs_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: custom_logs_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: custom_logs_set_input
  where: custom_logs_bool_exp! 
}

"""aggregate var_pop on columns"""
type custom_logs_var_pop_fields {
   custom_log_id: Float
   event_id: Float
   time_stamp: Float
}

"""aggregate var_samp on columns"""
type custom_logs_var_samp_fields {
   custom_log_id: Float
   event_id: Float
   time_stamp: Float
}

"""aggregate variance on columns"""
type custom_logs_variance_fields {
   custom_log_id: Float
   event_id: Float
   time_stamp: Float
}

scalar date 

"""
Boolean expression to compare columns of type "date". All fields are combined with logical 'AND'.
"""
input date_comparison_exp {
  _eq: date
  _gt: date
  _gte: date
  _in: [date! ]
  _is_null: Boolean
  _lt: date
  _lte: date
  _neq: date
  _nin: [date! ]
}

scalar decision 

"""
Boolean expression to compare columns of type "decision". All fields are combined with logical 'AND'.
"""
input decision_comparison_exp {
  _eq: decision
  _gt: decision
  _gte: decision
  _in: [decision! ]
  _is_null: Boolean
  _lt: decision
  _lte: decision
  _neq: decision
  _nin: [decision! ]
}

scalar decision_question_data_types 

"""
Boolean expression to compare columns of type "decision_question_data_types". All fields are combined with logical 'AND'.
"""
input decision_question_data_types_comparison_exp {
  _eq: decision_question_data_types
  _gt: decision_question_data_types
  _gte: decision_question_data_types
  _in: [decision_question_data_types! ]
  _is_null: Boolean
  _lt: decision_question_data_types
  _lte: decision_question_data_types
  _neq: decision_question_data_types
  _nin: [decision_question_data_types! ]
}

"""
columns and relationships of "decision_question_responses"
"""
type decision_question_responses {
  """An object relationship"""
 decision: decisions! 
   decision_id: Int! 
  """An object relationship"""
 decision_question: decision_questions! 
   decision_question_id: Int! 
   decision_question_response_id: Int! 
   decision_response: String
   fe_epoch: bigint
   time_stamp: bigint! 
}

"""
aggregated selection of "decision_question_responses"
"""
type decision_question_responses_aggregate {
   aggregate: decision_question_responses_aggregate_fields
   nodes: [decision_question_responses! ]! 
}

input decision_question_responses_aggregate_bool_exp {
  count: decision_question_responses_aggregate_bool_exp_count
}

input decision_question_responses_aggregate_bool_exp_count {
  arguments: [decision_question_responses_select_column! ]
  distinct: Boolean
  filter: decision_question_responses_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "decision_question_responses"
"""
type decision_question_responses_aggregate_fields {
   avg: decision_question_responses_avg_fields
   count(columns: [decision_question_responses_select_column! ], distinct: Boolean): Int! 
   max: decision_question_responses_max_fields
   min: decision_question_responses_min_fields
   stddev: decision_question_responses_stddev_fields
   stddev_pop: decision_question_responses_stddev_pop_fields
   stddev_samp: decision_question_responses_stddev_samp_fields
   sum: decision_question_responses_sum_fields
   var_pop: decision_question_responses_var_pop_fields
   var_samp: decision_question_responses_var_samp_fields
   variance: decision_question_responses_variance_fields
}

"""
order by aggregate values of table "decision_question_responses"
"""
input decision_question_responses_aggregate_order_by {
  avg: decision_question_responses_avg_order_by
  count: order_by
  max: decision_question_responses_max_order_by
  min: decision_question_responses_min_order_by
  stddev: decision_question_responses_stddev_order_by
  stddev_pop: decision_question_responses_stddev_pop_order_by
  stddev_samp: decision_question_responses_stddev_samp_order_by
  sum: decision_question_responses_sum_order_by
  var_pop: decision_question_responses_var_pop_order_by
  var_samp: decision_question_responses_var_samp_order_by
  variance: decision_question_responses_variance_order_by
}

"""
input type for inserting array relation for remote table "decision_question_responses"
"""
input decision_question_responses_arr_rel_insert_input {
  data: [decision_question_responses_insert_input! ]! 
  """upsert condition"""
on_conflict: decision_question_responses_on_conflict
}

"""aggregate avg on columns"""
type decision_question_responses_avg_fields {
   decision_id: Float
   decision_question_id: Float
   decision_question_response_id: Float
   fe_epoch: Float
   time_stamp: Float
}

"""
order by avg() on columns of table "decision_question_responses"
"""
input decision_question_responses_avg_order_by {
  decision_id: order_by
  decision_question_id: order_by
  decision_question_response_id: order_by
  fe_epoch: order_by
  time_stamp: order_by
}

"""
Boolean expression to filter rows from the table "decision_question_responses". All fields are combined with a logical 'AND'.
"""
input decision_question_responses_bool_exp {
  _and: [decision_question_responses_bool_exp! ]
  _not: decision_question_responses_bool_exp
  _or: [decision_question_responses_bool_exp! ]
  decision: decisions_bool_exp
  decision_id: Int_comparison_exp
  decision_question: decision_questions_bool_exp
  decision_question_id: Int_comparison_exp
  decision_question_response_id: Int_comparison_exp
  decision_response: String_comparison_exp
  fe_epoch: bigint_comparison_exp
  time_stamp: bigint_comparison_exp
}

"""
unique or primary key constraints on table "decision_question_responses"
"""
enum decision_question_responses_constraint {
  """
  unique or primary key constraint on columns "decision_id", "decision_question_id"
  """
decision_question_responses_decision_question_id_decision_id_ke
  """
  unique or primary key constraint on columns "decision_question_response_id"
  """
decision_question_responses_pkey
}

"""
input type for incrementing numeric columns in table "decision_question_responses"
"""
input decision_question_responses_inc_input {
  decision_id: Int
  decision_question_id: Int
  decision_question_response_id: Int
  fe_epoch: bigint
  time_stamp: bigint
}

"""
input type for inserting data into table "decision_question_responses"
"""
input decision_question_responses_insert_input {
  decision: decisions_obj_rel_insert_input
  decision_id: Int! 
  decision_question: decision_questions_obj_rel_insert_input
  decision_question_id: Int! 
  decision_question_response_id: Int! 
  decision_response: String
  fe_epoch: bigint
  time_stamp: bigint! 
}

"""aggregate max on columns"""
type decision_question_responses_max_fields {
   decision_id: Int
   decision_question_id: Int
   decision_question_response_id: Int
   decision_response: String
   fe_epoch: bigint
   time_stamp: bigint
}

"""
order by max() on columns of table "decision_question_responses"
"""
input decision_question_responses_max_order_by {
  decision_id: order_by
  decision_question_id: order_by
  decision_question_response_id: order_by
  decision_response: order_by
  fe_epoch: order_by
  time_stamp: order_by
}

"""aggregate min on columns"""
type decision_question_responses_min_fields {
   decision_id: Int
   decision_question_id: Int
   decision_question_response_id: Int
   decision_response: String
   fe_epoch: bigint
   time_stamp: bigint
}

"""
order by min() on columns of table "decision_question_responses"
"""
input decision_question_responses_min_order_by {
  decision_id: order_by
  decision_question_id: order_by
  decision_question_response_id: order_by
  decision_response: order_by
  fe_epoch: order_by
  time_stamp: order_by
}

"""
response of any mutation on the table "decision_question_responses"
"""
type decision_question_responses_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [decision_question_responses! ]! 
}

"""
on_conflict condition type for table "decision_question_responses"
"""
input decision_question_responses_on_conflict {
  constraint: decision_question_responses_constraint! 
  update_columns: [decision_question_responses_update_column! ]! 
  where: decision_question_responses_bool_exp
}

"""
Ordering options when selecting data from "decision_question_responses".
"""
input decision_question_responses_order_by {
  decision: decisions_order_by
  decision_id: order_by
  decision_question: decision_questions_order_by
  decision_question_id: order_by
  decision_question_response_id: order_by
  decision_response: order_by
  fe_epoch: order_by
  time_stamp: order_by
}

"""primary key columns input for table: decision_question_responses"""
input decision_question_responses_pk_columns_input {
  decision_question_response_id: Int! 
}

"""
select columns of table "decision_question_responses"
"""
enum decision_question_responses_select_column {
  """column name"""
decision_id
  """column name"""
decision_question_id
  """column name"""
decision_question_response_id
  """column name"""
decision_response
  """column name"""
fe_epoch
  """column name"""
time_stamp
}

"""
input type for updating data in table "decision_question_responses"
"""
input decision_question_responses_set_input {
  decision_id: Int
  decision_question_id: Int
  decision_question_response_id: Int
  decision_response: String
  fe_epoch: bigint
  time_stamp: bigint
}

"""aggregate stddev on columns"""
type decision_question_responses_stddev_fields {
   decision_id: Float
   decision_question_id: Float
   decision_question_response_id: Float
   fe_epoch: Float
   time_stamp: Float
}

"""
order by stddev() on columns of table "decision_question_responses"
"""
input decision_question_responses_stddev_order_by {
  decision_id: order_by
  decision_question_id: order_by
  decision_question_response_id: order_by
  fe_epoch: order_by
  time_stamp: order_by
}

"""aggregate stddev_pop on columns"""
type decision_question_responses_stddev_pop_fields {
   decision_id: Float
   decision_question_id: Float
   decision_question_response_id: Float
   fe_epoch: Float
   time_stamp: Float
}

"""
order by stddev_pop() on columns of table "decision_question_responses"
"""
input decision_question_responses_stddev_pop_order_by {
  decision_id: order_by
  decision_question_id: order_by
  decision_question_response_id: order_by
  fe_epoch: order_by
  time_stamp: order_by
}

"""aggregate stddev_samp on columns"""
type decision_question_responses_stddev_samp_fields {
   decision_id: Float
   decision_question_id: Float
   decision_question_response_id: Float
   fe_epoch: Float
   time_stamp: Float
}

"""
order by stddev_samp() on columns of table "decision_question_responses"
"""
input decision_question_responses_stddev_samp_order_by {
  decision_id: order_by
  decision_question_id: order_by
  decision_question_response_id: order_by
  fe_epoch: order_by
  time_stamp: order_by
}

"""
Streaming cursor of the table "decision_question_responses"
"""
input decision_question_responses_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: decision_question_responses_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input decision_question_responses_stream_cursor_value_input {
  decision_id: Int
  decision_question_id: Int
  decision_question_response_id: Int
  decision_response: String
  fe_epoch: bigint
  time_stamp: bigint
}

"""aggregate sum on columns"""
type decision_question_responses_sum_fields {
   decision_id: Int
   decision_question_id: Int
   decision_question_response_id: Int
   fe_epoch: bigint
   time_stamp: bigint
}

"""
order by sum() on columns of table "decision_question_responses"
"""
input decision_question_responses_sum_order_by {
  decision_id: order_by
  decision_question_id: order_by
  decision_question_response_id: order_by
  fe_epoch: order_by
  time_stamp: order_by
}

"""
update columns of table "decision_question_responses"
"""
enum decision_question_responses_update_column {
  """column name"""
decision_id
  """column name"""
decision_question_id
  """column name"""
decision_question_response_id
  """column name"""
decision_response
  """column name"""
fe_epoch
  """column name"""
time_stamp
}

input decision_question_responses_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: decision_question_responses_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: decision_question_responses_set_input
  where: decision_question_responses_bool_exp! 
}

"""aggregate var_pop on columns"""
type decision_question_responses_var_pop_fields {
   decision_id: Float
   decision_question_id: Float
   decision_question_response_id: Float
   fe_epoch: Float
   time_stamp: Float
}

"""
order by var_pop() on columns of table "decision_question_responses"
"""
input decision_question_responses_var_pop_order_by {
  decision_id: order_by
  decision_question_id: order_by
  decision_question_response_id: order_by
  fe_epoch: order_by
  time_stamp: order_by
}

"""aggregate var_samp on columns"""
type decision_question_responses_var_samp_fields {
   decision_id: Float
   decision_question_id: Float
   decision_question_response_id: Float
   fe_epoch: Float
   time_stamp: Float
}

"""
order by var_samp() on columns of table "decision_question_responses"
"""
input decision_question_responses_var_samp_order_by {
  decision_id: order_by
  decision_question_id: order_by
  decision_question_response_id: order_by
  fe_epoch: order_by
  time_stamp: order_by
}

"""aggregate variance on columns"""
type decision_question_responses_variance_fields {
   decision_id: Float
   decision_question_id: Float
   decision_question_response_id: Float
   fe_epoch: Float
   time_stamp: Float
}

"""
order by variance() on columns of table "decision_question_responses"
"""
input decision_question_responses_variance_order_by {
  decision_id: order_by
  decision_question_id: order_by
  decision_question_response_id: order_by
  fe_epoch: order_by
  time_stamp: order_by
}

"""
columns and relationships of "decision_questions"
"""
type decision_questions {
   api_name: String
   archived: Boolean! 
   committee_member_visibility: Boolean! 
   committee_members_can_edit: Boolean! 
   data_type: decision_question_data_types
   decision_question_description: String
   decision_question_id: Int! 
   decision_question_name: String! 
   event_id: Int! 
   is_acceptance_type: Boolean! 
   is_categories: Boolean! 
   is_decision: Boolean! 
   is_notes_to_submitter: Boolean! 
   is_paid: Boolean! 
   options: _text
   order_of_questions: Int
   time_stamp: bigint! 
}

"""
aggregated selection of "decision_questions"
"""
type decision_questions_aggregate {
   aggregate: decision_questions_aggregate_fields
   nodes: [decision_questions! ]! 
}

input decision_questions_aggregate_bool_exp {
  bool_and: decision_questions_aggregate_bool_exp_bool_and
  bool_or: decision_questions_aggregate_bool_exp_bool_or
  count: decision_questions_aggregate_bool_exp_count
}

input decision_questions_aggregate_bool_exp_bool_and {
  arguments: decision_questions_select_column_decision_questions_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: decision_questions_bool_exp
  predicate: Boolean_comparison_exp! 
}

input decision_questions_aggregate_bool_exp_bool_or {
  arguments: decision_questions_select_column_decision_questions_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: decision_questions_bool_exp
  predicate: Boolean_comparison_exp! 
}

input decision_questions_aggregate_bool_exp_count {
  arguments: [decision_questions_select_column! ]
  distinct: Boolean
  filter: decision_questions_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "decision_questions"
"""
type decision_questions_aggregate_fields {
   avg: decision_questions_avg_fields
   count(columns: [decision_questions_select_column! ], distinct: Boolean): Int! 
   max: decision_questions_max_fields
   min: decision_questions_min_fields
   stddev: decision_questions_stddev_fields
   stddev_pop: decision_questions_stddev_pop_fields
   stddev_samp: decision_questions_stddev_samp_fields
   sum: decision_questions_sum_fields
   var_pop: decision_questions_var_pop_fields
   var_samp: decision_questions_var_samp_fields
   variance: decision_questions_variance_fields
}

"""
order by aggregate values of table "decision_questions"
"""
input decision_questions_aggregate_order_by {
  avg: decision_questions_avg_order_by
  count: order_by
  max: decision_questions_max_order_by
  min: decision_questions_min_order_by
  stddev: decision_questions_stddev_order_by
  stddev_pop: decision_questions_stddev_pop_order_by
  stddev_samp: decision_questions_stddev_samp_order_by
  sum: decision_questions_sum_order_by
  var_pop: decision_questions_var_pop_order_by
  var_samp: decision_questions_var_samp_order_by
  variance: decision_questions_variance_order_by
}

"""
input type for inserting array relation for remote table "decision_questions"
"""
input decision_questions_arr_rel_insert_input {
  data: [decision_questions_insert_input! ]! 
  """upsert condition"""
on_conflict: decision_questions_on_conflict
}

"""aggregate avg on columns"""
type decision_questions_avg_fields {
   decision_question_id: Float
   event_id: Float
   order_of_questions: Float
   time_stamp: Float
}

"""
order by avg() on columns of table "decision_questions"
"""
input decision_questions_avg_order_by {
  decision_question_id: order_by
  event_id: order_by
  order_of_questions: order_by
  time_stamp: order_by
}

"""
Boolean expression to filter rows from the table "decision_questions". All fields are combined with a logical 'AND'.
"""
input decision_questions_bool_exp {
  _and: [decision_questions_bool_exp! ]
  _not: decision_questions_bool_exp
  _or: [decision_questions_bool_exp! ]
  api_name: String_comparison_exp
  archived: Boolean_comparison_exp
  committee_member_visibility: Boolean_comparison_exp
  committee_members_can_edit: Boolean_comparison_exp
  data_type: decision_question_data_types_comparison_exp
  decision_question_description: String_comparison_exp
  decision_question_id: Int_comparison_exp
  decision_question_name: String_comparison_exp
  event_id: Int_comparison_exp
  is_acceptance_type: Boolean_comparison_exp
  is_categories: Boolean_comparison_exp
  is_decision: Boolean_comparison_exp
  is_notes_to_submitter: Boolean_comparison_exp
  is_paid: Boolean_comparison_exp
  options: _text_comparison_exp
  order_of_questions: Int_comparison_exp
  time_stamp: bigint_comparison_exp
}

"""
unique or primary key constraints on table "decision_questions"
"""
enum decision_questions_constraint {
  """
  unique or primary key constraint on columns "decision_question_id"
  """
decision_questions_pkey
}

"""
input type for incrementing numeric columns in table "decision_questions"
"""
input decision_questions_inc_input {
  decision_question_id: Int
  event_id: Int
  order_of_questions: Int
  time_stamp: bigint
}

"""
input type for inserting data into table "decision_questions"
"""
input decision_questions_insert_input {
  api_name: String
  archived: Boolean! 
  committee_member_visibility: Boolean! 
  committee_members_can_edit: Boolean! 
  data_type: decision_question_data_types
  decision_question_description: String
  decision_question_id: Int! 
  decision_question_name: String! 
  event_id: Int! 
  is_acceptance_type: Boolean! 
  is_categories: Boolean! 
  is_decision: Boolean! 
  is_notes_to_submitter: Boolean! 
  is_paid: Boolean! 
  options: _text
  order_of_questions: Int
  time_stamp: bigint! 
}

"""aggregate max on columns"""
type decision_questions_max_fields {
   api_name: String
   data_type: decision_question_data_types
   decision_question_description: String
   decision_question_id: Int
   decision_question_name: String
   event_id: Int
   order_of_questions: Int
   time_stamp: bigint
}

"""
order by max() on columns of table "decision_questions"
"""
input decision_questions_max_order_by {
  api_name: order_by
  data_type: order_by
  decision_question_description: order_by
  decision_question_id: order_by
  decision_question_name: order_by
  event_id: order_by
  order_of_questions: order_by
  time_stamp: order_by
}

"""aggregate min on columns"""
type decision_questions_min_fields {
   api_name: String
   data_type: decision_question_data_types
   decision_question_description: String
   decision_question_id: Int
   decision_question_name: String
   event_id: Int
   order_of_questions: Int
   time_stamp: bigint
}

"""
order by min() on columns of table "decision_questions"
"""
input decision_questions_min_order_by {
  api_name: order_by
  data_type: order_by
  decision_question_description: order_by
  decision_question_id: order_by
  decision_question_name: order_by
  event_id: order_by
  order_of_questions: order_by
  time_stamp: order_by
}

"""
response of any mutation on the table "decision_questions"
"""
type decision_questions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [decision_questions! ]! 
}

"""
input type for inserting object relation for remote table "decision_questions"
"""
input decision_questions_obj_rel_insert_input {
  data: decision_questions_insert_input! 
  """upsert condition"""
on_conflict: decision_questions_on_conflict
}

"""
on_conflict condition type for table "decision_questions"
"""
input decision_questions_on_conflict {
  constraint: decision_questions_constraint! 
  update_columns: [decision_questions_update_column! ]! 
  where: decision_questions_bool_exp
}

"""Ordering options when selecting data from "decision_questions"."""
input decision_questions_order_by {
  api_name: order_by
  archived: order_by
  committee_member_visibility: order_by
  committee_members_can_edit: order_by
  data_type: order_by
  decision_question_description: order_by
  decision_question_id: order_by
  decision_question_name: order_by
  event_id: order_by
  is_acceptance_type: order_by
  is_categories: order_by
  is_decision: order_by
  is_notes_to_submitter: order_by
  is_paid: order_by
  options: order_by
  order_of_questions: order_by
  time_stamp: order_by
}

"""primary key columns input for table: decision_questions"""
input decision_questions_pk_columns_input {
  decision_question_id: Int! 
}

"""
select columns of table "decision_questions"
"""
enum decision_questions_select_column {
  """column name"""
api_name
  """column name"""
archived
  """column name"""
committee_member_visibility
  """column name"""
committee_members_can_edit
  """column name"""
data_type
  """column name"""
decision_question_description
  """column name"""
decision_question_id
  """column name"""
decision_question_name
  """column name"""
event_id
  """column name"""
is_acceptance_type
  """column name"""
is_categories
  """column name"""
is_decision
  """column name"""
is_notes_to_submitter
  """column name"""
is_paid
  """column name"""
options
  """column name"""
order_of_questions
  """column name"""
time_stamp
}

"""
select "decision_questions_aggregate_bool_exp_bool_and_arguments_columns" columns of table "decision_questions"
"""
enum decision_questions_select_column_decision_questions_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
archived
  """column name"""
committee_member_visibility
  """column name"""
committee_members_can_edit
  """column name"""
is_acceptance_type
  """column name"""
is_categories
  """column name"""
is_decision
  """column name"""
is_notes_to_submitter
  """column name"""
is_paid
}

"""
select "decision_questions_aggregate_bool_exp_bool_or_arguments_columns" columns of table "decision_questions"
"""
enum decision_questions_select_column_decision_questions_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
archived
  """column name"""
committee_member_visibility
  """column name"""
committee_members_can_edit
  """column name"""
is_acceptance_type
  """column name"""
is_categories
  """column name"""
is_decision
  """column name"""
is_notes_to_submitter
  """column name"""
is_paid
}

"""
input type for updating data in table "decision_questions"
"""
input decision_questions_set_input {
  api_name: String
  archived: Boolean
  committee_member_visibility: Boolean
  committee_members_can_edit: Boolean
  data_type: decision_question_data_types
  decision_question_description: String
  decision_question_id: Int
  decision_question_name: String
  event_id: Int
  is_acceptance_type: Boolean
  is_categories: Boolean
  is_decision: Boolean
  is_notes_to_submitter: Boolean
  is_paid: Boolean
  options: _text
  order_of_questions: Int
  time_stamp: bigint
}

"""aggregate stddev on columns"""
type decision_questions_stddev_fields {
   decision_question_id: Float
   event_id: Float
   order_of_questions: Float
   time_stamp: Float
}

"""
order by stddev() on columns of table "decision_questions"
"""
input decision_questions_stddev_order_by {
  decision_question_id: order_by
  event_id: order_by
  order_of_questions: order_by
  time_stamp: order_by
}

"""aggregate stddev_pop on columns"""
type decision_questions_stddev_pop_fields {
   decision_question_id: Float
   event_id: Float
   order_of_questions: Float
   time_stamp: Float
}

"""
order by stddev_pop() on columns of table "decision_questions"
"""
input decision_questions_stddev_pop_order_by {
  decision_question_id: order_by
  event_id: order_by
  order_of_questions: order_by
  time_stamp: order_by
}

"""aggregate stddev_samp on columns"""
type decision_questions_stddev_samp_fields {
   decision_question_id: Float
   event_id: Float
   order_of_questions: Float
   time_stamp: Float
}

"""
order by stddev_samp() on columns of table "decision_questions"
"""
input decision_questions_stddev_samp_order_by {
  decision_question_id: order_by
  event_id: order_by
  order_of_questions: order_by
  time_stamp: order_by
}

"""
Streaming cursor of the table "decision_questions"
"""
input decision_questions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: decision_questions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input decision_questions_stream_cursor_value_input {
  api_name: String
  archived: Boolean
  committee_member_visibility: Boolean
  committee_members_can_edit: Boolean
  data_type: decision_question_data_types
  decision_question_description: String
  decision_question_id: Int
  decision_question_name: String
  event_id: Int
  is_acceptance_type: Boolean
  is_categories: Boolean
  is_decision: Boolean
  is_notes_to_submitter: Boolean
  is_paid: Boolean
  options: _text
  order_of_questions: Int
  time_stamp: bigint
}

"""aggregate sum on columns"""
type decision_questions_sum_fields {
   decision_question_id: Int
   event_id: Int
   order_of_questions: Int
   time_stamp: bigint
}

"""
order by sum() on columns of table "decision_questions"
"""
input decision_questions_sum_order_by {
  decision_question_id: order_by
  event_id: order_by
  order_of_questions: order_by
  time_stamp: order_by
}

"""
update columns of table "decision_questions"
"""
enum decision_questions_update_column {
  """column name"""
api_name
  """column name"""
archived
  """column name"""
committee_member_visibility
  """column name"""
committee_members_can_edit
  """column name"""
data_type
  """column name"""
decision_question_description
  """column name"""
decision_question_id
  """column name"""
decision_question_name
  """column name"""
event_id
  """column name"""
is_acceptance_type
  """column name"""
is_categories
  """column name"""
is_decision
  """column name"""
is_notes_to_submitter
  """column name"""
is_paid
  """column name"""
options
  """column name"""
order_of_questions
  """column name"""
time_stamp
}

input decision_questions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: decision_questions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: decision_questions_set_input
  where: decision_questions_bool_exp! 
}

"""aggregate var_pop on columns"""
type decision_questions_var_pop_fields {
   decision_question_id: Float
   event_id: Float
   order_of_questions: Float
   time_stamp: Float
}

"""
order by var_pop() on columns of table "decision_questions"
"""
input decision_questions_var_pop_order_by {
  decision_question_id: order_by
  event_id: order_by
  order_of_questions: order_by
  time_stamp: order_by
}

"""aggregate var_samp on columns"""
type decision_questions_var_samp_fields {
   decision_question_id: Float
   event_id: Float
   order_of_questions: Float
   time_stamp: Float
}

"""
order by var_samp() on columns of table "decision_questions"
"""
input decision_questions_var_samp_order_by {
  decision_question_id: order_by
  event_id: order_by
  order_of_questions: order_by
  time_stamp: order_by
}

"""aggregate variance on columns"""
type decision_questions_variance_fields {
   decision_question_id: Float
   event_id: Float
   order_of_questions: Float
   time_stamp: Float
}

"""
order by variance() on columns of table "decision_questions"
"""
input decision_questions_variance_order_by {
  decision_question_id: order_by
  event_id: order_by
  order_of_questions: order_by
  time_stamp: order_by
}

"""
columns and relationships of "decisions"
"""
type decisions {
   committee_member_user_id: Int
   decision_id: Int! 
  """An array relationship"""
 decision_question_responses("""distinct select on columns"""
distinct_on: [decision_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [decision_question_responses_order_by! ], """filter the rows returned"""
where: decision_question_responses_bool_exp): [decision_question_responses! ]! 
  """An aggregate relationship"""
 decision_question_responses_aggregate("""distinct select on columns"""
distinct_on: [decision_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [decision_question_responses_order_by! ], """filter the rows returned"""
where: decision_question_responses_bool_exp): decision_question_responses_aggregate! 
   last_updated: timestamp
   last_updated_by: Int
  """An object relationship"""
 submission: submissions
   submission_id: Int
   symposium_id: Int
   time_stamp: bigint
  """An object relationship"""
 user: users
  """An object relationship"""
 userByCommitteeMemberUserId: users
}

"""
aggregated selection of "decisions"
"""
type decisions_aggregate {
   aggregate: decisions_aggregate_fields
   nodes: [decisions! ]! 
}

input decisions_aggregate_bool_exp {
  count: decisions_aggregate_bool_exp_count
}

input decisions_aggregate_bool_exp_count {
  arguments: [decisions_select_column! ]
  distinct: Boolean
  filter: decisions_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "decisions"
"""
type decisions_aggregate_fields {
   avg: decisions_avg_fields
   count(columns: [decisions_select_column! ], distinct: Boolean): Int! 
   max: decisions_max_fields
   min: decisions_min_fields
   stddev: decisions_stddev_fields
   stddev_pop: decisions_stddev_pop_fields
   stddev_samp: decisions_stddev_samp_fields
   sum: decisions_sum_fields
   var_pop: decisions_var_pop_fields
   var_samp: decisions_var_samp_fields
   variance: decisions_variance_fields
}

"""
order by aggregate values of table "decisions"
"""
input decisions_aggregate_order_by {
  avg: decisions_avg_order_by
  count: order_by
  max: decisions_max_order_by
  min: decisions_min_order_by
  stddev: decisions_stddev_order_by
  stddev_pop: decisions_stddev_pop_order_by
  stddev_samp: decisions_stddev_samp_order_by
  sum: decisions_sum_order_by
  var_pop: decisions_var_pop_order_by
  var_samp: decisions_var_samp_order_by
  variance: decisions_variance_order_by
}

"""
input type for inserting array relation for remote table "decisions"
"""
input decisions_arr_rel_insert_input {
  data: [decisions_insert_input! ]! 
  """upsert condition"""
on_conflict: decisions_on_conflict
}

"""aggregate avg on columns"""
type decisions_avg_fields {
   committee_member_user_id: Float
   decision_id: Float
   last_updated_by: Float
   submission_id: Float
   symposium_id: Float
   time_stamp: Float
}

"""
order by avg() on columns of table "decisions"
"""
input decisions_avg_order_by {
  committee_member_user_id: order_by
  decision_id: order_by
  last_updated_by: order_by
  submission_id: order_by
  symposium_id: order_by
  time_stamp: order_by
}

"""
Boolean expression to filter rows from the table "decisions". All fields are combined with a logical 'AND'.
"""
input decisions_bool_exp {
  _and: [decisions_bool_exp! ]
  _not: decisions_bool_exp
  _or: [decisions_bool_exp! ]
  committee_member_user_id: Int_comparison_exp
  decision_id: Int_comparison_exp
  decision_question_responses: decision_question_responses_bool_exp
  decision_question_responses_aggregate: decision_question_responses_aggregate_bool_exp
  last_updated: timestamp_comparison_exp
  last_updated_by: Int_comparison_exp
  submission: submissions_bool_exp
  submission_id: Int_comparison_exp
  symposium_id: Int_comparison_exp
  time_stamp: bigint_comparison_exp
  user: users_bool_exp
  userByCommitteeMemberUserId: users_bool_exp
}

"""
unique or primary key constraints on table "decisions"
"""
enum decisions_constraint {
  """
  unique or primary key constraint on columns "decision_id"
  """
decisions_pkey
  """
  unique or primary key constraint on columns "submission_id"
  """
decisions_submission_id_key
}

"""
input type for incrementing numeric columns in table "decisions"
"""
input decisions_inc_input {
  committee_member_user_id: Int
  decision_id: Int
  last_updated_by: Int
  submission_id: Int
  symposium_id: Int
  time_stamp: bigint
}

"""
input type for inserting data into table "decisions"
"""
input decisions_insert_input {
  committee_member_user_id: Int
  decision_id: Int! 
  decision_question_responses: decision_question_responses_arr_rel_insert_input
  last_updated: timestamp
  last_updated_by: Int
  submission: submissions_obj_rel_insert_input
  submission_id: Int
  symposium_id: Int
  time_stamp: bigint! 
  user: users_obj_rel_insert_input
  userByCommitteeMemberUserId: users_obj_rel_insert_input
}

"""aggregate max on columns"""
type decisions_max_fields {
   committee_member_user_id: Int
   decision_id: Int
   last_updated: timestamp
   last_updated_by: Int
   submission_id: Int
   symposium_id: Int
   time_stamp: bigint
}

"""
order by max() on columns of table "decisions"
"""
input decisions_max_order_by {
  committee_member_user_id: order_by
  decision_id: order_by
  last_updated: order_by
  last_updated_by: order_by
  submission_id: order_by
  symposium_id: order_by
  time_stamp: order_by
}

"""aggregate min on columns"""
type decisions_min_fields {
   committee_member_user_id: Int
   decision_id: Int
   last_updated: timestamp
   last_updated_by: Int
   submission_id: Int
   symposium_id: Int
   time_stamp: bigint
}

"""
order by min() on columns of table "decisions"
"""
input decisions_min_order_by {
  committee_member_user_id: order_by
  decision_id: order_by
  last_updated: order_by
  last_updated_by: order_by
  submission_id: order_by
  symposium_id: order_by
  time_stamp: order_by
}

"""
response of any mutation on the table "decisions"
"""
type decisions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [decisions! ]! 
}

"""
input type for inserting object relation for remote table "decisions"
"""
input decisions_obj_rel_insert_input {
  data: decisions_insert_input! 
  """upsert condition"""
on_conflict: decisions_on_conflict
}

"""
on_conflict condition type for table "decisions"
"""
input decisions_on_conflict {
  constraint: decisions_constraint! 
  update_columns: [decisions_update_column! ]! 
  where: decisions_bool_exp
}

"""Ordering options when selecting data from "decisions"."""
input decisions_order_by {
  committee_member_user_id: order_by
  decision_id: order_by
  decision_question_responses_aggregate: decision_question_responses_aggregate_order_by
  last_updated: order_by
  last_updated_by: order_by
  submission: submissions_order_by
  submission_id: order_by
  symposium_id: order_by
  time_stamp: order_by
  user: users_order_by
  userByCommitteeMemberUserId: users_order_by
}

"""primary key columns input for table: decisions"""
input decisions_pk_columns_input {
  decision_id: Int! 
}

"""
select columns of table "decisions"
"""
enum decisions_select_column {
  """column name"""
committee_member_user_id
  """column name"""
decision_id
  """column name"""
last_updated
  """column name"""
last_updated_by
  """column name"""
submission_id
  """column name"""
symposium_id
  """column name"""
time_stamp
}

"""
input type for updating data in table "decisions"
"""
input decisions_set_input {
  committee_member_user_id: Int
  decision_id: Int
  last_updated: timestamp
  last_updated_by: Int
  submission_id: Int
  symposium_id: Int
  time_stamp: bigint
}

"""aggregate stddev on columns"""
type decisions_stddev_fields {
   committee_member_user_id: Float
   decision_id: Float
   last_updated_by: Float
   submission_id: Float
   symposium_id: Float
   time_stamp: Float
}

"""
order by stddev() on columns of table "decisions"
"""
input decisions_stddev_order_by {
  committee_member_user_id: order_by
  decision_id: order_by
  last_updated_by: order_by
  submission_id: order_by
  symposium_id: order_by
  time_stamp: order_by
}

"""aggregate stddev_pop on columns"""
type decisions_stddev_pop_fields {
   committee_member_user_id: Float
   decision_id: Float
   last_updated_by: Float
   submission_id: Float
   symposium_id: Float
   time_stamp: Float
}

"""
order by stddev_pop() on columns of table "decisions"
"""
input decisions_stddev_pop_order_by {
  committee_member_user_id: order_by
  decision_id: order_by
  last_updated_by: order_by
  submission_id: order_by
  symposium_id: order_by
  time_stamp: order_by
}

"""aggregate stddev_samp on columns"""
type decisions_stddev_samp_fields {
   committee_member_user_id: Float
   decision_id: Float
   last_updated_by: Float
   submission_id: Float
   symposium_id: Float
   time_stamp: Float
}

"""
order by stddev_samp() on columns of table "decisions"
"""
input decisions_stddev_samp_order_by {
  committee_member_user_id: order_by
  decision_id: order_by
  last_updated_by: order_by
  submission_id: order_by
  symposium_id: order_by
  time_stamp: order_by
}

"""
Streaming cursor of the table "decisions"
"""
input decisions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: decisions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input decisions_stream_cursor_value_input {
  committee_member_user_id: Int
  decision_id: Int
  last_updated: timestamp
  last_updated_by: Int
  submission_id: Int
  symposium_id: Int
  time_stamp: bigint
}

"""aggregate sum on columns"""
type decisions_sum_fields {
   committee_member_user_id: Int
   decision_id: Int
   last_updated_by: Int
   submission_id: Int
   symposium_id: Int
   time_stamp: bigint
}

"""
order by sum() on columns of table "decisions"
"""
input decisions_sum_order_by {
  committee_member_user_id: order_by
  decision_id: order_by
  last_updated_by: order_by
  submission_id: order_by
  symposium_id: order_by
  time_stamp: order_by
}

"""
update columns of table "decisions"
"""
enum decisions_update_column {
  """column name"""
committee_member_user_id
  """column name"""
decision_id
  """column name"""
last_updated
  """column name"""
last_updated_by
  """column name"""
submission_id
  """column name"""
symposium_id
  """column name"""
time_stamp
}

input decisions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: decisions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: decisions_set_input
  where: decisions_bool_exp! 
}

"""aggregate var_pop on columns"""
type decisions_var_pop_fields {
   committee_member_user_id: Float
   decision_id: Float
   last_updated_by: Float
   submission_id: Float
   symposium_id: Float
   time_stamp: Float
}

"""
order by var_pop() on columns of table "decisions"
"""
input decisions_var_pop_order_by {
  committee_member_user_id: order_by
  decision_id: order_by
  last_updated_by: order_by
  submission_id: order_by
  symposium_id: order_by
  time_stamp: order_by
}

"""aggregate var_samp on columns"""
type decisions_var_samp_fields {
   committee_member_user_id: Float
   decision_id: Float
   last_updated_by: Float
   submission_id: Float
   symposium_id: Float
   time_stamp: Float
}

"""
order by var_samp() on columns of table "decisions"
"""
input decisions_var_samp_order_by {
  committee_member_user_id: order_by
  decision_id: order_by
  last_updated_by: order_by
  submission_id: order_by
  symposium_id: order_by
  time_stamp: order_by
}

"""aggregate variance on columns"""
type decisions_variance_fields {
   committee_member_user_id: Float
   decision_id: Float
   last_updated_by: Float
   submission_id: Float
   symposium_id: Float
   time_stamp: Float
}

"""
order by variance() on columns of table "decisions"
"""
input decisions_variance_order_by {
  committee_member_user_id: order_by
  decision_id: order_by
  last_updated_by: order_by
  submission_id: order_by
  symposium_id: order_by
  time_stamp: order_by
}

"""
columns and relationships of "default_questions"
"""
type default_questions {
   api_name: String
   data_type: question_data_types
   file_types: _text! 
   in_abstract_book: Boolean! 
   in_poster_gallery: Boolean! 
   is_abstract: Boolean! 
   is_authors_affiliations: Boolean! 
   is_category: Boolean! 
   is_title: Boolean! 
   mandatory_city: Boolean! 
   mandatory_country: Boolean! 
   mandatory_institution: Boolean! 
   mandatory_state: Boolean! 
   options("""JSON select path"""
path: String): json
   order_of_questions: Int
   presenting_multiple: Boolean! 
   question_description: String
   question_id: Int! 
   question_name: String
   question_status: question_status! 
   show_city: Boolean! 
   show_country: Boolean! 
   show_institution: Boolean! 
   show_reviewer: Boolean! 
   word_limit: smallint
}

"""
aggregated selection of "default_questions"
"""
type default_questions_aggregate {
   aggregate: default_questions_aggregate_fields
   nodes: [default_questions! ]! 
}

"""
aggregate fields of "default_questions"
"""
type default_questions_aggregate_fields {
   avg: default_questions_avg_fields
   count(columns: [default_questions_select_column! ], distinct: Boolean): Int! 
   max: default_questions_max_fields
   min: default_questions_min_fields
   stddev: default_questions_stddev_fields
   stddev_pop: default_questions_stddev_pop_fields
   stddev_samp: default_questions_stddev_samp_fields
   sum: default_questions_sum_fields
   var_pop: default_questions_var_pop_fields
   var_samp: default_questions_var_samp_fields
   variance: default_questions_variance_fields
}

"""aggregate avg on columns"""
type default_questions_avg_fields {
   order_of_questions: Float
   question_id: Float
   word_limit: Float
}

"""
Boolean expression to filter rows from the table "default_questions". All fields are combined with a logical 'AND'.
"""
input default_questions_bool_exp {
  _and: [default_questions_bool_exp! ]
  _not: default_questions_bool_exp
  _or: [default_questions_bool_exp! ]
  api_name: String_comparison_exp
  data_type: question_data_types_comparison_exp
  file_types: _text_comparison_exp
  in_abstract_book: Boolean_comparison_exp
  in_poster_gallery: Boolean_comparison_exp
  is_abstract: Boolean_comparison_exp
  is_authors_affiliations: Boolean_comparison_exp
  is_category: Boolean_comparison_exp
  is_title: Boolean_comparison_exp
  mandatory_city: Boolean_comparison_exp
  mandatory_country: Boolean_comparison_exp
  mandatory_institution: Boolean_comparison_exp
  mandatory_state: Boolean_comparison_exp
  options: json_comparison_exp
  order_of_questions: Int_comparison_exp
  presenting_multiple: Boolean_comparison_exp
  question_description: String_comparison_exp
  question_id: Int_comparison_exp
  question_name: String_comparison_exp
  question_status: question_status_comparison_exp
  show_city: Boolean_comparison_exp
  show_country: Boolean_comparison_exp
  show_institution: Boolean_comparison_exp
  show_reviewer: Boolean_comparison_exp
  word_limit: smallint_comparison_exp
}

"""
unique or primary key constraints on table "default_questions"
"""
enum default_questions_constraint {
  """
  unique or primary key constraint on columns "question_id"
  """
default_questions_pkey
}

"""
input type for incrementing numeric columns in table "default_questions"
"""
input default_questions_inc_input {
  order_of_questions: Int
  question_id: Int
  word_limit: smallint
}

"""
input type for inserting data into table "default_questions"
"""
input default_questions_insert_input {
  api_name: String
  data_type: question_data_types
  file_types: _text! 
  in_abstract_book: Boolean! 
  in_poster_gallery: Boolean! 
  is_abstract: Boolean! 
  is_authors_affiliations: Boolean! 
  is_category: Boolean! 
  is_title: Boolean! 
  mandatory_city: Boolean! 
  mandatory_country: Boolean! 
  mandatory_institution: Boolean! 
  mandatory_state: Boolean! 
  options: json
  order_of_questions: Int
  presenting_multiple: Boolean! 
  question_description: String
  question_id: Int! 
  question_name: String
  question_status: question_status! 
  show_city: Boolean! 
  show_country: Boolean! 
  show_institution: Boolean! 
  show_reviewer: Boolean! 
  word_limit: smallint
}

"""aggregate max on columns"""
type default_questions_max_fields {
   api_name: String
   data_type: question_data_types
   order_of_questions: Int
   question_description: String
   question_id: Int
   question_name: String
   question_status: question_status
   word_limit: smallint
}

"""aggregate min on columns"""
type default_questions_min_fields {
   api_name: String
   data_type: question_data_types
   order_of_questions: Int
   question_description: String
   question_id: Int
   question_name: String
   question_status: question_status
   word_limit: smallint
}

"""
response of any mutation on the table "default_questions"
"""
type default_questions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [default_questions! ]! 
}

"""
on_conflict condition type for table "default_questions"
"""
input default_questions_on_conflict {
  constraint: default_questions_constraint! 
  update_columns: [default_questions_update_column! ]! 
  where: default_questions_bool_exp
}

"""Ordering options when selecting data from "default_questions"."""
input default_questions_order_by {
  api_name: order_by
  data_type: order_by
  file_types: order_by
  in_abstract_book: order_by
  in_poster_gallery: order_by
  is_abstract: order_by
  is_authors_affiliations: order_by
  is_category: order_by
  is_title: order_by
  mandatory_city: order_by
  mandatory_country: order_by
  mandatory_institution: order_by
  mandatory_state: order_by
  options: order_by
  order_of_questions: order_by
  presenting_multiple: order_by
  question_description: order_by
  question_id: order_by
  question_name: order_by
  question_status: order_by
  show_city: order_by
  show_country: order_by
  show_institution: order_by
  show_reviewer: order_by
  word_limit: order_by
}

"""primary key columns input for table: default_questions"""
input default_questions_pk_columns_input {
  question_id: Int! 
}

"""
select columns of table "default_questions"
"""
enum default_questions_select_column {
  """column name"""
api_name
  """column name"""
data_type
  """column name"""
file_types
  """column name"""
in_abstract_book
  """column name"""
in_poster_gallery
  """column name"""
is_abstract
  """column name"""
is_authors_affiliations
  """column name"""
is_category
  """column name"""
is_title
  """column name"""
mandatory_city
  """column name"""
mandatory_country
  """column name"""
mandatory_institution
  """column name"""
mandatory_state
  """column name"""
options
  """column name"""
order_of_questions
  """column name"""
presenting_multiple
  """column name"""
question_description
  """column name"""
question_id
  """column name"""
question_name
  """column name"""
question_status
  """column name"""
show_city
  """column name"""
show_country
  """column name"""
show_institution
  """column name"""
show_reviewer
  """column name"""
word_limit
}

"""
input type for updating data in table "default_questions"
"""
input default_questions_set_input {
  api_name: String
  data_type: question_data_types
  file_types: _text
  in_abstract_book: Boolean
  in_poster_gallery: Boolean
  is_abstract: Boolean
  is_authors_affiliations: Boolean
  is_category: Boolean
  is_title: Boolean
  mandatory_city: Boolean
  mandatory_country: Boolean
  mandatory_institution: Boolean
  mandatory_state: Boolean
  options: json
  order_of_questions: Int
  presenting_multiple: Boolean
  question_description: String
  question_id: Int
  question_name: String
  question_status: question_status
  show_city: Boolean
  show_country: Boolean
  show_institution: Boolean
  show_reviewer: Boolean
  word_limit: smallint
}

"""aggregate stddev on columns"""
type default_questions_stddev_fields {
   order_of_questions: Float
   question_id: Float
   word_limit: Float
}

"""aggregate stddev_pop on columns"""
type default_questions_stddev_pop_fields {
   order_of_questions: Float
   question_id: Float
   word_limit: Float
}

"""aggregate stddev_samp on columns"""
type default_questions_stddev_samp_fields {
   order_of_questions: Float
   question_id: Float
   word_limit: Float
}

"""
Streaming cursor of the table "default_questions"
"""
input default_questions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: default_questions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input default_questions_stream_cursor_value_input {
  api_name: String
  data_type: question_data_types
  file_types: _text
  in_abstract_book: Boolean
  in_poster_gallery: Boolean
  is_abstract: Boolean
  is_authors_affiliations: Boolean
  is_category: Boolean
  is_title: Boolean
  mandatory_city: Boolean
  mandatory_country: Boolean
  mandatory_institution: Boolean
  mandatory_state: Boolean
  options: json
  order_of_questions: Int
  presenting_multiple: Boolean
  question_description: String
  question_id: Int
  question_name: String
  question_status: question_status
  show_city: Boolean
  show_country: Boolean
  show_institution: Boolean
  show_reviewer: Boolean
  word_limit: smallint
}

"""aggregate sum on columns"""
type default_questions_sum_fields {
   order_of_questions: Int
   question_id: Int
   word_limit: smallint
}

"""
update columns of table "default_questions"
"""
enum default_questions_update_column {
  """column name"""
api_name
  """column name"""
data_type
  """column name"""
file_types
  """column name"""
in_abstract_book
  """column name"""
in_poster_gallery
  """column name"""
is_abstract
  """column name"""
is_authors_affiliations
  """column name"""
is_category
  """column name"""
is_title
  """column name"""
mandatory_city
  """column name"""
mandatory_country
  """column name"""
mandatory_institution
  """column name"""
mandatory_state
  """column name"""
options
  """column name"""
order_of_questions
  """column name"""
presenting_multiple
  """column name"""
question_description
  """column name"""
question_id
  """column name"""
question_name
  """column name"""
question_status
  """column name"""
show_city
  """column name"""
show_country
  """column name"""
show_institution
  """column name"""
show_reviewer
  """column name"""
word_limit
}

input default_questions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: default_questions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: default_questions_set_input
  where: default_questions_bool_exp! 
}

"""aggregate var_pop on columns"""
type default_questions_var_pop_fields {
   order_of_questions: Float
   question_id: Float
   word_limit: Float
}

"""aggregate var_samp on columns"""
type default_questions_var_samp_fields {
   order_of_questions: Float
   question_id: Float
   word_limit: Float
}

"""aggregate variance on columns"""
type default_questions_variance_fields {
   order_of_questions: Float
   question_id: Float
   word_limit: Float
}

scalar delegate_registration_status 

"""
Boolean expression to compare columns of type "delegate_registration_status". All fields are combined with logical 'AND'.
"""
input delegate_registration_status_comparison_exp {
  _eq: delegate_registration_status
  _gt: delegate_registration_status
  _gte: delegate_registration_status
  _in: [delegate_registration_status! ]
  _is_null: Boolean
  _lt: delegate_registration_status
  _lte: delegate_registration_status
  _neq: delegate_registration_status
  _nin: [delegate_registration_status! ]
}

"""
columns and relationships of "delreg_question_responses"
"""
type delreg_question_responses {
   delreg_question_id: Int! 
  """An object relationship"""
 delreg_registration: delreg_registrations! 
   delreg_registration_id: Int! 
   delreg_ticket_id: Int
   id: Int! 
   last_updated: bigint
   last_updated_by: Int
  """An array relationship"""
 multiple_responses("""distinct select on columns"""
distinct_on: [delreg_question_responses_multi_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_question_responses_multi_order_by! ], """filter the rows returned"""
where: delreg_question_responses_multi_bool_exp): [delreg_question_responses_multi! ]! 
  """An aggregate relationship"""
 multiple_responses_aggregate("""distinct select on columns"""
distinct_on: [delreg_question_responses_multi_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_question_responses_multi_order_by! ], """filter the rows returned"""
where: delreg_question_responses_multi_bool_exp): delreg_question_responses_multi_aggregate! 
   price_at_purchase: Int! 
   quantity: Int! 
  """An object relationship"""
 question: delreg_questions! 
  """An object relationship"""
 ticket: delreg_tickets
   upload_name: String
   value: String! 
   value_integer: Int! 
   vat_at_purchase: numeric! 
}

"""
aggregated selection of "delreg_question_responses"
"""
type delreg_question_responses_aggregate {
   aggregate: delreg_question_responses_aggregate_fields
   nodes: [delreg_question_responses! ]! 
}

input delreg_question_responses_aggregate_bool_exp {
  count: delreg_question_responses_aggregate_bool_exp_count
}

input delreg_question_responses_aggregate_bool_exp_count {
  arguments: [delreg_question_responses_select_column! ]
  distinct: Boolean
  filter: delreg_question_responses_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "delreg_question_responses"
"""
type delreg_question_responses_aggregate_fields {
   avg: delreg_question_responses_avg_fields
   count(columns: [delreg_question_responses_select_column! ], distinct: Boolean): Int! 
   max: delreg_question_responses_max_fields
   min: delreg_question_responses_min_fields
   stddev: delreg_question_responses_stddev_fields
   stddev_pop: delreg_question_responses_stddev_pop_fields
   stddev_samp: delreg_question_responses_stddev_samp_fields
   sum: delreg_question_responses_sum_fields
   var_pop: delreg_question_responses_var_pop_fields
   var_samp: delreg_question_responses_var_samp_fields
   variance: delreg_question_responses_variance_fields
}

"""
order by aggregate values of table "delreg_question_responses"
"""
input delreg_question_responses_aggregate_order_by {
  avg: delreg_question_responses_avg_order_by
  count: order_by
  max: delreg_question_responses_max_order_by
  min: delreg_question_responses_min_order_by
  stddev: delreg_question_responses_stddev_order_by
  stddev_pop: delreg_question_responses_stddev_pop_order_by
  stddev_samp: delreg_question_responses_stddev_samp_order_by
  sum: delreg_question_responses_sum_order_by
  var_pop: delreg_question_responses_var_pop_order_by
  var_samp: delreg_question_responses_var_samp_order_by
  variance: delreg_question_responses_variance_order_by
}

"""
input type for inserting array relation for remote table "delreg_question_responses"
"""
input delreg_question_responses_arr_rel_insert_input {
  data: [delreg_question_responses_insert_input! ]! 
  """upsert condition"""
on_conflict: delreg_question_responses_on_conflict
}

"""aggregate avg on columns"""
type delreg_question_responses_avg_fields {
   delreg_question_id: Float
   delreg_registration_id: Float
   delreg_ticket_id: Float
   id: Float
   last_updated: Float
   last_updated_by: Float
   price_at_purchase: Float
   quantity: Float
   value_integer: Float
   vat_at_purchase: Float
}

"""
order by avg() on columns of table "delreg_question_responses"
"""
input delreg_question_responses_avg_order_by {
  delreg_question_id: order_by
  delreg_registration_id: order_by
  delreg_ticket_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  price_at_purchase: order_by
  quantity: order_by
  value_integer: order_by
  vat_at_purchase: order_by
}

"""
Boolean expression to filter rows from the table "delreg_question_responses". All fields are combined with a logical 'AND'.
"""
input delreg_question_responses_bool_exp {
  _and: [delreg_question_responses_bool_exp! ]
  _not: delreg_question_responses_bool_exp
  _or: [delreg_question_responses_bool_exp! ]
  delreg_question_id: Int_comparison_exp
  delreg_registration: delreg_registrations_bool_exp
  delreg_registration_id: Int_comparison_exp
  delreg_ticket_id: Int_comparison_exp
  id: Int_comparison_exp
  last_updated: bigint_comparison_exp
  last_updated_by: Int_comparison_exp
  multiple_responses: delreg_question_responses_multi_bool_exp
  multiple_responses_aggregate: delreg_question_responses_multi_aggregate_bool_exp
  price_at_purchase: Int_comparison_exp
  quantity: Int_comparison_exp
  question: delreg_questions_bool_exp
  ticket: delreg_tickets_bool_exp
  upload_name: String_comparison_exp
  value: String_comparison_exp
  value_integer: Int_comparison_exp
  vat_at_purchase: numeric_comparison_exp
}

"""
unique or primary key constraints on table "delreg_question_responses"
"""
enum delreg_question_responses_constraint {
  """
  unique or primary key constraint on columns "delreg_question_response_id"
  """
delreg_question_responses_pkey
}

"""
input type for incrementing numeric columns in table "delreg_question_responses"
"""
input delreg_question_responses_inc_input {
  delreg_question_id: Int
  delreg_registration_id: Int
  delreg_ticket_id: Int
  id: Int
  last_updated: bigint
  last_updated_by: Int
  price_at_purchase: Int
  quantity: Int
  value_integer: Int
  vat_at_purchase: numeric
}

"""
input type for inserting data into table "delreg_question_responses"
"""
input delreg_question_responses_insert_input {
  delreg_question_id: Int! 
  delreg_registration: delreg_registrations_obj_rel_insert_input
  delreg_registration_id: Int! 
  delreg_ticket_id: Int
  id: Int
  last_updated: bigint
  last_updated_by: Int
  multiple_responses: delreg_question_responses_multi_arr_rel_insert_input
  price_at_purchase: Int! 
  quantity: Int! 
  question: delreg_questions_obj_rel_insert_input
  ticket: delreg_tickets_obj_rel_insert_input
  upload_name: String
  value: String! 
  value_integer: Int! 
  vat_at_purchase: numeric! 
}

"""aggregate max on columns"""
type delreg_question_responses_max_fields {
   delreg_question_id: Int
   delreg_registration_id: Int
   delreg_ticket_id: Int
   id: Int
   last_updated: bigint
   last_updated_by: Int
   price_at_purchase: Int
   quantity: Int
   upload_name: String
   value: String
   value_integer: Int
   vat_at_purchase: numeric
}

"""
order by max() on columns of table "delreg_question_responses"
"""
input delreg_question_responses_max_order_by {
  delreg_question_id: order_by
  delreg_registration_id: order_by
  delreg_ticket_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  price_at_purchase: order_by
  quantity: order_by
  upload_name: order_by
  value: order_by
  value_integer: order_by
  vat_at_purchase: order_by
}

"""aggregate min on columns"""
type delreg_question_responses_min_fields {
   delreg_question_id: Int
   delreg_registration_id: Int
   delreg_ticket_id: Int
   id: Int
   last_updated: bigint
   last_updated_by: Int
   price_at_purchase: Int
   quantity: Int
   upload_name: String
   value: String
   value_integer: Int
   vat_at_purchase: numeric
}

"""
order by min() on columns of table "delreg_question_responses"
"""
input delreg_question_responses_min_order_by {
  delreg_question_id: order_by
  delreg_registration_id: order_by
  delreg_ticket_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  price_at_purchase: order_by
  quantity: order_by
  upload_name: order_by
  value: order_by
  value_integer: order_by
  vat_at_purchase: order_by
}

"""
columns and relationships of "delreg_question_responses_multi"
"""
type delreg_question_responses_multi {
   delreg_ticket_id: Int
   display_order: Int! 
   id: Int! 
   price_at_purchase: Int! 
   quantity: Int! 
  """An object relationship"""
 response: delreg_question_responses! 
  """An object relationship"""
 ticket: delreg_tickets
   value: String! 
   value_integer: Int! 
   vat_at_purchase: numeric! 
}

"""
aggregated selection of "delreg_question_responses_multi"
"""
type delreg_question_responses_multi_aggregate {
   aggregate: delreg_question_responses_multi_aggregate_fields
   nodes: [delreg_question_responses_multi! ]! 
}

input delreg_question_responses_multi_aggregate_bool_exp {
  count: delreg_question_responses_multi_aggregate_bool_exp_count
}

input delreg_question_responses_multi_aggregate_bool_exp_count {
  arguments: [delreg_question_responses_multi_select_column! ]
  distinct: Boolean
  filter: delreg_question_responses_multi_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "delreg_question_responses_multi"
"""
type delreg_question_responses_multi_aggregate_fields {
   avg: delreg_question_responses_multi_avg_fields
   count(columns: [delreg_question_responses_multi_select_column! ], distinct: Boolean): Int! 
   max: delreg_question_responses_multi_max_fields
   min: delreg_question_responses_multi_min_fields
   stddev: delreg_question_responses_multi_stddev_fields
   stddev_pop: delreg_question_responses_multi_stddev_pop_fields
   stddev_samp: delreg_question_responses_multi_stddev_samp_fields
   sum: delreg_question_responses_multi_sum_fields
   var_pop: delreg_question_responses_multi_var_pop_fields
   var_samp: delreg_question_responses_multi_var_samp_fields
   variance: delreg_question_responses_multi_variance_fields
}

"""
order by aggregate values of table "delreg_question_responses_multi"
"""
input delreg_question_responses_multi_aggregate_order_by {
  avg: delreg_question_responses_multi_avg_order_by
  count: order_by
  max: delreg_question_responses_multi_max_order_by
  min: delreg_question_responses_multi_min_order_by
  stddev: delreg_question_responses_multi_stddev_order_by
  stddev_pop: delreg_question_responses_multi_stddev_pop_order_by
  stddev_samp: delreg_question_responses_multi_stddev_samp_order_by
  sum: delreg_question_responses_multi_sum_order_by
  var_pop: delreg_question_responses_multi_var_pop_order_by
  var_samp: delreg_question_responses_multi_var_samp_order_by
  variance: delreg_question_responses_multi_variance_order_by
}

"""
input type for inserting array relation for remote table "delreg_question_responses_multi"
"""
input delreg_question_responses_multi_arr_rel_insert_input {
  data: [delreg_question_responses_multi_insert_input! ]! 
}

"""aggregate avg on columns"""
type delreg_question_responses_multi_avg_fields {
   delreg_ticket_id: Float
   display_order: Float
   id: Float
   price_at_purchase: Float
   quantity: Float
   value_integer: Float
   vat_at_purchase: Float
}

"""
order by avg() on columns of table "delreg_question_responses_multi"
"""
input delreg_question_responses_multi_avg_order_by {
  delreg_ticket_id: order_by
  display_order: order_by
  id: order_by
  price_at_purchase: order_by
  quantity: order_by
  value_integer: order_by
  vat_at_purchase: order_by
}

"""
Boolean expression to filter rows from the table "delreg_question_responses_multi". All fields are combined with a logical 'AND'.
"""
input delreg_question_responses_multi_bool_exp {
  _and: [delreg_question_responses_multi_bool_exp! ]
  _not: delreg_question_responses_multi_bool_exp
  _or: [delreg_question_responses_multi_bool_exp! ]
  delreg_ticket_id: Int_comparison_exp
  display_order: Int_comparison_exp
  id: Int_comparison_exp
  price_at_purchase: Int_comparison_exp
  quantity: Int_comparison_exp
  response: delreg_question_responses_bool_exp
  ticket: delreg_tickets_bool_exp
  value: String_comparison_exp
  value_integer: Int_comparison_exp
  vat_at_purchase: numeric_comparison_exp
}

"""
input type for incrementing numeric columns in table "delreg_question_responses_multi"
"""
input delreg_question_responses_multi_inc_input {
  delreg_ticket_id: Int
  display_order: Int
  id: Int
  price_at_purchase: Int
  quantity: Int
  value_integer: Int
  vat_at_purchase: numeric
}

"""
input type for inserting data into table "delreg_question_responses_multi"
"""
input delreg_question_responses_multi_insert_input {
  delreg_ticket_id: Int
  display_order: Int! 
  id: Int
  price_at_purchase: Int! 
  quantity: Int! 
  response: delreg_question_responses_obj_rel_insert_input
  ticket: delreg_tickets_obj_rel_insert_input
  value: String! 
  value_integer: Int! 
  vat_at_purchase: numeric! 
}

"""aggregate max on columns"""
type delreg_question_responses_multi_max_fields {
   delreg_ticket_id: Int
   display_order: Int
   id: Int
   price_at_purchase: Int
   quantity: Int
   value: String
   value_integer: Int
   vat_at_purchase: numeric
}

"""
order by max() on columns of table "delreg_question_responses_multi"
"""
input delreg_question_responses_multi_max_order_by {
  delreg_ticket_id: order_by
  display_order: order_by
  id: order_by
  price_at_purchase: order_by
  quantity: order_by
  value: order_by
  value_integer: order_by
  vat_at_purchase: order_by
}

"""aggregate min on columns"""
type delreg_question_responses_multi_min_fields {
   delreg_ticket_id: Int
   display_order: Int
   id: Int
   price_at_purchase: Int
   quantity: Int
   value: String
   value_integer: Int
   vat_at_purchase: numeric
}

"""
order by min() on columns of table "delreg_question_responses_multi"
"""
input delreg_question_responses_multi_min_order_by {
  delreg_ticket_id: order_by
  display_order: order_by
  id: order_by
  price_at_purchase: order_by
  quantity: order_by
  value: order_by
  value_integer: order_by
  vat_at_purchase: order_by
}

"""
response of any mutation on the table "delreg_question_responses_multi"
"""
type delreg_question_responses_multi_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [delreg_question_responses_multi! ]! 
}

"""
Ordering options when selecting data from "delreg_question_responses_multi".
"""
input delreg_question_responses_multi_order_by {
  delreg_ticket_id: order_by
  display_order: order_by
  id: order_by
  price_at_purchase: order_by
  quantity: order_by
  response: delreg_question_responses_order_by
  ticket: delreg_tickets_order_by
  value: order_by
  value_integer: order_by
  vat_at_purchase: order_by
}

"""
select columns of table "delreg_question_responses_multi"
"""
enum delreg_question_responses_multi_select_column {
  """column name"""
delreg_ticket_id
  """column name"""
display_order
  """column name"""
id
  """column name"""
price_at_purchase
  """column name"""
quantity
  """column name"""
value
  """column name"""
value_integer
  """column name"""
vat_at_purchase
}

"""
input type for updating data in table "delreg_question_responses_multi"
"""
input delreg_question_responses_multi_set_input {
  delreg_ticket_id: Int
  display_order: Int
  id: Int
  price_at_purchase: Int
  quantity: Int
  value: String
  value_integer: Int
  vat_at_purchase: numeric
}

"""aggregate stddev on columns"""
type delreg_question_responses_multi_stddev_fields {
   delreg_ticket_id: Float
   display_order: Float
   id: Float
   price_at_purchase: Float
   quantity: Float
   value_integer: Float
   vat_at_purchase: Float
}

"""
order by stddev() on columns of table "delreg_question_responses_multi"
"""
input delreg_question_responses_multi_stddev_order_by {
  delreg_ticket_id: order_by
  display_order: order_by
  id: order_by
  price_at_purchase: order_by
  quantity: order_by
  value_integer: order_by
  vat_at_purchase: order_by
}

"""aggregate stddev_pop on columns"""
type delreg_question_responses_multi_stddev_pop_fields {
   delreg_ticket_id: Float
   display_order: Float
   id: Float
   price_at_purchase: Float
   quantity: Float
   value_integer: Float
   vat_at_purchase: Float
}

"""
order by stddev_pop() on columns of table "delreg_question_responses_multi"
"""
input delreg_question_responses_multi_stddev_pop_order_by {
  delreg_ticket_id: order_by
  display_order: order_by
  id: order_by
  price_at_purchase: order_by
  quantity: order_by
  value_integer: order_by
  vat_at_purchase: order_by
}

"""aggregate stddev_samp on columns"""
type delreg_question_responses_multi_stddev_samp_fields {
   delreg_ticket_id: Float
   display_order: Float
   id: Float
   price_at_purchase: Float
   quantity: Float
   value_integer: Float
   vat_at_purchase: Float
}

"""
order by stddev_samp() on columns of table "delreg_question_responses_multi"
"""
input delreg_question_responses_multi_stddev_samp_order_by {
  delreg_ticket_id: order_by
  display_order: order_by
  id: order_by
  price_at_purchase: order_by
  quantity: order_by
  value_integer: order_by
  vat_at_purchase: order_by
}

"""
Streaming cursor of the table "delreg_question_responses_multi"
"""
input delreg_question_responses_multi_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: delreg_question_responses_multi_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input delreg_question_responses_multi_stream_cursor_value_input {
  delreg_ticket_id: Int
  display_order: Int
  id: Int
  price_at_purchase: Int
  quantity: Int
  value: String
  value_integer: Int
  vat_at_purchase: numeric
}

"""aggregate sum on columns"""
type delreg_question_responses_multi_sum_fields {
   delreg_ticket_id: Int
   display_order: Int
   id: Int
   price_at_purchase: Int
   quantity: Int
   value_integer: Int
   vat_at_purchase: numeric
}

"""
order by sum() on columns of table "delreg_question_responses_multi"
"""
input delreg_question_responses_multi_sum_order_by {
  delreg_ticket_id: order_by
  display_order: order_by
  id: order_by
  price_at_purchase: order_by
  quantity: order_by
  value_integer: order_by
  vat_at_purchase: order_by
}

input delreg_question_responses_multi_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: delreg_question_responses_multi_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: delreg_question_responses_multi_set_input
  where: delreg_question_responses_multi_bool_exp! 
}

"""aggregate var_pop on columns"""
type delreg_question_responses_multi_var_pop_fields {
   delreg_ticket_id: Float
   display_order: Float
   id: Float
   price_at_purchase: Float
   quantity: Float
   value_integer: Float
   vat_at_purchase: Float
}

"""
order by var_pop() on columns of table "delreg_question_responses_multi"
"""
input delreg_question_responses_multi_var_pop_order_by {
  delreg_ticket_id: order_by
  display_order: order_by
  id: order_by
  price_at_purchase: order_by
  quantity: order_by
  value_integer: order_by
  vat_at_purchase: order_by
}

"""aggregate var_samp on columns"""
type delreg_question_responses_multi_var_samp_fields {
   delreg_ticket_id: Float
   display_order: Float
   id: Float
   price_at_purchase: Float
   quantity: Float
   value_integer: Float
   vat_at_purchase: Float
}

"""
order by var_samp() on columns of table "delreg_question_responses_multi"
"""
input delreg_question_responses_multi_var_samp_order_by {
  delreg_ticket_id: order_by
  display_order: order_by
  id: order_by
  price_at_purchase: order_by
  quantity: order_by
  value_integer: order_by
  vat_at_purchase: order_by
}

"""aggregate variance on columns"""
type delreg_question_responses_multi_variance_fields {
   delreg_ticket_id: Float
   display_order: Float
   id: Float
   price_at_purchase: Float
   quantity: Float
   value_integer: Float
   vat_at_purchase: Float
}

"""
order by variance() on columns of table "delreg_question_responses_multi"
"""
input delreg_question_responses_multi_variance_order_by {
  delreg_ticket_id: order_by
  display_order: order_by
  id: order_by
  price_at_purchase: order_by
  quantity: order_by
  value_integer: order_by
  vat_at_purchase: order_by
}

"""
response of any mutation on the table "delreg_question_responses"
"""
type delreg_question_responses_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [delreg_question_responses! ]! 
}

"""
input type for inserting object relation for remote table "delreg_question_responses"
"""
input delreg_question_responses_obj_rel_insert_input {
  data: delreg_question_responses_insert_input! 
  """upsert condition"""
on_conflict: delreg_question_responses_on_conflict
}

"""
on_conflict condition type for table "delreg_question_responses"
"""
input delreg_question_responses_on_conflict {
  constraint: delreg_question_responses_constraint! 
  update_columns: [delreg_question_responses_update_column! ]! 
  where: delreg_question_responses_bool_exp
}

"""Ordering options when selecting data from "delreg_question_responses"."""
input delreg_question_responses_order_by {
  delreg_question_id: order_by
  delreg_registration: delreg_registrations_order_by
  delreg_registration_id: order_by
  delreg_ticket_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  multiple_responses_aggregate: delreg_question_responses_multi_aggregate_order_by
  price_at_purchase: order_by
  quantity: order_by
  question: delreg_questions_order_by
  ticket: delreg_tickets_order_by
  upload_name: order_by
  value: order_by
  value_integer: order_by
  vat_at_purchase: order_by
}

"""primary key columns input for table: delreg_question_responses"""
input delreg_question_responses_pk_columns_input {
  id: Int! 
}

"""
select columns of table "delreg_question_responses"
"""
enum delreg_question_responses_select_column {
  """column name"""
delreg_question_id
  """column name"""
delreg_registration_id
  """column name"""
delreg_ticket_id
  """column name"""
id
  """column name"""
last_updated
  """column name"""
last_updated_by
  """column name"""
price_at_purchase
  """column name"""
quantity
  """column name"""
upload_name
  """column name"""
value
  """column name"""
value_integer
  """column name"""
vat_at_purchase
}

"""
input type for updating data in table "delreg_question_responses"
"""
input delreg_question_responses_set_input {
  delreg_question_id: Int
  delreg_registration_id: Int
  delreg_ticket_id: Int
  id: Int
  last_updated: bigint
  last_updated_by: Int
  price_at_purchase: Int
  quantity: Int
  upload_name: String
  value: String
  value_integer: Int
  vat_at_purchase: numeric
}

"""aggregate stddev on columns"""
type delreg_question_responses_stddev_fields {
   delreg_question_id: Float
   delreg_registration_id: Float
   delreg_ticket_id: Float
   id: Float
   last_updated: Float
   last_updated_by: Float
   price_at_purchase: Float
   quantity: Float
   value_integer: Float
   vat_at_purchase: Float
}

"""
order by stddev() on columns of table "delreg_question_responses"
"""
input delreg_question_responses_stddev_order_by {
  delreg_question_id: order_by
  delreg_registration_id: order_by
  delreg_ticket_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  price_at_purchase: order_by
  quantity: order_by
  value_integer: order_by
  vat_at_purchase: order_by
}

"""aggregate stddev_pop on columns"""
type delreg_question_responses_stddev_pop_fields {
   delreg_question_id: Float
   delreg_registration_id: Float
   delreg_ticket_id: Float
   id: Float
   last_updated: Float
   last_updated_by: Float
   price_at_purchase: Float
   quantity: Float
   value_integer: Float
   vat_at_purchase: Float
}

"""
order by stddev_pop() on columns of table "delreg_question_responses"
"""
input delreg_question_responses_stddev_pop_order_by {
  delreg_question_id: order_by
  delreg_registration_id: order_by
  delreg_ticket_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  price_at_purchase: order_by
  quantity: order_by
  value_integer: order_by
  vat_at_purchase: order_by
}

"""aggregate stddev_samp on columns"""
type delreg_question_responses_stddev_samp_fields {
   delreg_question_id: Float
   delreg_registration_id: Float
   delreg_ticket_id: Float
   id: Float
   last_updated: Float
   last_updated_by: Float
   price_at_purchase: Float
   quantity: Float
   value_integer: Float
   vat_at_purchase: Float
}

"""
order by stddev_samp() on columns of table "delreg_question_responses"
"""
input delreg_question_responses_stddev_samp_order_by {
  delreg_question_id: order_by
  delreg_registration_id: order_by
  delreg_ticket_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  price_at_purchase: order_by
  quantity: order_by
  value_integer: order_by
  vat_at_purchase: order_by
}

"""
Streaming cursor of the table "delreg_question_responses"
"""
input delreg_question_responses_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: delreg_question_responses_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input delreg_question_responses_stream_cursor_value_input {
  delreg_question_id: Int
  delreg_registration_id: Int
  delreg_ticket_id: Int
  id: Int
  last_updated: bigint
  last_updated_by: Int
  price_at_purchase: Int
  quantity: Int
  upload_name: String
  value: String
  value_integer: Int
  vat_at_purchase: numeric
}

"""aggregate sum on columns"""
type delreg_question_responses_sum_fields {
   delreg_question_id: Int
   delreg_registration_id: Int
   delreg_ticket_id: Int
   id: Int
   last_updated: bigint
   last_updated_by: Int
   price_at_purchase: Int
   quantity: Int
   value_integer: Int
   vat_at_purchase: numeric
}

"""
order by sum() on columns of table "delreg_question_responses"
"""
input delreg_question_responses_sum_order_by {
  delreg_question_id: order_by
  delreg_registration_id: order_by
  delreg_ticket_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  price_at_purchase: order_by
  quantity: order_by
  value_integer: order_by
  vat_at_purchase: order_by
}

"""
update columns of table "delreg_question_responses"
"""
enum delreg_question_responses_update_column {
  """column name"""
delreg_question_id
  """column name"""
delreg_registration_id
  """column name"""
delreg_ticket_id
  """column name"""
id
  """column name"""
last_updated
  """column name"""
last_updated_by
  """column name"""
price_at_purchase
  """column name"""
quantity
  """column name"""
upload_name
  """column name"""
value
  """column name"""
value_integer
  """column name"""
vat_at_purchase
}

input delreg_question_responses_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: delreg_question_responses_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: delreg_question_responses_set_input
  where: delreg_question_responses_bool_exp! 
}

"""aggregate var_pop on columns"""
type delreg_question_responses_var_pop_fields {
   delreg_question_id: Float
   delreg_registration_id: Float
   delreg_ticket_id: Float
   id: Float
   last_updated: Float
   last_updated_by: Float
   price_at_purchase: Float
   quantity: Float
   value_integer: Float
   vat_at_purchase: Float
}

"""
order by var_pop() on columns of table "delreg_question_responses"
"""
input delreg_question_responses_var_pop_order_by {
  delreg_question_id: order_by
  delreg_registration_id: order_by
  delreg_ticket_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  price_at_purchase: order_by
  quantity: order_by
  value_integer: order_by
  vat_at_purchase: order_by
}

"""aggregate var_samp on columns"""
type delreg_question_responses_var_samp_fields {
   delreg_question_id: Float
   delreg_registration_id: Float
   delreg_ticket_id: Float
   id: Float
   last_updated: Float
   last_updated_by: Float
   price_at_purchase: Float
   quantity: Float
   value_integer: Float
   vat_at_purchase: Float
}

"""
order by var_samp() on columns of table "delreg_question_responses"
"""
input delreg_question_responses_var_samp_order_by {
  delreg_question_id: order_by
  delreg_registration_id: order_by
  delreg_ticket_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  price_at_purchase: order_by
  quantity: order_by
  value_integer: order_by
  vat_at_purchase: order_by
}

"""aggregate variance on columns"""
type delreg_question_responses_variance_fields {
   delreg_question_id: Float
   delreg_registration_id: Float
   delreg_ticket_id: Float
   id: Float
   last_updated: Float
   last_updated_by: Float
   price_at_purchase: Float
   quantity: Float
   value_integer: Float
   vat_at_purchase: Float
}

"""
order by variance() on columns of table "delreg_question_responses"
"""
input delreg_question_responses_variance_order_by {
  delreg_question_id: order_by
  delreg_registration_id: order_by
  delreg_ticket_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  price_at_purchase: order_by
  quantity: order_by
  value_integer: order_by
  vat_at_purchase: order_by
}

scalar delreg_question_types 

"""
Boolean expression to compare columns of type "delreg_question_types". All fields are combined with logical 'AND'.
"""
input delreg_question_types_comparison_exp {
  _eq: delreg_question_types
  _gt: delreg_question_types
  _gte: delreg_question_types
  _in: [delreg_question_types! ]
  _is_null: Boolean
  _lt: delreg_question_types
  _lte: delreg_question_types
  _neq: delreg_question_types
  _nin: [delreg_question_types! ]
}

"""
columns and relationships of "delreg_questions"
"""
type delreg_questions {
   answer_required: Boolean! 
   archived: Boolean! 
   data_type: delreg_question_types! 
   depends_on: Int
   depends_on_option: String
   display_order: Int! 
  """An object relationship"""
 event: events! 
   event_id: Int! 
   has_ticket_dependencies: Boolean! 
   id: Int! 
   is_dependency_parent: Boolean! 
   is_fee_question: Boolean! 
   last_updated_by: Int! 
   question_description: String
   question_name: String! 
  """An array relationship"""
 responses("""distinct select on columns"""
distinct_on: [delreg_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_question_responses_order_by! ], """filter the rows returned"""
where: delreg_question_responses_bool_exp): [delreg_question_responses! ]! 
  """An aggregate relationship"""
 responses_aggregate("""distinct select on columns"""
distinct_on: [delreg_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_question_responses_order_by! ], """filter the rows returned"""
where: delreg_question_responses_bool_exp): delreg_question_responses_aggregate! 
   show_on_invoice: Boolean! 
  """An array relationship"""
 ticket_headings("""distinct select on columns"""
distinct_on: [delreg_ticket_headings_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_ticket_headings_order_by! ], """filter the rows returned"""
where: delreg_ticket_headings_bool_exp): [delreg_ticket_headings! ]! 
  """An aggregate relationship"""
 ticket_headings_aggregate("""distinct select on columns"""
distinct_on: [delreg_ticket_headings_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_ticket_headings_order_by! ], """filter the rows returned"""
where: delreg_ticket_headings_bool_exp): delreg_ticket_headings_aggregate! 
  """An array relationship"""
 tickets("""distinct select on columns"""
distinct_on: [delreg_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_tickets_order_by! ], """filter the rows returned"""
where: delreg_tickets_bool_exp): [delreg_tickets! ]! 
  """An aggregate relationship"""
 tickets_aggregate("""distinct select on columns"""
distinct_on: [delreg_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_tickets_order_by! ], """filter the rows returned"""
where: delreg_tickets_bool_exp): delreg_tickets_aggregate! 
   time_stamp: bigint! 
}

"""
aggregated selection of "delreg_questions"
"""
type delreg_questions_aggregate {
   aggregate: delreg_questions_aggregate_fields
   nodes: [delreg_questions! ]! 
}

"""
aggregate fields of "delreg_questions"
"""
type delreg_questions_aggregate_fields {
   avg: delreg_questions_avg_fields
   count(columns: [delreg_questions_select_column! ], distinct: Boolean): Int! 
   max: delreg_questions_max_fields
   min: delreg_questions_min_fields
   stddev: delreg_questions_stddev_fields
   stddev_pop: delreg_questions_stddev_pop_fields
   stddev_samp: delreg_questions_stddev_samp_fields
   sum: delreg_questions_sum_fields
   var_pop: delreg_questions_var_pop_fields
   var_samp: delreg_questions_var_samp_fields
   variance: delreg_questions_variance_fields
}

"""aggregate avg on columns"""
type delreg_questions_avg_fields {
   depends_on: Float
   display_order: Float
   event_id: Float
   id: Float
   last_updated_by: Float
   time_stamp: Float
}

"""
Boolean expression to filter rows from the table "delreg_questions". All fields are combined with a logical 'AND'.
"""
input delreg_questions_bool_exp {
  _and: [delreg_questions_bool_exp! ]
  _not: delreg_questions_bool_exp
  _or: [delreg_questions_bool_exp! ]
  answer_required: Boolean_comparison_exp
  archived: Boolean_comparison_exp
  data_type: delreg_question_types_comparison_exp
  depends_on: Int_comparison_exp
  depends_on_option: String_comparison_exp
  display_order: Int_comparison_exp
  event: events_bool_exp
  event_id: Int_comparison_exp
  has_ticket_dependencies: Boolean_comparison_exp
  id: Int_comparison_exp
  is_dependency_parent: Boolean_comparison_exp
  is_fee_question: Boolean_comparison_exp
  last_updated_by: Int_comparison_exp
  question_description: String_comparison_exp
  question_name: String_comparison_exp
  responses: delreg_question_responses_bool_exp
  responses_aggregate: delreg_question_responses_aggregate_bool_exp
  show_on_invoice: Boolean_comparison_exp
  ticket_headings: delreg_ticket_headings_bool_exp
  ticket_headings_aggregate: delreg_ticket_headings_aggregate_bool_exp
  tickets: delreg_tickets_bool_exp
  tickets_aggregate: delreg_tickets_aggregate_bool_exp
  time_stamp: bigint_comparison_exp
}

"""
unique or primary key constraints on table "delreg_questions"
"""
enum delreg_questions_constraint {
  """
  unique or primary key constraint on columns "delreg_question_id"
  """
delreg_questions_pkey
}

"""
input type for incrementing numeric columns in table "delreg_questions"
"""
input delreg_questions_inc_input {
  depends_on: Int
  display_order: Int
  event_id: Int
  id: Int
  last_updated_by: Int
  time_stamp: bigint
}

"""
input type for inserting data into table "delreg_questions"
"""
input delreg_questions_insert_input {
  answer_required: Boolean! 
  archived: Boolean! 
  data_type: delreg_question_types! 
  depends_on: Int
  depends_on_option: String
  display_order: Int! 
  event: events_obj_rel_insert_input
  event_id: Int! 
  has_ticket_dependencies: Boolean! 
  id: Int
  is_dependency_parent: Boolean! 
  is_fee_question: Boolean! 
  last_updated_by: Int! 
  question_description: String
  question_name: String! 
  responses: delreg_question_responses_arr_rel_insert_input
  show_on_invoice: Boolean! 
  ticket_headings: delreg_ticket_headings_arr_rel_insert_input
  tickets: delreg_tickets_arr_rel_insert_input
  time_stamp: bigint! 
}

"""aggregate max on columns"""
type delreg_questions_max_fields {
   data_type: delreg_question_types
   depends_on: Int
   depends_on_option: String
   display_order: Int
   event_id: Int
   id: Int
   last_updated_by: Int
   question_description: String
   question_name: String
   time_stamp: bigint
}

"""aggregate min on columns"""
type delreg_questions_min_fields {
   data_type: delreg_question_types
   depends_on: Int
   depends_on_option: String
   display_order: Int
   event_id: Int
   id: Int
   last_updated_by: Int
   question_description: String
   question_name: String
   time_stamp: bigint
}

"""
response of any mutation on the table "delreg_questions"
"""
type delreg_questions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [delreg_questions! ]! 
}

"""
input type for inserting object relation for remote table "delreg_questions"
"""
input delreg_questions_obj_rel_insert_input {
  data: delreg_questions_insert_input! 
  """upsert condition"""
on_conflict: delreg_questions_on_conflict
}

"""
on_conflict condition type for table "delreg_questions"
"""
input delreg_questions_on_conflict {
  constraint: delreg_questions_constraint! 
  update_columns: [delreg_questions_update_column! ]! 
  where: delreg_questions_bool_exp
}

"""Ordering options when selecting data from "delreg_questions"."""
input delreg_questions_order_by {
  answer_required: order_by
  archived: order_by
  data_type: order_by
  depends_on: order_by
  depends_on_option: order_by
  display_order: order_by
  event: events_order_by
  event_id: order_by
  has_ticket_dependencies: order_by
  id: order_by
  is_dependency_parent: order_by
  is_fee_question: order_by
  last_updated_by: order_by
  question_description: order_by
  question_name: order_by
  responses_aggregate: delreg_question_responses_aggregate_order_by
  show_on_invoice: order_by
  ticket_headings_aggregate: delreg_ticket_headings_aggregate_order_by
  tickets_aggregate: delreg_tickets_aggregate_order_by
  time_stamp: order_by
}

"""primary key columns input for table: delreg_questions"""
input delreg_questions_pk_columns_input {
  id: Int! 
}

"""
select columns of table "delreg_questions"
"""
enum delreg_questions_select_column {
  """column name"""
answer_required
  """column name"""
archived
  """column name"""
data_type
  """column name"""
depends_on
  """column name"""
depends_on_option
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
has_ticket_dependencies
  """column name"""
id
  """column name"""
is_dependency_parent
  """column name"""
is_fee_question
  """column name"""
last_updated_by
  """column name"""
question_description
  """column name"""
question_name
  """column name"""
show_on_invoice
  """column name"""
time_stamp
}

"""
input type for updating data in table "delreg_questions"
"""
input delreg_questions_set_input {
  answer_required: Boolean
  archived: Boolean
  data_type: delreg_question_types
  depends_on: Int
  depends_on_option: String
  display_order: Int
  event_id: Int
  has_ticket_dependencies: Boolean
  id: Int
  is_dependency_parent: Boolean
  is_fee_question: Boolean
  last_updated_by: Int
  question_description: String
  question_name: String
  show_on_invoice: Boolean
  time_stamp: bigint
}

"""aggregate stddev on columns"""
type delreg_questions_stddev_fields {
   depends_on: Float
   display_order: Float
   event_id: Float
   id: Float
   last_updated_by: Float
   time_stamp: Float
}

"""aggregate stddev_pop on columns"""
type delreg_questions_stddev_pop_fields {
   depends_on: Float
   display_order: Float
   event_id: Float
   id: Float
   last_updated_by: Float
   time_stamp: Float
}

"""aggregate stddev_samp on columns"""
type delreg_questions_stddev_samp_fields {
   depends_on: Float
   display_order: Float
   event_id: Float
   id: Float
   last_updated_by: Float
   time_stamp: Float
}

"""
Streaming cursor of the table "delreg_questions"
"""
input delreg_questions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: delreg_questions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input delreg_questions_stream_cursor_value_input {
  answer_required: Boolean
  archived: Boolean
  data_type: delreg_question_types
  depends_on: Int
  depends_on_option: String
  display_order: Int
  event_id: Int
  has_ticket_dependencies: Boolean
  id: Int
  is_dependency_parent: Boolean
  is_fee_question: Boolean
  last_updated_by: Int
  question_description: String
  question_name: String
  show_on_invoice: Boolean
  time_stamp: bigint
}

"""aggregate sum on columns"""
type delreg_questions_sum_fields {
   depends_on: Int
   display_order: Int
   event_id: Int
   id: Int
   last_updated_by: Int
   time_stamp: bigint
}

"""
update columns of table "delreg_questions"
"""
enum delreg_questions_update_column {
  """column name"""
answer_required
  """column name"""
archived
  """column name"""
data_type
  """column name"""
depends_on
  """column name"""
depends_on_option
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
has_ticket_dependencies
  """column name"""
id
  """column name"""
is_dependency_parent
  """column name"""
is_fee_question
  """column name"""
last_updated_by
  """column name"""
question_description
  """column name"""
question_name
  """column name"""
show_on_invoice
  """column name"""
time_stamp
}

input delreg_questions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: delreg_questions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: delreg_questions_set_input
  where: delreg_questions_bool_exp! 
}

"""aggregate var_pop on columns"""
type delreg_questions_var_pop_fields {
   depends_on: Float
   display_order: Float
   event_id: Float
   id: Float
   last_updated_by: Float
   time_stamp: Float
}

"""aggregate var_samp on columns"""
type delreg_questions_var_samp_fields {
   depends_on: Float
   display_order: Float
   event_id: Float
   id: Float
   last_updated_by: Float
   time_stamp: Float
}

"""aggregate variance on columns"""
type delreg_questions_variance_fields {
   depends_on: Float
   display_order: Float
   event_id: Float
   id: Float
   last_updated_by: Float
   time_stamp: Float
}

"""
columns and relationships of "delreg_registrations"
"""
type delreg_registrations {
   admin_notes: String
   amount_paid: String
   amount_paid_currency: String
   archived: Boolean! 
   attention: Boolean
   created_at: timestamptz! 
   created_by: Int
   delreg_coupon_code: String
   delreg_registration_serial: Int! 
  """An array relationship"""
 event("""distinct select on columns"""
distinct_on: [events_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [events_order_by! ], """filter the rows returned"""
where: events_bool_exp): [events! ]! 
  """An aggregate relationship"""
 event_aggregate("""distinct select on columns"""
distinct_on: [events_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [events_order_by! ], """filter the rows returned"""
where: events_bool_exp): events_aggregate! 
   event_id: Int! 
   failure_note: String
   id: Int! 
   invoice_link: String
   last_updated: bigint
   last_updated_by: Int! 
   payment_method: payment_methods
  """An array relationship"""
 responses("""distinct select on columns"""
distinct_on: [delreg_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_question_responses_order_by! ], """filter the rows returned"""
where: delreg_question_responses_bool_exp): [delreg_question_responses! ]! 
  """An aggregate relationship"""
 responses_aggregate("""distinct select on columns"""
distinct_on: [delreg_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_question_responses_order_by! ], """filter the rows returned"""
where: delreg_question_responses_bool_exp): delreg_question_responses_aggregate! 
   status: delegate_registration_status
   time_stamp: bigint! 
  """An array relationship"""
 user("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): [users! ]! 
  """An aggregate relationship"""
 user_aggregate("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): users_aggregate! 
   user_id: Int! 
}

"""
aggregated selection of "delreg_registrations"
"""
type delreg_registrations_aggregate {
   aggregate: delreg_registrations_aggregate_fields
   nodes: [delreg_registrations! ]! 
}

input delreg_registrations_aggregate_bool_exp {
  bool_and: delreg_registrations_aggregate_bool_exp_bool_and
  bool_or: delreg_registrations_aggregate_bool_exp_bool_or
  count: delreg_registrations_aggregate_bool_exp_count
}

input delreg_registrations_aggregate_bool_exp_bool_and {
  arguments: delreg_registrations_select_column_delreg_registrations_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: delreg_registrations_bool_exp
  predicate: Boolean_comparison_exp! 
}

input delreg_registrations_aggregate_bool_exp_bool_or {
  arguments: delreg_registrations_select_column_delreg_registrations_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: delreg_registrations_bool_exp
  predicate: Boolean_comparison_exp! 
}

input delreg_registrations_aggregate_bool_exp_count {
  arguments: [delreg_registrations_select_column! ]
  distinct: Boolean
  filter: delreg_registrations_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "delreg_registrations"
"""
type delreg_registrations_aggregate_fields {
   avg: delreg_registrations_avg_fields
   count(columns: [delreg_registrations_select_column! ], distinct: Boolean): Int! 
   max: delreg_registrations_max_fields
   min: delreg_registrations_min_fields
   stddev: delreg_registrations_stddev_fields
   stddev_pop: delreg_registrations_stddev_pop_fields
   stddev_samp: delreg_registrations_stddev_samp_fields
   sum: delreg_registrations_sum_fields
   var_pop: delreg_registrations_var_pop_fields
   var_samp: delreg_registrations_var_samp_fields
   variance: delreg_registrations_variance_fields
}

"""
order by aggregate values of table "delreg_registrations"
"""
input delreg_registrations_aggregate_order_by {
  avg: delreg_registrations_avg_order_by
  count: order_by
  max: delreg_registrations_max_order_by
  min: delreg_registrations_min_order_by
  stddev: delreg_registrations_stddev_order_by
  stddev_pop: delreg_registrations_stddev_pop_order_by
  stddev_samp: delreg_registrations_stddev_samp_order_by
  sum: delreg_registrations_sum_order_by
  var_pop: delreg_registrations_var_pop_order_by
  var_samp: delreg_registrations_var_samp_order_by
  variance: delreg_registrations_variance_order_by
}

"""
input type for inserting array relation for remote table "delreg_registrations"
"""
input delreg_registrations_arr_rel_insert_input {
  data: [delreg_registrations_insert_input! ]! 
  """upsert condition"""
on_conflict: delreg_registrations_on_conflict
}

"""aggregate avg on columns"""
type delreg_registrations_avg_fields {
   created_by: Float
   delreg_registration_serial: Float
   event_id: Float
   id: Float
   last_updated: Float
   last_updated_by: Float
   time_stamp: Float
   user_id: Float
}

"""
order by avg() on columns of table "delreg_registrations"
"""
input delreg_registrations_avg_order_by {
  created_by: order_by
  delreg_registration_serial: order_by
  event_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  time_stamp: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "delreg_registrations". All fields are combined with a logical 'AND'.
"""
input delreg_registrations_bool_exp {
  _and: [delreg_registrations_bool_exp! ]
  _not: delreg_registrations_bool_exp
  _or: [delreg_registrations_bool_exp! ]
  admin_notes: String_comparison_exp
  amount_paid: String_comparison_exp
  amount_paid_currency: String_comparison_exp
  archived: Boolean_comparison_exp
  attention: Boolean_comparison_exp
  created_at: timestamptz_comparison_exp
  created_by: Int_comparison_exp
  delreg_coupon_code: String_comparison_exp
  delreg_registration_serial: Int_comparison_exp
  event: events_bool_exp
  event_aggregate: events_aggregate_bool_exp
  event_id: Int_comparison_exp
  failure_note: String_comparison_exp
  id: Int_comparison_exp
  invoice_link: String_comparison_exp
  last_updated: bigint_comparison_exp
  last_updated_by: Int_comparison_exp
  payment_method: payment_methods_comparison_exp
  responses: delreg_question_responses_bool_exp
  responses_aggregate: delreg_question_responses_aggregate_bool_exp
  status: delegate_registration_status_comparison_exp
  time_stamp: bigint_comparison_exp
  user: users_bool_exp
  user_aggregate: users_aggregate_bool_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "delreg_registrations"
"""
enum delreg_registrations_constraint {
  """
  unique or primary key constraint on columns "delreg_registration_id"
  """
delreg_registrations_pkey
}

"""
input type for incrementing numeric columns in table "delreg_registrations"
"""
input delreg_registrations_inc_input {
  created_by: Int
  delreg_registration_serial: Int
  event_id: Int
  id: Int
  last_updated: bigint
  last_updated_by: Int
  time_stamp: bigint
  user_id: Int
}

"""
input type for inserting data into table "delreg_registrations"
"""
input delreg_registrations_insert_input {
  admin_notes: String
  amount_paid: String
  amount_paid_currency: String
  archived: Boolean! 
  attention: Boolean! 
  created_at: timestamptz! 
  created_by: Int
  delreg_coupon_code: String
  delreg_registration_serial: Int! 
  event: events_arr_rel_insert_input
  event_id: Int! 
  failure_note: String
  id: Int
  invoice_link: String
  last_updated: bigint
  last_updated_by: Int! 
  payment_method: payment_methods! 
  responses: delreg_question_responses_arr_rel_insert_input
  status: delegate_registration_status! 
  time_stamp: bigint! 
  user: users_arr_rel_insert_input
  user_id: Int! 
}

"""aggregate max on columns"""
type delreg_registrations_max_fields {
   admin_notes: String
   amount_paid: String
   amount_paid_currency: String
   created_at: timestamptz
   created_by: Int
   delreg_coupon_code: String
   delreg_registration_serial: Int
   event_id: Int
   failure_note: String
   id: Int
   invoice_link: String
   last_updated: bigint
   last_updated_by: Int
   payment_method: payment_methods
   status: delegate_registration_status
   time_stamp: bigint
   user_id: Int
}

"""
order by max() on columns of table "delreg_registrations"
"""
input delreg_registrations_max_order_by {
  admin_notes: order_by
  amount_paid: order_by
  amount_paid_currency: order_by
  created_at: order_by
  created_by: order_by
  delreg_coupon_code: order_by
  delreg_registration_serial: order_by
  event_id: order_by
  failure_note: order_by
  id: order_by
  invoice_link: order_by
  last_updated: order_by
  last_updated_by: order_by
  payment_method: order_by
  status: order_by
  time_stamp: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type delreg_registrations_min_fields {
   admin_notes: String
   amount_paid: String
   amount_paid_currency: String
   created_at: timestamptz
   created_by: Int
   delreg_coupon_code: String
   delreg_registration_serial: Int
   event_id: Int
   failure_note: String
   id: Int
   invoice_link: String
   last_updated: bigint
   last_updated_by: Int
   payment_method: payment_methods
   status: delegate_registration_status
   time_stamp: bigint
   user_id: Int
}

"""
order by min() on columns of table "delreg_registrations"
"""
input delreg_registrations_min_order_by {
  admin_notes: order_by
  amount_paid: order_by
  amount_paid_currency: order_by
  created_at: order_by
  created_by: order_by
  delreg_coupon_code: order_by
  delreg_registration_serial: order_by
  event_id: order_by
  failure_note: order_by
  id: order_by
  invoice_link: order_by
  last_updated: order_by
  last_updated_by: order_by
  payment_method: order_by
  status: order_by
  time_stamp: order_by
  user_id: order_by
}

"""
response of any mutation on the table "delreg_registrations"
"""
type delreg_registrations_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [delreg_registrations! ]! 
}

"""
input type for inserting object relation for remote table "delreg_registrations"
"""
input delreg_registrations_obj_rel_insert_input {
  data: delreg_registrations_insert_input! 
  """upsert condition"""
on_conflict: delreg_registrations_on_conflict
}

"""
on_conflict condition type for table "delreg_registrations"
"""
input delreg_registrations_on_conflict {
  constraint: delreg_registrations_constraint! 
  update_columns: [delreg_registrations_update_column! ]! 
  where: delreg_registrations_bool_exp
}

"""Ordering options when selecting data from "delreg_registrations"."""
input delreg_registrations_order_by {
  admin_notes: order_by
  amount_paid: order_by
  amount_paid_currency: order_by
  archived: order_by
  attention: order_by
  created_at: order_by
  created_by: order_by
  delreg_coupon_code: order_by
  delreg_registration_serial: order_by
  event_aggregate: events_aggregate_order_by
  event_id: order_by
  failure_note: order_by
  id: order_by
  invoice_link: order_by
  last_updated: order_by
  last_updated_by: order_by
  payment_method: order_by
  responses_aggregate: delreg_question_responses_aggregate_order_by
  status: order_by
  time_stamp: order_by
  user_aggregate: users_aggregate_order_by
  user_id: order_by
}

"""primary key columns input for table: delreg_registrations"""
input delreg_registrations_pk_columns_input {
  id: Int! 
}

"""
select columns of table "delreg_registrations"
"""
enum delreg_registrations_select_column {
  """column name"""
admin_notes
  """column name"""
amount_paid
  """column name"""
amount_paid_currency
  """column name"""
archived
  """column name"""
attention
  """column name"""
created_at
  """column name"""
created_by
  """column name"""
delreg_coupon_code
  """column name"""
delreg_registration_serial
  """column name"""
event_id
  """column name"""
failure_note
  """column name"""
id
  """column name"""
invoice_link
  """column name"""
last_updated
  """column name"""
last_updated_by
  """column name"""
payment_method
  """column name"""
status
  """column name"""
time_stamp
  """column name"""
user_id
}

"""
select "delreg_registrations_aggregate_bool_exp_bool_and_arguments_columns" columns of table "delreg_registrations"
"""
enum delreg_registrations_select_column_delreg_registrations_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
archived
  """column name"""
attention
}

"""
select "delreg_registrations_aggregate_bool_exp_bool_or_arguments_columns" columns of table "delreg_registrations"
"""
enum delreg_registrations_select_column_delreg_registrations_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
archived
  """column name"""
attention
}

"""
input type for updating data in table "delreg_registrations"
"""
input delreg_registrations_set_input {
  admin_notes: String
  amount_paid: String
  amount_paid_currency: String
  archived: Boolean
  attention: Boolean
  created_at: timestamptz
  created_by: Int
  delreg_coupon_code: String
  delreg_registration_serial: Int
  event_id: Int
  failure_note: String
  id: Int
  invoice_link: String
  last_updated: bigint
  last_updated_by: Int
  payment_method: payment_methods
  status: delegate_registration_status
  time_stamp: bigint
  user_id: Int
}

"""aggregate stddev on columns"""
type delreg_registrations_stddev_fields {
   created_by: Float
   delreg_registration_serial: Float
   event_id: Float
   id: Float
   last_updated: Float
   last_updated_by: Float
   time_stamp: Float
   user_id: Float
}

"""
order by stddev() on columns of table "delreg_registrations"
"""
input delreg_registrations_stddev_order_by {
  created_by: order_by
  delreg_registration_serial: order_by
  event_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  time_stamp: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type delreg_registrations_stddev_pop_fields {
   created_by: Float
   delreg_registration_serial: Float
   event_id: Float
   id: Float
   last_updated: Float
   last_updated_by: Float
   time_stamp: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "delreg_registrations"
"""
input delreg_registrations_stddev_pop_order_by {
  created_by: order_by
  delreg_registration_serial: order_by
  event_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  time_stamp: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type delreg_registrations_stddev_samp_fields {
   created_by: Float
   delreg_registration_serial: Float
   event_id: Float
   id: Float
   last_updated: Float
   last_updated_by: Float
   time_stamp: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "delreg_registrations"
"""
input delreg_registrations_stddev_samp_order_by {
  created_by: order_by
  delreg_registration_serial: order_by
  event_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  time_stamp: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "delreg_registrations"
"""
input delreg_registrations_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: delreg_registrations_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input delreg_registrations_stream_cursor_value_input {
  admin_notes: String
  amount_paid: String
  amount_paid_currency: String
  archived: Boolean
  attention: Boolean
  created_at: timestamptz
  created_by: Int
  delreg_coupon_code: String
  delreg_registration_serial: Int
  event_id: Int
  failure_note: String
  id: Int
  invoice_link: String
  last_updated: bigint
  last_updated_by: Int
  payment_method: payment_methods
  status: delegate_registration_status
  time_stamp: bigint
  user_id: Int
}

"""aggregate sum on columns"""
type delreg_registrations_sum_fields {
   created_by: Int
   delreg_registration_serial: Int
   event_id: Int
   id: Int
   last_updated: bigint
   last_updated_by: Int
   time_stamp: bigint
   user_id: Int
}

"""
order by sum() on columns of table "delreg_registrations"
"""
input delreg_registrations_sum_order_by {
  created_by: order_by
  delreg_registration_serial: order_by
  event_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  time_stamp: order_by
  user_id: order_by
}

"""
update columns of table "delreg_registrations"
"""
enum delreg_registrations_update_column {
  """column name"""
admin_notes
  """column name"""
amount_paid
  """column name"""
amount_paid_currency
  """column name"""
archived
  """column name"""
attention
  """column name"""
created_at
  """column name"""
created_by
  """column name"""
delreg_coupon_code
  """column name"""
delreg_registration_serial
  """column name"""
event_id
  """column name"""
failure_note
  """column name"""
id
  """column name"""
invoice_link
  """column name"""
last_updated
  """column name"""
last_updated_by
  """column name"""
payment_method
  """column name"""
status
  """column name"""
time_stamp
  """column name"""
user_id
}

input delreg_registrations_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: delreg_registrations_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: delreg_registrations_set_input
  where: delreg_registrations_bool_exp! 
}

"""aggregate var_pop on columns"""
type delreg_registrations_var_pop_fields {
   created_by: Float
   delreg_registration_serial: Float
   event_id: Float
   id: Float
   last_updated: Float
   last_updated_by: Float
   time_stamp: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "delreg_registrations"
"""
input delreg_registrations_var_pop_order_by {
  created_by: order_by
  delreg_registration_serial: order_by
  event_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  time_stamp: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type delreg_registrations_var_samp_fields {
   created_by: Float
   delreg_registration_serial: Float
   event_id: Float
   id: Float
   last_updated: Float
   last_updated_by: Float
   time_stamp: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "delreg_registrations"
"""
input delreg_registrations_var_samp_order_by {
  created_by: order_by
  delreg_registration_serial: order_by
  event_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  time_stamp: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type delreg_registrations_variance_fields {
   created_by: Float
   delreg_registration_serial: Float
   event_id: Float
   id: Float
   last_updated: Float
   last_updated_by: Float
   time_stamp: Float
   user_id: Float
}

"""
order by variance() on columns of table "delreg_registrations"
"""
input delreg_registrations_variance_order_by {
  created_by: order_by
  delreg_registration_serial: order_by
  event_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  time_stamp: order_by
  user_id: order_by
}

"""
columns and relationships of "delreg_ticket_headings"
"""
type delreg_ticket_headings {
   delreg_question_id: Int! 
   display_order: Int! 
   heading: String! 
   id: Int! 
}

"""
aggregated selection of "delreg_ticket_headings"
"""
type delreg_ticket_headings_aggregate {
   aggregate: delreg_ticket_headings_aggregate_fields
   nodes: [delreg_ticket_headings! ]! 
}

input delreg_ticket_headings_aggregate_bool_exp {
  count: delreg_ticket_headings_aggregate_bool_exp_count
}

input delreg_ticket_headings_aggregate_bool_exp_count {
  arguments: [delreg_ticket_headings_select_column! ]
  distinct: Boolean
  filter: delreg_ticket_headings_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "delreg_ticket_headings"
"""
type delreg_ticket_headings_aggregate_fields {
   avg: delreg_ticket_headings_avg_fields
   count(columns: [delreg_ticket_headings_select_column! ], distinct: Boolean): Int! 
   max: delreg_ticket_headings_max_fields
   min: delreg_ticket_headings_min_fields
   stddev: delreg_ticket_headings_stddev_fields
   stddev_pop: delreg_ticket_headings_stddev_pop_fields
   stddev_samp: delreg_ticket_headings_stddev_samp_fields
   sum: delreg_ticket_headings_sum_fields
   var_pop: delreg_ticket_headings_var_pop_fields
   var_samp: delreg_ticket_headings_var_samp_fields
   variance: delreg_ticket_headings_variance_fields
}

"""
order by aggregate values of table "delreg_ticket_headings"
"""
input delreg_ticket_headings_aggregate_order_by {
  avg: delreg_ticket_headings_avg_order_by
  count: order_by
  max: delreg_ticket_headings_max_order_by
  min: delreg_ticket_headings_min_order_by
  stddev: delreg_ticket_headings_stddev_order_by
  stddev_pop: delreg_ticket_headings_stddev_pop_order_by
  stddev_samp: delreg_ticket_headings_stddev_samp_order_by
  sum: delreg_ticket_headings_sum_order_by
  var_pop: delreg_ticket_headings_var_pop_order_by
  var_samp: delreg_ticket_headings_var_samp_order_by
  variance: delreg_ticket_headings_variance_order_by
}

"""
input type for inserting array relation for remote table "delreg_ticket_headings"
"""
input delreg_ticket_headings_arr_rel_insert_input {
  data: [delreg_ticket_headings_insert_input! ]! 
  """upsert condition"""
on_conflict: delreg_ticket_headings_on_conflict
}

"""aggregate avg on columns"""
type delreg_ticket_headings_avg_fields {
   delreg_question_id: Float
   display_order: Float
   id: Float
}

"""
order by avg() on columns of table "delreg_ticket_headings"
"""
input delreg_ticket_headings_avg_order_by {
  delreg_question_id: order_by
  display_order: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "delreg_ticket_headings". All fields are combined with a logical 'AND'.
"""
input delreg_ticket_headings_bool_exp {
  _and: [delreg_ticket_headings_bool_exp! ]
  _not: delreg_ticket_headings_bool_exp
  _or: [delreg_ticket_headings_bool_exp! ]
  delreg_question_id: Int_comparison_exp
  display_order: Int_comparison_exp
  heading: String_comparison_exp
  id: Int_comparison_exp
}

"""
unique or primary key constraints on table "delreg_ticket_headings"
"""
enum delreg_ticket_headings_constraint {
  """
  unique or primary key constraint on columns "delreg_ticket_heading_id"
  """
delreg_ticket_headings_pkey
}

"""
input type for incrementing numeric columns in table "delreg_ticket_headings"
"""
input delreg_ticket_headings_inc_input {
  delreg_question_id: Int
  display_order: Int
  id: Int
}

"""
input type for inserting data into table "delreg_ticket_headings"
"""
input delreg_ticket_headings_insert_input {
  delreg_question_id: Int! 
  display_order: Int! 
  heading: String! 
  id: Int
}

"""aggregate max on columns"""
type delreg_ticket_headings_max_fields {
   delreg_question_id: Int
   display_order: Int
   heading: String
   id: Int
}

"""
order by max() on columns of table "delreg_ticket_headings"
"""
input delreg_ticket_headings_max_order_by {
  delreg_question_id: order_by
  display_order: order_by
  heading: order_by
  id: order_by
}

"""aggregate min on columns"""
type delreg_ticket_headings_min_fields {
   delreg_question_id: Int
   display_order: Int
   heading: String
   id: Int
}

"""
order by min() on columns of table "delreg_ticket_headings"
"""
input delreg_ticket_headings_min_order_by {
  delreg_question_id: order_by
  display_order: order_by
  heading: order_by
  id: order_by
}

"""
response of any mutation on the table "delreg_ticket_headings"
"""
type delreg_ticket_headings_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [delreg_ticket_headings! ]! 
}

"""
on_conflict condition type for table "delreg_ticket_headings"
"""
input delreg_ticket_headings_on_conflict {
  constraint: delreg_ticket_headings_constraint! 
  update_columns: [delreg_ticket_headings_update_column! ]! 
  where: delreg_ticket_headings_bool_exp
}

"""Ordering options when selecting data from "delreg_ticket_headings"."""
input delreg_ticket_headings_order_by {
  delreg_question_id: order_by
  display_order: order_by
  heading: order_by
  id: order_by
}

"""primary key columns input for table: delreg_ticket_headings"""
input delreg_ticket_headings_pk_columns_input {
  id: Int! 
}

"""
select columns of table "delreg_ticket_headings"
"""
enum delreg_ticket_headings_select_column {
  """column name"""
delreg_question_id
  """column name"""
display_order
  """column name"""
heading
  """column name"""
id
}

"""
input type for updating data in table "delreg_ticket_headings"
"""
input delreg_ticket_headings_set_input {
  delreg_question_id: Int
  display_order: Int
  heading: String
  id: Int
}

"""aggregate stddev on columns"""
type delreg_ticket_headings_stddev_fields {
   delreg_question_id: Float
   display_order: Float
   id: Float
}

"""
order by stddev() on columns of table "delreg_ticket_headings"
"""
input delreg_ticket_headings_stddev_order_by {
  delreg_question_id: order_by
  display_order: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type delreg_ticket_headings_stddev_pop_fields {
   delreg_question_id: Float
   display_order: Float
   id: Float
}

"""
order by stddev_pop() on columns of table "delreg_ticket_headings"
"""
input delreg_ticket_headings_stddev_pop_order_by {
  delreg_question_id: order_by
  display_order: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type delreg_ticket_headings_stddev_samp_fields {
   delreg_question_id: Float
   display_order: Float
   id: Float
}

"""
order by stddev_samp() on columns of table "delreg_ticket_headings"
"""
input delreg_ticket_headings_stddev_samp_order_by {
  delreg_question_id: order_by
  display_order: order_by
  id: order_by
}

"""
Streaming cursor of the table "delreg_ticket_headings"
"""
input delreg_ticket_headings_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: delreg_ticket_headings_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input delreg_ticket_headings_stream_cursor_value_input {
  delreg_question_id: Int
  display_order: Int
  heading: String
  id: Int
}

"""aggregate sum on columns"""
type delreg_ticket_headings_sum_fields {
   delreg_question_id: Int
   display_order: Int
   id: Int
}

"""
order by sum() on columns of table "delreg_ticket_headings"
"""
input delreg_ticket_headings_sum_order_by {
  delreg_question_id: order_by
  display_order: order_by
  id: order_by
}

"""
update columns of table "delreg_ticket_headings"
"""
enum delreg_ticket_headings_update_column {
  """column name"""
delreg_question_id
  """column name"""
display_order
  """column name"""
heading
  """column name"""
id
}

input delreg_ticket_headings_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: delreg_ticket_headings_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: delreg_ticket_headings_set_input
  where: delreg_ticket_headings_bool_exp! 
}

"""aggregate var_pop on columns"""
type delreg_ticket_headings_var_pop_fields {
   delreg_question_id: Float
   display_order: Float
   id: Float
}

"""
order by var_pop() on columns of table "delreg_ticket_headings"
"""
input delreg_ticket_headings_var_pop_order_by {
  delreg_question_id: order_by
  display_order: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type delreg_ticket_headings_var_samp_fields {
   delreg_question_id: Float
   display_order: Float
   id: Float
}

"""
order by var_samp() on columns of table "delreg_ticket_headings"
"""
input delreg_ticket_headings_var_samp_order_by {
  delreg_question_id: order_by
  display_order: order_by
  id: order_by
}

"""aggregate variance on columns"""
type delreg_ticket_headings_variance_fields {
   delreg_question_id: Float
   display_order: Float
   id: Float
}

"""
order by variance() on columns of table "delreg_ticket_headings"
"""
input delreg_ticket_headings_variance_order_by {
  delreg_question_id: order_by
  display_order: order_by
  id: order_by
}

"""
columns and relationships of "delreg_tickets"
"""
type delreg_tickets {
   allow_multiple: Boolean! 
   delreg_coupon_id: Int
   delreg_question_id: Int! 
  """An array relationship"""
 delreg_question_responses("""distinct select on columns"""
distinct_on: [delreg_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_question_responses_order_by! ], """filter the rows returned"""
where: delreg_question_responses_bool_exp): [delreg_question_responses! ]! 
  """An aggregate relationship"""
 delreg_question_responses_aggregate("""distinct select on columns"""
distinct_on: [delreg_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_question_responses_order_by! ], """filter the rows returned"""
where: delreg_question_responses_bool_exp): delreg_question_responses_aggregate! 
   delreg_ticket_heading_id: Int
   depends_on_parent: Boolean! 
   depends_on_parent_option: String
   display_order: Int! 
   end_date: date
   hidden: Boolean! 
   id: Int! 
   maximum_per_registration: Int
   name: String! 
   price: Int! 
   quantity: Int
  """An object relationship"""
 question: delreg_questions! 
   start_date: date
}

"""
aggregated selection of "delreg_tickets"
"""
type delreg_tickets_aggregate {
   aggregate: delreg_tickets_aggregate_fields
   nodes: [delreg_tickets! ]! 
}

input delreg_tickets_aggregate_bool_exp {
  bool_and: delreg_tickets_aggregate_bool_exp_bool_and
  bool_or: delreg_tickets_aggregate_bool_exp_bool_or
  count: delreg_tickets_aggregate_bool_exp_count
}

input delreg_tickets_aggregate_bool_exp_bool_and {
  arguments: delreg_tickets_select_column_delreg_tickets_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: delreg_tickets_bool_exp
  predicate: Boolean_comparison_exp! 
}

input delreg_tickets_aggregate_bool_exp_bool_or {
  arguments: delreg_tickets_select_column_delreg_tickets_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: delreg_tickets_bool_exp
  predicate: Boolean_comparison_exp! 
}

input delreg_tickets_aggregate_bool_exp_count {
  arguments: [delreg_tickets_select_column! ]
  distinct: Boolean
  filter: delreg_tickets_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "delreg_tickets"
"""
type delreg_tickets_aggregate_fields {
   avg: delreg_tickets_avg_fields
   count(columns: [delreg_tickets_select_column! ], distinct: Boolean): Int! 
   max: delreg_tickets_max_fields
   min: delreg_tickets_min_fields
   stddev: delreg_tickets_stddev_fields
   stddev_pop: delreg_tickets_stddev_pop_fields
   stddev_samp: delreg_tickets_stddev_samp_fields
   sum: delreg_tickets_sum_fields
   var_pop: delreg_tickets_var_pop_fields
   var_samp: delreg_tickets_var_samp_fields
   variance: delreg_tickets_variance_fields
}

"""
order by aggregate values of table "delreg_tickets"
"""
input delreg_tickets_aggregate_order_by {
  avg: delreg_tickets_avg_order_by
  count: order_by
  max: delreg_tickets_max_order_by
  min: delreg_tickets_min_order_by
  stddev: delreg_tickets_stddev_order_by
  stddev_pop: delreg_tickets_stddev_pop_order_by
  stddev_samp: delreg_tickets_stddev_samp_order_by
  sum: delreg_tickets_sum_order_by
  var_pop: delreg_tickets_var_pop_order_by
  var_samp: delreg_tickets_var_samp_order_by
  variance: delreg_tickets_variance_order_by
}

"""
input type for inserting array relation for remote table "delreg_tickets"
"""
input delreg_tickets_arr_rel_insert_input {
  data: [delreg_tickets_insert_input! ]! 
  """upsert condition"""
on_conflict: delreg_tickets_on_conflict
}

"""aggregate avg on columns"""
type delreg_tickets_avg_fields {
   delreg_coupon_id: Float
   delreg_question_id: Float
   delreg_ticket_heading_id: Float
   display_order: Float
   id: Float
   maximum_per_registration: Float
   price: Float
   quantity: Float
}

"""
order by avg() on columns of table "delreg_tickets"
"""
input delreg_tickets_avg_order_by {
  delreg_coupon_id: order_by
  delreg_question_id: order_by
  delreg_ticket_heading_id: order_by
  display_order: order_by
  id: order_by
  maximum_per_registration: order_by
  price: order_by
  quantity: order_by
}

"""
Boolean expression to filter rows from the table "delreg_tickets". All fields are combined with a logical 'AND'.
"""
input delreg_tickets_bool_exp {
  _and: [delreg_tickets_bool_exp! ]
  _not: delreg_tickets_bool_exp
  _or: [delreg_tickets_bool_exp! ]
  allow_multiple: Boolean_comparison_exp
  delreg_coupon_id: Int_comparison_exp
  delreg_question_id: Int_comparison_exp
  delreg_question_responses: delreg_question_responses_bool_exp
  delreg_question_responses_aggregate: delreg_question_responses_aggregate_bool_exp
  delreg_ticket_heading_id: Int_comparison_exp
  depends_on_parent: Boolean_comparison_exp
  depends_on_parent_option: String_comparison_exp
  display_order: Int_comparison_exp
  end_date: date_comparison_exp
  hidden: Boolean_comparison_exp
  id: Int_comparison_exp
  maximum_per_registration: Int_comparison_exp
  name: String_comparison_exp
  price: Int_comparison_exp
  quantity: Int_comparison_exp
  question: delreg_questions_bool_exp
  start_date: date_comparison_exp
}

"""
unique or primary key constraints on table "delreg_tickets"
"""
enum delreg_tickets_constraint {
  """
  unique or primary key constraint on columns "delreg_ticket_id"
  """
delreg_tickets_pkey
}

"""
input type for incrementing numeric columns in table "delreg_tickets"
"""
input delreg_tickets_inc_input {
  delreg_coupon_id: Int
  delreg_question_id: Int
  delreg_ticket_heading_id: Int
  display_order: Int
  id: Int
  maximum_per_registration: Int
  price: Int
  quantity: Int
}

"""
input type for inserting data into table "delreg_tickets"
"""
input delreg_tickets_insert_input {
  allow_multiple: Boolean! 
  delreg_coupon_id: Int
  delreg_question_id: Int! 
  delreg_question_responses: delreg_question_responses_arr_rel_insert_input
  delreg_ticket_heading_id: Int
  depends_on_parent: Boolean! 
  depends_on_parent_option: String
  display_order: Int! 
  end_date: date
  hidden: Boolean! 
  id: Int
  maximum_per_registration: Int
  name: String! 
  price: Int! 
  quantity: Int
  question: delreg_questions_obj_rel_insert_input
  start_date: date
}

"""aggregate max on columns"""
type delreg_tickets_max_fields {
   delreg_coupon_id: Int
   delreg_question_id: Int
   delreg_ticket_heading_id: Int
   depends_on_parent_option: String
   display_order: Int
   end_date: date
   id: Int
   maximum_per_registration: Int
   name: String
   price: Int
   quantity: Int
   start_date: date
}

"""
order by max() on columns of table "delreg_tickets"
"""
input delreg_tickets_max_order_by {
  delreg_coupon_id: order_by
  delreg_question_id: order_by
  delreg_ticket_heading_id: order_by
  depends_on_parent_option: order_by
  display_order: order_by
  end_date: order_by
  id: order_by
  maximum_per_registration: order_by
  name: order_by
  price: order_by
  quantity: order_by
  start_date: order_by
}

"""aggregate min on columns"""
type delreg_tickets_min_fields {
   delreg_coupon_id: Int
   delreg_question_id: Int
   delreg_ticket_heading_id: Int
   depends_on_parent_option: String
   display_order: Int
   end_date: date
   id: Int
   maximum_per_registration: Int
   name: String
   price: Int
   quantity: Int
   start_date: date
}

"""
order by min() on columns of table "delreg_tickets"
"""
input delreg_tickets_min_order_by {
  delreg_coupon_id: order_by
  delreg_question_id: order_by
  delreg_ticket_heading_id: order_by
  depends_on_parent_option: order_by
  display_order: order_by
  end_date: order_by
  id: order_by
  maximum_per_registration: order_by
  name: order_by
  price: order_by
  quantity: order_by
  start_date: order_by
}

"""
response of any mutation on the table "delreg_tickets"
"""
type delreg_tickets_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [delreg_tickets! ]! 
}

"""
input type for inserting object relation for remote table "delreg_tickets"
"""
input delreg_tickets_obj_rel_insert_input {
  data: delreg_tickets_insert_input! 
  """upsert condition"""
on_conflict: delreg_tickets_on_conflict
}

"""
on_conflict condition type for table "delreg_tickets"
"""
input delreg_tickets_on_conflict {
  constraint: delreg_tickets_constraint! 
  update_columns: [delreg_tickets_update_column! ]! 
  where: delreg_tickets_bool_exp
}

"""Ordering options when selecting data from "delreg_tickets"."""
input delreg_tickets_order_by {
  allow_multiple: order_by
  delreg_coupon_id: order_by
  delreg_question_id: order_by
  delreg_question_responses_aggregate: delreg_question_responses_aggregate_order_by
  delreg_ticket_heading_id: order_by
  depends_on_parent: order_by
  depends_on_parent_option: order_by
  display_order: order_by
  end_date: order_by
  hidden: order_by
  id: order_by
  maximum_per_registration: order_by
  name: order_by
  price: order_by
  quantity: order_by
  question: delreg_questions_order_by
  start_date: order_by
}

"""primary key columns input for table: delreg_tickets"""
input delreg_tickets_pk_columns_input {
  id: Int! 
}

"""
select columns of table "delreg_tickets"
"""
enum delreg_tickets_select_column {
  """column name"""
allow_multiple
  """column name"""
delreg_coupon_id
  """column name"""
delreg_question_id
  """column name"""
delreg_ticket_heading_id
  """column name"""
depends_on_parent
  """column name"""
depends_on_parent_option
  """column name"""
display_order
  """column name"""
end_date
  """column name"""
hidden
  """column name"""
id
  """column name"""
maximum_per_registration
  """column name"""
name
  """column name"""
price
  """column name"""
quantity
  """column name"""
start_date
}

"""
select "delreg_tickets_aggregate_bool_exp_bool_and_arguments_columns" columns of table "delreg_tickets"
"""
enum delreg_tickets_select_column_delreg_tickets_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
allow_multiple
  """column name"""
depends_on_parent
  """column name"""
hidden
}

"""
select "delreg_tickets_aggregate_bool_exp_bool_or_arguments_columns" columns of table "delreg_tickets"
"""
enum delreg_tickets_select_column_delreg_tickets_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
allow_multiple
  """column name"""
depends_on_parent
  """column name"""
hidden
}

"""
input type for updating data in table "delreg_tickets"
"""
input delreg_tickets_set_input {
  allow_multiple: Boolean
  delreg_coupon_id: Int
  delreg_question_id: Int
  delreg_ticket_heading_id: Int
  depends_on_parent: Boolean
  depends_on_parent_option: String
  display_order: Int
  end_date: date
  hidden: Boolean
  id: Int
  maximum_per_registration: Int
  name: String
  price: Int
  quantity: Int
  start_date: date
}

"""aggregate stddev on columns"""
type delreg_tickets_stddev_fields {
   delreg_coupon_id: Float
   delreg_question_id: Float
   delreg_ticket_heading_id: Float
   display_order: Float
   id: Float
   maximum_per_registration: Float
   price: Float
   quantity: Float
}

"""
order by stddev() on columns of table "delreg_tickets"
"""
input delreg_tickets_stddev_order_by {
  delreg_coupon_id: order_by
  delreg_question_id: order_by
  delreg_ticket_heading_id: order_by
  display_order: order_by
  id: order_by
  maximum_per_registration: order_by
  price: order_by
  quantity: order_by
}

"""aggregate stddev_pop on columns"""
type delreg_tickets_stddev_pop_fields {
   delreg_coupon_id: Float
   delreg_question_id: Float
   delreg_ticket_heading_id: Float
   display_order: Float
   id: Float
   maximum_per_registration: Float
   price: Float
   quantity: Float
}

"""
order by stddev_pop() on columns of table "delreg_tickets"
"""
input delreg_tickets_stddev_pop_order_by {
  delreg_coupon_id: order_by
  delreg_question_id: order_by
  delreg_ticket_heading_id: order_by
  display_order: order_by
  id: order_by
  maximum_per_registration: order_by
  price: order_by
  quantity: order_by
}

"""aggregate stddev_samp on columns"""
type delreg_tickets_stddev_samp_fields {
   delreg_coupon_id: Float
   delreg_question_id: Float
   delreg_ticket_heading_id: Float
   display_order: Float
   id: Float
   maximum_per_registration: Float
   price: Float
   quantity: Float
}

"""
order by stddev_samp() on columns of table "delreg_tickets"
"""
input delreg_tickets_stddev_samp_order_by {
  delreg_coupon_id: order_by
  delreg_question_id: order_by
  delreg_ticket_heading_id: order_by
  display_order: order_by
  id: order_by
  maximum_per_registration: order_by
  price: order_by
  quantity: order_by
}

"""
Streaming cursor of the table "delreg_tickets"
"""
input delreg_tickets_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: delreg_tickets_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input delreg_tickets_stream_cursor_value_input {
  allow_multiple: Boolean
  delreg_coupon_id: Int
  delreg_question_id: Int
  delreg_ticket_heading_id: Int
  depends_on_parent: Boolean
  depends_on_parent_option: String
  display_order: Int
  end_date: date
  hidden: Boolean
  id: Int
  maximum_per_registration: Int
  name: String
  price: Int
  quantity: Int
  start_date: date
}

"""aggregate sum on columns"""
type delreg_tickets_sum_fields {
   delreg_coupon_id: Int
   delreg_question_id: Int
   delreg_ticket_heading_id: Int
   display_order: Int
   id: Int
   maximum_per_registration: Int
   price: Int
   quantity: Int
}

"""
order by sum() on columns of table "delreg_tickets"
"""
input delreg_tickets_sum_order_by {
  delreg_coupon_id: order_by
  delreg_question_id: order_by
  delreg_ticket_heading_id: order_by
  display_order: order_by
  id: order_by
  maximum_per_registration: order_by
  price: order_by
  quantity: order_by
}

"""
update columns of table "delreg_tickets"
"""
enum delreg_tickets_update_column {
  """column name"""
allow_multiple
  """column name"""
delreg_coupon_id
  """column name"""
delreg_question_id
  """column name"""
delreg_ticket_heading_id
  """column name"""
depends_on_parent
  """column name"""
depends_on_parent_option
  """column name"""
display_order
  """column name"""
end_date
  """column name"""
hidden
  """column name"""
id
  """column name"""
maximum_per_registration
  """column name"""
name
  """column name"""
price
  """column name"""
quantity
  """column name"""
start_date
}

input delreg_tickets_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: delreg_tickets_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: delreg_tickets_set_input
  where: delreg_tickets_bool_exp! 
}

"""aggregate var_pop on columns"""
type delreg_tickets_var_pop_fields {
   delreg_coupon_id: Float
   delreg_question_id: Float
   delreg_ticket_heading_id: Float
   display_order: Float
   id: Float
   maximum_per_registration: Float
   price: Float
   quantity: Float
}

"""
order by var_pop() on columns of table "delreg_tickets"
"""
input delreg_tickets_var_pop_order_by {
  delreg_coupon_id: order_by
  delreg_question_id: order_by
  delreg_ticket_heading_id: order_by
  display_order: order_by
  id: order_by
  maximum_per_registration: order_by
  price: order_by
  quantity: order_by
}

"""aggregate var_samp on columns"""
type delreg_tickets_var_samp_fields {
   delreg_coupon_id: Float
   delreg_question_id: Float
   delreg_ticket_heading_id: Float
   display_order: Float
   id: Float
   maximum_per_registration: Float
   price: Float
   quantity: Float
}

"""
order by var_samp() on columns of table "delreg_tickets"
"""
input delreg_tickets_var_samp_order_by {
  delreg_coupon_id: order_by
  delreg_question_id: order_by
  delreg_ticket_heading_id: order_by
  display_order: order_by
  id: order_by
  maximum_per_registration: order_by
  price: order_by
  quantity: order_by
}

"""aggregate variance on columns"""
type delreg_tickets_variance_fields {
   delreg_coupon_id: Float
   delreg_question_id: Float
   delreg_ticket_heading_id: Float
   display_order: Float
   id: Float
   maximum_per_registration: Float
   price: Float
   quantity: Float
}

"""
order by variance() on columns of table "delreg_tickets"
"""
input delreg_tickets_variance_order_by {
  delreg_coupon_id: order_by
  delreg_question_id: order_by
  delreg_ticket_heading_id: order_by
  display_order: order_by
  id: order_by
  maximum_per_registration: order_by
  price: order_by
  quantity: order_by
}

"""
columns and relationships of "dr_addon_coupons"
"""
type dr_addon_coupons {
  """An object relationship"""
 addon: dr_addons
   addon_id: uuid! 
  """An object relationship"""
 coupon: dr_coupons
   coupon_id: uuid! 
   created_at: timestamptz! 
   id: uuid! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_addon_coupons"
"""
type dr_addon_coupons_aggregate {
   aggregate: dr_addon_coupons_aggregate_fields
   nodes: [dr_addon_coupons! ]! 
}

input dr_addon_coupons_aggregate_bool_exp {
  count: dr_addon_coupons_aggregate_bool_exp_count
}

input dr_addon_coupons_aggregate_bool_exp_count {
  arguments: [dr_addon_coupons_select_column! ]
  distinct: Boolean
  filter: dr_addon_coupons_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_addon_coupons"
"""
type dr_addon_coupons_aggregate_fields {
   count(columns: [dr_addon_coupons_select_column! ], distinct: Boolean): Int! 
   max: dr_addon_coupons_max_fields
   min: dr_addon_coupons_min_fields
}

"""
order by aggregate values of table "dr_addon_coupons"
"""
input dr_addon_coupons_aggregate_order_by {
  count: order_by
  max: dr_addon_coupons_max_order_by
  min: dr_addon_coupons_min_order_by
}

"""
input type for inserting array relation for remote table "dr_addon_coupons"
"""
input dr_addon_coupons_arr_rel_insert_input {
  data: [dr_addon_coupons_insert_input! ]! 
  """upsert condition"""
on_conflict: dr_addon_coupons_on_conflict
}

"""
Boolean expression to filter rows from the table "dr_addon_coupons". All fields are combined with a logical 'AND'.
"""
input dr_addon_coupons_bool_exp {
  _and: [dr_addon_coupons_bool_exp! ]
  _not: dr_addon_coupons_bool_exp
  _or: [dr_addon_coupons_bool_exp! ]
  addon: dr_addons_bool_exp
  addon_id: uuid_comparison_exp
  coupon: dr_coupons_bool_exp
  coupon_id: uuid_comparison_exp
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_addon_coupons"
"""
enum dr_addon_coupons_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_addon_coupons_pkey
}

"""
input type for inserting data into table "dr_addon_coupons"
"""
input dr_addon_coupons_insert_input {
  addon: dr_addons_obj_rel_insert_input
  addon_id: uuid! 
  coupon: dr_coupons_obj_rel_insert_input
  coupon_id: uuid! 
  created_at: timestamptz! 
  id: uuid! 
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_addon_coupons_max_fields {
   addon_id: uuid
   coupon_id: uuid
   created_at: timestamptz
   id: uuid
   updated_at: timestamptz
}

"""
order by max() on columns of table "dr_addon_coupons"
"""
input dr_addon_coupons_max_order_by {
  addon_id: order_by
  coupon_id: order_by
  created_at: order_by
  id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type dr_addon_coupons_min_fields {
   addon_id: uuid
   coupon_id: uuid
   created_at: timestamptz
   id: uuid
   updated_at: timestamptz
}

"""
order by min() on columns of table "dr_addon_coupons"
"""
input dr_addon_coupons_min_order_by {
  addon_id: order_by
  coupon_id: order_by
  created_at: order_by
  id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "dr_addon_coupons"
"""
type dr_addon_coupons_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_addon_coupons! ]! 
}

"""
on_conflict condition type for table "dr_addon_coupons"
"""
input dr_addon_coupons_on_conflict {
  constraint: dr_addon_coupons_constraint! 
  update_columns: [dr_addon_coupons_update_column! ]! 
  where: dr_addon_coupons_bool_exp
}

"""Ordering options when selecting data from "dr_addon_coupons"."""
input dr_addon_coupons_order_by {
  addon: dr_addons_order_by
  addon_id: order_by
  coupon: dr_coupons_order_by
  coupon_id: order_by
  created_at: order_by
  id: order_by
  updated_at: order_by
}

"""primary key columns input for table: dr_addon_coupons"""
input dr_addon_coupons_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_addon_coupons"
"""
enum dr_addon_coupons_select_column {
  """column name"""
addon_id
  """column name"""
coupon_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_addon_coupons"
"""
input dr_addon_coupons_set_input {
  addon_id: uuid
  coupon_id: uuid
  created_at: timestamptz
  id: uuid
  updated_at: timestamptz
}

"""
Streaming cursor of the table "dr_addon_coupons"
"""
input dr_addon_coupons_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_addon_coupons_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_addon_coupons_stream_cursor_value_input {
  addon_id: uuid
  coupon_id: uuid
  created_at: timestamptz
  id: uuid
  updated_at: timestamptz
}

"""
update columns of table "dr_addon_coupons"
"""
enum dr_addon_coupons_update_column {
  """column name"""
addon_id
  """column name"""
coupon_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
updated_at
}

input dr_addon_coupons_updates {
  """sets the columns of the filtered rows to the given values"""
_set: dr_addon_coupons_set_input
  where: dr_addon_coupons_bool_exp! 
}

"""
columns and relationships of "dr_addon_coupons_view"
"""
type dr_addon_coupons_view {
  """An object relationship"""
 addon: dr_addons
   addon_id: uuid
  """An object relationship"""
 coupon: dr_coupons
   coupon_id: uuid
}

"""
aggregated selection of "dr_addon_coupons_view"
"""
type dr_addon_coupons_view_aggregate {
   aggregate: dr_addon_coupons_view_aggregate_fields
   nodes: [dr_addon_coupons_view! ]! 
}

input dr_addon_coupons_view_aggregate_bool_exp {
  count: dr_addon_coupons_view_aggregate_bool_exp_count
}

input dr_addon_coupons_view_aggregate_bool_exp_count {
  arguments: [dr_addon_coupons_view_select_column! ]
  distinct: Boolean
  filter: dr_addon_coupons_view_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_addon_coupons_view"
"""
type dr_addon_coupons_view_aggregate_fields {
   count(columns: [dr_addon_coupons_view_select_column! ], distinct: Boolean): Int! 
   max: dr_addon_coupons_view_max_fields
   min: dr_addon_coupons_view_min_fields
}

"""
order by aggregate values of table "dr_addon_coupons_view"
"""
input dr_addon_coupons_view_aggregate_order_by {
  count: order_by
  max: dr_addon_coupons_view_max_order_by
  min: dr_addon_coupons_view_min_order_by
}

"""
input type for inserting array relation for remote table "dr_addon_coupons_view"
"""
input dr_addon_coupons_view_arr_rel_insert_input {
  data: [dr_addon_coupons_view_insert_input! ]! 
}

"""
Boolean expression to filter rows from the table "dr_addon_coupons_view". All fields are combined with a logical 'AND'.
"""
input dr_addon_coupons_view_bool_exp {
  _and: [dr_addon_coupons_view_bool_exp! ]
  _not: dr_addon_coupons_view_bool_exp
  _or: [dr_addon_coupons_view_bool_exp! ]
  addon: dr_addons_bool_exp
  addon_id: uuid_comparison_exp
  coupon: dr_coupons_bool_exp
  coupon_id: uuid_comparison_exp
}

"""
input type for inserting data into table "dr_addon_coupons_view"
"""
input dr_addon_coupons_view_insert_input {
  addon: dr_addons_obj_rel_insert_input
  addon_id: uuid
  coupon: dr_coupons_obj_rel_insert_input
  coupon_id: uuid
}

"""aggregate max on columns"""
type dr_addon_coupons_view_max_fields {
   addon_id: uuid
   coupon_id: uuid
}

"""
order by max() on columns of table "dr_addon_coupons_view"
"""
input dr_addon_coupons_view_max_order_by {
  addon_id: order_by
  coupon_id: order_by
}

"""aggregate min on columns"""
type dr_addon_coupons_view_min_fields {
   addon_id: uuid
   coupon_id: uuid
}

"""
order by min() on columns of table "dr_addon_coupons_view"
"""
input dr_addon_coupons_view_min_order_by {
  addon_id: order_by
  coupon_id: order_by
}

"""Ordering options when selecting data from "dr_addon_coupons_view"."""
input dr_addon_coupons_view_order_by {
  addon: dr_addons_order_by
  addon_id: order_by
  coupon: dr_coupons_order_by
  coupon_id: order_by
}

"""
select columns of table "dr_addon_coupons_view"
"""
enum dr_addon_coupons_view_select_column {
  """column name"""
addon_id
  """column name"""
coupon_id
}

"""
Streaming cursor of the table "dr_addon_coupons_view"
"""
input dr_addon_coupons_view_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_addon_coupons_view_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_addon_coupons_view_stream_cursor_value_input {
  addon_id: uuid
  coupon_id: uuid
}

"""
columns and relationships of "dr_addon_questions"
"""
type dr_addon_questions {
  """An object relationship"""
 addon: dr_addons! 
   addon_id: uuid! 
   created_at: timestamptz! 
   id: uuid! 
  """An object relationship"""
 question: dr_questions! 
   question_id: uuid! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_addon_questions"
"""
type dr_addon_questions_aggregate {
   aggregate: dr_addon_questions_aggregate_fields
   nodes: [dr_addon_questions! ]! 
}

input dr_addon_questions_aggregate_bool_exp {
  count: dr_addon_questions_aggregate_bool_exp_count
}

input dr_addon_questions_aggregate_bool_exp_count {
  arguments: [dr_addon_questions_select_column! ]
  distinct: Boolean
  filter: dr_addon_questions_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_addon_questions"
"""
type dr_addon_questions_aggregate_fields {
   count(columns: [dr_addon_questions_select_column! ], distinct: Boolean): Int! 
   max: dr_addon_questions_max_fields
   min: dr_addon_questions_min_fields
}

"""
order by aggregate values of table "dr_addon_questions"
"""
input dr_addon_questions_aggregate_order_by {
  count: order_by
  max: dr_addon_questions_max_order_by
  min: dr_addon_questions_min_order_by
}

"""
input type for inserting array relation for remote table "dr_addon_questions"
"""
input dr_addon_questions_arr_rel_insert_input {
  data: [dr_addon_questions_insert_input! ]! 
  """upsert condition"""
on_conflict: dr_addon_questions_on_conflict
}

"""
Boolean expression to filter rows from the table "dr_addon_questions". All fields are combined with a logical 'AND'.
"""
input dr_addon_questions_bool_exp {
  _and: [dr_addon_questions_bool_exp! ]
  _not: dr_addon_questions_bool_exp
  _or: [dr_addon_questions_bool_exp! ]
  addon: dr_addons_bool_exp
  addon_id: uuid_comparison_exp
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  question: dr_questions_bool_exp
  question_id: uuid_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_addon_questions"
"""
enum dr_addon_questions_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_addon_questions_pkey
}

"""
input type for inserting data into table "dr_addon_questions"
"""
input dr_addon_questions_insert_input {
  addon: dr_addons_obj_rel_insert_input
  addon_id: uuid! 
  created_at: timestamptz! 
  id: uuid! 
  question: dr_questions_obj_rel_insert_input
  question_id: uuid! 
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_addon_questions_max_fields {
   addon_id: uuid
   created_at: timestamptz
   id: uuid
   question_id: uuid
   updated_at: timestamptz
}

"""
order by max() on columns of table "dr_addon_questions"
"""
input dr_addon_questions_max_order_by {
  addon_id: order_by
  created_at: order_by
  id: order_by
  question_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type dr_addon_questions_min_fields {
   addon_id: uuid
   created_at: timestamptz
   id: uuid
   question_id: uuid
   updated_at: timestamptz
}

"""
order by min() on columns of table "dr_addon_questions"
"""
input dr_addon_questions_min_order_by {
  addon_id: order_by
  created_at: order_by
  id: order_by
  question_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "dr_addon_questions"
"""
type dr_addon_questions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_addon_questions! ]! 
}

"""
on_conflict condition type for table "dr_addon_questions"
"""
input dr_addon_questions_on_conflict {
  constraint: dr_addon_questions_constraint! 
  update_columns: [dr_addon_questions_update_column! ]! 
  where: dr_addon_questions_bool_exp
}

"""Ordering options when selecting data from "dr_addon_questions"."""
input dr_addon_questions_order_by {
  addon: dr_addons_order_by
  addon_id: order_by
  created_at: order_by
  id: order_by
  question: dr_questions_order_by
  question_id: order_by
  updated_at: order_by
}

"""primary key columns input for table: dr_addon_questions"""
input dr_addon_questions_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_addon_questions"
"""
enum dr_addon_questions_select_column {
  """column name"""
addon_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
question_id
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_addon_questions"
"""
input dr_addon_questions_set_input {
  addon_id: uuid
  created_at: timestamptz
  id: uuid
  question_id: uuid
  updated_at: timestamptz
}

"""
Streaming cursor of the table "dr_addon_questions"
"""
input dr_addon_questions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_addon_questions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_addon_questions_stream_cursor_value_input {
  addon_id: uuid
  created_at: timestamptz
  id: uuid
  question_id: uuid
  updated_at: timestamptz
}

"""
update columns of table "dr_addon_questions"
"""
enum dr_addon_questions_update_column {
  """column name"""
addon_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
question_id
  """column name"""
updated_at
}

input dr_addon_questions_updates {
  """sets the columns of the filtered rows to the given values"""
_set: dr_addon_questions_set_input
  where: dr_addon_questions_bool_exp! 
}

"""
columns and relationships of "dr_addon_tax_rules"
"""
type dr_addon_tax_rules {
  """An object relationship"""
 addon: dr_addons
   addon_id: uuid! 
   created_at: timestamptz! 
   id: uuid! 
  """An object relationship"""
 tax_rule: dr_tax_rules
   tax_rule_id: uuid! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_addon_tax_rules"
"""
type dr_addon_tax_rules_aggregate {
   aggregate: dr_addon_tax_rules_aggregate_fields
   nodes: [dr_addon_tax_rules! ]! 
}

"""
aggregate fields of "dr_addon_tax_rules"
"""
type dr_addon_tax_rules_aggregate_fields {
   count(columns: [dr_addon_tax_rules_select_column! ], distinct: Boolean): Int! 
   max: dr_addon_tax_rules_max_fields
   min: dr_addon_tax_rules_min_fields
}

"""
Boolean expression to filter rows from the table "dr_addon_tax_rules". All fields are combined with a logical 'AND'.
"""
input dr_addon_tax_rules_bool_exp {
  _and: [dr_addon_tax_rules_bool_exp! ]
  _not: dr_addon_tax_rules_bool_exp
  _or: [dr_addon_tax_rules_bool_exp! ]
  addon: dr_addons_bool_exp
  addon_id: uuid_comparison_exp
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  tax_rule: dr_tax_rules_bool_exp
  tax_rule_id: uuid_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_addon_tax_rules"
"""
enum dr_addon_tax_rules_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_addon_tax_rules_pkey
}

"""
input type for inserting data into table "dr_addon_tax_rules"
"""
input dr_addon_tax_rules_insert_input {
  addon: dr_addons_obj_rel_insert_input
  addon_id: uuid! 
  created_at: timestamptz! 
  id: uuid! 
  tax_rule: dr_tax_rules_obj_rel_insert_input
  tax_rule_id: uuid! 
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_addon_tax_rules_max_fields {
   addon_id: uuid
   created_at: timestamptz
   id: uuid
   tax_rule_id: uuid
   updated_at: timestamptz
}

"""aggregate min on columns"""
type dr_addon_tax_rules_min_fields {
   addon_id: uuid
   created_at: timestamptz
   id: uuid
   tax_rule_id: uuid
   updated_at: timestamptz
}

"""
response of any mutation on the table "dr_addon_tax_rules"
"""
type dr_addon_tax_rules_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_addon_tax_rules! ]! 
}

"""
on_conflict condition type for table "dr_addon_tax_rules"
"""
input dr_addon_tax_rules_on_conflict {
  constraint: dr_addon_tax_rules_constraint! 
  update_columns: [dr_addon_tax_rules_update_column! ]! 
  where: dr_addon_tax_rules_bool_exp
}

"""Ordering options when selecting data from "dr_addon_tax_rules"."""
input dr_addon_tax_rules_order_by {
  addon: dr_addons_order_by
  addon_id: order_by
  created_at: order_by
  id: order_by
  tax_rule: dr_tax_rules_order_by
  tax_rule_id: order_by
  updated_at: order_by
}

"""primary key columns input for table: dr_addon_tax_rules"""
input dr_addon_tax_rules_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_addon_tax_rules"
"""
enum dr_addon_tax_rules_select_column {
  """column name"""
addon_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
tax_rule_id
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_addon_tax_rules"
"""
input dr_addon_tax_rules_set_input {
  addon_id: uuid
  created_at: timestamptz
  id: uuid
  tax_rule_id: uuid
  updated_at: timestamptz
}

"""
Streaming cursor of the table "dr_addon_tax_rules"
"""
input dr_addon_tax_rules_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_addon_tax_rules_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_addon_tax_rules_stream_cursor_value_input {
  addon_id: uuid
  created_at: timestamptz
  id: uuid
  tax_rule_id: uuid
  updated_at: timestamptz
}

"""
update columns of table "dr_addon_tax_rules"
"""
enum dr_addon_tax_rules_update_column {
  """column name"""
addon_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
tax_rule_id
  """column name"""
updated_at
}

input dr_addon_tax_rules_updates {
  """sets the columns of the filtered rows to the given values"""
_set: dr_addon_tax_rules_set_input
  where: dr_addon_tax_rules_bool_exp! 
}

"""
columns and relationships of "dr_addon_tax_rules_view"
"""
type dr_addon_tax_rules_view {
  """An object relationship"""
 addon: dr_addons
   addon_id: uuid
  """An object relationship"""
 tax_rule: dr_tax_rules
   tax_rule_id: uuid
}

"""
aggregated selection of "dr_addon_tax_rules_view"
"""
type dr_addon_tax_rules_view_aggregate {
   aggregate: dr_addon_tax_rules_view_aggregate_fields
   nodes: [dr_addon_tax_rules_view! ]! 
}

input dr_addon_tax_rules_view_aggregate_bool_exp {
  count: dr_addon_tax_rules_view_aggregate_bool_exp_count
}

input dr_addon_tax_rules_view_aggregate_bool_exp_count {
  arguments: [dr_addon_tax_rules_view_select_column! ]
  distinct: Boolean
  filter: dr_addon_tax_rules_view_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_addon_tax_rules_view"
"""
type dr_addon_tax_rules_view_aggregate_fields {
   count(columns: [dr_addon_tax_rules_view_select_column! ], distinct: Boolean): Int! 
   max: dr_addon_tax_rules_view_max_fields
   min: dr_addon_tax_rules_view_min_fields
}

"""
order by aggregate values of table "dr_addon_tax_rules_view"
"""
input dr_addon_tax_rules_view_aggregate_order_by {
  count: order_by
  max: dr_addon_tax_rules_view_max_order_by
  min: dr_addon_tax_rules_view_min_order_by
}

"""
input type for inserting array relation for remote table "dr_addon_tax_rules_view"
"""
input dr_addon_tax_rules_view_arr_rel_insert_input {
  data: [dr_addon_tax_rules_view_insert_input! ]! 
}

"""
Boolean expression to filter rows from the table "dr_addon_tax_rules_view". All fields are combined with a logical 'AND'.
"""
input dr_addon_tax_rules_view_bool_exp {
  _and: [dr_addon_tax_rules_view_bool_exp! ]
  _not: dr_addon_tax_rules_view_bool_exp
  _or: [dr_addon_tax_rules_view_bool_exp! ]
  addon: dr_addons_bool_exp
  addon_id: uuid_comparison_exp
  tax_rule: dr_tax_rules_bool_exp
  tax_rule_id: uuid_comparison_exp
}

"""
input type for inserting data into table "dr_addon_tax_rules_view"
"""
input dr_addon_tax_rules_view_insert_input {
  addon: dr_addons_obj_rel_insert_input
  addon_id: uuid
  tax_rule: dr_tax_rules_obj_rel_insert_input
  tax_rule_id: uuid
}

"""aggregate max on columns"""
type dr_addon_tax_rules_view_max_fields {
   addon_id: uuid
   tax_rule_id: uuid
}

"""
order by max() on columns of table "dr_addon_tax_rules_view"
"""
input dr_addon_tax_rules_view_max_order_by {
  addon_id: order_by
  tax_rule_id: order_by
}

"""aggregate min on columns"""
type dr_addon_tax_rules_view_min_fields {
   addon_id: uuid
   tax_rule_id: uuid
}

"""
order by min() on columns of table "dr_addon_tax_rules_view"
"""
input dr_addon_tax_rules_view_min_order_by {
  addon_id: order_by
  tax_rule_id: order_by
}

"""Ordering options when selecting data from "dr_addon_tax_rules_view"."""
input dr_addon_tax_rules_view_order_by {
  addon: dr_addons_order_by
  addon_id: order_by
  tax_rule: dr_tax_rules_order_by
  tax_rule_id: order_by
}

"""
select columns of table "dr_addon_tax_rules_view"
"""
enum dr_addon_tax_rules_view_select_column {
  """column name"""
addon_id
  """column name"""
tax_rule_id
}

"""
Streaming cursor of the table "dr_addon_tax_rules_view"
"""
input dr_addon_tax_rules_view_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_addon_tax_rules_view_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_addon_tax_rules_view_stream_cursor_value_input {
  addon_id: uuid
  tax_rule_id: uuid
}

"""
columns and relationships of "dr_addons"
"""
type dr_addons {
  """An object relationship"""
 active_count: dr_attendee_addon_count
   archived: Boolean! 
  """An array relationship"""
 attendee_addons("""distinct select on columns"""
distinct_on: [dr_attendee_addons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addons_order_by! ], """filter the rows returned"""
where: dr_attendee_addons_bool_exp): [dr_attendee_addons! ]! 
  """An aggregate relationship"""
 attendee_addons_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_addons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addons_order_by! ], """filter the rows returned"""
where: dr_attendee_addons_bool_exp): dr_attendee_addons_aggregate! 
   available_from: date
  """
  A computed field, executes function "dr_addons_available_on_all_tickets"
  """
 available_on_all_tickets: Boolean
   available_to: date
  """An array relationship"""
 coupons("""distinct select on columns"""
distinct_on: [dr_addon_coupons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_coupons_view_order_by! ], """filter the rows returned"""
where: dr_addon_coupons_view_bool_exp): [dr_addon_coupons_view! ]! 
  """An aggregate relationship"""
 coupons_aggregate("""distinct select on columns"""
distinct_on: [dr_addon_coupons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_coupons_view_order_by! ], """filter the rows returned"""
where: dr_addon_coupons_view_bool_exp): dr_addon_coupons_view_aggregate! 
   created_at: timestamptz! 
   description: String
   display_order: Int! 
   event_id: Int! 
   hidden: Boolean! 
   id: uuid! 
   max_per_order: Int
   name: String! 
   price: Int! 
   quantity_available: Int
  """An array relationship"""
 tax_rules("""distinct select on columns"""
distinct_on: [dr_addon_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_addon_tax_rules_view_bool_exp): [dr_addon_tax_rules_view! ]! 
  """An aggregate relationship"""
 tax_rules_aggregate("""distinct select on columns"""
distinct_on: [dr_addon_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_addon_tax_rules_view_bool_exp): dr_addon_tax_rules_view_aggregate! 
  """An array relationship"""
 ticket_addons("""distinct select on columns"""
distinct_on: [dr_ticket_addons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_addons_view_order_by! ], """filter the rows returned"""
where: dr_ticket_addons_view_bool_exp): [dr_ticket_addons_view! ]! 
  """An aggregate relationship"""
 ticket_addons_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_addons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_addons_view_order_by! ], """filter the rows returned"""
where: dr_ticket_addons_view_bool_exp): dr_ticket_addons_view_aggregate! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_addons"
"""
type dr_addons_aggregate {
   aggregate: dr_addons_aggregate_fields
   nodes: [dr_addons! ]! 
}

"""
aggregate fields of "dr_addons"
"""
type dr_addons_aggregate_fields {
   avg: dr_addons_avg_fields
   count(columns: [dr_addons_select_column! ], distinct: Boolean): Int! 
   max: dr_addons_max_fields
   min: dr_addons_min_fields
   stddev: dr_addons_stddev_fields
   stddev_pop: dr_addons_stddev_pop_fields
   stddev_samp: dr_addons_stddev_samp_fields
   sum: dr_addons_sum_fields
   var_pop: dr_addons_var_pop_fields
   var_samp: dr_addons_var_samp_fields
   variance: dr_addons_variance_fields
}

"""aggregate avg on columns"""
type dr_addons_avg_fields {
   display_order: Float
   event_id: Float
   max_per_order: Float
   price: Float
   quantity_available: Float
}

"""
Boolean expression to filter rows from the table "dr_addons". All fields are combined with a logical 'AND'.
"""
input dr_addons_bool_exp {
  _and: [dr_addons_bool_exp! ]
  _not: dr_addons_bool_exp
  _or: [dr_addons_bool_exp! ]
  active_count: dr_attendee_addon_count_bool_exp
  archived: Boolean_comparison_exp
  attendee_addons: dr_attendee_addons_bool_exp
  attendee_addons_aggregate: dr_attendee_addons_aggregate_bool_exp
  available_from: date_comparison_exp
  available_on_all_tickets: Boolean_comparison_exp
  available_to: date_comparison_exp
  coupons: dr_addon_coupons_view_bool_exp
  coupons_aggregate: dr_addon_coupons_view_aggregate_bool_exp
  created_at: timestamptz_comparison_exp
  description: String_comparison_exp
  display_order: Int_comparison_exp
  event_id: Int_comparison_exp
  hidden: Boolean_comparison_exp
  id: uuid_comparison_exp
  max_per_order: Int_comparison_exp
  name: String_comparison_exp
  price: Int_comparison_exp
  quantity_available: Int_comparison_exp
  tax_rules: dr_addon_tax_rules_view_bool_exp
  tax_rules_aggregate: dr_addon_tax_rules_view_aggregate_bool_exp
  ticket_addons: dr_ticket_addons_view_bool_exp
  ticket_addons_aggregate: dr_ticket_addons_view_aggregate_bool_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_addons"
"""
enum dr_addons_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_addons_pkey
}

"""
input type for incrementing numeric columns in table "dr_addons"
"""
input dr_addons_inc_input {
  display_order: Int
  event_id: Int
  max_per_order: Int
  price: Int
  quantity_available: Int
}

"""
input type for inserting data into table "dr_addons"
"""
input dr_addons_insert_input {
  active_count: dr_attendee_addon_count_obj_rel_insert_input
  archived: Boolean! 
  attendee_addons: dr_attendee_addons_arr_rel_insert_input
  available_from: date
  available_to: date
  coupons: dr_addon_coupons_view_arr_rel_insert_input
  created_at: timestamptz! 
  description: String
  display_order: Int! 
  event_id: Int! 
  hidden: Boolean! 
  id: uuid! 
  max_per_order: Int
  name: String! 
  price: Int! 
  quantity_available: Int
  tax_rules: dr_addon_tax_rules_view_arr_rel_insert_input
  ticket_addons: dr_ticket_addons_view_arr_rel_insert_input
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_addons_max_fields {
   available_from: date
   available_to: date
   created_at: timestamptz
   description: String
   display_order: Int
   event_id: Int
   id: uuid
   max_per_order: Int
   name: String
   price: Int
   quantity_available: Int
   updated_at: timestamptz
}

"""aggregate min on columns"""
type dr_addons_min_fields {
   available_from: date
   available_to: date
   created_at: timestamptz
   description: String
   display_order: Int
   event_id: Int
   id: uuid
   max_per_order: Int
   name: String
   price: Int
   quantity_available: Int
   updated_at: timestamptz
}

"""
response of any mutation on the table "dr_addons"
"""
type dr_addons_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_addons! ]! 
}

"""
input type for inserting object relation for remote table "dr_addons"
"""
input dr_addons_obj_rel_insert_input {
  data: dr_addons_insert_input! 
  """upsert condition"""
on_conflict: dr_addons_on_conflict
}

"""
on_conflict condition type for table "dr_addons"
"""
input dr_addons_on_conflict {
  constraint: dr_addons_constraint! 
  update_columns: [dr_addons_update_column! ]! 
  where: dr_addons_bool_exp
}

"""Ordering options when selecting data from "dr_addons"."""
input dr_addons_order_by {
  active_count: dr_attendee_addon_count_order_by
  archived: order_by
  attendee_addons_aggregate: dr_attendee_addons_aggregate_order_by
  available_from: order_by
  available_on_all_tickets: order_by
  available_to: order_by
  coupons_aggregate: dr_addon_coupons_view_aggregate_order_by
  created_at: order_by
  description: order_by
  display_order: order_by
  event_id: order_by
  hidden: order_by
  id: order_by
  max_per_order: order_by
  name: order_by
  price: order_by
  quantity_available: order_by
  tax_rules_aggregate: dr_addon_tax_rules_view_aggregate_order_by
  ticket_addons_aggregate: dr_ticket_addons_view_aggregate_order_by
  updated_at: order_by
}

"""primary key columns input for table: dr_addons"""
input dr_addons_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_addons"
"""
enum dr_addons_select_column {
  """column name"""
archived
  """column name"""
available_from
  """column name"""
available_to
  """column name"""
created_at
  """column name"""
description
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
hidden
  """column name"""
id
  """column name"""
max_per_order
  """column name"""
name
  """column name"""
price
  """column name"""
quantity_available
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_addons"
"""
input dr_addons_set_input {
  archived: Boolean
  available_from: date
  available_to: date
  created_at: timestamptz
  description: String
  display_order: Int
  event_id: Int
  hidden: Boolean
  id: uuid
  max_per_order: Int
  name: String
  price: Int
  quantity_available: Int
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type dr_addons_stddev_fields {
   display_order: Float
   event_id: Float
   max_per_order: Float
   price: Float
   quantity_available: Float
}

"""aggregate stddev_pop on columns"""
type dr_addons_stddev_pop_fields {
   display_order: Float
   event_id: Float
   max_per_order: Float
   price: Float
   quantity_available: Float
}

"""aggregate stddev_samp on columns"""
type dr_addons_stddev_samp_fields {
   display_order: Float
   event_id: Float
   max_per_order: Float
   price: Float
   quantity_available: Float
}

"""
Streaming cursor of the table "dr_addons"
"""
input dr_addons_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_addons_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_addons_stream_cursor_value_input {
  archived: Boolean
  available_from: date
  available_to: date
  created_at: timestamptz
  description: String
  display_order: Int
  event_id: Int
  hidden: Boolean
  id: uuid
  max_per_order: Int
  name: String
  price: Int
  quantity_available: Int
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type dr_addons_sum_fields {
   display_order: Int
   event_id: Int
   max_per_order: Int
   price: Int
   quantity_available: Int
}

"""
update columns of table "dr_addons"
"""
enum dr_addons_update_column {
  """column name"""
archived
  """column name"""
available_from
  """column name"""
available_to
  """column name"""
created_at
  """column name"""
description
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
hidden
  """column name"""
id
  """column name"""
max_per_order
  """column name"""
name
  """column name"""
price
  """column name"""
quantity_available
  """column name"""
updated_at
}

input dr_addons_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_addons_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_addons_set_input
  where: dr_addons_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_addons_var_pop_fields {
   display_order: Float
   event_id: Float
   max_per_order: Float
   price: Float
   quantity_available: Float
}

"""aggregate var_samp on columns"""
type dr_addons_var_samp_fields {
   display_order: Float
   event_id: Float
   max_per_order: Float
   price: Float
   quantity_available: Float
}

"""aggregate variance on columns"""
type dr_addons_variance_fields {
   display_order: Float
   event_id: Float
   max_per_order: Float
   price: Float
   quantity_available: Float
}

"""
columns and relationships of "dr_analytics_event_types"
"""
type dr_analytics_event_types {
   comment: String
   value: String! 
}

"""
aggregated selection of "dr_analytics_event_types"
"""
type dr_analytics_event_types_aggregate {
   aggregate: dr_analytics_event_types_aggregate_fields
   nodes: [dr_analytics_event_types! ]! 
}

"""
aggregate fields of "dr_analytics_event_types"
"""
type dr_analytics_event_types_aggregate_fields {
   count(columns: [dr_analytics_event_types_select_column! ], distinct: Boolean): Int! 
   max: dr_analytics_event_types_max_fields
   min: dr_analytics_event_types_min_fields
}

"""
Boolean expression to filter rows from the table "dr_analytics_event_types". All fields are combined with a logical 'AND'.
"""
input dr_analytics_event_types_bool_exp {
  _and: [dr_analytics_event_types_bool_exp! ]
  _not: dr_analytics_event_types_bool_exp
  _or: [dr_analytics_event_types_bool_exp! ]
  comment: String_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "dr_analytics_event_types"
"""
enum dr_analytics_event_types_constraint {
  """
  unique or primary key constraint on columns "value"
  """
dr_analytics_event_types_pkey
}

enum dr_analytics_event_types_enum {
  page_view_attendee_checkout_ticket_selection
}

"""
Boolean expression to compare columns of type "dr_analytics_event_types_enum". All fields are combined with logical 'AND'.
"""
input dr_analytics_event_types_enum_comparison_exp {
  _eq: dr_analytics_event_types_enum
  _in: [dr_analytics_event_types_enum! ]
  _is_null: Boolean
  _neq: dr_analytics_event_types_enum
  _nin: [dr_analytics_event_types_enum! ]
}

"""
input type for inserting data into table "dr_analytics_event_types"
"""
input dr_analytics_event_types_insert_input {
  comment: String
  value: String! 
}

"""aggregate max on columns"""
type dr_analytics_event_types_max_fields {
   comment: String
   value: String
}

"""aggregate min on columns"""
type dr_analytics_event_types_min_fields {
   comment: String
   value: String
}

"""
response of any mutation on the table "dr_analytics_event_types"
"""
type dr_analytics_event_types_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_analytics_event_types! ]! 
}

"""
on_conflict condition type for table "dr_analytics_event_types"
"""
input dr_analytics_event_types_on_conflict {
  constraint: dr_analytics_event_types_constraint! 
  update_columns: [dr_analytics_event_types_update_column! ]! 
  where: dr_analytics_event_types_bool_exp
}

"""Ordering options when selecting data from "dr_analytics_event_types"."""
input dr_analytics_event_types_order_by {
  comment: order_by
  value: order_by
}

"""primary key columns input for table: dr_analytics_event_types"""
input dr_analytics_event_types_pk_columns_input {
  value: String! 
}

"""
select columns of table "dr_analytics_event_types"
"""
enum dr_analytics_event_types_select_column {
  """column name"""
comment
  """column name"""
value
}

"""
input type for updating data in table "dr_analytics_event_types"
"""
input dr_analytics_event_types_set_input {
  comment: String
  value: String
}

"""
Streaming cursor of the table "dr_analytics_event_types"
"""
input dr_analytics_event_types_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_analytics_event_types_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_analytics_event_types_stream_cursor_value_input {
  comment: String
  value: String
}

"""
update columns of table "dr_analytics_event_types"
"""
enum dr_analytics_event_types_update_column {
  """column name"""
comment
  """column name"""
value
}

input dr_analytics_event_types_updates {
  """sets the columns of the filtered rows to the given values"""
_set: dr_analytics_event_types_set_input
  where: dr_analytics_event_types_bool_exp! 
}

"""
columns and relationships of "dr_analytics_events"
"""
type dr_analytics_events {
   created_at: timestamptz! 
   event_id: Int! 
   event_type: dr_analytics_event_types_enum! 
   id: Int! 
   marketing_campaign_id: uuid
   updated_at: timestamptz! 
  """An object relationship"""
 user: users
   user_id: Int
}

"""
aggregated selection of "dr_analytics_events"
"""
type dr_analytics_events_aggregate {
   aggregate: dr_analytics_events_aggregate_fields
   nodes: [dr_analytics_events! ]! 
}

"""
aggregate fields of "dr_analytics_events"
"""
type dr_analytics_events_aggregate_fields {
   avg: dr_analytics_events_avg_fields
   count(columns: [dr_analytics_events_select_column! ], distinct: Boolean): Int! 
   max: dr_analytics_events_max_fields
   min: dr_analytics_events_min_fields
   stddev: dr_analytics_events_stddev_fields
   stddev_pop: dr_analytics_events_stddev_pop_fields
   stddev_samp: dr_analytics_events_stddev_samp_fields
   sum: dr_analytics_events_sum_fields
   var_pop: dr_analytics_events_var_pop_fields
   var_samp: dr_analytics_events_var_samp_fields
   variance: dr_analytics_events_variance_fields
}

"""aggregate avg on columns"""
type dr_analytics_events_avg_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
Boolean expression to filter rows from the table "dr_analytics_events". All fields are combined with a logical 'AND'.
"""
input dr_analytics_events_bool_exp {
  _and: [dr_analytics_events_bool_exp! ]
  _not: dr_analytics_events_bool_exp
  _or: [dr_analytics_events_bool_exp! ]
  created_at: timestamptz_comparison_exp
  event_id: Int_comparison_exp
  event_type: dr_analytics_event_types_enum_comparison_exp
  id: Int_comparison_exp
  marketing_campaign_id: uuid_comparison_exp
  updated_at: timestamptz_comparison_exp
  user: users_bool_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "dr_analytics_events"
"""
enum dr_analytics_events_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_analytics_events_pkey
}

"""
input type for incrementing numeric columns in table "dr_analytics_events"
"""
input dr_analytics_events_inc_input {
  event_id: Int
  id: Int
  user_id: Int
}

"""
input type for inserting data into table "dr_analytics_events"
"""
input dr_analytics_events_insert_input {
  created_at: timestamptz! 
  event_id: Int! 
  event_type: dr_analytics_event_types_enum! 
  id: Int! 
  marketing_campaign_id: uuid
  updated_at: timestamptz! 
  user: users_obj_rel_insert_input
  user_id: Int
}

"""aggregate max on columns"""
type dr_analytics_events_max_fields {
   created_at: timestamptz
   event_id: Int
   id: Int
   marketing_campaign_id: uuid
   updated_at: timestamptz
   user_id: Int
}

"""aggregate min on columns"""
type dr_analytics_events_min_fields {
   created_at: timestamptz
   event_id: Int
   id: Int
   marketing_campaign_id: uuid
   updated_at: timestamptz
   user_id: Int
}

"""
response of any mutation on the table "dr_analytics_events"
"""
type dr_analytics_events_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_analytics_events! ]! 
}

"""
on_conflict condition type for table "dr_analytics_events"
"""
input dr_analytics_events_on_conflict {
  constraint: dr_analytics_events_constraint! 
  update_columns: [dr_analytics_events_update_column! ]! 
  where: dr_analytics_events_bool_exp
}

"""Ordering options when selecting data from "dr_analytics_events"."""
input dr_analytics_events_order_by {
  created_at: order_by
  event_id: order_by
  event_type: order_by
  id: order_by
  marketing_campaign_id: order_by
  updated_at: order_by
  user: users_order_by
  user_id: order_by
}

"""primary key columns input for table: dr_analytics_events"""
input dr_analytics_events_pk_columns_input {
  id: Int! 
}

"""
select columns of table "dr_analytics_events"
"""
enum dr_analytics_events_select_column {
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
event_type
  """column name"""
id
  """column name"""
marketing_campaign_id
  """column name"""
updated_at
  """column name"""
user_id
}

"""
input type for updating data in table "dr_analytics_events"
"""
input dr_analytics_events_set_input {
  created_at: timestamptz
  event_id: Int
  event_type: dr_analytics_event_types_enum
  id: Int
  marketing_campaign_id: uuid
  updated_at: timestamptz
  user_id: Int
}

"""aggregate stddev on columns"""
type dr_analytics_events_stddev_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type dr_analytics_events_stddev_pop_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type dr_analytics_events_stddev_samp_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
Streaming cursor of the table "dr_analytics_events"
"""
input dr_analytics_events_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_analytics_events_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_analytics_events_stream_cursor_value_input {
  created_at: timestamptz
  event_id: Int
  event_type: dr_analytics_event_types_enum
  id: Int
  marketing_campaign_id: uuid
  updated_at: timestamptz
  user_id: Int
}

"""aggregate sum on columns"""
type dr_analytics_events_sum_fields {
   event_id: Int
   id: Int
   user_id: Int
}

"""
update columns of table "dr_analytics_events"
"""
enum dr_analytics_events_update_column {
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
event_type
  """column name"""
id
  """column name"""
marketing_campaign_id
  """column name"""
updated_at
  """column name"""
user_id
}

input dr_analytics_events_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_analytics_events_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_analytics_events_set_input
  where: dr_analytics_events_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_analytics_events_var_pop_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""aggregate var_samp on columns"""
type dr_analytics_events_var_samp_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""aggregate variance on columns"""
type dr_analytics_events_variance_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
columns and relationships of "dr_analytics_marketing_campaigns_view"
"""
type dr_analytics_marketing_campaigns_view {
   attendee_count: bigint
   date: date
   distinct_user_checkout_view_count: bigint
   event_id: Int
   marketing_campaign_id: uuid
   net_revenue: numeric
   order_count: bigint
   total_checkout_view_count: bigint
}

"""
aggregated selection of "dr_analytics_marketing_campaigns_view"
"""
type dr_analytics_marketing_campaigns_view_aggregate {
   aggregate: dr_analytics_marketing_campaigns_view_aggregate_fields
   nodes: [dr_analytics_marketing_campaigns_view! ]! 
}

input dr_analytics_marketing_campaigns_view_aggregate_bool_exp {
  count: dr_analytics_marketing_campaigns_view_aggregate_bool_exp_count
}

input dr_analytics_marketing_campaigns_view_aggregate_bool_exp_count {
  arguments: [dr_analytics_marketing_campaigns_view_select_column! ]
  distinct: Boolean
  filter: dr_analytics_marketing_campaigns_view_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_analytics_marketing_campaigns_view"
"""
type dr_analytics_marketing_campaigns_view_aggregate_fields {
   avg: dr_analytics_marketing_campaigns_view_avg_fields
   count(columns: [dr_analytics_marketing_campaigns_view_select_column! ], distinct: Boolean): Int! 
   max: dr_analytics_marketing_campaigns_view_max_fields
   min: dr_analytics_marketing_campaigns_view_min_fields
   stddev: dr_analytics_marketing_campaigns_view_stddev_fields
   stddev_pop: dr_analytics_marketing_campaigns_view_stddev_pop_fields
   stddev_samp: dr_analytics_marketing_campaigns_view_stddev_samp_fields
   sum: dr_analytics_marketing_campaigns_view_sum_fields
   var_pop: dr_analytics_marketing_campaigns_view_var_pop_fields
   var_samp: dr_analytics_marketing_campaigns_view_var_samp_fields
   variance: dr_analytics_marketing_campaigns_view_variance_fields
}

"""
order by aggregate values of table "dr_analytics_marketing_campaigns_view"
"""
input dr_analytics_marketing_campaigns_view_aggregate_order_by {
  avg: dr_analytics_marketing_campaigns_view_avg_order_by
  count: order_by
  max: dr_analytics_marketing_campaigns_view_max_order_by
  min: dr_analytics_marketing_campaigns_view_min_order_by
  stddev: dr_analytics_marketing_campaigns_view_stddev_order_by
  stddev_pop: dr_analytics_marketing_campaigns_view_stddev_pop_order_by
  stddev_samp: dr_analytics_marketing_campaigns_view_stddev_samp_order_by
  sum: dr_analytics_marketing_campaigns_view_sum_order_by
  var_pop: dr_analytics_marketing_campaigns_view_var_pop_order_by
  var_samp: dr_analytics_marketing_campaigns_view_var_samp_order_by
  variance: dr_analytics_marketing_campaigns_view_variance_order_by
}

"""
input type for inserting array relation for remote table "dr_analytics_marketing_campaigns_view"
"""
input dr_analytics_marketing_campaigns_view_arr_rel_insert_input {
  data: [dr_analytics_marketing_campaigns_view_insert_input! ]! 
}

"""aggregate avg on columns"""
type dr_analytics_marketing_campaigns_view_avg_fields {
   attendee_count: Float
   distinct_user_checkout_view_count: Float
   event_id: Float
   net_revenue: Float
   order_count: Float
   total_checkout_view_count: Float
}

"""
order by avg() on columns of table "dr_analytics_marketing_campaigns_view"
"""
input dr_analytics_marketing_campaigns_view_avg_order_by {
  attendee_count: order_by
  distinct_user_checkout_view_count: order_by
  event_id: order_by
  net_revenue: order_by
  order_count: order_by
  total_checkout_view_count: order_by
}

"""
Boolean expression to filter rows from the table "dr_analytics_marketing_campaigns_view". All fields are combined with a logical 'AND'.
"""
input dr_analytics_marketing_campaigns_view_bool_exp {
  _and: [dr_analytics_marketing_campaigns_view_bool_exp! ]
  _not: dr_analytics_marketing_campaigns_view_bool_exp
  _or: [dr_analytics_marketing_campaigns_view_bool_exp! ]
  attendee_count: bigint_comparison_exp
  date: date_comparison_exp
  distinct_user_checkout_view_count: bigint_comparison_exp
  event_id: Int_comparison_exp
  marketing_campaign_id: uuid_comparison_exp
  net_revenue: numeric_comparison_exp
  order_count: bigint_comparison_exp
  total_checkout_view_count: bigint_comparison_exp
}

"""
input type for inserting data into table "dr_analytics_marketing_campaigns_view"
"""
input dr_analytics_marketing_campaigns_view_insert_input {
  attendee_count: bigint
  date: date
  distinct_user_checkout_view_count: bigint
  event_id: Int
  marketing_campaign_id: uuid
  net_revenue: numeric
  order_count: bigint
  total_checkout_view_count: bigint
}

"""aggregate max on columns"""
type dr_analytics_marketing_campaigns_view_max_fields {
   attendee_count: bigint
   date: date
   distinct_user_checkout_view_count: bigint
   event_id: Int
   marketing_campaign_id: uuid
   net_revenue: numeric
   order_count: bigint
   total_checkout_view_count: bigint
}

"""
order by max() on columns of table "dr_analytics_marketing_campaigns_view"
"""
input dr_analytics_marketing_campaigns_view_max_order_by {
  attendee_count: order_by
  date: order_by
  distinct_user_checkout_view_count: order_by
  event_id: order_by
  marketing_campaign_id: order_by
  net_revenue: order_by
  order_count: order_by
  total_checkout_view_count: order_by
}

"""aggregate min on columns"""
type dr_analytics_marketing_campaigns_view_min_fields {
   attendee_count: bigint
   date: date
   distinct_user_checkout_view_count: bigint
   event_id: Int
   marketing_campaign_id: uuid
   net_revenue: numeric
   order_count: bigint
   total_checkout_view_count: bigint
}

"""
order by min() on columns of table "dr_analytics_marketing_campaigns_view"
"""
input dr_analytics_marketing_campaigns_view_min_order_by {
  attendee_count: order_by
  date: order_by
  distinct_user_checkout_view_count: order_by
  event_id: order_by
  marketing_campaign_id: order_by
  net_revenue: order_by
  order_count: order_by
  total_checkout_view_count: order_by
}

"""
Ordering options when selecting data from "dr_analytics_marketing_campaigns_view".
"""
input dr_analytics_marketing_campaigns_view_order_by {
  attendee_count: order_by
  date: order_by
  distinct_user_checkout_view_count: order_by
  event_id: order_by
  marketing_campaign_id: order_by
  net_revenue: order_by
  order_count: order_by
  total_checkout_view_count: order_by
}

"""
select columns of table "dr_analytics_marketing_campaigns_view"
"""
enum dr_analytics_marketing_campaigns_view_select_column {
  """column name"""
attendee_count
  """column name"""
date
  """column name"""
distinct_user_checkout_view_count
  """column name"""
event_id
  """column name"""
marketing_campaign_id
  """column name"""
net_revenue
  """column name"""
order_count
  """column name"""
total_checkout_view_count
}

"""aggregate stddev on columns"""
type dr_analytics_marketing_campaigns_view_stddev_fields {
   attendee_count: Float
   distinct_user_checkout_view_count: Float
   event_id: Float
   net_revenue: Float
   order_count: Float
   total_checkout_view_count: Float
}

"""
order by stddev() on columns of table "dr_analytics_marketing_campaigns_view"
"""
input dr_analytics_marketing_campaigns_view_stddev_order_by {
  attendee_count: order_by
  distinct_user_checkout_view_count: order_by
  event_id: order_by
  net_revenue: order_by
  order_count: order_by
  total_checkout_view_count: order_by
}

"""aggregate stddev_pop on columns"""
type dr_analytics_marketing_campaigns_view_stddev_pop_fields {
   attendee_count: Float
   distinct_user_checkout_view_count: Float
   event_id: Float
   net_revenue: Float
   order_count: Float
   total_checkout_view_count: Float
}

"""
order by stddev_pop() on columns of table "dr_analytics_marketing_campaigns_view"
"""
input dr_analytics_marketing_campaigns_view_stddev_pop_order_by {
  attendee_count: order_by
  distinct_user_checkout_view_count: order_by
  event_id: order_by
  net_revenue: order_by
  order_count: order_by
  total_checkout_view_count: order_by
}

"""aggregate stddev_samp on columns"""
type dr_analytics_marketing_campaigns_view_stddev_samp_fields {
   attendee_count: Float
   distinct_user_checkout_view_count: Float
   event_id: Float
   net_revenue: Float
   order_count: Float
   total_checkout_view_count: Float
}

"""
order by stddev_samp() on columns of table "dr_analytics_marketing_campaigns_view"
"""
input dr_analytics_marketing_campaigns_view_stddev_samp_order_by {
  attendee_count: order_by
  distinct_user_checkout_view_count: order_by
  event_id: order_by
  net_revenue: order_by
  order_count: order_by
  total_checkout_view_count: order_by
}

"""
Streaming cursor of the table "dr_analytics_marketing_campaigns_view"
"""
input dr_analytics_marketing_campaigns_view_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_analytics_marketing_campaigns_view_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_analytics_marketing_campaigns_view_stream_cursor_value_input {
  attendee_count: bigint
  date: date
  distinct_user_checkout_view_count: bigint
  event_id: Int
  marketing_campaign_id: uuid
  net_revenue: numeric
  order_count: bigint
  total_checkout_view_count: bigint
}

"""aggregate sum on columns"""
type dr_analytics_marketing_campaigns_view_sum_fields {
   attendee_count: bigint
   distinct_user_checkout_view_count: bigint
   event_id: Int
   net_revenue: numeric
   order_count: bigint
   total_checkout_view_count: bigint
}

"""
order by sum() on columns of table "dr_analytics_marketing_campaigns_view"
"""
input dr_analytics_marketing_campaigns_view_sum_order_by {
  attendee_count: order_by
  distinct_user_checkout_view_count: order_by
  event_id: order_by
  net_revenue: order_by
  order_count: order_by
  total_checkout_view_count: order_by
}

"""aggregate var_pop on columns"""
type dr_analytics_marketing_campaigns_view_var_pop_fields {
   attendee_count: Float
   distinct_user_checkout_view_count: Float
   event_id: Float
   net_revenue: Float
   order_count: Float
   total_checkout_view_count: Float
}

"""
order by var_pop() on columns of table "dr_analytics_marketing_campaigns_view"
"""
input dr_analytics_marketing_campaigns_view_var_pop_order_by {
  attendee_count: order_by
  distinct_user_checkout_view_count: order_by
  event_id: order_by
  net_revenue: order_by
  order_count: order_by
  total_checkout_view_count: order_by
}

"""aggregate var_samp on columns"""
type dr_analytics_marketing_campaigns_view_var_samp_fields {
   attendee_count: Float
   distinct_user_checkout_view_count: Float
   event_id: Float
   net_revenue: Float
   order_count: Float
   total_checkout_view_count: Float
}

"""
order by var_samp() on columns of table "dr_analytics_marketing_campaigns_view"
"""
input dr_analytics_marketing_campaigns_view_var_samp_order_by {
  attendee_count: order_by
  distinct_user_checkout_view_count: order_by
  event_id: order_by
  net_revenue: order_by
  order_count: order_by
  total_checkout_view_count: order_by
}

"""aggregate variance on columns"""
type dr_analytics_marketing_campaigns_view_variance_fields {
   attendee_count: Float
   distinct_user_checkout_view_count: Float
   event_id: Float
   net_revenue: Float
   order_count: Float
   total_checkout_view_count: Float
}

"""
order by variance() on columns of table "dr_analytics_marketing_campaigns_view"
"""
input dr_analytics_marketing_campaigns_view_variance_order_by {
  attendee_count: order_by
  distinct_user_checkout_view_count: order_by
  event_id: order_by
  net_revenue: order_by
  order_count: order_by
  total_checkout_view_count: order_by
}

"""
columns and relationships of "dr_analytics_view"
"""
type dr_analytics_view {
   attendee_count: bigint
   date: date
   distinct_user_checkout_view_count: bigint
   event_id: Int
   net_revenue: numeric
   order_count: bigint
   total_checkout_view_count: bigint
}

"""
aggregated selection of "dr_analytics_view"
"""
type dr_analytics_view_aggregate {
   aggregate: dr_analytics_view_aggregate_fields
   nodes: [dr_analytics_view! ]! 
}

"""
aggregate fields of "dr_analytics_view"
"""
type dr_analytics_view_aggregate_fields {
   avg: dr_analytics_view_avg_fields
   count(columns: [dr_analytics_view_select_column! ], distinct: Boolean): Int! 
   max: dr_analytics_view_max_fields
   min: dr_analytics_view_min_fields
   stddev: dr_analytics_view_stddev_fields
   stddev_pop: dr_analytics_view_stddev_pop_fields
   stddev_samp: dr_analytics_view_stddev_samp_fields
   sum: dr_analytics_view_sum_fields
   var_pop: dr_analytics_view_var_pop_fields
   var_samp: dr_analytics_view_var_samp_fields
   variance: dr_analytics_view_variance_fields
}

"""aggregate avg on columns"""
type dr_analytics_view_avg_fields {
   attendee_count: Float
   distinct_user_checkout_view_count: Float
   event_id: Float
   net_revenue: Float
   order_count: Float
   total_checkout_view_count: Float
}

"""
Boolean expression to filter rows from the table "dr_analytics_view". All fields are combined with a logical 'AND'.
"""
input dr_analytics_view_bool_exp {
  _and: [dr_analytics_view_bool_exp! ]
  _not: dr_analytics_view_bool_exp
  _or: [dr_analytics_view_bool_exp! ]
  attendee_count: bigint_comparison_exp
  date: date_comparison_exp
  distinct_user_checkout_view_count: bigint_comparison_exp
  event_id: Int_comparison_exp
  net_revenue: numeric_comparison_exp
  order_count: bigint_comparison_exp
  total_checkout_view_count: bigint_comparison_exp
}

"""aggregate max on columns"""
type dr_analytics_view_max_fields {
   attendee_count: bigint
   date: date
   distinct_user_checkout_view_count: bigint
   event_id: Int
   net_revenue: numeric
   order_count: bigint
   total_checkout_view_count: bigint
}

"""aggregate min on columns"""
type dr_analytics_view_min_fields {
   attendee_count: bigint
   date: date
   distinct_user_checkout_view_count: bigint
   event_id: Int
   net_revenue: numeric
   order_count: bigint
   total_checkout_view_count: bigint
}

"""Ordering options when selecting data from "dr_analytics_view"."""
input dr_analytics_view_order_by {
  attendee_count: order_by
  date: order_by
  distinct_user_checkout_view_count: order_by
  event_id: order_by
  net_revenue: order_by
  order_count: order_by
  total_checkout_view_count: order_by
}

"""
select columns of table "dr_analytics_view"
"""
enum dr_analytics_view_select_column {
  """column name"""
attendee_count
  """column name"""
date
  """column name"""
distinct_user_checkout_view_count
  """column name"""
event_id
  """column name"""
net_revenue
  """column name"""
order_count
  """column name"""
total_checkout_view_count
}

"""aggregate stddev on columns"""
type dr_analytics_view_stddev_fields {
   attendee_count: Float
   distinct_user_checkout_view_count: Float
   event_id: Float
   net_revenue: Float
   order_count: Float
   total_checkout_view_count: Float
}

"""aggregate stddev_pop on columns"""
type dr_analytics_view_stddev_pop_fields {
   attendee_count: Float
   distinct_user_checkout_view_count: Float
   event_id: Float
   net_revenue: Float
   order_count: Float
   total_checkout_view_count: Float
}

"""aggregate stddev_samp on columns"""
type dr_analytics_view_stddev_samp_fields {
   attendee_count: Float
   distinct_user_checkout_view_count: Float
   event_id: Float
   net_revenue: Float
   order_count: Float
   total_checkout_view_count: Float
}

"""
Streaming cursor of the table "dr_analytics_view"
"""
input dr_analytics_view_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_analytics_view_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_analytics_view_stream_cursor_value_input {
  attendee_count: bigint
  date: date
  distinct_user_checkout_view_count: bigint
  event_id: Int
  net_revenue: numeric
  order_count: bigint
  total_checkout_view_count: bigint
}

"""aggregate sum on columns"""
type dr_analytics_view_sum_fields {
   attendee_count: bigint
   distinct_user_checkout_view_count: bigint
   event_id: Int
   net_revenue: numeric
   order_count: bigint
   total_checkout_view_count: bigint
}

"""aggregate var_pop on columns"""
type dr_analytics_view_var_pop_fields {
   attendee_count: Float
   distinct_user_checkout_view_count: Float
   event_id: Float
   net_revenue: Float
   order_count: Float
   total_checkout_view_count: Float
}

"""aggregate var_samp on columns"""
type dr_analytics_view_var_samp_fields {
   attendee_count: Float
   distinct_user_checkout_view_count: Float
   event_id: Float
   net_revenue: Float
   order_count: Float
   total_checkout_view_count: Float
}

"""aggregate variance on columns"""
type dr_analytics_view_variance_fields {
   attendee_count: Float
   distinct_user_checkout_view_count: Float
   event_id: Float
   net_revenue: Float
   order_count: Float
   total_checkout_view_count: Float
}

"""
columns and relationships of "dr_attendee_addon_count"
"""
type dr_attendee_addon_count {
   addon_id: uuid
   count: bigint
   event_id: Int
}

"""
aggregated selection of "dr_attendee_addon_count"
"""
type dr_attendee_addon_count_aggregate {
   aggregate: dr_attendee_addon_count_aggregate_fields
   nodes: [dr_attendee_addon_count! ]! 
}

"""
aggregate fields of "dr_attendee_addon_count"
"""
type dr_attendee_addon_count_aggregate_fields {
   avg: dr_attendee_addon_count_avg_fields
   count(columns: [dr_attendee_addon_count_select_column! ], distinct: Boolean): Int! 
   max: dr_attendee_addon_count_max_fields
   min: dr_attendee_addon_count_min_fields
   stddev: dr_attendee_addon_count_stddev_fields
   stddev_pop: dr_attendee_addon_count_stddev_pop_fields
   stddev_samp: dr_attendee_addon_count_stddev_samp_fields
   sum: dr_attendee_addon_count_sum_fields
   var_pop: dr_attendee_addon_count_var_pop_fields
   var_samp: dr_attendee_addon_count_var_samp_fields
   variance: dr_attendee_addon_count_variance_fields
}

"""aggregate avg on columns"""
type dr_attendee_addon_count_avg_fields {
   count: Float
   event_id: Float
}

"""
Boolean expression to filter rows from the table "dr_attendee_addon_count". All fields are combined with a logical 'AND'.
"""
input dr_attendee_addon_count_bool_exp {
  _and: [dr_attendee_addon_count_bool_exp! ]
  _not: dr_attendee_addon_count_bool_exp
  _or: [dr_attendee_addon_count_bool_exp! ]
  addon_id: uuid_comparison_exp
  count: bigint_comparison_exp
  event_id: Int_comparison_exp
}

"""
input type for inserting data into table "dr_attendee_addon_count"
"""
input dr_attendee_addon_count_insert_input {
  addon_id: uuid
  count: bigint
  event_id: Int
}

"""aggregate max on columns"""
type dr_attendee_addon_count_max_fields {
   addon_id: uuid
   count: bigint
   event_id: Int
}

"""aggregate min on columns"""
type dr_attendee_addon_count_min_fields {
   addon_id: uuid
   count: bigint
   event_id: Int
}

"""
input type for inserting object relation for remote table "dr_attendee_addon_count"
"""
input dr_attendee_addon_count_obj_rel_insert_input {
  data: dr_attendee_addon_count_insert_input! 
}

"""Ordering options when selecting data from "dr_attendee_addon_count"."""
input dr_attendee_addon_count_order_by {
  addon_id: order_by
  count: order_by
  event_id: order_by
}

"""
select columns of table "dr_attendee_addon_count"
"""
enum dr_attendee_addon_count_select_column {
  """column name"""
addon_id
  """column name"""
count
  """column name"""
event_id
}

"""aggregate stddev on columns"""
type dr_attendee_addon_count_stddev_fields {
   count: Float
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type dr_attendee_addon_count_stddev_pop_fields {
   count: Float
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type dr_attendee_addon_count_stddev_samp_fields {
   count: Float
   event_id: Float
}

"""
Streaming cursor of the table "dr_attendee_addon_count"
"""
input dr_attendee_addon_count_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_attendee_addon_count_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_attendee_addon_count_stream_cursor_value_input {
  addon_id: uuid
  count: bigint
  event_id: Int
}

"""aggregate sum on columns"""
type dr_attendee_addon_count_sum_fields {
   count: bigint
   event_id: Int
}

"""aggregate var_pop on columns"""
type dr_attendee_addon_count_var_pop_fields {
   count: Float
   event_id: Float
}

"""aggregate var_samp on columns"""
type dr_attendee_addon_count_var_samp_fields {
   count: Float
   event_id: Float
}

"""aggregate variance on columns"""
type dr_attendee_addon_count_variance_fields {
   count: Float
   event_id: Float
}

"""
columns and relationships of "dr_attendee_addon_tax_rules"
"""
type dr_attendee_addon_tax_rules {
  """An object relationship"""
 attendee_addon: dr_attendee_addons
   attendee_addon_id: uuid! 
   created_at: timestamptz! 
   id: uuid! 
   percentage_at_purchase: numeric! 
  """An object relationship"""
 tax_rule: dr_tax_rules
   tax_rule_id: uuid! 
   tax_rule_name_at_purchase: String! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_attendee_addon_tax_rules"
"""
type dr_attendee_addon_tax_rules_aggregate {
   aggregate: dr_attendee_addon_tax_rules_aggregate_fields
   nodes: [dr_attendee_addon_tax_rules! ]! 
}

input dr_attendee_addon_tax_rules_aggregate_bool_exp {
  count: dr_attendee_addon_tax_rules_aggregate_bool_exp_count
}

input dr_attendee_addon_tax_rules_aggregate_bool_exp_count {
  arguments: [dr_attendee_addon_tax_rules_select_column! ]
  distinct: Boolean
  filter: dr_attendee_addon_tax_rules_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_attendee_addon_tax_rules"
"""
type dr_attendee_addon_tax_rules_aggregate_fields {
   avg: dr_attendee_addon_tax_rules_avg_fields
   count(columns: [dr_attendee_addon_tax_rules_select_column! ], distinct: Boolean): Int! 
   max: dr_attendee_addon_tax_rules_max_fields
   min: dr_attendee_addon_tax_rules_min_fields
   stddev: dr_attendee_addon_tax_rules_stddev_fields
   stddev_pop: dr_attendee_addon_tax_rules_stddev_pop_fields
   stddev_samp: dr_attendee_addon_tax_rules_stddev_samp_fields
   sum: dr_attendee_addon_tax_rules_sum_fields
   var_pop: dr_attendee_addon_tax_rules_var_pop_fields
   var_samp: dr_attendee_addon_tax_rules_var_samp_fields
   variance: dr_attendee_addon_tax_rules_variance_fields
}

"""
order by aggregate values of table "dr_attendee_addon_tax_rules"
"""
input dr_attendee_addon_tax_rules_aggregate_order_by {
  avg: dr_attendee_addon_tax_rules_avg_order_by
  count: order_by
  max: dr_attendee_addon_tax_rules_max_order_by
  min: dr_attendee_addon_tax_rules_min_order_by
  stddev: dr_attendee_addon_tax_rules_stddev_order_by
  stddev_pop: dr_attendee_addon_tax_rules_stddev_pop_order_by
  stddev_samp: dr_attendee_addon_tax_rules_stddev_samp_order_by
  sum: dr_attendee_addon_tax_rules_sum_order_by
  var_pop: dr_attendee_addon_tax_rules_var_pop_order_by
  var_samp: dr_attendee_addon_tax_rules_var_samp_order_by
  variance: dr_attendee_addon_tax_rules_variance_order_by
}

"""
input type for inserting array relation for remote table "dr_attendee_addon_tax_rules"
"""
input dr_attendee_addon_tax_rules_arr_rel_insert_input {
  data: [dr_attendee_addon_tax_rules_insert_input! ]! 
  """upsert condition"""
on_conflict: dr_attendee_addon_tax_rules_on_conflict
}

"""aggregate avg on columns"""
type dr_attendee_addon_tax_rules_avg_fields {
   percentage_at_purchase: Float
}

"""
order by avg() on columns of table "dr_attendee_addon_tax_rules"
"""
input dr_attendee_addon_tax_rules_avg_order_by {
  percentage_at_purchase: order_by
}

"""
Boolean expression to filter rows from the table "dr_attendee_addon_tax_rules". All fields are combined with a logical 'AND'.
"""
input dr_attendee_addon_tax_rules_bool_exp {
  _and: [dr_attendee_addon_tax_rules_bool_exp! ]
  _not: dr_attendee_addon_tax_rules_bool_exp
  _or: [dr_attendee_addon_tax_rules_bool_exp! ]
  attendee_addon: dr_attendee_addons_bool_exp
  attendee_addon_id: uuid_comparison_exp
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  percentage_at_purchase: numeric_comparison_exp
  tax_rule: dr_tax_rules_bool_exp
  tax_rule_id: uuid_comparison_exp
  tax_rule_name_at_purchase: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_attendee_addon_tax_rules"
"""
enum dr_attendee_addon_tax_rules_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_attendee_addon_tax_rules_pkey
}

"""
input type for incrementing numeric columns in table "dr_attendee_addon_tax_rules"
"""
input dr_attendee_addon_tax_rules_inc_input {
  percentage_at_purchase: numeric
}

"""
input type for inserting data into table "dr_attendee_addon_tax_rules"
"""
input dr_attendee_addon_tax_rules_insert_input {
  attendee_addon: dr_attendee_addons_obj_rel_insert_input
  attendee_addon_id: uuid! 
  created_at: timestamptz! 
  id: uuid! 
  percentage_at_purchase: numeric! 
  tax_rule: dr_tax_rules_obj_rel_insert_input
  tax_rule_id: uuid! 
  tax_rule_name_at_purchase: String! 
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_attendee_addon_tax_rules_max_fields {
   attendee_addon_id: uuid
   created_at: timestamptz
   id: uuid
   percentage_at_purchase: numeric
   tax_rule_id: uuid
   tax_rule_name_at_purchase: String
   updated_at: timestamptz
}

"""
order by max() on columns of table "dr_attendee_addon_tax_rules"
"""
input dr_attendee_addon_tax_rules_max_order_by {
  attendee_addon_id: order_by
  created_at: order_by
  id: order_by
  percentage_at_purchase: order_by
  tax_rule_id: order_by
  tax_rule_name_at_purchase: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type dr_attendee_addon_tax_rules_min_fields {
   attendee_addon_id: uuid
   created_at: timestamptz
   id: uuid
   percentage_at_purchase: numeric
   tax_rule_id: uuid
   tax_rule_name_at_purchase: String
   updated_at: timestamptz
}

"""
order by min() on columns of table "dr_attendee_addon_tax_rules"
"""
input dr_attendee_addon_tax_rules_min_order_by {
  attendee_addon_id: order_by
  created_at: order_by
  id: order_by
  percentage_at_purchase: order_by
  tax_rule_id: order_by
  tax_rule_name_at_purchase: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "dr_attendee_addon_tax_rules"
"""
type dr_attendee_addon_tax_rules_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_attendee_addon_tax_rules! ]! 
}

"""
on_conflict condition type for table "dr_attendee_addon_tax_rules"
"""
input dr_attendee_addon_tax_rules_on_conflict {
  constraint: dr_attendee_addon_tax_rules_constraint! 
  update_columns: [dr_attendee_addon_tax_rules_update_column! ]! 
  where: dr_attendee_addon_tax_rules_bool_exp
}

"""
Ordering options when selecting data from "dr_attendee_addon_tax_rules".
"""
input dr_attendee_addon_tax_rules_order_by {
  attendee_addon: dr_attendee_addons_order_by
  attendee_addon_id: order_by
  created_at: order_by
  id: order_by
  percentage_at_purchase: order_by
  tax_rule: dr_tax_rules_order_by
  tax_rule_id: order_by
  tax_rule_name_at_purchase: order_by
  updated_at: order_by
}

"""primary key columns input for table: dr_attendee_addon_tax_rules"""
input dr_attendee_addon_tax_rules_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_attendee_addon_tax_rules"
"""
enum dr_attendee_addon_tax_rules_select_column {
  """column name"""
attendee_addon_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
percentage_at_purchase
  """column name"""
tax_rule_id
  """column name"""
tax_rule_name_at_purchase
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_attendee_addon_tax_rules"
"""
input dr_attendee_addon_tax_rules_set_input {
  attendee_addon_id: uuid
  created_at: timestamptz
  id: uuid
  percentage_at_purchase: numeric
  tax_rule_id: uuid
  tax_rule_name_at_purchase: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type dr_attendee_addon_tax_rules_stddev_fields {
   percentage_at_purchase: Float
}

"""
order by stddev() on columns of table "dr_attendee_addon_tax_rules"
"""
input dr_attendee_addon_tax_rules_stddev_order_by {
  percentage_at_purchase: order_by
}

"""aggregate stddev_pop on columns"""
type dr_attendee_addon_tax_rules_stddev_pop_fields {
   percentage_at_purchase: Float
}

"""
order by stddev_pop() on columns of table "dr_attendee_addon_tax_rules"
"""
input dr_attendee_addon_tax_rules_stddev_pop_order_by {
  percentage_at_purchase: order_by
}

"""aggregate stddev_samp on columns"""
type dr_attendee_addon_tax_rules_stddev_samp_fields {
   percentage_at_purchase: Float
}

"""
order by stddev_samp() on columns of table "dr_attendee_addon_tax_rules"
"""
input dr_attendee_addon_tax_rules_stddev_samp_order_by {
  percentage_at_purchase: order_by
}

"""
Streaming cursor of the table "dr_attendee_addon_tax_rules"
"""
input dr_attendee_addon_tax_rules_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_attendee_addon_tax_rules_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_attendee_addon_tax_rules_stream_cursor_value_input {
  attendee_addon_id: uuid
  created_at: timestamptz
  id: uuid
  percentage_at_purchase: numeric
  tax_rule_id: uuid
  tax_rule_name_at_purchase: String
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type dr_attendee_addon_tax_rules_sum_fields {
   percentage_at_purchase: numeric
}

"""
order by sum() on columns of table "dr_attendee_addon_tax_rules"
"""
input dr_attendee_addon_tax_rules_sum_order_by {
  percentage_at_purchase: order_by
}

"""
update columns of table "dr_attendee_addon_tax_rules"
"""
enum dr_attendee_addon_tax_rules_update_column {
  """column name"""
attendee_addon_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
percentage_at_purchase
  """column name"""
tax_rule_id
  """column name"""
tax_rule_name_at_purchase
  """column name"""
updated_at
}

input dr_attendee_addon_tax_rules_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_attendee_addon_tax_rules_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_attendee_addon_tax_rules_set_input
  where: dr_attendee_addon_tax_rules_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_attendee_addon_tax_rules_var_pop_fields {
   percentage_at_purchase: Float
}

"""
order by var_pop() on columns of table "dr_attendee_addon_tax_rules"
"""
input dr_attendee_addon_tax_rules_var_pop_order_by {
  percentage_at_purchase: order_by
}

"""aggregate var_samp on columns"""
type dr_attendee_addon_tax_rules_var_samp_fields {
   percentage_at_purchase: Float
}

"""
order by var_samp() on columns of table "dr_attendee_addon_tax_rules"
"""
input dr_attendee_addon_tax_rules_var_samp_order_by {
  percentage_at_purchase: order_by
}

"""aggregate variance on columns"""
type dr_attendee_addon_tax_rules_variance_fields {
   percentage_at_purchase: Float
}

"""
order by variance() on columns of table "dr_attendee_addon_tax_rules"
"""
input dr_attendee_addon_tax_rules_variance_order_by {
  percentage_at_purchase: order_by
}

"""
columns and relationships of "dr_attendee_addons"
"""
type dr_attendee_addons {
  """An object relationship"""
 addon: dr_addons! 
   addon_id: uuid! 
  """Addon name at time of purchase"""
 addon_name: String! 
  """An object relationship"""
 attendee: dr_attendees! 
   attendee_id: uuid! 
   coupon_discount_percentage: Int! 
   coupon_discount_type: dr_coupon_discount_type_enum! 
   created_at: timestamptz! 
   id: uuid! 
  """Price excluding any coupon discount or tax"""
 price_at_purchase: Int! 
   refund_transaction_id: uuid
   status: dr_line_item_statuses_enum! 
  """An array relationship"""
 tax_rules_at_purchase("""distinct select on columns"""
distinct_on: [dr_attendee_addon_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addon_tax_rules_order_by! ], """filter the rows returned"""
where: dr_attendee_addon_tax_rules_bool_exp): [dr_attendee_addon_tax_rules! ]! 
  """An aggregate relationship"""
 tax_rules_at_purchase_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_addon_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addon_tax_rules_order_by! ], """filter the rows returned"""
where: dr_attendee_addon_tax_rules_bool_exp): dr_attendee_addon_tax_rules_aggregate! 
   ticket_id: uuid! 
  """An array relationship"""
 transaction("""distinct select on columns"""
distinct_on: [dr_transactions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_transactions_order_by! ], """filter the rows returned"""
where: dr_transactions_bool_exp): [dr_transactions! ]! 
  """An aggregate relationship"""
 transaction_aggregate("""distinct select on columns"""
distinct_on: [dr_transactions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_transactions_order_by! ], """filter the rows returned"""
where: dr_transactions_bool_exp): dr_transactions_aggregate! 
   transaction_id: uuid
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_attendee_addons"
"""
type dr_attendee_addons_aggregate {
   aggregate: dr_attendee_addons_aggregate_fields
   nodes: [dr_attendee_addons! ]! 
}

input dr_attendee_addons_aggregate_bool_exp {
  count: dr_attendee_addons_aggregate_bool_exp_count
}

input dr_attendee_addons_aggregate_bool_exp_count {
  arguments: [dr_attendee_addons_select_column! ]
  distinct: Boolean
  filter: dr_attendee_addons_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_attendee_addons"
"""
type dr_attendee_addons_aggregate_fields {
   avg: dr_attendee_addons_avg_fields
   count(columns: [dr_attendee_addons_select_column! ], distinct: Boolean): Int! 
   max: dr_attendee_addons_max_fields
   min: dr_attendee_addons_min_fields
   stddev: dr_attendee_addons_stddev_fields
   stddev_pop: dr_attendee_addons_stddev_pop_fields
   stddev_samp: dr_attendee_addons_stddev_samp_fields
   sum: dr_attendee_addons_sum_fields
   var_pop: dr_attendee_addons_var_pop_fields
   var_samp: dr_attendee_addons_var_samp_fields
   variance: dr_attendee_addons_variance_fields
}

"""
order by aggregate values of table "dr_attendee_addons"
"""
input dr_attendee_addons_aggregate_order_by {
  avg: dr_attendee_addons_avg_order_by
  count: order_by
  max: dr_attendee_addons_max_order_by
  min: dr_attendee_addons_min_order_by
  stddev: dr_attendee_addons_stddev_order_by
  stddev_pop: dr_attendee_addons_stddev_pop_order_by
  stddev_samp: dr_attendee_addons_stddev_samp_order_by
  sum: dr_attendee_addons_sum_order_by
  var_pop: dr_attendee_addons_var_pop_order_by
  var_samp: dr_attendee_addons_var_samp_order_by
  variance: dr_attendee_addons_variance_order_by
}

"""
input type for inserting array relation for remote table "dr_attendee_addons"
"""
input dr_attendee_addons_arr_rel_insert_input {
  data: [dr_attendee_addons_insert_input! ]! 
  """upsert condition"""
on_conflict: dr_attendee_addons_on_conflict
}

"""aggregate avg on columns"""
type dr_attendee_addons_avg_fields {
   coupon_discount_percentage: Float
  """Price excluding any coupon discount or tax"""
 price_at_purchase: Float
}

"""
order by avg() on columns of table "dr_attendee_addons"
"""
input dr_attendee_addons_avg_order_by {
  coupon_discount_percentage: order_by
  """Price excluding any coupon discount or tax"""
price_at_purchase: order_by
}

"""
Boolean expression to filter rows from the table "dr_attendee_addons". All fields are combined with a logical 'AND'.
"""
input dr_attendee_addons_bool_exp {
  _and: [dr_attendee_addons_bool_exp! ]
  _not: dr_attendee_addons_bool_exp
  _or: [dr_attendee_addons_bool_exp! ]
  addon: dr_addons_bool_exp
  addon_id: uuid_comparison_exp
  addon_name: String_comparison_exp
  attendee: dr_attendees_bool_exp
  attendee_id: uuid_comparison_exp
  coupon_discount_percentage: Int_comparison_exp
  coupon_discount_type: dr_coupon_discount_type_enum_comparison_exp
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  price_at_purchase: Int_comparison_exp
  refund_transaction_id: uuid_comparison_exp
  status: dr_line_item_statuses_enum_comparison_exp
  tax_rules_at_purchase: dr_attendee_addon_tax_rules_bool_exp
  tax_rules_at_purchase_aggregate: dr_attendee_addon_tax_rules_aggregate_bool_exp
  ticket_id: uuid_comparison_exp
  transaction: dr_transactions_bool_exp
  transaction_aggregate: dr_transactions_aggregate_bool_exp
  transaction_id: uuid_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_attendee_addons"
"""
enum dr_attendee_addons_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_attendee_addons_pkey
}

"""
input type for incrementing numeric columns in table "dr_attendee_addons"
"""
input dr_attendee_addons_inc_input {
  coupon_discount_percentage: Int
  """Price excluding any coupon discount or tax"""
price_at_purchase: Int
}

"""
input type for inserting data into table "dr_attendee_addons"
"""
input dr_attendee_addons_insert_input {
  addon: dr_addons_obj_rel_insert_input
  addon_id: uuid! 
  """Addon name at time of purchase"""
addon_name: String! 
  attendee: dr_attendees_obj_rel_insert_input
  attendee_id: uuid! 
  coupon_discount_percentage: Int! 
  coupon_discount_type: dr_coupon_discount_type_enum! 
  created_at: timestamptz! 
  id: uuid! 
  """Price excluding any coupon discount or tax"""
price_at_purchase: Int! 
  refund_transaction_id: uuid
  status: dr_line_item_statuses_enum! 
  tax_rules_at_purchase: dr_attendee_addon_tax_rules_arr_rel_insert_input
  ticket_id: uuid! 
  transaction: dr_transactions_arr_rel_insert_input
  transaction_id: uuid
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_attendee_addons_max_fields {
   addon_id: uuid
  """Addon name at time of purchase"""
 addon_name: String
   attendee_id: uuid
   coupon_discount_percentage: Int
   created_at: timestamptz
   id: uuid
  """Price excluding any coupon discount or tax"""
 price_at_purchase: Int
   refund_transaction_id: uuid
   ticket_id: uuid
   transaction_id: uuid
   updated_at: timestamptz
}

"""
order by max() on columns of table "dr_attendee_addons"
"""
input dr_attendee_addons_max_order_by {
  addon_id: order_by
  """Addon name at time of purchase"""
addon_name: order_by
  attendee_id: order_by
  coupon_discount_percentage: order_by
  created_at: order_by
  id: order_by
  """Price excluding any coupon discount or tax"""
price_at_purchase: order_by
  refund_transaction_id: order_by
  ticket_id: order_by
  transaction_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type dr_attendee_addons_min_fields {
   addon_id: uuid
  """Addon name at time of purchase"""
 addon_name: String
   attendee_id: uuid
   coupon_discount_percentage: Int
   created_at: timestamptz
   id: uuid
  """Price excluding any coupon discount or tax"""
 price_at_purchase: Int
   refund_transaction_id: uuid
   ticket_id: uuid
   transaction_id: uuid
   updated_at: timestamptz
}

"""
order by min() on columns of table "dr_attendee_addons"
"""
input dr_attendee_addons_min_order_by {
  addon_id: order_by
  """Addon name at time of purchase"""
addon_name: order_by
  attendee_id: order_by
  coupon_discount_percentage: order_by
  created_at: order_by
  id: order_by
  """Price excluding any coupon discount or tax"""
price_at_purchase: order_by
  refund_transaction_id: order_by
  ticket_id: order_by
  transaction_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "dr_attendee_addons"
"""
type dr_attendee_addons_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_attendee_addons! ]! 
}

"""
input type for inserting object relation for remote table "dr_attendee_addons"
"""
input dr_attendee_addons_obj_rel_insert_input {
  data: dr_attendee_addons_insert_input! 
  """upsert condition"""
on_conflict: dr_attendee_addons_on_conflict
}

"""
on_conflict condition type for table "dr_attendee_addons"
"""
input dr_attendee_addons_on_conflict {
  constraint: dr_attendee_addons_constraint! 
  update_columns: [dr_attendee_addons_update_column! ]! 
  where: dr_attendee_addons_bool_exp
}

"""Ordering options when selecting data from "dr_attendee_addons"."""
input dr_attendee_addons_order_by {
  addon: dr_addons_order_by
  addon_id: order_by
  addon_name: order_by
  attendee: dr_attendees_order_by
  attendee_id: order_by
  coupon_discount_percentage: order_by
  coupon_discount_type: order_by
  created_at: order_by
  id: order_by
  price_at_purchase: order_by
  refund_transaction_id: order_by
  status: order_by
  tax_rules_at_purchase_aggregate: dr_attendee_addon_tax_rules_aggregate_order_by
  ticket_id: order_by
  transaction_aggregate: dr_transactions_aggregate_order_by
  transaction_id: order_by
  updated_at: order_by
}

"""primary key columns input for table: dr_attendee_addons"""
input dr_attendee_addons_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_attendee_addons"
"""
enum dr_attendee_addons_select_column {
  """column name"""
addon_id
  """column name"""
addon_name
  """column name"""
attendee_id
  """column name"""
coupon_discount_percentage
  """column name"""
coupon_discount_type
  """column name"""
created_at
  """column name"""
id
  """column name"""
price_at_purchase
  """column name"""
refund_transaction_id
  """column name"""
status
  """column name"""
ticket_id
  """column name"""
transaction_id
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_attendee_addons"
"""
input dr_attendee_addons_set_input {
  addon_id: uuid
  """Addon name at time of purchase"""
addon_name: String
  attendee_id: uuid
  coupon_discount_percentage: Int
  coupon_discount_type: dr_coupon_discount_type_enum
  created_at: timestamptz
  id: uuid
  """Price excluding any coupon discount or tax"""
price_at_purchase: Int
  refund_transaction_id: uuid
  status: dr_line_item_statuses_enum
  ticket_id: uuid
  transaction_id: uuid
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type dr_attendee_addons_stddev_fields {
   coupon_discount_percentage: Float
  """Price excluding any coupon discount or tax"""
 price_at_purchase: Float
}

"""
order by stddev() on columns of table "dr_attendee_addons"
"""
input dr_attendee_addons_stddev_order_by {
  coupon_discount_percentage: order_by
  """Price excluding any coupon discount or tax"""
price_at_purchase: order_by
}

"""aggregate stddev_pop on columns"""
type dr_attendee_addons_stddev_pop_fields {
   coupon_discount_percentage: Float
  """Price excluding any coupon discount or tax"""
 price_at_purchase: Float
}

"""
order by stddev_pop() on columns of table "dr_attendee_addons"
"""
input dr_attendee_addons_stddev_pop_order_by {
  coupon_discount_percentage: order_by
  """Price excluding any coupon discount or tax"""
price_at_purchase: order_by
}

"""aggregate stddev_samp on columns"""
type dr_attendee_addons_stddev_samp_fields {
   coupon_discount_percentage: Float
  """Price excluding any coupon discount or tax"""
 price_at_purchase: Float
}

"""
order by stddev_samp() on columns of table "dr_attendee_addons"
"""
input dr_attendee_addons_stddev_samp_order_by {
  coupon_discount_percentage: order_by
  """Price excluding any coupon discount or tax"""
price_at_purchase: order_by
}

"""
Streaming cursor of the table "dr_attendee_addons"
"""
input dr_attendee_addons_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_attendee_addons_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_attendee_addons_stream_cursor_value_input {
  addon_id: uuid
  """Addon name at time of purchase"""
addon_name: String
  attendee_id: uuid
  coupon_discount_percentage: Int
  coupon_discount_type: dr_coupon_discount_type_enum
  created_at: timestamptz
  id: uuid
  """Price excluding any coupon discount or tax"""
price_at_purchase: Int
  refund_transaction_id: uuid
  status: dr_line_item_statuses_enum
  ticket_id: uuid
  transaction_id: uuid
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type dr_attendee_addons_sum_fields {
   coupon_discount_percentage: Int
  """Price excluding any coupon discount or tax"""
 price_at_purchase: Int
}

"""
order by sum() on columns of table "dr_attendee_addons"
"""
input dr_attendee_addons_sum_order_by {
  coupon_discount_percentage: order_by
  """Price excluding any coupon discount or tax"""
price_at_purchase: order_by
}

"""
update columns of table "dr_attendee_addons"
"""
enum dr_attendee_addons_update_column {
  """column name"""
addon_id
  """column name"""
addon_name
  """column name"""
attendee_id
  """column name"""
coupon_discount_percentage
  """column name"""
coupon_discount_type
  """column name"""
created_at
  """column name"""
id
  """column name"""
price_at_purchase
  """column name"""
refund_transaction_id
  """column name"""
status
  """column name"""
ticket_id
  """column name"""
transaction_id
  """column name"""
updated_at
}

input dr_attendee_addons_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_attendee_addons_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_attendee_addons_set_input
  where: dr_attendee_addons_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_attendee_addons_var_pop_fields {
   coupon_discount_percentage: Float
  """Price excluding any coupon discount or tax"""
 price_at_purchase: Float
}

"""
order by var_pop() on columns of table "dr_attendee_addons"
"""
input dr_attendee_addons_var_pop_order_by {
  coupon_discount_percentage: order_by
  """Price excluding any coupon discount or tax"""
price_at_purchase: order_by
}

"""aggregate var_samp on columns"""
type dr_attendee_addons_var_samp_fields {
   coupon_discount_percentage: Float
  """Price excluding any coupon discount or tax"""
 price_at_purchase: Float
}

"""
order by var_samp() on columns of table "dr_attendee_addons"
"""
input dr_attendee_addons_var_samp_order_by {
  coupon_discount_percentage: order_by
  """Price excluding any coupon discount or tax"""
price_at_purchase: order_by
}

"""aggregate variance on columns"""
type dr_attendee_addons_variance_fields {
   coupon_discount_percentage: Float
  """Price excluding any coupon discount or tax"""
 price_at_purchase: Float
}

"""
order by variance() on columns of table "dr_attendee_addons"
"""
input dr_attendee_addons_variance_order_by {
  coupon_discount_percentage: order_by
  """Price excluding any coupon discount or tax"""
price_at_purchase: order_by
}

"""
columns and relationships of "dr_attendee_question_response_options"
"""
type dr_attendee_question_response_options {
   created_at: timestamptz! 
   id: uuid! 
  """An object relationship"""
 question_option: dr_question_options! 
   question_option_id: uuid! 
   question_response_id: uuid! 
  """An object relationship"""
 response: dr_attendee_question_responses! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_attendee_question_response_options"
"""
type dr_attendee_question_response_options_aggregate {
   aggregate: dr_attendee_question_response_options_aggregate_fields
   nodes: [dr_attendee_question_response_options! ]! 
}

input dr_attendee_question_response_options_aggregate_bool_exp {
  count: dr_attendee_question_response_options_aggregate_bool_exp_count
}

input dr_attendee_question_response_options_aggregate_bool_exp_count {
  arguments: [dr_attendee_question_response_options_select_column! ]
  distinct: Boolean
  filter: dr_attendee_question_response_options_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_attendee_question_response_options"
"""
type dr_attendee_question_response_options_aggregate_fields {
   count(columns: [dr_attendee_question_response_options_select_column! ], distinct: Boolean): Int! 
   max: dr_attendee_question_response_options_max_fields
   min: dr_attendee_question_response_options_min_fields
}

"""
order by aggregate values of table "dr_attendee_question_response_options"
"""
input dr_attendee_question_response_options_aggregate_order_by {
  count: order_by
  max: dr_attendee_question_response_options_max_order_by
  min: dr_attendee_question_response_options_min_order_by
}

"""
input type for inserting array relation for remote table "dr_attendee_question_response_options"
"""
input dr_attendee_question_response_options_arr_rel_insert_input {
  data: [dr_attendee_question_response_options_insert_input! ]! 
  """upsert condition"""
on_conflict: dr_attendee_question_response_options_on_conflict
}

"""
Boolean expression to filter rows from the table "dr_attendee_question_response_options". All fields are combined with a logical 'AND'.
"""
input dr_attendee_question_response_options_bool_exp {
  _and: [dr_attendee_question_response_options_bool_exp! ]
  _not: dr_attendee_question_response_options_bool_exp
  _or: [dr_attendee_question_response_options_bool_exp! ]
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  question_option: dr_question_options_bool_exp
  question_option_id: uuid_comparison_exp
  question_response_id: uuid_comparison_exp
  response: dr_attendee_question_responses_bool_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_attendee_question_response_options"
"""
enum dr_attendee_question_response_options_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_attendee_question_response_options_pkey
}

"""
input type for inserting data into table "dr_attendee_question_response_options"
"""
input dr_attendee_question_response_options_insert_input {
  created_at: timestamptz! 
  id: uuid! 
  question_option: dr_question_options_obj_rel_insert_input
  question_option_id: uuid! 
  question_response_id: uuid! 
  response: dr_attendee_question_responses_obj_rel_insert_input
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_attendee_question_response_options_max_fields {
   created_at: timestamptz
   id: uuid
   question_option_id: uuid
   question_response_id: uuid
   updated_at: timestamptz
}

"""
order by max() on columns of table "dr_attendee_question_response_options"
"""
input dr_attendee_question_response_options_max_order_by {
  created_at: order_by
  id: order_by
  question_option_id: order_by
  question_response_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type dr_attendee_question_response_options_min_fields {
   created_at: timestamptz
   id: uuid
   question_option_id: uuid
   question_response_id: uuid
   updated_at: timestamptz
}

"""
order by min() on columns of table "dr_attendee_question_response_options"
"""
input dr_attendee_question_response_options_min_order_by {
  created_at: order_by
  id: order_by
  question_option_id: order_by
  question_response_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "dr_attendee_question_response_options"
"""
type dr_attendee_question_response_options_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_attendee_question_response_options! ]! 
}

"""
on_conflict condition type for table "dr_attendee_question_response_options"
"""
input dr_attendee_question_response_options_on_conflict {
  constraint: dr_attendee_question_response_options_constraint! 
  update_columns: [dr_attendee_question_response_options_update_column! ]! 
  where: dr_attendee_question_response_options_bool_exp
}

"""
Ordering options when selecting data from "dr_attendee_question_response_options".
"""
input dr_attendee_question_response_options_order_by {
  created_at: order_by
  id: order_by
  question_option: dr_question_options_order_by
  question_option_id: order_by
  question_response_id: order_by
  response: dr_attendee_question_responses_order_by
  updated_at: order_by
}

"""
primary key columns input for table: dr_attendee_question_response_options
"""
input dr_attendee_question_response_options_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_attendee_question_response_options"
"""
enum dr_attendee_question_response_options_select_column {
  """column name"""
created_at
  """column name"""
id
  """column name"""
question_option_id
  """column name"""
question_response_id
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_attendee_question_response_options"
"""
input dr_attendee_question_response_options_set_input {
  created_at: timestamptz
  id: uuid
  question_option_id: uuid
  question_response_id: uuid
  updated_at: timestamptz
}

"""
Streaming cursor of the table "dr_attendee_question_response_options"
"""
input dr_attendee_question_response_options_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_attendee_question_response_options_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_attendee_question_response_options_stream_cursor_value_input {
  created_at: timestamptz
  id: uuid
  question_option_id: uuid
  question_response_id: uuid
  updated_at: timestamptz
}

"""
update columns of table "dr_attendee_question_response_options"
"""
enum dr_attendee_question_response_options_update_column {
  """column name"""
created_at
  """column name"""
id
  """column name"""
question_option_id
  """column name"""
question_response_id
  """column name"""
updated_at
}

input dr_attendee_question_response_options_updates {
  """sets the columns of the filtered rows to the given values"""
_set: dr_attendee_question_response_options_set_input
  where: dr_attendee_question_response_options_bool_exp! 
}

"""
columns and relationships of "dr_attendee_question_responses"
"""
type dr_attendee_question_responses {
   answer: String
  """An object relationship"""
 attendee: dr_attendees! 
   attendee_id: uuid! 
   created_at: timestamptz! 
   id: uuid! 
  """An array relationship"""
 option_responses("""distinct select on columns"""
distinct_on: [dr_attendee_question_response_options_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_question_response_options_order_by! ], """filter the rows returned"""
where: dr_attendee_question_response_options_bool_exp): [dr_attendee_question_response_options! ]! 
  """An aggregate relationship"""
 option_responses_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_question_response_options_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_question_response_options_order_by! ], """filter the rows returned"""
where: dr_attendee_question_response_options_bool_exp): dr_attendee_question_response_options_aggregate! 
  """An object relationship"""
 question: dr_questions! 
   question_id: uuid! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_attendee_question_responses"
"""
type dr_attendee_question_responses_aggregate {
   aggregate: dr_attendee_question_responses_aggregate_fields
   nodes: [dr_attendee_question_responses! ]! 
}

input dr_attendee_question_responses_aggregate_bool_exp {
  count: dr_attendee_question_responses_aggregate_bool_exp_count
}

input dr_attendee_question_responses_aggregate_bool_exp_count {
  arguments: [dr_attendee_question_responses_select_column! ]
  distinct: Boolean
  filter: dr_attendee_question_responses_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_attendee_question_responses"
"""
type dr_attendee_question_responses_aggregate_fields {
   count(columns: [dr_attendee_question_responses_select_column! ], distinct: Boolean): Int! 
   max: dr_attendee_question_responses_max_fields
   min: dr_attendee_question_responses_min_fields
}

"""
order by aggregate values of table "dr_attendee_question_responses"
"""
input dr_attendee_question_responses_aggregate_order_by {
  count: order_by
  max: dr_attendee_question_responses_max_order_by
  min: dr_attendee_question_responses_min_order_by
}

"""
input type for inserting array relation for remote table "dr_attendee_question_responses"
"""
input dr_attendee_question_responses_arr_rel_insert_input {
  data: [dr_attendee_question_responses_insert_input! ]! 
  """upsert condition"""
on_conflict: dr_attendee_question_responses_on_conflict
}

"""
Boolean expression to filter rows from the table "dr_attendee_question_responses". All fields are combined with a logical 'AND'.
"""
input dr_attendee_question_responses_bool_exp {
  _and: [dr_attendee_question_responses_bool_exp! ]
  _not: dr_attendee_question_responses_bool_exp
  _or: [dr_attendee_question_responses_bool_exp! ]
  answer: String_comparison_exp
  attendee: dr_attendees_bool_exp
  attendee_id: uuid_comparison_exp
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  option_responses: dr_attendee_question_response_options_bool_exp
  option_responses_aggregate: dr_attendee_question_response_options_aggregate_bool_exp
  question: dr_questions_bool_exp
  question_id: uuid_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_attendee_question_responses"
"""
enum dr_attendee_question_responses_constraint {
  """
  unique or primary key constraint on columns "question_id", "attendee_id"
  """
dr_attendee_question_responses_attendee_id_question_id_key
  """
  unique or primary key constraint on columns "id"
  """
dr_attendee_question_responses_pkey
}

"""
input type for inserting data into table "dr_attendee_question_responses"
"""
input dr_attendee_question_responses_insert_input {
  answer: String
  attendee: dr_attendees_obj_rel_insert_input
  attendee_id: uuid! 
  created_at: timestamptz! 
  id: uuid! 
  option_responses: dr_attendee_question_response_options_arr_rel_insert_input
  question: dr_questions_obj_rel_insert_input
  question_id: uuid! 
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_attendee_question_responses_max_fields {
   answer: String
   attendee_id: uuid
   created_at: timestamptz
   id: uuid
   question_id: uuid
   updated_at: timestamptz
}

"""
order by max() on columns of table "dr_attendee_question_responses"
"""
input dr_attendee_question_responses_max_order_by {
  answer: order_by
  attendee_id: order_by
  created_at: order_by
  id: order_by
  question_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type dr_attendee_question_responses_min_fields {
   answer: String
   attendee_id: uuid
   created_at: timestamptz
   id: uuid
   question_id: uuid
   updated_at: timestamptz
}

"""
order by min() on columns of table "dr_attendee_question_responses"
"""
input dr_attendee_question_responses_min_order_by {
  answer: order_by
  attendee_id: order_by
  created_at: order_by
  id: order_by
  question_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "dr_attendee_question_responses"
"""
type dr_attendee_question_responses_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_attendee_question_responses! ]! 
}

"""
input type for inserting object relation for remote table "dr_attendee_question_responses"
"""
input dr_attendee_question_responses_obj_rel_insert_input {
  data: dr_attendee_question_responses_insert_input! 
  """upsert condition"""
on_conflict: dr_attendee_question_responses_on_conflict
}

"""
on_conflict condition type for table "dr_attendee_question_responses"
"""
input dr_attendee_question_responses_on_conflict {
  constraint: dr_attendee_question_responses_constraint! 
  update_columns: [dr_attendee_question_responses_update_column! ]! 
  where: dr_attendee_question_responses_bool_exp
}

"""
Ordering options when selecting data from "dr_attendee_question_responses".
"""
input dr_attendee_question_responses_order_by {
  answer: order_by
  attendee: dr_attendees_order_by
  attendee_id: order_by
  created_at: order_by
  id: order_by
  option_responses_aggregate: dr_attendee_question_response_options_aggregate_order_by
  question: dr_questions_order_by
  question_id: order_by
  updated_at: order_by
}

"""primary key columns input for table: dr_attendee_question_responses"""
input dr_attendee_question_responses_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_attendee_question_responses"
"""
enum dr_attendee_question_responses_select_column {
  """column name"""
answer
  """column name"""
attendee_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
question_id
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_attendee_question_responses"
"""
input dr_attendee_question_responses_set_input {
  answer: String
  attendee_id: uuid
  created_at: timestamptz
  id: uuid
  question_id: uuid
  updated_at: timestamptz
}

"""
Streaming cursor of the table "dr_attendee_question_responses"
"""
input dr_attendee_question_responses_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_attendee_question_responses_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_attendee_question_responses_stream_cursor_value_input {
  answer: String
  attendee_id: uuid
  created_at: timestamptz
  id: uuid
  question_id: uuid
  updated_at: timestamptz
}

"""
update columns of table "dr_attendee_question_responses"
"""
enum dr_attendee_question_responses_update_column {
  """column name"""
answer
  """column name"""
attendee_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
question_id
  """column name"""
updated_at
}

input dr_attendee_question_responses_updates {
  """sets the columns of the filtered rows to the given values"""
_set: dr_attendee_question_responses_set_input
  where: dr_attendee_question_responses_bool_exp! 
}

"""
columns and relationships of "dr_attendee_ticket_count"
"""
type dr_attendee_ticket_count {
   count: bigint
   event_id: Int
   ticket_id: uuid
}

"""
aggregated selection of "dr_attendee_ticket_count"
"""
type dr_attendee_ticket_count_aggregate {
   aggregate: dr_attendee_ticket_count_aggregate_fields
   nodes: [dr_attendee_ticket_count! ]! 
}

"""
aggregate fields of "dr_attendee_ticket_count"
"""
type dr_attendee_ticket_count_aggregate_fields {
   avg: dr_attendee_ticket_count_avg_fields
   count(columns: [dr_attendee_ticket_count_select_column! ], distinct: Boolean): Int! 
   max: dr_attendee_ticket_count_max_fields
   min: dr_attendee_ticket_count_min_fields
   stddev: dr_attendee_ticket_count_stddev_fields
   stddev_pop: dr_attendee_ticket_count_stddev_pop_fields
   stddev_samp: dr_attendee_ticket_count_stddev_samp_fields
   sum: dr_attendee_ticket_count_sum_fields
   var_pop: dr_attendee_ticket_count_var_pop_fields
   var_samp: dr_attendee_ticket_count_var_samp_fields
   variance: dr_attendee_ticket_count_variance_fields
}

"""aggregate avg on columns"""
type dr_attendee_ticket_count_avg_fields {
   count: Float
   event_id: Float
}

"""
Boolean expression to filter rows from the table "dr_attendee_ticket_count". All fields are combined with a logical 'AND'.
"""
input dr_attendee_ticket_count_bool_exp {
  _and: [dr_attendee_ticket_count_bool_exp! ]
  _not: dr_attendee_ticket_count_bool_exp
  _or: [dr_attendee_ticket_count_bool_exp! ]
  count: bigint_comparison_exp
  event_id: Int_comparison_exp
  ticket_id: uuid_comparison_exp
}

"""
input type for inserting data into table "dr_attendee_ticket_count"
"""
input dr_attendee_ticket_count_insert_input {
  count: bigint
  event_id: Int
  ticket_id: uuid
}

"""aggregate max on columns"""
type dr_attendee_ticket_count_max_fields {
   count: bigint
   event_id: Int
   ticket_id: uuid
}

"""aggregate min on columns"""
type dr_attendee_ticket_count_min_fields {
   count: bigint
   event_id: Int
   ticket_id: uuid
}

"""
input type for inserting object relation for remote table "dr_attendee_ticket_count"
"""
input dr_attendee_ticket_count_obj_rel_insert_input {
  data: dr_attendee_ticket_count_insert_input! 
}

"""Ordering options when selecting data from "dr_attendee_ticket_count"."""
input dr_attendee_ticket_count_order_by {
  count: order_by
  event_id: order_by
  ticket_id: order_by
}

"""
select columns of table "dr_attendee_ticket_count"
"""
enum dr_attendee_ticket_count_select_column {
  """column name"""
count
  """column name"""
event_id
  """column name"""
ticket_id
}

"""aggregate stddev on columns"""
type dr_attendee_ticket_count_stddev_fields {
   count: Float
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type dr_attendee_ticket_count_stddev_pop_fields {
   count: Float
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type dr_attendee_ticket_count_stddev_samp_fields {
   count: Float
   event_id: Float
}

"""
Streaming cursor of the table "dr_attendee_ticket_count"
"""
input dr_attendee_ticket_count_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_attendee_ticket_count_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_attendee_ticket_count_stream_cursor_value_input {
  count: bigint
  event_id: Int
  ticket_id: uuid
}

"""aggregate sum on columns"""
type dr_attendee_ticket_count_sum_fields {
   count: bigint
   event_id: Int
}

"""aggregate var_pop on columns"""
type dr_attendee_ticket_count_var_pop_fields {
   count: Float
   event_id: Float
}

"""aggregate var_samp on columns"""
type dr_attendee_ticket_count_var_samp_fields {
   count: Float
   event_id: Float
}

"""aggregate variance on columns"""
type dr_attendee_ticket_count_variance_fields {
   count: Float
   event_id: Float
}

"""
columns and relationships of "dr_attendee_ticket_tax_rules"
"""
type dr_attendee_ticket_tax_rules {
  """An object relationship"""
 attendee_ticket: dr_attendee_tickets
   attendee_ticket_id: uuid! 
   created_at: timestamptz! 
   id: uuid! 
   percentage_at_purchase: numeric! 
  """An object relationship"""
 tax_rule: dr_tax_rules
   tax_rule_id: uuid! 
   tax_rule_name_at_purchase: String! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_attendee_ticket_tax_rules"
"""
type dr_attendee_ticket_tax_rules_aggregate {
   aggregate: dr_attendee_ticket_tax_rules_aggregate_fields
   nodes: [dr_attendee_ticket_tax_rules! ]! 
}

input dr_attendee_ticket_tax_rules_aggregate_bool_exp {
  count: dr_attendee_ticket_tax_rules_aggregate_bool_exp_count
}

input dr_attendee_ticket_tax_rules_aggregate_bool_exp_count {
  arguments: [dr_attendee_ticket_tax_rules_select_column! ]
  distinct: Boolean
  filter: dr_attendee_ticket_tax_rules_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_attendee_ticket_tax_rules"
"""
type dr_attendee_ticket_tax_rules_aggregate_fields {
   avg: dr_attendee_ticket_tax_rules_avg_fields
   count(columns: [dr_attendee_ticket_tax_rules_select_column! ], distinct: Boolean): Int! 
   max: dr_attendee_ticket_tax_rules_max_fields
   min: dr_attendee_ticket_tax_rules_min_fields
   stddev: dr_attendee_ticket_tax_rules_stddev_fields
   stddev_pop: dr_attendee_ticket_tax_rules_stddev_pop_fields
   stddev_samp: dr_attendee_ticket_tax_rules_stddev_samp_fields
   sum: dr_attendee_ticket_tax_rules_sum_fields
   var_pop: dr_attendee_ticket_tax_rules_var_pop_fields
   var_samp: dr_attendee_ticket_tax_rules_var_samp_fields
   variance: dr_attendee_ticket_tax_rules_variance_fields
}

"""
order by aggregate values of table "dr_attendee_ticket_tax_rules"
"""
input dr_attendee_ticket_tax_rules_aggregate_order_by {
  avg: dr_attendee_ticket_tax_rules_avg_order_by
  count: order_by
  max: dr_attendee_ticket_tax_rules_max_order_by
  min: dr_attendee_ticket_tax_rules_min_order_by
  stddev: dr_attendee_ticket_tax_rules_stddev_order_by
  stddev_pop: dr_attendee_ticket_tax_rules_stddev_pop_order_by
  stddev_samp: dr_attendee_ticket_tax_rules_stddev_samp_order_by
  sum: dr_attendee_ticket_tax_rules_sum_order_by
  var_pop: dr_attendee_ticket_tax_rules_var_pop_order_by
  var_samp: dr_attendee_ticket_tax_rules_var_samp_order_by
  variance: dr_attendee_ticket_tax_rules_variance_order_by
}

"""
input type for inserting array relation for remote table "dr_attendee_ticket_tax_rules"
"""
input dr_attendee_ticket_tax_rules_arr_rel_insert_input {
  data: [dr_attendee_ticket_tax_rules_insert_input! ]! 
  """upsert condition"""
on_conflict: dr_attendee_ticket_tax_rules_on_conflict
}

"""aggregate avg on columns"""
type dr_attendee_ticket_tax_rules_avg_fields {
   percentage_at_purchase: Float
}

"""
order by avg() on columns of table "dr_attendee_ticket_tax_rules"
"""
input dr_attendee_ticket_tax_rules_avg_order_by {
  percentage_at_purchase: order_by
}

"""
Boolean expression to filter rows from the table "dr_attendee_ticket_tax_rules". All fields are combined with a logical 'AND'.
"""
input dr_attendee_ticket_tax_rules_bool_exp {
  _and: [dr_attendee_ticket_tax_rules_bool_exp! ]
  _not: dr_attendee_ticket_tax_rules_bool_exp
  _or: [dr_attendee_ticket_tax_rules_bool_exp! ]
  attendee_ticket: dr_attendee_tickets_bool_exp
  attendee_ticket_id: uuid_comparison_exp
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  percentage_at_purchase: numeric_comparison_exp
  tax_rule: dr_tax_rules_bool_exp
  tax_rule_id: uuid_comparison_exp
  tax_rule_name_at_purchase: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_attendee_ticket_tax_rules"
"""
enum dr_attendee_ticket_tax_rules_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_attendee_ticket_tax_rules_pkey
}

"""
input type for incrementing numeric columns in table "dr_attendee_ticket_tax_rules"
"""
input dr_attendee_ticket_tax_rules_inc_input {
  percentage_at_purchase: numeric
}

"""
input type for inserting data into table "dr_attendee_ticket_tax_rules"
"""
input dr_attendee_ticket_tax_rules_insert_input {
  attendee_ticket: dr_attendee_tickets_obj_rel_insert_input
  attendee_ticket_id: uuid! 
  created_at: timestamptz! 
  id: uuid! 
  percentage_at_purchase: numeric! 
  tax_rule: dr_tax_rules_obj_rel_insert_input
  tax_rule_id: uuid! 
  tax_rule_name_at_purchase: String! 
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_attendee_ticket_tax_rules_max_fields {
   attendee_ticket_id: uuid
   created_at: timestamptz
   id: uuid
   percentage_at_purchase: numeric
   tax_rule_id: uuid
   tax_rule_name_at_purchase: String
   updated_at: timestamptz
}

"""
order by max() on columns of table "dr_attendee_ticket_tax_rules"
"""
input dr_attendee_ticket_tax_rules_max_order_by {
  attendee_ticket_id: order_by
  created_at: order_by
  id: order_by
  percentage_at_purchase: order_by
  tax_rule_id: order_by
  tax_rule_name_at_purchase: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type dr_attendee_ticket_tax_rules_min_fields {
   attendee_ticket_id: uuid
   created_at: timestamptz
   id: uuid
   percentage_at_purchase: numeric
   tax_rule_id: uuid
   tax_rule_name_at_purchase: String
   updated_at: timestamptz
}

"""
order by min() on columns of table "dr_attendee_ticket_tax_rules"
"""
input dr_attendee_ticket_tax_rules_min_order_by {
  attendee_ticket_id: order_by
  created_at: order_by
  id: order_by
  percentage_at_purchase: order_by
  tax_rule_id: order_by
  tax_rule_name_at_purchase: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "dr_attendee_ticket_tax_rules"
"""
type dr_attendee_ticket_tax_rules_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_attendee_ticket_tax_rules! ]! 
}

"""
on_conflict condition type for table "dr_attendee_ticket_tax_rules"
"""
input dr_attendee_ticket_tax_rules_on_conflict {
  constraint: dr_attendee_ticket_tax_rules_constraint! 
  update_columns: [dr_attendee_ticket_tax_rules_update_column! ]! 
  where: dr_attendee_ticket_tax_rules_bool_exp
}

"""
Ordering options when selecting data from "dr_attendee_ticket_tax_rules".
"""
input dr_attendee_ticket_tax_rules_order_by {
  attendee_ticket: dr_attendee_tickets_order_by
  attendee_ticket_id: order_by
  created_at: order_by
  id: order_by
  percentage_at_purchase: order_by
  tax_rule: dr_tax_rules_order_by
  tax_rule_id: order_by
  tax_rule_name_at_purchase: order_by
  updated_at: order_by
}

"""primary key columns input for table: dr_attendee_ticket_tax_rules"""
input dr_attendee_ticket_tax_rules_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_attendee_ticket_tax_rules"
"""
enum dr_attendee_ticket_tax_rules_select_column {
  """column name"""
attendee_ticket_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
percentage_at_purchase
  """column name"""
tax_rule_id
  """column name"""
tax_rule_name_at_purchase
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_attendee_ticket_tax_rules"
"""
input dr_attendee_ticket_tax_rules_set_input {
  attendee_ticket_id: uuid
  created_at: timestamptz
  id: uuid
  percentage_at_purchase: numeric
  tax_rule_id: uuid
  tax_rule_name_at_purchase: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type dr_attendee_ticket_tax_rules_stddev_fields {
   percentage_at_purchase: Float
}

"""
order by stddev() on columns of table "dr_attendee_ticket_tax_rules"
"""
input dr_attendee_ticket_tax_rules_stddev_order_by {
  percentage_at_purchase: order_by
}

"""aggregate stddev_pop on columns"""
type dr_attendee_ticket_tax_rules_stddev_pop_fields {
   percentage_at_purchase: Float
}

"""
order by stddev_pop() on columns of table "dr_attendee_ticket_tax_rules"
"""
input dr_attendee_ticket_tax_rules_stddev_pop_order_by {
  percentage_at_purchase: order_by
}

"""aggregate stddev_samp on columns"""
type dr_attendee_ticket_tax_rules_stddev_samp_fields {
   percentage_at_purchase: Float
}

"""
order by stddev_samp() on columns of table "dr_attendee_ticket_tax_rules"
"""
input dr_attendee_ticket_tax_rules_stddev_samp_order_by {
  percentage_at_purchase: order_by
}

"""
Streaming cursor of the table "dr_attendee_ticket_tax_rules"
"""
input dr_attendee_ticket_tax_rules_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_attendee_ticket_tax_rules_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_attendee_ticket_tax_rules_stream_cursor_value_input {
  attendee_ticket_id: uuid
  created_at: timestamptz
  id: uuid
  percentage_at_purchase: numeric
  tax_rule_id: uuid
  tax_rule_name_at_purchase: String
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type dr_attendee_ticket_tax_rules_sum_fields {
   percentage_at_purchase: numeric
}

"""
order by sum() on columns of table "dr_attendee_ticket_tax_rules"
"""
input dr_attendee_ticket_tax_rules_sum_order_by {
  percentage_at_purchase: order_by
}

"""
update columns of table "dr_attendee_ticket_tax_rules"
"""
enum dr_attendee_ticket_tax_rules_update_column {
  """column name"""
attendee_ticket_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
percentage_at_purchase
  """column name"""
tax_rule_id
  """column name"""
tax_rule_name_at_purchase
  """column name"""
updated_at
}

input dr_attendee_ticket_tax_rules_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_attendee_ticket_tax_rules_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_attendee_ticket_tax_rules_set_input
  where: dr_attendee_ticket_tax_rules_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_attendee_ticket_tax_rules_var_pop_fields {
   percentage_at_purchase: Float
}

"""
order by var_pop() on columns of table "dr_attendee_ticket_tax_rules"
"""
input dr_attendee_ticket_tax_rules_var_pop_order_by {
  percentage_at_purchase: order_by
}

"""aggregate var_samp on columns"""
type dr_attendee_ticket_tax_rules_var_samp_fields {
   percentage_at_purchase: Float
}

"""
order by var_samp() on columns of table "dr_attendee_ticket_tax_rules"
"""
input dr_attendee_ticket_tax_rules_var_samp_order_by {
  percentage_at_purchase: order_by
}

"""aggregate variance on columns"""
type dr_attendee_ticket_tax_rules_variance_fields {
   percentage_at_purchase: Float
}

"""
order by variance() on columns of table "dr_attendee_ticket_tax_rules"
"""
input dr_attendee_ticket_tax_rules_variance_order_by {
  percentage_at_purchase: order_by
}

"""
columns and relationships of "dr_attendee_tickets"
"""
type dr_attendee_tickets {
  """An object relationship"""
 attendee: dr_attendees! 
  """An array relationship"""
 attendee_addons("""distinct select on columns"""
distinct_on: [dr_attendee_addons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addons_order_by! ], """filter the rows returned"""
where: dr_attendee_addons_bool_exp): [dr_attendee_addons! ]! 
  """An aggregate relationship"""
 attendee_addons_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_addons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addons_order_by! ], """filter the rows returned"""
where: dr_attendee_addons_bool_exp): dr_attendee_addons_aggregate! 
   attendee_id: uuid! 
   coupon_discount_percentage: Int! 
   coupon_discount_type: dr_coupon_discount_type_enum! 
   created_at: timestamptz! 
   id: uuid! 
  """Price excluding any coupon discount or tax"""
 price_at_purchase: Int! 
   refund_transaction_id: uuid
   status: dr_line_item_statuses_enum! 
  """An array relationship"""
 tax_rules_at_purchase("""distinct select on columns"""
distinct_on: [dr_attendee_ticket_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_ticket_tax_rules_order_by! ], """filter the rows returned"""
where: dr_attendee_ticket_tax_rules_bool_exp): [dr_attendee_ticket_tax_rules! ]! 
  """An aggregate relationship"""
 tax_rules_at_purchase_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_ticket_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_ticket_tax_rules_order_by! ], """filter the rows returned"""
where: dr_attendee_ticket_tax_rules_bool_exp): dr_attendee_ticket_tax_rules_aggregate! 
  """An object relationship"""
 ticket: dr_tickets! 
   ticket_id: uuid! 
  """Ticket name at time of purchase"""
 ticket_name: String! 
  """An object relationship"""
 ticket_view: dr_tickets_view
  """An array relationship"""
 transaction("""distinct select on columns"""
distinct_on: [dr_transactions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_transactions_order_by! ], """filter the rows returned"""
where: dr_transactions_bool_exp): [dr_transactions! ]! 
  """An aggregate relationship"""
 transaction_aggregate("""distinct select on columns"""
distinct_on: [dr_transactions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_transactions_order_by! ], """filter the rows returned"""
where: dr_transactions_bool_exp): dr_transactions_aggregate! 
   transaction_id: uuid
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_attendee_tickets"
"""
type dr_attendee_tickets_aggregate {
   aggregate: dr_attendee_tickets_aggregate_fields
   nodes: [dr_attendee_tickets! ]! 
}

input dr_attendee_tickets_aggregate_bool_exp {
  count: dr_attendee_tickets_aggregate_bool_exp_count
}

input dr_attendee_tickets_aggregate_bool_exp_count {
  arguments: [dr_attendee_tickets_select_column! ]
  distinct: Boolean
  filter: dr_attendee_tickets_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_attendee_tickets"
"""
type dr_attendee_tickets_aggregate_fields {
   avg: dr_attendee_tickets_avg_fields
   count(columns: [dr_attendee_tickets_select_column! ], distinct: Boolean): Int! 
   max: dr_attendee_tickets_max_fields
   min: dr_attendee_tickets_min_fields
   stddev: dr_attendee_tickets_stddev_fields
   stddev_pop: dr_attendee_tickets_stddev_pop_fields
   stddev_samp: dr_attendee_tickets_stddev_samp_fields
   sum: dr_attendee_tickets_sum_fields
   var_pop: dr_attendee_tickets_var_pop_fields
   var_samp: dr_attendee_tickets_var_samp_fields
   variance: dr_attendee_tickets_variance_fields
}

"""
order by aggregate values of table "dr_attendee_tickets"
"""
input dr_attendee_tickets_aggregate_order_by {
  avg: dr_attendee_tickets_avg_order_by
  count: order_by
  max: dr_attendee_tickets_max_order_by
  min: dr_attendee_tickets_min_order_by
  stddev: dr_attendee_tickets_stddev_order_by
  stddev_pop: dr_attendee_tickets_stddev_pop_order_by
  stddev_samp: dr_attendee_tickets_stddev_samp_order_by
  sum: dr_attendee_tickets_sum_order_by
  var_pop: dr_attendee_tickets_var_pop_order_by
  var_samp: dr_attendee_tickets_var_samp_order_by
  variance: dr_attendee_tickets_variance_order_by
}

"""
input type for inserting array relation for remote table "dr_attendee_tickets"
"""
input dr_attendee_tickets_arr_rel_insert_input {
  data: [dr_attendee_tickets_insert_input! ]! 
  """upsert condition"""
on_conflict: dr_attendee_tickets_on_conflict
}

"""aggregate avg on columns"""
type dr_attendee_tickets_avg_fields {
   coupon_discount_percentage: Float
  """Price excluding any coupon discount or tax"""
 price_at_purchase: Float
}

"""
order by avg() on columns of table "dr_attendee_tickets"
"""
input dr_attendee_tickets_avg_order_by {
  coupon_discount_percentage: order_by
  """Price excluding any coupon discount or tax"""
price_at_purchase: order_by
}

"""
Boolean expression to filter rows from the table "dr_attendee_tickets". All fields are combined with a logical 'AND'.
"""
input dr_attendee_tickets_bool_exp {
  _and: [dr_attendee_tickets_bool_exp! ]
  _not: dr_attendee_tickets_bool_exp
  _or: [dr_attendee_tickets_bool_exp! ]
  attendee: dr_attendees_bool_exp
  attendee_addons: dr_attendee_addons_bool_exp
  attendee_addons_aggregate: dr_attendee_addons_aggregate_bool_exp
  attendee_id: uuid_comparison_exp
  coupon_discount_percentage: Int_comparison_exp
  coupon_discount_type: dr_coupon_discount_type_enum_comparison_exp
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  price_at_purchase: Int_comparison_exp
  refund_transaction_id: uuid_comparison_exp
  status: dr_line_item_statuses_enum_comparison_exp
  tax_rules_at_purchase: dr_attendee_ticket_tax_rules_bool_exp
  tax_rules_at_purchase_aggregate: dr_attendee_ticket_tax_rules_aggregate_bool_exp
  ticket: dr_tickets_bool_exp
  ticket_id: uuid_comparison_exp
  ticket_name: String_comparison_exp
  ticket_view: dr_tickets_view_bool_exp
  transaction: dr_transactions_bool_exp
  transaction_aggregate: dr_transactions_aggregate_bool_exp
  transaction_id: uuid_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_attendee_tickets"
"""
enum dr_attendee_tickets_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_attendee_tickets_pkey
}

"""
input type for incrementing numeric columns in table "dr_attendee_tickets"
"""
input dr_attendee_tickets_inc_input {
  coupon_discount_percentage: Int
  """Price excluding any coupon discount or tax"""
price_at_purchase: Int
}

"""
input type for inserting data into table "dr_attendee_tickets"
"""
input dr_attendee_tickets_insert_input {
  attendee: dr_attendees_obj_rel_insert_input
  attendee_addons: dr_attendee_addons_arr_rel_insert_input
  attendee_id: uuid! 
  coupon_discount_percentage: Int! 
  coupon_discount_type: dr_coupon_discount_type_enum! 
  created_at: timestamptz! 
  id: uuid! 
  """Price excluding any coupon discount or tax"""
price_at_purchase: Int! 
  refund_transaction_id: uuid
  status: dr_line_item_statuses_enum! 
  tax_rules_at_purchase: dr_attendee_ticket_tax_rules_arr_rel_insert_input
  ticket: dr_tickets_obj_rel_insert_input
  ticket_id: uuid! 
  """Ticket name at time of purchase"""
ticket_name: String! 
  ticket_view: dr_tickets_view_obj_rel_insert_input
  transaction: dr_transactions_arr_rel_insert_input
  transaction_id: uuid
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_attendee_tickets_max_fields {
   attendee_id: uuid
   coupon_discount_percentage: Int
   created_at: timestamptz
   id: uuid
  """Price excluding any coupon discount or tax"""
 price_at_purchase: Int
   refund_transaction_id: uuid
   ticket_id: uuid
  """Ticket name at time of purchase"""
 ticket_name: String
   transaction_id: uuid
   updated_at: timestamptz
}

"""
order by max() on columns of table "dr_attendee_tickets"
"""
input dr_attendee_tickets_max_order_by {
  attendee_id: order_by
  coupon_discount_percentage: order_by
  created_at: order_by
  id: order_by
  """Price excluding any coupon discount or tax"""
price_at_purchase: order_by
  refund_transaction_id: order_by
  ticket_id: order_by
  """Ticket name at time of purchase"""
ticket_name: order_by
  transaction_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type dr_attendee_tickets_min_fields {
   attendee_id: uuid
   coupon_discount_percentage: Int
   created_at: timestamptz
   id: uuid
  """Price excluding any coupon discount or tax"""
 price_at_purchase: Int
   refund_transaction_id: uuid
   ticket_id: uuid
  """Ticket name at time of purchase"""
 ticket_name: String
   transaction_id: uuid
   updated_at: timestamptz
}

"""
order by min() on columns of table "dr_attendee_tickets"
"""
input dr_attendee_tickets_min_order_by {
  attendee_id: order_by
  coupon_discount_percentage: order_by
  created_at: order_by
  id: order_by
  """Price excluding any coupon discount or tax"""
price_at_purchase: order_by
  refund_transaction_id: order_by
  ticket_id: order_by
  """Ticket name at time of purchase"""
ticket_name: order_by
  transaction_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "dr_attendee_tickets"
"""
type dr_attendee_tickets_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_attendee_tickets! ]! 
}

"""
input type for inserting object relation for remote table "dr_attendee_tickets"
"""
input dr_attendee_tickets_obj_rel_insert_input {
  data: dr_attendee_tickets_insert_input! 
  """upsert condition"""
on_conflict: dr_attendee_tickets_on_conflict
}

"""
on_conflict condition type for table "dr_attendee_tickets"
"""
input dr_attendee_tickets_on_conflict {
  constraint: dr_attendee_tickets_constraint! 
  update_columns: [dr_attendee_tickets_update_column! ]! 
  where: dr_attendee_tickets_bool_exp
}

"""Ordering options when selecting data from "dr_attendee_tickets"."""
input dr_attendee_tickets_order_by {
  attendee: dr_attendees_order_by
  attendee_addons_aggregate: dr_attendee_addons_aggregate_order_by
  attendee_id: order_by
  coupon_discount_percentage: order_by
  coupon_discount_type: order_by
  created_at: order_by
  id: order_by
  price_at_purchase: order_by
  refund_transaction_id: order_by
  status: order_by
  tax_rules_at_purchase_aggregate: dr_attendee_ticket_tax_rules_aggregate_order_by
  ticket: dr_tickets_order_by
  ticket_id: order_by
  ticket_name: order_by
  ticket_view: dr_tickets_view_order_by
  transaction_aggregate: dr_transactions_aggregate_order_by
  transaction_id: order_by
  updated_at: order_by
}

"""primary key columns input for table: dr_attendee_tickets"""
input dr_attendee_tickets_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_attendee_tickets"
"""
enum dr_attendee_tickets_select_column {
  """column name"""
attendee_id
  """column name"""
coupon_discount_percentage
  """column name"""
coupon_discount_type
  """column name"""
created_at
  """column name"""
id
  """column name"""
price_at_purchase
  """column name"""
refund_transaction_id
  """column name"""
status
  """column name"""
ticket_id
  """column name"""
ticket_name
  """column name"""
transaction_id
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_attendee_tickets"
"""
input dr_attendee_tickets_set_input {
  attendee_id: uuid
  coupon_discount_percentage: Int
  coupon_discount_type: dr_coupon_discount_type_enum
  created_at: timestamptz
  id: uuid
  """Price excluding any coupon discount or tax"""
price_at_purchase: Int
  refund_transaction_id: uuid
  status: dr_line_item_statuses_enum
  ticket_id: uuid
  """Ticket name at time of purchase"""
ticket_name: String
  transaction_id: uuid
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type dr_attendee_tickets_stddev_fields {
   coupon_discount_percentage: Float
  """Price excluding any coupon discount or tax"""
 price_at_purchase: Float
}

"""
order by stddev() on columns of table "dr_attendee_tickets"
"""
input dr_attendee_tickets_stddev_order_by {
  coupon_discount_percentage: order_by
  """Price excluding any coupon discount or tax"""
price_at_purchase: order_by
}

"""aggregate stddev_pop on columns"""
type dr_attendee_tickets_stddev_pop_fields {
   coupon_discount_percentage: Float
  """Price excluding any coupon discount or tax"""
 price_at_purchase: Float
}

"""
order by stddev_pop() on columns of table "dr_attendee_tickets"
"""
input dr_attendee_tickets_stddev_pop_order_by {
  coupon_discount_percentage: order_by
  """Price excluding any coupon discount or tax"""
price_at_purchase: order_by
}

"""aggregate stddev_samp on columns"""
type dr_attendee_tickets_stddev_samp_fields {
   coupon_discount_percentage: Float
  """Price excluding any coupon discount or tax"""
 price_at_purchase: Float
}

"""
order by stddev_samp() on columns of table "dr_attendee_tickets"
"""
input dr_attendee_tickets_stddev_samp_order_by {
  coupon_discount_percentage: order_by
  """Price excluding any coupon discount or tax"""
price_at_purchase: order_by
}

"""
Streaming cursor of the table "dr_attendee_tickets"
"""
input dr_attendee_tickets_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_attendee_tickets_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_attendee_tickets_stream_cursor_value_input {
  attendee_id: uuid
  coupon_discount_percentage: Int
  coupon_discount_type: dr_coupon_discount_type_enum
  created_at: timestamptz
  id: uuid
  """Price excluding any coupon discount or tax"""
price_at_purchase: Int
  refund_transaction_id: uuid
  status: dr_line_item_statuses_enum
  ticket_id: uuid
  """Ticket name at time of purchase"""
ticket_name: String
  transaction_id: uuid
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type dr_attendee_tickets_sum_fields {
   coupon_discount_percentage: Int
  """Price excluding any coupon discount or tax"""
 price_at_purchase: Int
}

"""
order by sum() on columns of table "dr_attendee_tickets"
"""
input dr_attendee_tickets_sum_order_by {
  coupon_discount_percentage: order_by
  """Price excluding any coupon discount or tax"""
price_at_purchase: order_by
}

"""
update columns of table "dr_attendee_tickets"
"""
enum dr_attendee_tickets_update_column {
  """column name"""
attendee_id
  """column name"""
coupon_discount_percentage
  """column name"""
coupon_discount_type
  """column name"""
created_at
  """column name"""
id
  """column name"""
price_at_purchase
  """column name"""
refund_transaction_id
  """column name"""
status
  """column name"""
ticket_id
  """column name"""
ticket_name
  """column name"""
transaction_id
  """column name"""
updated_at
}

input dr_attendee_tickets_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_attendee_tickets_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_attendee_tickets_set_input
  where: dr_attendee_tickets_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_attendee_tickets_var_pop_fields {
   coupon_discount_percentage: Float
  """Price excluding any coupon discount or tax"""
 price_at_purchase: Float
}

"""
order by var_pop() on columns of table "dr_attendee_tickets"
"""
input dr_attendee_tickets_var_pop_order_by {
  coupon_discount_percentage: order_by
  """Price excluding any coupon discount or tax"""
price_at_purchase: order_by
}

"""aggregate var_samp on columns"""
type dr_attendee_tickets_var_samp_fields {
   coupon_discount_percentage: Float
  """Price excluding any coupon discount or tax"""
 price_at_purchase: Float
}

"""
order by var_samp() on columns of table "dr_attendee_tickets"
"""
input dr_attendee_tickets_var_samp_order_by {
  coupon_discount_percentage: order_by
  """Price excluding any coupon discount or tax"""
price_at_purchase: order_by
}

"""aggregate variance on columns"""
type dr_attendee_tickets_variance_fields {
   coupon_discount_percentage: Float
  """Price excluding any coupon discount or tax"""
 price_at_purchase: Float
}

"""
order by variance() on columns of table "dr_attendee_tickets"
"""
input dr_attendee_tickets_variance_order_by {
  coupon_discount_percentage: order_by
  """Price excluding any coupon discount or tax"""
price_at_purchase: order_by
}

"""
columns and relationships of "dr_attendees"
"""
type dr_attendees {
   admin_notes: String
   answered_by: Int
   archived: Boolean! 
  """An array relationship"""
 attendee_addons("""distinct select on columns"""
distinct_on: [dr_attendee_addons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addons_order_by! ], """filter the rows returned"""
where: dr_attendee_addons_bool_exp): [dr_attendee_addons! ]! 
  """An aggregate relationship"""
 attendee_addons_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_addons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addons_order_by! ], """filter the rows returned"""
where: dr_attendee_addons_bool_exp): dr_attendee_addons_aggregate! 
  """An array relationship"""
 attendee_tickets("""distinct select on columns"""
distinct_on: [dr_attendee_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_tickets_order_by! ], """filter the rows returned"""
where: dr_attendee_tickets_bool_exp): [dr_attendee_tickets! ]! 
  """An aggregate relationship"""
 attendee_tickets_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_tickets_order_by! ], """filter the rows returned"""
where: dr_attendee_tickets_bool_exp): dr_attendee_tickets_aggregate! 
   created_at: timestamptz! 
   id: uuid! 
  """An object relationship"""
 order: dr_orders! 
   order_id: uuid! 
  """An array relationship"""
 order_may("""distinct select on columns"""
distinct_on: [dr_orders_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_orders_order_by! ], """filter the rows returned"""
where: dr_orders_bool_exp): [dr_orders! ]! 
  """An aggregate relationship"""
 order_may_aggregate("""distinct select on columns"""
distinct_on: [dr_orders_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_orders_order_by! ], """filter the rows returned"""
where: dr_orders_bool_exp): dr_orders_aggregate! 
  """An array relationship"""
 question_responses("""distinct select on columns"""
distinct_on: [dr_attendee_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_question_responses_order_by! ], """filter the rows returned"""
where: dr_attendee_question_responses_bool_exp): [dr_attendee_question_responses! ]! 
  """An aggregate relationship"""
 question_responses_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_question_responses_order_by! ], """filter the rows returned"""
where: dr_attendee_question_responses_bool_exp): dr_attendee_question_responses_aggregate! 
  """
  A computed field, executes function "dr_attendees_status"
  """
 status: String
   updated_at: timestamptz! 
  """An object relationship"""
 user: users! 
   user_id: Int! 
  """An object relationship"""
 user_view: user_view
}

"""
aggregated selection of "dr_attendees"
"""
type dr_attendees_aggregate {
   aggregate: dr_attendees_aggregate_fields
   nodes: [dr_attendees! ]! 
}

input dr_attendees_aggregate_bool_exp {
  bool_and: dr_attendees_aggregate_bool_exp_bool_and
  bool_or: dr_attendees_aggregate_bool_exp_bool_or
  count: dr_attendees_aggregate_bool_exp_count
}

input dr_attendees_aggregate_bool_exp_bool_and {
  arguments: dr_attendees_select_column_dr_attendees_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: dr_attendees_bool_exp
  predicate: Boolean_comparison_exp! 
}

input dr_attendees_aggregate_bool_exp_bool_or {
  arguments: dr_attendees_select_column_dr_attendees_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: dr_attendees_bool_exp
  predicate: Boolean_comparison_exp! 
}

input dr_attendees_aggregate_bool_exp_count {
  arguments: [dr_attendees_select_column! ]
  distinct: Boolean
  filter: dr_attendees_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_attendees"
"""
type dr_attendees_aggregate_fields {
   avg: dr_attendees_avg_fields
   count(columns: [dr_attendees_select_column! ], distinct: Boolean): Int! 
   max: dr_attendees_max_fields
   min: dr_attendees_min_fields
   stddev: dr_attendees_stddev_fields
   stddev_pop: dr_attendees_stddev_pop_fields
   stddev_samp: dr_attendees_stddev_samp_fields
   sum: dr_attendees_sum_fields
   var_pop: dr_attendees_var_pop_fields
   var_samp: dr_attendees_var_samp_fields
   variance: dr_attendees_variance_fields
}

"""
order by aggregate values of table "dr_attendees"
"""
input dr_attendees_aggregate_order_by {
  avg: dr_attendees_avg_order_by
  count: order_by
  max: dr_attendees_max_order_by
  min: dr_attendees_min_order_by
  stddev: dr_attendees_stddev_order_by
  stddev_pop: dr_attendees_stddev_pop_order_by
  stddev_samp: dr_attendees_stddev_samp_order_by
  sum: dr_attendees_sum_order_by
  var_pop: dr_attendees_var_pop_order_by
  var_samp: dr_attendees_var_samp_order_by
  variance: dr_attendees_variance_order_by
}

"""
input type for inserting array relation for remote table "dr_attendees"
"""
input dr_attendees_arr_rel_insert_input {
  data: [dr_attendees_insert_input! ]! 
  """upsert condition"""
on_conflict: dr_attendees_on_conflict
}

"""aggregate avg on columns"""
type dr_attendees_avg_fields {
   answered_by: Float
   user_id: Float
}

"""
order by avg() on columns of table "dr_attendees"
"""
input dr_attendees_avg_order_by {
  answered_by: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "dr_attendees". All fields are combined with a logical 'AND'.
"""
input dr_attendees_bool_exp {
  _and: [dr_attendees_bool_exp! ]
  _not: dr_attendees_bool_exp
  _or: [dr_attendees_bool_exp! ]
  admin_notes: String_comparison_exp
  answered_by: Int_comparison_exp
  archived: Boolean_comparison_exp
  attendee_addons: dr_attendee_addons_bool_exp
  attendee_addons_aggregate: dr_attendee_addons_aggregate_bool_exp
  attendee_tickets: dr_attendee_tickets_bool_exp
  attendee_tickets_aggregate: dr_attendee_tickets_aggregate_bool_exp
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  order: dr_orders_bool_exp
  order_id: uuid_comparison_exp
  order_may: dr_orders_bool_exp
  order_may_aggregate: dr_orders_aggregate_bool_exp
  question_responses: dr_attendee_question_responses_bool_exp
  question_responses_aggregate: dr_attendee_question_responses_aggregate_bool_exp
  status: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  user: users_bool_exp
  user_id: Int_comparison_exp
  user_view: user_view_bool_exp
}

"""
unique or primary key constraints on table "dr_attendees"
"""
enum dr_attendees_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_attendees_pkey
}

"""
input type for incrementing numeric columns in table "dr_attendees"
"""
input dr_attendees_inc_input {
  answered_by: Int
  user_id: Int
}

"""
input type for inserting data into table "dr_attendees"
"""
input dr_attendees_insert_input {
  admin_notes: String
  answered_by: Int
  archived: Boolean! 
  attendee_addons: dr_attendee_addons_arr_rel_insert_input
  attendee_tickets: dr_attendee_tickets_arr_rel_insert_input
  created_at: timestamptz! 
  id: uuid! 
  order: dr_orders_obj_rel_insert_input
  order_id: uuid! 
  order_may: dr_orders_arr_rel_insert_input
  question_responses: dr_attendee_question_responses_arr_rel_insert_input
  updated_at: timestamptz! 
  user: users_obj_rel_insert_input
  user_id: Int! 
  user_view: user_view_obj_rel_insert_input
}

"""aggregate max on columns"""
type dr_attendees_max_fields {
   admin_notes: String
   answered_by: Int
   created_at: timestamptz
   id: uuid
   order_id: uuid
   updated_at: timestamptz
   user_id: Int
}

"""
order by max() on columns of table "dr_attendees"
"""
input dr_attendees_max_order_by {
  admin_notes: order_by
  answered_by: order_by
  created_at: order_by
  id: order_by
  order_id: order_by
  updated_at: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type dr_attendees_min_fields {
   admin_notes: String
   answered_by: Int
   created_at: timestamptz
   id: uuid
   order_id: uuid
   updated_at: timestamptz
   user_id: Int
}

"""
order by min() on columns of table "dr_attendees"
"""
input dr_attendees_min_order_by {
  admin_notes: order_by
  answered_by: order_by
  created_at: order_by
  id: order_by
  order_id: order_by
  updated_at: order_by
  user_id: order_by
}

"""
response of any mutation on the table "dr_attendees"
"""
type dr_attendees_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_attendees! ]! 
}

"""
input type for inserting object relation for remote table "dr_attendees"
"""
input dr_attendees_obj_rel_insert_input {
  data: dr_attendees_insert_input! 
  """upsert condition"""
on_conflict: dr_attendees_on_conflict
}

"""
on_conflict condition type for table "dr_attendees"
"""
input dr_attendees_on_conflict {
  constraint: dr_attendees_constraint! 
  update_columns: [dr_attendees_update_column! ]! 
  where: dr_attendees_bool_exp
}

"""Ordering options when selecting data from "dr_attendees"."""
input dr_attendees_order_by {
  admin_notes: order_by
  answered_by: order_by
  archived: order_by
  attendee_addons_aggregate: dr_attendee_addons_aggregate_order_by
  attendee_tickets_aggregate: dr_attendee_tickets_aggregate_order_by
  created_at: order_by
  id: order_by
  order: dr_orders_order_by
  order_id: order_by
  order_may_aggregate: dr_orders_aggregate_order_by
  question_responses_aggregate: dr_attendee_question_responses_aggregate_order_by
  status: order_by
  updated_at: order_by
  user: users_order_by
  user_id: order_by
  user_view: user_view_order_by
}

"""primary key columns input for table: dr_attendees"""
input dr_attendees_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_attendees"
"""
enum dr_attendees_select_column {
  """column name"""
admin_notes
  """column name"""
answered_by
  """column name"""
archived
  """column name"""
created_at
  """column name"""
id
  """column name"""
order_id
  """column name"""
updated_at
  """column name"""
user_id
}

"""
select "dr_attendees_aggregate_bool_exp_bool_and_arguments_columns" columns of table "dr_attendees"
"""
enum dr_attendees_select_column_dr_attendees_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
archived
}

"""
select "dr_attendees_aggregate_bool_exp_bool_or_arguments_columns" columns of table "dr_attendees"
"""
enum dr_attendees_select_column_dr_attendees_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
archived
}

"""
input type for updating data in table "dr_attendees"
"""
input dr_attendees_set_input {
  admin_notes: String
  answered_by: Int
  archived: Boolean
  created_at: timestamptz
  id: uuid
  order_id: uuid
  updated_at: timestamptz
  user_id: Int
}

"""aggregate stddev on columns"""
type dr_attendees_stddev_fields {
   answered_by: Float
   user_id: Float
}

"""
order by stddev() on columns of table "dr_attendees"
"""
input dr_attendees_stddev_order_by {
  answered_by: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type dr_attendees_stddev_pop_fields {
   answered_by: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "dr_attendees"
"""
input dr_attendees_stddev_pop_order_by {
  answered_by: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type dr_attendees_stddev_samp_fields {
   answered_by: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "dr_attendees"
"""
input dr_attendees_stddev_samp_order_by {
  answered_by: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "dr_attendees"
"""
input dr_attendees_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_attendees_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_attendees_stream_cursor_value_input {
  admin_notes: String
  answered_by: Int
  archived: Boolean
  created_at: timestamptz
  id: uuid
  order_id: uuid
  updated_at: timestamptz
  user_id: Int
}

"""aggregate sum on columns"""
type dr_attendees_sum_fields {
   answered_by: Int
   user_id: Int
}

"""
order by sum() on columns of table "dr_attendees"
"""
input dr_attendees_sum_order_by {
  answered_by: order_by
  user_id: order_by
}

"""
update columns of table "dr_attendees"
"""
enum dr_attendees_update_column {
  """column name"""
admin_notes
  """column name"""
answered_by
  """column name"""
archived
  """column name"""
created_at
  """column name"""
id
  """column name"""
order_id
  """column name"""
updated_at
  """column name"""
user_id
}

input dr_attendees_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_attendees_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_attendees_set_input
  where: dr_attendees_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_attendees_var_pop_fields {
   answered_by: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "dr_attendees"
"""
input dr_attendees_var_pop_order_by {
  answered_by: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type dr_attendees_var_samp_fields {
   answered_by: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "dr_attendees"
"""
input dr_attendees_var_samp_order_by {
  answered_by: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type dr_attendees_variance_fields {
   answered_by: Float
   user_id: Float
}

"""
order by variance() on columns of table "dr_attendees"
"""
input dr_attendees_variance_order_by {
  answered_by: order_by
  user_id: order_by
}

"""
columns and relationships of "dr_authorize_webhooks"
"""
type dr_authorize_webhooks {
   account_number: String
   account_type: String
   auth_amount: Float! 
   created_at: timestamptz! 
   id: uuid! 
   order_id: uuid! 
   response_code: Int! 
   response_reason_code: Int! 
   result_code: String! 
   settle_amount: Float! 
   transaction_id: String! 
   transaction_status: String! 
   transaction_type: String! 
}

"""
aggregated selection of "dr_authorize_webhooks"
"""
type dr_authorize_webhooks_aggregate {
   aggregate: dr_authorize_webhooks_aggregate_fields
   nodes: [dr_authorize_webhooks! ]! 
}

"""
aggregate fields of "dr_authorize_webhooks"
"""
type dr_authorize_webhooks_aggregate_fields {
   avg: dr_authorize_webhooks_avg_fields
   count(columns: [dr_authorize_webhooks_select_column! ], distinct: Boolean): Int! 
   max: dr_authorize_webhooks_max_fields
   min: dr_authorize_webhooks_min_fields
   stddev: dr_authorize_webhooks_stddev_fields
   stddev_pop: dr_authorize_webhooks_stddev_pop_fields
   stddev_samp: dr_authorize_webhooks_stddev_samp_fields
   sum: dr_authorize_webhooks_sum_fields
   var_pop: dr_authorize_webhooks_var_pop_fields
   var_samp: dr_authorize_webhooks_var_samp_fields
   variance: dr_authorize_webhooks_variance_fields
}

"""aggregate avg on columns"""
type dr_authorize_webhooks_avg_fields {
   auth_amount: Float
   response_code: Float
   response_reason_code: Float
   settle_amount: Float
}

"""
Boolean expression to filter rows from the table "dr_authorize_webhooks". All fields are combined with a logical 'AND'.
"""
input dr_authorize_webhooks_bool_exp {
  _and: [dr_authorize_webhooks_bool_exp! ]
  _not: dr_authorize_webhooks_bool_exp
  _or: [dr_authorize_webhooks_bool_exp! ]
  account_number: String_comparison_exp
  account_type: String_comparison_exp
  auth_amount: Float_comparison_exp
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  order_id: uuid_comparison_exp
  response_code: Int_comparison_exp
  response_reason_code: Int_comparison_exp
  result_code: String_comparison_exp
  settle_amount: Float_comparison_exp
  transaction_id: String_comparison_exp
  transaction_status: String_comparison_exp
  transaction_type: String_comparison_exp
}

"""
unique or primary key constraints on table "dr_authorize_webhooks"
"""
enum dr_authorize_webhooks_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_authorize_webhooks_pkey
}

"""
input type for incrementing numeric columns in table "dr_authorize_webhooks"
"""
input dr_authorize_webhooks_inc_input {
  auth_amount: Float
  response_code: Int
  response_reason_code: Int
  settle_amount: Float
}

"""
input type for inserting data into table "dr_authorize_webhooks"
"""
input dr_authorize_webhooks_insert_input {
  account_number: String
  account_type: String
  auth_amount: Float! 
  created_at: timestamptz! 
  id: uuid! 
  order_id: uuid! 
  response_code: Int! 
  response_reason_code: Int! 
  result_code: String! 
  settle_amount: Float! 
  transaction_id: String! 
  transaction_status: String! 
  transaction_type: String! 
}

"""aggregate max on columns"""
type dr_authorize_webhooks_max_fields {
   account_number: String
   account_type: String
   auth_amount: Float
   created_at: timestamptz
   id: uuid
   order_id: uuid
   response_code: Int
   response_reason_code: Int
   result_code: String
   settle_amount: Float
   transaction_id: String
   transaction_status: String
   transaction_type: String
}

"""aggregate min on columns"""
type dr_authorize_webhooks_min_fields {
   account_number: String
   account_type: String
   auth_amount: Float
   created_at: timestamptz
   id: uuid
   order_id: uuid
   response_code: Int
   response_reason_code: Int
   result_code: String
   settle_amount: Float
   transaction_id: String
   transaction_status: String
   transaction_type: String
}

"""
response of any mutation on the table "dr_authorize_webhooks"
"""
type dr_authorize_webhooks_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_authorize_webhooks! ]! 
}

"""
on_conflict condition type for table "dr_authorize_webhooks"
"""
input dr_authorize_webhooks_on_conflict {
  constraint: dr_authorize_webhooks_constraint! 
  update_columns: [dr_authorize_webhooks_update_column! ]! 
  where: dr_authorize_webhooks_bool_exp
}

"""Ordering options when selecting data from "dr_authorize_webhooks"."""
input dr_authorize_webhooks_order_by {
  account_number: order_by
  account_type: order_by
  auth_amount: order_by
  created_at: order_by
  id: order_by
  order_id: order_by
  response_code: order_by
  response_reason_code: order_by
  result_code: order_by
  settle_amount: order_by
  transaction_id: order_by
  transaction_status: order_by
  transaction_type: order_by
}

"""primary key columns input for table: dr_authorize_webhooks"""
input dr_authorize_webhooks_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_authorize_webhooks"
"""
enum dr_authorize_webhooks_select_column {
  """column name"""
account_number
  """column name"""
account_type
  """column name"""
auth_amount
  """column name"""
created_at
  """column name"""
id
  """column name"""
order_id
  """column name"""
response_code
  """column name"""
response_reason_code
  """column name"""
result_code
  """column name"""
settle_amount
  """column name"""
transaction_id
  """column name"""
transaction_status
  """column name"""
transaction_type
}

"""
input type for updating data in table "dr_authorize_webhooks"
"""
input dr_authorize_webhooks_set_input {
  account_number: String
  account_type: String
  auth_amount: Float
  created_at: timestamptz
  id: uuid
  order_id: uuid
  response_code: Int
  response_reason_code: Int
  result_code: String
  settle_amount: Float
  transaction_id: String
  transaction_status: String
  transaction_type: String
}

"""aggregate stddev on columns"""
type dr_authorize_webhooks_stddev_fields {
   auth_amount: Float
   response_code: Float
   response_reason_code: Float
   settle_amount: Float
}

"""aggregate stddev_pop on columns"""
type dr_authorize_webhooks_stddev_pop_fields {
   auth_amount: Float
   response_code: Float
   response_reason_code: Float
   settle_amount: Float
}

"""aggregate stddev_samp on columns"""
type dr_authorize_webhooks_stddev_samp_fields {
   auth_amount: Float
   response_code: Float
   response_reason_code: Float
   settle_amount: Float
}

"""
Streaming cursor of the table "dr_authorize_webhooks"
"""
input dr_authorize_webhooks_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_authorize_webhooks_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_authorize_webhooks_stream_cursor_value_input {
  account_number: String
  account_type: String
  auth_amount: Float
  created_at: timestamptz
  id: uuid
  order_id: uuid
  response_code: Int
  response_reason_code: Int
  result_code: String
  settle_amount: Float
  transaction_id: String
  transaction_status: String
  transaction_type: String
}

"""aggregate sum on columns"""
type dr_authorize_webhooks_sum_fields {
   auth_amount: Float
   response_code: Int
   response_reason_code: Int
   settle_amount: Float
}

"""
update columns of table "dr_authorize_webhooks"
"""
enum dr_authorize_webhooks_update_column {
  """column name"""
account_number
  """column name"""
account_type
  """column name"""
auth_amount
  """column name"""
created_at
  """column name"""
id
  """column name"""
order_id
  """column name"""
response_code
  """column name"""
response_reason_code
  """column name"""
result_code
  """column name"""
settle_amount
  """column name"""
transaction_id
  """column name"""
transaction_status
  """column name"""
transaction_type
}

input dr_authorize_webhooks_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_authorize_webhooks_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_authorize_webhooks_set_input
  where: dr_authorize_webhooks_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_authorize_webhooks_var_pop_fields {
   auth_amount: Float
   response_code: Float
   response_reason_code: Float
   settle_amount: Float
}

"""aggregate var_samp on columns"""
type dr_authorize_webhooks_var_samp_fields {
   auth_amount: Float
   response_code: Float
   response_reason_code: Float
   settle_amount: Float
}

"""aggregate variance on columns"""
type dr_authorize_webhooks_variance_fields {
   auth_amount: Float
   response_code: Float
   response_reason_code: Float
   settle_amount: Float
}

"""
columns and relationships of "dr_coupon_discount_type"
"""
type dr_coupon_discount_type {
   value: String! 
}

"""
aggregated selection of "dr_coupon_discount_type"
"""
type dr_coupon_discount_type_aggregate {
   aggregate: dr_coupon_discount_type_aggregate_fields
   nodes: [dr_coupon_discount_type! ]! 
}

"""
aggregate fields of "dr_coupon_discount_type"
"""
type dr_coupon_discount_type_aggregate_fields {
   count(columns: [dr_coupon_discount_type_select_column! ], distinct: Boolean): Int! 
   max: dr_coupon_discount_type_max_fields
   min: dr_coupon_discount_type_min_fields
}

"""
Boolean expression to filter rows from the table "dr_coupon_discount_type". All fields are combined with a logical 'AND'.
"""
input dr_coupon_discount_type_bool_exp {
  _and: [dr_coupon_discount_type_bool_exp! ]
  _not: dr_coupon_discount_type_bool_exp
  _or: [dr_coupon_discount_type_bool_exp! ]
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "dr_coupon_discount_type"
"""
enum dr_coupon_discount_type_constraint {
  """
  unique or primary key constraint on columns "value"
  """
dr_coupon_discount_type_pkey
}

enum dr_coupon_discount_type_enum {
  fixed
  percentage
}

"""
Boolean expression to compare columns of type "dr_coupon_discount_type_enum". All fields are combined with logical 'AND'.
"""
input dr_coupon_discount_type_enum_comparison_exp {
  _eq: dr_coupon_discount_type_enum
  _in: [dr_coupon_discount_type_enum! ]
  _is_null: Boolean
  _neq: dr_coupon_discount_type_enum
  _nin: [dr_coupon_discount_type_enum! ]
}

"""
input type for inserting data into table "dr_coupon_discount_type"
"""
input dr_coupon_discount_type_insert_input {
  value: String! 
}

"""aggregate max on columns"""
type dr_coupon_discount_type_max_fields {
   value: String
}

"""aggregate min on columns"""
type dr_coupon_discount_type_min_fields {
   value: String
}

"""
response of any mutation on the table "dr_coupon_discount_type"
"""
type dr_coupon_discount_type_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_coupon_discount_type! ]! 
}

"""
on_conflict condition type for table "dr_coupon_discount_type"
"""
input dr_coupon_discount_type_on_conflict {
  constraint: dr_coupon_discount_type_constraint! 
  update_columns: [dr_coupon_discount_type_update_column! ]! 
  where: dr_coupon_discount_type_bool_exp
}

"""Ordering options when selecting data from "dr_coupon_discount_type"."""
input dr_coupon_discount_type_order_by {
  value: order_by
}

"""primary key columns input for table: dr_coupon_discount_type"""
input dr_coupon_discount_type_pk_columns_input {
  value: String! 
}

"""
select columns of table "dr_coupon_discount_type"
"""
enum dr_coupon_discount_type_select_column {
  """column name"""
value
}

"""
input type for updating data in table "dr_coupon_discount_type"
"""
input dr_coupon_discount_type_set_input {
  value: String
}

"""
Streaming cursor of the table "dr_coupon_discount_type"
"""
input dr_coupon_discount_type_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_coupon_discount_type_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_coupon_discount_type_stream_cursor_value_input {
  value: String
}

"""
update columns of table "dr_coupon_discount_type"
"""
enum dr_coupon_discount_type_update_column {
  """column name"""
value
}

input dr_coupon_discount_type_updates {
  """sets the columns of the filtered rows to the given values"""
_set: dr_coupon_discount_type_set_input
  where: dr_coupon_discount_type_bool_exp! 
}

"""
columns and relationships of "dr_coupons"
"""
type dr_coupons {
   active_on_all_addons: Boolean! 
   active_on_all_tickets: Boolean! 
  """An array relationship"""
 addons("""distinct select on columns"""
distinct_on: [dr_addon_coupons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_coupons_view_order_by! ], """filter the rows returned"""
where: dr_addon_coupons_view_bool_exp): [dr_addon_coupons_view! ]! 
  """An aggregate relationship"""
 addons_aggregate("""distinct select on columns"""
distinct_on: [dr_addon_coupons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_coupons_view_order_by! ], """filter the rows returned"""
where: dr_addon_coupons_view_bool_exp): dr_addon_coupons_view_aggregate! 
  """An array relationship"""
 addons_insert("""distinct select on columns"""
distinct_on: [dr_addon_coupons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_coupons_order_by! ], """filter the rows returned"""
where: dr_addon_coupons_bool_exp): [dr_addon_coupons! ]! 
  """An aggregate relationship"""
 addons_insert_aggregate("""distinct select on columns"""
distinct_on: [dr_addon_coupons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_coupons_order_by! ], """filter the rows returned"""
where: dr_addon_coupons_bool_exp): dr_addon_coupons_aggregate! 
   archived: Boolean! 
   available_from: date
   available_to: date
   code: String! 
   created_at: timestamptz! 
   discount_amount: Int! 
   discount_type: dr_coupon_discount_type_enum! 
   display_order: Int! 
   event_id: Int! 
   hidden: Boolean! 
   id: uuid! 
  """An array relationship"""
 order_line_item_summaries("""distinct select on columns"""
distinct_on: [dr_order_line_items_coupon_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_line_items_coupon_view_order_by! ], """filter the rows returned"""
where: dr_order_line_items_coupon_view_bool_exp): [dr_order_line_items_coupon_view! ]! 
  """An aggregate relationship"""
 order_line_item_summaries_aggregate("""distinct select on columns"""
distinct_on: [dr_order_line_items_coupon_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_line_items_coupon_view_order_by! ], """filter the rows returned"""
where: dr_order_line_items_coupon_view_bool_exp): dr_order_line_items_coupon_view_aggregate! 
  """An array relationship"""
 orders("""distinct select on columns"""
distinct_on: [dr_orders_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_orders_order_by! ], """filter the rows returned"""
where: dr_orders_bool_exp): [dr_orders! ]! 
  """An aggregate relationship"""
 orders_aggregate("""distinct select on columns"""
distinct_on: [dr_orders_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_orders_order_by! ], """filter the rows returned"""
where: dr_orders_bool_exp): dr_orders_aggregate! 
   quantity_available: Int
  """An array relationship"""
 tickets("""distinct select on columns"""
distinct_on: [dr_ticket_coupons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_coupons_view_order_by! ], """filter the rows returned"""
where: dr_ticket_coupons_view_bool_exp): [dr_ticket_coupons_view! ]! 
  """An aggregate relationship"""
 tickets_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_coupons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_coupons_view_order_by! ], """filter the rows returned"""
where: dr_ticket_coupons_view_bool_exp): dr_ticket_coupons_view_aggregate! 
  """An array relationship"""
 tickets_insert("""distinct select on columns"""
distinct_on: [dr_ticket_coupons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_coupons_order_by! ], """filter the rows returned"""
where: dr_ticket_coupons_bool_exp): [dr_ticket_coupons! ]! 
  """An aggregate relationship"""
 tickets_insert_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_coupons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_coupons_order_by! ], """filter the rows returned"""
where: dr_ticket_coupons_bool_exp): dr_ticket_coupons_aggregate! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_coupons"
"""
type dr_coupons_aggregate {
   aggregate: dr_coupons_aggregate_fields
   nodes: [dr_coupons! ]! 
}

"""
aggregate fields of "dr_coupons"
"""
type dr_coupons_aggregate_fields {
   avg: dr_coupons_avg_fields
   count(columns: [dr_coupons_select_column! ], distinct: Boolean): Int! 
   max: dr_coupons_max_fields
   min: dr_coupons_min_fields
   stddev: dr_coupons_stddev_fields
   stddev_pop: dr_coupons_stddev_pop_fields
   stddev_samp: dr_coupons_stddev_samp_fields
   sum: dr_coupons_sum_fields
   var_pop: dr_coupons_var_pop_fields
   var_samp: dr_coupons_var_samp_fields
   variance: dr_coupons_variance_fields
}

"""aggregate avg on columns"""
type dr_coupons_avg_fields {
   discount_amount: Float
   display_order: Float
   event_id: Float
   quantity_available: Float
}

"""
Boolean expression to filter rows from the table "dr_coupons". All fields are combined with a logical 'AND'.
"""
input dr_coupons_bool_exp {
  _and: [dr_coupons_bool_exp! ]
  _not: dr_coupons_bool_exp
  _or: [dr_coupons_bool_exp! ]
  active_on_all_addons: Boolean_comparison_exp
  active_on_all_tickets: Boolean_comparison_exp
  addons: dr_addon_coupons_view_bool_exp
  addons_aggregate: dr_addon_coupons_view_aggregate_bool_exp
  addons_insert: dr_addon_coupons_bool_exp
  addons_insert_aggregate: dr_addon_coupons_aggregate_bool_exp
  archived: Boolean_comparison_exp
  available_from: date_comparison_exp
  available_to: date_comparison_exp
  code: String_comparison_exp
  created_at: timestamptz_comparison_exp
  discount_amount: Int_comparison_exp
  discount_type: dr_coupon_discount_type_enum_comparison_exp
  display_order: Int_comparison_exp
  event_id: Int_comparison_exp
  hidden: Boolean_comparison_exp
  id: uuid_comparison_exp
  order_line_item_summaries: dr_order_line_items_coupon_view_bool_exp
  order_line_item_summaries_aggregate: dr_order_line_items_coupon_view_aggregate_bool_exp
  orders: dr_orders_bool_exp
  orders_aggregate: dr_orders_aggregate_bool_exp
  quantity_available: Int_comparison_exp
  tickets: dr_ticket_coupons_view_bool_exp
  tickets_aggregate: dr_ticket_coupons_view_aggregate_bool_exp
  tickets_insert: dr_ticket_coupons_bool_exp
  tickets_insert_aggregate: dr_ticket_coupons_aggregate_bool_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_coupons"
"""
enum dr_coupons_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_coupons_pkey
}

"""
input type for incrementing numeric columns in table "dr_coupons"
"""
input dr_coupons_inc_input {
  discount_amount: Int
  display_order: Int
  event_id: Int
  quantity_available: Int
}

"""
input type for inserting data into table "dr_coupons"
"""
input dr_coupons_insert_input {
  active_on_all_addons: Boolean! 
  active_on_all_tickets: Boolean! 
  addons: dr_addon_coupons_view_arr_rel_insert_input
  addons_insert: dr_addon_coupons_arr_rel_insert_input
  archived: Boolean! 
  available_from: date
  available_to: date
  code: String! 
  created_at: timestamptz! 
  discount_amount: Int! 
  discount_type: dr_coupon_discount_type_enum! 
  display_order: Int! 
  event_id: Int! 
  hidden: Boolean! 
  id: uuid! 
  order_line_item_summaries: dr_order_line_items_coupon_view_arr_rel_insert_input
  orders: dr_orders_arr_rel_insert_input
  quantity_available: Int
  tickets: dr_ticket_coupons_view_arr_rel_insert_input
  tickets_insert: dr_ticket_coupons_arr_rel_insert_input
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_coupons_max_fields {
   available_from: date
   available_to: date
   code: String
   created_at: timestamptz
   discount_amount: Int
   display_order: Int
   event_id: Int
   id: uuid
   quantity_available: Int
   updated_at: timestamptz
}

"""aggregate min on columns"""
type dr_coupons_min_fields {
   available_from: date
   available_to: date
   code: String
   created_at: timestamptz
   discount_amount: Int
   display_order: Int
   event_id: Int
   id: uuid
   quantity_available: Int
   updated_at: timestamptz
}

"""
response of any mutation on the table "dr_coupons"
"""
type dr_coupons_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_coupons! ]! 
}

"""
input type for inserting object relation for remote table "dr_coupons"
"""
input dr_coupons_obj_rel_insert_input {
  data: dr_coupons_insert_input! 
  """upsert condition"""
on_conflict: dr_coupons_on_conflict
}

"""
on_conflict condition type for table "dr_coupons"
"""
input dr_coupons_on_conflict {
  constraint: dr_coupons_constraint! 
  update_columns: [dr_coupons_update_column! ]! 
  where: dr_coupons_bool_exp
}

"""Ordering options when selecting data from "dr_coupons"."""
input dr_coupons_order_by {
  active_on_all_addons: order_by
  active_on_all_tickets: order_by
  addons_aggregate: dr_addon_coupons_view_aggregate_order_by
  addons_insert_aggregate: dr_addon_coupons_aggregate_order_by
  archived: order_by
  available_from: order_by
  available_to: order_by
  code: order_by
  created_at: order_by
  discount_amount: order_by
  discount_type: order_by
  display_order: order_by
  event_id: order_by
  hidden: order_by
  id: order_by
  order_line_item_summaries_aggregate: dr_order_line_items_coupon_view_aggregate_order_by
  orders_aggregate: dr_orders_aggregate_order_by
  quantity_available: order_by
  tickets_aggregate: dr_ticket_coupons_view_aggregate_order_by
  tickets_insert_aggregate: dr_ticket_coupons_aggregate_order_by
  updated_at: order_by
}

"""primary key columns input for table: dr_coupons"""
input dr_coupons_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_coupons"
"""
enum dr_coupons_select_column {
  """column name"""
active_on_all_addons
  """column name"""
active_on_all_tickets
  """column name"""
archived
  """column name"""
available_from
  """column name"""
available_to
  """column name"""
code
  """column name"""
created_at
  """column name"""
discount_amount
  """column name"""
discount_type
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
hidden
  """column name"""
id
  """column name"""
quantity_available
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_coupons"
"""
input dr_coupons_set_input {
  active_on_all_addons: Boolean
  active_on_all_tickets: Boolean
  archived: Boolean
  available_from: date
  available_to: date
  code: String
  created_at: timestamptz
  discount_amount: Int
  discount_type: dr_coupon_discount_type_enum
  display_order: Int
  event_id: Int
  hidden: Boolean
  id: uuid
  quantity_available: Int
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type dr_coupons_stddev_fields {
   discount_amount: Float
   display_order: Float
   event_id: Float
   quantity_available: Float
}

"""aggregate stddev_pop on columns"""
type dr_coupons_stddev_pop_fields {
   discount_amount: Float
   display_order: Float
   event_id: Float
   quantity_available: Float
}

"""aggregate stddev_samp on columns"""
type dr_coupons_stddev_samp_fields {
   discount_amount: Float
   display_order: Float
   event_id: Float
   quantity_available: Float
}

"""
Streaming cursor of the table "dr_coupons"
"""
input dr_coupons_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_coupons_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_coupons_stream_cursor_value_input {
  active_on_all_addons: Boolean
  active_on_all_tickets: Boolean
  archived: Boolean
  available_from: date
  available_to: date
  code: String
  created_at: timestamptz
  discount_amount: Int
  discount_type: dr_coupon_discount_type_enum
  display_order: Int
  event_id: Int
  hidden: Boolean
  id: uuid
  quantity_available: Int
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type dr_coupons_sum_fields {
   discount_amount: Int
   display_order: Int
   event_id: Int
   quantity_available: Int
}

"""
update columns of table "dr_coupons"
"""
enum dr_coupons_update_column {
  """column name"""
active_on_all_addons
  """column name"""
active_on_all_tickets
  """column name"""
archived
  """column name"""
available_from
  """column name"""
available_to
  """column name"""
code
  """column name"""
created_at
  """column name"""
discount_amount
  """column name"""
discount_type
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
hidden
  """column name"""
id
  """column name"""
quantity_available
  """column name"""
updated_at
}

input dr_coupons_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_coupons_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_coupons_set_input
  where: dr_coupons_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_coupons_var_pop_fields {
   discount_amount: Float
   display_order: Float
   event_id: Float
   quantity_available: Float
}

"""aggregate var_samp on columns"""
type dr_coupons_var_samp_fields {
   discount_amount: Float
   display_order: Float
   event_id: Float
   quantity_available: Float
}

"""aggregate variance on columns"""
type dr_coupons_variance_fields {
   discount_amount: Float
   display_order: Float
   event_id: Float
   quantity_available: Float
}

"""
columns and relationships of "dr_currencies"
"""
type dr_currencies {
   comment: String
   value: String! 
}

"""
aggregated selection of "dr_currencies"
"""
type dr_currencies_aggregate {
   aggregate: dr_currencies_aggregate_fields
   nodes: [dr_currencies! ]! 
}

"""
aggregate fields of "dr_currencies"
"""
type dr_currencies_aggregate_fields {
   count(columns: [dr_currencies_select_column! ], distinct: Boolean): Int! 
   max: dr_currencies_max_fields
   min: dr_currencies_min_fields
}

"""
Boolean expression to filter rows from the table "dr_currencies". All fields are combined with a logical 'AND'.
"""
input dr_currencies_bool_exp {
  _and: [dr_currencies_bool_exp! ]
  _not: dr_currencies_bool_exp
  _or: [dr_currencies_bool_exp! ]
  comment: String_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "dr_currencies"
"""
enum dr_currencies_constraint {
  """
  unique or primary key constraint on columns "value"
  """
dr_currencies_pkey
}

enum dr_currencies_enum {
  """Australian dollar"""
AUD
  """Brazilian real"""
BRL
  """Canadian dollar"""
CAD
  """Swiss franc"""
CHF
  """Czech koruna"""
CZK
  """Danish krone"""
DKK
  """Euro"""
EUR
  """Pound sterling"""
GBP
  """Hong Kong dollar"""
HKD
  """Hungarian forint"""
HUF
  """Israeli new shekel"""
ILS
  """Japanese yen"""
JPY
  """Mexican peso"""
MXN
  """Malaysian ringgit"""
MYR
  """Norwegian krone"""
NOK
  """New Zealand dollar"""
NZD
  """Philippine peso"""
PHP
  """Polish złoty"""
PLN
  """Russian ruble"""
RUB
  """Swedish krona"""
SEK
  """Singapore dollar"""
SGD
  """Thai baht"""
THB
  """New Taiwan dollar"""
TWD
  """United States dollar"""
USD
  """South African rand"""
ZAR
}

"""
Boolean expression to compare columns of type "dr_currencies_enum". All fields are combined with logical 'AND'.
"""
input dr_currencies_enum_comparison_exp {
  _eq: dr_currencies_enum
  _in: [dr_currencies_enum! ]
  _is_null: Boolean
  _neq: dr_currencies_enum
  _nin: [dr_currencies_enum! ]
}

"""
input type for inserting data into table "dr_currencies"
"""
input dr_currencies_insert_input {
  comment: String
  value: String! 
}

"""aggregate max on columns"""
type dr_currencies_max_fields {
   comment: String
   value: String
}

"""aggregate min on columns"""
type dr_currencies_min_fields {
   comment: String
   value: String
}

"""
response of any mutation on the table "dr_currencies"
"""
type dr_currencies_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_currencies! ]! 
}

"""
on_conflict condition type for table "dr_currencies"
"""
input dr_currencies_on_conflict {
  constraint: dr_currencies_constraint! 
  update_columns: [dr_currencies_update_column! ]! 
  where: dr_currencies_bool_exp
}

"""Ordering options when selecting data from "dr_currencies"."""
input dr_currencies_order_by {
  comment: order_by
  value: order_by
}

"""primary key columns input for table: dr_currencies"""
input dr_currencies_pk_columns_input {
  value: String! 
}

"""
select columns of table "dr_currencies"
"""
enum dr_currencies_select_column {
  """column name"""
comment
  """column name"""
value
}

"""
input type for updating data in table "dr_currencies"
"""
input dr_currencies_set_input {
  comment: String
  value: String
}

"""
Streaming cursor of the table "dr_currencies"
"""
input dr_currencies_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_currencies_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_currencies_stream_cursor_value_input {
  comment: String
  value: String
}

"""
update columns of table "dr_currencies"
"""
enum dr_currencies_update_column {
  """column name"""
comment
  """column name"""
value
}

input dr_currencies_updates {
  """sets the columns of the filtered rows to the given values"""
_set: dr_currencies_set_input
  where: dr_currencies_bool_exp! 
}

"""
columns and relationships of "dr_event_details"
"""
type dr_event_details {
   absorb_service_fees: Boolean! 
   authorize_net_api_login_id: String
   authorize_net_signature_key: String
   authorize_net_transaction_key: String
   authorize_net_webhook_id: String
   authorize_payments_allowed: Boolean
   created_at: timestamptz! 
   currency: dr_currencies_enum
   event_id: Int! 
  """
  A computed field, executes function "dr_event_details_has_coupons"
  """
 has_coupons: Boolean
   id: uuid! 
  """An object relationship"""
 offline_payments_setup: dr_offline_payments_setup
  """An object relationship"""
 paypal_payments_setup: dr_paypal_setup
   paypal_tracking_id: String
   registration_active: Boolean! 
   stripe_account_id: String
  """
  A computed field, executes function "dr_event_details_account_id"
  """
 stripe_account_id_exists: Boolean
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_event_details"
"""
type dr_event_details_aggregate {
   aggregate: dr_event_details_aggregate_fields
   nodes: [dr_event_details! ]! 
}

"""
aggregate fields of "dr_event_details"
"""
type dr_event_details_aggregate_fields {
   avg: dr_event_details_avg_fields
   count(columns: [dr_event_details_select_column! ], distinct: Boolean): Int! 
   max: dr_event_details_max_fields
   min: dr_event_details_min_fields
   stddev: dr_event_details_stddev_fields
   stddev_pop: dr_event_details_stddev_pop_fields
   stddev_samp: dr_event_details_stddev_samp_fields
   sum: dr_event_details_sum_fields
   var_pop: dr_event_details_var_pop_fields
   var_samp: dr_event_details_var_samp_fields
   variance: dr_event_details_variance_fields
}

"""aggregate avg on columns"""
type dr_event_details_avg_fields {
   event_id: Float
}

"""
Boolean expression to filter rows from the table "dr_event_details". All fields are combined with a logical 'AND'.
"""
input dr_event_details_bool_exp {
  _and: [dr_event_details_bool_exp! ]
  _not: dr_event_details_bool_exp
  _or: [dr_event_details_bool_exp! ]
  absorb_service_fees: Boolean_comparison_exp
  authorize_net_api_login_id: String_comparison_exp
  authorize_net_signature_key: String_comparison_exp
  authorize_net_transaction_key: String_comparison_exp
  authorize_net_webhook_id: String_comparison_exp
  authorize_payments_allowed: Boolean_comparison_exp
  created_at: timestamptz_comparison_exp
  currency: dr_currencies_enum_comparison_exp
  event_id: Int_comparison_exp
  has_coupons: Boolean_comparison_exp
  id: uuid_comparison_exp
  offline_payments_setup: dr_offline_payments_setup_bool_exp
  paypal_payments_setup: dr_paypal_setup_bool_exp
  paypal_tracking_id: String_comparison_exp
  registration_active: Boolean_comparison_exp
  stripe_account_id: String_comparison_exp
  stripe_account_id_exists: Boolean_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_event_details"
"""
enum dr_event_details_constraint {
  """
  unique or primary key constraint on columns "event_id"
  """
dr_event_details_event_id_key
  """
  unique or primary key constraint on columns "id"
  """
dr_event_details_pkey
}

"""
input type for incrementing numeric columns in table "dr_event_details"
"""
input dr_event_details_inc_input {
  event_id: Int
}

"""
input type for inserting data into table "dr_event_details"
"""
input dr_event_details_insert_input {
  absorb_service_fees: Boolean! 
  authorize_net_api_login_id: String
  authorize_net_signature_key: String
  authorize_net_transaction_key: String
  authorize_net_webhook_id: String
  created_at: timestamptz! 
  currency: dr_currencies_enum
  event_id: Int! 
  id: uuid! 
  offline_payments_setup: dr_offline_payments_setup_obj_rel_insert_input
  paypal_payments_setup: dr_paypal_setup_obj_rel_insert_input
  paypal_tracking_id: String
  registration_active: Boolean! 
  stripe_account_id: String
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_event_details_max_fields {
   authorize_net_api_login_id: String
   authorize_net_signature_key: String
   authorize_net_transaction_key: String
   authorize_net_webhook_id: String
   created_at: timestamptz
   event_id: Int
   id: uuid
   paypal_tracking_id: String
   stripe_account_id: String
   updated_at: timestamptz
}

"""aggregate min on columns"""
type dr_event_details_min_fields {
   authorize_net_api_login_id: String
   authorize_net_signature_key: String
   authorize_net_transaction_key: String
   authorize_net_webhook_id: String
   created_at: timestamptz
   event_id: Int
   id: uuid
   paypal_tracking_id: String
   stripe_account_id: String
   updated_at: timestamptz
}

"""
response of any mutation on the table "dr_event_details"
"""
type dr_event_details_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_event_details! ]! 
}

"""
input type for inserting object relation for remote table "dr_event_details"
"""
input dr_event_details_obj_rel_insert_input {
  data: dr_event_details_insert_input! 
  """upsert condition"""
on_conflict: dr_event_details_on_conflict
}

"""
on_conflict condition type for table "dr_event_details"
"""
input dr_event_details_on_conflict {
  constraint: dr_event_details_constraint! 
  update_columns: [dr_event_details_update_column! ]! 
  where: dr_event_details_bool_exp
}

"""Ordering options when selecting data from "dr_event_details"."""
input dr_event_details_order_by {
  absorb_service_fees: order_by
  authorize_net_api_login_id: order_by
  authorize_net_signature_key: order_by
  authorize_net_transaction_key: order_by
  authorize_net_webhook_id: order_by
  authorize_payments_allowed: order_by
  created_at: order_by
  currency: order_by
  event_id: order_by
  has_coupons: order_by
  id: order_by
  offline_payments_setup: dr_offline_payments_setup_order_by
  paypal_payments_setup: dr_paypal_setup_order_by
  paypal_tracking_id: order_by
  registration_active: order_by
  stripe_account_id: order_by
  stripe_account_id_exists: order_by
  updated_at: order_by
}

"""primary key columns input for table: dr_event_details"""
input dr_event_details_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_event_details"
"""
enum dr_event_details_select_column {
  """column name"""
absorb_service_fees
  """column name"""
authorize_net_api_login_id
  """column name"""
authorize_net_signature_key
  """column name"""
authorize_net_transaction_key
  """column name"""
authorize_net_webhook_id
  """column name"""
authorize_payments_allowed
  """column name"""
created_at
  """column name"""
currency
  """column name"""
event_id
  """column name"""
id
  """column name"""
paypal_tracking_id
  """column name"""
registration_active
  """column name"""
stripe_account_id
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_event_details"
"""
input dr_event_details_set_input {
  absorb_service_fees: Boolean
  authorize_net_api_login_id: String
  authorize_net_signature_key: String
  authorize_net_transaction_key: String
  authorize_net_webhook_id: String
  created_at: timestamptz
  currency: dr_currencies_enum
  event_id: Int
  id: uuid
  paypal_tracking_id: String
  registration_active: Boolean
  stripe_account_id: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type dr_event_details_stddev_fields {
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type dr_event_details_stddev_pop_fields {
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type dr_event_details_stddev_samp_fields {
   event_id: Float
}

"""
Streaming cursor of the table "dr_event_details"
"""
input dr_event_details_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_event_details_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_event_details_stream_cursor_value_input {
  absorb_service_fees: Boolean
  authorize_net_api_login_id: String
  authorize_net_signature_key: String
  authorize_net_transaction_key: String
  authorize_net_webhook_id: String
  authorize_payments_allowed: Boolean
  created_at: timestamptz
  currency: dr_currencies_enum
  event_id: Int
  id: uuid
  paypal_tracking_id: String
  registration_active: Boolean
  stripe_account_id: String
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type dr_event_details_sum_fields {
   event_id: Int
}

"""
update columns of table "dr_event_details"
"""
enum dr_event_details_update_column {
  """column name"""
absorb_service_fees
  """column name"""
authorize_net_api_login_id
  """column name"""
authorize_net_signature_key
  """column name"""
authorize_net_transaction_key
  """column name"""
authorize_net_webhook_id
  """column name"""
created_at
  """column name"""
currency
  """column name"""
event_id
  """column name"""
id
  """column name"""
paypal_tracking_id
  """column name"""
registration_active
  """column name"""
stripe_account_id
  """column name"""
updated_at
}

input dr_event_details_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_event_details_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_event_details_set_input
  where: dr_event_details_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_event_details_var_pop_fields {
   event_id: Float
}

"""aggregate var_samp on columns"""
type dr_event_details_var_samp_fields {
   event_id: Float
}

"""aggregate variance on columns"""
type dr_event_details_variance_fields {
   event_id: Float
}

"""
columns and relationships of "dr_group_questions"
"""
type dr_group_questions {
   created_at: timestamptz! 
  """An object relationship"""
 group: dr_ticket_groups
   group_id: Int
   id: uuid! 
  """An object relationship"""
 question: dr_questions! 
   question_id: uuid! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_group_questions"
"""
type dr_group_questions_aggregate {
   aggregate: dr_group_questions_aggregate_fields
   nodes: [dr_group_questions! ]! 
}

input dr_group_questions_aggregate_bool_exp {
  count: dr_group_questions_aggregate_bool_exp_count
}

input dr_group_questions_aggregate_bool_exp_count {
  arguments: [dr_group_questions_select_column! ]
  distinct: Boolean
  filter: dr_group_questions_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_group_questions"
"""
type dr_group_questions_aggregate_fields {
   avg: dr_group_questions_avg_fields
   count(columns: [dr_group_questions_select_column! ], distinct: Boolean): Int! 
   max: dr_group_questions_max_fields
   min: dr_group_questions_min_fields
   stddev: dr_group_questions_stddev_fields
   stddev_pop: dr_group_questions_stddev_pop_fields
   stddev_samp: dr_group_questions_stddev_samp_fields
   sum: dr_group_questions_sum_fields
   var_pop: dr_group_questions_var_pop_fields
   var_samp: dr_group_questions_var_samp_fields
   variance: dr_group_questions_variance_fields
}

"""
order by aggregate values of table "dr_group_questions"
"""
input dr_group_questions_aggregate_order_by {
  avg: dr_group_questions_avg_order_by
  count: order_by
  max: dr_group_questions_max_order_by
  min: dr_group_questions_min_order_by
  stddev: dr_group_questions_stddev_order_by
  stddev_pop: dr_group_questions_stddev_pop_order_by
  stddev_samp: dr_group_questions_stddev_samp_order_by
  sum: dr_group_questions_sum_order_by
  var_pop: dr_group_questions_var_pop_order_by
  var_samp: dr_group_questions_var_samp_order_by
  variance: dr_group_questions_variance_order_by
}

"""
input type for inserting array relation for remote table "dr_group_questions"
"""
input dr_group_questions_arr_rel_insert_input {
  data: [dr_group_questions_insert_input! ]! 
  """upsert condition"""
on_conflict: dr_group_questions_on_conflict
}

"""aggregate avg on columns"""
type dr_group_questions_avg_fields {
   group_id: Float
}

"""
order by avg() on columns of table "dr_group_questions"
"""
input dr_group_questions_avg_order_by {
  group_id: order_by
}

"""
Boolean expression to filter rows from the table "dr_group_questions". All fields are combined with a logical 'AND'.
"""
input dr_group_questions_bool_exp {
  _and: [dr_group_questions_bool_exp! ]
  _not: dr_group_questions_bool_exp
  _or: [dr_group_questions_bool_exp! ]
  created_at: timestamptz_comparison_exp
  group: dr_ticket_groups_bool_exp
  group_id: Int_comparison_exp
  id: uuid_comparison_exp
  question: dr_questions_bool_exp
  question_id: uuid_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_group_questions"
"""
enum dr_group_questions_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_ticket_questions_pkey
}

"""
input type for incrementing numeric columns in table "dr_group_questions"
"""
input dr_group_questions_inc_input {
  group_id: Int
}

"""
input type for inserting data into table "dr_group_questions"
"""
input dr_group_questions_insert_input {
  created_at: timestamptz! 
  group: dr_ticket_groups_obj_rel_insert_input
  group_id: Int
  id: uuid! 
  question: dr_questions_obj_rel_insert_input
  question_id: uuid! 
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_group_questions_max_fields {
   created_at: timestamptz
   group_id: Int
   id: uuid
   question_id: uuid
   updated_at: timestamptz
}

"""
order by max() on columns of table "dr_group_questions"
"""
input dr_group_questions_max_order_by {
  created_at: order_by
  group_id: order_by
  id: order_by
  question_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type dr_group_questions_min_fields {
   created_at: timestamptz
   group_id: Int
   id: uuid
   question_id: uuid
   updated_at: timestamptz
}

"""
order by min() on columns of table "dr_group_questions"
"""
input dr_group_questions_min_order_by {
  created_at: order_by
  group_id: order_by
  id: order_by
  question_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "dr_group_questions"
"""
type dr_group_questions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_group_questions! ]! 
}

"""
on_conflict condition type for table "dr_group_questions"
"""
input dr_group_questions_on_conflict {
  constraint: dr_group_questions_constraint! 
  update_columns: [dr_group_questions_update_column! ]! 
  where: dr_group_questions_bool_exp
}

"""Ordering options when selecting data from "dr_group_questions"."""
input dr_group_questions_order_by {
  created_at: order_by
  group: dr_ticket_groups_order_by
  group_id: order_by
  id: order_by
  question: dr_questions_order_by
  question_id: order_by
  updated_at: order_by
}

"""primary key columns input for table: dr_group_questions"""
input dr_group_questions_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_group_questions"
"""
enum dr_group_questions_select_column {
  """column name"""
created_at
  """column name"""
group_id
  """column name"""
id
  """column name"""
question_id
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_group_questions"
"""
input dr_group_questions_set_input {
  created_at: timestamptz
  group_id: Int
  id: uuid
  question_id: uuid
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type dr_group_questions_stddev_fields {
   group_id: Float
}

"""
order by stddev() on columns of table "dr_group_questions"
"""
input dr_group_questions_stddev_order_by {
  group_id: order_by
}

"""aggregate stddev_pop on columns"""
type dr_group_questions_stddev_pop_fields {
   group_id: Float
}

"""
order by stddev_pop() on columns of table "dr_group_questions"
"""
input dr_group_questions_stddev_pop_order_by {
  group_id: order_by
}

"""aggregate stddev_samp on columns"""
type dr_group_questions_stddev_samp_fields {
   group_id: Float
}

"""
order by stddev_samp() on columns of table "dr_group_questions"
"""
input dr_group_questions_stddev_samp_order_by {
  group_id: order_by
}

"""
Streaming cursor of the table "dr_group_questions"
"""
input dr_group_questions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_group_questions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_group_questions_stream_cursor_value_input {
  created_at: timestamptz
  group_id: Int
  id: uuid
  question_id: uuid
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type dr_group_questions_sum_fields {
   group_id: Int
}

"""
order by sum() on columns of table "dr_group_questions"
"""
input dr_group_questions_sum_order_by {
  group_id: order_by
}

"""
update columns of table "dr_group_questions"
"""
enum dr_group_questions_update_column {
  """column name"""
created_at
  """column name"""
group_id
  """column name"""
id
  """column name"""
question_id
  """column name"""
updated_at
}

input dr_group_questions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_group_questions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_group_questions_set_input
  where: dr_group_questions_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_group_questions_var_pop_fields {
   group_id: Float
}

"""
order by var_pop() on columns of table "dr_group_questions"
"""
input dr_group_questions_var_pop_order_by {
  group_id: order_by
}

"""aggregate var_samp on columns"""
type dr_group_questions_var_samp_fields {
   group_id: Float
}

"""
order by var_samp() on columns of table "dr_group_questions"
"""
input dr_group_questions_var_samp_order_by {
  group_id: order_by
}

"""aggregate variance on columns"""
type dr_group_questions_variance_fields {
   group_id: Float
}

"""
order by variance() on columns of table "dr_group_questions"
"""
input dr_group_questions_variance_order_by {
  group_id: order_by
}

"""
columns and relationships of "dr_invoice_setup"
"""
type dr_invoice_setup {
   buyer_email: Boolean! 
   created_at: timestamptz! 
   delegate_order_number: Boolean! 
   delegate_registration_date: Boolean! 
   email: Boolean! 
   end_date: Boolean! 
   event_id: Int! 
   footer_deltas: String
   footer_html: String
   header_deltas: String
   header_html: String
   id: uuid! 
   payer_address: Boolean
   payer_business_name: Boolean
   payer_name: Boolean
   payer_tax_number: Boolean
   start_date: Boolean! 
   telephone: Boolean! 
   title: String! 
   updated_at: timestamptz! 
   venue: Boolean! 
}

"""
aggregated selection of "dr_invoice_setup"
"""
type dr_invoice_setup_aggregate {
   aggregate: dr_invoice_setup_aggregate_fields
   nodes: [dr_invoice_setup! ]! 
}

"""
aggregate fields of "dr_invoice_setup"
"""
type dr_invoice_setup_aggregate_fields {
   avg: dr_invoice_setup_avg_fields
   count(columns: [dr_invoice_setup_select_column! ], distinct: Boolean): Int! 
   max: dr_invoice_setup_max_fields
   min: dr_invoice_setup_min_fields
   stddev: dr_invoice_setup_stddev_fields
   stddev_pop: dr_invoice_setup_stddev_pop_fields
   stddev_samp: dr_invoice_setup_stddev_samp_fields
   sum: dr_invoice_setup_sum_fields
   var_pop: dr_invoice_setup_var_pop_fields
   var_samp: dr_invoice_setup_var_samp_fields
   variance: dr_invoice_setup_variance_fields
}

"""aggregate avg on columns"""
type dr_invoice_setup_avg_fields {
   event_id: Float
}

"""
Boolean expression to filter rows from the table "dr_invoice_setup". All fields are combined with a logical 'AND'.
"""
input dr_invoice_setup_bool_exp {
  _and: [dr_invoice_setup_bool_exp! ]
  _not: dr_invoice_setup_bool_exp
  _or: [dr_invoice_setup_bool_exp! ]
  buyer_email: Boolean_comparison_exp
  created_at: timestamptz_comparison_exp
  delegate_order_number: Boolean_comparison_exp
  delegate_registration_date: Boolean_comparison_exp
  email: Boolean_comparison_exp
  end_date: Boolean_comparison_exp
  event_id: Int_comparison_exp
  footer_deltas: String_comparison_exp
  footer_html: String_comparison_exp
  header_deltas: String_comparison_exp
  header_html: String_comparison_exp
  id: uuid_comparison_exp
  payer_address: Boolean_comparison_exp
  payer_business_name: Boolean_comparison_exp
  payer_name: Boolean_comparison_exp
  payer_tax_number: Boolean_comparison_exp
  start_date: Boolean_comparison_exp
  telephone: Boolean_comparison_exp
  title: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  venue: Boolean_comparison_exp
}

"""
unique or primary key constraints on table "dr_invoice_setup"
"""
enum dr_invoice_setup_constraint {
  """
  unique or primary key constraint on columns "event_id"
  """
dr_invoice_setup_event_id_key
  """
  unique or primary key constraint on columns "id"
  """
dr_invoice_setup_pkey
}

"""
input type for incrementing numeric columns in table "dr_invoice_setup"
"""
input dr_invoice_setup_inc_input {
  event_id: Int
}

"""
input type for inserting data into table "dr_invoice_setup"
"""
input dr_invoice_setup_insert_input {
  buyer_email: Boolean! 
  created_at: timestamptz! 
  delegate_order_number: Boolean! 
  delegate_registration_date: Boolean! 
  email: Boolean! 
  end_date: Boolean! 
  event_id: Int! 
  footer_deltas: String
  footer_html: String
  header_deltas: String
  header_html: String
  id: uuid! 
  payer_address: Boolean
  payer_business_name: Boolean
  payer_name: Boolean
  payer_tax_number: Boolean
  start_date: Boolean! 
  telephone: Boolean! 
  title: String! 
  updated_at: timestamptz! 
  venue: Boolean! 
}

"""aggregate max on columns"""
type dr_invoice_setup_max_fields {
   created_at: timestamptz
   event_id: Int
   footer_deltas: String
   footer_html: String
   header_deltas: String
   header_html: String
   id: uuid
   title: String
   updated_at: timestamptz
}

"""aggregate min on columns"""
type dr_invoice_setup_min_fields {
   created_at: timestamptz
   event_id: Int
   footer_deltas: String
   footer_html: String
   header_deltas: String
   header_html: String
   id: uuid
   title: String
   updated_at: timestamptz
}

"""
response of any mutation on the table "dr_invoice_setup"
"""
type dr_invoice_setup_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_invoice_setup! ]! 
}

"""
input type for inserting object relation for remote table "dr_invoice_setup"
"""
input dr_invoice_setup_obj_rel_insert_input {
  data: dr_invoice_setup_insert_input! 
  """upsert condition"""
on_conflict: dr_invoice_setup_on_conflict
}

"""
on_conflict condition type for table "dr_invoice_setup"
"""
input dr_invoice_setup_on_conflict {
  constraint: dr_invoice_setup_constraint! 
  update_columns: [dr_invoice_setup_update_column! ]! 
  where: dr_invoice_setup_bool_exp
}

"""Ordering options when selecting data from "dr_invoice_setup"."""
input dr_invoice_setup_order_by {
  buyer_email: order_by
  created_at: order_by
  delegate_order_number: order_by
  delegate_registration_date: order_by
  email: order_by
  end_date: order_by
  event_id: order_by
  footer_deltas: order_by
  footer_html: order_by
  header_deltas: order_by
  header_html: order_by
  id: order_by
  payer_address: order_by
  payer_business_name: order_by
  payer_name: order_by
  payer_tax_number: order_by
  start_date: order_by
  telephone: order_by
  title: order_by
  updated_at: order_by
  venue: order_by
}

"""primary key columns input for table: dr_invoice_setup"""
input dr_invoice_setup_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_invoice_setup"
"""
enum dr_invoice_setup_select_column {
  """column name"""
buyer_email
  """column name"""
created_at
  """column name"""
delegate_order_number
  """column name"""
delegate_registration_date
  """column name"""
email
  """column name"""
end_date
  """column name"""
event_id
  """column name"""
footer_deltas
  """column name"""
footer_html
  """column name"""
header_deltas
  """column name"""
header_html
  """column name"""
id
  """column name"""
payer_address
  """column name"""
payer_business_name
  """column name"""
payer_name
  """column name"""
payer_tax_number
  """column name"""
start_date
  """column name"""
telephone
  """column name"""
title
  """column name"""
updated_at
  """column name"""
venue
}

"""
input type for updating data in table "dr_invoice_setup"
"""
input dr_invoice_setup_set_input {
  buyer_email: Boolean
  created_at: timestamptz
  delegate_order_number: Boolean
  delegate_registration_date: Boolean
  email: Boolean
  end_date: Boolean
  event_id: Int
  footer_deltas: String
  footer_html: String
  header_deltas: String
  header_html: String
  id: uuid
  payer_address: Boolean
  payer_business_name: Boolean
  payer_name: Boolean
  payer_tax_number: Boolean
  start_date: Boolean
  telephone: Boolean
  title: String
  updated_at: timestamptz
  venue: Boolean
}

"""aggregate stddev on columns"""
type dr_invoice_setup_stddev_fields {
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type dr_invoice_setup_stddev_pop_fields {
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type dr_invoice_setup_stddev_samp_fields {
   event_id: Float
}

"""
Streaming cursor of the table "dr_invoice_setup"
"""
input dr_invoice_setup_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_invoice_setup_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_invoice_setup_stream_cursor_value_input {
  buyer_email: Boolean
  created_at: timestamptz
  delegate_order_number: Boolean
  delegate_registration_date: Boolean
  email: Boolean
  end_date: Boolean
  event_id: Int
  footer_deltas: String
  footer_html: String
  header_deltas: String
  header_html: String
  id: uuid
  payer_address: Boolean
  payer_business_name: Boolean
  payer_name: Boolean
  payer_tax_number: Boolean
  start_date: Boolean
  telephone: Boolean
  title: String
  updated_at: timestamptz
  venue: Boolean
}

"""aggregate sum on columns"""
type dr_invoice_setup_sum_fields {
   event_id: Int
}

"""
update columns of table "dr_invoice_setup"
"""
enum dr_invoice_setup_update_column {
  """column name"""
buyer_email
  """column name"""
created_at
  """column name"""
delegate_order_number
  """column name"""
delegate_registration_date
  """column name"""
email
  """column name"""
end_date
  """column name"""
event_id
  """column name"""
footer_deltas
  """column name"""
footer_html
  """column name"""
header_deltas
  """column name"""
header_html
  """column name"""
id
  """column name"""
payer_address
  """column name"""
payer_business_name
  """column name"""
payer_name
  """column name"""
payer_tax_number
  """column name"""
start_date
  """column name"""
telephone
  """column name"""
title
  """column name"""
updated_at
  """column name"""
venue
}

input dr_invoice_setup_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_invoice_setup_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_invoice_setup_set_input
  where: dr_invoice_setup_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_invoice_setup_var_pop_fields {
   event_id: Float
}

"""aggregate var_samp on columns"""
type dr_invoice_setup_var_samp_fields {
   event_id: Float
}

"""aggregate variance on columns"""
type dr_invoice_setup_variance_fields {
   event_id: Float
}

"""
columns and relationships of "dr_line_item_statuses"
"""
type dr_line_item_statuses {
   comment: String
   value: String! 
}

"""
aggregated selection of "dr_line_item_statuses"
"""
type dr_line_item_statuses_aggregate {
   aggregate: dr_line_item_statuses_aggregate_fields
   nodes: [dr_line_item_statuses! ]! 
}

"""
aggregate fields of "dr_line_item_statuses"
"""
type dr_line_item_statuses_aggregate_fields {
   count(columns: [dr_line_item_statuses_select_column! ], distinct: Boolean): Int! 
   max: dr_line_item_statuses_max_fields
   min: dr_line_item_statuses_min_fields
}

"""
Boolean expression to filter rows from the table "dr_line_item_statuses". All fields are combined with a logical 'AND'.
"""
input dr_line_item_statuses_bool_exp {
  _and: [dr_line_item_statuses_bool_exp! ]
  _not: dr_line_item_statuses_bool_exp
  _or: [dr_line_item_statuses_bool_exp! ]
  comment: String_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "dr_line_item_statuses"
"""
enum dr_line_item_statuses_constraint {
  """
  unique or primary key constraint on columns "value"
  """
dr_line_item_statuses_pkey
}

enum dr_line_item_statuses_enum {
  """
  This line item has been paid for and is set to be consumed by the attendee
  """
active
  """
  An offline refund has been started for this item. Waiting for the admin to confirm.
  """
partial_refund
  """
  The refund has been completed for this line item and the attendee will no longer have access to it
  """
refunded
}

"""
Boolean expression to compare columns of type "dr_line_item_statuses_enum". All fields are combined with logical 'AND'.
"""
input dr_line_item_statuses_enum_comparison_exp {
  _eq: dr_line_item_statuses_enum
  _in: [dr_line_item_statuses_enum! ]
  _is_null: Boolean
  _neq: dr_line_item_statuses_enum
  _nin: [dr_line_item_statuses_enum! ]
}

"""
input type for inserting data into table "dr_line_item_statuses"
"""
input dr_line_item_statuses_insert_input {
  comment: String
  value: String! 
}

"""aggregate max on columns"""
type dr_line_item_statuses_max_fields {
   comment: String
   value: String
}

"""aggregate min on columns"""
type dr_line_item_statuses_min_fields {
   comment: String
   value: String
}

"""
response of any mutation on the table "dr_line_item_statuses"
"""
type dr_line_item_statuses_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_line_item_statuses! ]! 
}

"""
on_conflict condition type for table "dr_line_item_statuses"
"""
input dr_line_item_statuses_on_conflict {
  constraint: dr_line_item_statuses_constraint! 
  update_columns: [dr_line_item_statuses_update_column! ]! 
  where: dr_line_item_statuses_bool_exp
}

"""Ordering options when selecting data from "dr_line_item_statuses"."""
input dr_line_item_statuses_order_by {
  comment: order_by
  value: order_by
}

"""primary key columns input for table: dr_line_item_statuses"""
input dr_line_item_statuses_pk_columns_input {
  value: String! 
}

"""
select columns of table "dr_line_item_statuses"
"""
enum dr_line_item_statuses_select_column {
  """column name"""
comment
  """column name"""
value
}

"""
input type for updating data in table "dr_line_item_statuses"
"""
input dr_line_item_statuses_set_input {
  comment: String
  value: String
}

"""
Streaming cursor of the table "dr_line_item_statuses"
"""
input dr_line_item_statuses_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_line_item_statuses_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_line_item_statuses_stream_cursor_value_input {
  comment: String
  value: String
}

"""
update columns of table "dr_line_item_statuses"
"""
enum dr_line_item_statuses_update_column {
  """column name"""
comment
  """column name"""
value
}

input dr_line_item_statuses_updates {
  """sets the columns of the filtered rows to the given values"""
_set: dr_line_item_statuses_set_input
  where: dr_line_item_statuses_bool_exp! 
}

"""
columns and relationships of "dr_marketing_campaigns"
"""
type dr_marketing_campaigns {
  """An array relationship"""
 analytics_events("""distinct select on columns"""
distinct_on: [dr_analytics_marketing_campaigns_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_analytics_marketing_campaigns_view_order_by! ], """filter the rows returned"""
where: dr_analytics_marketing_campaigns_view_bool_exp): [dr_analytics_marketing_campaigns_view! ]! 
  """An aggregate relationship"""
 analytics_events_aggregate("""distinct select on columns"""
distinct_on: [dr_analytics_marketing_campaigns_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_analytics_marketing_campaigns_view_order_by! ], """filter the rows returned"""
where: dr_analytics_marketing_campaigns_view_bool_exp): dr_analytics_marketing_campaigns_view_aggregate! 
   archived: Boolean! 
   created_at: timestamptz! 
   event_id: Int! 
   id: uuid! 
   name: String! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_marketing_campaigns"
"""
type dr_marketing_campaigns_aggregate {
   aggregate: dr_marketing_campaigns_aggregate_fields
   nodes: [dr_marketing_campaigns! ]! 
}

"""
aggregate fields of "dr_marketing_campaigns"
"""
type dr_marketing_campaigns_aggregate_fields {
   avg: dr_marketing_campaigns_avg_fields
   count(columns: [dr_marketing_campaigns_select_column! ], distinct: Boolean): Int! 
   max: dr_marketing_campaigns_max_fields
   min: dr_marketing_campaigns_min_fields
   stddev: dr_marketing_campaigns_stddev_fields
   stddev_pop: dr_marketing_campaigns_stddev_pop_fields
   stddev_samp: dr_marketing_campaigns_stddev_samp_fields
   sum: dr_marketing_campaigns_sum_fields
   var_pop: dr_marketing_campaigns_var_pop_fields
   var_samp: dr_marketing_campaigns_var_samp_fields
   variance: dr_marketing_campaigns_variance_fields
}

"""aggregate avg on columns"""
type dr_marketing_campaigns_avg_fields {
   event_id: Float
}

"""
Boolean expression to filter rows from the table "dr_marketing_campaigns". All fields are combined with a logical 'AND'.
"""
input dr_marketing_campaigns_bool_exp {
  _and: [dr_marketing_campaigns_bool_exp! ]
  _not: dr_marketing_campaigns_bool_exp
  _or: [dr_marketing_campaigns_bool_exp! ]
  analytics_events: dr_analytics_marketing_campaigns_view_bool_exp
  analytics_events_aggregate: dr_analytics_marketing_campaigns_view_aggregate_bool_exp
  archived: Boolean_comparison_exp
  created_at: timestamptz_comparison_exp
  event_id: Int_comparison_exp
  id: uuid_comparison_exp
  name: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_marketing_campaigns"
"""
enum dr_marketing_campaigns_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_marketing_campaigns_pkey
}

"""
input type for incrementing numeric columns in table "dr_marketing_campaigns"
"""
input dr_marketing_campaigns_inc_input {
  event_id: Int
}

"""
input type for inserting data into table "dr_marketing_campaigns"
"""
input dr_marketing_campaigns_insert_input {
  analytics_events: dr_analytics_marketing_campaigns_view_arr_rel_insert_input
  archived: Boolean! 
  created_at: timestamptz! 
  event_id: Int! 
  id: uuid! 
  name: String! 
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_marketing_campaigns_max_fields {
   created_at: timestamptz
   event_id: Int
   id: uuid
   name: String
   updated_at: timestamptz
}

"""aggregate min on columns"""
type dr_marketing_campaigns_min_fields {
   created_at: timestamptz
   event_id: Int
   id: uuid
   name: String
   updated_at: timestamptz
}

"""
response of any mutation on the table "dr_marketing_campaigns"
"""
type dr_marketing_campaigns_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_marketing_campaigns! ]! 
}

"""
on_conflict condition type for table "dr_marketing_campaigns"
"""
input dr_marketing_campaigns_on_conflict {
  constraint: dr_marketing_campaigns_constraint! 
  update_columns: [dr_marketing_campaigns_update_column! ]! 
  where: dr_marketing_campaigns_bool_exp
}

"""Ordering options when selecting data from "dr_marketing_campaigns"."""
input dr_marketing_campaigns_order_by {
  analytics_events_aggregate: dr_analytics_marketing_campaigns_view_aggregate_order_by
  archived: order_by
  created_at: order_by
  event_id: order_by
  id: order_by
  name: order_by
  updated_at: order_by
}

"""primary key columns input for table: dr_marketing_campaigns"""
input dr_marketing_campaigns_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_marketing_campaigns"
"""
enum dr_marketing_campaigns_select_column {
  """column name"""
archived
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
id
  """column name"""
name
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_marketing_campaigns"
"""
input dr_marketing_campaigns_set_input {
  archived: Boolean
  created_at: timestamptz
  event_id: Int
  id: uuid
  name: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type dr_marketing_campaigns_stddev_fields {
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type dr_marketing_campaigns_stddev_pop_fields {
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type dr_marketing_campaigns_stddev_samp_fields {
   event_id: Float
}

"""
Streaming cursor of the table "dr_marketing_campaigns"
"""
input dr_marketing_campaigns_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_marketing_campaigns_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_marketing_campaigns_stream_cursor_value_input {
  archived: Boolean
  created_at: timestamptz
  event_id: Int
  id: uuid
  name: String
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type dr_marketing_campaigns_sum_fields {
   event_id: Int
}

"""
update columns of table "dr_marketing_campaigns"
"""
enum dr_marketing_campaigns_update_column {
  """column name"""
archived
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
id
  """column name"""
name
  """column name"""
updated_at
}

input dr_marketing_campaigns_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_marketing_campaigns_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_marketing_campaigns_set_input
  where: dr_marketing_campaigns_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_marketing_campaigns_var_pop_fields {
   event_id: Float
}

"""aggregate var_samp on columns"""
type dr_marketing_campaigns_var_samp_fields {
   event_id: Float
}

"""aggregate variance on columns"""
type dr_marketing_campaigns_variance_fields {
   event_id: Float
}

"""
columns and relationships of "dr_offline_payments_setup"
"""
type dr_offline_payments_setup {
   buyer_email: Boolean! 
   created_at: timestamptz! 
   delegate_order_number: Boolean! 
   delegate_registration_date: Boolean! 
   email: Boolean! 
   end_date: Boolean! 
   event_id: Int! 
   footer_deltas: String
   footer_html: String
   header_deltas: String
   header_html: String
   id: uuid! 
   payer_address: Boolean
   payer_business_name: Boolean
   payer_name: Boolean
   payer_tax_number: Boolean
   start_date: Boolean! 
   telephone: Boolean! 
   title: String! 
   updated_at: timestamptz! 
   venue: Boolean! 
}

"""
aggregated selection of "dr_offline_payments_setup"
"""
type dr_offline_payments_setup_aggregate {
   aggregate: dr_offline_payments_setup_aggregate_fields
   nodes: [dr_offline_payments_setup! ]! 
}

"""
aggregate fields of "dr_offline_payments_setup"
"""
type dr_offline_payments_setup_aggregate_fields {
   avg: dr_offline_payments_setup_avg_fields
   count(columns: [dr_offline_payments_setup_select_column! ], distinct: Boolean): Int! 
   max: dr_offline_payments_setup_max_fields
   min: dr_offline_payments_setup_min_fields
   stddev: dr_offline_payments_setup_stddev_fields
   stddev_pop: dr_offline_payments_setup_stddev_pop_fields
   stddev_samp: dr_offline_payments_setup_stddev_samp_fields
   sum: dr_offline_payments_setup_sum_fields
   var_pop: dr_offline_payments_setup_var_pop_fields
   var_samp: dr_offline_payments_setup_var_samp_fields
   variance: dr_offline_payments_setup_variance_fields
}

"""aggregate avg on columns"""
type dr_offline_payments_setup_avg_fields {
   event_id: Float
}

"""
Boolean expression to filter rows from the table "dr_offline_payments_setup". All fields are combined with a logical 'AND'.
"""
input dr_offline_payments_setup_bool_exp {
  _and: [dr_offline_payments_setup_bool_exp! ]
  _not: dr_offline_payments_setup_bool_exp
  _or: [dr_offline_payments_setup_bool_exp! ]
  buyer_email: Boolean_comparison_exp
  created_at: timestamptz_comparison_exp
  delegate_order_number: Boolean_comparison_exp
  delegate_registration_date: Boolean_comparison_exp
  email: Boolean_comparison_exp
  end_date: Boolean_comparison_exp
  event_id: Int_comparison_exp
  footer_deltas: String_comparison_exp
  footer_html: String_comparison_exp
  header_deltas: String_comparison_exp
  header_html: String_comparison_exp
  id: uuid_comparison_exp
  payer_address: Boolean_comparison_exp
  payer_business_name: Boolean_comparison_exp
  payer_name: Boolean_comparison_exp
  payer_tax_number: Boolean_comparison_exp
  start_date: Boolean_comparison_exp
  telephone: Boolean_comparison_exp
  title: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  venue: Boolean_comparison_exp
}

"""
unique or primary key constraints on table "dr_offline_payments_setup"
"""
enum dr_offline_payments_setup_constraint {
  """
  unique or primary key constraint on columns "event_id"
  """
dr_offline_payments_setup_event_id_key
  """
  unique or primary key constraint on columns "id"
  """
dr_offline_payments_setup_pkey
}

"""
input type for incrementing numeric columns in table "dr_offline_payments_setup"
"""
input dr_offline_payments_setup_inc_input {
  event_id: Int
}

"""
input type for inserting data into table "dr_offline_payments_setup"
"""
input dr_offline_payments_setup_insert_input {
  buyer_email: Boolean! 
  created_at: timestamptz! 
  delegate_order_number: Boolean! 
  delegate_registration_date: Boolean! 
  email: Boolean! 
  end_date: Boolean! 
  event_id: Int! 
  footer_deltas: String
  footer_html: String
  header_deltas: String
  header_html: String
  id: uuid! 
  payer_address: Boolean
  payer_business_name: Boolean
  payer_name: Boolean
  payer_tax_number: Boolean
  start_date: Boolean! 
  telephone: Boolean! 
  title: String! 
  updated_at: timestamptz! 
  venue: Boolean! 
}

"""aggregate max on columns"""
type dr_offline_payments_setup_max_fields {
   created_at: timestamptz
   event_id: Int
   footer_deltas: String
   footer_html: String
   header_deltas: String
   header_html: String
   id: uuid
   title: String
   updated_at: timestamptz
}

"""aggregate min on columns"""
type dr_offline_payments_setup_min_fields {
   created_at: timestamptz
   event_id: Int
   footer_deltas: String
   footer_html: String
   header_deltas: String
   header_html: String
   id: uuid
   title: String
   updated_at: timestamptz
}

"""
response of any mutation on the table "dr_offline_payments_setup"
"""
type dr_offline_payments_setup_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_offline_payments_setup! ]! 
}

"""
input type for inserting object relation for remote table "dr_offline_payments_setup"
"""
input dr_offline_payments_setup_obj_rel_insert_input {
  data: dr_offline_payments_setup_insert_input! 
  """upsert condition"""
on_conflict: dr_offline_payments_setup_on_conflict
}

"""
on_conflict condition type for table "dr_offline_payments_setup"
"""
input dr_offline_payments_setup_on_conflict {
  constraint: dr_offline_payments_setup_constraint! 
  update_columns: [dr_offline_payments_setup_update_column! ]! 
  where: dr_offline_payments_setup_bool_exp
}

"""Ordering options when selecting data from "dr_offline_payments_setup"."""
input dr_offline_payments_setup_order_by {
  buyer_email: order_by
  created_at: order_by
  delegate_order_number: order_by
  delegate_registration_date: order_by
  email: order_by
  end_date: order_by
  event_id: order_by
  footer_deltas: order_by
  footer_html: order_by
  header_deltas: order_by
  header_html: order_by
  id: order_by
  payer_address: order_by
  payer_business_name: order_by
  payer_name: order_by
  payer_tax_number: order_by
  start_date: order_by
  telephone: order_by
  title: order_by
  updated_at: order_by
  venue: order_by
}

"""primary key columns input for table: dr_offline_payments_setup"""
input dr_offline_payments_setup_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_offline_payments_setup"
"""
enum dr_offline_payments_setup_select_column {
  """column name"""
buyer_email
  """column name"""
created_at
  """column name"""
delegate_order_number
  """column name"""
delegate_registration_date
  """column name"""
email
  """column name"""
end_date
  """column name"""
event_id
  """column name"""
footer_deltas
  """column name"""
footer_html
  """column name"""
header_deltas
  """column name"""
header_html
  """column name"""
id
  """column name"""
payer_address
  """column name"""
payer_business_name
  """column name"""
payer_name
  """column name"""
payer_tax_number
  """column name"""
start_date
  """column name"""
telephone
  """column name"""
title
  """column name"""
updated_at
  """column name"""
venue
}

"""
input type for updating data in table "dr_offline_payments_setup"
"""
input dr_offline_payments_setup_set_input {
  buyer_email: Boolean
  created_at: timestamptz
  delegate_order_number: Boolean
  delegate_registration_date: Boolean
  email: Boolean
  end_date: Boolean
  event_id: Int
  footer_deltas: String
  footer_html: String
  header_deltas: String
  header_html: String
  id: uuid
  payer_address: Boolean
  payer_business_name: Boolean
  payer_name: Boolean
  payer_tax_number: Boolean
  start_date: Boolean
  telephone: Boolean
  title: String
  updated_at: timestamptz
  venue: Boolean
}

"""aggregate stddev on columns"""
type dr_offline_payments_setup_stddev_fields {
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type dr_offline_payments_setup_stddev_pop_fields {
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type dr_offline_payments_setup_stddev_samp_fields {
   event_id: Float
}

"""
Streaming cursor of the table "dr_offline_payments_setup"
"""
input dr_offline_payments_setup_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_offline_payments_setup_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_offline_payments_setup_stream_cursor_value_input {
  buyer_email: Boolean
  created_at: timestamptz
  delegate_order_number: Boolean
  delegate_registration_date: Boolean
  email: Boolean
  end_date: Boolean
  event_id: Int
  footer_deltas: String
  footer_html: String
  header_deltas: String
  header_html: String
  id: uuid
  payer_address: Boolean
  payer_business_name: Boolean
  payer_name: Boolean
  payer_tax_number: Boolean
  start_date: Boolean
  telephone: Boolean
  title: String
  updated_at: timestamptz
  venue: Boolean
}

"""aggregate sum on columns"""
type dr_offline_payments_setup_sum_fields {
   event_id: Int
}

"""
update columns of table "dr_offline_payments_setup"
"""
enum dr_offline_payments_setup_update_column {
  """column name"""
buyer_email
  """column name"""
created_at
  """column name"""
delegate_order_number
  """column name"""
delegate_registration_date
  """column name"""
email
  """column name"""
end_date
  """column name"""
event_id
  """column name"""
footer_deltas
  """column name"""
footer_html
  """column name"""
header_deltas
  """column name"""
header_html
  """column name"""
id
  """column name"""
payer_address
  """column name"""
payer_business_name
  """column name"""
payer_name
  """column name"""
payer_tax_number
  """column name"""
start_date
  """column name"""
telephone
  """column name"""
title
  """column name"""
updated_at
  """column name"""
venue
}

input dr_offline_payments_setup_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_offline_payments_setup_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_offline_payments_setup_set_input
  where: dr_offline_payments_setup_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_offline_payments_setup_var_pop_fields {
   event_id: Float
}

"""aggregate var_samp on columns"""
type dr_offline_payments_setup_var_samp_fields {
   event_id: Float
}

"""aggregate variance on columns"""
type dr_offline_payments_setup_variance_fields {
   event_id: Float
}

"""
columns and relationships of "dr_order_line_items_coupon_view"
"""
type dr_order_line_items_coupon_view {
   attendee_id: uuid
   coupon_discount_amount: Int
   coupon_discount_percentage: Int
   coupon_id: uuid
   coupon_name_at_purchase: String
   created_at: timestamptz
   line_item_name: String
   line_item_price_at_purcase: Int
   line_item_status: String
  """An object relationship"""
 order: dr_orders
   order_id: uuid
}

"""
aggregated selection of "dr_order_line_items_coupon_view"
"""
type dr_order_line_items_coupon_view_aggregate {
   aggregate: dr_order_line_items_coupon_view_aggregate_fields
   nodes: [dr_order_line_items_coupon_view! ]! 
}

input dr_order_line_items_coupon_view_aggregate_bool_exp {
  count: dr_order_line_items_coupon_view_aggregate_bool_exp_count
}

input dr_order_line_items_coupon_view_aggregate_bool_exp_count {
  arguments: [dr_order_line_items_coupon_view_select_column! ]
  distinct: Boolean
  filter: dr_order_line_items_coupon_view_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_order_line_items_coupon_view"
"""
type dr_order_line_items_coupon_view_aggregate_fields {
   avg: dr_order_line_items_coupon_view_avg_fields
   count(columns: [dr_order_line_items_coupon_view_select_column! ], distinct: Boolean): Int! 
   max: dr_order_line_items_coupon_view_max_fields
   min: dr_order_line_items_coupon_view_min_fields
   stddev: dr_order_line_items_coupon_view_stddev_fields
   stddev_pop: dr_order_line_items_coupon_view_stddev_pop_fields
   stddev_samp: dr_order_line_items_coupon_view_stddev_samp_fields
   sum: dr_order_line_items_coupon_view_sum_fields
   var_pop: dr_order_line_items_coupon_view_var_pop_fields
   var_samp: dr_order_line_items_coupon_view_var_samp_fields
   variance: dr_order_line_items_coupon_view_variance_fields
}

"""
order by aggregate values of table "dr_order_line_items_coupon_view"
"""
input dr_order_line_items_coupon_view_aggregate_order_by {
  avg: dr_order_line_items_coupon_view_avg_order_by
  count: order_by
  max: dr_order_line_items_coupon_view_max_order_by
  min: dr_order_line_items_coupon_view_min_order_by
  stddev: dr_order_line_items_coupon_view_stddev_order_by
  stddev_pop: dr_order_line_items_coupon_view_stddev_pop_order_by
  stddev_samp: dr_order_line_items_coupon_view_stddev_samp_order_by
  sum: dr_order_line_items_coupon_view_sum_order_by
  var_pop: dr_order_line_items_coupon_view_var_pop_order_by
  var_samp: dr_order_line_items_coupon_view_var_samp_order_by
  variance: dr_order_line_items_coupon_view_variance_order_by
}

"""
input type for inserting array relation for remote table "dr_order_line_items_coupon_view"
"""
input dr_order_line_items_coupon_view_arr_rel_insert_input {
  data: [dr_order_line_items_coupon_view_insert_input! ]! 
}

"""aggregate avg on columns"""
type dr_order_line_items_coupon_view_avg_fields {
   coupon_discount_amount: Float
   coupon_discount_percentage: Float
   line_item_price_at_purcase: Float
}

"""
order by avg() on columns of table "dr_order_line_items_coupon_view"
"""
input dr_order_line_items_coupon_view_avg_order_by {
  coupon_discount_amount: order_by
  coupon_discount_percentage: order_by
  line_item_price_at_purcase: order_by
}

"""
Boolean expression to filter rows from the table "dr_order_line_items_coupon_view". All fields are combined with a logical 'AND'.
"""
input dr_order_line_items_coupon_view_bool_exp {
  _and: [dr_order_line_items_coupon_view_bool_exp! ]
  _not: dr_order_line_items_coupon_view_bool_exp
  _or: [dr_order_line_items_coupon_view_bool_exp! ]
  attendee_id: uuid_comparison_exp
  coupon_discount_amount: Int_comparison_exp
  coupon_discount_percentage: Int_comparison_exp
  coupon_id: uuid_comparison_exp
  coupon_name_at_purchase: String_comparison_exp
  created_at: timestamptz_comparison_exp
  line_item_name: String_comparison_exp
  line_item_price_at_purcase: Int_comparison_exp
  line_item_status: String_comparison_exp
  order: dr_orders_bool_exp
  order_id: uuid_comparison_exp
}

"""
input type for inserting data into table "dr_order_line_items_coupon_view"
"""
input dr_order_line_items_coupon_view_insert_input {
  attendee_id: uuid
  coupon_discount_amount: Int
  coupon_discount_percentage: Int
  coupon_id: uuid
  coupon_name_at_purchase: String
  created_at: timestamptz
  line_item_name: String
  line_item_price_at_purcase: Int
  line_item_status: String
  order: dr_orders_obj_rel_insert_input
  order_id: uuid
}

"""aggregate max on columns"""
type dr_order_line_items_coupon_view_max_fields {
   attendee_id: uuid
   coupon_discount_amount: Int
   coupon_discount_percentage: Int
   coupon_id: uuid
   coupon_name_at_purchase: String
   created_at: timestamptz
   line_item_name: String
   line_item_price_at_purcase: Int
   line_item_status: String
   order_id: uuid
}

"""
order by max() on columns of table "dr_order_line_items_coupon_view"
"""
input dr_order_line_items_coupon_view_max_order_by {
  attendee_id: order_by
  coupon_discount_amount: order_by
  coupon_discount_percentage: order_by
  coupon_id: order_by
  coupon_name_at_purchase: order_by
  created_at: order_by
  line_item_name: order_by
  line_item_price_at_purcase: order_by
  line_item_status: order_by
  order_id: order_by
}

"""aggregate min on columns"""
type dr_order_line_items_coupon_view_min_fields {
   attendee_id: uuid
   coupon_discount_amount: Int
   coupon_discount_percentage: Int
   coupon_id: uuid
   coupon_name_at_purchase: String
   created_at: timestamptz
   line_item_name: String
   line_item_price_at_purcase: Int
   line_item_status: String
   order_id: uuid
}

"""
order by min() on columns of table "dr_order_line_items_coupon_view"
"""
input dr_order_line_items_coupon_view_min_order_by {
  attendee_id: order_by
  coupon_discount_amount: order_by
  coupon_discount_percentage: order_by
  coupon_id: order_by
  coupon_name_at_purchase: order_by
  created_at: order_by
  line_item_name: order_by
  line_item_price_at_purcase: order_by
  line_item_status: order_by
  order_id: order_by
}

"""
Ordering options when selecting data from "dr_order_line_items_coupon_view".
"""
input dr_order_line_items_coupon_view_order_by {
  attendee_id: order_by
  coupon_discount_amount: order_by
  coupon_discount_percentage: order_by
  coupon_id: order_by
  coupon_name_at_purchase: order_by
  created_at: order_by
  line_item_name: order_by
  line_item_price_at_purcase: order_by
  line_item_status: order_by
  order: dr_orders_order_by
  order_id: order_by
}

"""
select columns of table "dr_order_line_items_coupon_view"
"""
enum dr_order_line_items_coupon_view_select_column {
  """column name"""
attendee_id
  """column name"""
coupon_discount_amount
  """column name"""
coupon_discount_percentage
  """column name"""
coupon_id
  """column name"""
coupon_name_at_purchase
  """column name"""
created_at
  """column name"""
line_item_name
  """column name"""
line_item_price_at_purcase
  """column name"""
line_item_status
  """column name"""
order_id
}

"""aggregate stddev on columns"""
type dr_order_line_items_coupon_view_stddev_fields {
   coupon_discount_amount: Float
   coupon_discount_percentage: Float
   line_item_price_at_purcase: Float
}

"""
order by stddev() on columns of table "dr_order_line_items_coupon_view"
"""
input dr_order_line_items_coupon_view_stddev_order_by {
  coupon_discount_amount: order_by
  coupon_discount_percentage: order_by
  line_item_price_at_purcase: order_by
}

"""aggregate stddev_pop on columns"""
type dr_order_line_items_coupon_view_stddev_pop_fields {
   coupon_discount_amount: Float
   coupon_discount_percentage: Float
   line_item_price_at_purcase: Float
}

"""
order by stddev_pop() on columns of table "dr_order_line_items_coupon_view"
"""
input dr_order_line_items_coupon_view_stddev_pop_order_by {
  coupon_discount_amount: order_by
  coupon_discount_percentage: order_by
  line_item_price_at_purcase: order_by
}

"""aggregate stddev_samp on columns"""
type dr_order_line_items_coupon_view_stddev_samp_fields {
   coupon_discount_amount: Float
   coupon_discount_percentage: Float
   line_item_price_at_purcase: Float
}

"""
order by stddev_samp() on columns of table "dr_order_line_items_coupon_view"
"""
input dr_order_line_items_coupon_view_stddev_samp_order_by {
  coupon_discount_amount: order_by
  coupon_discount_percentage: order_by
  line_item_price_at_purcase: order_by
}

"""
Streaming cursor of the table "dr_order_line_items_coupon_view"
"""
input dr_order_line_items_coupon_view_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_order_line_items_coupon_view_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_order_line_items_coupon_view_stream_cursor_value_input {
  attendee_id: uuid
  coupon_discount_amount: Int
  coupon_discount_percentage: Int
  coupon_id: uuid
  coupon_name_at_purchase: String
  created_at: timestamptz
  line_item_name: String
  line_item_price_at_purcase: Int
  line_item_status: String
  order_id: uuid
}

"""aggregate sum on columns"""
type dr_order_line_items_coupon_view_sum_fields {
   coupon_discount_amount: Int
   coupon_discount_percentage: Int
   line_item_price_at_purcase: Int
}

"""
order by sum() on columns of table "dr_order_line_items_coupon_view"
"""
input dr_order_line_items_coupon_view_sum_order_by {
  coupon_discount_amount: order_by
  coupon_discount_percentage: order_by
  line_item_price_at_purcase: order_by
}

"""aggregate var_pop on columns"""
type dr_order_line_items_coupon_view_var_pop_fields {
   coupon_discount_amount: Float
   coupon_discount_percentage: Float
   line_item_price_at_purcase: Float
}

"""
order by var_pop() on columns of table "dr_order_line_items_coupon_view"
"""
input dr_order_line_items_coupon_view_var_pop_order_by {
  coupon_discount_amount: order_by
  coupon_discount_percentage: order_by
  line_item_price_at_purcase: order_by
}

"""aggregate var_samp on columns"""
type dr_order_line_items_coupon_view_var_samp_fields {
   coupon_discount_amount: Float
   coupon_discount_percentage: Float
   line_item_price_at_purcase: Float
}

"""
order by var_samp() on columns of table "dr_order_line_items_coupon_view"
"""
input dr_order_line_items_coupon_view_var_samp_order_by {
  coupon_discount_amount: order_by
  coupon_discount_percentage: order_by
  line_item_price_at_purcase: order_by
}

"""aggregate variance on columns"""
type dr_order_line_items_coupon_view_variance_fields {
   coupon_discount_amount: Float
   coupon_discount_percentage: Float
   line_item_price_at_purcase: Float
}

"""
order by variance() on columns of table "dr_order_line_items_coupon_view"
"""
input dr_order_line_items_coupon_view_variance_order_by {
  coupon_discount_amount: order_by
  coupon_discount_percentage: order_by
  line_item_price_at_purcase: order_by
}

"""
columns and relationships of "dr_order_line_items_tax_rules_view"
"""
type dr_order_line_items_tax_rules_view {
   attendee_id: uuid
   created_at: timestamptz
   line_item_name: String
   line_item_price_at_purcase: Int
   line_item_status: String
   line_item_type: String
  """An object relationship"""
 order: dr_orders
   order_id: uuid
   tax_amount_paid: Int
   tax_percent_at_purchase: numeric
   tax_rule_id: uuid
   tax_rule_name_at_purchase: String
}

"""
aggregated selection of "dr_order_line_items_tax_rules_view"
"""
type dr_order_line_items_tax_rules_view_aggregate {
   aggregate: dr_order_line_items_tax_rules_view_aggregate_fields
   nodes: [dr_order_line_items_tax_rules_view! ]! 
}

input dr_order_line_items_tax_rules_view_aggregate_bool_exp {
  count: dr_order_line_items_tax_rules_view_aggregate_bool_exp_count
}

input dr_order_line_items_tax_rules_view_aggregate_bool_exp_count {
  arguments: [dr_order_line_items_tax_rules_view_select_column! ]
  distinct: Boolean
  filter: dr_order_line_items_tax_rules_view_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_order_line_items_tax_rules_view"
"""
type dr_order_line_items_tax_rules_view_aggregate_fields {
   avg: dr_order_line_items_tax_rules_view_avg_fields
   count(columns: [dr_order_line_items_tax_rules_view_select_column! ], distinct: Boolean): Int! 
   max: dr_order_line_items_tax_rules_view_max_fields
   min: dr_order_line_items_tax_rules_view_min_fields
   stddev: dr_order_line_items_tax_rules_view_stddev_fields
   stddev_pop: dr_order_line_items_tax_rules_view_stddev_pop_fields
   stddev_samp: dr_order_line_items_tax_rules_view_stddev_samp_fields
   sum: dr_order_line_items_tax_rules_view_sum_fields
   var_pop: dr_order_line_items_tax_rules_view_var_pop_fields
   var_samp: dr_order_line_items_tax_rules_view_var_samp_fields
   variance: dr_order_line_items_tax_rules_view_variance_fields
}

"""
order by aggregate values of table "dr_order_line_items_tax_rules_view"
"""
input dr_order_line_items_tax_rules_view_aggregate_order_by {
  avg: dr_order_line_items_tax_rules_view_avg_order_by
  count: order_by
  max: dr_order_line_items_tax_rules_view_max_order_by
  min: dr_order_line_items_tax_rules_view_min_order_by
  stddev: dr_order_line_items_tax_rules_view_stddev_order_by
  stddev_pop: dr_order_line_items_tax_rules_view_stddev_pop_order_by
  stddev_samp: dr_order_line_items_tax_rules_view_stddev_samp_order_by
  sum: dr_order_line_items_tax_rules_view_sum_order_by
  var_pop: dr_order_line_items_tax_rules_view_var_pop_order_by
  var_samp: dr_order_line_items_tax_rules_view_var_samp_order_by
  variance: dr_order_line_items_tax_rules_view_variance_order_by
}

"""
input type for inserting array relation for remote table "dr_order_line_items_tax_rules_view"
"""
input dr_order_line_items_tax_rules_view_arr_rel_insert_input {
  data: [dr_order_line_items_tax_rules_view_insert_input! ]! 
}

"""aggregate avg on columns"""
type dr_order_line_items_tax_rules_view_avg_fields {
   line_item_price_at_purcase: Float
   tax_amount_paid: Float
   tax_percent_at_purchase: Float
}

"""
order by avg() on columns of table "dr_order_line_items_tax_rules_view"
"""
input dr_order_line_items_tax_rules_view_avg_order_by {
  line_item_price_at_purcase: order_by
  tax_amount_paid: order_by
  tax_percent_at_purchase: order_by
}

"""
Boolean expression to filter rows from the table "dr_order_line_items_tax_rules_view". All fields are combined with a logical 'AND'.
"""
input dr_order_line_items_tax_rules_view_bool_exp {
  _and: [dr_order_line_items_tax_rules_view_bool_exp! ]
  _not: dr_order_line_items_tax_rules_view_bool_exp
  _or: [dr_order_line_items_tax_rules_view_bool_exp! ]
  attendee_id: uuid_comparison_exp
  created_at: timestamptz_comparison_exp
  line_item_name: String_comparison_exp
  line_item_price_at_purcase: Int_comparison_exp
  line_item_status: String_comparison_exp
  line_item_type: String_comparison_exp
  order: dr_orders_bool_exp
  order_id: uuid_comparison_exp
  tax_amount_paid: Int_comparison_exp
  tax_percent_at_purchase: numeric_comparison_exp
  tax_rule_id: uuid_comparison_exp
  tax_rule_name_at_purchase: String_comparison_exp
}

"""
input type for inserting data into table "dr_order_line_items_tax_rules_view"
"""
input dr_order_line_items_tax_rules_view_insert_input {
  attendee_id: uuid
  created_at: timestamptz
  line_item_name: String
  line_item_price_at_purcase: Int
  line_item_status: String
  line_item_type: String
  order: dr_orders_obj_rel_insert_input
  order_id: uuid
  tax_amount_paid: Int
  tax_percent_at_purchase: numeric
  tax_rule_id: uuid
  tax_rule_name_at_purchase: String
}

"""aggregate max on columns"""
type dr_order_line_items_tax_rules_view_max_fields {
   attendee_id: uuid
   created_at: timestamptz
   line_item_name: String
   line_item_price_at_purcase: Int
   line_item_status: String
   line_item_type: String
   order_id: uuid
   tax_amount_paid: Int
   tax_percent_at_purchase: numeric
   tax_rule_id: uuid
   tax_rule_name_at_purchase: String
}

"""
order by max() on columns of table "dr_order_line_items_tax_rules_view"
"""
input dr_order_line_items_tax_rules_view_max_order_by {
  attendee_id: order_by
  created_at: order_by
  line_item_name: order_by
  line_item_price_at_purcase: order_by
  line_item_status: order_by
  line_item_type: order_by
  order_id: order_by
  tax_amount_paid: order_by
  tax_percent_at_purchase: order_by
  tax_rule_id: order_by
  tax_rule_name_at_purchase: order_by
}

"""aggregate min on columns"""
type dr_order_line_items_tax_rules_view_min_fields {
   attendee_id: uuid
   created_at: timestamptz
   line_item_name: String
   line_item_price_at_purcase: Int
   line_item_status: String
   line_item_type: String
   order_id: uuid
   tax_amount_paid: Int
   tax_percent_at_purchase: numeric
   tax_rule_id: uuid
   tax_rule_name_at_purchase: String
}

"""
order by min() on columns of table "dr_order_line_items_tax_rules_view"
"""
input dr_order_line_items_tax_rules_view_min_order_by {
  attendee_id: order_by
  created_at: order_by
  line_item_name: order_by
  line_item_price_at_purcase: order_by
  line_item_status: order_by
  line_item_type: order_by
  order_id: order_by
  tax_amount_paid: order_by
  tax_percent_at_purchase: order_by
  tax_rule_id: order_by
  tax_rule_name_at_purchase: order_by
}

"""
Ordering options when selecting data from "dr_order_line_items_tax_rules_view".
"""
input dr_order_line_items_tax_rules_view_order_by {
  attendee_id: order_by
  created_at: order_by
  line_item_name: order_by
  line_item_price_at_purcase: order_by
  line_item_status: order_by
  line_item_type: order_by
  order: dr_orders_order_by
  order_id: order_by
  tax_amount_paid: order_by
  tax_percent_at_purchase: order_by
  tax_rule_id: order_by
  tax_rule_name_at_purchase: order_by
}

"""
select columns of table "dr_order_line_items_tax_rules_view"
"""
enum dr_order_line_items_tax_rules_view_select_column {
  """column name"""
attendee_id
  """column name"""
created_at
  """column name"""
line_item_name
  """column name"""
line_item_price_at_purcase
  """column name"""
line_item_status
  """column name"""
line_item_type
  """column name"""
order_id
  """column name"""
tax_amount_paid
  """column name"""
tax_percent_at_purchase
  """column name"""
tax_rule_id
  """column name"""
tax_rule_name_at_purchase
}

"""aggregate stddev on columns"""
type dr_order_line_items_tax_rules_view_stddev_fields {
   line_item_price_at_purcase: Float
   tax_amount_paid: Float
   tax_percent_at_purchase: Float
}

"""
order by stddev() on columns of table "dr_order_line_items_tax_rules_view"
"""
input dr_order_line_items_tax_rules_view_stddev_order_by {
  line_item_price_at_purcase: order_by
  tax_amount_paid: order_by
  tax_percent_at_purchase: order_by
}

"""aggregate stddev_pop on columns"""
type dr_order_line_items_tax_rules_view_stddev_pop_fields {
   line_item_price_at_purcase: Float
   tax_amount_paid: Float
   tax_percent_at_purchase: Float
}

"""
order by stddev_pop() on columns of table "dr_order_line_items_tax_rules_view"
"""
input dr_order_line_items_tax_rules_view_stddev_pop_order_by {
  line_item_price_at_purcase: order_by
  tax_amount_paid: order_by
  tax_percent_at_purchase: order_by
}

"""aggregate stddev_samp on columns"""
type dr_order_line_items_tax_rules_view_stddev_samp_fields {
   line_item_price_at_purcase: Float
   tax_amount_paid: Float
   tax_percent_at_purchase: Float
}

"""
order by stddev_samp() on columns of table "dr_order_line_items_tax_rules_view"
"""
input dr_order_line_items_tax_rules_view_stddev_samp_order_by {
  line_item_price_at_purcase: order_by
  tax_amount_paid: order_by
  tax_percent_at_purchase: order_by
}

"""
Streaming cursor of the table "dr_order_line_items_tax_rules_view"
"""
input dr_order_line_items_tax_rules_view_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_order_line_items_tax_rules_view_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_order_line_items_tax_rules_view_stream_cursor_value_input {
  attendee_id: uuid
  created_at: timestamptz
  line_item_name: String
  line_item_price_at_purcase: Int
  line_item_status: String
  line_item_type: String
  order_id: uuid
  tax_amount_paid: Int
  tax_percent_at_purchase: numeric
  tax_rule_id: uuid
  tax_rule_name_at_purchase: String
}

"""aggregate sum on columns"""
type dr_order_line_items_tax_rules_view_sum_fields {
   line_item_price_at_purcase: Int
   tax_amount_paid: Int
   tax_percent_at_purchase: numeric
}

"""
order by sum() on columns of table "dr_order_line_items_tax_rules_view"
"""
input dr_order_line_items_tax_rules_view_sum_order_by {
  line_item_price_at_purcase: order_by
  tax_amount_paid: order_by
  tax_percent_at_purchase: order_by
}

"""aggregate var_pop on columns"""
type dr_order_line_items_tax_rules_view_var_pop_fields {
   line_item_price_at_purcase: Float
   tax_amount_paid: Float
   tax_percent_at_purchase: Float
}

"""
order by var_pop() on columns of table "dr_order_line_items_tax_rules_view"
"""
input dr_order_line_items_tax_rules_view_var_pop_order_by {
  line_item_price_at_purcase: order_by
  tax_amount_paid: order_by
  tax_percent_at_purchase: order_by
}

"""aggregate var_samp on columns"""
type dr_order_line_items_tax_rules_view_var_samp_fields {
   line_item_price_at_purcase: Float
   tax_amount_paid: Float
   tax_percent_at_purchase: Float
}

"""
order by var_samp() on columns of table "dr_order_line_items_tax_rules_view"
"""
input dr_order_line_items_tax_rules_view_var_samp_order_by {
  line_item_price_at_purcase: order_by
  tax_amount_paid: order_by
  tax_percent_at_purchase: order_by
}

"""aggregate variance on columns"""
type dr_order_line_items_tax_rules_view_variance_fields {
   line_item_price_at_purcase: Float
   tax_amount_paid: Float
   tax_percent_at_purchase: Float
}

"""
order by variance() on columns of table "dr_order_line_items_tax_rules_view"
"""
input dr_order_line_items_tax_rules_view_variance_order_by {
  line_item_price_at_purcase: order_by
  tax_amount_paid: order_by
  tax_percent_at_purchase: order_by
}

"""
columns and relationships of "dr_order_payment_type"
"""
type dr_order_payment_type {
   value: String! 
}

"""
aggregated selection of "dr_order_payment_type"
"""
type dr_order_payment_type_aggregate {
   aggregate: dr_order_payment_type_aggregate_fields
   nodes: [dr_order_payment_type! ]! 
}

"""
aggregate fields of "dr_order_payment_type"
"""
type dr_order_payment_type_aggregate_fields {
   count(columns: [dr_order_payment_type_select_column! ], distinct: Boolean): Int! 
   max: dr_order_payment_type_max_fields
   min: dr_order_payment_type_min_fields
}

"""
Boolean expression to filter rows from the table "dr_order_payment_type". All fields are combined with a logical 'AND'.
"""
input dr_order_payment_type_bool_exp {
  _and: [dr_order_payment_type_bool_exp! ]
  _not: dr_order_payment_type_bool_exp
  _or: [dr_order_payment_type_bool_exp! ]
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "dr_order_payment_type"
"""
enum dr_order_payment_type_constraint {
  """
  unique or primary key constraint on columns "value"
  """
dr_order_payment_type_pkey
}

enum dr_order_payment_type_enum {
  authorize_net
  offline_payment
  paypal
  stripe
}

"""
Boolean expression to compare columns of type "dr_order_payment_type_enum". All fields are combined with logical 'AND'.
"""
input dr_order_payment_type_enum_comparison_exp {
  _eq: dr_order_payment_type_enum
  _in: [dr_order_payment_type_enum! ]
  _is_null: Boolean
  _neq: dr_order_payment_type_enum
  _nin: [dr_order_payment_type_enum! ]
}

"""
input type for inserting data into table "dr_order_payment_type"
"""
input dr_order_payment_type_insert_input {
  value: String! 
}

"""aggregate max on columns"""
type dr_order_payment_type_max_fields {
   value: String
}

"""aggregate min on columns"""
type dr_order_payment_type_min_fields {
   value: String
}

"""
response of any mutation on the table "dr_order_payment_type"
"""
type dr_order_payment_type_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_order_payment_type! ]! 
}

"""
on_conflict condition type for table "dr_order_payment_type"
"""
input dr_order_payment_type_on_conflict {
  constraint: dr_order_payment_type_constraint! 
  update_columns: [dr_order_payment_type_update_column! ]! 
  where: dr_order_payment_type_bool_exp
}

"""Ordering options when selecting data from "dr_order_payment_type"."""
input dr_order_payment_type_order_by {
  value: order_by
}

"""primary key columns input for table: dr_order_payment_type"""
input dr_order_payment_type_pk_columns_input {
  value: String! 
}

"""
select columns of table "dr_order_payment_type"
"""
enum dr_order_payment_type_select_column {
  """column name"""
value
}

"""
input type for updating data in table "dr_order_payment_type"
"""
input dr_order_payment_type_set_input {
  value: String
}

"""
Streaming cursor of the table "dr_order_payment_type"
"""
input dr_order_payment_type_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_order_payment_type_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_order_payment_type_stream_cursor_value_input {
  value: String
}

"""
update columns of table "dr_order_payment_type"
"""
enum dr_order_payment_type_update_column {
  """column name"""
value
}

input dr_order_payment_type_updates {
  """sets the columns of the filtered rows to the given values"""
_set: dr_order_payment_type_set_input
  where: dr_order_payment_type_bool_exp! 
}

"""
columns and relationships of "dr_order_tax_rules_view"
"""
type dr_order_tax_rules_view {
  """An array relationship"""
 line_items("""distinct select on columns"""
distinct_on: [dr_order_line_items_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_line_items_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_order_line_items_tax_rules_view_bool_exp): [dr_order_line_items_tax_rules_view! ]! 
  """An aggregate relationship"""
 line_items_aggregate("""distinct select on columns"""
distinct_on: [dr_order_line_items_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_line_items_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_order_line_items_tax_rules_view_bool_exp): dr_order_line_items_tax_rules_view_aggregate! 
  """An object relationship"""
 order: dr_orders
   order_id: uuid
  """An object relationship"""
 tax_rule: dr_tax_rules
   tax_rule_id: uuid
}

"""
aggregated selection of "dr_order_tax_rules_view"
"""
type dr_order_tax_rules_view_aggregate {
   aggregate: dr_order_tax_rules_view_aggregate_fields
   nodes: [dr_order_tax_rules_view! ]! 
}

input dr_order_tax_rules_view_aggregate_bool_exp {
  count: dr_order_tax_rules_view_aggregate_bool_exp_count
}

input dr_order_tax_rules_view_aggregate_bool_exp_count {
  arguments: [dr_order_tax_rules_view_select_column! ]
  distinct: Boolean
  filter: dr_order_tax_rules_view_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_order_tax_rules_view"
"""
type dr_order_tax_rules_view_aggregate_fields {
   count(columns: [dr_order_tax_rules_view_select_column! ], distinct: Boolean): Int! 
   max: dr_order_tax_rules_view_max_fields
   min: dr_order_tax_rules_view_min_fields
}

"""
order by aggregate values of table "dr_order_tax_rules_view"
"""
input dr_order_tax_rules_view_aggregate_order_by {
  count: order_by
  max: dr_order_tax_rules_view_max_order_by
  min: dr_order_tax_rules_view_min_order_by
}

"""
input type for inserting array relation for remote table "dr_order_tax_rules_view"
"""
input dr_order_tax_rules_view_arr_rel_insert_input {
  data: [dr_order_tax_rules_view_insert_input! ]! 
}

"""
Boolean expression to filter rows from the table "dr_order_tax_rules_view". All fields are combined with a logical 'AND'.
"""
input dr_order_tax_rules_view_bool_exp {
  _and: [dr_order_tax_rules_view_bool_exp! ]
  _not: dr_order_tax_rules_view_bool_exp
  _or: [dr_order_tax_rules_view_bool_exp! ]
  line_items: dr_order_line_items_tax_rules_view_bool_exp
  line_items_aggregate: dr_order_line_items_tax_rules_view_aggregate_bool_exp
  order: dr_orders_bool_exp
  order_id: uuid_comparison_exp
  tax_rule: dr_tax_rules_bool_exp
  tax_rule_id: uuid_comparison_exp
}

"""
input type for inserting data into table "dr_order_tax_rules_view"
"""
input dr_order_tax_rules_view_insert_input {
  line_items: dr_order_line_items_tax_rules_view_arr_rel_insert_input
  order: dr_orders_obj_rel_insert_input
  order_id: uuid
  tax_rule: dr_tax_rules_obj_rel_insert_input
  tax_rule_id: uuid
}

"""aggregate max on columns"""
type dr_order_tax_rules_view_max_fields {
   order_id: uuid
   tax_rule_id: uuid
}

"""
order by max() on columns of table "dr_order_tax_rules_view"
"""
input dr_order_tax_rules_view_max_order_by {
  order_id: order_by
  tax_rule_id: order_by
}

"""aggregate min on columns"""
type dr_order_tax_rules_view_min_fields {
   order_id: uuid
   tax_rule_id: uuid
}

"""
order by min() on columns of table "dr_order_tax_rules_view"
"""
input dr_order_tax_rules_view_min_order_by {
  order_id: order_by
  tax_rule_id: order_by
}

"""Ordering options when selecting data from "dr_order_tax_rules_view"."""
input dr_order_tax_rules_view_order_by {
  line_items_aggregate: dr_order_line_items_tax_rules_view_aggregate_order_by
  order: dr_orders_order_by
  order_id: order_by
  tax_rule: dr_tax_rules_order_by
  tax_rule_id: order_by
}

"""
select columns of table "dr_order_tax_rules_view"
"""
enum dr_order_tax_rules_view_select_column {
  """column name"""
order_id
  """column name"""
tax_rule_id
}

"""
Streaming cursor of the table "dr_order_tax_rules_view"
"""
input dr_order_tax_rules_view_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_order_tax_rules_view_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_order_tax_rules_view_stream_cursor_value_input {
  order_id: uuid
  tax_rule_id: uuid
}

"""
columns and relationships of "dr_orders"
"""
type dr_orders {
  """An array relationship"""
 attendees("""distinct select on columns"""
distinct_on: [dr_attendees_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendees_order_by! ], """filter the rows returned"""
where: dr_attendees_bool_exp): [dr_attendees! ]! 
  """An aggregate relationship"""
 attendees_aggregate("""distinct select on columns"""
distinct_on: [dr_attendees_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendees_order_by! ], """filter the rows returned"""
where: dr_attendees_bool_exp): dr_attendees_aggregate! 
  """An object relationship"""
 coupon: dr_coupons
   coupon_id: uuid
   coupon_name_at_purchase: String
   created_at: timestamptz! 
   currency: dr_currencies_enum
  """An object relationship"""
 event: events
  """An object relationship"""
 event_details: dr_event_details
   event_id: Int! 
   id: uuid! 
   invoice_address: String
   invoice_business_name: String
   invoice_link_email: String
   invoice_payer_name: String
  """An object relationship"""
 invoice_setup: dr_invoice_setup
   invoice_tax_number: String
  """An array relationship"""
 line_item_coupon_summaries("""distinct select on columns"""
distinct_on: [dr_order_line_items_coupon_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_line_items_coupon_view_order_by! ], """filter the rows returned"""
where: dr_order_line_items_coupon_view_bool_exp): [dr_order_line_items_coupon_view! ]! 
  """An aggregate relationship"""
 line_item_coupon_summaries_aggregate("""distinct select on columns"""
distinct_on: [dr_order_line_items_coupon_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_line_items_coupon_view_order_by! ], """filter the rows returned"""
where: dr_order_line_items_coupon_view_bool_exp): dr_order_line_items_coupon_view_aggregate! 
   marketing_campaign_id: uuid
  """An object relationship"""
 offline_payments_setup: dr_offline_payments_setup
   order_number: Int! 
   paid: Boolean! 
   payment_type: dr_order_payment_type_enum
  """An object relationship"""
 paypal_setup: dr_paypal_setup
   refunded_with_stripe: Boolean! 
   service_fee_absorbed: Boolean! 
   service_fee_paid: Int! 
   service_fee_settled: Boolean! 
  """An array relationship"""
 tax_rules("""distinct select on columns"""
distinct_on: [dr_order_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_order_tax_rules_view_bool_exp): [dr_order_tax_rules_view! ]! 
  """An aggregate relationship"""
 tax_rules_aggregate("""distinct select on columns"""
distinct_on: [dr_order_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_order_tax_rules_view_bool_exp): dr_order_tax_rules_view_aggregate! 
  """An array relationship"""
 transactions("""distinct select on columns"""
distinct_on: [dr_transactions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_transactions_order_by! ], """filter the rows returned"""
where: dr_transactions_bool_exp): [dr_transactions! ]! 
  """An aggregate relationship"""
 transactions_aggregate("""distinct select on columns"""
distinct_on: [dr_transactions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_transactions_order_by! ], """filter the rows returned"""
where: dr_transactions_bool_exp): dr_transactions_aggregate! 
  """An object relationship"""
 ungrouped_ticket_order: dr_ticket_groups_ungrouped_order
   unused_col: Boolean
   updated_at: timestamptz! 
  """An object relationship"""
 user: users! 
   user_id: Int! 
  """An object relationship"""
 user_view: user_view
}

"""
aggregated selection of "dr_orders"
"""
type dr_orders_aggregate {
   aggregate: dr_orders_aggregate_fields
   nodes: [dr_orders! ]! 
}

input dr_orders_aggregate_bool_exp {
  bool_and: dr_orders_aggregate_bool_exp_bool_and
  bool_or: dr_orders_aggregate_bool_exp_bool_or
  count: dr_orders_aggregate_bool_exp_count
}

input dr_orders_aggregate_bool_exp_bool_and {
  arguments: dr_orders_select_column_dr_orders_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: dr_orders_bool_exp
  predicate: Boolean_comparison_exp! 
}

input dr_orders_aggregate_bool_exp_bool_or {
  arguments: dr_orders_select_column_dr_orders_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: dr_orders_bool_exp
  predicate: Boolean_comparison_exp! 
}

input dr_orders_aggregate_bool_exp_count {
  arguments: [dr_orders_select_column! ]
  distinct: Boolean
  filter: dr_orders_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_orders"
"""
type dr_orders_aggregate_fields {
   avg: dr_orders_avg_fields
   count(columns: [dr_orders_select_column! ], distinct: Boolean): Int! 
   max: dr_orders_max_fields
   min: dr_orders_min_fields
   stddev: dr_orders_stddev_fields
   stddev_pop: dr_orders_stddev_pop_fields
   stddev_samp: dr_orders_stddev_samp_fields
   sum: dr_orders_sum_fields
   var_pop: dr_orders_var_pop_fields
   var_samp: dr_orders_var_samp_fields
   variance: dr_orders_variance_fields
}

"""
order by aggregate values of table "dr_orders"
"""
input dr_orders_aggregate_order_by {
  avg: dr_orders_avg_order_by
  count: order_by
  max: dr_orders_max_order_by
  min: dr_orders_min_order_by
  stddev: dr_orders_stddev_order_by
  stddev_pop: dr_orders_stddev_pop_order_by
  stddev_samp: dr_orders_stddev_samp_order_by
  sum: dr_orders_sum_order_by
  var_pop: dr_orders_var_pop_order_by
  var_samp: dr_orders_var_samp_order_by
  variance: dr_orders_variance_order_by
}

"""
input type for inserting array relation for remote table "dr_orders"
"""
input dr_orders_arr_rel_insert_input {
  data: [dr_orders_insert_input! ]! 
  """upsert condition"""
on_conflict: dr_orders_on_conflict
}

"""aggregate avg on columns"""
type dr_orders_avg_fields {
   event_id: Float
   order_number: Float
   service_fee_paid: Float
   user_id: Float
}

"""
order by avg() on columns of table "dr_orders"
"""
input dr_orders_avg_order_by {
  event_id: order_by
  order_number: order_by
  service_fee_paid: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "dr_orders". All fields are combined with a logical 'AND'.
"""
input dr_orders_bool_exp {
  _and: [dr_orders_bool_exp! ]
  _not: dr_orders_bool_exp
  _or: [dr_orders_bool_exp! ]
  attendees: dr_attendees_bool_exp
  attendees_aggregate: dr_attendees_aggregate_bool_exp
  coupon: dr_coupons_bool_exp
  coupon_id: uuid_comparison_exp
  coupon_name_at_purchase: String_comparison_exp
  created_at: timestamptz_comparison_exp
  currency: dr_currencies_enum_comparison_exp
  event: events_bool_exp
  event_details: dr_event_details_bool_exp
  event_id: Int_comparison_exp
  id: uuid_comparison_exp
  invoice_address: String_comparison_exp
  invoice_business_name: String_comparison_exp
  invoice_link_email: String_comparison_exp
  invoice_payer_name: String_comparison_exp
  invoice_setup: dr_invoice_setup_bool_exp
  invoice_tax_number: String_comparison_exp
  line_item_coupon_summaries: dr_order_line_items_coupon_view_bool_exp
  line_item_coupon_summaries_aggregate: dr_order_line_items_coupon_view_aggregate_bool_exp
  marketing_campaign_id: uuid_comparison_exp
  offline_payments_setup: dr_offline_payments_setup_bool_exp
  order_number: Int_comparison_exp
  paid: Boolean_comparison_exp
  payment_type: dr_order_payment_type_enum_comparison_exp
  paypal_setup: dr_paypal_setup_bool_exp
  refunded_with_stripe: Boolean_comparison_exp
  service_fee_absorbed: Boolean_comparison_exp
  service_fee_paid: Int_comparison_exp
  service_fee_settled: Boolean_comparison_exp
  tax_rules: dr_order_tax_rules_view_bool_exp
  tax_rules_aggregate: dr_order_tax_rules_view_aggregate_bool_exp
  transactions: dr_transactions_bool_exp
  transactions_aggregate: dr_transactions_aggregate_bool_exp
  ungrouped_ticket_order: dr_ticket_groups_ungrouped_order_bool_exp
  unused_col: Boolean_comparison_exp
  updated_at: timestamptz_comparison_exp
  user: users_bool_exp
  user_id: Int_comparison_exp
  user_view: user_view_bool_exp
}

"""
unique or primary key constraints on table "dr_orders"
"""
enum dr_orders_constraint {
  """
  unique or primary key constraint on columns "order_number", "event_id"
  """
dr_orders_event_id_order_number_key
  """
  unique or primary key constraint on columns "id"
  """
dr_orders_pkey
}

"""
input type for incrementing numeric columns in table "dr_orders"
"""
input dr_orders_inc_input {
  event_id: Int
  order_number: Int
  service_fee_paid: Int
  user_id: Int
}

"""
input type for inserting data into table "dr_orders"
"""
input dr_orders_insert_input {
  attendees: dr_attendees_arr_rel_insert_input
  coupon: dr_coupons_obj_rel_insert_input
  coupon_id: uuid
  coupon_name_at_purchase: String
  created_at: timestamptz! 
  currency: dr_currencies_enum
  event: events_obj_rel_insert_input
  event_details: dr_event_details_obj_rel_insert_input
  event_id: Int! 
  id: uuid! 
  invoice_address: String
  invoice_business_name: String
  invoice_link_email: String
  invoice_payer_name: String
  invoice_setup: dr_invoice_setup_obj_rel_insert_input
  invoice_tax_number: String
  line_item_coupon_summaries: dr_order_line_items_coupon_view_arr_rel_insert_input
  marketing_campaign_id: uuid
  offline_payments_setup: dr_offline_payments_setup_obj_rel_insert_input
  order_number: Int! 
  paid: Boolean! 
  payment_type: dr_order_payment_type_enum
  paypal_setup: dr_paypal_setup_obj_rel_insert_input
  refunded_with_stripe: Boolean! 
  service_fee_absorbed: Boolean! 
  service_fee_paid: Int! 
  service_fee_settled: Boolean! 
  tax_rules: dr_order_tax_rules_view_arr_rel_insert_input
  transactions: dr_transactions_arr_rel_insert_input
  ungrouped_ticket_order: dr_ticket_groups_ungrouped_order_obj_rel_insert_input
  unused_col: Boolean
  updated_at: timestamptz! 
  user: users_obj_rel_insert_input
  user_id: Int! 
  user_view: user_view_obj_rel_insert_input
}

"""aggregate max on columns"""
type dr_orders_max_fields {
   coupon_id: uuid
   coupon_name_at_purchase: String
   created_at: timestamptz
   event_id: Int
   id: uuid
   invoice_address: String
   invoice_business_name: String
   invoice_link_email: String
   invoice_payer_name: String
   invoice_tax_number: String
   marketing_campaign_id: uuid
   order_number: Int
   service_fee_paid: Int
   updated_at: timestamptz
   user_id: Int
}

"""
order by max() on columns of table "dr_orders"
"""
input dr_orders_max_order_by {
  coupon_id: order_by
  coupon_name_at_purchase: order_by
  created_at: order_by
  event_id: order_by
  id: order_by
  invoice_address: order_by
  invoice_business_name: order_by
  invoice_link_email: order_by
  invoice_payer_name: order_by
  invoice_tax_number: order_by
  marketing_campaign_id: order_by
  order_number: order_by
  service_fee_paid: order_by
  updated_at: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type dr_orders_min_fields {
   coupon_id: uuid
   coupon_name_at_purchase: String
   created_at: timestamptz
   event_id: Int
   id: uuid
   invoice_address: String
   invoice_business_name: String
   invoice_link_email: String
   invoice_payer_name: String
   invoice_tax_number: String
   marketing_campaign_id: uuid
   order_number: Int
   service_fee_paid: Int
   updated_at: timestamptz
   user_id: Int
}

"""
order by min() on columns of table "dr_orders"
"""
input dr_orders_min_order_by {
  coupon_id: order_by
  coupon_name_at_purchase: order_by
  created_at: order_by
  event_id: order_by
  id: order_by
  invoice_address: order_by
  invoice_business_name: order_by
  invoice_link_email: order_by
  invoice_payer_name: order_by
  invoice_tax_number: order_by
  marketing_campaign_id: order_by
  order_number: order_by
  service_fee_paid: order_by
  updated_at: order_by
  user_id: order_by
}

"""
response of any mutation on the table "dr_orders"
"""
type dr_orders_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_orders! ]! 
}

"""
input type for inserting object relation for remote table "dr_orders"
"""
input dr_orders_obj_rel_insert_input {
  data: dr_orders_insert_input! 
  """upsert condition"""
on_conflict: dr_orders_on_conflict
}

"""
on_conflict condition type for table "dr_orders"
"""
input dr_orders_on_conflict {
  constraint: dr_orders_constraint! 
  update_columns: [dr_orders_update_column! ]! 
  where: dr_orders_bool_exp
}

"""Ordering options when selecting data from "dr_orders"."""
input dr_orders_order_by {
  attendees_aggregate: dr_attendees_aggregate_order_by
  coupon: dr_coupons_order_by
  coupon_id: order_by
  coupon_name_at_purchase: order_by
  created_at: order_by
  currency: order_by
  event: events_order_by
  event_details: dr_event_details_order_by
  event_id: order_by
  id: order_by
  invoice_address: order_by
  invoice_business_name: order_by
  invoice_link_email: order_by
  invoice_payer_name: order_by
  invoice_setup: dr_invoice_setup_order_by
  invoice_tax_number: order_by
  line_item_coupon_summaries_aggregate: dr_order_line_items_coupon_view_aggregate_order_by
  marketing_campaign_id: order_by
  offline_payments_setup: dr_offline_payments_setup_order_by
  order_number: order_by
  paid: order_by
  payment_type: order_by
  paypal_setup: dr_paypal_setup_order_by
  refunded_with_stripe: order_by
  service_fee_absorbed: order_by
  service_fee_paid: order_by
  service_fee_settled: order_by
  tax_rules_aggregate: dr_order_tax_rules_view_aggregate_order_by
  transactions_aggregate: dr_transactions_aggregate_order_by
  ungrouped_ticket_order: dr_ticket_groups_ungrouped_order_order_by
  unused_col: order_by
  updated_at: order_by
  user: users_order_by
  user_id: order_by
  user_view: user_view_order_by
}

"""primary key columns input for table: dr_orders"""
input dr_orders_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_orders"
"""
enum dr_orders_select_column {
  """column name"""
coupon_id
  """column name"""
coupon_name_at_purchase
  """column name"""
created_at
  """column name"""
currency
  """column name"""
event_id
  """column name"""
id
  """column name"""
invoice_address
  """column name"""
invoice_business_name
  """column name"""
invoice_link_email
  """column name"""
invoice_payer_name
  """column name"""
invoice_tax_number
  """column name"""
marketing_campaign_id
  """column name"""
order_number
  """column name"""
paid
  """column name"""
payment_type
  """column name"""
refunded_with_stripe
  """column name"""
service_fee_absorbed
  """column name"""
service_fee_paid
  """column name"""
service_fee_settled
  """column name"""
unused_col
  """column name"""
updated_at
  """column name"""
user_id
}

"""
select "dr_orders_aggregate_bool_exp_bool_and_arguments_columns" columns of table "dr_orders"
"""
enum dr_orders_select_column_dr_orders_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
paid
  """column name"""
refunded_with_stripe
  """column name"""
service_fee_absorbed
  """column name"""
service_fee_settled
  """column name"""
unused_col
}

"""
select "dr_orders_aggregate_bool_exp_bool_or_arguments_columns" columns of table "dr_orders"
"""
enum dr_orders_select_column_dr_orders_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
paid
  """column name"""
refunded_with_stripe
  """column name"""
service_fee_absorbed
  """column name"""
service_fee_settled
  """column name"""
unused_col
}

"""
input type for updating data in table "dr_orders"
"""
input dr_orders_set_input {
  coupon_id: uuid
  coupon_name_at_purchase: String
  created_at: timestamptz
  currency: dr_currencies_enum
  event_id: Int
  id: uuid
  invoice_address: String
  invoice_business_name: String
  invoice_link_email: String
  invoice_payer_name: String
  invoice_tax_number: String
  marketing_campaign_id: uuid
  order_number: Int
  paid: Boolean
  payment_type: dr_order_payment_type_enum
  refunded_with_stripe: Boolean
  service_fee_absorbed: Boolean
  service_fee_paid: Int
  service_fee_settled: Boolean
  unused_col: Boolean
  updated_at: timestamptz
  user_id: Int
}

"""aggregate stddev on columns"""
type dr_orders_stddev_fields {
   event_id: Float
   order_number: Float
   service_fee_paid: Float
   user_id: Float
}

"""
order by stddev() on columns of table "dr_orders"
"""
input dr_orders_stddev_order_by {
  event_id: order_by
  order_number: order_by
  service_fee_paid: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type dr_orders_stddev_pop_fields {
   event_id: Float
   order_number: Float
   service_fee_paid: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "dr_orders"
"""
input dr_orders_stddev_pop_order_by {
  event_id: order_by
  order_number: order_by
  service_fee_paid: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type dr_orders_stddev_samp_fields {
   event_id: Float
   order_number: Float
   service_fee_paid: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "dr_orders"
"""
input dr_orders_stddev_samp_order_by {
  event_id: order_by
  order_number: order_by
  service_fee_paid: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "dr_orders"
"""
input dr_orders_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_orders_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_orders_stream_cursor_value_input {
  coupon_id: uuid
  coupon_name_at_purchase: String
  created_at: timestamptz
  currency: dr_currencies_enum
  event_id: Int
  id: uuid
  invoice_address: String
  invoice_business_name: String
  invoice_link_email: String
  invoice_payer_name: String
  invoice_tax_number: String
  marketing_campaign_id: uuid
  order_number: Int
  paid: Boolean
  payment_type: dr_order_payment_type_enum
  refunded_with_stripe: Boolean
  service_fee_absorbed: Boolean
  service_fee_paid: Int
  service_fee_settled: Boolean
  unused_col: Boolean
  updated_at: timestamptz
  user_id: Int
}

"""aggregate sum on columns"""
type dr_orders_sum_fields {
   event_id: Int
   order_number: Int
   service_fee_paid: Int
   user_id: Int
}

"""
order by sum() on columns of table "dr_orders"
"""
input dr_orders_sum_order_by {
  event_id: order_by
  order_number: order_by
  service_fee_paid: order_by
  user_id: order_by
}

"""
update columns of table "dr_orders"
"""
enum dr_orders_update_column {
  """column name"""
coupon_id
  """column name"""
coupon_name_at_purchase
  """column name"""
created_at
  """column name"""
currency
  """column name"""
event_id
  """column name"""
id
  """column name"""
invoice_address
  """column name"""
invoice_business_name
  """column name"""
invoice_link_email
  """column name"""
invoice_payer_name
  """column name"""
invoice_tax_number
  """column name"""
marketing_campaign_id
  """column name"""
order_number
  """column name"""
paid
  """column name"""
payment_type
  """column name"""
refunded_with_stripe
  """column name"""
service_fee_absorbed
  """column name"""
service_fee_paid
  """column name"""
service_fee_settled
  """column name"""
unused_col
  """column name"""
updated_at
  """column name"""
user_id
}

input dr_orders_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_orders_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_orders_set_input
  where: dr_orders_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_orders_var_pop_fields {
   event_id: Float
   order_number: Float
   service_fee_paid: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "dr_orders"
"""
input dr_orders_var_pop_order_by {
  event_id: order_by
  order_number: order_by
  service_fee_paid: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type dr_orders_var_samp_fields {
   event_id: Float
   order_number: Float
   service_fee_paid: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "dr_orders"
"""
input dr_orders_var_samp_order_by {
  event_id: order_by
  order_number: order_by
  service_fee_paid: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type dr_orders_variance_fields {
   event_id: Float
   order_number: Float
   service_fee_paid: Float
   user_id: Float
}

"""
order by variance() on columns of table "dr_orders"
"""
input dr_orders_variance_order_by {
  event_id: order_by
  order_number: order_by
  service_fee_paid: order_by
  user_id: order_by
}

"""
columns and relationships of "dr_payment_type_fees_aggregate"
"""
type dr_payment_type_fees_aggregate {
   amount_due: Int
   amount_paid: Int
   currency: String
   event_id: Int
   payment_type: String
}

"""
aggregated selection of "dr_payment_type_fees_aggregate"
"""
type dr_payment_type_fees_aggregate_aggregate {
   aggregate: dr_payment_type_fees_aggregate_aggregate_fields
   nodes: [dr_payment_type_fees_aggregate! ]! 
}

"""
aggregate fields of "dr_payment_type_fees_aggregate"
"""
type dr_payment_type_fees_aggregate_aggregate_fields {
   avg: dr_payment_type_fees_aggregate_avg_fields
   count(columns: [dr_payment_type_fees_aggregate_select_column! ], distinct: Boolean): Int! 
   max: dr_payment_type_fees_aggregate_max_fields
   min: dr_payment_type_fees_aggregate_min_fields
   stddev: dr_payment_type_fees_aggregate_stddev_fields
   stddev_pop: dr_payment_type_fees_aggregate_stddev_pop_fields
   stddev_samp: dr_payment_type_fees_aggregate_stddev_samp_fields
   sum: dr_payment_type_fees_aggregate_sum_fields
   var_pop: dr_payment_type_fees_aggregate_var_pop_fields
   var_samp: dr_payment_type_fees_aggregate_var_samp_fields
   variance: dr_payment_type_fees_aggregate_variance_fields
}

"""aggregate avg on columns"""
type dr_payment_type_fees_aggregate_avg_fields {
   amount_due: Float
   amount_paid: Float
   event_id: Float
}

"""
Boolean expression to filter rows from the table "dr_payment_type_fees_aggregate". All fields are combined with a logical 'AND'.
"""
input dr_payment_type_fees_aggregate_bool_exp {
  _and: [dr_payment_type_fees_aggregate_bool_exp! ]
  _not: dr_payment_type_fees_aggregate_bool_exp
  _or: [dr_payment_type_fees_aggregate_bool_exp! ]
  amount_due: Int_comparison_exp
  amount_paid: Int_comparison_exp
  currency: String_comparison_exp
  event_id: Int_comparison_exp
  payment_type: String_comparison_exp
}

"""aggregate max on columns"""
type dr_payment_type_fees_aggregate_max_fields {
   amount_due: Int
   amount_paid: Int
   currency: String
   event_id: Int
   payment_type: String
}

"""aggregate min on columns"""
type dr_payment_type_fees_aggregate_min_fields {
   amount_due: Int
   amount_paid: Int
   currency: String
   event_id: Int
   payment_type: String
}

"""
Ordering options when selecting data from "dr_payment_type_fees_aggregate".
"""
input dr_payment_type_fees_aggregate_order_by {
  amount_due: order_by
  amount_paid: order_by
  currency: order_by
  event_id: order_by
  payment_type: order_by
}

"""
select columns of table "dr_payment_type_fees_aggregate"
"""
enum dr_payment_type_fees_aggregate_select_column {
  """column name"""
amount_due
  """column name"""
amount_paid
  """column name"""
currency
  """column name"""
event_id
  """column name"""
payment_type
}

"""aggregate stddev on columns"""
type dr_payment_type_fees_aggregate_stddev_fields {
   amount_due: Float
   amount_paid: Float
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type dr_payment_type_fees_aggregate_stddev_pop_fields {
   amount_due: Float
   amount_paid: Float
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type dr_payment_type_fees_aggregate_stddev_samp_fields {
   amount_due: Float
   amount_paid: Float
   event_id: Float
}

"""
Streaming cursor of the table "dr_payment_type_fees_aggregate"
"""
input dr_payment_type_fees_aggregate_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_payment_type_fees_aggregate_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_payment_type_fees_aggregate_stream_cursor_value_input {
  amount_due: Int
  amount_paid: Int
  currency: String
  event_id: Int
  payment_type: String
}

"""aggregate sum on columns"""
type dr_payment_type_fees_aggregate_sum_fields {
   amount_due: Int
   amount_paid: Int
   event_id: Int
}

"""aggregate var_pop on columns"""
type dr_payment_type_fees_aggregate_var_pop_fields {
   amount_due: Float
   amount_paid: Float
   event_id: Float
}

"""aggregate var_samp on columns"""
type dr_payment_type_fees_aggregate_var_samp_fields {
   amount_due: Float
   amount_paid: Float
   event_id: Float
}

"""aggregate variance on columns"""
type dr_payment_type_fees_aggregate_variance_fields {
   amount_due: Float
   amount_paid: Float
   event_id: Float
}

"""
columns and relationships of "dr_paypal_setup"
"""
type dr_paypal_setup {
   account_status: String! 
   consent_status: Boolean! 
   created_at: timestamptz! 
   event_id: Int! 
   id: uuid! 
   is_email_confirmed: Boolean! 
   merchant_id: String! 
   merchant_id_in_paypal: String! 
   payments_receivable: Boolean! 
   permissions_granted: Boolean! 
   product_intent_id: String! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_paypal_setup"
"""
type dr_paypal_setup_aggregate {
   aggregate: dr_paypal_setup_aggregate_fields
   nodes: [dr_paypal_setup! ]! 
}

"""
aggregate fields of "dr_paypal_setup"
"""
type dr_paypal_setup_aggregate_fields {
   avg: dr_paypal_setup_avg_fields
   count(columns: [dr_paypal_setup_select_column! ], distinct: Boolean): Int! 
   max: dr_paypal_setup_max_fields
   min: dr_paypal_setup_min_fields
   stddev: dr_paypal_setup_stddev_fields
   stddev_pop: dr_paypal_setup_stddev_pop_fields
   stddev_samp: dr_paypal_setup_stddev_samp_fields
   sum: dr_paypal_setup_sum_fields
   var_pop: dr_paypal_setup_var_pop_fields
   var_samp: dr_paypal_setup_var_samp_fields
   variance: dr_paypal_setup_variance_fields
}

"""aggregate avg on columns"""
type dr_paypal_setup_avg_fields {
   event_id: Float
}

"""
Boolean expression to filter rows from the table "dr_paypal_setup". All fields are combined with a logical 'AND'.
"""
input dr_paypal_setup_bool_exp {
  _and: [dr_paypal_setup_bool_exp! ]
  _not: dr_paypal_setup_bool_exp
  _or: [dr_paypal_setup_bool_exp! ]
  account_status: String_comparison_exp
  consent_status: Boolean_comparison_exp
  created_at: timestamptz_comparison_exp
  event_id: Int_comparison_exp
  id: uuid_comparison_exp
  is_email_confirmed: Boolean_comparison_exp
  merchant_id: String_comparison_exp
  merchant_id_in_paypal: String_comparison_exp
  payments_receivable: Boolean_comparison_exp
  permissions_granted: Boolean_comparison_exp
  product_intent_id: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_paypal_setup"
"""
enum dr_paypal_setup_constraint {
  """
  unique or primary key constraint on columns "event_id"
  """
dr_paypal_setup_event_id_key
  """
  unique or primary key constraint on columns "id"
  """
dr_paypal_setup_pkey
}

"""
input type for incrementing numeric columns in table "dr_paypal_setup"
"""
input dr_paypal_setup_inc_input {
  event_id: Int
}

"""
input type for inserting data into table "dr_paypal_setup"
"""
input dr_paypal_setup_insert_input {
  account_status: String! 
  consent_status: Boolean! 
  created_at: timestamptz! 
  event_id: Int! 
  id: uuid! 
  is_email_confirmed: Boolean! 
  merchant_id: String! 
  merchant_id_in_paypal: String! 
  payments_receivable: Boolean! 
  permissions_granted: Boolean! 
  product_intent_id: String! 
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_paypal_setup_max_fields {
   account_status: String
   created_at: timestamptz
   event_id: Int
   id: uuid
   merchant_id: String
   merchant_id_in_paypal: String
   product_intent_id: String
   updated_at: timestamptz
}

"""aggregate min on columns"""
type dr_paypal_setup_min_fields {
   account_status: String
   created_at: timestamptz
   event_id: Int
   id: uuid
   merchant_id: String
   merchant_id_in_paypal: String
   product_intent_id: String
   updated_at: timestamptz
}

"""
response of any mutation on the table "dr_paypal_setup"
"""
type dr_paypal_setup_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_paypal_setup! ]! 
}

"""
input type for inserting object relation for remote table "dr_paypal_setup"
"""
input dr_paypal_setup_obj_rel_insert_input {
  data: dr_paypal_setup_insert_input! 
  """upsert condition"""
on_conflict: dr_paypal_setup_on_conflict
}

"""
on_conflict condition type for table "dr_paypal_setup"
"""
input dr_paypal_setup_on_conflict {
  constraint: dr_paypal_setup_constraint! 
  update_columns: [dr_paypal_setup_update_column! ]! 
  where: dr_paypal_setup_bool_exp
}

"""Ordering options when selecting data from "dr_paypal_setup"."""
input dr_paypal_setup_order_by {
  account_status: order_by
  consent_status: order_by
  created_at: order_by
  event_id: order_by
  id: order_by
  is_email_confirmed: order_by
  merchant_id: order_by
  merchant_id_in_paypal: order_by
  payments_receivable: order_by
  permissions_granted: order_by
  product_intent_id: order_by
  updated_at: order_by
}

"""primary key columns input for table: dr_paypal_setup"""
input dr_paypal_setup_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_paypal_setup"
"""
enum dr_paypal_setup_select_column {
  """column name"""
account_status
  """column name"""
consent_status
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
id
  """column name"""
is_email_confirmed
  """column name"""
merchant_id
  """column name"""
merchant_id_in_paypal
  """column name"""
payments_receivable
  """column name"""
permissions_granted
  """column name"""
product_intent_id
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_paypal_setup"
"""
input dr_paypal_setup_set_input {
  account_status: String
  consent_status: Boolean
  created_at: timestamptz
  event_id: Int
  id: uuid
  is_email_confirmed: Boolean
  merchant_id: String
  merchant_id_in_paypal: String
  payments_receivable: Boolean
  permissions_granted: Boolean
  product_intent_id: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type dr_paypal_setup_stddev_fields {
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type dr_paypal_setup_stddev_pop_fields {
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type dr_paypal_setup_stddev_samp_fields {
   event_id: Float
}

"""
Streaming cursor of the table "dr_paypal_setup"
"""
input dr_paypal_setup_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_paypal_setup_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_paypal_setup_stream_cursor_value_input {
  account_status: String
  consent_status: Boolean
  created_at: timestamptz
  event_id: Int
  id: uuid
  is_email_confirmed: Boolean
  merchant_id: String
  merchant_id_in_paypal: String
  payments_receivable: Boolean
  permissions_granted: Boolean
  product_intent_id: String
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type dr_paypal_setup_sum_fields {
   event_id: Int
}

"""
update columns of table "dr_paypal_setup"
"""
enum dr_paypal_setup_update_column {
  """column name"""
account_status
  """column name"""
consent_status
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
id
  """column name"""
is_email_confirmed
  """column name"""
merchant_id
  """column name"""
merchant_id_in_paypal
  """column name"""
payments_receivable
  """column name"""
permissions_granted
  """column name"""
product_intent_id
  """column name"""
updated_at
}

input dr_paypal_setup_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_paypal_setup_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_paypal_setup_set_input
  where: dr_paypal_setup_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_paypal_setup_var_pop_fields {
   event_id: Float
}

"""aggregate var_samp on columns"""
type dr_paypal_setup_var_samp_fields {
   event_id: Float
}

"""aggregate variance on columns"""
type dr_paypal_setup_variance_fields {
   event_id: Float
}

"""
columns and relationships of "dr_question_dependencies"
"""
type dr_question_dependencies {
   created_at: timestamptz! 
   id: uuid! 
  """An object relationship"""
 option: dr_question_options
  """An object relationship"""
 question: dr_questions
   question_id: uuid! 
   question_option_id: uuid! 
   question_option_is_equal: Boolean! 
   target_question_id: uuid! 
}

"""
aggregated selection of "dr_question_dependencies"
"""
type dr_question_dependencies_aggregate {
   aggregate: dr_question_dependencies_aggregate_fields
   nodes: [dr_question_dependencies! ]! 
}

input dr_question_dependencies_aggregate_bool_exp {
  bool_and: dr_question_dependencies_aggregate_bool_exp_bool_and
  bool_or: dr_question_dependencies_aggregate_bool_exp_bool_or
  count: dr_question_dependencies_aggregate_bool_exp_count
}

input dr_question_dependencies_aggregate_bool_exp_bool_and {
  arguments: dr_question_dependencies_select_column_dr_question_dependencies_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: dr_question_dependencies_bool_exp
  predicate: Boolean_comparison_exp! 
}

input dr_question_dependencies_aggregate_bool_exp_bool_or {
  arguments: dr_question_dependencies_select_column_dr_question_dependencies_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: dr_question_dependencies_bool_exp
  predicate: Boolean_comparison_exp! 
}

input dr_question_dependencies_aggregate_bool_exp_count {
  arguments: [dr_question_dependencies_select_column! ]
  distinct: Boolean
  filter: dr_question_dependencies_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_question_dependencies"
"""
type dr_question_dependencies_aggregate_fields {
   count(columns: [dr_question_dependencies_select_column! ], distinct: Boolean): Int! 
   max: dr_question_dependencies_max_fields
   min: dr_question_dependencies_min_fields
}

"""
order by aggregate values of table "dr_question_dependencies"
"""
input dr_question_dependencies_aggregate_order_by {
  count: order_by
  max: dr_question_dependencies_max_order_by
  min: dr_question_dependencies_min_order_by
}

"""
input type for inserting array relation for remote table "dr_question_dependencies"
"""
input dr_question_dependencies_arr_rel_insert_input {
  data: [dr_question_dependencies_insert_input! ]! 
  """upsert condition"""
on_conflict: dr_question_dependencies_on_conflict
}

"""
Boolean expression to filter rows from the table "dr_question_dependencies". All fields are combined with a logical 'AND'.
"""
input dr_question_dependencies_bool_exp {
  _and: [dr_question_dependencies_bool_exp! ]
  _not: dr_question_dependencies_bool_exp
  _or: [dr_question_dependencies_bool_exp! ]
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  option: dr_question_options_bool_exp
  question: dr_questions_bool_exp
  question_id: uuid_comparison_exp
  question_option_id: uuid_comparison_exp
  question_option_is_equal: Boolean_comparison_exp
  target_question_id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "dr_question_dependencies"
"""
enum dr_question_dependencies_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_question_dependencies_pkey
}

"""
input type for inserting data into table "dr_question_dependencies"
"""
input dr_question_dependencies_insert_input {
  created_at: timestamptz! 
  id: uuid! 
  option: dr_question_options_obj_rel_insert_input
  question: dr_questions_obj_rel_insert_input
  question_id: uuid! 
  question_option_id: uuid! 
  question_option_is_equal: Boolean! 
  target_question_id: uuid! 
}

"""aggregate max on columns"""
type dr_question_dependencies_max_fields {
   created_at: timestamptz
   id: uuid
   question_id: uuid
   question_option_id: uuid
   target_question_id: uuid
}

"""
order by max() on columns of table "dr_question_dependencies"
"""
input dr_question_dependencies_max_order_by {
  created_at: order_by
  id: order_by
  question_id: order_by
  question_option_id: order_by
  target_question_id: order_by
}

"""aggregate min on columns"""
type dr_question_dependencies_min_fields {
   created_at: timestamptz
   id: uuid
   question_id: uuid
   question_option_id: uuid
   target_question_id: uuid
}

"""
order by min() on columns of table "dr_question_dependencies"
"""
input dr_question_dependencies_min_order_by {
  created_at: order_by
  id: order_by
  question_id: order_by
  question_option_id: order_by
  target_question_id: order_by
}

"""
response of any mutation on the table "dr_question_dependencies"
"""
type dr_question_dependencies_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_question_dependencies! ]! 
}

"""
on_conflict condition type for table "dr_question_dependencies"
"""
input dr_question_dependencies_on_conflict {
  constraint: dr_question_dependencies_constraint! 
  update_columns: [dr_question_dependencies_update_column! ]! 
  where: dr_question_dependencies_bool_exp
}

"""Ordering options when selecting data from "dr_question_dependencies"."""
input dr_question_dependencies_order_by {
  created_at: order_by
  id: order_by
  option: dr_question_options_order_by
  question: dr_questions_order_by
  question_id: order_by
  question_option_id: order_by
  question_option_is_equal: order_by
  target_question_id: order_by
}

"""primary key columns input for table: dr_question_dependencies"""
input dr_question_dependencies_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_question_dependencies"
"""
enum dr_question_dependencies_select_column {
  """column name"""
created_at
  """column name"""
id
  """column name"""
question_id
  """column name"""
question_option_id
  """column name"""
question_option_is_equal
  """column name"""
target_question_id
}

"""
select "dr_question_dependencies_aggregate_bool_exp_bool_and_arguments_columns" columns of table "dr_question_dependencies"
"""
enum dr_question_dependencies_select_column_dr_question_dependencies_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
question_option_is_equal
}

"""
select "dr_question_dependencies_aggregate_bool_exp_bool_or_arguments_columns" columns of table "dr_question_dependencies"
"""
enum dr_question_dependencies_select_column_dr_question_dependencies_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
question_option_is_equal
}

"""
input type for updating data in table "dr_question_dependencies"
"""
input dr_question_dependencies_set_input {
  created_at: timestamptz
  id: uuid
  question_id: uuid
  question_option_id: uuid
  question_option_is_equal: Boolean
  target_question_id: uuid
}

"""
Streaming cursor of the table "dr_question_dependencies"
"""
input dr_question_dependencies_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_question_dependencies_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_question_dependencies_stream_cursor_value_input {
  created_at: timestamptz
  id: uuid
  question_id: uuid
  question_option_id: uuid
  question_option_is_equal: Boolean
  target_question_id: uuid
}

"""
update columns of table "dr_question_dependencies"
"""
enum dr_question_dependencies_update_column {
  """column name"""
created_at
  """column name"""
id
  """column name"""
question_id
  """column name"""
question_option_id
  """column name"""
question_option_is_equal
  """column name"""
target_question_id
}

input dr_question_dependencies_updates {
  """sets the columns of the filtered rows to the given values"""
_set: dr_question_dependencies_set_input
  where: dr_question_dependencies_bool_exp! 
}

"""
columns and relationships of "dr_question_options"
"""
type dr_question_options {
   created_at: timestamptz! 
   display_order: Int! 
   hidden: Boolean! 
   id: uuid! 
  """An object relationship"""
 question: dr_questions! 
   question_id: uuid! 
   updated_at: timestamptz! 
   value: String! 
}

"""
aggregated selection of "dr_question_options"
"""
type dr_question_options_aggregate {
   aggregate: dr_question_options_aggregate_fields
   nodes: [dr_question_options! ]! 
}

input dr_question_options_aggregate_bool_exp {
  bool_and: dr_question_options_aggregate_bool_exp_bool_and
  bool_or: dr_question_options_aggregate_bool_exp_bool_or
  count: dr_question_options_aggregate_bool_exp_count
}

input dr_question_options_aggregate_bool_exp_bool_and {
  arguments: dr_question_options_select_column_dr_question_options_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: dr_question_options_bool_exp
  predicate: Boolean_comparison_exp! 
}

input dr_question_options_aggregate_bool_exp_bool_or {
  arguments: dr_question_options_select_column_dr_question_options_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: dr_question_options_bool_exp
  predicate: Boolean_comparison_exp! 
}

input dr_question_options_aggregate_bool_exp_count {
  arguments: [dr_question_options_select_column! ]
  distinct: Boolean
  filter: dr_question_options_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_question_options"
"""
type dr_question_options_aggregate_fields {
   avg: dr_question_options_avg_fields
   count(columns: [dr_question_options_select_column! ], distinct: Boolean): Int! 
   max: dr_question_options_max_fields
   min: dr_question_options_min_fields
   stddev: dr_question_options_stddev_fields
   stddev_pop: dr_question_options_stddev_pop_fields
   stddev_samp: dr_question_options_stddev_samp_fields
   sum: dr_question_options_sum_fields
   var_pop: dr_question_options_var_pop_fields
   var_samp: dr_question_options_var_samp_fields
   variance: dr_question_options_variance_fields
}

"""
order by aggregate values of table "dr_question_options"
"""
input dr_question_options_aggregate_order_by {
  avg: dr_question_options_avg_order_by
  count: order_by
  max: dr_question_options_max_order_by
  min: dr_question_options_min_order_by
  stddev: dr_question_options_stddev_order_by
  stddev_pop: dr_question_options_stddev_pop_order_by
  stddev_samp: dr_question_options_stddev_samp_order_by
  sum: dr_question_options_sum_order_by
  var_pop: dr_question_options_var_pop_order_by
  var_samp: dr_question_options_var_samp_order_by
  variance: dr_question_options_variance_order_by
}

"""
input type for inserting array relation for remote table "dr_question_options"
"""
input dr_question_options_arr_rel_insert_input {
  data: [dr_question_options_insert_input! ]! 
  """upsert condition"""
on_conflict: dr_question_options_on_conflict
}

"""aggregate avg on columns"""
type dr_question_options_avg_fields {
   display_order: Float
}

"""
order by avg() on columns of table "dr_question_options"
"""
input dr_question_options_avg_order_by {
  display_order: order_by
}

"""
Boolean expression to filter rows from the table "dr_question_options". All fields are combined with a logical 'AND'.
"""
input dr_question_options_bool_exp {
  _and: [dr_question_options_bool_exp! ]
  _not: dr_question_options_bool_exp
  _or: [dr_question_options_bool_exp! ]
  created_at: timestamptz_comparison_exp
  display_order: Int_comparison_exp
  hidden: Boolean_comparison_exp
  id: uuid_comparison_exp
  question: dr_questions_bool_exp
  question_id: uuid_comparison_exp
  updated_at: timestamptz_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "dr_question_options"
"""
enum dr_question_options_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_question_options_pkey
}

"""
input type for incrementing numeric columns in table "dr_question_options"
"""
input dr_question_options_inc_input {
  display_order: Int
}

"""
input type for inserting data into table "dr_question_options"
"""
input dr_question_options_insert_input {
  created_at: timestamptz! 
  display_order: Int! 
  hidden: Boolean! 
  id: uuid! 
  question: dr_questions_obj_rel_insert_input
  question_id: uuid! 
  updated_at: timestamptz! 
  value: String! 
}

"""aggregate max on columns"""
type dr_question_options_max_fields {
   created_at: timestamptz
   display_order: Int
   id: uuid
   question_id: uuid
   updated_at: timestamptz
   value: String
}

"""
order by max() on columns of table "dr_question_options"
"""
input dr_question_options_max_order_by {
  created_at: order_by
  display_order: order_by
  id: order_by
  question_id: order_by
  updated_at: order_by
  value: order_by
}

"""aggregate min on columns"""
type dr_question_options_min_fields {
   created_at: timestamptz
   display_order: Int
   id: uuid
   question_id: uuid
   updated_at: timestamptz
   value: String
}

"""
order by min() on columns of table "dr_question_options"
"""
input dr_question_options_min_order_by {
  created_at: order_by
  display_order: order_by
  id: order_by
  question_id: order_by
  updated_at: order_by
  value: order_by
}

"""
response of any mutation on the table "dr_question_options"
"""
type dr_question_options_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_question_options! ]! 
}

"""
input type for inserting object relation for remote table "dr_question_options"
"""
input dr_question_options_obj_rel_insert_input {
  data: dr_question_options_insert_input! 
  """upsert condition"""
on_conflict: dr_question_options_on_conflict
}

"""
on_conflict condition type for table "dr_question_options"
"""
input dr_question_options_on_conflict {
  constraint: dr_question_options_constraint! 
  update_columns: [dr_question_options_update_column! ]! 
  where: dr_question_options_bool_exp
}

"""Ordering options when selecting data from "dr_question_options"."""
input dr_question_options_order_by {
  created_at: order_by
  display_order: order_by
  hidden: order_by
  id: order_by
  question: dr_questions_order_by
  question_id: order_by
  updated_at: order_by
  value: order_by
}

"""primary key columns input for table: dr_question_options"""
input dr_question_options_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_question_options"
"""
enum dr_question_options_select_column {
  """column name"""
created_at
  """column name"""
display_order
  """column name"""
hidden
  """column name"""
id
  """column name"""
question_id
  """column name"""
updated_at
  """column name"""
value
}

"""
select "dr_question_options_aggregate_bool_exp_bool_and_arguments_columns" columns of table "dr_question_options"
"""
enum dr_question_options_select_column_dr_question_options_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
hidden
}

"""
select "dr_question_options_aggregate_bool_exp_bool_or_arguments_columns" columns of table "dr_question_options"
"""
enum dr_question_options_select_column_dr_question_options_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
hidden
}

"""
input type for updating data in table "dr_question_options"
"""
input dr_question_options_set_input {
  created_at: timestamptz
  display_order: Int
  hidden: Boolean
  id: uuid
  question_id: uuid
  updated_at: timestamptz
  value: String
}

"""aggregate stddev on columns"""
type dr_question_options_stddev_fields {
   display_order: Float
}

"""
order by stddev() on columns of table "dr_question_options"
"""
input dr_question_options_stddev_order_by {
  display_order: order_by
}

"""aggregate stddev_pop on columns"""
type dr_question_options_stddev_pop_fields {
   display_order: Float
}

"""
order by stddev_pop() on columns of table "dr_question_options"
"""
input dr_question_options_stddev_pop_order_by {
  display_order: order_by
}

"""aggregate stddev_samp on columns"""
type dr_question_options_stddev_samp_fields {
   display_order: Float
}

"""
order by stddev_samp() on columns of table "dr_question_options"
"""
input dr_question_options_stddev_samp_order_by {
  display_order: order_by
}

"""
Streaming cursor of the table "dr_question_options"
"""
input dr_question_options_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_question_options_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_question_options_stream_cursor_value_input {
  created_at: timestamptz
  display_order: Int
  hidden: Boolean
  id: uuid
  question_id: uuid
  updated_at: timestamptz
  value: String
}

"""aggregate sum on columns"""
type dr_question_options_sum_fields {
   display_order: Int
}

"""
order by sum() on columns of table "dr_question_options"
"""
input dr_question_options_sum_order_by {
  display_order: order_by
}

"""
update columns of table "dr_question_options"
"""
enum dr_question_options_update_column {
  """column name"""
created_at
  """column name"""
display_order
  """column name"""
hidden
  """column name"""
id
  """column name"""
question_id
  """column name"""
updated_at
  """column name"""
value
}

input dr_question_options_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_question_options_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_question_options_set_input
  where: dr_question_options_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_question_options_var_pop_fields {
   display_order: Float
}

"""
order by var_pop() on columns of table "dr_question_options"
"""
input dr_question_options_var_pop_order_by {
  display_order: order_by
}

"""aggregate var_samp on columns"""
type dr_question_options_var_samp_fields {
   display_order: Float
}

"""
order by var_samp() on columns of table "dr_question_options"
"""
input dr_question_options_var_samp_order_by {
  display_order: order_by
}

"""aggregate variance on columns"""
type dr_question_options_variance_fields {
   display_order: Float
}

"""
order by variance() on columns of table "dr_question_options"
"""
input dr_question_options_variance_order_by {
  display_order: order_by
}

"""
columns and relationships of "dr_question_types"
"""
type dr_question_types {
   comment: String
   value: String! 
}

"""
aggregated selection of "dr_question_types"
"""
type dr_question_types_aggregate {
   aggregate: dr_question_types_aggregate_fields
   nodes: [dr_question_types! ]! 
}

"""
aggregate fields of "dr_question_types"
"""
type dr_question_types_aggregate_fields {
   count(columns: [dr_question_types_select_column! ], distinct: Boolean): Int! 
   max: dr_question_types_max_fields
   min: dr_question_types_min_fields
}

"""
Boolean expression to filter rows from the table "dr_question_types". All fields are combined with a logical 'AND'.
"""
input dr_question_types_bool_exp {
  _and: [dr_question_types_bool_exp! ]
  _not: dr_question_types_bool_exp
  _or: [dr_question_types_bool_exp! ]
  comment: String_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "dr_question_types"
"""
enum dr_question_types_constraint {
  """
  unique or primary key constraint on columns "value"
  """
dr_question_types_pkey
}

enum dr_question_types_enum {
  checkbox
  dropdown
  file_upload
  long_text
  phone_number
  radio
  short_text
  text_block
}

"""
Boolean expression to compare columns of type "dr_question_types_enum". All fields are combined with logical 'AND'.
"""
input dr_question_types_enum_comparison_exp {
  _eq: dr_question_types_enum
  _in: [dr_question_types_enum! ]
  _is_null: Boolean
  _neq: dr_question_types_enum
  _nin: [dr_question_types_enum! ]
}

"""
input type for inserting data into table "dr_question_types"
"""
input dr_question_types_insert_input {
  comment: String
  value: String! 
}

"""aggregate max on columns"""
type dr_question_types_max_fields {
   comment: String
   value: String
}

"""aggregate min on columns"""
type dr_question_types_min_fields {
   comment: String
   value: String
}

"""
response of any mutation on the table "dr_question_types"
"""
type dr_question_types_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_question_types! ]! 
}

"""
on_conflict condition type for table "dr_question_types"
"""
input dr_question_types_on_conflict {
  constraint: dr_question_types_constraint! 
  update_columns: [dr_question_types_update_column! ]! 
  where: dr_question_types_bool_exp
}

"""Ordering options when selecting data from "dr_question_types"."""
input dr_question_types_order_by {
  comment: order_by
  value: order_by
}

"""primary key columns input for table: dr_question_types"""
input dr_question_types_pk_columns_input {
  value: String! 
}

"""
select columns of table "dr_question_types"
"""
enum dr_question_types_select_column {
  """column name"""
comment
  """column name"""
value
}

"""
input type for updating data in table "dr_question_types"
"""
input dr_question_types_set_input {
  comment: String
  value: String
}

"""
Streaming cursor of the table "dr_question_types"
"""
input dr_question_types_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_question_types_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_question_types_stream_cursor_value_input {
  comment: String
  value: String
}

"""
update columns of table "dr_question_types"
"""
enum dr_question_types_update_column {
  """column name"""
comment
  """column name"""
value
}

input dr_question_types_updates {
  """sets the columns of the filtered rows to the given values"""
_set: dr_question_types_set_input
  where: dr_question_types_bool_exp! 
}

"""
columns and relationships of "dr_questions"
"""
type dr_questions {
   archived: Boolean! 
   character_limit: Int
   created_at: timestamptz! 
   dependency_order: Int! 
  """An array relationship"""
 dependency_rules("""distinct select on columns"""
distinct_on: [dr_question_dependencies_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_question_dependencies_order_by! ], """filter the rows returned"""
where: dr_question_dependencies_bool_exp): [dr_question_dependencies! ]! 
  """An aggregate relationship"""
 dependency_rules_aggregate("""distinct select on columns"""
distinct_on: [dr_question_dependencies_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_question_dependencies_order_by! ], """filter the rows returned"""
where: dr_question_dependencies_bool_exp): dr_question_dependencies_aggregate! 
   depends_on: uuid
   description: String
   display_order: Int! 
   event_id: Int! 
   id: uuid! 
  """An object relationship"""
 parent_question: dr_questions
   question: String! 
  """An array relationship"""
 question_addons("""distinct select on columns"""
distinct_on: [dr_addon_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_questions_order_by! ], """filter the rows returned"""
where: dr_addon_questions_bool_exp): [dr_addon_questions! ]! 
  """An aggregate relationship"""
 question_addons_aggregate("""distinct select on columns"""
distinct_on: [dr_addon_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_questions_order_by! ], """filter the rows returned"""
where: dr_addon_questions_bool_exp): dr_addon_questions_aggregate! 
  """An array relationship"""
 question_groups("""distinct select on columns"""
distinct_on: [dr_group_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_group_questions_order_by! ], """filter the rows returned"""
where: dr_group_questions_bool_exp): [dr_group_questions! ]! 
  """An aggregate relationship"""
 question_groups_aggregate("""distinct select on columns"""
distinct_on: [dr_group_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_group_questions_order_by! ], """filter the rows returned"""
where: dr_group_questions_bool_exp): dr_group_questions_aggregate! 
  """An array relationship"""
 question_options("""distinct select on columns"""
distinct_on: [dr_question_options_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_question_options_order_by! ], """filter the rows returned"""
where: dr_question_options_bool_exp): [dr_question_options! ]! 
  """An aggregate relationship"""
 question_options_aggregate("""distinct select on columns"""
distinct_on: [dr_question_options_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_question_options_order_by! ], """filter the rows returned"""
where: dr_question_options_bool_exp): dr_question_options_aggregate! 
   question_type: dr_question_types_enum! 
   required: Boolean! 
  """An array relationship"""
 responses("""distinct select on columns"""
distinct_on: [dr_attendee_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_question_responses_order_by! ], """filter the rows returned"""
where: dr_attendee_question_responses_bool_exp): [dr_attendee_question_responses! ]! 
  """An aggregate relationship"""
 responses_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_question_responses_order_by! ], """filter the rows returned"""
where: dr_attendee_question_responses_bool_exp): dr_attendee_question_responses_aggregate! 
   rich_text: String
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_questions"
"""
type dr_questions_aggregate {
   aggregate: dr_questions_aggregate_fields
   nodes: [dr_questions! ]! 
}

"""
aggregate fields of "dr_questions"
"""
type dr_questions_aggregate_fields {
   avg: dr_questions_avg_fields
   count(columns: [dr_questions_select_column! ], distinct: Boolean): Int! 
   max: dr_questions_max_fields
   min: dr_questions_min_fields
   stddev: dr_questions_stddev_fields
   stddev_pop: dr_questions_stddev_pop_fields
   stddev_samp: dr_questions_stddev_samp_fields
   sum: dr_questions_sum_fields
   var_pop: dr_questions_var_pop_fields
   var_samp: dr_questions_var_samp_fields
   variance: dr_questions_variance_fields
}

"""aggregate avg on columns"""
type dr_questions_avg_fields {
   character_limit: Float
   dependency_order: Float
   display_order: Float
   event_id: Float
}

"""
Boolean expression to filter rows from the table "dr_questions". All fields are combined with a logical 'AND'.
"""
input dr_questions_bool_exp {
  _and: [dr_questions_bool_exp! ]
  _not: dr_questions_bool_exp
  _or: [dr_questions_bool_exp! ]
  archived: Boolean_comparison_exp
  character_limit: Int_comparison_exp
  created_at: timestamptz_comparison_exp
  dependency_order: Int_comparison_exp
  dependency_rules: dr_question_dependencies_bool_exp
  dependency_rules_aggregate: dr_question_dependencies_aggregate_bool_exp
  depends_on: uuid_comparison_exp
  description: String_comparison_exp
  display_order: Int_comparison_exp
  event_id: Int_comparison_exp
  id: uuid_comparison_exp
  parent_question: dr_questions_bool_exp
  question: String_comparison_exp
  question_addons: dr_addon_questions_bool_exp
  question_addons_aggregate: dr_addon_questions_aggregate_bool_exp
  question_groups: dr_group_questions_bool_exp
  question_groups_aggregate: dr_group_questions_aggregate_bool_exp
  question_options: dr_question_options_bool_exp
  question_options_aggregate: dr_question_options_aggregate_bool_exp
  question_type: dr_question_types_enum_comparison_exp
  required: Boolean_comparison_exp
  responses: dr_attendee_question_responses_bool_exp
  responses_aggregate: dr_attendee_question_responses_aggregate_bool_exp
  rich_text: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_questions"
"""
enum dr_questions_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_questions_pkey
}

"""
input type for incrementing numeric columns in table "dr_questions"
"""
input dr_questions_inc_input {
  character_limit: Int
  dependency_order: Int
  display_order: Int
  event_id: Int
}

"""
input type for inserting data into table "dr_questions"
"""
input dr_questions_insert_input {
  archived: Boolean! 
  character_limit: Int
  created_at: timestamptz! 
  dependency_order: Int! 
  dependency_rules: dr_question_dependencies_arr_rel_insert_input
  depends_on: uuid
  description: String
  display_order: Int! 
  event_id: Int! 
  id: uuid! 
  parent_question: dr_questions_obj_rel_insert_input
  question: String! 
  question_addons: dr_addon_questions_arr_rel_insert_input
  question_groups: dr_group_questions_arr_rel_insert_input
  question_options: dr_question_options_arr_rel_insert_input
  question_type: dr_question_types_enum! 
  required: Boolean! 
  responses: dr_attendee_question_responses_arr_rel_insert_input
  rich_text: String
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_questions_max_fields {
   character_limit: Int
   created_at: timestamptz
   dependency_order: Int
   depends_on: uuid
   description: String
   display_order: Int
   event_id: Int
   id: uuid
   question: String
   rich_text: String
   updated_at: timestamptz
}

"""aggregate min on columns"""
type dr_questions_min_fields {
   character_limit: Int
   created_at: timestamptz
   dependency_order: Int
   depends_on: uuid
   description: String
   display_order: Int
   event_id: Int
   id: uuid
   question: String
   rich_text: String
   updated_at: timestamptz
}

"""
response of any mutation on the table "dr_questions"
"""
type dr_questions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_questions! ]! 
}

"""
input type for inserting object relation for remote table "dr_questions"
"""
input dr_questions_obj_rel_insert_input {
  data: dr_questions_insert_input! 
  """upsert condition"""
on_conflict: dr_questions_on_conflict
}

"""
on_conflict condition type for table "dr_questions"
"""
input dr_questions_on_conflict {
  constraint: dr_questions_constraint! 
  update_columns: [dr_questions_update_column! ]! 
  where: dr_questions_bool_exp
}

"""Ordering options when selecting data from "dr_questions"."""
input dr_questions_order_by {
  archived: order_by
  character_limit: order_by
  created_at: order_by
  dependency_order: order_by
  dependency_rules_aggregate: dr_question_dependencies_aggregate_order_by
  depends_on: order_by
  description: order_by
  display_order: order_by
  event_id: order_by
  id: order_by
  parent_question: dr_questions_order_by
  question: order_by
  question_addons_aggregate: dr_addon_questions_aggregate_order_by
  question_groups_aggregate: dr_group_questions_aggregate_order_by
  question_options_aggregate: dr_question_options_aggregate_order_by
  question_type: order_by
  required: order_by
  responses_aggregate: dr_attendee_question_responses_aggregate_order_by
  rich_text: order_by
  updated_at: order_by
}

"""primary key columns input for table: dr_questions"""
input dr_questions_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_questions"
"""
enum dr_questions_select_column {
  """column name"""
archived
  """column name"""
character_limit
  """column name"""
created_at
  """column name"""
dependency_order
  """column name"""
depends_on
  """column name"""
description
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
id
  """column name"""
question
  """column name"""
question_type
  """column name"""
required
  """column name"""
rich_text
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_questions"
"""
input dr_questions_set_input {
  archived: Boolean
  character_limit: Int
  created_at: timestamptz
  dependency_order: Int
  depends_on: uuid
  description: String
  display_order: Int
  event_id: Int
  id: uuid
  question: String
  question_type: dr_question_types_enum
  required: Boolean
  rich_text: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type dr_questions_stddev_fields {
   character_limit: Float
   dependency_order: Float
   display_order: Float
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type dr_questions_stddev_pop_fields {
   character_limit: Float
   dependency_order: Float
   display_order: Float
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type dr_questions_stddev_samp_fields {
   character_limit: Float
   dependency_order: Float
   display_order: Float
   event_id: Float
}

"""
Streaming cursor of the table "dr_questions"
"""
input dr_questions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_questions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_questions_stream_cursor_value_input {
  archived: Boolean
  character_limit: Int
  created_at: timestamptz
  dependency_order: Int
  depends_on: uuid
  description: String
  display_order: Int
  event_id: Int
  id: uuid
  question: String
  question_type: dr_question_types_enum
  required: Boolean
  rich_text: String
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type dr_questions_sum_fields {
   character_limit: Int
   dependency_order: Int
   display_order: Int
   event_id: Int
}

"""
update columns of table "dr_questions"
"""
enum dr_questions_update_column {
  """column name"""
archived
  """column name"""
character_limit
  """column name"""
created_at
  """column name"""
dependency_order
  """column name"""
depends_on
  """column name"""
description
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
id
  """column name"""
question
  """column name"""
question_type
  """column name"""
required
  """column name"""
rich_text
  """column name"""
updated_at
}

input dr_questions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_questions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_questions_set_input
  where: dr_questions_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_questions_var_pop_fields {
   character_limit: Float
   dependency_order: Float
   display_order: Float
   event_id: Float
}

"""aggregate var_samp on columns"""
type dr_questions_var_samp_fields {
   character_limit: Float
   dependency_order: Float
   display_order: Float
   event_id: Float
}

"""aggregate variance on columns"""
type dr_questions_variance_fields {
   character_limit: Float
   dependency_order: Float
   display_order: Float
   event_id: Float
}

"""
columns and relationships of "dr_service_fee_charges"
"""
type dr_service_fee_charges {
   amount: Int! 
  """An object relationship"""
 authorised_by: users
   created_at: timestamptz! 
   currency: dr_currencies_enum! 
  """An object relationship"""
 event: events
   event_id: Int! 
   id: uuid! 
  """The user id of the SOAA that authorised the charge"""
 user_id: Int
}

"""
aggregated selection of "dr_service_fee_charges"
"""
type dr_service_fee_charges_aggregate {
   aggregate: dr_service_fee_charges_aggregate_fields
   nodes: [dr_service_fee_charges! ]! 
}

"""
aggregate fields of "dr_service_fee_charges"
"""
type dr_service_fee_charges_aggregate_fields {
   avg: dr_service_fee_charges_avg_fields
   count(columns: [dr_service_fee_charges_select_column! ], distinct: Boolean): Int! 
   max: dr_service_fee_charges_max_fields
   min: dr_service_fee_charges_min_fields
   stddev: dr_service_fee_charges_stddev_fields
   stddev_pop: dr_service_fee_charges_stddev_pop_fields
   stddev_samp: dr_service_fee_charges_stddev_samp_fields
   sum: dr_service_fee_charges_sum_fields
   var_pop: dr_service_fee_charges_var_pop_fields
   var_samp: dr_service_fee_charges_var_samp_fields
   variance: dr_service_fee_charges_variance_fields
}

"""aggregate avg on columns"""
type dr_service_fee_charges_avg_fields {
   amount: Float
   event_id: Float
  """The user id of the SOAA that authorised the charge"""
 user_id: Float
}

"""
Boolean expression to filter rows from the table "dr_service_fee_charges". All fields are combined with a logical 'AND'.
"""
input dr_service_fee_charges_bool_exp {
  _and: [dr_service_fee_charges_bool_exp! ]
  _not: dr_service_fee_charges_bool_exp
  _or: [dr_service_fee_charges_bool_exp! ]
  amount: Int_comparison_exp
  authorised_by: users_bool_exp
  created_at: timestamptz_comparison_exp
  currency: dr_currencies_enum_comparison_exp
  event: events_bool_exp
  event_id: Int_comparison_exp
  id: uuid_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "dr_service_fee_charges"
"""
enum dr_service_fee_charges_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_service_fee_charges_pkey
}

"""
input type for incrementing numeric columns in table "dr_service_fee_charges"
"""
input dr_service_fee_charges_inc_input {
  amount: Int
  event_id: Int
  """The user id of the SOAA that authorised the charge"""
user_id: Int
}

"""
input type for inserting data into table "dr_service_fee_charges"
"""
input dr_service_fee_charges_insert_input {
  amount: Int! 
  authorised_by: users_obj_rel_insert_input
  created_at: timestamptz! 
  currency: dr_currencies_enum! 
  event: events_obj_rel_insert_input
  event_id: Int! 
  id: uuid! 
  """The user id of the SOAA that authorised the charge"""
user_id: Int
}

"""aggregate max on columns"""
type dr_service_fee_charges_max_fields {
   amount: Int
   created_at: timestamptz
   event_id: Int
   id: uuid
  """The user id of the SOAA that authorised the charge"""
 user_id: Int
}

"""aggregate min on columns"""
type dr_service_fee_charges_min_fields {
   amount: Int
   created_at: timestamptz
   event_id: Int
   id: uuid
  """The user id of the SOAA that authorised the charge"""
 user_id: Int
}

"""
response of any mutation on the table "dr_service_fee_charges"
"""
type dr_service_fee_charges_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_service_fee_charges! ]! 
}

"""
on_conflict condition type for table "dr_service_fee_charges"
"""
input dr_service_fee_charges_on_conflict {
  constraint: dr_service_fee_charges_constraint! 
  update_columns: [dr_service_fee_charges_update_column! ]! 
  where: dr_service_fee_charges_bool_exp
}

"""Ordering options when selecting data from "dr_service_fee_charges"."""
input dr_service_fee_charges_order_by {
  amount: order_by
  authorised_by: users_order_by
  created_at: order_by
  currency: order_by
  event: events_order_by
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""primary key columns input for table: dr_service_fee_charges"""
input dr_service_fee_charges_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_service_fee_charges"
"""
enum dr_service_fee_charges_select_column {
  """column name"""
amount
  """column name"""
created_at
  """column name"""
currency
  """column name"""
event_id
  """column name"""
id
  """column name"""
user_id
}

"""
input type for updating data in table "dr_service_fee_charges"
"""
input dr_service_fee_charges_set_input {
  amount: Int
  created_at: timestamptz
  currency: dr_currencies_enum
  event_id: Int
  id: uuid
  """The user id of the SOAA that authorised the charge"""
user_id: Int
}

"""aggregate stddev on columns"""
type dr_service_fee_charges_stddev_fields {
   amount: Float
   event_id: Float
  """The user id of the SOAA that authorised the charge"""
 user_id: Float
}

"""aggregate stddev_pop on columns"""
type dr_service_fee_charges_stddev_pop_fields {
   amount: Float
   event_id: Float
  """The user id of the SOAA that authorised the charge"""
 user_id: Float
}

"""aggregate stddev_samp on columns"""
type dr_service_fee_charges_stddev_samp_fields {
   amount: Float
   event_id: Float
  """The user id of the SOAA that authorised the charge"""
 user_id: Float
}

"""
Streaming cursor of the table "dr_service_fee_charges"
"""
input dr_service_fee_charges_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_service_fee_charges_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_service_fee_charges_stream_cursor_value_input {
  amount: Int
  created_at: timestamptz
  currency: dr_currencies_enum
  event_id: Int
  id: uuid
  """The user id of the SOAA that authorised the charge"""
user_id: Int
}

"""aggregate sum on columns"""
type dr_service_fee_charges_sum_fields {
   amount: Int
   event_id: Int
  """The user id of the SOAA that authorised the charge"""
 user_id: Int
}

"""
update columns of table "dr_service_fee_charges"
"""
enum dr_service_fee_charges_update_column {
  """column name"""
amount
  """column name"""
created_at
  """column name"""
currency
  """column name"""
event_id
  """column name"""
id
  """column name"""
user_id
}

input dr_service_fee_charges_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_service_fee_charges_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_service_fee_charges_set_input
  where: dr_service_fee_charges_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_service_fee_charges_var_pop_fields {
   amount: Float
   event_id: Float
  """The user id of the SOAA that authorised the charge"""
 user_id: Float
}

"""aggregate var_samp on columns"""
type dr_service_fee_charges_var_samp_fields {
   amount: Float
   event_id: Float
  """The user id of the SOAA that authorised the charge"""
 user_id: Float
}

"""aggregate variance on columns"""
type dr_service_fee_charges_variance_fields {
   amount: Float
   event_id: Float
  """The user id of the SOAA that authorised the charge"""
 user_id: Float
}

"""
columns and relationships of "dr_service_fees_grouped"
"""
type dr_service_fees_grouped {
   currency: String
   date_block: date
  """An object relationship"""
 event: events
   event_id: Int
   service_fee_paid: Int
   service_fee_settled: Boolean
   was_stripe: Boolean
}

"""
aggregated selection of "dr_service_fees_grouped"
"""
type dr_service_fees_grouped_aggregate {
   aggregate: dr_service_fees_grouped_aggregate_fields
   nodes: [dr_service_fees_grouped! ]! 
}

"""
aggregate fields of "dr_service_fees_grouped"
"""
type dr_service_fees_grouped_aggregate_fields {
   avg: dr_service_fees_grouped_avg_fields
   count(columns: [dr_service_fees_grouped_select_column! ], distinct: Boolean): Int! 
   max: dr_service_fees_grouped_max_fields
   min: dr_service_fees_grouped_min_fields
   stddev: dr_service_fees_grouped_stddev_fields
   stddev_pop: dr_service_fees_grouped_stddev_pop_fields
   stddev_samp: dr_service_fees_grouped_stddev_samp_fields
   sum: dr_service_fees_grouped_sum_fields
   var_pop: dr_service_fees_grouped_var_pop_fields
   var_samp: dr_service_fees_grouped_var_samp_fields
   variance: dr_service_fees_grouped_variance_fields
}

"""aggregate avg on columns"""
type dr_service_fees_grouped_avg_fields {
   event_id: Float
   service_fee_paid: Float
}

"""
Boolean expression to filter rows from the table "dr_service_fees_grouped". All fields are combined with a logical 'AND'.
"""
input dr_service_fees_grouped_bool_exp {
  _and: [dr_service_fees_grouped_bool_exp! ]
  _not: dr_service_fees_grouped_bool_exp
  _or: [dr_service_fees_grouped_bool_exp! ]
  currency: String_comparison_exp
  date_block: date_comparison_exp
  event: events_bool_exp
  event_id: Int_comparison_exp
  service_fee_paid: Int_comparison_exp
  service_fee_settled: Boolean_comparison_exp
  was_stripe: Boolean_comparison_exp
}

"""aggregate max on columns"""
type dr_service_fees_grouped_max_fields {
   currency: String
   date_block: date
   event_id: Int
   service_fee_paid: Int
}

"""aggregate min on columns"""
type dr_service_fees_grouped_min_fields {
   currency: String
   date_block: date
   event_id: Int
   service_fee_paid: Int
}

"""Ordering options when selecting data from "dr_service_fees_grouped"."""
input dr_service_fees_grouped_order_by {
  currency: order_by
  date_block: order_by
  event: events_order_by
  event_id: order_by
  service_fee_paid: order_by
  service_fee_settled: order_by
  was_stripe: order_by
}

"""
select columns of table "dr_service_fees_grouped"
"""
enum dr_service_fees_grouped_select_column {
  """column name"""
currency
  """column name"""
date_block
  """column name"""
event_id
  """column name"""
service_fee_paid
  """column name"""
service_fee_settled
  """column name"""
was_stripe
}

"""aggregate stddev on columns"""
type dr_service_fees_grouped_stddev_fields {
   event_id: Float
   service_fee_paid: Float
}

"""aggregate stddev_pop on columns"""
type dr_service_fees_grouped_stddev_pop_fields {
   event_id: Float
   service_fee_paid: Float
}

"""aggregate stddev_samp on columns"""
type dr_service_fees_grouped_stddev_samp_fields {
   event_id: Float
   service_fee_paid: Float
}

"""
Streaming cursor of the table "dr_service_fees_grouped"
"""
input dr_service_fees_grouped_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_service_fees_grouped_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_service_fees_grouped_stream_cursor_value_input {
  currency: String
  date_block: date
  event_id: Int
  service_fee_paid: Int
  service_fee_settled: Boolean
  was_stripe: Boolean
}

"""aggregate sum on columns"""
type dr_service_fees_grouped_sum_fields {
   event_id: Int
   service_fee_paid: Int
}

"""aggregate var_pop on columns"""
type dr_service_fees_grouped_var_pop_fields {
   event_id: Float
   service_fee_paid: Float
}

"""aggregate var_samp on columns"""
type dr_service_fees_grouped_var_samp_fields {
   event_id: Float
   service_fee_paid: Float
}

"""aggregate variance on columns"""
type dr_service_fees_grouped_variance_fields {
   event_id: Float
   service_fee_paid: Float
}

"""
columns and relationships of "dr_stripe_delayed_payments_customer"
"""
type dr_stripe_delayed_payments_customer {
   added_by: Int! 
   brand: String! 
   created_at: timestamptz! 
   customer: String! 
   event_id: Int! 
   expiry_month: Int! 
   expiry_year: Int! 
   id: uuid! 
   last4: String! 
   payment_method: String! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_stripe_delayed_payments_customer"
"""
type dr_stripe_delayed_payments_customer_aggregate {
   aggregate: dr_stripe_delayed_payments_customer_aggregate_fields
   nodes: [dr_stripe_delayed_payments_customer! ]! 
}

"""
aggregate fields of "dr_stripe_delayed_payments_customer"
"""
type dr_stripe_delayed_payments_customer_aggregate_fields {
   avg: dr_stripe_delayed_payments_customer_avg_fields
   count(columns: [dr_stripe_delayed_payments_customer_select_column! ], distinct: Boolean): Int! 
   max: dr_stripe_delayed_payments_customer_max_fields
   min: dr_stripe_delayed_payments_customer_min_fields
   stddev: dr_stripe_delayed_payments_customer_stddev_fields
   stddev_pop: dr_stripe_delayed_payments_customer_stddev_pop_fields
   stddev_samp: dr_stripe_delayed_payments_customer_stddev_samp_fields
   sum: dr_stripe_delayed_payments_customer_sum_fields
   var_pop: dr_stripe_delayed_payments_customer_var_pop_fields
   var_samp: dr_stripe_delayed_payments_customer_var_samp_fields
   variance: dr_stripe_delayed_payments_customer_variance_fields
}

"""aggregate avg on columns"""
type dr_stripe_delayed_payments_customer_avg_fields {
   added_by: Float
   event_id: Float
   expiry_month: Float
   expiry_year: Float
}

"""
Boolean expression to filter rows from the table "dr_stripe_delayed_payments_customer". All fields are combined with a logical 'AND'.
"""
input dr_stripe_delayed_payments_customer_bool_exp {
  _and: [dr_stripe_delayed_payments_customer_bool_exp! ]
  _not: dr_stripe_delayed_payments_customer_bool_exp
  _or: [dr_stripe_delayed_payments_customer_bool_exp! ]
  added_by: Int_comparison_exp
  brand: String_comparison_exp
  created_at: timestamptz_comparison_exp
  customer: String_comparison_exp
  event_id: Int_comparison_exp
  expiry_month: Int_comparison_exp
  expiry_year: Int_comparison_exp
  id: uuid_comparison_exp
  last4: String_comparison_exp
  payment_method: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_stripe_delayed_payments_customer"
"""
enum dr_stripe_delayed_payments_customer_constraint {
  """
  unique or primary key constraint on columns "event_id"
  """
dr_delayed_payments_stripe_customer_event_id_key
  """
  unique or primary key constraint on columns "id"
  """
dr_delayed_payments_stripe_customer_pkey
}

"""
input type for incrementing numeric columns in table "dr_stripe_delayed_payments_customer"
"""
input dr_stripe_delayed_payments_customer_inc_input {
  added_by: Int
  event_id: Int
  expiry_month: Int
  expiry_year: Int
}

"""
input type for inserting data into table "dr_stripe_delayed_payments_customer"
"""
input dr_stripe_delayed_payments_customer_insert_input {
  added_by: Int! 
  brand: String! 
  created_at: timestamptz! 
  customer: String! 
  event_id: Int! 
  expiry_month: Int! 
  expiry_year: Int! 
  id: uuid! 
  last4: String! 
  payment_method: String! 
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_stripe_delayed_payments_customer_max_fields {
   added_by: Int
   brand: String
   created_at: timestamptz
   customer: String
   event_id: Int
   expiry_month: Int
   expiry_year: Int
   id: uuid
   last4: String
   payment_method: String
   updated_at: timestamptz
}

"""aggregate min on columns"""
type dr_stripe_delayed_payments_customer_min_fields {
   added_by: Int
   brand: String
   created_at: timestamptz
   customer: String
   event_id: Int
   expiry_month: Int
   expiry_year: Int
   id: uuid
   last4: String
   payment_method: String
   updated_at: timestamptz
}

"""
response of any mutation on the table "dr_stripe_delayed_payments_customer"
"""
type dr_stripe_delayed_payments_customer_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_stripe_delayed_payments_customer! ]! 
}

"""
on_conflict condition type for table "dr_stripe_delayed_payments_customer"
"""
input dr_stripe_delayed_payments_customer_on_conflict {
  constraint: dr_stripe_delayed_payments_customer_constraint! 
  update_columns: [dr_stripe_delayed_payments_customer_update_column! ]! 
  where: dr_stripe_delayed_payments_customer_bool_exp
}

"""
Ordering options when selecting data from "dr_stripe_delayed_payments_customer".
"""
input dr_stripe_delayed_payments_customer_order_by {
  added_by: order_by
  brand: order_by
  created_at: order_by
  customer: order_by
  event_id: order_by
  expiry_month: order_by
  expiry_year: order_by
  id: order_by
  last4: order_by
  payment_method: order_by
  updated_at: order_by
}

"""
primary key columns input for table: dr_stripe_delayed_payments_customer
"""
input dr_stripe_delayed_payments_customer_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_stripe_delayed_payments_customer"
"""
enum dr_stripe_delayed_payments_customer_select_column {
  """column name"""
added_by
  """column name"""
brand
  """column name"""
created_at
  """column name"""
customer
  """column name"""
event_id
  """column name"""
expiry_month
  """column name"""
expiry_year
  """column name"""
id
  """column name"""
last4
  """column name"""
payment_method
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_stripe_delayed_payments_customer"
"""
input dr_stripe_delayed_payments_customer_set_input {
  added_by: Int
  brand: String
  created_at: timestamptz
  customer: String
  event_id: Int
  expiry_month: Int
  expiry_year: Int
  id: uuid
  last4: String
  payment_method: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type dr_stripe_delayed_payments_customer_stddev_fields {
   added_by: Float
   event_id: Float
   expiry_month: Float
   expiry_year: Float
}

"""aggregate stddev_pop on columns"""
type dr_stripe_delayed_payments_customer_stddev_pop_fields {
   added_by: Float
   event_id: Float
   expiry_month: Float
   expiry_year: Float
}

"""aggregate stddev_samp on columns"""
type dr_stripe_delayed_payments_customer_stddev_samp_fields {
   added_by: Float
   event_id: Float
   expiry_month: Float
   expiry_year: Float
}

"""
Streaming cursor of the table "dr_stripe_delayed_payments_customer"
"""
input dr_stripe_delayed_payments_customer_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_stripe_delayed_payments_customer_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_stripe_delayed_payments_customer_stream_cursor_value_input {
  added_by: Int
  brand: String
  created_at: timestamptz
  customer: String
  event_id: Int
  expiry_month: Int
  expiry_year: Int
  id: uuid
  last4: String
  payment_method: String
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type dr_stripe_delayed_payments_customer_sum_fields {
   added_by: Int
   event_id: Int
   expiry_month: Int
   expiry_year: Int
}

"""
update columns of table "dr_stripe_delayed_payments_customer"
"""
enum dr_stripe_delayed_payments_customer_update_column {
  """column name"""
added_by
  """column name"""
brand
  """column name"""
created_at
  """column name"""
customer
  """column name"""
event_id
  """column name"""
expiry_month
  """column name"""
expiry_year
  """column name"""
id
  """column name"""
last4
  """column name"""
payment_method
  """column name"""
updated_at
}

input dr_stripe_delayed_payments_customer_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_stripe_delayed_payments_customer_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_stripe_delayed_payments_customer_set_input
  where: dr_stripe_delayed_payments_customer_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_stripe_delayed_payments_customer_var_pop_fields {
   added_by: Float
   event_id: Float
   expiry_month: Float
   expiry_year: Float
}

"""aggregate var_samp on columns"""
type dr_stripe_delayed_payments_customer_var_samp_fields {
   added_by: Float
   event_id: Float
   expiry_month: Float
   expiry_year: Float
}

"""aggregate variance on columns"""
type dr_stripe_delayed_payments_customer_variance_fields {
   added_by: Float
   event_id: Float
   expiry_month: Float
   expiry_year: Float
}

"""
columns and relationships of "dr_stripe_webhooks"
"""
type dr_stripe_webhooks {
   account: String! 
   amount_subtotal: Int! 
   amount_total: Int! 
   created_at: timestamptz! 
   event_id: Int! 
   id: uuid! 
   livemode: Boolean! 
   order_id: uuid! 
   payment_intent: String! 
   webhook_data: String! 
   webhook_id: String! 
   webhook_type: String! 
}

"""
aggregated selection of "dr_stripe_webhooks"
"""
type dr_stripe_webhooks_aggregate {
   aggregate: dr_stripe_webhooks_aggregate_fields
   nodes: [dr_stripe_webhooks! ]! 
}

"""
aggregate fields of "dr_stripe_webhooks"
"""
type dr_stripe_webhooks_aggregate_fields {
   avg: dr_stripe_webhooks_avg_fields
   count(columns: [dr_stripe_webhooks_select_column! ], distinct: Boolean): Int! 
   max: dr_stripe_webhooks_max_fields
   min: dr_stripe_webhooks_min_fields
   stddev: dr_stripe_webhooks_stddev_fields
   stddev_pop: dr_stripe_webhooks_stddev_pop_fields
   stddev_samp: dr_stripe_webhooks_stddev_samp_fields
   sum: dr_stripe_webhooks_sum_fields
   var_pop: dr_stripe_webhooks_var_pop_fields
   var_samp: dr_stripe_webhooks_var_samp_fields
   variance: dr_stripe_webhooks_variance_fields
}

"""aggregate avg on columns"""
type dr_stripe_webhooks_avg_fields {
   amount_subtotal: Float
   amount_total: Float
   event_id: Float
}

"""
Boolean expression to filter rows from the table "dr_stripe_webhooks". All fields are combined with a logical 'AND'.
"""
input dr_stripe_webhooks_bool_exp {
  _and: [dr_stripe_webhooks_bool_exp! ]
  _not: dr_stripe_webhooks_bool_exp
  _or: [dr_stripe_webhooks_bool_exp! ]
  account: String_comparison_exp
  amount_subtotal: Int_comparison_exp
  amount_total: Int_comparison_exp
  created_at: timestamptz_comparison_exp
  event_id: Int_comparison_exp
  id: uuid_comparison_exp
  livemode: Boolean_comparison_exp
  order_id: uuid_comparison_exp
  payment_intent: String_comparison_exp
  webhook_data: String_comparison_exp
  webhook_id: String_comparison_exp
  webhook_type: String_comparison_exp
}

"""
unique or primary key constraints on table "dr_stripe_webhooks"
"""
enum dr_stripe_webhooks_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_stripe_webhooks_pkey
}

"""
input type for incrementing numeric columns in table "dr_stripe_webhooks"
"""
input dr_stripe_webhooks_inc_input {
  amount_subtotal: Int
  amount_total: Int
  event_id: Int
}

"""
input type for inserting data into table "dr_stripe_webhooks"
"""
input dr_stripe_webhooks_insert_input {
  account: String! 
  amount_subtotal: Int! 
  amount_total: Int! 
  created_at: timestamptz! 
  event_id: Int! 
  id: uuid! 
  livemode: Boolean! 
  order_id: uuid! 
  payment_intent: String! 
  webhook_data: String! 
  webhook_id: String! 
  webhook_type: String! 
}

"""aggregate max on columns"""
type dr_stripe_webhooks_max_fields {
   account: String
   amount_subtotal: Int
   amount_total: Int
   created_at: timestamptz
   event_id: Int
   id: uuid
   order_id: uuid
   payment_intent: String
   webhook_data: String
   webhook_id: String
   webhook_type: String
}

"""aggregate min on columns"""
type dr_stripe_webhooks_min_fields {
   account: String
   amount_subtotal: Int
   amount_total: Int
   created_at: timestamptz
   event_id: Int
   id: uuid
   order_id: uuid
   payment_intent: String
   webhook_data: String
   webhook_id: String
   webhook_type: String
}

"""
response of any mutation on the table "dr_stripe_webhooks"
"""
type dr_stripe_webhooks_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_stripe_webhooks! ]! 
}

"""
on_conflict condition type for table "dr_stripe_webhooks"
"""
input dr_stripe_webhooks_on_conflict {
  constraint: dr_stripe_webhooks_constraint! 
  update_columns: [dr_stripe_webhooks_update_column! ]! 
  where: dr_stripe_webhooks_bool_exp
}

"""Ordering options when selecting data from "dr_stripe_webhooks"."""
input dr_stripe_webhooks_order_by {
  account: order_by
  amount_subtotal: order_by
  amount_total: order_by
  created_at: order_by
  event_id: order_by
  id: order_by
  livemode: order_by
  order_id: order_by
  payment_intent: order_by
  webhook_data: order_by
  webhook_id: order_by
  webhook_type: order_by
}

"""primary key columns input for table: dr_stripe_webhooks"""
input dr_stripe_webhooks_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_stripe_webhooks"
"""
enum dr_stripe_webhooks_select_column {
  """column name"""
account
  """column name"""
amount_subtotal
  """column name"""
amount_total
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
id
  """column name"""
livemode
  """column name"""
order_id
  """column name"""
payment_intent
  """column name"""
webhook_data
  """column name"""
webhook_id
  """column name"""
webhook_type
}

"""
input type for updating data in table "dr_stripe_webhooks"
"""
input dr_stripe_webhooks_set_input {
  account: String
  amount_subtotal: Int
  amount_total: Int
  created_at: timestamptz
  event_id: Int
  id: uuid
  livemode: Boolean
  order_id: uuid
  payment_intent: String
  webhook_data: String
  webhook_id: String
  webhook_type: String
}

"""aggregate stddev on columns"""
type dr_stripe_webhooks_stddev_fields {
   amount_subtotal: Float
   amount_total: Float
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type dr_stripe_webhooks_stddev_pop_fields {
   amount_subtotal: Float
   amount_total: Float
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type dr_stripe_webhooks_stddev_samp_fields {
   amount_subtotal: Float
   amount_total: Float
   event_id: Float
}

"""
Streaming cursor of the table "dr_stripe_webhooks"
"""
input dr_stripe_webhooks_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_stripe_webhooks_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_stripe_webhooks_stream_cursor_value_input {
  account: String
  amount_subtotal: Int
  amount_total: Int
  created_at: timestamptz
  event_id: Int
  id: uuid
  livemode: Boolean
  order_id: uuid
  payment_intent: String
  webhook_data: String
  webhook_id: String
  webhook_type: String
}

"""aggregate sum on columns"""
type dr_stripe_webhooks_sum_fields {
   amount_subtotal: Int
   amount_total: Int
   event_id: Int
}

"""
update columns of table "dr_stripe_webhooks"
"""
enum dr_stripe_webhooks_update_column {
  """column name"""
account
  """column name"""
amount_subtotal
  """column name"""
amount_total
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
id
  """column name"""
livemode
  """column name"""
order_id
  """column name"""
payment_intent
  """column name"""
webhook_data
  """column name"""
webhook_id
  """column name"""
webhook_type
}

input dr_stripe_webhooks_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_stripe_webhooks_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_stripe_webhooks_set_input
  where: dr_stripe_webhooks_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_stripe_webhooks_var_pop_fields {
   amount_subtotal: Float
   amount_total: Float
   event_id: Float
}

"""aggregate var_samp on columns"""
type dr_stripe_webhooks_var_samp_fields {
   amount_subtotal: Float
   amount_total: Float
   event_id: Float
}

"""aggregate variance on columns"""
type dr_stripe_webhooks_variance_fields {
   amount_subtotal: Float
   amount_total: Float
   event_id: Float
}

"""
columns and relationships of "dr_tax_rules"
"""
type dr_tax_rules {
   active_on_all_addons: Boolean! 
   active_on_all_tickets: Boolean! 
  """An array relationship"""
 addons("""distinct select on columns"""
distinct_on: [dr_addon_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_addon_tax_rules_view_bool_exp): [dr_addon_tax_rules_view! ]! 
  """An aggregate relationship"""
 addons_aggregate("""distinct select on columns"""
distinct_on: [dr_addon_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_addon_tax_rules_view_bool_exp): dr_addon_tax_rules_view_aggregate! 
   archived: Boolean! 
   created_at: timestamptz! 
   display_order: Int! 
   event_id: Int! 
   id: uuid! 
   name: String! 
  """An array relationship"""
 order_line_item_summaries("""distinct select on columns"""
distinct_on: [dr_order_line_items_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_line_items_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_order_line_items_tax_rules_view_bool_exp): [dr_order_line_items_tax_rules_view! ]! 
  """An aggregate relationship"""
 order_line_item_summaries_aggregate("""distinct select on columns"""
distinct_on: [dr_order_line_items_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_line_items_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_order_line_items_tax_rules_view_bool_exp): dr_order_line_items_tax_rules_view_aggregate! 
   percentage_amount: numeric! 
   stripe_tax_rule_id: String
  """An array relationship"""
 tickets("""distinct select on columns"""
distinct_on: [dr_ticket_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_ticket_tax_rules_view_bool_exp): [dr_ticket_tax_rules_view! ]! 
  """An aggregate relationship"""
 tickets_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_ticket_tax_rules_view_bool_exp): dr_ticket_tax_rules_view_aggregate! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_tax_rules"
"""
type dr_tax_rules_aggregate {
   aggregate: dr_tax_rules_aggregate_fields
   nodes: [dr_tax_rules! ]! 
}

"""
aggregate fields of "dr_tax_rules"
"""
type dr_tax_rules_aggregate_fields {
   avg: dr_tax_rules_avg_fields
   count(columns: [dr_tax_rules_select_column! ], distinct: Boolean): Int! 
   max: dr_tax_rules_max_fields
   min: dr_tax_rules_min_fields
   stddev: dr_tax_rules_stddev_fields
   stddev_pop: dr_tax_rules_stddev_pop_fields
   stddev_samp: dr_tax_rules_stddev_samp_fields
   sum: dr_tax_rules_sum_fields
   var_pop: dr_tax_rules_var_pop_fields
   var_samp: dr_tax_rules_var_samp_fields
   variance: dr_tax_rules_variance_fields
}

"""aggregate avg on columns"""
type dr_tax_rules_avg_fields {
   display_order: Float
   event_id: Float
   percentage_amount: Float
}

"""
Boolean expression to filter rows from the table "dr_tax_rules". All fields are combined with a logical 'AND'.
"""
input dr_tax_rules_bool_exp {
  _and: [dr_tax_rules_bool_exp! ]
  _not: dr_tax_rules_bool_exp
  _or: [dr_tax_rules_bool_exp! ]
  active_on_all_addons: Boolean_comparison_exp
  active_on_all_tickets: Boolean_comparison_exp
  addons: dr_addon_tax_rules_view_bool_exp
  addons_aggregate: dr_addon_tax_rules_view_aggregate_bool_exp
  archived: Boolean_comparison_exp
  created_at: timestamptz_comparison_exp
  display_order: Int_comparison_exp
  event_id: Int_comparison_exp
  id: uuid_comparison_exp
  name: String_comparison_exp
  order_line_item_summaries: dr_order_line_items_tax_rules_view_bool_exp
  order_line_item_summaries_aggregate: dr_order_line_items_tax_rules_view_aggregate_bool_exp
  percentage_amount: numeric_comparison_exp
  stripe_tax_rule_id: String_comparison_exp
  tickets: dr_ticket_tax_rules_view_bool_exp
  tickets_aggregate: dr_ticket_tax_rules_view_aggregate_bool_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_tax_rules"
"""
enum dr_tax_rules_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_tax_rules_pkey
}

"""
input type for incrementing numeric columns in table "dr_tax_rules"
"""
input dr_tax_rules_inc_input {
  display_order: Int
  event_id: Int
  percentage_amount: numeric
}

"""
input type for inserting data into table "dr_tax_rules"
"""
input dr_tax_rules_insert_input {
  active_on_all_addons: Boolean! 
  active_on_all_tickets: Boolean! 
  addons: dr_addon_tax_rules_view_arr_rel_insert_input
  archived: Boolean! 
  created_at: timestamptz! 
  display_order: Int! 
  event_id: Int! 
  id: uuid! 
  name: String! 
  order_line_item_summaries: dr_order_line_items_tax_rules_view_arr_rel_insert_input
  percentage_amount: numeric! 
  stripe_tax_rule_id: String
  tickets: dr_ticket_tax_rules_view_arr_rel_insert_input
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_tax_rules_max_fields {
   created_at: timestamptz
   display_order: Int
   event_id: Int
   id: uuid
   name: String
   percentage_amount: numeric
   stripe_tax_rule_id: String
   updated_at: timestamptz
}

"""aggregate min on columns"""
type dr_tax_rules_min_fields {
   created_at: timestamptz
   display_order: Int
   event_id: Int
   id: uuid
   name: String
   percentage_amount: numeric
   stripe_tax_rule_id: String
   updated_at: timestamptz
}

"""
response of any mutation on the table "dr_tax_rules"
"""
type dr_tax_rules_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_tax_rules! ]! 
}

"""
input type for inserting object relation for remote table "dr_tax_rules"
"""
input dr_tax_rules_obj_rel_insert_input {
  data: dr_tax_rules_insert_input! 
  """upsert condition"""
on_conflict: dr_tax_rules_on_conflict
}

"""
on_conflict condition type for table "dr_tax_rules"
"""
input dr_tax_rules_on_conflict {
  constraint: dr_tax_rules_constraint! 
  update_columns: [dr_tax_rules_update_column! ]! 
  where: dr_tax_rules_bool_exp
}

"""Ordering options when selecting data from "dr_tax_rules"."""
input dr_tax_rules_order_by {
  active_on_all_addons: order_by
  active_on_all_tickets: order_by
  addons_aggregate: dr_addon_tax_rules_view_aggregate_order_by
  archived: order_by
  created_at: order_by
  display_order: order_by
  event_id: order_by
  id: order_by
  name: order_by
  order_line_item_summaries_aggregate: dr_order_line_items_tax_rules_view_aggregate_order_by
  percentage_amount: order_by
  stripe_tax_rule_id: order_by
  tickets_aggregate: dr_ticket_tax_rules_view_aggregate_order_by
  updated_at: order_by
}

"""primary key columns input for table: dr_tax_rules"""
input dr_tax_rules_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_tax_rules"
"""
enum dr_tax_rules_select_column {
  """column name"""
active_on_all_addons
  """column name"""
active_on_all_tickets
  """column name"""
archived
  """column name"""
created_at
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
id
  """column name"""
name
  """column name"""
percentage_amount
  """column name"""
stripe_tax_rule_id
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_tax_rules"
"""
input dr_tax_rules_set_input {
  active_on_all_addons: Boolean
  active_on_all_tickets: Boolean
  archived: Boolean
  created_at: timestamptz
  display_order: Int
  event_id: Int
  id: uuid
  name: String
  percentage_amount: numeric
  stripe_tax_rule_id: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type dr_tax_rules_stddev_fields {
   display_order: Float
   event_id: Float
   percentage_amount: Float
}

"""aggregate stddev_pop on columns"""
type dr_tax_rules_stddev_pop_fields {
   display_order: Float
   event_id: Float
   percentage_amount: Float
}

"""aggregate stddev_samp on columns"""
type dr_tax_rules_stddev_samp_fields {
   display_order: Float
   event_id: Float
   percentage_amount: Float
}

"""
Streaming cursor of the table "dr_tax_rules"
"""
input dr_tax_rules_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_tax_rules_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_tax_rules_stream_cursor_value_input {
  active_on_all_addons: Boolean
  active_on_all_tickets: Boolean
  archived: Boolean
  created_at: timestamptz
  display_order: Int
  event_id: Int
  id: uuid
  name: String
  percentage_amount: numeric
  stripe_tax_rule_id: String
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type dr_tax_rules_sum_fields {
   display_order: Int
   event_id: Int
   percentage_amount: numeric
}

"""
update columns of table "dr_tax_rules"
"""
enum dr_tax_rules_update_column {
  """column name"""
active_on_all_addons
  """column name"""
active_on_all_tickets
  """column name"""
archived
  """column name"""
created_at
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
id
  """column name"""
name
  """column name"""
percentage_amount
  """column name"""
stripe_tax_rule_id
  """column name"""
updated_at
}

input dr_tax_rules_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_tax_rules_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_tax_rules_set_input
  where: dr_tax_rules_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_tax_rules_var_pop_fields {
   display_order: Float
   event_id: Float
   percentage_amount: Float
}

"""aggregate var_samp on columns"""
type dr_tax_rules_var_samp_fields {
   display_order: Float
   event_id: Float
   percentage_amount: Float
}

"""aggregate variance on columns"""
type dr_tax_rules_variance_fields {
   display_order: Float
   event_id: Float
   percentage_amount: Float
}

"""A join table to link tickets and addons"""
type dr_ticket_addons {
  """An object relationship"""
 addon: dr_addons! 
   addon_id: uuid! 
   created_at: timestamptz! 
   id: uuid! 
  """An object relationship"""
 ticket: dr_tickets! 
   ticket_id: uuid! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_ticket_addons"
"""
type dr_ticket_addons_aggregate {
   aggregate: dr_ticket_addons_aggregate_fields
   nodes: [dr_ticket_addons! ]! 
}

"""
aggregate fields of "dr_ticket_addons"
"""
type dr_ticket_addons_aggregate_fields {
   count(columns: [dr_ticket_addons_select_column! ], distinct: Boolean): Int! 
   max: dr_ticket_addons_max_fields
   min: dr_ticket_addons_min_fields
}

"""
Boolean expression to filter rows from the table "dr_ticket_addons". All fields are combined with a logical 'AND'.
"""
input dr_ticket_addons_bool_exp {
  _and: [dr_ticket_addons_bool_exp! ]
  _not: dr_ticket_addons_bool_exp
  _or: [dr_ticket_addons_bool_exp! ]
  addon: dr_addons_bool_exp
  addon_id: uuid_comparison_exp
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  ticket: dr_tickets_bool_exp
  ticket_id: uuid_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_ticket_addons"
"""
enum dr_ticket_addons_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_ticket_addons_pkey
}

"""
input type for inserting data into table "dr_ticket_addons"
"""
input dr_ticket_addons_insert_input {
  addon: dr_addons_obj_rel_insert_input
  addon_id: uuid! 
  created_at: timestamptz! 
  id: uuid! 
  ticket: dr_tickets_obj_rel_insert_input
  ticket_id: uuid! 
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_ticket_addons_max_fields {
   addon_id: uuid
   created_at: timestamptz
   id: uuid
   ticket_id: uuid
   updated_at: timestamptz
}

"""aggregate min on columns"""
type dr_ticket_addons_min_fields {
   addon_id: uuid
   created_at: timestamptz
   id: uuid
   ticket_id: uuid
   updated_at: timestamptz
}

"""
response of any mutation on the table "dr_ticket_addons"
"""
type dr_ticket_addons_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_ticket_addons! ]! 
}

"""
on_conflict condition type for table "dr_ticket_addons"
"""
input dr_ticket_addons_on_conflict {
  constraint: dr_ticket_addons_constraint! 
  update_columns: [dr_ticket_addons_update_column! ]! 
  where: dr_ticket_addons_bool_exp
}

"""Ordering options when selecting data from "dr_ticket_addons"."""
input dr_ticket_addons_order_by {
  addon: dr_addons_order_by
  addon_id: order_by
  created_at: order_by
  id: order_by
  ticket: dr_tickets_order_by
  ticket_id: order_by
  updated_at: order_by
}

"""primary key columns input for table: dr_ticket_addons"""
input dr_ticket_addons_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_ticket_addons"
"""
enum dr_ticket_addons_select_column {
  """column name"""
addon_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
ticket_id
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_ticket_addons"
"""
input dr_ticket_addons_set_input {
  addon_id: uuid
  created_at: timestamptz
  id: uuid
  ticket_id: uuid
  updated_at: timestamptz
}

"""
Streaming cursor of the table "dr_ticket_addons"
"""
input dr_ticket_addons_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_ticket_addons_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_ticket_addons_stream_cursor_value_input {
  addon_id: uuid
  created_at: timestamptz
  id: uuid
  ticket_id: uuid
  updated_at: timestamptz
}

"""
update columns of table "dr_ticket_addons"
"""
enum dr_ticket_addons_update_column {
  """column name"""
addon_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
ticket_id
  """column name"""
updated_at
}

input dr_ticket_addons_updates {
  """sets the columns of the filtered rows to the given values"""
_set: dr_ticket_addons_set_input
  where: dr_ticket_addons_bool_exp! 
}

"""
columns and relationships of "dr_ticket_addons_view"
"""
type dr_ticket_addons_view {
  """An object relationship"""
 addon: dr_addons
   addon_id: uuid
  """An object relationship"""
 ticket: dr_tickets
   ticket_id: uuid
}

"""
aggregated selection of "dr_ticket_addons_view"
"""
type dr_ticket_addons_view_aggregate {
   aggregate: dr_ticket_addons_view_aggregate_fields
   nodes: [dr_ticket_addons_view! ]! 
}

input dr_ticket_addons_view_aggregate_bool_exp {
  count: dr_ticket_addons_view_aggregate_bool_exp_count
}

input dr_ticket_addons_view_aggregate_bool_exp_count {
  arguments: [dr_ticket_addons_view_select_column! ]
  distinct: Boolean
  filter: dr_ticket_addons_view_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_ticket_addons_view"
"""
type dr_ticket_addons_view_aggregate_fields {
   count(columns: [dr_ticket_addons_view_select_column! ], distinct: Boolean): Int! 
   max: dr_ticket_addons_view_max_fields
   min: dr_ticket_addons_view_min_fields
}

"""
order by aggregate values of table "dr_ticket_addons_view"
"""
input dr_ticket_addons_view_aggregate_order_by {
  count: order_by
  max: dr_ticket_addons_view_max_order_by
  min: dr_ticket_addons_view_min_order_by
}

"""
input type for inserting array relation for remote table "dr_ticket_addons_view"
"""
input dr_ticket_addons_view_arr_rel_insert_input {
  data: [dr_ticket_addons_view_insert_input! ]! 
}

"""
Boolean expression to filter rows from the table "dr_ticket_addons_view". All fields are combined with a logical 'AND'.
"""
input dr_ticket_addons_view_bool_exp {
  _and: [dr_ticket_addons_view_bool_exp! ]
  _not: dr_ticket_addons_view_bool_exp
  _or: [dr_ticket_addons_view_bool_exp! ]
  addon: dr_addons_bool_exp
  addon_id: uuid_comparison_exp
  ticket: dr_tickets_bool_exp
  ticket_id: uuid_comparison_exp
}

"""
input type for inserting data into table "dr_ticket_addons_view"
"""
input dr_ticket_addons_view_insert_input {
  addon: dr_addons_obj_rel_insert_input
  addon_id: uuid
  ticket: dr_tickets_obj_rel_insert_input
  ticket_id: uuid
}

"""aggregate max on columns"""
type dr_ticket_addons_view_max_fields {
   addon_id: uuid
   ticket_id: uuid
}

"""
order by max() on columns of table "dr_ticket_addons_view"
"""
input dr_ticket_addons_view_max_order_by {
  addon_id: order_by
  ticket_id: order_by
}

"""aggregate min on columns"""
type dr_ticket_addons_view_min_fields {
   addon_id: uuid
   ticket_id: uuid
}

"""
order by min() on columns of table "dr_ticket_addons_view"
"""
input dr_ticket_addons_view_min_order_by {
  addon_id: order_by
  ticket_id: order_by
}

"""Ordering options when selecting data from "dr_ticket_addons_view"."""
input dr_ticket_addons_view_order_by {
  addon: dr_addons_order_by
  addon_id: order_by
  ticket: dr_tickets_order_by
  ticket_id: order_by
}

"""
select columns of table "dr_ticket_addons_view"
"""
enum dr_ticket_addons_view_select_column {
  """column name"""
addon_id
  """column name"""
ticket_id
}

"""
Streaming cursor of the table "dr_ticket_addons_view"
"""
input dr_ticket_addons_view_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_ticket_addons_view_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_ticket_addons_view_stream_cursor_value_input {
  addon_id: uuid
  ticket_id: uuid
}

"""
columns and relationships of "dr_ticket_coupons"
"""
type dr_ticket_coupons {
  """An object relationship"""
 coupon: dr_coupons
   coupon_id: uuid! 
   created_at: timestamptz! 
   id: uuid! 
  """An object relationship"""
 ticket: dr_tickets
   ticket_id: uuid! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_ticket_coupons"
"""
type dr_ticket_coupons_aggregate {
   aggregate: dr_ticket_coupons_aggregate_fields
   nodes: [dr_ticket_coupons! ]! 
}

input dr_ticket_coupons_aggregate_bool_exp {
  count: dr_ticket_coupons_aggregate_bool_exp_count
}

input dr_ticket_coupons_aggregate_bool_exp_count {
  arguments: [dr_ticket_coupons_select_column! ]
  distinct: Boolean
  filter: dr_ticket_coupons_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_ticket_coupons"
"""
type dr_ticket_coupons_aggregate_fields {
   count(columns: [dr_ticket_coupons_select_column! ], distinct: Boolean): Int! 
   max: dr_ticket_coupons_max_fields
   min: dr_ticket_coupons_min_fields
}

"""
order by aggregate values of table "dr_ticket_coupons"
"""
input dr_ticket_coupons_aggregate_order_by {
  count: order_by
  max: dr_ticket_coupons_max_order_by
  min: dr_ticket_coupons_min_order_by
}

"""
input type for inserting array relation for remote table "dr_ticket_coupons"
"""
input dr_ticket_coupons_arr_rel_insert_input {
  data: [dr_ticket_coupons_insert_input! ]! 
  """upsert condition"""
on_conflict: dr_ticket_coupons_on_conflict
}

"""
Boolean expression to filter rows from the table "dr_ticket_coupons". All fields are combined with a logical 'AND'.
"""
input dr_ticket_coupons_bool_exp {
  _and: [dr_ticket_coupons_bool_exp! ]
  _not: dr_ticket_coupons_bool_exp
  _or: [dr_ticket_coupons_bool_exp! ]
  coupon: dr_coupons_bool_exp
  coupon_id: uuid_comparison_exp
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  ticket: dr_tickets_bool_exp
  ticket_id: uuid_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_ticket_coupons"
"""
enum dr_ticket_coupons_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_ticket_coupons_pkey
}

"""
input type for inserting data into table "dr_ticket_coupons"
"""
input dr_ticket_coupons_insert_input {
  coupon: dr_coupons_obj_rel_insert_input
  coupon_id: uuid! 
  created_at: timestamptz! 
  id: uuid! 
  ticket: dr_tickets_obj_rel_insert_input
  ticket_id: uuid! 
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_ticket_coupons_max_fields {
   coupon_id: uuid
   created_at: timestamptz
   id: uuid
   ticket_id: uuid
   updated_at: timestamptz
}

"""
order by max() on columns of table "dr_ticket_coupons"
"""
input dr_ticket_coupons_max_order_by {
  coupon_id: order_by
  created_at: order_by
  id: order_by
  ticket_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type dr_ticket_coupons_min_fields {
   coupon_id: uuid
   created_at: timestamptz
   id: uuid
   ticket_id: uuid
   updated_at: timestamptz
}

"""
order by min() on columns of table "dr_ticket_coupons"
"""
input dr_ticket_coupons_min_order_by {
  coupon_id: order_by
  created_at: order_by
  id: order_by
  ticket_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "dr_ticket_coupons"
"""
type dr_ticket_coupons_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_ticket_coupons! ]! 
}

"""
on_conflict condition type for table "dr_ticket_coupons"
"""
input dr_ticket_coupons_on_conflict {
  constraint: dr_ticket_coupons_constraint! 
  update_columns: [dr_ticket_coupons_update_column! ]! 
  where: dr_ticket_coupons_bool_exp
}

"""Ordering options when selecting data from "dr_ticket_coupons"."""
input dr_ticket_coupons_order_by {
  coupon: dr_coupons_order_by
  coupon_id: order_by
  created_at: order_by
  id: order_by
  ticket: dr_tickets_order_by
  ticket_id: order_by
  updated_at: order_by
}

"""primary key columns input for table: dr_ticket_coupons"""
input dr_ticket_coupons_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_ticket_coupons"
"""
enum dr_ticket_coupons_select_column {
  """column name"""
coupon_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
ticket_id
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_ticket_coupons"
"""
input dr_ticket_coupons_set_input {
  coupon_id: uuid
  created_at: timestamptz
  id: uuid
  ticket_id: uuid
  updated_at: timestamptz
}

"""
Streaming cursor of the table "dr_ticket_coupons"
"""
input dr_ticket_coupons_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_ticket_coupons_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_ticket_coupons_stream_cursor_value_input {
  coupon_id: uuid
  created_at: timestamptz
  id: uuid
  ticket_id: uuid
  updated_at: timestamptz
}

"""
update columns of table "dr_ticket_coupons"
"""
enum dr_ticket_coupons_update_column {
  """column name"""
coupon_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
ticket_id
  """column name"""
updated_at
}

input dr_ticket_coupons_updates {
  """sets the columns of the filtered rows to the given values"""
_set: dr_ticket_coupons_set_input
  where: dr_ticket_coupons_bool_exp! 
}

"""
columns and relationships of "dr_ticket_coupons_view"
"""
type dr_ticket_coupons_view {
  """An object relationship"""
 coupon: dr_coupons
   coupon_id: uuid
  """An object relationship"""
 ticket: dr_tickets
   ticket_id: uuid
}

"""
aggregated selection of "dr_ticket_coupons_view"
"""
type dr_ticket_coupons_view_aggregate {
   aggregate: dr_ticket_coupons_view_aggregate_fields
   nodes: [dr_ticket_coupons_view! ]! 
}

input dr_ticket_coupons_view_aggregate_bool_exp {
  count: dr_ticket_coupons_view_aggregate_bool_exp_count
}

input dr_ticket_coupons_view_aggregate_bool_exp_count {
  arguments: [dr_ticket_coupons_view_select_column! ]
  distinct: Boolean
  filter: dr_ticket_coupons_view_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_ticket_coupons_view"
"""
type dr_ticket_coupons_view_aggregate_fields {
   count(columns: [dr_ticket_coupons_view_select_column! ], distinct: Boolean): Int! 
   max: dr_ticket_coupons_view_max_fields
   min: dr_ticket_coupons_view_min_fields
}

"""
order by aggregate values of table "dr_ticket_coupons_view"
"""
input dr_ticket_coupons_view_aggregate_order_by {
  count: order_by
  max: dr_ticket_coupons_view_max_order_by
  min: dr_ticket_coupons_view_min_order_by
}

"""
input type for inserting array relation for remote table "dr_ticket_coupons_view"
"""
input dr_ticket_coupons_view_arr_rel_insert_input {
  data: [dr_ticket_coupons_view_insert_input! ]! 
}

"""
Boolean expression to filter rows from the table "dr_ticket_coupons_view". All fields are combined with a logical 'AND'.
"""
input dr_ticket_coupons_view_bool_exp {
  _and: [dr_ticket_coupons_view_bool_exp! ]
  _not: dr_ticket_coupons_view_bool_exp
  _or: [dr_ticket_coupons_view_bool_exp! ]
  coupon: dr_coupons_bool_exp
  coupon_id: uuid_comparison_exp
  ticket: dr_tickets_bool_exp
  ticket_id: uuid_comparison_exp
}

"""
input type for inserting data into table "dr_ticket_coupons_view"
"""
input dr_ticket_coupons_view_insert_input {
  coupon: dr_coupons_obj_rel_insert_input
  coupon_id: uuid
  ticket: dr_tickets_obj_rel_insert_input
  ticket_id: uuid
}

"""aggregate max on columns"""
type dr_ticket_coupons_view_max_fields {
   coupon_id: uuid
   ticket_id: uuid
}

"""
order by max() on columns of table "dr_ticket_coupons_view"
"""
input dr_ticket_coupons_view_max_order_by {
  coupon_id: order_by
  ticket_id: order_by
}

"""aggregate min on columns"""
type dr_ticket_coupons_view_min_fields {
   coupon_id: uuid
   ticket_id: uuid
}

"""
order by min() on columns of table "dr_ticket_coupons_view"
"""
input dr_ticket_coupons_view_min_order_by {
  coupon_id: order_by
  ticket_id: order_by
}

"""Ordering options when selecting data from "dr_ticket_coupons_view"."""
input dr_ticket_coupons_view_order_by {
  coupon: dr_coupons_order_by
  coupon_id: order_by
  ticket: dr_tickets_order_by
  ticket_id: order_by
}

"""
select columns of table "dr_ticket_coupons_view"
"""
enum dr_ticket_coupons_view_select_column {
  """column name"""
coupon_id
  """column name"""
ticket_id
}

"""
Streaming cursor of the table "dr_ticket_coupons_view"
"""
input dr_ticket_coupons_view_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_ticket_coupons_view_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_ticket_coupons_view_stream_cursor_value_input {
  coupon_id: uuid
  ticket_id: uuid
}

"""
columns and relationships of "dr_ticket_groups"
"""
type dr_ticket_groups {
   archived: Boolean! 
   created_at: timestamptz! 
   display_order: Int! 
   event_id: Int! 
   id: Int! 
   name: String! 
  """An array relationship"""
 tickets("""distinct select on columns"""
distinct_on: [dr_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_tickets_order_by! ], """filter the rows returned"""
where: dr_tickets_bool_exp): [dr_tickets! ]! 
  """An aggregate relationship"""
 tickets_aggregate("""distinct select on columns"""
distinct_on: [dr_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_tickets_order_by! ], """filter the rows returned"""
where: dr_tickets_bool_exp): dr_tickets_aggregate! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_ticket_groups"
"""
type dr_ticket_groups_aggregate {
   aggregate: dr_ticket_groups_aggregate_fields
   nodes: [dr_ticket_groups! ]! 
}

"""
aggregate fields of "dr_ticket_groups"
"""
type dr_ticket_groups_aggregate_fields {
   avg: dr_ticket_groups_avg_fields
   count(columns: [dr_ticket_groups_select_column! ], distinct: Boolean): Int! 
   max: dr_ticket_groups_max_fields
   min: dr_ticket_groups_min_fields
   stddev: dr_ticket_groups_stddev_fields
   stddev_pop: dr_ticket_groups_stddev_pop_fields
   stddev_samp: dr_ticket_groups_stddev_samp_fields
   sum: dr_ticket_groups_sum_fields
   var_pop: dr_ticket_groups_var_pop_fields
   var_samp: dr_ticket_groups_var_samp_fields
   variance: dr_ticket_groups_variance_fields
}

"""aggregate avg on columns"""
type dr_ticket_groups_avg_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""
Boolean expression to filter rows from the table "dr_ticket_groups". All fields are combined with a logical 'AND'.
"""
input dr_ticket_groups_bool_exp {
  _and: [dr_ticket_groups_bool_exp! ]
  _not: dr_ticket_groups_bool_exp
  _or: [dr_ticket_groups_bool_exp! ]
  archived: Boolean_comparison_exp
  created_at: timestamptz_comparison_exp
  display_order: Int_comparison_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  tickets: dr_tickets_bool_exp
  tickets_aggregate: dr_tickets_aggregate_bool_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_ticket_groups"
"""
enum dr_ticket_groups_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_ticket_groups_pkey
}

"""
input type for incrementing numeric columns in table "dr_ticket_groups"
"""
input dr_ticket_groups_inc_input {
  display_order: Int
  event_id: Int
  id: Int
}

"""
input type for inserting data into table "dr_ticket_groups"
"""
input dr_ticket_groups_insert_input {
  archived: Boolean! 
  created_at: timestamptz! 
  display_order: Int! 
  event_id: Int! 
  id: Int! 
  name: String! 
  tickets: dr_tickets_arr_rel_insert_input
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_ticket_groups_max_fields {
   created_at: timestamptz
   display_order: Int
   event_id: Int
   id: Int
   name: String
   updated_at: timestamptz
}

"""aggregate min on columns"""
type dr_ticket_groups_min_fields {
   created_at: timestamptz
   display_order: Int
   event_id: Int
   id: Int
   name: String
   updated_at: timestamptz
}

"""
response of any mutation on the table "dr_ticket_groups"
"""
type dr_ticket_groups_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_ticket_groups! ]! 
}

"""
input type for inserting object relation for remote table "dr_ticket_groups"
"""
input dr_ticket_groups_obj_rel_insert_input {
  data: dr_ticket_groups_insert_input! 
  """upsert condition"""
on_conflict: dr_ticket_groups_on_conflict
}

"""
on_conflict condition type for table "dr_ticket_groups"
"""
input dr_ticket_groups_on_conflict {
  constraint: dr_ticket_groups_constraint! 
  update_columns: [dr_ticket_groups_update_column! ]! 
  where: dr_ticket_groups_bool_exp
}

"""Ordering options when selecting data from "dr_ticket_groups"."""
input dr_ticket_groups_order_by {
  archived: order_by
  created_at: order_by
  display_order: order_by
  event_id: order_by
  id: order_by
  name: order_by
  tickets_aggregate: dr_tickets_aggregate_order_by
  updated_at: order_by
}

"""primary key columns input for table: dr_ticket_groups"""
input dr_ticket_groups_pk_columns_input {
  id: Int! 
}

"""
select columns of table "dr_ticket_groups"
"""
enum dr_ticket_groups_select_column {
  """column name"""
archived
  """column name"""
created_at
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
id
  """column name"""
name
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_ticket_groups"
"""
input dr_ticket_groups_set_input {
  archived: Boolean
  created_at: timestamptz
  display_order: Int
  event_id: Int
  id: Int
  name: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type dr_ticket_groups_stddev_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""aggregate stddev_pop on columns"""
type dr_ticket_groups_stddev_pop_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""aggregate stddev_samp on columns"""
type dr_ticket_groups_stddev_samp_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""
Streaming cursor of the table "dr_ticket_groups"
"""
input dr_ticket_groups_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_ticket_groups_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_ticket_groups_stream_cursor_value_input {
  archived: Boolean
  created_at: timestamptz
  display_order: Int
  event_id: Int
  id: Int
  name: String
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type dr_ticket_groups_sum_fields {
   display_order: Int
   event_id: Int
   id: Int
}

"""
Ungrouped tickets are those without a ticket group (table relationship). These will sometimes still need to be ordered within the UI.
"""
type dr_ticket_groups_ungrouped_order {
   display_order: Int! 
   event_id: Int! 
   id: Int! 
}

"""
aggregated selection of "dr_ticket_groups_ungrouped_order"
"""
type dr_ticket_groups_ungrouped_order_aggregate {
   aggregate: dr_ticket_groups_ungrouped_order_aggregate_fields
   nodes: [dr_ticket_groups_ungrouped_order! ]! 
}

"""
aggregate fields of "dr_ticket_groups_ungrouped_order"
"""
type dr_ticket_groups_ungrouped_order_aggregate_fields {
   avg: dr_ticket_groups_ungrouped_order_avg_fields
   count(columns: [dr_ticket_groups_ungrouped_order_select_column! ], distinct: Boolean): Int! 
   max: dr_ticket_groups_ungrouped_order_max_fields
   min: dr_ticket_groups_ungrouped_order_min_fields
   stddev: dr_ticket_groups_ungrouped_order_stddev_fields
   stddev_pop: dr_ticket_groups_ungrouped_order_stddev_pop_fields
   stddev_samp: dr_ticket_groups_ungrouped_order_stddev_samp_fields
   sum: dr_ticket_groups_ungrouped_order_sum_fields
   var_pop: dr_ticket_groups_ungrouped_order_var_pop_fields
   var_samp: dr_ticket_groups_ungrouped_order_var_samp_fields
   variance: dr_ticket_groups_ungrouped_order_variance_fields
}

"""aggregate avg on columns"""
type dr_ticket_groups_ungrouped_order_avg_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""
Boolean expression to filter rows from the table "dr_ticket_groups_ungrouped_order". All fields are combined with a logical 'AND'.
"""
input dr_ticket_groups_ungrouped_order_bool_exp {
  _and: [dr_ticket_groups_ungrouped_order_bool_exp! ]
  _not: dr_ticket_groups_ungrouped_order_bool_exp
  _or: [dr_ticket_groups_ungrouped_order_bool_exp! ]
  display_order: Int_comparison_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
}

"""
unique or primary key constraints on table "dr_ticket_groups_ungrouped_order"
"""
enum dr_ticket_groups_ungrouped_order_constraint {
  """
  unique or primary key constraint on columns "event_id"
  """
dr_ticket_groups_ungrouped_order_event_id_key
  """
  unique or primary key constraint on columns "id"
  """
dr_ticket_groups_ungrouped_order_pkey
}

"""
input type for incrementing numeric columns in table "dr_ticket_groups_ungrouped_order"
"""
input dr_ticket_groups_ungrouped_order_inc_input {
  display_order: Int
  event_id: Int
  id: Int
}

"""
input type for inserting data into table "dr_ticket_groups_ungrouped_order"
"""
input dr_ticket_groups_ungrouped_order_insert_input {
  display_order: Int! 
  event_id: Int! 
  id: Int! 
}

"""aggregate max on columns"""
type dr_ticket_groups_ungrouped_order_max_fields {
   display_order: Int
   event_id: Int
   id: Int
}

"""aggregate min on columns"""
type dr_ticket_groups_ungrouped_order_min_fields {
   display_order: Int
   event_id: Int
   id: Int
}

"""
response of any mutation on the table "dr_ticket_groups_ungrouped_order"
"""
type dr_ticket_groups_ungrouped_order_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_ticket_groups_ungrouped_order! ]! 
}

"""
input type for inserting object relation for remote table "dr_ticket_groups_ungrouped_order"
"""
input dr_ticket_groups_ungrouped_order_obj_rel_insert_input {
  data: dr_ticket_groups_ungrouped_order_insert_input! 
  """upsert condition"""
on_conflict: dr_ticket_groups_ungrouped_order_on_conflict
}

"""
on_conflict condition type for table "dr_ticket_groups_ungrouped_order"
"""
input dr_ticket_groups_ungrouped_order_on_conflict {
  constraint: dr_ticket_groups_ungrouped_order_constraint! 
  update_columns: [dr_ticket_groups_ungrouped_order_update_column! ]! 
  where: dr_ticket_groups_ungrouped_order_bool_exp
}

"""
Ordering options when selecting data from "dr_ticket_groups_ungrouped_order".
"""
input dr_ticket_groups_ungrouped_order_order_by {
  display_order: order_by
  event_id: order_by
  id: order_by
}

"""primary key columns input for table: dr_ticket_groups_ungrouped_order"""
input dr_ticket_groups_ungrouped_order_pk_columns_input {
  id: Int! 
}

"""
select columns of table "dr_ticket_groups_ungrouped_order"
"""
enum dr_ticket_groups_ungrouped_order_select_column {
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
id
}

"""
input type for updating data in table "dr_ticket_groups_ungrouped_order"
"""
input dr_ticket_groups_ungrouped_order_set_input {
  display_order: Int
  event_id: Int
  id: Int
}

"""aggregate stddev on columns"""
type dr_ticket_groups_ungrouped_order_stddev_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""aggregate stddev_pop on columns"""
type dr_ticket_groups_ungrouped_order_stddev_pop_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""aggregate stddev_samp on columns"""
type dr_ticket_groups_ungrouped_order_stddev_samp_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""
Streaming cursor of the table "dr_ticket_groups_ungrouped_order"
"""
input dr_ticket_groups_ungrouped_order_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_ticket_groups_ungrouped_order_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_ticket_groups_ungrouped_order_stream_cursor_value_input {
  display_order: Int
  event_id: Int
  id: Int
}

"""aggregate sum on columns"""
type dr_ticket_groups_ungrouped_order_sum_fields {
   display_order: Int
   event_id: Int
   id: Int
}

"""
update columns of table "dr_ticket_groups_ungrouped_order"
"""
enum dr_ticket_groups_ungrouped_order_update_column {
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
id
}

input dr_ticket_groups_ungrouped_order_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_ticket_groups_ungrouped_order_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_ticket_groups_ungrouped_order_set_input
  where: dr_ticket_groups_ungrouped_order_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_ticket_groups_ungrouped_order_var_pop_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""aggregate var_samp on columns"""
type dr_ticket_groups_ungrouped_order_var_samp_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""aggregate variance on columns"""
type dr_ticket_groups_ungrouped_order_variance_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""
update columns of table "dr_ticket_groups"
"""
enum dr_ticket_groups_update_column {
  """column name"""
archived
  """column name"""
created_at
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
id
  """column name"""
name
  """column name"""
updated_at
}

input dr_ticket_groups_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_ticket_groups_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_ticket_groups_set_input
  where: dr_ticket_groups_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_ticket_groups_var_pop_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""aggregate var_samp on columns"""
type dr_ticket_groups_var_samp_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""aggregate variance on columns"""
type dr_ticket_groups_variance_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""
columns and relationships of "dr_ticket_tax_rules"
"""
type dr_ticket_tax_rules {
   created_at: timestamptz! 
   id: uuid! 
  """An object relationship"""
 tax_rule: dr_tax_rules
   tax_rule_id: uuid! 
  """An object relationship"""
 ticket: dr_tickets
   ticket_id: uuid! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_ticket_tax_rules"
"""
type dr_ticket_tax_rules_aggregate {
   aggregate: dr_ticket_tax_rules_aggregate_fields
   nodes: [dr_ticket_tax_rules! ]! 
}

"""
aggregate fields of "dr_ticket_tax_rules"
"""
type dr_ticket_tax_rules_aggregate_fields {
   count(columns: [dr_ticket_tax_rules_select_column! ], distinct: Boolean): Int! 
   max: dr_ticket_tax_rules_max_fields
   min: dr_ticket_tax_rules_min_fields
}

"""
Boolean expression to filter rows from the table "dr_ticket_tax_rules". All fields are combined with a logical 'AND'.
"""
input dr_ticket_tax_rules_bool_exp {
  _and: [dr_ticket_tax_rules_bool_exp! ]
  _not: dr_ticket_tax_rules_bool_exp
  _or: [dr_ticket_tax_rules_bool_exp! ]
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  tax_rule: dr_tax_rules_bool_exp
  tax_rule_id: uuid_comparison_exp
  ticket: dr_tickets_bool_exp
  ticket_id: uuid_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_ticket_tax_rules"
"""
enum dr_ticket_tax_rules_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_ticket_tax_rules_pkey
}

"""
input type for inserting data into table "dr_ticket_tax_rules"
"""
input dr_ticket_tax_rules_insert_input {
  created_at: timestamptz! 
  id: uuid! 
  tax_rule: dr_tax_rules_obj_rel_insert_input
  tax_rule_id: uuid! 
  ticket: dr_tickets_obj_rel_insert_input
  ticket_id: uuid! 
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_ticket_tax_rules_max_fields {
   created_at: timestamptz
   id: uuid
   tax_rule_id: uuid
   ticket_id: uuid
   updated_at: timestamptz
}

"""aggregate min on columns"""
type dr_ticket_tax_rules_min_fields {
   created_at: timestamptz
   id: uuid
   tax_rule_id: uuid
   ticket_id: uuid
   updated_at: timestamptz
}

"""
response of any mutation on the table "dr_ticket_tax_rules"
"""
type dr_ticket_tax_rules_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_ticket_tax_rules! ]! 
}

"""
on_conflict condition type for table "dr_ticket_tax_rules"
"""
input dr_ticket_tax_rules_on_conflict {
  constraint: dr_ticket_tax_rules_constraint! 
  update_columns: [dr_ticket_tax_rules_update_column! ]! 
  where: dr_ticket_tax_rules_bool_exp
}

"""Ordering options when selecting data from "dr_ticket_tax_rules"."""
input dr_ticket_tax_rules_order_by {
  created_at: order_by
  id: order_by
  tax_rule: dr_tax_rules_order_by
  tax_rule_id: order_by
  ticket: dr_tickets_order_by
  ticket_id: order_by
  updated_at: order_by
}

"""primary key columns input for table: dr_ticket_tax_rules"""
input dr_ticket_tax_rules_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_ticket_tax_rules"
"""
enum dr_ticket_tax_rules_select_column {
  """column name"""
created_at
  """column name"""
id
  """column name"""
tax_rule_id
  """column name"""
ticket_id
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_ticket_tax_rules"
"""
input dr_ticket_tax_rules_set_input {
  created_at: timestamptz
  id: uuid
  tax_rule_id: uuid
  ticket_id: uuid
  updated_at: timestamptz
}

"""
Streaming cursor of the table "dr_ticket_tax_rules"
"""
input dr_ticket_tax_rules_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_ticket_tax_rules_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_ticket_tax_rules_stream_cursor_value_input {
  created_at: timestamptz
  id: uuid
  tax_rule_id: uuid
  ticket_id: uuid
  updated_at: timestamptz
}

"""
update columns of table "dr_ticket_tax_rules"
"""
enum dr_ticket_tax_rules_update_column {
  """column name"""
created_at
  """column name"""
id
  """column name"""
tax_rule_id
  """column name"""
ticket_id
  """column name"""
updated_at
}

input dr_ticket_tax_rules_updates {
  """sets the columns of the filtered rows to the given values"""
_set: dr_ticket_tax_rules_set_input
  where: dr_ticket_tax_rules_bool_exp! 
}

"""
columns and relationships of "dr_ticket_tax_rules_view"
"""
type dr_ticket_tax_rules_view {
  """An object relationship"""
 tax_rule: dr_tax_rules
   tax_rule_id: uuid
  """An object relationship"""
 ticket: dr_tickets
   ticket_id: uuid
}

"""
aggregated selection of "dr_ticket_tax_rules_view"
"""
type dr_ticket_tax_rules_view_aggregate {
   aggregate: dr_ticket_tax_rules_view_aggregate_fields
   nodes: [dr_ticket_tax_rules_view! ]! 
}

input dr_ticket_tax_rules_view_aggregate_bool_exp {
  count: dr_ticket_tax_rules_view_aggregate_bool_exp_count
}

input dr_ticket_tax_rules_view_aggregate_bool_exp_count {
  arguments: [dr_ticket_tax_rules_view_select_column! ]
  distinct: Boolean
  filter: dr_ticket_tax_rules_view_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_ticket_tax_rules_view"
"""
type dr_ticket_tax_rules_view_aggregate_fields {
   count(columns: [dr_ticket_tax_rules_view_select_column! ], distinct: Boolean): Int! 
   max: dr_ticket_tax_rules_view_max_fields
   min: dr_ticket_tax_rules_view_min_fields
}

"""
order by aggregate values of table "dr_ticket_tax_rules_view"
"""
input dr_ticket_tax_rules_view_aggregate_order_by {
  count: order_by
  max: dr_ticket_tax_rules_view_max_order_by
  min: dr_ticket_tax_rules_view_min_order_by
}

"""
input type for inserting array relation for remote table "dr_ticket_tax_rules_view"
"""
input dr_ticket_tax_rules_view_arr_rel_insert_input {
  data: [dr_ticket_tax_rules_view_insert_input! ]! 
}

"""
Boolean expression to filter rows from the table "dr_ticket_tax_rules_view". All fields are combined with a logical 'AND'.
"""
input dr_ticket_tax_rules_view_bool_exp {
  _and: [dr_ticket_tax_rules_view_bool_exp! ]
  _not: dr_ticket_tax_rules_view_bool_exp
  _or: [dr_ticket_tax_rules_view_bool_exp! ]
  tax_rule: dr_tax_rules_bool_exp
  tax_rule_id: uuid_comparison_exp
  ticket: dr_tickets_bool_exp
  ticket_id: uuid_comparison_exp
}

"""
input type for inserting data into table "dr_ticket_tax_rules_view"
"""
input dr_ticket_tax_rules_view_insert_input {
  tax_rule: dr_tax_rules_obj_rel_insert_input
  tax_rule_id: uuid
  ticket: dr_tickets_obj_rel_insert_input
  ticket_id: uuid
}

"""aggregate max on columns"""
type dr_ticket_tax_rules_view_max_fields {
   tax_rule_id: uuid
   ticket_id: uuid
}

"""
order by max() on columns of table "dr_ticket_tax_rules_view"
"""
input dr_ticket_tax_rules_view_max_order_by {
  tax_rule_id: order_by
  ticket_id: order_by
}

"""aggregate min on columns"""
type dr_ticket_tax_rules_view_min_fields {
   tax_rule_id: uuid
   ticket_id: uuid
}

"""
order by min() on columns of table "dr_ticket_tax_rules_view"
"""
input dr_ticket_tax_rules_view_min_order_by {
  tax_rule_id: order_by
  ticket_id: order_by
}

"""Ordering options when selecting data from "dr_ticket_tax_rules_view"."""
input dr_ticket_tax_rules_view_order_by {
  tax_rule: dr_tax_rules_order_by
  tax_rule_id: order_by
  ticket: dr_tickets_order_by
  ticket_id: order_by
}

"""
select columns of table "dr_ticket_tax_rules_view"
"""
enum dr_ticket_tax_rules_view_select_column {
  """column name"""
tax_rule_id
  """column name"""
ticket_id
}

"""
Streaming cursor of the table "dr_ticket_tax_rules_view"
"""
input dr_ticket_tax_rules_view_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_ticket_tax_rules_view_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_ticket_tax_rules_view_stream_cursor_value_input {
  tax_rule_id: uuid
  ticket_id: uuid
}

"""
columns and relationships of "dr_tickets"
"""
type dr_tickets {
  """An object relationship"""
 active_count: dr_attendee_ticket_count
   archived: Boolean! 
  """An array relationship"""
 attendee_tickets("""distinct select on columns"""
distinct_on: [dr_attendee_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_tickets_order_by! ], """filter the rows returned"""
where: dr_attendee_tickets_bool_exp): [dr_attendee_tickets! ]! 
  """An aggregate relationship"""
 attendee_tickets_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_tickets_order_by! ], """filter the rows returned"""
where: dr_attendee_tickets_bool_exp): dr_attendee_tickets_aggregate! 
   available_from: date
   available_to: date
  """An array relationship"""
 coupons("""distinct select on columns"""
distinct_on: [dr_ticket_coupons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_coupons_view_order_by! ], """filter the rows returned"""
where: dr_ticket_coupons_view_bool_exp): [dr_ticket_coupons_view! ]! 
  """An aggregate relationship"""
 coupons_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_coupons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_coupons_view_order_by! ], """filter the rows returned"""
where: dr_ticket_coupons_view_bool_exp): dr_ticket_coupons_view_aggregate! 
   created_at: timestamptz! 
   description: String
   display_order: Int! 
   event_id: Int! 
  """An object relationship"""
 group: dr_ticket_groups
   hidden: Boolean! 
   id: uuid! 
   max_per_order: Int
   name: String! 
   price: Int! 
   quantity_available: Int
  """An array relationship"""
 tax_rules("""distinct select on columns"""
distinct_on: [dr_ticket_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_ticket_tax_rules_view_bool_exp): [dr_ticket_tax_rules_view! ]! 
  """An aggregate relationship"""
 tax_rules_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_ticket_tax_rules_view_bool_exp): dr_ticket_tax_rules_view_aggregate! 
  """An array relationship"""
 ticket_addons("""distinct select on columns"""
distinct_on: [dr_ticket_addons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_addons_view_order_by! ], """filter the rows returned"""
where: dr_ticket_addons_view_bool_exp): [dr_ticket_addons_view! ]! 
  """An aggregate relationship"""
 ticket_addons_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_addons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_addons_view_order_by! ], """filter the rows returned"""
where: dr_ticket_addons_view_bool_exp): dr_ticket_addons_view_aggregate! 
   ticket_group_id: Int
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_tickets"
"""
type dr_tickets_aggregate {
   aggregate: dr_tickets_aggregate_fields
   nodes: [dr_tickets! ]! 
}

input dr_tickets_aggregate_bool_exp {
  bool_and: dr_tickets_aggregate_bool_exp_bool_and
  bool_or: dr_tickets_aggregate_bool_exp_bool_or
  count: dr_tickets_aggregate_bool_exp_count
}

input dr_tickets_aggregate_bool_exp_bool_and {
  arguments: dr_tickets_select_column_dr_tickets_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: dr_tickets_bool_exp
  predicate: Boolean_comparison_exp! 
}

input dr_tickets_aggregate_bool_exp_bool_or {
  arguments: dr_tickets_select_column_dr_tickets_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: dr_tickets_bool_exp
  predicate: Boolean_comparison_exp! 
}

input dr_tickets_aggregate_bool_exp_count {
  arguments: [dr_tickets_select_column! ]
  distinct: Boolean
  filter: dr_tickets_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_tickets"
"""
type dr_tickets_aggregate_fields {
   avg: dr_tickets_avg_fields
   count(columns: [dr_tickets_select_column! ], distinct: Boolean): Int! 
   max: dr_tickets_max_fields
   min: dr_tickets_min_fields
   stddev: dr_tickets_stddev_fields
   stddev_pop: dr_tickets_stddev_pop_fields
   stddev_samp: dr_tickets_stddev_samp_fields
   sum: dr_tickets_sum_fields
   var_pop: dr_tickets_var_pop_fields
   var_samp: dr_tickets_var_samp_fields
   variance: dr_tickets_variance_fields
}

"""
order by aggregate values of table "dr_tickets"
"""
input dr_tickets_aggregate_order_by {
  avg: dr_tickets_avg_order_by
  count: order_by
  max: dr_tickets_max_order_by
  min: dr_tickets_min_order_by
  stddev: dr_tickets_stddev_order_by
  stddev_pop: dr_tickets_stddev_pop_order_by
  stddev_samp: dr_tickets_stddev_samp_order_by
  sum: dr_tickets_sum_order_by
  var_pop: dr_tickets_var_pop_order_by
  var_samp: dr_tickets_var_samp_order_by
  variance: dr_tickets_variance_order_by
}

"""
input type for inserting array relation for remote table "dr_tickets"
"""
input dr_tickets_arr_rel_insert_input {
  data: [dr_tickets_insert_input! ]! 
  """upsert condition"""
on_conflict: dr_tickets_on_conflict
}

"""aggregate avg on columns"""
type dr_tickets_avg_fields {
   display_order: Float
   event_id: Float
   max_per_order: Float
   price: Float
   quantity_available: Float
   ticket_group_id: Float
}

"""
order by avg() on columns of table "dr_tickets"
"""
input dr_tickets_avg_order_by {
  display_order: order_by
  event_id: order_by
  max_per_order: order_by
  price: order_by
  quantity_available: order_by
  ticket_group_id: order_by
}

"""
Boolean expression to filter rows from the table "dr_tickets". All fields are combined with a logical 'AND'.
"""
input dr_tickets_bool_exp {
  _and: [dr_tickets_bool_exp! ]
  _not: dr_tickets_bool_exp
  _or: [dr_tickets_bool_exp! ]
  active_count: dr_attendee_ticket_count_bool_exp
  archived: Boolean_comparison_exp
  attendee_tickets: dr_attendee_tickets_bool_exp
  attendee_tickets_aggregate: dr_attendee_tickets_aggregate_bool_exp
  available_from: date_comparison_exp
  available_to: date_comparison_exp
  coupons: dr_ticket_coupons_view_bool_exp
  coupons_aggregate: dr_ticket_coupons_view_aggregate_bool_exp
  created_at: timestamptz_comparison_exp
  description: String_comparison_exp
  display_order: Int_comparison_exp
  event_id: Int_comparison_exp
  group: dr_ticket_groups_bool_exp
  hidden: Boolean_comparison_exp
  id: uuid_comparison_exp
  max_per_order: Int_comparison_exp
  name: String_comparison_exp
  price: Int_comparison_exp
  quantity_available: Int_comparison_exp
  tax_rules: dr_ticket_tax_rules_view_bool_exp
  tax_rules_aggregate: dr_ticket_tax_rules_view_aggregate_bool_exp
  ticket_addons: dr_ticket_addons_view_bool_exp
  ticket_addons_aggregate: dr_ticket_addons_view_aggregate_bool_exp
  ticket_group_id: Int_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_tickets"
"""
enum dr_tickets_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_tickets_pkey
}

"""
input type for incrementing numeric columns in table "dr_tickets"
"""
input dr_tickets_inc_input {
  display_order: Int
  event_id: Int
  max_per_order: Int
  price: Int
  quantity_available: Int
  ticket_group_id: Int
}

"""
input type for inserting data into table "dr_tickets"
"""
input dr_tickets_insert_input {
  active_count: dr_attendee_ticket_count_obj_rel_insert_input
  archived: Boolean! 
  attendee_tickets: dr_attendee_tickets_arr_rel_insert_input
  available_from: date
  available_to: date
  coupons: dr_ticket_coupons_view_arr_rel_insert_input
  created_at: timestamptz! 
  description: String
  display_order: Int! 
  event_id: Int! 
  group: dr_ticket_groups_obj_rel_insert_input
  hidden: Boolean! 
  id: uuid! 
  max_per_order: Int
  name: String! 
  price: Int! 
  quantity_available: Int
  tax_rules: dr_ticket_tax_rules_view_arr_rel_insert_input
  ticket_addons: dr_ticket_addons_view_arr_rel_insert_input
  ticket_group_id: Int
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_tickets_max_fields {
   available_from: date
   available_to: date
   created_at: timestamptz
   description: String
   display_order: Int
   event_id: Int
   id: uuid
   max_per_order: Int
   name: String
   price: Int
   quantity_available: Int
   ticket_group_id: Int
   updated_at: timestamptz
}

"""
order by max() on columns of table "dr_tickets"
"""
input dr_tickets_max_order_by {
  available_from: order_by
  available_to: order_by
  created_at: order_by
  description: order_by
  display_order: order_by
  event_id: order_by
  id: order_by
  max_per_order: order_by
  name: order_by
  price: order_by
  quantity_available: order_by
  ticket_group_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type dr_tickets_min_fields {
   available_from: date
   available_to: date
   created_at: timestamptz
   description: String
   display_order: Int
   event_id: Int
   id: uuid
   max_per_order: Int
   name: String
   price: Int
   quantity_available: Int
   ticket_group_id: Int
   updated_at: timestamptz
}

"""
order by min() on columns of table "dr_tickets"
"""
input dr_tickets_min_order_by {
  available_from: order_by
  available_to: order_by
  created_at: order_by
  description: order_by
  display_order: order_by
  event_id: order_by
  id: order_by
  max_per_order: order_by
  name: order_by
  price: order_by
  quantity_available: order_by
  ticket_group_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "dr_tickets"
"""
type dr_tickets_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_tickets! ]! 
}

"""
input type for inserting object relation for remote table "dr_tickets"
"""
input dr_tickets_obj_rel_insert_input {
  data: dr_tickets_insert_input! 
  """upsert condition"""
on_conflict: dr_tickets_on_conflict
}

"""
on_conflict condition type for table "dr_tickets"
"""
input dr_tickets_on_conflict {
  constraint: dr_tickets_constraint! 
  update_columns: [dr_tickets_update_column! ]! 
  where: dr_tickets_bool_exp
}

"""Ordering options when selecting data from "dr_tickets"."""
input dr_tickets_order_by {
  active_count: dr_attendee_ticket_count_order_by
  archived: order_by
  attendee_tickets_aggregate: dr_attendee_tickets_aggregate_order_by
  available_from: order_by
  available_to: order_by
  coupons_aggregate: dr_ticket_coupons_view_aggregate_order_by
  created_at: order_by
  description: order_by
  display_order: order_by
  event_id: order_by
  group: dr_ticket_groups_order_by
  hidden: order_by
  id: order_by
  max_per_order: order_by
  name: order_by
  price: order_by
  quantity_available: order_by
  tax_rules_aggregate: dr_ticket_tax_rules_view_aggregate_order_by
  ticket_addons_aggregate: dr_ticket_addons_view_aggregate_order_by
  ticket_group_id: order_by
  updated_at: order_by
}

"""primary key columns input for table: dr_tickets"""
input dr_tickets_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_tickets"
"""
enum dr_tickets_select_column {
  """column name"""
archived
  """column name"""
available_from
  """column name"""
available_to
  """column name"""
created_at
  """column name"""
description
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
hidden
  """column name"""
id
  """column name"""
max_per_order
  """column name"""
name
  """column name"""
price
  """column name"""
quantity_available
  """column name"""
ticket_group_id
  """column name"""
updated_at
}

"""
select "dr_tickets_aggregate_bool_exp_bool_and_arguments_columns" columns of table "dr_tickets"
"""
enum dr_tickets_select_column_dr_tickets_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
archived
  """column name"""
hidden
}

"""
select "dr_tickets_aggregate_bool_exp_bool_or_arguments_columns" columns of table "dr_tickets"
"""
enum dr_tickets_select_column_dr_tickets_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
archived
  """column name"""
hidden
}

"""
input type for updating data in table "dr_tickets"
"""
input dr_tickets_set_input {
  archived: Boolean
  available_from: date
  available_to: date
  created_at: timestamptz
  description: String
  display_order: Int
  event_id: Int
  hidden: Boolean
  id: uuid
  max_per_order: Int
  name: String
  price: Int
  quantity_available: Int
  ticket_group_id: Int
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type dr_tickets_stddev_fields {
   display_order: Float
   event_id: Float
   max_per_order: Float
   price: Float
   quantity_available: Float
   ticket_group_id: Float
}

"""
order by stddev() on columns of table "dr_tickets"
"""
input dr_tickets_stddev_order_by {
  display_order: order_by
  event_id: order_by
  max_per_order: order_by
  price: order_by
  quantity_available: order_by
  ticket_group_id: order_by
}

"""aggregate stddev_pop on columns"""
type dr_tickets_stddev_pop_fields {
   display_order: Float
   event_id: Float
   max_per_order: Float
   price: Float
   quantity_available: Float
   ticket_group_id: Float
}

"""
order by stddev_pop() on columns of table "dr_tickets"
"""
input dr_tickets_stddev_pop_order_by {
  display_order: order_by
  event_id: order_by
  max_per_order: order_by
  price: order_by
  quantity_available: order_by
  ticket_group_id: order_by
}

"""aggregate stddev_samp on columns"""
type dr_tickets_stddev_samp_fields {
   display_order: Float
   event_id: Float
   max_per_order: Float
   price: Float
   quantity_available: Float
   ticket_group_id: Float
}

"""
order by stddev_samp() on columns of table "dr_tickets"
"""
input dr_tickets_stddev_samp_order_by {
  display_order: order_by
  event_id: order_by
  max_per_order: order_by
  price: order_by
  quantity_available: order_by
  ticket_group_id: order_by
}

"""
Streaming cursor of the table "dr_tickets"
"""
input dr_tickets_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_tickets_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_tickets_stream_cursor_value_input {
  archived: Boolean
  available_from: date
  available_to: date
  created_at: timestamptz
  description: String
  display_order: Int
  event_id: Int
  hidden: Boolean
  id: uuid
  max_per_order: Int
  name: String
  price: Int
  quantity_available: Int
  ticket_group_id: Int
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type dr_tickets_sum_fields {
   display_order: Int
   event_id: Int
   max_per_order: Int
   price: Int
   quantity_available: Int
   ticket_group_id: Int
}

"""
order by sum() on columns of table "dr_tickets"
"""
input dr_tickets_sum_order_by {
  display_order: order_by
  event_id: order_by
  max_per_order: order_by
  price: order_by
  quantity_available: order_by
  ticket_group_id: order_by
}

"""
update columns of table "dr_tickets"
"""
enum dr_tickets_update_column {
  """column name"""
archived
  """column name"""
available_from
  """column name"""
available_to
  """column name"""
created_at
  """column name"""
description
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
hidden
  """column name"""
id
  """column name"""
max_per_order
  """column name"""
name
  """column name"""
price
  """column name"""
quantity_available
  """column name"""
ticket_group_id
  """column name"""
updated_at
}

input dr_tickets_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_tickets_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_tickets_set_input
  where: dr_tickets_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_tickets_var_pop_fields {
   display_order: Float
   event_id: Float
   max_per_order: Float
   price: Float
   quantity_available: Float
   ticket_group_id: Float
}

"""
order by var_pop() on columns of table "dr_tickets"
"""
input dr_tickets_var_pop_order_by {
  display_order: order_by
  event_id: order_by
  max_per_order: order_by
  price: order_by
  quantity_available: order_by
  ticket_group_id: order_by
}

"""aggregate var_samp on columns"""
type dr_tickets_var_samp_fields {
   display_order: Float
   event_id: Float
   max_per_order: Float
   price: Float
   quantity_available: Float
   ticket_group_id: Float
}

"""
order by var_samp() on columns of table "dr_tickets"
"""
input dr_tickets_var_samp_order_by {
  display_order: order_by
  event_id: order_by
  max_per_order: order_by
  price: order_by
  quantity_available: order_by
  ticket_group_id: order_by
}

"""aggregate variance on columns"""
type dr_tickets_variance_fields {
   display_order: Float
   event_id: Float
   max_per_order: Float
   price: Float
   quantity_available: Float
   ticket_group_id: Float
}

"""
order by variance() on columns of table "dr_tickets"
"""
input dr_tickets_variance_order_by {
  display_order: order_by
  event_id: order_by
  max_per_order: order_by
  price: order_by
  quantity_available: order_by
  ticket_group_id: order_by
}

"""
columns and relationships of "dr_tickets_view"
"""
type dr_tickets_view {
  """An object relationship"""
 attendee_tickets: dr_attendee_tickets
   event_id: Int
  """An object relationship"""
 group: dr_ticket_groups
   id: uuid
   ticket_group_id: Int
}

"""
aggregated selection of "dr_tickets_view"
"""
type dr_tickets_view_aggregate {
   aggregate: dr_tickets_view_aggregate_fields
   nodes: [dr_tickets_view! ]! 
}

"""
aggregate fields of "dr_tickets_view"
"""
type dr_tickets_view_aggregate_fields {
   avg: dr_tickets_view_avg_fields
   count(columns: [dr_tickets_view_select_column! ], distinct: Boolean): Int! 
   max: dr_tickets_view_max_fields
   min: dr_tickets_view_min_fields
   stddev: dr_tickets_view_stddev_fields
   stddev_pop: dr_tickets_view_stddev_pop_fields
   stddev_samp: dr_tickets_view_stddev_samp_fields
   sum: dr_tickets_view_sum_fields
   var_pop: dr_tickets_view_var_pop_fields
   var_samp: dr_tickets_view_var_samp_fields
   variance: dr_tickets_view_variance_fields
}

"""aggregate avg on columns"""
type dr_tickets_view_avg_fields {
   event_id: Float
   ticket_group_id: Float
}

"""
Boolean expression to filter rows from the table "dr_tickets_view". All fields are combined with a logical 'AND'.
"""
input dr_tickets_view_bool_exp {
  _and: [dr_tickets_view_bool_exp! ]
  _not: dr_tickets_view_bool_exp
  _or: [dr_tickets_view_bool_exp! ]
  attendee_tickets: dr_attendee_tickets_bool_exp
  event_id: Int_comparison_exp
  group: dr_ticket_groups_bool_exp
  id: uuid_comparison_exp
  ticket_group_id: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "dr_tickets_view"
"""
input dr_tickets_view_inc_input {
  event_id: Int
  ticket_group_id: Int
}

"""
input type for inserting data into table "dr_tickets_view"
"""
input dr_tickets_view_insert_input {
  attendee_tickets: dr_attendee_tickets_obj_rel_insert_input
  event_id: Int
  group: dr_ticket_groups_obj_rel_insert_input
  id: uuid
  ticket_group_id: Int
}

"""aggregate max on columns"""
type dr_tickets_view_max_fields {
   event_id: Int
   id: uuid
   ticket_group_id: Int
}

"""aggregate min on columns"""
type dr_tickets_view_min_fields {
   event_id: Int
   id: uuid
   ticket_group_id: Int
}

"""
response of any mutation on the table "dr_tickets_view"
"""
type dr_tickets_view_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_tickets_view! ]! 
}

"""
input type for inserting object relation for remote table "dr_tickets_view"
"""
input dr_tickets_view_obj_rel_insert_input {
  data: dr_tickets_view_insert_input! 
}

"""Ordering options when selecting data from "dr_tickets_view"."""
input dr_tickets_view_order_by {
  attendee_tickets: dr_attendee_tickets_order_by
  event_id: order_by
  group: dr_ticket_groups_order_by
  id: order_by
  ticket_group_id: order_by
}

"""
select columns of table "dr_tickets_view"
"""
enum dr_tickets_view_select_column {
  """column name"""
event_id
  """column name"""
id
  """column name"""
ticket_group_id
}

"""
input type for updating data in table "dr_tickets_view"
"""
input dr_tickets_view_set_input {
  event_id: Int
  id: uuid
  ticket_group_id: Int
}

"""aggregate stddev on columns"""
type dr_tickets_view_stddev_fields {
   event_id: Float
   ticket_group_id: Float
}

"""aggregate stddev_pop on columns"""
type dr_tickets_view_stddev_pop_fields {
   event_id: Float
   ticket_group_id: Float
}

"""aggregate stddev_samp on columns"""
type dr_tickets_view_stddev_samp_fields {
   event_id: Float
   ticket_group_id: Float
}

"""
Streaming cursor of the table "dr_tickets_view"
"""
input dr_tickets_view_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_tickets_view_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_tickets_view_stream_cursor_value_input {
  event_id: Int
  id: uuid
  ticket_group_id: Int
}

"""aggregate sum on columns"""
type dr_tickets_view_sum_fields {
   event_id: Int
   ticket_group_id: Int
}

input dr_tickets_view_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_tickets_view_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_tickets_view_set_input
  where: dr_tickets_view_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_tickets_view_var_pop_fields {
   event_id: Float
   ticket_group_id: Float
}

"""aggregate var_samp on columns"""
type dr_tickets_view_var_samp_fields {
   event_id: Float
   ticket_group_id: Float
}

"""aggregate variance on columns"""
type dr_tickets_view_variance_fields {
   event_id: Float
   ticket_group_id: Float
}

"""
columns and relationships of "dr_transaction_types"
"""
type dr_transaction_types {
   comment: String! 
   value: String! 
}

"""
aggregated selection of "dr_transaction_types"
"""
type dr_transaction_types_aggregate {
   aggregate: dr_transaction_types_aggregate_fields
   nodes: [dr_transaction_types! ]! 
}

"""
aggregate fields of "dr_transaction_types"
"""
type dr_transaction_types_aggregate_fields {
   count(columns: [dr_transaction_types_select_column! ], distinct: Boolean): Int! 
   max: dr_transaction_types_max_fields
   min: dr_transaction_types_min_fields
}

"""
Boolean expression to filter rows from the table "dr_transaction_types". All fields are combined with a logical 'AND'.
"""
input dr_transaction_types_bool_exp {
  _and: [dr_transaction_types_bool_exp! ]
  _not: dr_transaction_types_bool_exp
  _or: [dr_transaction_types_bool_exp! ]
  comment: String_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "dr_transaction_types"
"""
enum dr_transaction_types_constraint {
  """
  unique or primary key constraint on columns "value"
  """
dr_transaction_types_pkey
}

enum dr_transaction_types_enum {
  """A failed payment"""
Failed
  """A complete payment"""
Payment
  """A complete or partial payment refund"""
Refund
}

"""
Boolean expression to compare columns of type "dr_transaction_types_enum". All fields are combined with logical 'AND'.
"""
input dr_transaction_types_enum_comparison_exp {
  _eq: dr_transaction_types_enum
  _in: [dr_transaction_types_enum! ]
  _is_null: Boolean
  _neq: dr_transaction_types_enum
  _nin: [dr_transaction_types_enum! ]
}

"""
input type for inserting data into table "dr_transaction_types"
"""
input dr_transaction_types_insert_input {
  comment: String! 
  value: String! 
}

"""aggregate max on columns"""
type dr_transaction_types_max_fields {
   comment: String
   value: String
}

"""aggregate min on columns"""
type dr_transaction_types_min_fields {
   comment: String
   value: String
}

"""
response of any mutation on the table "dr_transaction_types"
"""
type dr_transaction_types_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_transaction_types! ]! 
}

"""
on_conflict condition type for table "dr_transaction_types"
"""
input dr_transaction_types_on_conflict {
  constraint: dr_transaction_types_constraint! 
  update_columns: [dr_transaction_types_update_column! ]! 
  where: dr_transaction_types_bool_exp
}

"""Ordering options when selecting data from "dr_transaction_types"."""
input dr_transaction_types_order_by {
  comment: order_by
  value: order_by
}

"""primary key columns input for table: dr_transaction_types"""
input dr_transaction_types_pk_columns_input {
  value: String! 
}

"""
select columns of table "dr_transaction_types"
"""
enum dr_transaction_types_select_column {
  """column name"""
comment
  """column name"""
value
}

"""
input type for updating data in table "dr_transaction_types"
"""
input dr_transaction_types_set_input {
  comment: String
  value: String
}

"""
Streaming cursor of the table "dr_transaction_types"
"""
input dr_transaction_types_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_transaction_types_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_transaction_types_stream_cursor_value_input {
  comment: String
  value: String
}

"""
update columns of table "dr_transaction_types"
"""
enum dr_transaction_types_update_column {
  """column name"""
comment
  """column name"""
value
}

input dr_transaction_types_updates {
  """sets the columns of the filtered rows to the given values"""
_set: dr_transaction_types_set_input
  where: dr_transaction_types_bool_exp! 
}

"""
columns and relationships of "dr_transactions"
"""
type dr_transactions {
  """An array relationship"""
 addons("""distinct select on columns"""
distinct_on: [dr_attendee_addons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addons_order_by! ], """filter the rows returned"""
where: dr_attendee_addons_bool_exp): [dr_attendee_addons! ]! 
  """An aggregate relationship"""
 addons_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_addons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addons_order_by! ], """filter the rows returned"""
where: dr_attendee_addons_bool_exp): dr_attendee_addons_aggregate! 
   amount_subtotal: Int! 
   amount_total: Int! 
   authorize_transaction_id: String
   card_brand: String
   card_expire_month: Int
   card_expire_year: Int
   card_last4: String
   created_at: timestamptz! 
   id: uuid! 
  """An object relationship"""
 initiated_by_user: users
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
 initiated_by_user_id: Int
  """An object relationship"""
 order: dr_orders
   order_id: uuid! 
   paypal_order_id: String
   paypal_transaction_id: String
  """An array relationship"""
 refunded_addons("""distinct select on columns"""
distinct_on: [dr_attendee_addons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addons_order_by! ], """filter the rows returned"""
where: dr_attendee_addons_bool_exp): [dr_attendee_addons! ]! 
  """An aggregate relationship"""
 refunded_addons_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_addons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addons_order_by! ], """filter the rows returned"""
where: dr_attendee_addons_bool_exp): dr_attendee_addons_aggregate! 
  """An array relationship"""
 refunded_tickets("""distinct select on columns"""
distinct_on: [dr_attendee_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_tickets_order_by! ], """filter the rows returned"""
where: dr_attendee_tickets_bool_exp): [dr_attendee_tickets! ]! 
  """An aggregate relationship"""
 refunded_tickets_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_tickets_order_by! ], """filter the rows returned"""
where: dr_attendee_tickets_bool_exp): dr_attendee_tickets_aggregate! 
   short_id: String! 
   stripe_payment_intents_id: String
  """An array relationship"""
 tickets("""distinct select on columns"""
distinct_on: [dr_attendee_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_tickets_order_by! ], """filter the rows returned"""
where: dr_attendee_tickets_bool_exp): [dr_attendee_tickets! ]! 
  """An aggregate relationship"""
 tickets_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_tickets_order_by! ], """filter the rows returned"""
where: dr_attendee_tickets_bool_exp): dr_attendee_tickets_aggregate! 
   transaction_type: dr_transaction_types_enum! 
   updated_at: timestamptz! 
   vat_code_of_client_at_creation: vat_code
}

"""
aggregated selection of "dr_transactions"
"""
type dr_transactions_aggregate {
   aggregate: dr_transactions_aggregate_fields
   nodes: [dr_transactions! ]! 
}

input dr_transactions_aggregate_bool_exp {
  count: dr_transactions_aggregate_bool_exp_count
}

input dr_transactions_aggregate_bool_exp_count {
  arguments: [dr_transactions_select_column! ]
  distinct: Boolean
  filter: dr_transactions_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "dr_transactions"
"""
type dr_transactions_aggregate_fields {
   avg: dr_transactions_avg_fields
   count(columns: [dr_transactions_select_column! ], distinct: Boolean): Int! 
   max: dr_transactions_max_fields
   min: dr_transactions_min_fields
   stddev: dr_transactions_stddev_fields
   stddev_pop: dr_transactions_stddev_pop_fields
   stddev_samp: dr_transactions_stddev_samp_fields
   sum: dr_transactions_sum_fields
   var_pop: dr_transactions_var_pop_fields
   var_samp: dr_transactions_var_samp_fields
   variance: dr_transactions_variance_fields
}

"""
order by aggregate values of table "dr_transactions"
"""
input dr_transactions_aggregate_order_by {
  avg: dr_transactions_avg_order_by
  count: order_by
  max: dr_transactions_max_order_by
  min: dr_transactions_min_order_by
  stddev: dr_transactions_stddev_order_by
  stddev_pop: dr_transactions_stddev_pop_order_by
  stddev_samp: dr_transactions_stddev_samp_order_by
  sum: dr_transactions_sum_order_by
  var_pop: dr_transactions_var_pop_order_by
  var_samp: dr_transactions_var_samp_order_by
  variance: dr_transactions_variance_order_by
}

"""
input type for inserting array relation for remote table "dr_transactions"
"""
input dr_transactions_arr_rel_insert_input {
  data: [dr_transactions_insert_input! ]! 
  """upsert condition"""
on_conflict: dr_transactions_on_conflict
}

"""aggregate avg on columns"""
type dr_transactions_avg_fields {
   amount_subtotal: Float
   amount_total: Float
   card_expire_month: Float
   card_expire_year: Float
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
 initiated_by_user_id: Float
}

"""
order by avg() on columns of table "dr_transactions"
"""
input dr_transactions_avg_order_by {
  amount_subtotal: order_by
  amount_total: order_by
  card_expire_month: order_by
  card_expire_year: order_by
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
initiated_by_user_id: order_by
}

"""
Boolean expression to filter rows from the table "dr_transactions". All fields are combined with a logical 'AND'.
"""
input dr_transactions_bool_exp {
  _and: [dr_transactions_bool_exp! ]
  _not: dr_transactions_bool_exp
  _or: [dr_transactions_bool_exp! ]
  addons: dr_attendee_addons_bool_exp
  addons_aggregate: dr_attendee_addons_aggregate_bool_exp
  amount_subtotal: Int_comparison_exp
  amount_total: Int_comparison_exp
  authorize_transaction_id: String_comparison_exp
  card_brand: String_comparison_exp
  card_expire_month: Int_comparison_exp
  card_expire_year: Int_comparison_exp
  card_last4: String_comparison_exp
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  initiated_by_user: users_bool_exp
  initiated_by_user_id: Int_comparison_exp
  order: dr_orders_bool_exp
  order_id: uuid_comparison_exp
  paypal_order_id: String_comparison_exp
  paypal_transaction_id: String_comparison_exp
  refunded_addons: dr_attendee_addons_bool_exp
  refunded_addons_aggregate: dr_attendee_addons_aggregate_bool_exp
  refunded_tickets: dr_attendee_tickets_bool_exp
  refunded_tickets_aggregate: dr_attendee_tickets_aggregate_bool_exp
  short_id: String_comparison_exp
  stripe_payment_intents_id: String_comparison_exp
  tickets: dr_attendee_tickets_bool_exp
  tickets_aggregate: dr_attendee_tickets_aggregate_bool_exp
  transaction_type: dr_transaction_types_enum_comparison_exp
  updated_at: timestamptz_comparison_exp
  vat_code_of_client_at_creation: vat_code_comparison_exp
}

"""
unique or primary key constraints on table "dr_transactions"
"""
enum dr_transactions_constraint {
  """
  unique or primary key constraint on columns "id"
  """
dr_transactions_pkey
}

"""
input type for incrementing numeric columns in table "dr_transactions"
"""
input dr_transactions_inc_input {
  amount_subtotal: Int
  amount_total: Int
  card_expire_month: Int
  card_expire_year: Int
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
initiated_by_user_id: Int
}

"""
input type for inserting data into table "dr_transactions"
"""
input dr_transactions_insert_input {
  addons: dr_attendee_addons_arr_rel_insert_input
  amount_subtotal: Int! 
  amount_total: Int! 
  authorize_transaction_id: String
  card_brand: String
  card_expire_month: Int
  card_expire_year: Int
  card_last4: String
  created_at: timestamptz! 
  id: uuid! 
  initiated_by_user: users_obj_rel_insert_input
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
initiated_by_user_id: Int
  order: dr_orders_obj_rel_insert_input
  order_id: uuid! 
  paypal_order_id: String
  paypal_transaction_id: String
  refunded_addons: dr_attendee_addons_arr_rel_insert_input
  refunded_tickets: dr_attendee_tickets_arr_rel_insert_input
  short_id: String! 
  stripe_payment_intents_id: String
  tickets: dr_attendee_tickets_arr_rel_insert_input
  transaction_type: dr_transaction_types_enum! 
  updated_at: timestamptz! 
  vat_code_of_client_at_creation: vat_code
}

"""aggregate max on columns"""
type dr_transactions_max_fields {
   amount_subtotal: Int
   amount_total: Int
   authorize_transaction_id: String
   card_brand: String
   card_expire_month: Int
   card_expire_year: Int
   card_last4: String
   created_at: timestamptz
   id: uuid
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
 initiated_by_user_id: Int
   order_id: uuid
   paypal_order_id: String
   paypal_transaction_id: String
   short_id: String
   stripe_payment_intents_id: String
   updated_at: timestamptz
   vat_code_of_client_at_creation: vat_code
}

"""
order by max() on columns of table "dr_transactions"
"""
input dr_transactions_max_order_by {
  amount_subtotal: order_by
  amount_total: order_by
  authorize_transaction_id: order_by
  card_brand: order_by
  card_expire_month: order_by
  card_expire_year: order_by
  card_last4: order_by
  created_at: order_by
  id: order_by
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
initiated_by_user_id: order_by
  order_id: order_by
  paypal_order_id: order_by
  paypal_transaction_id: order_by
  short_id: order_by
  stripe_payment_intents_id: order_by
  updated_at: order_by
  vat_code_of_client_at_creation: order_by
}

"""aggregate min on columns"""
type dr_transactions_min_fields {
   amount_subtotal: Int
   amount_total: Int
   authorize_transaction_id: String
   card_brand: String
   card_expire_month: Int
   card_expire_year: Int
   card_last4: String
   created_at: timestamptz
   id: uuid
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
 initiated_by_user_id: Int
   order_id: uuid
   paypal_order_id: String
   paypal_transaction_id: String
   short_id: String
   stripe_payment_intents_id: String
   updated_at: timestamptz
   vat_code_of_client_at_creation: vat_code
}

"""
order by min() on columns of table "dr_transactions"
"""
input dr_transactions_min_order_by {
  amount_subtotal: order_by
  amount_total: order_by
  authorize_transaction_id: order_by
  card_brand: order_by
  card_expire_month: order_by
  card_expire_year: order_by
  card_last4: order_by
  created_at: order_by
  id: order_by
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
initiated_by_user_id: order_by
  order_id: order_by
  paypal_order_id: order_by
  paypal_transaction_id: order_by
  short_id: order_by
  stripe_payment_intents_id: order_by
  updated_at: order_by
  vat_code_of_client_at_creation: order_by
}

"""
response of any mutation on the table "dr_transactions"
"""
type dr_transactions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_transactions! ]! 
}

"""
on_conflict condition type for table "dr_transactions"
"""
input dr_transactions_on_conflict {
  constraint: dr_transactions_constraint! 
  update_columns: [dr_transactions_update_column! ]! 
  where: dr_transactions_bool_exp
}

"""Ordering options when selecting data from "dr_transactions"."""
input dr_transactions_order_by {
  addons_aggregate: dr_attendee_addons_aggregate_order_by
  amount_subtotal: order_by
  amount_total: order_by
  authorize_transaction_id: order_by
  card_brand: order_by
  card_expire_month: order_by
  card_expire_year: order_by
  card_last4: order_by
  created_at: order_by
  id: order_by
  initiated_by_user: users_order_by
  initiated_by_user_id: order_by
  order: dr_orders_order_by
  order_id: order_by
  paypal_order_id: order_by
  paypal_transaction_id: order_by
  refunded_addons_aggregate: dr_attendee_addons_aggregate_order_by
  refunded_tickets_aggregate: dr_attendee_tickets_aggregate_order_by
  short_id: order_by
  stripe_payment_intents_id: order_by
  tickets_aggregate: dr_attendee_tickets_aggregate_order_by
  transaction_type: order_by
  updated_at: order_by
  vat_code_of_client_at_creation: order_by
}

"""primary key columns input for table: dr_transactions"""
input dr_transactions_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_transactions"
"""
enum dr_transactions_select_column {
  """column name"""
amount_subtotal
  """column name"""
amount_total
  """column name"""
authorize_transaction_id
  """column name"""
card_brand
  """column name"""
card_expire_month
  """column name"""
card_expire_year
  """column name"""
card_last4
  """column name"""
created_at
  """column name"""
id
  """column name"""
initiated_by_user_id
  """column name"""
order_id
  """column name"""
paypal_order_id
  """column name"""
paypal_transaction_id
  """column name"""
short_id
  """column name"""
stripe_payment_intents_id
  """column name"""
transaction_type
  """column name"""
updated_at
  """column name"""
vat_code_of_client_at_creation
}

"""
input type for updating data in table "dr_transactions"
"""
input dr_transactions_set_input {
  amount_subtotal: Int
  amount_total: Int
  authorize_transaction_id: String
  card_brand: String
  card_expire_month: Int
  card_expire_year: Int
  card_last4: String
  created_at: timestamptz
  id: uuid
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
initiated_by_user_id: Int
  order_id: uuid
  paypal_order_id: String
  paypal_transaction_id: String
  short_id: String
  stripe_payment_intents_id: String
  transaction_type: dr_transaction_types_enum
  updated_at: timestamptz
  vat_code_of_client_at_creation: vat_code
}

"""aggregate stddev on columns"""
type dr_transactions_stddev_fields {
   amount_subtotal: Float
   amount_total: Float
   card_expire_month: Float
   card_expire_year: Float
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
 initiated_by_user_id: Float
}

"""
order by stddev() on columns of table "dr_transactions"
"""
input dr_transactions_stddev_order_by {
  amount_subtotal: order_by
  amount_total: order_by
  card_expire_month: order_by
  card_expire_year: order_by
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
initiated_by_user_id: order_by
}

"""aggregate stddev_pop on columns"""
type dr_transactions_stddev_pop_fields {
   amount_subtotal: Float
   amount_total: Float
   card_expire_month: Float
   card_expire_year: Float
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
 initiated_by_user_id: Float
}

"""
order by stddev_pop() on columns of table "dr_transactions"
"""
input dr_transactions_stddev_pop_order_by {
  amount_subtotal: order_by
  amount_total: order_by
  card_expire_month: order_by
  card_expire_year: order_by
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
initiated_by_user_id: order_by
}

"""aggregate stddev_samp on columns"""
type dr_transactions_stddev_samp_fields {
   amount_subtotal: Float
   amount_total: Float
   card_expire_month: Float
   card_expire_year: Float
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
 initiated_by_user_id: Float
}

"""
order by stddev_samp() on columns of table "dr_transactions"
"""
input dr_transactions_stddev_samp_order_by {
  amount_subtotal: order_by
  amount_total: order_by
  card_expire_month: order_by
  card_expire_year: order_by
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
initiated_by_user_id: order_by
}

"""
Streaming cursor of the table "dr_transactions"
"""
input dr_transactions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_transactions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_transactions_stream_cursor_value_input {
  amount_subtotal: Int
  amount_total: Int
  authorize_transaction_id: String
  card_brand: String
  card_expire_month: Int
  card_expire_year: Int
  card_last4: String
  created_at: timestamptz
  id: uuid
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
initiated_by_user_id: Int
  order_id: uuid
  paypal_order_id: String
  paypal_transaction_id: String
  short_id: String
  stripe_payment_intents_id: String
  transaction_type: dr_transaction_types_enum
  updated_at: timestamptz
  vat_code_of_client_at_creation: vat_code
}

"""aggregate sum on columns"""
type dr_transactions_sum_fields {
   amount_subtotal: Int
   amount_total: Int
   card_expire_month: Int
   card_expire_year: Int
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
 initiated_by_user_id: Int
}

"""
order by sum() on columns of table "dr_transactions"
"""
input dr_transactions_sum_order_by {
  amount_subtotal: order_by
  amount_total: order_by
  card_expire_month: order_by
  card_expire_year: order_by
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
initiated_by_user_id: order_by
}

"""
update columns of table "dr_transactions"
"""
enum dr_transactions_update_column {
  """column name"""
amount_subtotal
  """column name"""
amount_total
  """column name"""
authorize_transaction_id
  """column name"""
card_brand
  """column name"""
card_expire_month
  """column name"""
card_expire_year
  """column name"""
card_last4
  """column name"""
created_at
  """column name"""
id
  """column name"""
initiated_by_user_id
  """column name"""
order_id
  """column name"""
paypal_order_id
  """column name"""
paypal_transaction_id
  """column name"""
short_id
  """column name"""
stripe_payment_intents_id
  """column name"""
transaction_type
  """column name"""
updated_at
  """column name"""
vat_code_of_client_at_creation
}

input dr_transactions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_transactions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_transactions_set_input
  where: dr_transactions_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_transactions_var_pop_fields {
   amount_subtotal: Float
   amount_total: Float
   card_expire_month: Float
   card_expire_year: Float
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
 initiated_by_user_id: Float
}

"""
order by var_pop() on columns of table "dr_transactions"
"""
input dr_transactions_var_pop_order_by {
  amount_subtotal: order_by
  amount_total: order_by
  card_expire_month: order_by
  card_expire_year: order_by
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
initiated_by_user_id: order_by
}

"""aggregate var_samp on columns"""
type dr_transactions_var_samp_fields {
   amount_subtotal: Float
   amount_total: Float
   card_expire_month: Float
   card_expire_year: Float
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
 initiated_by_user_id: Float
}

"""
order by var_samp() on columns of table "dr_transactions"
"""
input dr_transactions_var_samp_order_by {
  amount_subtotal: order_by
  amount_total: order_by
  card_expire_month: order_by
  card_expire_year: order_by
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
initiated_by_user_id: order_by
}

"""aggregate variance on columns"""
type dr_transactions_variance_fields {
   amount_subtotal: Float
   amount_total: Float
   card_expire_month: Float
   card_expire_year: Float
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
 initiated_by_user_id: Float
}

"""
order by variance() on columns of table "dr_transactions"
"""
input dr_transactions_variance_order_by {
  amount_subtotal: order_by
  amount_total: order_by
  card_expire_month: order_by
  card_expire_year: order_by
  """
  The users id of the person who kicked off the request if it is not the owner of the order e.g. the admin that initiated a refund request
  """
initiated_by_user_id: order_by
}

"""
columns and relationships of "dr_vat_address"
"""
type dr_vat_address {
   address_line_1: String! 
   address_line_2: String
   company_name: String! 
   created_at: timestamptz! 
   event_id: Int! 
   id: uuid! 
   postcode: String! 
   town_city: String
   updated_at: timestamptz! 
}

"""
aggregated selection of "dr_vat_address"
"""
type dr_vat_address_aggregate {
   aggregate: dr_vat_address_aggregate_fields
   nodes: [dr_vat_address! ]! 
}

"""
aggregate fields of "dr_vat_address"
"""
type dr_vat_address_aggregate_fields {
   avg: dr_vat_address_avg_fields
   count(columns: [dr_vat_address_select_column! ], distinct: Boolean): Int! 
   max: dr_vat_address_max_fields
   min: dr_vat_address_min_fields
   stddev: dr_vat_address_stddev_fields
   stddev_pop: dr_vat_address_stddev_pop_fields
   stddev_samp: dr_vat_address_stddev_samp_fields
   sum: dr_vat_address_sum_fields
   var_pop: dr_vat_address_var_pop_fields
   var_samp: dr_vat_address_var_samp_fields
   variance: dr_vat_address_variance_fields
}

"""aggregate avg on columns"""
type dr_vat_address_avg_fields {
   event_id: Float
}

"""
Boolean expression to filter rows from the table "dr_vat_address". All fields are combined with a logical 'AND'.
"""
input dr_vat_address_bool_exp {
  _and: [dr_vat_address_bool_exp! ]
  _not: dr_vat_address_bool_exp
  _or: [dr_vat_address_bool_exp! ]
  address_line_1: String_comparison_exp
  address_line_2: String_comparison_exp
  company_name: String_comparison_exp
  created_at: timestamptz_comparison_exp
  event_id: Int_comparison_exp
  id: uuid_comparison_exp
  postcode: String_comparison_exp
  town_city: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "dr_vat_address"
"""
enum dr_vat_address_constraint {
  """
  unique or primary key constraint on columns "event_id"
  """
dr_vat_address_event_id_key
  """
  unique or primary key constraint on columns "id"
  """
dr_vat_address_pkey
}

"""
input type for incrementing numeric columns in table "dr_vat_address"
"""
input dr_vat_address_inc_input {
  event_id: Int
}

"""
input type for inserting data into table "dr_vat_address"
"""
input dr_vat_address_insert_input {
  address_line_1: String! 
  address_line_2: String
  company_name: String! 
  created_at: timestamptz! 
  event_id: Int! 
  id: uuid! 
  postcode: String! 
  town_city: String
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type dr_vat_address_max_fields {
   address_line_1: String
   address_line_2: String
   company_name: String
   created_at: timestamptz
   event_id: Int
   id: uuid
   postcode: String
   town_city: String
   updated_at: timestamptz
}

"""aggregate min on columns"""
type dr_vat_address_min_fields {
   address_line_1: String
   address_line_2: String
   company_name: String
   created_at: timestamptz
   event_id: Int
   id: uuid
   postcode: String
   town_city: String
   updated_at: timestamptz
}

"""
response of any mutation on the table "dr_vat_address"
"""
type dr_vat_address_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [dr_vat_address! ]! 
}

"""
on_conflict condition type for table "dr_vat_address"
"""
input dr_vat_address_on_conflict {
  constraint: dr_vat_address_constraint! 
  update_columns: [dr_vat_address_update_column! ]! 
  where: dr_vat_address_bool_exp
}

"""Ordering options when selecting data from "dr_vat_address"."""
input dr_vat_address_order_by {
  address_line_1: order_by
  address_line_2: order_by
  company_name: order_by
  created_at: order_by
  event_id: order_by
  id: order_by
  postcode: order_by
  town_city: order_by
  updated_at: order_by
}

"""primary key columns input for table: dr_vat_address"""
input dr_vat_address_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "dr_vat_address"
"""
enum dr_vat_address_select_column {
  """column name"""
address_line_1
  """column name"""
address_line_2
  """column name"""
company_name
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
id
  """column name"""
postcode
  """column name"""
town_city
  """column name"""
updated_at
}

"""
input type for updating data in table "dr_vat_address"
"""
input dr_vat_address_set_input {
  address_line_1: String
  address_line_2: String
  company_name: String
  created_at: timestamptz
  event_id: Int
  id: uuid
  postcode: String
  town_city: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type dr_vat_address_stddev_fields {
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type dr_vat_address_stddev_pop_fields {
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type dr_vat_address_stddev_samp_fields {
   event_id: Float
}

"""
Streaming cursor of the table "dr_vat_address"
"""
input dr_vat_address_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: dr_vat_address_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dr_vat_address_stream_cursor_value_input {
  address_line_1: String
  address_line_2: String
  company_name: String
  created_at: timestamptz
  event_id: Int
  id: uuid
  postcode: String
  town_city: String
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type dr_vat_address_sum_fields {
   event_id: Int
}

"""
update columns of table "dr_vat_address"
"""
enum dr_vat_address_update_column {
  """column name"""
address_line_1
  """column name"""
address_line_2
  """column name"""
company_name
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
id
  """column name"""
postcode
  """column name"""
town_city
  """column name"""
updated_at
}

input dr_vat_address_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: dr_vat_address_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: dr_vat_address_set_input
  where: dr_vat_address_bool_exp! 
}

"""aggregate var_pop on columns"""
type dr_vat_address_var_pop_fields {
   event_id: Float
}

"""aggregate var_samp on columns"""
type dr_vat_address_var_samp_fields {
   event_id: Float
}

"""aggregate variance on columns"""
type dr_vat_address_variance_fields {
   event_id: Float
}

scalar email_type 

"""
Boolean expression to compare columns of type "email_type". All fields are combined with logical 'AND'.
"""
input email_type_comparison_exp {
  _eq: email_type
  _gt: email_type
  _gte: email_type
  _in: [email_type! ]
  _is_null: Boolean
  _lt: email_type
  _lte: email_type
  _neq: email_type
  _nin: [email_type! ]
}

"""
columns and relationships of "errors"
"""
type errors {
   created_at: timestamptz! 
   error_id: Int! 
   error_message: String
   error_stack: String
   params("""JSON select path"""
path: String): jsonb
   payload: String
   query("""JSON select path"""
path: String): jsonb
   referrer: String
   request_id: String
   route_method: String
   route_path: String
   status_code: String
   time_stamp: bigint
   url: String
   user_agent: String
   user_credentials: String
}

"""
aggregated selection of "errors"
"""
type errors_aggregate {
   aggregate: errors_aggregate_fields
   nodes: [errors! ]! 
}

"""
aggregate fields of "errors"
"""
type errors_aggregate_fields {
   avg: errors_avg_fields
   count(columns: [errors_select_column! ], distinct: Boolean): Int! 
   max: errors_max_fields
   min: errors_min_fields
   stddev: errors_stddev_fields
   stddev_pop: errors_stddev_pop_fields
   stddev_samp: errors_stddev_samp_fields
   sum: errors_sum_fields
   var_pop: errors_var_pop_fields
   var_samp: errors_var_samp_fields
   variance: errors_variance_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input errors_append_input {
  params: jsonb
  query: jsonb
}

"""aggregate avg on columns"""
type errors_avg_fields {
   error_id: Float
   time_stamp: Float
}

"""
Boolean expression to filter rows from the table "errors". All fields are combined with a logical 'AND'.
"""
input errors_bool_exp {
  _and: [errors_bool_exp! ]
  _not: errors_bool_exp
  _or: [errors_bool_exp! ]
  created_at: timestamptz_comparison_exp
  error_id: Int_comparison_exp
  error_message: String_comparison_exp
  error_stack: String_comparison_exp
  params: jsonb_comparison_exp
  payload: String_comparison_exp
  query: jsonb_comparison_exp
  referrer: String_comparison_exp
  request_id: String_comparison_exp
  route_method: String_comparison_exp
  route_path: String_comparison_exp
  status_code: String_comparison_exp
  time_stamp: bigint_comparison_exp
  url: String_comparison_exp
  user_agent: String_comparison_exp
  user_credentials: String_comparison_exp
}

"""
unique or primary key constraints on table "errors"
"""
enum errors_constraint {
  """
  unique or primary key constraint on columns "error_id"
  """
errors_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input errors_delete_at_path_input {
  params: [String! ]
  query: [String! ]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input errors_delete_elem_input {
  params: Int
  query: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input errors_delete_key_input {
  params: String
  query: String
}

"""
input type for incrementing numeric columns in table "errors"
"""
input errors_inc_input {
  error_id: Int
  time_stamp: bigint
}

"""
input type for inserting data into table "errors"
"""
input errors_insert_input {
  created_at: timestamptz! 
  error_id: Int! 
  error_message: String
  error_stack: String
  params: jsonb
  payload: String
  query: jsonb
  referrer: String
  request_id: String
  route_method: String
  route_path: String
  status_code: String
  time_stamp: bigint! 
  url: String
  user_agent: String
  user_credentials: String
}

"""aggregate max on columns"""
type errors_max_fields {
   created_at: timestamptz
   error_id: Int
   error_message: String
   error_stack: String
   payload: String
   referrer: String
   request_id: String
   route_method: String
   route_path: String
   status_code: String
   time_stamp: bigint
   url: String
   user_agent: String
   user_credentials: String
}

"""aggregate min on columns"""
type errors_min_fields {
   created_at: timestamptz
   error_id: Int
   error_message: String
   error_stack: String
   payload: String
   referrer: String
   request_id: String
   route_method: String
   route_path: String
   status_code: String
   time_stamp: bigint
   url: String
   user_agent: String
   user_credentials: String
}

"""
response of any mutation on the table "errors"
"""
type errors_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [errors! ]! 
}

"""
on_conflict condition type for table "errors"
"""
input errors_on_conflict {
  constraint: errors_constraint! 
  update_columns: [errors_update_column! ]! 
  where: errors_bool_exp
}

"""Ordering options when selecting data from "errors"."""
input errors_order_by {
  created_at: order_by
  error_id: order_by
  error_message: order_by
  error_stack: order_by
  params: order_by
  payload: order_by
  query: order_by
  referrer: order_by
  request_id: order_by
  route_method: order_by
  route_path: order_by
  status_code: order_by
  time_stamp: order_by
  url: order_by
  user_agent: order_by
  user_credentials: order_by
}

"""primary key columns input for table: errors"""
input errors_pk_columns_input {
  error_id: Int! 
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input errors_prepend_input {
  params: jsonb
  query: jsonb
}

"""
select columns of table "errors"
"""
enum errors_select_column {
  """column name"""
created_at
  """column name"""
error_id
  """column name"""
error_message
  """column name"""
error_stack
  """column name"""
params
  """column name"""
payload
  """column name"""
query
  """column name"""
referrer
  """column name"""
request_id
  """column name"""
route_method
  """column name"""
route_path
  """column name"""
status_code
  """column name"""
time_stamp
  """column name"""
url
  """column name"""
user_agent
  """column name"""
user_credentials
}

"""
input type for updating data in table "errors"
"""
input errors_set_input {
  created_at: timestamptz
  error_id: Int
  error_message: String
  error_stack: String
  params: jsonb
  payload: String
  query: jsonb
  referrer: String
  request_id: String
  route_method: String
  route_path: String
  status_code: String
  time_stamp: bigint
  url: String
  user_agent: String
  user_credentials: String
}

"""aggregate stddev on columns"""
type errors_stddev_fields {
   error_id: Float
   time_stamp: Float
}

"""aggregate stddev_pop on columns"""
type errors_stddev_pop_fields {
   error_id: Float
   time_stamp: Float
}

"""aggregate stddev_samp on columns"""
type errors_stddev_samp_fields {
   error_id: Float
   time_stamp: Float
}

"""
Streaming cursor of the table "errors"
"""
input errors_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: errors_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input errors_stream_cursor_value_input {
  created_at: timestamptz
  error_id: Int
  error_message: String
  error_stack: String
  params: jsonb
  payload: String
  query: jsonb
  referrer: String
  request_id: String
  route_method: String
  route_path: String
  status_code: String
  time_stamp: bigint
  url: String
  user_agent: String
  user_credentials: String
}

"""aggregate sum on columns"""
type errors_sum_fields {
   error_id: Int
   time_stamp: bigint
}

"""
update columns of table "errors"
"""
enum errors_update_column {
  """column name"""
created_at
  """column name"""
error_id
  """column name"""
error_message
  """column name"""
error_stack
  """column name"""
params
  """column name"""
payload
  """column name"""
query
  """column name"""
referrer
  """column name"""
request_id
  """column name"""
route_method
  """column name"""
route_path
  """column name"""
status_code
  """column name"""
time_stamp
  """column name"""
url
  """column name"""
user_agent
  """column name"""
user_credentials
}

input errors_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
_append: errors_append_input
  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
_delete_at_path: errors_delete_at_path_input
  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
_delete_elem: errors_delete_elem_input
  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
_delete_key: errors_delete_key_input
  """increments the numeric columns with given value of the filtered values"""
_inc: errors_inc_input
  """prepend existing jsonb value of filtered columns with new jsonb value"""
_prepend: errors_prepend_input
  """sets the columns of the filtered rows to the given values"""
_set: errors_set_input
  where: errors_bool_exp! 
}

"""aggregate var_pop on columns"""
type errors_var_pop_fields {
   error_id: Float
   time_stamp: Float
}

"""aggregate var_samp on columns"""
type errors_var_samp_fields {
   error_id: Float
   time_stamp: Float
}

"""aggregate variance on columns"""
type errors_variance_fields {
   error_id: Float
   time_stamp: Float
}

"""
columns and relationships of "event_acceptance_types"
"""
type event_acceptance_types {
   acceptance_type_name: String! 
   acceptance_type_order: Int
   event_acceptance_type_id: Int! 
   event_id: Int! 
}

"""
aggregated selection of "event_acceptance_types"
"""
type event_acceptance_types_aggregate {
   aggregate: event_acceptance_types_aggregate_fields
   nodes: [event_acceptance_types! ]! 
}

"""
aggregate fields of "event_acceptance_types"
"""
type event_acceptance_types_aggregate_fields {
   avg: event_acceptance_types_avg_fields
   count(columns: [event_acceptance_types_select_column! ], distinct: Boolean): Int! 
   max: event_acceptance_types_max_fields
   min: event_acceptance_types_min_fields
   stddev: event_acceptance_types_stddev_fields
   stddev_pop: event_acceptance_types_stddev_pop_fields
   stddev_samp: event_acceptance_types_stddev_samp_fields
   sum: event_acceptance_types_sum_fields
   var_pop: event_acceptance_types_var_pop_fields
   var_samp: event_acceptance_types_var_samp_fields
   variance: event_acceptance_types_variance_fields
}

"""aggregate avg on columns"""
type event_acceptance_types_avg_fields {
   acceptance_type_order: Float
   event_acceptance_type_id: Float
   event_id: Float
}

"""
Boolean expression to filter rows from the table "event_acceptance_types". All fields are combined with a logical 'AND'.
"""
input event_acceptance_types_bool_exp {
  _and: [event_acceptance_types_bool_exp! ]
  _not: event_acceptance_types_bool_exp
  _or: [event_acceptance_types_bool_exp! ]
  acceptance_type_name: String_comparison_exp
  acceptance_type_order: Int_comparison_exp
  event_acceptance_type_id: Int_comparison_exp
  event_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "event_acceptance_types"
"""
enum event_acceptance_types_constraint {
  """
  unique or primary key constraint on columns "event_acceptance_type_id"
  """
event_outcomes_pkey
}

"""
input type for incrementing numeric columns in table "event_acceptance_types"
"""
input event_acceptance_types_inc_input {
  acceptance_type_order: Int
  event_acceptance_type_id: Int
  event_id: Int
}

"""
input type for inserting data into table "event_acceptance_types"
"""
input event_acceptance_types_insert_input {
  acceptance_type_name: String! 
  acceptance_type_order: Int
  event_acceptance_type_id: Int! 
  event_id: Int! 
}

"""aggregate max on columns"""
type event_acceptance_types_max_fields {
   acceptance_type_name: String
   acceptance_type_order: Int
   event_acceptance_type_id: Int
   event_id: Int
}

"""aggregate min on columns"""
type event_acceptance_types_min_fields {
   acceptance_type_name: String
   acceptance_type_order: Int
   event_acceptance_type_id: Int
   event_id: Int
}

"""
response of any mutation on the table "event_acceptance_types"
"""
type event_acceptance_types_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [event_acceptance_types! ]! 
}

"""
input type for inserting object relation for remote table "event_acceptance_types"
"""
input event_acceptance_types_obj_rel_insert_input {
  data: event_acceptance_types_insert_input! 
  """upsert condition"""
on_conflict: event_acceptance_types_on_conflict
}

"""
on_conflict condition type for table "event_acceptance_types"
"""
input event_acceptance_types_on_conflict {
  constraint: event_acceptance_types_constraint! 
  update_columns: [event_acceptance_types_update_column! ]! 
  where: event_acceptance_types_bool_exp
}

"""Ordering options when selecting data from "event_acceptance_types"."""
input event_acceptance_types_order_by {
  acceptance_type_name: order_by
  acceptance_type_order: order_by
  event_acceptance_type_id: order_by
  event_id: order_by
}

"""primary key columns input for table: event_acceptance_types"""
input event_acceptance_types_pk_columns_input {
  event_acceptance_type_id: Int! 
}

"""
select columns of table "event_acceptance_types"
"""
enum event_acceptance_types_select_column {
  """column name"""
acceptance_type_name
  """column name"""
acceptance_type_order
  """column name"""
event_acceptance_type_id
  """column name"""
event_id
}

"""
input type for updating data in table "event_acceptance_types"
"""
input event_acceptance_types_set_input {
  acceptance_type_name: String
  acceptance_type_order: Int
  event_acceptance_type_id: Int
  event_id: Int
}

"""aggregate stddev on columns"""
type event_acceptance_types_stddev_fields {
   acceptance_type_order: Float
   event_acceptance_type_id: Float
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type event_acceptance_types_stddev_pop_fields {
   acceptance_type_order: Float
   event_acceptance_type_id: Float
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type event_acceptance_types_stddev_samp_fields {
   acceptance_type_order: Float
   event_acceptance_type_id: Float
   event_id: Float
}

"""
Streaming cursor of the table "event_acceptance_types"
"""
input event_acceptance_types_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: event_acceptance_types_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input event_acceptance_types_stream_cursor_value_input {
  acceptance_type_name: String
  acceptance_type_order: Int
  event_acceptance_type_id: Int
  event_id: Int
}

"""aggregate sum on columns"""
type event_acceptance_types_sum_fields {
   acceptance_type_order: Int
   event_acceptance_type_id: Int
   event_id: Int
}

"""
update columns of table "event_acceptance_types"
"""
enum event_acceptance_types_update_column {
  """column name"""
acceptance_type_name
  """column name"""
acceptance_type_order
  """column name"""
event_acceptance_type_id
  """column name"""
event_id
}

input event_acceptance_types_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: event_acceptance_types_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: event_acceptance_types_set_input
  where: event_acceptance_types_bool_exp! 
}

"""aggregate var_pop on columns"""
type event_acceptance_types_var_pop_fields {
   acceptance_type_order: Float
   event_acceptance_type_id: Float
   event_id: Float
}

"""aggregate var_samp on columns"""
type event_acceptance_types_var_samp_fields {
   acceptance_type_order: Float
   event_acceptance_type_id: Float
   event_id: Float
}

"""aggregate variance on columns"""
type event_acceptance_types_variance_fields {
   acceptance_type_order: Float
   event_acceptance_type_id: Float
   event_id: Float
}

scalar event_email_categories 

"""
Boolean expression to compare columns of type "event_email_categories". All fields are combined with logical 'AND'.
"""
input event_email_categories_comparison_exp {
  _eq: event_email_categories
  _gt: event_email_categories
  _gte: event_email_categories
  _in: [event_email_categories! ]
  _is_null: Boolean
  _lt: event_email_categories
  _lte: event_email_categories
  _neq: event_email_categories
  _nin: [event_email_categories! ]
}

"""
columns and relationships of "event_emails"
"""
type event_emails {
   active: Boolean! 
   append_signature: Boolean! 
   blind_carbon_copy_notification_email: Boolean! 
   carbon_copy_notification_email: Boolean! 
   default_email_id: Int
   email_category: event_email_categories
   email_name: String! 
   email_subject: String! 
   email_type: email_type! 
   event_id: Int! 
   has_acceptance_type_filter: Boolean! 
   id: Int! 
   is_automatic: Boolean! 
   message: String! 
   old_message: String! 
   question_id: Int
  """An object relationship"""
 stage: stages
   stage_id: Int
}

"""
aggregated selection of "event_emails"
"""
type event_emails_aggregate {
   aggregate: event_emails_aggregate_fields
   nodes: [event_emails! ]! 
}

"""
aggregate fields of "event_emails"
"""
type event_emails_aggregate_fields {
   avg: event_emails_avg_fields
   count(columns: [event_emails_select_column! ], distinct: Boolean): Int! 
   max: event_emails_max_fields
   min: event_emails_min_fields
   stddev: event_emails_stddev_fields
   stddev_pop: event_emails_stddev_pop_fields
   stddev_samp: event_emails_stddev_samp_fields
   sum: event_emails_sum_fields
   var_pop: event_emails_var_pop_fields
   var_samp: event_emails_var_samp_fields
   variance: event_emails_variance_fields
}

"""aggregate avg on columns"""
type event_emails_avg_fields {
   default_email_id: Float
   event_id: Float
   id: Float
   question_id: Float
   stage_id: Float
}

"""
Boolean expression to filter rows from the table "event_emails". All fields are combined with a logical 'AND'.
"""
input event_emails_bool_exp {
  _and: [event_emails_bool_exp! ]
  _not: event_emails_bool_exp
  _or: [event_emails_bool_exp! ]
  active: Boolean_comparison_exp
  append_signature: Boolean_comparison_exp
  blind_carbon_copy_notification_email: Boolean_comparison_exp
  carbon_copy_notification_email: Boolean_comparison_exp
  default_email_id: Int_comparison_exp
  email_category: event_email_categories_comparison_exp
  email_name: String_comparison_exp
  email_subject: String_comparison_exp
  email_type: email_type_comparison_exp
  event_id: Int_comparison_exp
  has_acceptance_type_filter: Boolean_comparison_exp
  id: Int_comparison_exp
  is_automatic: Boolean_comparison_exp
  message: String_comparison_exp
  old_message: String_comparison_exp
  question_id: Int_comparison_exp
  stage: stages_bool_exp
  stage_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "event_emails"
"""
enum event_emails_constraint {
  """
  unique or primary key constraint on columns "event_email_id"
  """
event_emails_pkey
}

"""
input type for incrementing numeric columns in table "event_emails"
"""
input event_emails_inc_input {
  default_email_id: Int
  event_id: Int
  id: Int
  question_id: Int
  stage_id: Int
}

"""
input type for inserting data into table "event_emails"
"""
input event_emails_insert_input {
  active: Boolean! 
  append_signature: Boolean! 
  blind_carbon_copy_notification_email: Boolean! 
  carbon_copy_notification_email: Boolean! 
  default_email_id: Int
  email_category: event_email_categories
  email_name: String! 
  email_subject: String! 
  email_type: email_type! 
  event_id: Int! 
  has_acceptance_type_filter: Boolean! 
  id: Int
  is_automatic: Boolean! 
  message: String! 
  old_message: String! 
  question_id: Int
  stage: stages_obj_rel_insert_input
  stage_id: Int
}

"""aggregate max on columns"""
type event_emails_max_fields {
   default_email_id: Int
   email_category: event_email_categories
   email_name: String
   email_subject: String
   email_type: email_type
   event_id: Int
   id: Int
   message: String
   old_message: String
   question_id: Int
   stage_id: Int
}

"""aggregate min on columns"""
type event_emails_min_fields {
   default_email_id: Int
   email_category: event_email_categories
   email_name: String
   email_subject: String
   email_type: email_type
   event_id: Int
   id: Int
   message: String
   old_message: String
   question_id: Int
   stage_id: Int
}

"""
response of any mutation on the table "event_emails"
"""
type event_emails_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [event_emails! ]! 
}

"""
on_conflict condition type for table "event_emails"
"""
input event_emails_on_conflict {
  constraint: event_emails_constraint! 
  update_columns: [event_emails_update_column! ]! 
  where: event_emails_bool_exp
}

"""Ordering options when selecting data from "event_emails"."""
input event_emails_order_by {
  active: order_by
  append_signature: order_by
  blind_carbon_copy_notification_email: order_by
  carbon_copy_notification_email: order_by
  default_email_id: order_by
  email_category: order_by
  email_name: order_by
  email_subject: order_by
  email_type: order_by
  event_id: order_by
  has_acceptance_type_filter: order_by
  id: order_by
  is_automatic: order_by
  message: order_by
  old_message: order_by
  question_id: order_by
  stage: stages_order_by
  stage_id: order_by
}

"""primary key columns input for table: event_emails"""
input event_emails_pk_columns_input {
  id: Int! 
}

"""
select columns of table "event_emails"
"""
enum event_emails_select_column {
  """column name"""
active
  """column name"""
append_signature
  """column name"""
blind_carbon_copy_notification_email
  """column name"""
carbon_copy_notification_email
  """column name"""
default_email_id
  """column name"""
email_category
  """column name"""
email_name
  """column name"""
email_subject
  """column name"""
email_type
  """column name"""
event_id
  """column name"""
has_acceptance_type_filter
  """column name"""
id
  """column name"""
is_automatic
  """column name"""
message
  """column name"""
old_message
  """column name"""
question_id
  """column name"""
stage_id
}

"""
input type for updating data in table "event_emails"
"""
input event_emails_set_input {
  active: Boolean
  append_signature: Boolean
  blind_carbon_copy_notification_email: Boolean
  carbon_copy_notification_email: Boolean
  default_email_id: Int
  email_category: event_email_categories
  email_name: String
  email_subject: String
  email_type: email_type
  event_id: Int
  has_acceptance_type_filter: Boolean
  id: Int
  is_automatic: Boolean
  message: String
  old_message: String
  question_id: Int
  stage_id: Int
}

"""aggregate stddev on columns"""
type event_emails_stddev_fields {
   default_email_id: Float
   event_id: Float
   id: Float
   question_id: Float
   stage_id: Float
}

"""aggregate stddev_pop on columns"""
type event_emails_stddev_pop_fields {
   default_email_id: Float
   event_id: Float
   id: Float
   question_id: Float
   stage_id: Float
}

"""aggregate stddev_samp on columns"""
type event_emails_stddev_samp_fields {
   default_email_id: Float
   event_id: Float
   id: Float
   question_id: Float
   stage_id: Float
}

"""
Streaming cursor of the table "event_emails"
"""
input event_emails_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: event_emails_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input event_emails_stream_cursor_value_input {
  active: Boolean
  append_signature: Boolean
  blind_carbon_copy_notification_email: Boolean
  carbon_copy_notification_email: Boolean
  default_email_id: Int
  email_category: event_email_categories
  email_name: String
  email_subject: String
  email_type: email_type
  event_id: Int
  has_acceptance_type_filter: Boolean
  id: Int
  is_automatic: Boolean
  message: String
  old_message: String
  question_id: Int
  stage_id: Int
}

"""aggregate sum on columns"""
type event_emails_sum_fields {
   default_email_id: Int
   event_id: Int
   id: Int
   question_id: Int
   stage_id: Int
}

"""
update columns of table "event_emails"
"""
enum event_emails_update_column {
  """column name"""
active
  """column name"""
append_signature
  """column name"""
blind_carbon_copy_notification_email
  """column name"""
carbon_copy_notification_email
  """column name"""
default_email_id
  """column name"""
email_category
  """column name"""
email_name
  """column name"""
email_subject
  """column name"""
email_type
  """column name"""
event_id
  """column name"""
has_acceptance_type_filter
  """column name"""
id
  """column name"""
is_automatic
  """column name"""
message
  """column name"""
old_message
  """column name"""
question_id
  """column name"""
stage_id
}

input event_emails_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: event_emails_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: event_emails_set_input
  where: event_emails_bool_exp! 
}

"""aggregate var_pop on columns"""
type event_emails_var_pop_fields {
   default_email_id: Float
   event_id: Float
   id: Float
   question_id: Float
   stage_id: Float
}

"""aggregate var_samp on columns"""
type event_emails_var_samp_fields {
   default_email_id: Float
   event_id: Float
   id: Float
   question_id: Float
   stage_id: Float
}

"""aggregate variance on columns"""
type event_emails_variance_fields {
   default_email_id: Float
   event_id: Float
   id: Float
   question_id: Float
   stage_id: Float
}

scalar event_payment_option 

"""
Boolean expression to compare columns of type "event_payment_option". All fields are combined with logical 'AND'.
"""
input event_payment_option_comparison_exp {
  _eq: event_payment_option
  _gt: event_payment_option
  _gte: event_payment_option
  _in: [event_payment_option! ]
  _is_null: Boolean
  _lt: event_payment_option
  _lte: event_payment_option
  _neq: event_payment_option
  _nin: [event_payment_option! ]
}

"""
columns and relationships of "event_payments"
"""
type event_payments {
   amount: Int! 
   card_payment_id: String! 
   created_at: timestamp! 
   currency: paypal_payment_currency! 
  """An object relationship"""
 event: events! 
   event_id: Int! 
   id: Int! 
   invoice_id: String! 
   item_name: String! 
   notes: String! 
   payment_confirmed: Boolean! 
   payment_option: event_payment_option! 
   transaction_date: date
   transaction_description: String! 
   updated_at: timestamptz
   user_id: Int! 
   voided: Boolean! 
}

"""
aggregated selection of "event_payments"
"""
type event_payments_aggregate {
   aggregate: event_payments_aggregate_fields
   nodes: [event_payments! ]! 
}

input event_payments_aggregate_bool_exp {
  bool_and: event_payments_aggregate_bool_exp_bool_and
  bool_or: event_payments_aggregate_bool_exp_bool_or
  count: event_payments_aggregate_bool_exp_count
}

input event_payments_aggregate_bool_exp_bool_and {
  arguments: event_payments_select_column_event_payments_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: event_payments_bool_exp
  predicate: Boolean_comparison_exp! 
}

input event_payments_aggregate_bool_exp_bool_or {
  arguments: event_payments_select_column_event_payments_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: event_payments_bool_exp
  predicate: Boolean_comparison_exp! 
}

input event_payments_aggregate_bool_exp_count {
  arguments: [event_payments_select_column! ]
  distinct: Boolean
  filter: event_payments_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "event_payments"
"""
type event_payments_aggregate_fields {
   avg: event_payments_avg_fields
   count(columns: [event_payments_select_column! ], distinct: Boolean): Int! 
   max: event_payments_max_fields
   min: event_payments_min_fields
   stddev: event_payments_stddev_fields
   stddev_pop: event_payments_stddev_pop_fields
   stddev_samp: event_payments_stddev_samp_fields
   sum: event_payments_sum_fields
   var_pop: event_payments_var_pop_fields
   var_samp: event_payments_var_samp_fields
   variance: event_payments_variance_fields
}

"""
order by aggregate values of table "event_payments"
"""
input event_payments_aggregate_order_by {
  avg: event_payments_avg_order_by
  count: order_by
  max: event_payments_max_order_by
  min: event_payments_min_order_by
  stddev: event_payments_stddev_order_by
  stddev_pop: event_payments_stddev_pop_order_by
  stddev_samp: event_payments_stddev_samp_order_by
  sum: event_payments_sum_order_by
  var_pop: event_payments_var_pop_order_by
  var_samp: event_payments_var_samp_order_by
  variance: event_payments_variance_order_by
}

"""
input type for inserting array relation for remote table "event_payments"
"""
input event_payments_arr_rel_insert_input {
  data: [event_payments_insert_input! ]! 
  """upsert condition"""
on_conflict: event_payments_on_conflict
}

"""aggregate avg on columns"""
type event_payments_avg_fields {
   amount: Float
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by avg() on columns of table "event_payments"
"""
input event_payments_avg_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "event_payments". All fields are combined with a logical 'AND'.
"""
input event_payments_bool_exp {
  _and: [event_payments_bool_exp! ]
  _not: event_payments_bool_exp
  _or: [event_payments_bool_exp! ]
  amount: Int_comparison_exp
  card_payment_id: String_comparison_exp
  created_at: timestamp_comparison_exp
  currency: paypal_payment_currency_comparison_exp
  event: events_bool_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  invoice_id: String_comparison_exp
  item_name: String_comparison_exp
  notes: String_comparison_exp
  payment_confirmed: Boolean_comparison_exp
  payment_option: event_payment_option_comparison_exp
  transaction_date: date_comparison_exp
  transaction_description: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  user_id: Int_comparison_exp
  voided: Boolean_comparison_exp
}

"""
unique or primary key constraints on table "event_payments"
"""
enum event_payments_constraint {
  """
  unique or primary key constraint on columns "id"
  """
event_payments_pkey
}

"""
input type for incrementing numeric columns in table "event_payments"
"""
input event_payments_inc_input {
  amount: Int
  event_id: Int
  id: Int
  user_id: Int
}

"""
input type for inserting data into table "event_payments"
"""
input event_payments_insert_input {
  amount: Int! 
  card_payment_id: String! 
  created_at: timestamp! 
  currency: paypal_payment_currency! 
  event: events_obj_rel_insert_input
  event_id: Int! 
  id: Int! 
  invoice_id: String! 
  item_name: String! 
  notes: String! 
  payment_confirmed: Boolean! 
  payment_option: event_payment_option! 
  transaction_date: date
  transaction_description: String! 
  updated_at: timestamptz! 
  user_id: Int! 
  voided: Boolean! 
}

"""aggregate max on columns"""
type event_payments_max_fields {
   amount: Int
   card_payment_id: String
   created_at: timestamp
   currency: paypal_payment_currency
   event_id: Int
   id: Int
   invoice_id: String
   item_name: String
   notes: String
   payment_option: event_payment_option
   transaction_date: date
   transaction_description: String
   updated_at: timestamptz
   user_id: Int
}

"""
order by max() on columns of table "event_payments"
"""
input event_payments_max_order_by {
  amount: order_by
  card_payment_id: order_by
  created_at: order_by
  currency: order_by
  event_id: order_by
  id: order_by
  invoice_id: order_by
  item_name: order_by
  notes: order_by
  payment_option: order_by
  transaction_date: order_by
  transaction_description: order_by
  updated_at: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type event_payments_min_fields {
   amount: Int
   card_payment_id: String
   created_at: timestamp
   currency: paypal_payment_currency
   event_id: Int
   id: Int
   invoice_id: String
   item_name: String
   notes: String
   payment_option: event_payment_option
   transaction_date: date
   transaction_description: String
   updated_at: timestamptz
   user_id: Int
}

"""
order by min() on columns of table "event_payments"
"""
input event_payments_min_order_by {
  amount: order_by
  card_payment_id: order_by
  created_at: order_by
  currency: order_by
  event_id: order_by
  id: order_by
  invoice_id: order_by
  item_name: order_by
  notes: order_by
  payment_option: order_by
  transaction_date: order_by
  transaction_description: order_by
  updated_at: order_by
  user_id: order_by
}

"""
response of any mutation on the table "event_payments"
"""
type event_payments_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [event_payments! ]! 
}

"""
on_conflict condition type for table "event_payments"
"""
input event_payments_on_conflict {
  constraint: event_payments_constraint! 
  update_columns: [event_payments_update_column! ]! 
  where: event_payments_bool_exp
}

"""Ordering options when selecting data from "event_payments"."""
input event_payments_order_by {
  amount: order_by
  card_payment_id: order_by
  created_at: order_by
  currency: order_by
  event: events_order_by
  event_id: order_by
  id: order_by
  invoice_id: order_by
  item_name: order_by
  notes: order_by
  payment_confirmed: order_by
  payment_option: order_by
  transaction_date: order_by
  transaction_description: order_by
  updated_at: order_by
  user_id: order_by
  voided: order_by
}

"""primary key columns input for table: event_payments"""
input event_payments_pk_columns_input {
  id: Int! 
}

"""
select columns of table "event_payments"
"""
enum event_payments_select_column {
  """column name"""
amount
  """column name"""
card_payment_id
  """column name"""
created_at
  """column name"""
currency
  """column name"""
event_id
  """column name"""
id
  """column name"""
invoice_id
  """column name"""
item_name
  """column name"""
notes
  """column name"""
payment_confirmed
  """column name"""
payment_option
  """column name"""
transaction_date
  """column name"""
transaction_description
  """column name"""
updated_at
  """column name"""
user_id
  """column name"""
voided
}

"""
select "event_payments_aggregate_bool_exp_bool_and_arguments_columns" columns of table "event_payments"
"""
enum event_payments_select_column_event_payments_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
payment_confirmed
  """column name"""
voided
}

"""
select "event_payments_aggregate_bool_exp_bool_or_arguments_columns" columns of table "event_payments"
"""
enum event_payments_select_column_event_payments_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
payment_confirmed
  """column name"""
voided
}

"""
input type for updating data in table "event_payments"
"""
input event_payments_set_input {
  amount: Int
  card_payment_id: String
  created_at: timestamp
  currency: paypal_payment_currency
  event_id: Int
  id: Int
  invoice_id: String
  item_name: String
  notes: String
  payment_confirmed: Boolean
  payment_option: event_payment_option
  transaction_date: date
  transaction_description: String
  updated_at: timestamptz
  user_id: Int
  voided: Boolean
}

"""aggregate stddev on columns"""
type event_payments_stddev_fields {
   amount: Float
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by stddev() on columns of table "event_payments"
"""
input event_payments_stddev_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type event_payments_stddev_pop_fields {
   amount: Float
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "event_payments"
"""
input event_payments_stddev_pop_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type event_payments_stddev_samp_fields {
   amount: Float
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "event_payments"
"""
input event_payments_stddev_samp_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "event_payments"
"""
input event_payments_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: event_payments_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input event_payments_stream_cursor_value_input {
  amount: Int
  card_payment_id: String
  created_at: timestamp
  currency: paypal_payment_currency
  event_id: Int
  id: Int
  invoice_id: String
  item_name: String
  notes: String
  payment_confirmed: Boolean
  payment_option: event_payment_option
  transaction_date: date
  transaction_description: String
  updated_at: timestamptz
  user_id: Int
  voided: Boolean
}

"""aggregate sum on columns"""
type event_payments_sum_fields {
   amount: Int
   event_id: Int
   id: Int
   user_id: Int
}

"""
order by sum() on columns of table "event_payments"
"""
input event_payments_sum_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""
update columns of table "event_payments"
"""
enum event_payments_update_column {
  """column name"""
amount
  """column name"""
card_payment_id
  """column name"""
created_at
  """column name"""
currency
  """column name"""
event_id
  """column name"""
id
  """column name"""
invoice_id
  """column name"""
item_name
  """column name"""
notes
  """column name"""
payment_confirmed
  """column name"""
payment_option
  """column name"""
transaction_date
  """column name"""
transaction_description
  """column name"""
updated_at
  """column name"""
user_id
  """column name"""
voided
}

input event_payments_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: event_payments_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: event_payments_set_input
  where: event_payments_bool_exp! 
}

"""aggregate var_pop on columns"""
type event_payments_var_pop_fields {
   amount: Float
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "event_payments"
"""
input event_payments_var_pop_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type event_payments_var_samp_fields {
   amount: Float
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "event_payments"
"""
input event_payments_var_samp_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type event_payments_variance_fields {
   amount: Float
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by variance() on columns of table "event_payments"
"""
input event_payments_variance_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""
columns and relationships of "event_program_menu_sponsors"
"""
type event_program_menu_sponsors {
   event_id: Int! 
   program_sponsor_id: Int! 
  """An object relationship"""
 sponsor: program_sponsors! 
}

"""
aggregated selection of "event_program_menu_sponsors"
"""
type event_program_menu_sponsors_aggregate {
   aggregate: event_program_menu_sponsors_aggregate_fields
   nodes: [event_program_menu_sponsors! ]! 
}

input event_program_menu_sponsors_aggregate_bool_exp {
  count: event_program_menu_sponsors_aggregate_bool_exp_count
}

input event_program_menu_sponsors_aggregate_bool_exp_count {
  arguments: [event_program_menu_sponsors_select_column! ]
  distinct: Boolean
  filter: event_program_menu_sponsors_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "event_program_menu_sponsors"
"""
type event_program_menu_sponsors_aggregate_fields {
   avg: event_program_menu_sponsors_avg_fields
   count(columns: [event_program_menu_sponsors_select_column! ], distinct: Boolean): Int! 
   max: event_program_menu_sponsors_max_fields
   min: event_program_menu_sponsors_min_fields
   stddev: event_program_menu_sponsors_stddev_fields
   stddev_pop: event_program_menu_sponsors_stddev_pop_fields
   stddev_samp: event_program_menu_sponsors_stddev_samp_fields
   sum: event_program_menu_sponsors_sum_fields
   var_pop: event_program_menu_sponsors_var_pop_fields
   var_samp: event_program_menu_sponsors_var_samp_fields
   variance: event_program_menu_sponsors_variance_fields
}

"""
order by aggregate values of table "event_program_menu_sponsors"
"""
input event_program_menu_sponsors_aggregate_order_by {
  avg: event_program_menu_sponsors_avg_order_by
  count: order_by
  max: event_program_menu_sponsors_max_order_by
  min: event_program_menu_sponsors_min_order_by
  stddev: event_program_menu_sponsors_stddev_order_by
  stddev_pop: event_program_menu_sponsors_stddev_pop_order_by
  stddev_samp: event_program_menu_sponsors_stddev_samp_order_by
  sum: event_program_menu_sponsors_sum_order_by
  var_pop: event_program_menu_sponsors_var_pop_order_by
  var_samp: event_program_menu_sponsors_var_samp_order_by
  variance: event_program_menu_sponsors_variance_order_by
}

"""
input type for inserting array relation for remote table "event_program_menu_sponsors"
"""
input event_program_menu_sponsors_arr_rel_insert_input {
  data: [event_program_menu_sponsors_insert_input! ]! 
}

"""aggregate avg on columns"""
type event_program_menu_sponsors_avg_fields {
   event_id: Float
   program_sponsor_id: Float
}

"""
order by avg() on columns of table "event_program_menu_sponsors"
"""
input event_program_menu_sponsors_avg_order_by {
  event_id: order_by
  program_sponsor_id: order_by
}

"""
Boolean expression to filter rows from the table "event_program_menu_sponsors". All fields are combined with a logical 'AND'.
"""
input event_program_menu_sponsors_bool_exp {
  _and: [event_program_menu_sponsors_bool_exp! ]
  _not: event_program_menu_sponsors_bool_exp
  _or: [event_program_menu_sponsors_bool_exp! ]
  event_id: Int_comparison_exp
  program_sponsor_id: Int_comparison_exp
  sponsor: program_sponsors_bool_exp
}

"""
input type for incrementing numeric columns in table "event_program_menu_sponsors"
"""
input event_program_menu_sponsors_inc_input {
  event_id: Int
  program_sponsor_id: Int
}

"""
input type for inserting data into table "event_program_menu_sponsors"
"""
input event_program_menu_sponsors_insert_input {
  event_id: Int! 
  program_sponsor_id: Int! 
  sponsor: program_sponsors_obj_rel_insert_input
}

"""aggregate max on columns"""
type event_program_menu_sponsors_max_fields {
   event_id: Int
   program_sponsor_id: Int
}

"""
order by max() on columns of table "event_program_menu_sponsors"
"""
input event_program_menu_sponsors_max_order_by {
  event_id: order_by
  program_sponsor_id: order_by
}

"""aggregate min on columns"""
type event_program_menu_sponsors_min_fields {
   event_id: Int
   program_sponsor_id: Int
}

"""
order by min() on columns of table "event_program_menu_sponsors"
"""
input event_program_menu_sponsors_min_order_by {
  event_id: order_by
  program_sponsor_id: order_by
}

"""
response of any mutation on the table "event_program_menu_sponsors"
"""
type event_program_menu_sponsors_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [event_program_menu_sponsors! ]! 
}

"""
Ordering options when selecting data from "event_program_menu_sponsors".
"""
input event_program_menu_sponsors_order_by {
  event_id: order_by
  program_sponsor_id: order_by
  sponsor: program_sponsors_order_by
}

"""
select columns of table "event_program_menu_sponsors"
"""
enum event_program_menu_sponsors_select_column {
  """column name"""
event_id
  """column name"""
program_sponsor_id
}

"""
input type for updating data in table "event_program_menu_sponsors"
"""
input event_program_menu_sponsors_set_input {
  event_id: Int
  program_sponsor_id: Int
}

"""aggregate stddev on columns"""
type event_program_menu_sponsors_stddev_fields {
   event_id: Float
   program_sponsor_id: Float
}

"""
order by stddev() on columns of table "event_program_menu_sponsors"
"""
input event_program_menu_sponsors_stddev_order_by {
  event_id: order_by
  program_sponsor_id: order_by
}

"""aggregate stddev_pop on columns"""
type event_program_menu_sponsors_stddev_pop_fields {
   event_id: Float
   program_sponsor_id: Float
}

"""
order by stddev_pop() on columns of table "event_program_menu_sponsors"
"""
input event_program_menu_sponsors_stddev_pop_order_by {
  event_id: order_by
  program_sponsor_id: order_by
}

"""aggregate stddev_samp on columns"""
type event_program_menu_sponsors_stddev_samp_fields {
   event_id: Float
   program_sponsor_id: Float
}

"""
order by stddev_samp() on columns of table "event_program_menu_sponsors"
"""
input event_program_menu_sponsors_stddev_samp_order_by {
  event_id: order_by
  program_sponsor_id: order_by
}

"""
Streaming cursor of the table "event_program_menu_sponsors"
"""
input event_program_menu_sponsors_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: event_program_menu_sponsors_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input event_program_menu_sponsors_stream_cursor_value_input {
  event_id: Int
  program_sponsor_id: Int
}

"""aggregate sum on columns"""
type event_program_menu_sponsors_sum_fields {
   event_id: Int
   program_sponsor_id: Int
}

"""
order by sum() on columns of table "event_program_menu_sponsors"
"""
input event_program_menu_sponsors_sum_order_by {
  event_id: order_by
  program_sponsor_id: order_by
}

input event_program_menu_sponsors_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: event_program_menu_sponsors_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: event_program_menu_sponsors_set_input
  where: event_program_menu_sponsors_bool_exp! 
}

"""aggregate var_pop on columns"""
type event_program_menu_sponsors_var_pop_fields {
   event_id: Float
   program_sponsor_id: Float
}

"""
order by var_pop() on columns of table "event_program_menu_sponsors"
"""
input event_program_menu_sponsors_var_pop_order_by {
  event_id: order_by
  program_sponsor_id: order_by
}

"""aggregate var_samp on columns"""
type event_program_menu_sponsors_var_samp_fields {
   event_id: Float
   program_sponsor_id: Float
}

"""
order by var_samp() on columns of table "event_program_menu_sponsors"
"""
input event_program_menu_sponsors_var_samp_order_by {
  event_id: order_by
  program_sponsor_id: order_by
}

"""aggregate variance on columns"""
type event_program_menu_sponsors_variance_fields {
   event_id: Float
   program_sponsor_id: Float
}

"""
order by variance() on columns of table "event_program_menu_sponsors"
"""
input event_program_menu_sponsors_variance_order_by {
  event_id: order_by
  program_sponsor_id: order_by
}

scalar event_role 

"""
Boolean expression to compare columns of type "event_role". All fields are combined with logical 'AND'.
"""
input event_role_comparison_exp {
  _eq: event_role
  _gt: event_role
  _gte: event_role
  _in: [event_role! ]
  _is_null: Boolean
  _lt: event_role
  _lte: event_role
  _neq: event_role
  _nin: [event_role! ]
}

scalar event_status 

"""
Boolean expression to compare columns of type "event_status". All fields are combined with logical 'AND'.
"""
input event_status_comparison_exp {
  _eq: event_status
  _gt: event_status
  _gte: event_status
  _in: [event_status! ]
  _is_null: Boolean
  _lt: event_status
  _lte: event_status
  _neq: event_status
  _nin: [event_status! ]
}

"""
created when it appears that an event is being used past it's time limit of 1 year or other suspicious activity
"""
type event_suspicions {
   created_at: timestamptz! 
  """An object relationship"""
 event: events! 
   event_id: Int! 
   id: uuid! 
  """Ignore future suspicions until this datetime"""
 ignore_suspicions_until: timestamptz
   notes: String! 
   reason: String! 
   resolved: Boolean! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "event_suspicions"
"""
type event_suspicions_aggregate {
   aggregate: event_suspicions_aggregate_fields
   nodes: [event_suspicions! ]! 
}

input event_suspicions_aggregate_bool_exp {
  bool_and: event_suspicions_aggregate_bool_exp_bool_and
  bool_or: event_suspicions_aggregate_bool_exp_bool_or
  count: event_suspicions_aggregate_bool_exp_count
}

input event_suspicions_aggregate_bool_exp_bool_and {
  arguments: event_suspicions_select_column_event_suspicions_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: event_suspicions_bool_exp
  predicate: Boolean_comparison_exp! 
}

input event_suspicions_aggregate_bool_exp_bool_or {
  arguments: event_suspicions_select_column_event_suspicions_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: event_suspicions_bool_exp
  predicate: Boolean_comparison_exp! 
}

input event_suspicions_aggregate_bool_exp_count {
  arguments: [event_suspicions_select_column! ]
  distinct: Boolean
  filter: event_suspicions_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "event_suspicions"
"""
type event_suspicions_aggregate_fields {
   avg: event_suspicions_avg_fields
   count(columns: [event_suspicions_select_column! ], distinct: Boolean): Int! 
   max: event_suspicions_max_fields
   min: event_suspicions_min_fields
   stddev: event_suspicions_stddev_fields
   stddev_pop: event_suspicions_stddev_pop_fields
   stddev_samp: event_suspicions_stddev_samp_fields
   sum: event_suspicions_sum_fields
   var_pop: event_suspicions_var_pop_fields
   var_samp: event_suspicions_var_samp_fields
   variance: event_suspicions_variance_fields
}

"""
order by aggregate values of table "event_suspicions"
"""
input event_suspicions_aggregate_order_by {
  avg: event_suspicions_avg_order_by
  count: order_by
  max: event_suspicions_max_order_by
  min: event_suspicions_min_order_by
  stddev: event_suspicions_stddev_order_by
  stddev_pop: event_suspicions_stddev_pop_order_by
  stddev_samp: event_suspicions_stddev_samp_order_by
  sum: event_suspicions_sum_order_by
  var_pop: event_suspicions_var_pop_order_by
  var_samp: event_suspicions_var_samp_order_by
  variance: event_suspicions_variance_order_by
}

"""
input type for inserting array relation for remote table "event_suspicions"
"""
input event_suspicions_arr_rel_insert_input {
  data: [event_suspicions_insert_input! ]! 
  """upsert condition"""
on_conflict: event_suspicions_on_conflict
}

"""aggregate avg on columns"""
type event_suspicions_avg_fields {
   event_id: Float
}

"""
order by avg() on columns of table "event_suspicions"
"""
input event_suspicions_avg_order_by {
  event_id: order_by
}

"""
Boolean expression to filter rows from the table "event_suspicions". All fields are combined with a logical 'AND'.
"""
input event_suspicions_bool_exp {
  _and: [event_suspicions_bool_exp! ]
  _not: event_suspicions_bool_exp
  _or: [event_suspicions_bool_exp! ]
  created_at: timestamptz_comparison_exp
  event: events_bool_exp
  event_id: Int_comparison_exp
  id: uuid_comparison_exp
  ignore_suspicions_until: timestamptz_comparison_exp
  notes: String_comparison_exp
  reason: String_comparison_exp
  resolved: Boolean_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "event_suspicions"
"""
enum event_suspicions_constraint {
  """
  unique or primary key constraint on columns "id"
  """
event_suspicions_pkey
}

"""
input type for incrementing numeric columns in table "event_suspicions"
"""
input event_suspicions_inc_input {
  event_id: Int
}

"""
input type for inserting data into table "event_suspicions"
"""
input event_suspicions_insert_input {
  created_at: timestamptz! 
  event: events_obj_rel_insert_input
  event_id: Int! 
  id: uuid! 
  """Ignore future suspicions until this datetime"""
ignore_suspicions_until: timestamptz
  notes: String! 
  reason: String! 
  resolved: Boolean! 
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type event_suspicions_max_fields {
   created_at: timestamptz
   event_id: Int
   id: uuid
  """Ignore future suspicions until this datetime"""
 ignore_suspicions_until: timestamptz
   notes: String
   reason: String
   updated_at: timestamptz
}

"""
order by max() on columns of table "event_suspicions"
"""
input event_suspicions_max_order_by {
  created_at: order_by
  event_id: order_by
  id: order_by
  """Ignore future suspicions until this datetime"""
ignore_suspicions_until: order_by
  notes: order_by
  reason: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type event_suspicions_min_fields {
   created_at: timestamptz
   event_id: Int
   id: uuid
  """Ignore future suspicions until this datetime"""
 ignore_suspicions_until: timestamptz
   notes: String
   reason: String
   updated_at: timestamptz
}

"""
order by min() on columns of table "event_suspicions"
"""
input event_suspicions_min_order_by {
  created_at: order_by
  event_id: order_by
  id: order_by
  """Ignore future suspicions until this datetime"""
ignore_suspicions_until: order_by
  notes: order_by
  reason: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "event_suspicions"
"""
type event_suspicions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [event_suspicions! ]! 
}

"""
on_conflict condition type for table "event_suspicions"
"""
input event_suspicions_on_conflict {
  constraint: event_suspicions_constraint! 
  update_columns: [event_suspicions_update_column! ]! 
  where: event_suspicions_bool_exp
}

"""Ordering options when selecting data from "event_suspicions"."""
input event_suspicions_order_by {
  created_at: order_by
  event: events_order_by
  event_id: order_by
  id: order_by
  ignore_suspicions_until: order_by
  notes: order_by
  reason: order_by
  resolved: order_by
  updated_at: order_by
}

"""primary key columns input for table: event_suspicions"""
input event_suspicions_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "event_suspicions"
"""
enum event_suspicions_select_column {
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
id
  """column name"""
ignore_suspicions_until
  """column name"""
notes
  """column name"""
reason
  """column name"""
resolved
  """column name"""
updated_at
}

"""
select "event_suspicions_aggregate_bool_exp_bool_and_arguments_columns" columns of table "event_suspicions"
"""
enum event_suspicions_select_column_event_suspicions_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
resolved
}

"""
select "event_suspicions_aggregate_bool_exp_bool_or_arguments_columns" columns of table "event_suspicions"
"""
enum event_suspicions_select_column_event_suspicions_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
resolved
}

"""
input type for updating data in table "event_suspicions"
"""
input event_suspicions_set_input {
  created_at: timestamptz
  event_id: Int
  id: uuid
  """Ignore future suspicions until this datetime"""
ignore_suspicions_until: timestamptz
  notes: String
  reason: String
  resolved: Boolean
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type event_suspicions_stddev_fields {
   event_id: Float
}

"""
order by stddev() on columns of table "event_suspicions"
"""
input event_suspicions_stddev_order_by {
  event_id: order_by
}

"""aggregate stddev_pop on columns"""
type event_suspicions_stddev_pop_fields {
   event_id: Float
}

"""
order by stddev_pop() on columns of table "event_suspicions"
"""
input event_suspicions_stddev_pop_order_by {
  event_id: order_by
}

"""aggregate stddev_samp on columns"""
type event_suspicions_stddev_samp_fields {
   event_id: Float
}

"""
order by stddev_samp() on columns of table "event_suspicions"
"""
input event_suspicions_stddev_samp_order_by {
  event_id: order_by
}

"""
Streaming cursor of the table "event_suspicions"
"""
input event_suspicions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: event_suspicions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input event_suspicions_stream_cursor_value_input {
  created_at: timestamptz
  event_id: Int
  id: uuid
  """Ignore future suspicions until this datetime"""
ignore_suspicions_until: timestamptz
  notes: String
  reason: String
  resolved: Boolean
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type event_suspicions_sum_fields {
   event_id: Int
}

"""
order by sum() on columns of table "event_suspicions"
"""
input event_suspicions_sum_order_by {
  event_id: order_by
}

"""
update columns of table "event_suspicions"
"""
enum event_suspicions_update_column {
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
id
  """column name"""
ignore_suspicions_until
  """column name"""
notes
  """column name"""
reason
  """column name"""
resolved
  """column name"""
updated_at
}

input event_suspicions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: event_suspicions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: event_suspicions_set_input
  where: event_suspicions_bool_exp! 
}

"""aggregate var_pop on columns"""
type event_suspicions_var_pop_fields {
   event_id: Float
}

"""
order by var_pop() on columns of table "event_suspicions"
"""
input event_suspicions_var_pop_order_by {
  event_id: order_by
}

"""aggregate var_samp on columns"""
type event_suspicions_var_samp_fields {
   event_id: Float
}

"""
order by var_samp() on columns of table "event_suspicions"
"""
input event_suspicions_var_samp_order_by {
  event_id: order_by
}

"""aggregate variance on columns"""
type event_suspicions_variance_fields {
   event_id: Float
}

"""
order by variance() on columns of table "event_suspicions"
"""
input event_suspicions_variance_order_by {
  event_id: order_by
}

scalar event_symposium_types 

"""
Boolean expression to compare columns of type "event_symposium_types". All fields are combined with logical 'AND'.
"""
input event_symposium_types_comparison_exp {
  _eq: event_symposium_types
  _gt: event_symposium_types
  _gte: event_symposium_types
  _in: [event_symposium_types! ]
  _is_null: Boolean
  _lt: event_symposium_types
  _lte: event_symposium_types
  _neq: event_symposium_types
  _nin: [event_symposium_types! ]
}

"""Events/Conferences"""
type events {
   abbreviation: String
   advanced_admin_demo_requested: Boolean! 
   advanced_admin_trial_start_date: date
   allowed_auth_type: allowed_auth_type! 
   api_enabled: Boolean! 
   api_user_invite_message: String! 
   api_user_invite_subject: String! 
   api_user_invite_subject_register: String! 
   archived: Boolean! 
  """An array relationship"""
 author_fields("""distinct select on columns"""
distinct_on: [author_fields_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_fields_order_by! ], """filter the rows returned"""
where: author_fields_bool_exp): [author_fields! ]! 
  """An aggregate relationship"""
 author_fields_aggregate("""distinct select on columns"""
distinct_on: [author_fields_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_fields_order_by! ], """filter the rows returned"""
where: author_fields_bool_exp): author_fields_aggregate! 
  """An object relationship"""
 client: clients! 
   client_id: Int! 
   column_headers_program_status: column_headers_status
   comments_require_moderation: Boolean! 
   commitee_can_assign_reviews: Boolean! 
   commitee_can_assign_symposium_reviews: Boolean! 
   committee_member_invite_message: String! 
   committee_member_invite_subject: String! 
   committee_member_invite_subject_register: String! 
   committee_members_can_edit_program_code: Boolean! 
   countries: _text
   created_at: timestamptz! 
   created_by: Int
  """An object relationship"""
 created_by_user: users
   currency: String! 
  """An array relationship"""
 decision_questions("""distinct select on columns"""
distinct_on: [decision_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [decision_questions_order_by! ], """filter the rows returned"""
where: decision_questions_bool_exp): [decision_questions! ]! 
  """An aggregate relationship"""
 decision_questions_aggregate("""distinct select on columns"""
distinct_on: [decision_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [decision_questions_order_by! ], """filter the rows returned"""
where: decision_questions_bool_exp): decision_questions_aggregate! 
   delegate_registration_demo_requested: Boolean! 
   delegate_registration_enabled: feature_status! 
   delegate_registration_has_fees: Boolean! 
   delegate_registration_open: Boolean! 
   delegate_registration_show_launch_announcement: Boolean! 
   delegate_registration_trial_disabled: Boolean! 
   delegate_registration_trial_start_date: date
   delegate_registration_v3_phase1_enabled: Boolean! 
   delegate_registration_v3_phase2_enabled: Boolean! 
   delreg_authnet_acc: String
   delreg_authnet_enabled: Boolean! 
   delreg_authnet_key: String
   delreg_authnet_transaction_key: String
   delreg_beta_enabled: Boolean! 
   delreg_currency: paypal_payment_currency! 
   delreg_failed_transaction_message: String
   delreg_invoice_button_text: String! 
   delreg_invoice_details: String! 
   delreg_invoice_email_override: String
   delreg_invoice_enabled: Boolean! 
   delreg_invoice_footer: String! 
   delreg_invoice_name_override_question: Int
   delreg_invoice_show_email: Boolean! 
   delreg_invoice_show_end: Boolean! 
   delreg_invoice_show_invoice_date: Boolean! 
   delreg_invoice_show_invoice_number: Boolean! 
   delreg_invoice_show_name: Boolean! 
   delreg_invoice_show_notification_email: Boolean! 
   delreg_invoice_show_payment_method: Boolean! 
   delreg_invoice_show_registered_by_email: Boolean! 
   delreg_invoice_show_registration_date: Boolean! 
   delreg_invoice_show_registration_number: Boolean! 
   delreg_invoice_show_start: Boolean! 
   delreg_invoice_show_status: Boolean! 
   delreg_invoice_show_telephone: Boolean! 
   delreg_invoice_show_venue: Boolean! 
   delreg_invoice_telephone_override: String
   delreg_invoice_title: String! 
   delreg_paypal_acc: String
   delreg_paypal_enabled: Boolean! 
  """An array relationship"""
 delreg_registrations("""distinct select on columns"""
distinct_on: [delreg_registrations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_registrations_order_by! ], """filter the rows returned"""
where: delreg_registrations_bool_exp): [delreg_registrations! ]! 
  """An aggregate relationship"""
 delreg_registrations_aggregate("""distinct select on columns"""
distinct_on: [delreg_registrations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_registrations_order_by! ], """filter the rows returned"""
where: delreg_registrations_bool_exp): delreg_registrations_aggregate! 
   delreg_stripe_acc: String
   delreg_stripe_enabled: Boolean! 
   delreg_thank_you_message: String
   delreg_vat_rate: numeric! 
   delreg_welcome_message: String
   email_signature: String
   event_admin_invite_message: String! 
   event_admin_invite_subject: String! 
   event_admin_invite_subject_register: String! 
   event_code: String
   event_end_date: date
   event_just_finshed_customer_care_actioned: Boolean! 
   event_logo: String
   event_start_date: date
   event_starts_soon_customer_care_actioned: Boolean! 
   event_title: String! 
   eventbrite_event_id: String
   eventbrite_token: String
  """An array relationship"""
 events_permissions("""distinct select on columns"""
distinct_on: [events_permissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [events_permissions_order_by! ], """filter the rows returned"""
where: events_permissions_bool_exp): [events_permissions! ]! 
  """An aggregate relationship"""
 events_permissions_aggregate("""distinct select on columns"""
distinct_on: [events_permissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [events_permissions_order_by! ], """filter the rows returned"""
where: events_permissions_bool_exp): events_permissions_aggregate! 
   exhibitors_can_chat: Boolean! 
   exhibitors_hide_unengaged_details: Boolean! 
   filter_committee_reviewers_by_category: Boolean! 
   has_multi_stage: Boolean! 
  """Whether the event admin has enabled networking for the event"""
 has_networking: Boolean! 
   has_new_auth: Boolean! 
   has_report_builders: Boolean! 
   has_reviewing: Boolean! 
   has_submitter_can_see_review: Boolean! 
   has_symposia: feature_status! 
   has_virtual_conference: Boolean! 
   has_virtual_conference_group_chat: Boolean! 
   has_virtual_conference_private_chat: Boolean! 
   has_virtual_conference_public_chat: Boolean! 
   has_web_payments: Boolean! 
   hide_submitter_from_committee: Boolean! 
  """A unique identifier for each event"""
 id: Int! 
   ieee_copyright_art_source: String
   ieee_copyright_form_enabled: Boolean! 
   ieee_copyright_has_form: Boolean! 
   ieee_copyright_pub_title: String
   in_titles_listing_label: String
   individual_author_forms_presenter_only: Boolean! 
   invoice: Boolean! 
   invoice_text: String
   invoice_title: String
   link_status: Boolean
   logo_display_program_status: Boolean! 
   multi_stage_demo_requested: Boolean! 
   multi_stage_trial_start_date: date
   networking_social_media_email_enabled: Boolean! 
   networking_social_media_facebook_enabled: Boolean! 
   networking_social_media_instagram_enabled: Boolean! 
   networking_social_media_linkedin_enabled: Boolean! 
   networking_social_media_twitter_enabled: Boolean! 
   notification_email: citext
  """An array relationship"""
 orders("""distinct select on columns"""
distinct_on: [dr_orders_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_orders_order_by! ], """filter the rows returned"""
where: dr_orders_bool_exp): [dr_orders! ]! 
  """An aggregate relationship"""
 orders_aggregate("""distinct select on columns"""
distinct_on: [dr_orders_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_orders_order_by! ], """filter the rows returned"""
where: dr_orders_bool_exp): dr_orders_aggregate! 
   original_price_package: price_package
   payment_extension_days: Int
  """An array relationship"""
 payments("""distinct select on columns"""
distinct_on: [event_payments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_payments_order_by! ], """filter the rows returned"""
where: event_payments_bool_exp): [event_payments! ]! 
  """An aggregate relationship"""
 payments_aggregate("""distinct select on columns"""
distinct_on: [event_payments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_payments_order_by! ], """filter the rows returned"""
where: event_payments_bool_exp): event_payments_aggregate! 
   paypal_payment_gateway_account: String
   price_package: price_package! 
   program_background_colour: String! 
   program_background_logo: String
   program_background_logo_cut_around: Boolean! 
   program_background_logo_fade_bottom: Boolean! 
   program_background_logo_type: logo_type! 
   program_beta_enabled: Boolean! 
   program_chair_label: String! 
   program_chair_visibility: Boolean! 
   program_colour: String
   program_colours: colour_type! 
   program_custom_title_text: String
  """An array relationship"""
 program_dates("""distinct select on columns"""
distinct_on: [program_dates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_dates_order_by! ], """filter the rows returned"""
where: program_dates_bool_exp): [program_dates! ]! 
  """An aggregate relationship"""
 program_dates_aggregate("""distinct select on columns"""
distinct_on: [program_dates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_dates_order_by! ], """filter the rows returned"""
where: program_dates_bool_exp): program_dates_aggregate! 
   program_demo_requested: Boolean! 
   program_description_visibility: Boolean! 
   program_error_message: String
   program_event_is_in_public_list: Boolean! 
   program_hide_dates_times: Boolean! 
   program_info_abstract_books_title: String! 
   program_info_downloads_title: String! 
   program_info_information_title: String! 
   program_info_secondary_information_title: String! 
   program_information_public: Boolean! 
   program_location_label: String! 
   program_location_visibility: Boolean! 
   program_menu_logo: String
   program_menu_logo_type: logo_type! 
   program_primary_colour: String! 
   program_published: Boolean
   program_secondary_colour: String! 
   program_session_comments: program_comment_status! 
   program_session_downloads: Boolean
   program_short_link: String
   program_show_submission_ids: Boolean! 
   program_submission_comments: program_comment_status! 
   program_symposium_comments: program_comment_status! 
   program_timezone_control_enabled: Boolean! 
   program_timezone_display: timezone_display! 
   program_title: title_type! 
   program_top_logo: String
   program_top_logo_type: logo_type! 
   program_track_label: String! 
   program_track_visibility: Boolean! 
   program_trial_disabled: Boolean! 
   program_trial_start_date: date
   program_type: program_type! 
   program_type_label: String! 
   program_type_visibility: Boolean! 
   program_use_columns_as_locations: Boolean! 
   program_video_link_label: String! 
   programme_builder_access_code: String
   programme_builder_model("""JSON select path"""
path: String): jsonb
   public_program_enabled: Boolean! 
  """An array relationship"""
 questions("""distinct select on columns"""
distinct_on: [questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_order_by! ], """filter the rows returned"""
where: questions_bool_exp): [questions! ]! 
  """An aggregate relationship"""
 questions_aggregate("""distinct select on columns"""
distinct_on: [questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_order_by! ], """filter the rows returned"""
where: questions_bool_exp): questions_aggregate! 
   quickbooks_item_number: Int
   reviewing_deadline_customer_care_actioned: Boolean! 
   secure_program_allowed_delegate_status: _delegate_registration_status! 
   secure_program_login: secure_program_auth! 
   send_symposium_attach_and_remove_emails: Boolean! 
   session_chair_author_label: String! 
   session_chair_city_label: String
   session_chair_country_label: String
   session_chair_has_elsevier_affiliations_search: Boolean! 
   session_chair_institution_label: String
   session_chair_mandatory_city: Boolean! 
   session_chair_mandatory_country: Boolean! 
   session_chair_mandatory_institution: Boolean! 
   session_chair_mandatory_state: Boolean! 
   session_chair_show_city: Boolean! 
   session_chair_show_country: Boolean! 
   session_chair_show_institution: Boolean! 
   session_chair_show_state: Boolean! 
   session_chair_state_label: String
   show_logos_on_dashboard: Boolean! 
  """
  Whether presenter emails should be displayed in submissions in the virtual conference
  """
 show_presenter_emails_in_vc: Boolean! 
   show_to_committee_accepted_individual_abstracts: Boolean! 
   show_to_committee_accepted_sorted_by_acceptance: Boolean! 
   show_to_committee_accepted_sorted_by_code: Boolean! 
   show_to_committee_accepted_sorted_by_id: Boolean! 
   show_to_committee_all_grouped_by_average_grade: Boolean! 
   show_to_committee_all_grouped_by_final_category: Boolean! 
   show_to_committee_all_individual_abstracts: Boolean! 
   show_to_committee_all_sorted_by_id: Boolean! 
   show_to_committee_countries_accepted: Boolean! 
   show_to_committee_countries_accepted_presenters: Boolean! 
   show_to_committee_countries_all: Boolean! 
   show_to_committee_countries_all_presenters: Boolean! 
   show_to_committee_grouped_by_acceptance: Boolean! 
   show_to_committee_grouped_by_final_category: Boolean! 
   show_to_committee_indexed_authors: Boolean! 
   show_to_committee_indexed_authors_with_affiliations: Boolean! 
   show_to_committee_indexed_presenters: Boolean! 
   show_to_committee_indexed_presenters_with_affiliation: Boolean! 
   soaa_notes: String
   some_abstracts_received_customer_care_actioned: Boolean! 
   some_decisions_received_customer_care_actioned: Boolean! 
  """An array relationship"""
 sponsors("""distinct select on columns"""
distinct_on: [event_program_menu_sponsors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_program_menu_sponsors_order_by! ], """filter the rows returned"""
where: event_program_menu_sponsors_bool_exp): [event_program_menu_sponsors! ]! 
  """An aggregate relationship"""
 sponsors_aggregate("""distinct select on columns"""
distinct_on: [event_program_menu_sponsors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_program_menu_sponsors_order_by! ], """filter the rows returned"""
where: event_program_menu_sponsors_bool_exp): event_program_menu_sponsors_aggregate! 
   sponsors_label: String! 
  """An array relationship"""
 stages("""distinct select on columns"""
distinct_on: [stages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [stages_order_by! ], """filter the rows returned"""
where: stages_bool_exp): [stages! ]! 
  """An aggregate relationship"""
 stages_aggregate("""distinct select on columns"""
distinct_on: [stages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [stages_order_by! ], """filter the rows returned"""
where: stages_bool_exp): stages_aggregate! 
   status: event_status! 
   stripe_user_id: String
   submission_deadline_reached_customer_care_actioned: Boolean! 
   submission_form_right_to_left: Boolean! 
   submission_payment_paypal_gateway: String
  """An array relationship"""
 submissions("""distinct select on columns"""
distinct_on: [submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submissions_order_by! ], """filter the rows returned"""
where: submissions_bool_exp): [submissions! ]! 
  """An aggregate relationship"""
 submissions_aggregate("""distinct select on columns"""
distinct_on: [submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submissions_order_by! ], """filter the rows returned"""
where: submissions_bool_exp): submissions_aggregate! 
  """An array relationship"""
 suspicions("""distinct select on columns"""
distinct_on: [event_suspicions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_suspicions_order_by! ], """filter the rows returned"""
where: event_suspicions_bool_exp): [event_suspicions! ]! 
  """An aggregate relationship"""
 suspicions_aggregate("""distinct select on columns"""
distinct_on: [event_suspicions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_suspicions_order_by! ], """filter the rows returned"""
where: event_suspicions_bool_exp): event_suspicions_aggregate! 
   symposia_label: String
   symposia_thank_you_message: String
   symposia_welcome_message: String
   symposium_attachments_open: Boolean! 
   symposium_decisions_committee_decide: Boolean! 
   symposium_demo_requested: Boolean! 
   symposium_hide_submitter_email: Boolean! 
   symposium_hide_submitter_name: Boolean! 
   symposium_invites_open: Boolean! 
   symposium_label: String
   symposium_reviews_open: Boolean! 
   symposium_reviews_thank_you_message: String
   symposium_reviews_welcome_message: String
   symposium_submissions_open: Boolean! 
   symposium_submitters_can_view_decisions: Boolean! 
   symposium_submitters_can_view_reviews: Boolean! 
   symposium_trial_disabled: Boolean! 
   symposium_trial_start_date: date
   symposium_type: event_symposium_types! 
   telephone_number: String
   theme_banner_img: String
   theme_logo: String
   theme_panel_description: String
   theme_panel_logo: String
   theme_panel_overline: String
   theme_panel_replace_logo: Boolean! 
   theme_panel_show_dashboard: Boolean! 
   theme_panel_show_dates: Boolean! 
   theme_panel_show_submitters: Boolean! 
   theme_panel_subtitle: String
   theme_panel_title: String
   theme_panel_use_event_title: Boolean! 
   theme_panel_use_primary_colour: Boolean! 
   theme_primary: String! 
   theme_primary_active: String! 
   theme_primary_background: String! 
   theme_primary_dark: String! 
   theme_primary_hover: String! 
   theme_secondary: String! 
   theme_secondary_active: String! 
   theme_secondary_hover: String! 
   theme_secondary_text: String! 
   time_display_program_status: time_display_status
   time_stamp: bigint! 
   timezone: String! 
   timezone_locked_to_event: Boolean! 
   updated_at: timestamptz
   use_old_review_app: Boolean! 
   vat_rate: numeric
   venue: String
   verified_sender_email_id: Int
   website: String
   zoom_access_token: String
   zoom_account_id: String
   zoom_has_integration: Boolean! 
   zoom_refresh_token: String
}

"""
aggregated selection of "events_with_archived"
"""
type events_aggregate {
   aggregate: events_aggregate_fields
   nodes: [events! ]! 
}

input events_aggregate_bool_exp {
  bool_and: events_aggregate_bool_exp_bool_and
  bool_or: events_aggregate_bool_exp_bool_or
  count: events_aggregate_bool_exp_count
}

input events_aggregate_bool_exp_bool_and {
  arguments: events_select_column_events_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: events_bool_exp
  predicate: Boolean_comparison_exp! 
}

input events_aggregate_bool_exp_bool_or {
  arguments: events_select_column_events_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: events_bool_exp
  predicate: Boolean_comparison_exp! 
}

input events_aggregate_bool_exp_count {
  arguments: [events_select_column! ]
  distinct: Boolean
  filter: events_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "events_with_archived"
"""
type events_aggregate_fields {
   avg: events_avg_fields
   count(columns: [events_select_column! ], distinct: Boolean): Int! 
   max: events_max_fields
   min: events_min_fields
   stddev: events_stddev_fields
   stddev_pop: events_stddev_pop_fields
   stddev_samp: events_stddev_samp_fields
   sum: events_sum_fields
   var_pop: events_var_pop_fields
   var_samp: events_var_samp_fields
   variance: events_variance_fields
}

"""
order by aggregate values of table "events_with_archived"
"""
input events_aggregate_order_by {
  avg: events_avg_order_by
  count: order_by
  max: events_max_order_by
  min: events_min_order_by
  stddev: events_stddev_order_by
  stddev_pop: events_stddev_pop_order_by
  stddev_samp: events_stddev_samp_order_by
  sum: events_sum_order_by
  var_pop: events_var_pop_order_by
  var_samp: events_var_samp_order_by
  variance: events_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input events_append_input {
  programme_builder_model: jsonb
}

"""
input type for inserting array relation for remote table "events_with_archived"
"""
input events_arr_rel_insert_input {
  data: [events_insert_input! ]! 
  """upsert condition"""
on_conflict: events_on_conflict
}

"""aggregate avg on columns"""
type events_avg_fields {
   client_id: Float
   created_by: Float
   delreg_invoice_name_override_question: Float
   delreg_vat_rate: Float
  """A unique identifier for each event"""
 id: Float
   payment_extension_days: Float
   quickbooks_item_number: Float
   time_stamp: Float
   vat_rate: Float
   verified_sender_email_id: Float
}

"""
order by avg() on columns of table "events_with_archived"
"""
input events_avg_order_by {
  client_id: order_by
  created_by: order_by
  delreg_invoice_name_override_question: order_by
  delreg_vat_rate: order_by
  """A unique identifier for each event"""
id: order_by
  payment_extension_days: order_by
  quickbooks_item_number: order_by
  time_stamp: order_by
  vat_rate: order_by
  verified_sender_email_id: order_by
}

"""
Boolean expression to filter rows from the table "events_with_archived". All fields are combined with a logical 'AND'.
"""
input events_bool_exp {
  _and: [events_bool_exp! ]
  _not: events_bool_exp
  _or: [events_bool_exp! ]
  abbreviation: String_comparison_exp
  advanced_admin_demo_requested: Boolean_comparison_exp
  advanced_admin_trial_start_date: date_comparison_exp
  allowed_auth_type: allowed_auth_type_comparison_exp
  api_enabled: Boolean_comparison_exp
  api_user_invite_message: String_comparison_exp
  api_user_invite_subject: String_comparison_exp
  api_user_invite_subject_register: String_comparison_exp
  archived: Boolean_comparison_exp
  author_fields: author_fields_bool_exp
  author_fields_aggregate: author_fields_aggregate_bool_exp
  client: clients_bool_exp
  client_id: Int_comparison_exp
  column_headers_program_status: column_headers_status_comparison_exp
  comments_require_moderation: Boolean_comparison_exp
  commitee_can_assign_reviews: Boolean_comparison_exp
  commitee_can_assign_symposium_reviews: Boolean_comparison_exp
  committee_member_invite_message: String_comparison_exp
  committee_member_invite_subject: String_comparison_exp
  committee_member_invite_subject_register: String_comparison_exp
  committee_members_can_edit_program_code: Boolean_comparison_exp
  countries: _text_comparison_exp
  created_at: timestamptz_comparison_exp
  created_by: Int_comparison_exp
  created_by_user: users_bool_exp
  currency: String_comparison_exp
  decision_questions: decision_questions_bool_exp
  decision_questions_aggregate: decision_questions_aggregate_bool_exp
  delegate_registration_demo_requested: Boolean_comparison_exp
  delegate_registration_enabled: feature_status_comparison_exp
  delegate_registration_has_fees: Boolean_comparison_exp
  delegate_registration_open: Boolean_comparison_exp
  delegate_registration_show_launch_announcement: Boolean_comparison_exp
  delegate_registration_trial_disabled: Boolean_comparison_exp
  delegate_registration_trial_start_date: date_comparison_exp
  delegate_registration_v3_phase1_enabled: Boolean_comparison_exp
  delegate_registration_v3_phase2_enabled: Boolean_comparison_exp
  delreg_authnet_acc: String_comparison_exp
  delreg_authnet_enabled: Boolean_comparison_exp
  delreg_authnet_key: String_comparison_exp
  delreg_authnet_transaction_key: String_comparison_exp
  delreg_beta_enabled: Boolean_comparison_exp
  delreg_currency: paypal_payment_currency_comparison_exp
  delreg_failed_transaction_message: String_comparison_exp
  delreg_invoice_button_text: String_comparison_exp
  delreg_invoice_details: String_comparison_exp
  delreg_invoice_email_override: String_comparison_exp
  delreg_invoice_enabled: Boolean_comparison_exp
  delreg_invoice_footer: String_comparison_exp
  delreg_invoice_name_override_question: Int_comparison_exp
  delreg_invoice_show_email: Boolean_comparison_exp
  delreg_invoice_show_end: Boolean_comparison_exp
  delreg_invoice_show_invoice_date: Boolean_comparison_exp
  delreg_invoice_show_invoice_number: Boolean_comparison_exp
  delreg_invoice_show_name: Boolean_comparison_exp
  delreg_invoice_show_notification_email: Boolean_comparison_exp
  delreg_invoice_show_payment_method: Boolean_comparison_exp
  delreg_invoice_show_registered_by_email: Boolean_comparison_exp
  delreg_invoice_show_registration_date: Boolean_comparison_exp
  delreg_invoice_show_registration_number: Boolean_comparison_exp
  delreg_invoice_show_start: Boolean_comparison_exp
  delreg_invoice_show_status: Boolean_comparison_exp
  delreg_invoice_show_telephone: Boolean_comparison_exp
  delreg_invoice_show_venue: Boolean_comparison_exp
  delreg_invoice_telephone_override: String_comparison_exp
  delreg_invoice_title: String_comparison_exp
  delreg_paypal_acc: String_comparison_exp
  delreg_paypal_enabled: Boolean_comparison_exp
  delreg_registrations: delreg_registrations_bool_exp
  delreg_registrations_aggregate: delreg_registrations_aggregate_bool_exp
  delreg_stripe_acc: String_comparison_exp
  delreg_stripe_enabled: Boolean_comparison_exp
  delreg_thank_you_message: String_comparison_exp
  delreg_vat_rate: numeric_comparison_exp
  delreg_welcome_message: String_comparison_exp
  email_signature: String_comparison_exp
  event_admin_invite_message: String_comparison_exp
  event_admin_invite_subject: String_comparison_exp
  event_admin_invite_subject_register: String_comparison_exp
  event_code: String_comparison_exp
  event_end_date: date_comparison_exp
  event_just_finshed_customer_care_actioned: Boolean_comparison_exp
  event_logo: String_comparison_exp
  event_start_date: date_comparison_exp
  event_starts_soon_customer_care_actioned: Boolean_comparison_exp
  event_title: String_comparison_exp
  eventbrite_event_id: String_comparison_exp
  eventbrite_token: String_comparison_exp
  events_permissions: events_permissions_bool_exp
  events_permissions_aggregate: events_permissions_aggregate_bool_exp
  exhibitors_can_chat: Boolean_comparison_exp
  exhibitors_hide_unengaged_details: Boolean_comparison_exp
  filter_committee_reviewers_by_category: Boolean_comparison_exp
  has_multi_stage: Boolean_comparison_exp
  has_networking: Boolean_comparison_exp
  has_new_auth: Boolean_comparison_exp
  has_report_builders: Boolean_comparison_exp
  has_reviewing: Boolean_comparison_exp
  has_submitter_can_see_review: Boolean_comparison_exp
  has_symposia: feature_status_comparison_exp
  has_virtual_conference: Boolean_comparison_exp
  has_virtual_conference_group_chat: Boolean_comparison_exp
  has_virtual_conference_private_chat: Boolean_comparison_exp
  has_virtual_conference_public_chat: Boolean_comparison_exp
  has_web_payments: Boolean_comparison_exp
  hide_submitter_from_committee: Boolean_comparison_exp
  id: Int_comparison_exp
  ieee_copyright_art_source: String_comparison_exp
  ieee_copyright_form_enabled: Boolean_comparison_exp
  ieee_copyright_has_form: Boolean_comparison_exp
  ieee_copyright_pub_title: String_comparison_exp
  in_titles_listing_label: String_comparison_exp
  individual_author_forms_presenter_only: Boolean_comparison_exp
  invoice: Boolean_comparison_exp
  invoice_text: String_comparison_exp
  invoice_title: String_comparison_exp
  link_status: Boolean_comparison_exp
  logo_display_program_status: Boolean_comparison_exp
  multi_stage_demo_requested: Boolean_comparison_exp
  multi_stage_trial_start_date: date_comparison_exp
  networking_social_media_email_enabled: Boolean_comparison_exp
  networking_social_media_facebook_enabled: Boolean_comparison_exp
  networking_social_media_instagram_enabled: Boolean_comparison_exp
  networking_social_media_linkedin_enabled: Boolean_comparison_exp
  networking_social_media_twitter_enabled: Boolean_comparison_exp
  notification_email: citext_comparison_exp
  orders: dr_orders_bool_exp
  orders_aggregate: dr_orders_aggregate_bool_exp
  original_price_package: price_package_comparison_exp
  payment_extension_days: Int_comparison_exp
  payments: event_payments_bool_exp
  payments_aggregate: event_payments_aggregate_bool_exp
  paypal_payment_gateway_account: String_comparison_exp
  price_package: price_package_comparison_exp
  program_background_colour: String_comparison_exp
  program_background_logo: String_comparison_exp
  program_background_logo_cut_around: Boolean_comparison_exp
  program_background_logo_fade_bottom: Boolean_comparison_exp
  program_background_logo_type: logo_type_comparison_exp
  program_beta_enabled: Boolean_comparison_exp
  program_chair_label: String_comparison_exp
  program_chair_visibility: Boolean_comparison_exp
  program_colour: String_comparison_exp
  program_colours: colour_type_comparison_exp
  program_custom_title_text: String_comparison_exp
  program_dates: program_dates_bool_exp
  program_dates_aggregate: program_dates_aggregate_bool_exp
  program_demo_requested: Boolean_comparison_exp
  program_description_visibility: Boolean_comparison_exp
  program_error_message: String_comparison_exp
  program_event_is_in_public_list: Boolean_comparison_exp
  program_hide_dates_times: Boolean_comparison_exp
  program_info_abstract_books_title: String_comparison_exp
  program_info_downloads_title: String_comparison_exp
  program_info_information_title: String_comparison_exp
  program_info_secondary_information_title: String_comparison_exp
  program_information_public: Boolean_comparison_exp
  program_location_label: String_comparison_exp
  program_location_visibility: Boolean_comparison_exp
  program_menu_logo: String_comparison_exp
  program_menu_logo_type: logo_type_comparison_exp
  program_primary_colour: String_comparison_exp
  program_published: Boolean_comparison_exp
  program_secondary_colour: String_comparison_exp
  program_session_comments: program_comment_status_comparison_exp
  program_session_downloads: Boolean_comparison_exp
  program_short_link: String_comparison_exp
  program_show_submission_ids: Boolean_comparison_exp
  program_submission_comments: program_comment_status_comparison_exp
  program_symposium_comments: program_comment_status_comparison_exp
  program_timezone_control_enabled: Boolean_comparison_exp
  program_timezone_display: timezone_display_comparison_exp
  program_title: title_type_comparison_exp
  program_top_logo: String_comparison_exp
  program_top_logo_type: logo_type_comparison_exp
  program_track_label: String_comparison_exp
  program_track_visibility: Boolean_comparison_exp
  program_trial_disabled: Boolean_comparison_exp
  program_trial_start_date: date_comparison_exp
  program_type: program_type_comparison_exp
  program_type_label: String_comparison_exp
  program_type_visibility: Boolean_comparison_exp
  program_use_columns_as_locations: Boolean_comparison_exp
  program_video_link_label: String_comparison_exp
  programme_builder_access_code: String_comparison_exp
  programme_builder_model: jsonb_comparison_exp
  public_program_enabled: Boolean_comparison_exp
  questions: questions_bool_exp
  questions_aggregate: questions_aggregate_bool_exp
  quickbooks_item_number: Int_comparison_exp
  reviewing_deadline_customer_care_actioned: Boolean_comparison_exp
  secure_program_allowed_delegate_status: _delegate_registration_status_comparison_exp
  secure_program_login: secure_program_auth_comparison_exp
  send_symposium_attach_and_remove_emails: Boolean_comparison_exp
  session_chair_author_label: String_comparison_exp
  session_chair_city_label: String_comparison_exp
  session_chair_country_label: String_comparison_exp
  session_chair_has_elsevier_affiliations_search: Boolean_comparison_exp
  session_chair_institution_label: String_comparison_exp
  session_chair_mandatory_city: Boolean_comparison_exp
  session_chair_mandatory_country: Boolean_comparison_exp
  session_chair_mandatory_institution: Boolean_comparison_exp
  session_chair_mandatory_state: Boolean_comparison_exp
  session_chair_show_city: Boolean_comparison_exp
  session_chair_show_country: Boolean_comparison_exp
  session_chair_show_institution: Boolean_comparison_exp
  session_chair_show_state: Boolean_comparison_exp
  session_chair_state_label: String_comparison_exp
  show_logos_on_dashboard: Boolean_comparison_exp
  show_presenter_emails_in_vc: Boolean_comparison_exp
  show_to_committee_accepted_individual_abstracts: Boolean_comparison_exp
  show_to_committee_accepted_sorted_by_acceptance: Boolean_comparison_exp
  show_to_committee_accepted_sorted_by_code: Boolean_comparison_exp
  show_to_committee_accepted_sorted_by_id: Boolean_comparison_exp
  show_to_committee_all_grouped_by_average_grade: Boolean_comparison_exp
  show_to_committee_all_grouped_by_final_category: Boolean_comparison_exp
  show_to_committee_all_individual_abstracts: Boolean_comparison_exp
  show_to_committee_all_sorted_by_id: Boolean_comparison_exp
  show_to_committee_countries_accepted: Boolean_comparison_exp
  show_to_committee_countries_accepted_presenters: Boolean_comparison_exp
  show_to_committee_countries_all: Boolean_comparison_exp
  show_to_committee_countries_all_presenters: Boolean_comparison_exp
  show_to_committee_grouped_by_acceptance: Boolean_comparison_exp
  show_to_committee_grouped_by_final_category: Boolean_comparison_exp
  show_to_committee_indexed_authors: Boolean_comparison_exp
  show_to_committee_indexed_authors_with_affiliations: Boolean_comparison_exp
  show_to_committee_indexed_presenters: Boolean_comparison_exp
  show_to_committee_indexed_presenters_with_affiliation: Boolean_comparison_exp
  soaa_notes: String_comparison_exp
  some_abstracts_received_customer_care_actioned: Boolean_comparison_exp
  some_decisions_received_customer_care_actioned: Boolean_comparison_exp
  sponsors: event_program_menu_sponsors_bool_exp
  sponsors_aggregate: event_program_menu_sponsors_aggregate_bool_exp
  sponsors_label: String_comparison_exp
  stages: stages_bool_exp
  stages_aggregate: stages_aggregate_bool_exp
  status: event_status_comparison_exp
  stripe_user_id: String_comparison_exp
  submission_deadline_reached_customer_care_actioned: Boolean_comparison_exp
  submission_form_right_to_left: Boolean_comparison_exp
  submission_payment_paypal_gateway: String_comparison_exp
  submissions: submissions_bool_exp
  submissions_aggregate: submissions_aggregate_bool_exp
  suspicions: event_suspicions_bool_exp
  suspicions_aggregate: event_suspicions_aggregate_bool_exp
  symposia_label: String_comparison_exp
  symposia_thank_you_message: String_comparison_exp
  symposia_welcome_message: String_comparison_exp
  symposium_attachments_open: Boolean_comparison_exp
  symposium_decisions_committee_decide: Boolean_comparison_exp
  symposium_demo_requested: Boolean_comparison_exp
  symposium_hide_submitter_email: Boolean_comparison_exp
  symposium_hide_submitter_name: Boolean_comparison_exp
  symposium_invites_open: Boolean_comparison_exp
  symposium_label: String_comparison_exp
  symposium_reviews_open: Boolean_comparison_exp
  symposium_reviews_thank_you_message: String_comparison_exp
  symposium_reviews_welcome_message: String_comparison_exp
  symposium_submissions_open: Boolean_comparison_exp
  symposium_submitters_can_view_decisions: Boolean_comparison_exp
  symposium_submitters_can_view_reviews: Boolean_comparison_exp
  symposium_trial_disabled: Boolean_comparison_exp
  symposium_trial_start_date: date_comparison_exp
  symposium_type: event_symposium_types_comparison_exp
  telephone_number: String_comparison_exp
  theme_banner_img: String_comparison_exp
  theme_logo: String_comparison_exp
  theme_panel_description: String_comparison_exp
  theme_panel_logo: String_comparison_exp
  theme_panel_overline: String_comparison_exp
  theme_panel_replace_logo: Boolean_comparison_exp
  theme_panel_show_dashboard: Boolean_comparison_exp
  theme_panel_show_dates: Boolean_comparison_exp
  theme_panel_show_submitters: Boolean_comparison_exp
  theme_panel_subtitle: String_comparison_exp
  theme_panel_title: String_comparison_exp
  theme_panel_use_event_title: Boolean_comparison_exp
  theme_panel_use_primary_colour: Boolean_comparison_exp
  theme_primary: String_comparison_exp
  theme_primary_active: String_comparison_exp
  theme_primary_background: String_comparison_exp
  theme_primary_dark: String_comparison_exp
  theme_primary_hover: String_comparison_exp
  theme_secondary: String_comparison_exp
  theme_secondary_active: String_comparison_exp
  theme_secondary_hover: String_comparison_exp
  theme_secondary_text: String_comparison_exp
  time_display_program_status: time_display_status_comparison_exp
  time_stamp: bigint_comparison_exp
  timezone: String_comparison_exp
  timezone_locked_to_event: Boolean_comparison_exp
  updated_at: timestamptz_comparison_exp
  use_old_review_app: Boolean_comparison_exp
  vat_rate: numeric_comparison_exp
  venue: String_comparison_exp
  verified_sender_email_id: Int_comparison_exp
  website: String_comparison_exp
  zoom_access_token: String_comparison_exp
  zoom_account_id: String_comparison_exp
  zoom_has_integration: Boolean_comparison_exp
  zoom_refresh_token: String_comparison_exp
}

"""
unique or primary key constraints on table "events_with_archived"
"""
enum events_constraint {
  """
  unique or primary key constraint on columns "event_id"
  """
events_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input events_delete_at_path_input {
  programme_builder_model: [String! ]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input events_delete_elem_input {
  programme_builder_model: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input events_delete_key_input {
  programme_builder_model: String
}

"""
input type for incrementing numeric columns in table "events_with_archived"
"""
input events_inc_input {
  client_id: Int
  created_by: Int
  delreg_invoice_name_override_question: Int
  delreg_vat_rate: numeric
  """A unique identifier for each event"""
id: Int
  payment_extension_days: Int
  quickbooks_item_number: Int
  time_stamp: bigint
  vat_rate: numeric
  verified_sender_email_id: Int
}

"""
input type for inserting data into table "events_with_archived"
"""
input events_insert_input {
  abbreviation: String
  advanced_admin_demo_requested: Boolean! 
  advanced_admin_trial_start_date: date
  allowed_auth_type: allowed_auth_type! 
  api_enabled: Boolean! 
  api_user_invite_message: String! 
  api_user_invite_subject: String! 
  api_user_invite_subject_register: String! 
  archived: Boolean! 
  author_fields: author_fields_arr_rel_insert_input
  client: clients_obj_rel_insert_input
  client_id: Int! 
  column_headers_program_status: column_headers_status! 
  comments_require_moderation: Boolean! 
  commitee_can_assign_reviews: Boolean! 
  commitee_can_assign_symposium_reviews: Boolean! 
  committee_member_invite_message: String! 
  committee_member_invite_subject: String! 
  committee_member_invite_subject_register: String! 
  committee_members_can_edit_program_code: Boolean! 
  countries: _text! 
  created_at: timestamptz! 
  created_by: Int
  created_by_user: users_obj_rel_insert_input
  currency: String! 
  decision_questions: decision_questions_arr_rel_insert_input
  delegate_registration_demo_requested: Boolean! 
  delegate_registration_enabled: feature_status! 
  delegate_registration_has_fees: Boolean! 
  delegate_registration_open: Boolean! 
  delegate_registration_show_launch_announcement: Boolean! 
  delegate_registration_trial_disabled: Boolean! 
  delegate_registration_trial_start_date: date
  delegate_registration_v3_phase1_enabled: Boolean! 
  delegate_registration_v3_phase2_enabled: Boolean! 
  delreg_authnet_acc: String
  delreg_authnet_enabled: Boolean! 
  delreg_authnet_key: String
  delreg_authnet_transaction_key: String
  delreg_beta_enabled: Boolean! 
  delreg_currency: paypal_payment_currency! 
  delreg_failed_transaction_message: String
  delreg_invoice_button_text: String! 
  delreg_invoice_details: String! 
  delreg_invoice_email_override: String
  delreg_invoice_enabled: Boolean! 
  delreg_invoice_footer: String! 
  delreg_invoice_name_override_question: Int
  delreg_invoice_show_email: Boolean! 
  delreg_invoice_show_end: Boolean! 
  delreg_invoice_show_invoice_date: Boolean! 
  delreg_invoice_show_invoice_number: Boolean! 
  delreg_invoice_show_name: Boolean! 
  delreg_invoice_show_notification_email: Boolean! 
  delreg_invoice_show_payment_method: Boolean! 
  delreg_invoice_show_registered_by_email: Boolean! 
  delreg_invoice_show_registration_date: Boolean! 
  delreg_invoice_show_registration_number: Boolean! 
  delreg_invoice_show_start: Boolean! 
  delreg_invoice_show_status: Boolean! 
  delreg_invoice_show_telephone: Boolean! 
  delreg_invoice_show_venue: Boolean! 
  delreg_invoice_telephone_override: String
  delreg_invoice_title: String! 
  delreg_paypal_acc: String
  delreg_paypal_enabled: Boolean! 
  delreg_registrations: delreg_registrations_arr_rel_insert_input
  delreg_stripe_acc: String
  delreg_stripe_enabled: Boolean! 
  delreg_thank_you_message: String
  delreg_vat_rate: numeric! 
  delreg_welcome_message: String
  email_signature: String! 
  event_admin_invite_message: String! 
  event_admin_invite_subject: String! 
  event_admin_invite_subject_register: String! 
  event_code: String
  event_end_date: date
  event_just_finshed_customer_care_actioned: Boolean! 
  event_logo: String
  event_start_date: date
  event_starts_soon_customer_care_actioned: Boolean! 
  event_title: String! 
  eventbrite_event_id: String
  eventbrite_token: String
  events_permissions: events_permissions_arr_rel_insert_input
  exhibitors_can_chat: Boolean! 
  exhibitors_hide_unengaged_details: Boolean! 
  filter_committee_reviewers_by_category: Boolean! 
  has_multi_stage: Boolean! 
  """Whether the event admin has enabled networking for the event"""
has_networking: Boolean! 
  has_new_auth: Boolean! 
  has_report_builders: Boolean! 
  has_reviewing: Boolean! 
  has_submitter_can_see_review: Boolean! 
  has_symposia: feature_status! 
  has_virtual_conference: Boolean! 
  has_virtual_conference_group_chat: Boolean! 
  has_virtual_conference_private_chat: Boolean! 
  has_virtual_conference_public_chat: Boolean! 
  has_web_payments: Boolean! 
  hide_submitter_from_committee: Boolean! 
  """A unique identifier for each event"""
id: Int
  ieee_copyright_art_source: String
  ieee_copyright_form_enabled: Boolean! 
  ieee_copyright_has_form: Boolean! 
  ieee_copyright_pub_title: String
  in_titles_listing_label: String
  individual_author_forms_presenter_only: Boolean! 
  invoice: Boolean! 
  invoice_text: String
  invoice_title: String! 
  link_status: Boolean
  logo_display_program_status: Boolean! 
  multi_stage_demo_requested: Boolean! 
  multi_stage_trial_start_date: date
  networking_social_media_email_enabled: Boolean! 
  networking_social_media_facebook_enabled: Boolean! 
  networking_social_media_instagram_enabled: Boolean! 
  networking_social_media_linkedin_enabled: Boolean! 
  networking_social_media_twitter_enabled: Boolean! 
  notification_email: citext
  orders: dr_orders_arr_rel_insert_input
  original_price_package: price_package
  payment_extension_days: Int
  payments: event_payments_arr_rel_insert_input
  paypal_payment_gateway_account: String
  price_package: price_package! 
  program_background_colour: String! 
  program_background_logo: String
  program_background_logo_cut_around: Boolean! 
  program_background_logo_fade_bottom: Boolean! 
  program_background_logo_type: logo_type! 
  program_beta_enabled: Boolean! 
  program_chair_label: String! 
  program_chair_visibility: Boolean! 
  program_colour: String
  program_colours: colour_type! 
  program_custom_title_text: String
  program_dates: program_dates_arr_rel_insert_input
  program_demo_requested: Boolean! 
  program_description_visibility: Boolean! 
  program_error_message: String
  program_event_is_in_public_list: Boolean! 
  program_hide_dates_times: Boolean! 
  program_info_abstract_books_title: String! 
  program_info_downloads_title: String! 
  program_info_information_title: String! 
  program_info_secondary_information_title: String! 
  program_information_public: Boolean! 
  program_location_label: String! 
  program_location_visibility: Boolean! 
  program_menu_logo: String
  program_menu_logo_type: logo_type! 
  program_primary_colour: String! 
  program_published: Boolean! 
  program_secondary_colour: String! 
  program_session_comments: program_comment_status! 
  program_session_downloads: Boolean
  program_short_link: String
  program_show_submission_ids: Boolean! 
  program_submission_comments: program_comment_status! 
  program_symposium_comments: program_comment_status! 
  program_timezone_control_enabled: Boolean! 
  program_timezone_display: timezone_display! 
  program_title: title_type! 
  program_top_logo: String
  program_top_logo_type: logo_type! 
  program_track_label: String! 
  program_track_visibility: Boolean! 
  program_trial_disabled: Boolean! 
  program_trial_start_date: date
  program_type: program_type! 
  program_type_label: String! 
  program_type_visibility: Boolean! 
  program_use_columns_as_locations: Boolean! 
  program_video_link_label: String! 
  programme_builder_access_code: String
  programme_builder_model: jsonb
  public_program_enabled: Boolean! 
  questions: questions_arr_rel_insert_input
  quickbooks_item_number: Int
  reviewing_deadline_customer_care_actioned: Boolean! 
  secure_program_allowed_delegate_status: _delegate_registration_status! 
  secure_program_login: secure_program_auth! 
  send_symposium_attach_and_remove_emails: Boolean! 
  session_chair_author_label: String! 
  session_chair_city_label: String! 
  session_chair_country_label: String! 
  session_chair_has_elsevier_affiliations_search: Boolean! 
  session_chair_institution_label: String! 
  session_chair_mandatory_city: Boolean! 
  session_chair_mandatory_country: Boolean! 
  session_chair_mandatory_institution: Boolean! 
  session_chair_mandatory_state: Boolean! 
  session_chair_show_city: Boolean! 
  session_chair_show_country: Boolean! 
  session_chair_show_institution: Boolean! 
  session_chair_show_state: Boolean! 
  session_chair_state_label: String! 
  show_logos_on_dashboard: Boolean! 
  """
  Whether presenter emails should be displayed in submissions in the virtual conference
  """
show_presenter_emails_in_vc: Boolean! 
  show_to_committee_accepted_individual_abstracts: Boolean! 
  show_to_committee_accepted_sorted_by_acceptance: Boolean! 
  show_to_committee_accepted_sorted_by_code: Boolean! 
  show_to_committee_accepted_sorted_by_id: Boolean! 
  show_to_committee_all_grouped_by_average_grade: Boolean! 
  show_to_committee_all_grouped_by_final_category: Boolean! 
  show_to_committee_all_individual_abstracts: Boolean! 
  show_to_committee_all_sorted_by_id: Boolean! 
  show_to_committee_countries_accepted: Boolean! 
  show_to_committee_countries_accepted_presenters: Boolean! 
  show_to_committee_countries_all: Boolean! 
  show_to_committee_countries_all_presenters: Boolean! 
  show_to_committee_grouped_by_acceptance: Boolean! 
  show_to_committee_grouped_by_final_category: Boolean! 
  show_to_committee_indexed_authors: Boolean! 
  show_to_committee_indexed_authors_with_affiliations: Boolean! 
  show_to_committee_indexed_presenters: Boolean! 
  show_to_committee_indexed_presenters_with_affiliation: Boolean! 
  soaa_notes: String
  some_abstracts_received_customer_care_actioned: Boolean! 
  some_decisions_received_customer_care_actioned: Boolean! 
  sponsors: event_program_menu_sponsors_arr_rel_insert_input
  sponsors_label: String! 
  stages: stages_arr_rel_insert_input
  status: event_status! 
  stripe_user_id: String
  submission_deadline_reached_customer_care_actioned: Boolean! 
  submission_form_right_to_left: Boolean! 
  submission_payment_paypal_gateway: String
  submissions: submissions_arr_rel_insert_input
  suspicions: event_suspicions_arr_rel_insert_input
  symposia_label: String
  symposia_thank_you_message: String
  symposia_welcome_message: String
  symposium_attachments_open: Boolean! 
  symposium_decisions_committee_decide: Boolean! 
  symposium_demo_requested: Boolean! 
  symposium_hide_submitter_email: Boolean! 
  symposium_hide_submitter_name: Boolean! 
  symposium_invites_open: Boolean! 
  symposium_label: String
  symposium_reviews_open: Boolean! 
  symposium_reviews_thank_you_message: String
  symposium_reviews_welcome_message: String
  symposium_submissions_open: Boolean! 
  symposium_submitters_can_view_decisions: Boolean! 
  symposium_submitters_can_view_reviews: Boolean! 
  symposium_trial_disabled: Boolean! 
  symposium_trial_start_date: date
  symposium_type: event_symposium_types! 
  telephone_number: String! 
  theme_banner_img: String
  theme_logo: String
  theme_panel_description: String
  theme_panel_logo: String
  theme_panel_overline: String
  theme_panel_replace_logo: Boolean! 
  theme_panel_show_dashboard: Boolean! 
  theme_panel_show_dates: Boolean! 
  theme_panel_show_submitters: Boolean! 
  theme_panel_subtitle: String
  theme_panel_title: String
  theme_panel_use_event_title: Boolean! 
  theme_panel_use_primary_colour: Boolean! 
  theme_primary: String! 
  theme_primary_active: String! 
  theme_primary_background: String! 
  theme_primary_dark: String! 
  theme_primary_hover: String! 
  theme_secondary: String! 
  theme_secondary_active: String! 
  theme_secondary_hover: String! 
  theme_secondary_text: String! 
  time_display_program_status: time_display_status! 
  time_stamp: bigint! 
  timezone: String! 
  timezone_locked_to_event: Boolean! 
  updated_at: timestamptz! 
  use_old_review_app: Boolean! 
  vat_rate: numeric! 
  venue: String
  verified_sender_email_id: Int
  website: String
  zoom_access_token: String
  zoom_account_id: String
  zoom_has_integration: Boolean! 
  zoom_refresh_token: String
}

"""aggregate max on columns"""
type events_max_fields {
   abbreviation: String
   advanced_admin_trial_start_date: date
   allowed_auth_type: allowed_auth_type
   api_user_invite_message: String
   api_user_invite_subject: String
   api_user_invite_subject_register: String
   client_id: Int
   column_headers_program_status: column_headers_status
   committee_member_invite_message: String
   committee_member_invite_subject: String
   committee_member_invite_subject_register: String
   created_at: timestamptz
   created_by: Int
   currency: String
   delegate_registration_enabled: feature_status
   delegate_registration_trial_start_date: date
   delreg_authnet_acc: String
   delreg_authnet_key: String
   delreg_authnet_transaction_key: String
   delreg_currency: paypal_payment_currency
   delreg_failed_transaction_message: String
   delreg_invoice_button_text: String
   delreg_invoice_details: String
   delreg_invoice_email_override: String
   delreg_invoice_footer: String
   delreg_invoice_name_override_question: Int
   delreg_invoice_telephone_override: String
   delreg_invoice_title: String
   delreg_paypal_acc: String
   delreg_stripe_acc: String
   delreg_thank_you_message: String
   delreg_vat_rate: numeric
   delreg_welcome_message: String
   email_signature: String
   event_admin_invite_message: String
   event_admin_invite_subject: String
   event_admin_invite_subject_register: String
   event_code: String
   event_end_date: date
   event_logo: String
   event_start_date: date
   event_title: String
   eventbrite_event_id: String
   eventbrite_token: String
   has_symposia: feature_status
  """A unique identifier for each event"""
 id: Int
   ieee_copyright_art_source: String
   ieee_copyright_pub_title: String
   in_titles_listing_label: String
   invoice_text: String
   invoice_title: String
   multi_stage_trial_start_date: date
   notification_email: citext
   original_price_package: price_package
   payment_extension_days: Int
   paypal_payment_gateway_account: String
   price_package: price_package
   program_background_colour: String
   program_background_logo: String
   program_background_logo_type: logo_type
   program_chair_label: String
   program_colour: String
   program_colours: colour_type
   program_custom_title_text: String
   program_error_message: String
   program_info_abstract_books_title: String
   program_info_downloads_title: String
   program_info_information_title: String
   program_info_secondary_information_title: String
   program_location_label: String
   program_menu_logo: String
   program_menu_logo_type: logo_type
   program_primary_colour: String
   program_secondary_colour: String
   program_session_comments: program_comment_status
   program_short_link: String
   program_submission_comments: program_comment_status
   program_symposium_comments: program_comment_status
   program_timezone_display: timezone_display
   program_title: title_type
   program_top_logo: String
   program_top_logo_type: logo_type
   program_track_label: String
   program_trial_start_date: date
   program_type: program_type
   program_type_label: String
   program_video_link_label: String
   programme_builder_access_code: String
   quickbooks_item_number: Int
   secure_program_login: secure_program_auth
   session_chair_author_label: String
   session_chair_city_label: String
   session_chair_country_label: String
   session_chair_institution_label: String
   session_chair_state_label: String
   soaa_notes: String
   sponsors_label: String
   status: event_status
   stripe_user_id: String
   submission_payment_paypal_gateway: String
   symposia_label: String
   symposia_thank_you_message: String
   symposia_welcome_message: String
   symposium_label: String
   symposium_reviews_thank_you_message: String
   symposium_reviews_welcome_message: String
   symposium_trial_start_date: date
   symposium_type: event_symposium_types
   telephone_number: String
   theme_banner_img: String
   theme_logo: String
   theme_panel_description: String
   theme_panel_logo: String
   theme_panel_overline: String
   theme_panel_subtitle: String
   theme_panel_title: String
   theme_primary: String
   theme_primary_active: String
   theme_primary_background: String
   theme_primary_dark: String
   theme_primary_hover: String
   theme_secondary: String
   theme_secondary_active: String
   theme_secondary_hover: String
   theme_secondary_text: String
   time_display_program_status: time_display_status
   time_stamp: bigint
   timezone: String
   updated_at: timestamptz
   vat_rate: numeric
   venue: String
   verified_sender_email_id: Int
   website: String
   zoom_access_token: String
   zoom_account_id: String
   zoom_refresh_token: String
}

"""
order by max() on columns of table "events_with_archived"
"""
input events_max_order_by {
  abbreviation: order_by
  advanced_admin_trial_start_date: order_by
  allowed_auth_type: order_by
  api_user_invite_message: order_by
  api_user_invite_subject: order_by
  api_user_invite_subject_register: order_by
  client_id: order_by
  column_headers_program_status: order_by
  committee_member_invite_message: order_by
  committee_member_invite_subject: order_by
  committee_member_invite_subject_register: order_by
  created_at: order_by
  created_by: order_by
  currency: order_by
  delegate_registration_enabled: order_by
  delegate_registration_trial_start_date: order_by
  delreg_authnet_acc: order_by
  delreg_authnet_key: order_by
  delreg_authnet_transaction_key: order_by
  delreg_currency: order_by
  delreg_failed_transaction_message: order_by
  delreg_invoice_button_text: order_by
  delreg_invoice_details: order_by
  delreg_invoice_email_override: order_by
  delreg_invoice_footer: order_by
  delreg_invoice_name_override_question: order_by
  delreg_invoice_telephone_override: order_by
  delreg_invoice_title: order_by
  delreg_paypal_acc: order_by
  delreg_stripe_acc: order_by
  delreg_thank_you_message: order_by
  delreg_vat_rate: order_by
  delreg_welcome_message: order_by
  email_signature: order_by
  event_admin_invite_message: order_by
  event_admin_invite_subject: order_by
  event_admin_invite_subject_register: order_by
  event_code: order_by
  event_end_date: order_by
  event_logo: order_by
  event_start_date: order_by
  event_title: order_by
  eventbrite_event_id: order_by
  eventbrite_token: order_by
  has_symposia: order_by
  """A unique identifier for each event"""
id: order_by
  ieee_copyright_art_source: order_by
  ieee_copyright_pub_title: order_by
  in_titles_listing_label: order_by
  invoice_text: order_by
  invoice_title: order_by
  multi_stage_trial_start_date: order_by
  notification_email: order_by
  original_price_package: order_by
  payment_extension_days: order_by
  paypal_payment_gateway_account: order_by
  price_package: order_by
  program_background_colour: order_by
  program_background_logo: order_by
  program_background_logo_type: order_by
  program_chair_label: order_by
  program_colour: order_by
  program_colours: order_by
  program_custom_title_text: order_by
  program_error_message: order_by
  program_info_abstract_books_title: order_by
  program_info_downloads_title: order_by
  program_info_information_title: order_by
  program_info_secondary_information_title: order_by
  program_location_label: order_by
  program_menu_logo: order_by
  program_menu_logo_type: order_by
  program_primary_colour: order_by
  program_secondary_colour: order_by
  program_session_comments: order_by
  program_short_link: order_by
  program_submission_comments: order_by
  program_symposium_comments: order_by
  program_timezone_display: order_by
  program_title: order_by
  program_top_logo: order_by
  program_top_logo_type: order_by
  program_track_label: order_by
  program_trial_start_date: order_by
  program_type: order_by
  program_type_label: order_by
  program_video_link_label: order_by
  programme_builder_access_code: order_by
  quickbooks_item_number: order_by
  secure_program_login: order_by
  session_chair_author_label: order_by
  session_chair_city_label: order_by
  session_chair_country_label: order_by
  session_chair_institution_label: order_by
  session_chair_state_label: order_by
  soaa_notes: order_by
  sponsors_label: order_by
  status: order_by
  stripe_user_id: order_by
  submission_payment_paypal_gateway: order_by
  symposia_label: order_by
  symposia_thank_you_message: order_by
  symposia_welcome_message: order_by
  symposium_label: order_by
  symposium_reviews_thank_you_message: order_by
  symposium_reviews_welcome_message: order_by
  symposium_trial_start_date: order_by
  symposium_type: order_by
  telephone_number: order_by
  theme_banner_img: order_by
  theme_logo: order_by
  theme_panel_description: order_by
  theme_panel_logo: order_by
  theme_panel_overline: order_by
  theme_panel_subtitle: order_by
  theme_panel_title: order_by
  theme_primary: order_by
  theme_primary_active: order_by
  theme_primary_background: order_by
  theme_primary_dark: order_by
  theme_primary_hover: order_by
  theme_secondary: order_by
  theme_secondary_active: order_by
  theme_secondary_hover: order_by
  theme_secondary_text: order_by
  time_display_program_status: order_by
  time_stamp: order_by
  timezone: order_by
  updated_at: order_by
  vat_rate: order_by
  venue: order_by
  verified_sender_email_id: order_by
  website: order_by
  zoom_access_token: order_by
  zoom_account_id: order_by
  zoom_refresh_token: order_by
}

"""aggregate min on columns"""
type events_min_fields {
   abbreviation: String
   advanced_admin_trial_start_date: date
   allowed_auth_type: allowed_auth_type
   api_user_invite_message: String
   api_user_invite_subject: String
   api_user_invite_subject_register: String
   client_id: Int
   column_headers_program_status: column_headers_status
   committee_member_invite_message: String
   committee_member_invite_subject: String
   committee_member_invite_subject_register: String
   created_at: timestamptz
   created_by: Int
   currency: String
   delegate_registration_enabled: feature_status
   delegate_registration_trial_start_date: date
   delreg_authnet_acc: String
   delreg_authnet_key: String
   delreg_authnet_transaction_key: String
   delreg_currency: paypal_payment_currency
   delreg_failed_transaction_message: String
   delreg_invoice_button_text: String
   delreg_invoice_details: String
   delreg_invoice_email_override: String
   delreg_invoice_footer: String
   delreg_invoice_name_override_question: Int
   delreg_invoice_telephone_override: String
   delreg_invoice_title: String
   delreg_paypal_acc: String
   delreg_stripe_acc: String
   delreg_thank_you_message: String
   delreg_vat_rate: numeric
   delreg_welcome_message: String
   email_signature: String
   event_admin_invite_message: String
   event_admin_invite_subject: String
   event_admin_invite_subject_register: String
   event_code: String
   event_end_date: date
   event_logo: String
   event_start_date: date
   event_title: String
   eventbrite_event_id: String
   eventbrite_token: String
   has_symposia: feature_status
  """A unique identifier for each event"""
 id: Int
   ieee_copyright_art_source: String
   ieee_copyright_pub_title: String
   in_titles_listing_label: String
   invoice_text: String
   invoice_title: String
   multi_stage_trial_start_date: date
   notification_email: citext
   original_price_package: price_package
   payment_extension_days: Int
   paypal_payment_gateway_account: String
   price_package: price_package
   program_background_colour: String
   program_background_logo: String
   program_background_logo_type: logo_type
   program_chair_label: String
   program_colour: String
   program_colours: colour_type
   program_custom_title_text: String
   program_error_message: String
   program_info_abstract_books_title: String
   program_info_downloads_title: String
   program_info_information_title: String
   program_info_secondary_information_title: String
   program_location_label: String
   program_menu_logo: String
   program_menu_logo_type: logo_type
   program_primary_colour: String
   program_secondary_colour: String
   program_session_comments: program_comment_status
   program_short_link: String
   program_submission_comments: program_comment_status
   program_symposium_comments: program_comment_status
   program_timezone_display: timezone_display
   program_title: title_type
   program_top_logo: String
   program_top_logo_type: logo_type
   program_track_label: String
   program_trial_start_date: date
   program_type: program_type
   program_type_label: String
   program_video_link_label: String
   programme_builder_access_code: String
   quickbooks_item_number: Int
   secure_program_login: secure_program_auth
   session_chair_author_label: String
   session_chair_city_label: String
   session_chair_country_label: String
   session_chair_institution_label: String
   session_chair_state_label: String
   soaa_notes: String
   sponsors_label: String
   status: event_status
   stripe_user_id: String
   submission_payment_paypal_gateway: String
   symposia_label: String
   symposia_thank_you_message: String
   symposia_welcome_message: String
   symposium_label: String
   symposium_reviews_thank_you_message: String
   symposium_reviews_welcome_message: String
   symposium_trial_start_date: date
   symposium_type: event_symposium_types
   telephone_number: String
   theme_banner_img: String
   theme_logo: String
   theme_panel_description: String
   theme_panel_logo: String
   theme_panel_overline: String
   theme_panel_subtitle: String
   theme_panel_title: String
   theme_primary: String
   theme_primary_active: String
   theme_primary_background: String
   theme_primary_dark: String
   theme_primary_hover: String
   theme_secondary: String
   theme_secondary_active: String
   theme_secondary_hover: String
   theme_secondary_text: String
   time_display_program_status: time_display_status
   time_stamp: bigint
   timezone: String
   updated_at: timestamptz
   vat_rate: numeric
   venue: String
   verified_sender_email_id: Int
   website: String
   zoom_access_token: String
   zoom_account_id: String
   zoom_refresh_token: String
}

"""
order by min() on columns of table "events_with_archived"
"""
input events_min_order_by {
  abbreviation: order_by
  advanced_admin_trial_start_date: order_by
  allowed_auth_type: order_by
  api_user_invite_message: order_by
  api_user_invite_subject: order_by
  api_user_invite_subject_register: order_by
  client_id: order_by
  column_headers_program_status: order_by
  committee_member_invite_message: order_by
  committee_member_invite_subject: order_by
  committee_member_invite_subject_register: order_by
  created_at: order_by
  created_by: order_by
  currency: order_by
  delegate_registration_enabled: order_by
  delegate_registration_trial_start_date: order_by
  delreg_authnet_acc: order_by
  delreg_authnet_key: order_by
  delreg_authnet_transaction_key: order_by
  delreg_currency: order_by
  delreg_failed_transaction_message: order_by
  delreg_invoice_button_text: order_by
  delreg_invoice_details: order_by
  delreg_invoice_email_override: order_by
  delreg_invoice_footer: order_by
  delreg_invoice_name_override_question: order_by
  delreg_invoice_telephone_override: order_by
  delreg_invoice_title: order_by
  delreg_paypal_acc: order_by
  delreg_stripe_acc: order_by
  delreg_thank_you_message: order_by
  delreg_vat_rate: order_by
  delreg_welcome_message: order_by
  email_signature: order_by
  event_admin_invite_message: order_by
  event_admin_invite_subject: order_by
  event_admin_invite_subject_register: order_by
  event_code: order_by
  event_end_date: order_by
  event_logo: order_by
  event_start_date: order_by
  event_title: order_by
  eventbrite_event_id: order_by
  eventbrite_token: order_by
  has_symposia: order_by
  """A unique identifier for each event"""
id: order_by
  ieee_copyright_art_source: order_by
  ieee_copyright_pub_title: order_by
  in_titles_listing_label: order_by
  invoice_text: order_by
  invoice_title: order_by
  multi_stage_trial_start_date: order_by
  notification_email: order_by
  original_price_package: order_by
  payment_extension_days: order_by
  paypal_payment_gateway_account: order_by
  price_package: order_by
  program_background_colour: order_by
  program_background_logo: order_by
  program_background_logo_type: order_by
  program_chair_label: order_by
  program_colour: order_by
  program_colours: order_by
  program_custom_title_text: order_by
  program_error_message: order_by
  program_info_abstract_books_title: order_by
  program_info_downloads_title: order_by
  program_info_information_title: order_by
  program_info_secondary_information_title: order_by
  program_location_label: order_by
  program_menu_logo: order_by
  program_menu_logo_type: order_by
  program_primary_colour: order_by
  program_secondary_colour: order_by
  program_session_comments: order_by
  program_short_link: order_by
  program_submission_comments: order_by
  program_symposium_comments: order_by
  program_timezone_display: order_by
  program_title: order_by
  program_top_logo: order_by
  program_top_logo_type: order_by
  program_track_label: order_by
  program_trial_start_date: order_by
  program_type: order_by
  program_type_label: order_by
  program_video_link_label: order_by
  programme_builder_access_code: order_by
  quickbooks_item_number: order_by
  secure_program_login: order_by
  session_chair_author_label: order_by
  session_chair_city_label: order_by
  session_chair_country_label: order_by
  session_chair_institution_label: order_by
  session_chair_state_label: order_by
  soaa_notes: order_by
  sponsors_label: order_by
  status: order_by
  stripe_user_id: order_by
  submission_payment_paypal_gateway: order_by
  symposia_label: order_by
  symposia_thank_you_message: order_by
  symposia_welcome_message: order_by
  symposium_label: order_by
  symposium_reviews_thank_you_message: order_by
  symposium_reviews_welcome_message: order_by
  symposium_trial_start_date: order_by
  symposium_type: order_by
  telephone_number: order_by
  theme_banner_img: order_by
  theme_logo: order_by
  theme_panel_description: order_by
  theme_panel_logo: order_by
  theme_panel_overline: order_by
  theme_panel_subtitle: order_by
  theme_panel_title: order_by
  theme_primary: order_by
  theme_primary_active: order_by
  theme_primary_background: order_by
  theme_primary_dark: order_by
  theme_primary_hover: order_by
  theme_secondary: order_by
  theme_secondary_active: order_by
  theme_secondary_hover: order_by
  theme_secondary_text: order_by
  time_display_program_status: order_by
  time_stamp: order_by
  timezone: order_by
  updated_at: order_by
  vat_rate: order_by
  venue: order_by
  verified_sender_email_id: order_by
  website: order_by
  zoom_access_token: order_by
  zoom_account_id: order_by
  zoom_refresh_token: order_by
}

"""
response of any mutation on the table "events_with_archived"
"""
type events_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [events! ]! 
}

"""
input type for inserting object relation for remote table "events_with_archived"
"""
input events_obj_rel_insert_input {
  data: events_insert_input! 
  """upsert condition"""
on_conflict: events_on_conflict
}

"""
on_conflict condition type for table "events_with_archived"
"""
input events_on_conflict {
  constraint: events_constraint! 
  update_columns: [events_update_column! ]! 
  where: events_bool_exp
}

"""Ordering options when selecting data from "events_with_archived"."""
input events_order_by {
  abbreviation: order_by
  advanced_admin_demo_requested: order_by
  advanced_admin_trial_start_date: order_by
  allowed_auth_type: order_by
  api_enabled: order_by
  api_user_invite_message: order_by
  api_user_invite_subject: order_by
  api_user_invite_subject_register: order_by
  archived: order_by
  author_fields_aggregate: author_fields_aggregate_order_by
  client: clients_order_by
  client_id: order_by
  column_headers_program_status: order_by
  comments_require_moderation: order_by
  commitee_can_assign_reviews: order_by
  commitee_can_assign_symposium_reviews: order_by
  committee_member_invite_message: order_by
  committee_member_invite_subject: order_by
  committee_member_invite_subject_register: order_by
  committee_members_can_edit_program_code: order_by
  countries: order_by
  created_at: order_by
  created_by: order_by
  created_by_user: users_order_by
  currency: order_by
  decision_questions_aggregate: decision_questions_aggregate_order_by
  delegate_registration_demo_requested: order_by
  delegate_registration_enabled: order_by
  delegate_registration_has_fees: order_by
  delegate_registration_open: order_by
  delegate_registration_show_launch_announcement: order_by
  delegate_registration_trial_disabled: order_by
  delegate_registration_trial_start_date: order_by
  delegate_registration_v3_phase1_enabled: order_by
  delegate_registration_v3_phase2_enabled: order_by
  delreg_authnet_acc: order_by
  delreg_authnet_enabled: order_by
  delreg_authnet_key: order_by
  delreg_authnet_transaction_key: order_by
  delreg_beta_enabled: order_by
  delreg_currency: order_by
  delreg_failed_transaction_message: order_by
  delreg_invoice_button_text: order_by
  delreg_invoice_details: order_by
  delreg_invoice_email_override: order_by
  delreg_invoice_enabled: order_by
  delreg_invoice_footer: order_by
  delreg_invoice_name_override_question: order_by
  delreg_invoice_show_email: order_by
  delreg_invoice_show_end: order_by
  delreg_invoice_show_invoice_date: order_by
  delreg_invoice_show_invoice_number: order_by
  delreg_invoice_show_name: order_by
  delreg_invoice_show_notification_email: order_by
  delreg_invoice_show_payment_method: order_by
  delreg_invoice_show_registered_by_email: order_by
  delreg_invoice_show_registration_date: order_by
  delreg_invoice_show_registration_number: order_by
  delreg_invoice_show_start: order_by
  delreg_invoice_show_status: order_by
  delreg_invoice_show_telephone: order_by
  delreg_invoice_show_venue: order_by
  delreg_invoice_telephone_override: order_by
  delreg_invoice_title: order_by
  delreg_paypal_acc: order_by
  delreg_paypal_enabled: order_by
  delreg_registrations_aggregate: delreg_registrations_aggregate_order_by
  delreg_stripe_acc: order_by
  delreg_stripe_enabled: order_by
  delreg_thank_you_message: order_by
  delreg_vat_rate: order_by
  delreg_welcome_message: order_by
  email_signature: order_by
  event_admin_invite_message: order_by
  event_admin_invite_subject: order_by
  event_admin_invite_subject_register: order_by
  event_code: order_by
  event_end_date: order_by
  event_just_finshed_customer_care_actioned: order_by
  event_logo: order_by
  event_start_date: order_by
  event_starts_soon_customer_care_actioned: order_by
  event_title: order_by
  eventbrite_event_id: order_by
  eventbrite_token: order_by
  events_permissions_aggregate: events_permissions_aggregate_order_by
  exhibitors_can_chat: order_by
  exhibitors_hide_unengaged_details: order_by
  filter_committee_reviewers_by_category: order_by
  has_multi_stage: order_by
  has_networking: order_by
  has_new_auth: order_by
  has_report_builders: order_by
  has_reviewing: order_by
  has_submitter_can_see_review: order_by
  has_symposia: order_by
  has_virtual_conference: order_by
  has_virtual_conference_group_chat: order_by
  has_virtual_conference_private_chat: order_by
  has_virtual_conference_public_chat: order_by
  has_web_payments: order_by
  hide_submitter_from_committee: order_by
  id: order_by
  ieee_copyright_art_source: order_by
  ieee_copyright_form_enabled: order_by
  ieee_copyright_has_form: order_by
  ieee_copyright_pub_title: order_by
  in_titles_listing_label: order_by
  individual_author_forms_presenter_only: order_by
  invoice: order_by
  invoice_text: order_by
  invoice_title: order_by
  link_status: order_by
  logo_display_program_status: order_by
  multi_stage_demo_requested: order_by
  multi_stage_trial_start_date: order_by
  networking_social_media_email_enabled: order_by
  networking_social_media_facebook_enabled: order_by
  networking_social_media_instagram_enabled: order_by
  networking_social_media_linkedin_enabled: order_by
  networking_social_media_twitter_enabled: order_by
  notification_email: order_by
  orders_aggregate: dr_orders_aggregate_order_by
  original_price_package: order_by
  payment_extension_days: order_by
  payments_aggregate: event_payments_aggregate_order_by
  paypal_payment_gateway_account: order_by
  price_package: order_by
  program_background_colour: order_by
  program_background_logo: order_by
  program_background_logo_cut_around: order_by
  program_background_logo_fade_bottom: order_by
  program_background_logo_type: order_by
  program_beta_enabled: order_by
  program_chair_label: order_by
  program_chair_visibility: order_by
  program_colour: order_by
  program_colours: order_by
  program_custom_title_text: order_by
  program_dates_aggregate: program_dates_aggregate_order_by
  program_demo_requested: order_by
  program_description_visibility: order_by
  program_error_message: order_by
  program_event_is_in_public_list: order_by
  program_hide_dates_times: order_by
  program_info_abstract_books_title: order_by
  program_info_downloads_title: order_by
  program_info_information_title: order_by
  program_info_secondary_information_title: order_by
  program_information_public: order_by
  program_location_label: order_by
  program_location_visibility: order_by
  program_menu_logo: order_by
  program_menu_logo_type: order_by
  program_primary_colour: order_by
  program_published: order_by
  program_secondary_colour: order_by
  program_session_comments: order_by
  program_session_downloads: order_by
  program_short_link: order_by
  program_show_submission_ids: order_by
  program_submission_comments: order_by
  program_symposium_comments: order_by
  program_timezone_control_enabled: order_by
  program_timezone_display: order_by
  program_title: order_by
  program_top_logo: order_by
  program_top_logo_type: order_by
  program_track_label: order_by
  program_track_visibility: order_by
  program_trial_disabled: order_by
  program_trial_start_date: order_by
  program_type: order_by
  program_type_label: order_by
  program_type_visibility: order_by
  program_use_columns_as_locations: order_by
  program_video_link_label: order_by
  programme_builder_access_code: order_by
  programme_builder_model: order_by
  public_program_enabled: order_by
  questions_aggregate: questions_aggregate_order_by
  quickbooks_item_number: order_by
  reviewing_deadline_customer_care_actioned: order_by
  secure_program_allowed_delegate_status: order_by
  secure_program_login: order_by
  send_symposium_attach_and_remove_emails: order_by
  session_chair_author_label: order_by
  session_chair_city_label: order_by
  session_chair_country_label: order_by
  session_chair_has_elsevier_affiliations_search: order_by
  session_chair_institution_label: order_by
  session_chair_mandatory_city: order_by
  session_chair_mandatory_country: order_by
  session_chair_mandatory_institution: order_by
  session_chair_mandatory_state: order_by
  session_chair_show_city: order_by
  session_chair_show_country: order_by
  session_chair_show_institution: order_by
  session_chair_show_state: order_by
  session_chair_state_label: order_by
  show_logos_on_dashboard: order_by
  show_presenter_emails_in_vc: order_by
  show_to_committee_accepted_individual_abstracts: order_by
  show_to_committee_accepted_sorted_by_acceptance: order_by
  show_to_committee_accepted_sorted_by_code: order_by
  show_to_committee_accepted_sorted_by_id: order_by
  show_to_committee_all_grouped_by_average_grade: order_by
  show_to_committee_all_grouped_by_final_category: order_by
  show_to_committee_all_individual_abstracts: order_by
  show_to_committee_all_sorted_by_id: order_by
  show_to_committee_countries_accepted: order_by
  show_to_committee_countries_accepted_presenters: order_by
  show_to_committee_countries_all: order_by
  show_to_committee_countries_all_presenters: order_by
  show_to_committee_grouped_by_acceptance: order_by
  show_to_committee_grouped_by_final_category: order_by
  show_to_committee_indexed_authors: order_by
  show_to_committee_indexed_authors_with_affiliations: order_by
  show_to_committee_indexed_presenters: order_by
  show_to_committee_indexed_presenters_with_affiliation: order_by
  soaa_notes: order_by
  some_abstracts_received_customer_care_actioned: order_by
  some_decisions_received_customer_care_actioned: order_by
  sponsors_aggregate: event_program_menu_sponsors_aggregate_order_by
  sponsors_label: order_by
  stages_aggregate: stages_aggregate_order_by
  status: order_by
  stripe_user_id: order_by
  submission_deadline_reached_customer_care_actioned: order_by
  submission_form_right_to_left: order_by
  submission_payment_paypal_gateway: order_by
  submissions_aggregate: submissions_aggregate_order_by
  suspicions_aggregate: event_suspicions_aggregate_order_by
  symposia_label: order_by
  symposia_thank_you_message: order_by
  symposia_welcome_message: order_by
  symposium_attachments_open: order_by
  symposium_decisions_committee_decide: order_by
  symposium_demo_requested: order_by
  symposium_hide_submitter_email: order_by
  symposium_hide_submitter_name: order_by
  symposium_invites_open: order_by
  symposium_label: order_by
  symposium_reviews_open: order_by
  symposium_reviews_thank_you_message: order_by
  symposium_reviews_welcome_message: order_by
  symposium_submissions_open: order_by
  symposium_submitters_can_view_decisions: order_by
  symposium_submitters_can_view_reviews: order_by
  symposium_trial_disabled: order_by
  symposium_trial_start_date: order_by
  symposium_type: order_by
  telephone_number: order_by
  theme_banner_img: order_by
  theme_logo: order_by
  theme_panel_description: order_by
  theme_panel_logo: order_by
  theme_panel_overline: order_by
  theme_panel_replace_logo: order_by
  theme_panel_show_dashboard: order_by
  theme_panel_show_dates: order_by
  theme_panel_show_submitters: order_by
  theme_panel_subtitle: order_by
  theme_panel_title: order_by
  theme_panel_use_event_title: order_by
  theme_panel_use_primary_colour: order_by
  theme_primary: order_by
  theme_primary_active: order_by
  theme_primary_background: order_by
  theme_primary_dark: order_by
  theme_primary_hover: order_by
  theme_secondary: order_by
  theme_secondary_active: order_by
  theme_secondary_hover: order_by
  theme_secondary_text: order_by
  time_display_program_status: order_by
  time_stamp: order_by
  timezone: order_by
  timezone_locked_to_event: order_by
  updated_at: order_by
  use_old_review_app: order_by
  vat_rate: order_by
  venue: order_by
  verified_sender_email_id: order_by
  website: order_by
  zoom_access_token: order_by
  zoom_account_id: order_by
  zoom_has_integration: order_by
  zoom_refresh_token: order_by
}

"""
columns and relationships of "events_permissions"
"""
type events_permissions {
  """An object relationship"""
 event: events
   event_id: Int
  """
  Which role the user has in the event. "SUB" is a submitter. Other options are "REVIEWER", "DELEGATE" and"PROGRAM"
  """
 permissions: event_role! 
   registration_email: citext
   soaa: Boolean
  """An array relationship"""
 stages("""distinct select on columns"""
distinct_on: [stages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [stages_order_by! ], """filter the rows returned"""
where: stages_bool_exp): [stages! ]! 
  """An aggregate relationship"""
 stages_aggregate("""distinct select on columns"""
distinct_on: [stages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [stages_order_by! ], """filter the rows returned"""
where: stages_bool_exp): stages_aggregate! 
   time_stamp: bigint
  """An object relationship"""
 user: users! 
   user_id: Int! 
}

"""
aggregated selection of "events_permissions"
"""
type events_permissions_aggregate {
   aggregate: events_permissions_aggregate_fields
   nodes: [events_permissions! ]! 
}

input events_permissions_aggregate_bool_exp {
  bool_and: events_permissions_aggregate_bool_exp_bool_and
  bool_or: events_permissions_aggregate_bool_exp_bool_or
  count: events_permissions_aggregate_bool_exp_count
}

input events_permissions_aggregate_bool_exp_bool_and {
  arguments: events_permissions_select_column_events_permissions_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: events_permissions_bool_exp
  predicate: Boolean_comparison_exp! 
}

input events_permissions_aggregate_bool_exp_bool_or {
  arguments: events_permissions_select_column_events_permissions_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: events_permissions_bool_exp
  predicate: Boolean_comparison_exp! 
}

input events_permissions_aggregate_bool_exp_count {
  arguments: [events_permissions_select_column! ]
  distinct: Boolean
  filter: events_permissions_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "events_permissions"
"""
type events_permissions_aggregate_fields {
   avg: events_permissions_avg_fields
   count(columns: [events_permissions_select_column! ], distinct: Boolean): Int! 
   max: events_permissions_max_fields
   min: events_permissions_min_fields
   stddev: events_permissions_stddev_fields
   stddev_pop: events_permissions_stddev_pop_fields
   stddev_samp: events_permissions_stddev_samp_fields
   sum: events_permissions_sum_fields
   var_pop: events_permissions_var_pop_fields
   var_samp: events_permissions_var_samp_fields
   variance: events_permissions_variance_fields
}

"""
order by aggregate values of table "events_permissions"
"""
input events_permissions_aggregate_order_by {
  avg: events_permissions_avg_order_by
  count: order_by
  max: events_permissions_max_order_by
  min: events_permissions_min_order_by
  stddev: events_permissions_stddev_order_by
  stddev_pop: events_permissions_stddev_pop_order_by
  stddev_samp: events_permissions_stddev_samp_order_by
  sum: events_permissions_sum_order_by
  var_pop: events_permissions_var_pop_order_by
  var_samp: events_permissions_var_samp_order_by
  variance: events_permissions_variance_order_by
}

"""
input type for inserting array relation for remote table "events_permissions"
"""
input events_permissions_arr_rel_insert_input {
  data: [events_permissions_insert_input! ]! 
}

"""aggregate avg on columns"""
type events_permissions_avg_fields {
   event_id: Float
   time_stamp: Float
   user_id: Float
}

"""
order by avg() on columns of table "events_permissions"
"""
input events_permissions_avg_order_by {
  event_id: order_by
  time_stamp: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "events_permissions". All fields are combined with a logical 'AND'.
"""
input events_permissions_bool_exp {
  _and: [events_permissions_bool_exp! ]
  _not: events_permissions_bool_exp
  _or: [events_permissions_bool_exp! ]
  event: events_bool_exp
  event_id: Int_comparison_exp
  permissions: event_role_comparison_exp
  registration_email: citext_comparison_exp
  soaa: Boolean_comparison_exp
  stages: stages_bool_exp
  stages_aggregate: stages_aggregate_bool_exp
  time_stamp: bigint_comparison_exp
  user: users_bool_exp
  user_id: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "events_permissions"
"""
input events_permissions_inc_input {
  event_id: Int
  time_stamp: bigint
  user_id: Int
}

"""
input type for inserting data into table "events_permissions"
"""
input events_permissions_insert_input {
  event: events_obj_rel_insert_input
  event_id: Int
  """
  Which role the user has in the event. "SUB" is a submitter. Other options are "REVIEWER", "DELEGATE" and"PROGRAM"
  """
permissions: event_role! 
  registration_email: citext
  soaa: Boolean! 
  stages: stages_arr_rel_insert_input
  time_stamp: bigint! 
  user: users_obj_rel_insert_input
  user_id: Int! 
}

"""aggregate max on columns"""
type events_permissions_max_fields {
   event_id: Int
  """
  Which role the user has in the event. "SUB" is a submitter. Other options are "REVIEWER", "DELEGATE" and"PROGRAM"
  """
 permissions: event_role
   registration_email: citext
   time_stamp: bigint
   user_id: Int
}

"""
order by max() on columns of table "events_permissions"
"""
input events_permissions_max_order_by {
  event_id: order_by
  """
  Which role the user has in the event. "SUB" is a submitter. Other options are "REVIEWER", "DELEGATE" and"PROGRAM"
  """
permissions: order_by
  registration_email: order_by
  time_stamp: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type events_permissions_min_fields {
   event_id: Int
  """
  Which role the user has in the event. "SUB" is a submitter. Other options are "REVIEWER", "DELEGATE" and"PROGRAM"
  """
 permissions: event_role
   registration_email: citext
   time_stamp: bigint
   user_id: Int
}

"""
order by min() on columns of table "events_permissions"
"""
input events_permissions_min_order_by {
  event_id: order_by
  """
  Which role the user has in the event. "SUB" is a submitter. Other options are "REVIEWER", "DELEGATE" and"PROGRAM"
  """
permissions: order_by
  registration_email: order_by
  time_stamp: order_by
  user_id: order_by
}

"""
response of any mutation on the table "events_permissions"
"""
type events_permissions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [events_permissions! ]! 
}

"""Ordering options when selecting data from "events_permissions"."""
input events_permissions_order_by {
  event: events_order_by
  event_id: order_by
  permissions: order_by
  registration_email: order_by
  soaa: order_by
  stages_aggregate: stages_aggregate_order_by
  time_stamp: order_by
  user: users_order_by
  user_id: order_by
}

"""
select columns of table "events_permissions"
"""
enum events_permissions_select_column {
  """column name"""
event_id
  """column name"""
permissions
  """column name"""
registration_email
  """column name"""
soaa
  """column name"""
time_stamp
  """column name"""
user_id
}

"""
select "events_permissions_aggregate_bool_exp_bool_and_arguments_columns" columns of table "events_permissions"
"""
enum events_permissions_select_column_events_permissions_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
soaa
}

"""
select "events_permissions_aggregate_bool_exp_bool_or_arguments_columns" columns of table "events_permissions"
"""
enum events_permissions_select_column_events_permissions_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
soaa
}

"""
input type for updating data in table "events_permissions"
"""
input events_permissions_set_input {
  event_id: Int
  """
  Which role the user has in the event. "SUB" is a submitter. Other options are "REVIEWER", "DELEGATE" and"PROGRAM"
  """
permissions: event_role
  registration_email: citext
  soaa: Boolean
  time_stamp: bigint
  user_id: Int
}

"""aggregate stddev on columns"""
type events_permissions_stddev_fields {
   event_id: Float
   time_stamp: Float
   user_id: Float
}

"""
order by stddev() on columns of table "events_permissions"
"""
input events_permissions_stddev_order_by {
  event_id: order_by
  time_stamp: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type events_permissions_stddev_pop_fields {
   event_id: Float
   time_stamp: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "events_permissions"
"""
input events_permissions_stddev_pop_order_by {
  event_id: order_by
  time_stamp: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type events_permissions_stddev_samp_fields {
   event_id: Float
   time_stamp: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "events_permissions"
"""
input events_permissions_stddev_samp_order_by {
  event_id: order_by
  time_stamp: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "events_permissions"
"""
input events_permissions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: events_permissions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input events_permissions_stream_cursor_value_input {
  event_id: Int
  """
  Which role the user has in the event. "SUB" is a submitter. Other options are "REVIEWER", "DELEGATE" and"PROGRAM"
  """
permissions: event_role
  registration_email: citext
  soaa: Boolean
  time_stamp: bigint
  user_id: Int
}

"""aggregate sum on columns"""
type events_permissions_sum_fields {
   event_id: Int
   time_stamp: bigint
   user_id: Int
}

"""
order by sum() on columns of table "events_permissions"
"""
input events_permissions_sum_order_by {
  event_id: order_by
  time_stamp: order_by
  user_id: order_by
}

input events_permissions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: events_permissions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: events_permissions_set_input
  where: events_permissions_bool_exp! 
}

"""aggregate var_pop on columns"""
type events_permissions_var_pop_fields {
   event_id: Float
   time_stamp: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "events_permissions"
"""
input events_permissions_var_pop_order_by {
  event_id: order_by
  time_stamp: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type events_permissions_var_samp_fields {
   event_id: Float
   time_stamp: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "events_permissions"
"""
input events_permissions_var_samp_order_by {
  event_id: order_by
  time_stamp: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type events_permissions_variance_fields {
   event_id: Float
   time_stamp: Float
   user_id: Float
}

"""
order by variance() on columns of table "events_permissions"
"""
input events_permissions_variance_order_by {
  event_id: order_by
  time_stamp: order_by
  user_id: order_by
}

"""primary key columns input for table: events_with_archived"""
input events_pk_columns_input {
  """A unique identifier for each event"""
id: Int! 
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input events_prepend_input {
  programme_builder_model: jsonb
}

"""
select columns of table "events_with_archived"
"""
enum events_select_column {
  """column name"""
abbreviation
  """column name"""
advanced_admin_demo_requested
  """column name"""
advanced_admin_trial_start_date
  """column name"""
allowed_auth_type
  """column name"""
api_enabled
  """column name"""
api_user_invite_message
  """column name"""
api_user_invite_subject
  """column name"""
api_user_invite_subject_register
  """column name"""
archived
  """column name"""
client_id
  """column name"""
column_headers_program_status
  """column name"""
comments_require_moderation
  """column name"""
commitee_can_assign_reviews
  """column name"""
commitee_can_assign_symposium_reviews
  """column name"""
committee_member_invite_message
  """column name"""
committee_member_invite_subject
  """column name"""
committee_member_invite_subject_register
  """column name"""
committee_members_can_edit_program_code
  """column name"""
countries
  """column name"""
created_at
  """column name"""
created_by
  """column name"""
currency
  """column name"""
delegate_registration_demo_requested
  """column name"""
delegate_registration_enabled
  """column name"""
delegate_registration_has_fees
  """column name"""
delegate_registration_open
  """column name"""
delegate_registration_show_launch_announcement
  """column name"""
delegate_registration_trial_disabled
  """column name"""
delegate_registration_trial_start_date
  """column name"""
delegate_registration_v3_phase1_enabled
  """column name"""
delegate_registration_v3_phase2_enabled
  """column name"""
delreg_authnet_acc
  """column name"""
delreg_authnet_enabled
  """column name"""
delreg_authnet_key
  """column name"""
delreg_authnet_transaction_key
  """column name"""
delreg_beta_enabled
  """column name"""
delreg_currency
  """column name"""
delreg_failed_transaction_message
  """column name"""
delreg_invoice_button_text
  """column name"""
delreg_invoice_details
  """column name"""
delreg_invoice_email_override
  """column name"""
delreg_invoice_enabled
  """column name"""
delreg_invoice_footer
  """column name"""
delreg_invoice_name_override_question
  """column name"""
delreg_invoice_show_email
  """column name"""
delreg_invoice_show_end
  """column name"""
delreg_invoice_show_invoice_date
  """column name"""
delreg_invoice_show_invoice_number
  """column name"""
delreg_invoice_show_name
  """column name"""
delreg_invoice_show_notification_email
  """column name"""
delreg_invoice_show_payment_method
  """column name"""
delreg_invoice_show_registered_by_email
  """column name"""
delreg_invoice_show_registration_date
  """column name"""
delreg_invoice_show_registration_number
  """column name"""
delreg_invoice_show_start
  """column name"""
delreg_invoice_show_status
  """column name"""
delreg_invoice_show_telephone
  """column name"""
delreg_invoice_show_venue
  """column name"""
delreg_invoice_telephone_override
  """column name"""
delreg_invoice_title
  """column name"""
delreg_paypal_acc
  """column name"""
delreg_paypal_enabled
  """column name"""
delreg_stripe_acc
  """column name"""
delreg_stripe_enabled
  """column name"""
delreg_thank_you_message
  """column name"""
delreg_vat_rate
  """column name"""
delreg_welcome_message
  """column name"""
email_signature
  """column name"""
event_admin_invite_message
  """column name"""
event_admin_invite_subject
  """column name"""
event_admin_invite_subject_register
  """column name"""
event_code
  """column name"""
event_end_date
  """column name"""
event_just_finshed_customer_care_actioned
  """column name"""
event_logo
  """column name"""
event_start_date
  """column name"""
event_starts_soon_customer_care_actioned
  """column name"""
event_title
  """column name"""
eventbrite_event_id
  """column name"""
eventbrite_token
  """column name"""
exhibitors_can_chat
  """column name"""
exhibitors_hide_unengaged_details
  """column name"""
filter_committee_reviewers_by_category
  """column name"""
has_multi_stage
  """column name"""
has_networking
  """column name"""
has_new_auth
  """column name"""
has_report_builders
  """column name"""
has_reviewing
  """column name"""
has_submitter_can_see_review
  """column name"""
has_symposia
  """column name"""
has_virtual_conference
  """column name"""
has_virtual_conference_group_chat
  """column name"""
has_virtual_conference_private_chat
  """column name"""
has_virtual_conference_public_chat
  """column name"""
has_web_payments
  """column name"""
hide_submitter_from_committee
  """column name"""
id
  """column name"""
ieee_copyright_art_source
  """column name"""
ieee_copyright_form_enabled
  """column name"""
ieee_copyright_has_form
  """column name"""
ieee_copyright_pub_title
  """column name"""
in_titles_listing_label
  """column name"""
individual_author_forms_presenter_only
  """column name"""
invoice
  """column name"""
invoice_text
  """column name"""
invoice_title
  """column name"""
link_status
  """column name"""
logo_display_program_status
  """column name"""
multi_stage_demo_requested
  """column name"""
multi_stage_trial_start_date
  """column name"""
networking_social_media_email_enabled
  """column name"""
networking_social_media_facebook_enabled
  """column name"""
networking_social_media_instagram_enabled
  """column name"""
networking_social_media_linkedin_enabled
  """column name"""
networking_social_media_twitter_enabled
  """column name"""
notification_email
  """column name"""
original_price_package
  """column name"""
payment_extension_days
  """column name"""
paypal_payment_gateway_account
  """column name"""
price_package
  """column name"""
program_background_colour
  """column name"""
program_background_logo
  """column name"""
program_background_logo_cut_around
  """column name"""
program_background_logo_fade_bottom
  """column name"""
program_background_logo_type
  """column name"""
program_beta_enabled
  """column name"""
program_chair_label
  """column name"""
program_chair_visibility
  """column name"""
program_colour
  """column name"""
program_colours
  """column name"""
program_custom_title_text
  """column name"""
program_demo_requested
  """column name"""
program_description_visibility
  """column name"""
program_error_message
  """column name"""
program_event_is_in_public_list
  """column name"""
program_hide_dates_times
  """column name"""
program_info_abstract_books_title
  """column name"""
program_info_downloads_title
  """column name"""
program_info_information_title
  """column name"""
program_info_secondary_information_title
  """column name"""
program_information_public
  """column name"""
program_location_label
  """column name"""
program_location_visibility
  """column name"""
program_menu_logo
  """column name"""
program_menu_logo_type
  """column name"""
program_primary_colour
  """column name"""
program_published
  """column name"""
program_secondary_colour
  """column name"""
program_session_comments
  """column name"""
program_session_downloads
  """column name"""
program_short_link
  """column name"""
program_show_submission_ids
  """column name"""
program_submission_comments
  """column name"""
program_symposium_comments
  """column name"""
program_timezone_control_enabled
  """column name"""
program_timezone_display
  """column name"""
program_title
  """column name"""
program_top_logo
  """column name"""
program_top_logo_type
  """column name"""
program_track_label
  """column name"""
program_track_visibility
  """column name"""
program_trial_disabled
  """column name"""
program_trial_start_date
  """column name"""
program_type
  """column name"""
program_type_label
  """column name"""
program_type_visibility
  """column name"""
program_use_columns_as_locations
  """column name"""
program_video_link_label
  """column name"""
programme_builder_access_code
  """column name"""
programme_builder_model
  """column name"""
public_program_enabled
  """column name"""
quickbooks_item_number
  """column name"""
reviewing_deadline_customer_care_actioned
  """column name"""
secure_program_allowed_delegate_status
  """column name"""
secure_program_login
  """column name"""
send_symposium_attach_and_remove_emails
  """column name"""
session_chair_author_label
  """column name"""
session_chair_city_label
  """column name"""
session_chair_country_label
  """column name"""
session_chair_has_elsevier_affiliations_search
  """column name"""
session_chair_institution_label
  """column name"""
session_chair_mandatory_city
  """column name"""
session_chair_mandatory_country
  """column name"""
session_chair_mandatory_institution
  """column name"""
session_chair_mandatory_state
  """column name"""
session_chair_show_city
  """column name"""
session_chair_show_country
  """column name"""
session_chair_show_institution
  """column name"""
session_chair_show_state
  """column name"""
session_chair_state_label
  """column name"""
show_logos_on_dashboard
  """column name"""
show_presenter_emails_in_vc
  """column name"""
show_to_committee_accepted_individual_abstracts
  """column name"""
show_to_committee_accepted_sorted_by_acceptance
  """column name"""
show_to_committee_accepted_sorted_by_code
  """column name"""
show_to_committee_accepted_sorted_by_id
  """column name"""
show_to_committee_all_grouped_by_average_grade
  """column name"""
show_to_committee_all_grouped_by_final_category
  """column name"""
show_to_committee_all_individual_abstracts
  """column name"""
show_to_committee_all_sorted_by_id
  """column name"""
show_to_committee_countries_accepted
  """column name"""
show_to_committee_countries_accepted_presenters
  """column name"""
show_to_committee_countries_all
  """column name"""
show_to_committee_countries_all_presenters
  """column name"""
show_to_committee_grouped_by_acceptance
  """column name"""
show_to_committee_grouped_by_final_category
  """column name"""
show_to_committee_indexed_authors
  """column name"""
show_to_committee_indexed_authors_with_affiliations
  """column name"""
show_to_committee_indexed_presenters
  """column name"""
show_to_committee_indexed_presenters_with_affiliation
  """column name"""
soaa_notes
  """column name"""
some_abstracts_received_customer_care_actioned
  """column name"""
some_decisions_received_customer_care_actioned
  """column name"""
sponsors_label
  """column name"""
status
  """column name"""
stripe_user_id
  """column name"""
submission_deadline_reached_customer_care_actioned
  """column name"""
submission_form_right_to_left
  """column name"""
submission_payment_paypal_gateway
  """column name"""
symposia_label
  """column name"""
symposia_thank_you_message
  """column name"""
symposia_welcome_message
  """column name"""
symposium_attachments_open
  """column name"""
symposium_decisions_committee_decide
  """column name"""
symposium_demo_requested
  """column name"""
symposium_hide_submitter_email
  """column name"""
symposium_hide_submitter_name
  """column name"""
symposium_invites_open
  """column name"""
symposium_label
  """column name"""
symposium_reviews_open
  """column name"""
symposium_reviews_thank_you_message
  """column name"""
symposium_reviews_welcome_message
  """column name"""
symposium_submissions_open
  """column name"""
symposium_submitters_can_view_decisions
  """column name"""
symposium_submitters_can_view_reviews
  """column name"""
symposium_trial_disabled
  """column name"""
symposium_trial_start_date
  """column name"""
symposium_type
  """column name"""
telephone_number
  """column name"""
theme_banner_img
  """column name"""
theme_logo
  """column name"""
theme_panel_description
  """column name"""
theme_panel_logo
  """column name"""
theme_panel_overline
  """column name"""
theme_panel_replace_logo
  """column name"""
theme_panel_show_dashboard
  """column name"""
theme_panel_show_dates
  """column name"""
theme_panel_show_submitters
  """column name"""
theme_panel_subtitle
  """column name"""
theme_panel_title
  """column name"""
theme_panel_use_event_title
  """column name"""
theme_panel_use_primary_colour
  """column name"""
theme_primary
  """column name"""
theme_primary_active
  """column name"""
theme_primary_background
  """column name"""
theme_primary_dark
  """column name"""
theme_primary_hover
  """column name"""
theme_secondary
  """column name"""
theme_secondary_active
  """column name"""
theme_secondary_hover
  """column name"""
theme_secondary_text
  """column name"""
time_display_program_status
  """column name"""
time_stamp
  """column name"""
timezone
  """column name"""
timezone_locked_to_event
  """column name"""
updated_at
  """column name"""
use_old_review_app
  """column name"""
vat_rate
  """column name"""
venue
  """column name"""
verified_sender_email_id
  """column name"""
website
  """column name"""
zoom_access_token
  """column name"""
zoom_account_id
  """column name"""
zoom_has_integration
  """column name"""
zoom_refresh_token
}

"""
select "events_aggregate_bool_exp_bool_and_arguments_columns" columns of table "events_with_archived"
"""
enum events_select_column_events_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
advanced_admin_demo_requested
  """column name"""
api_enabled
  """column name"""
archived
  """column name"""
comments_require_moderation
  """column name"""
commitee_can_assign_reviews
  """column name"""
commitee_can_assign_symposium_reviews
  """column name"""
committee_members_can_edit_program_code
  """column name"""
delegate_registration_demo_requested
  """column name"""
delegate_registration_has_fees
  """column name"""
delegate_registration_open
  """column name"""
delegate_registration_show_launch_announcement
  """column name"""
delegate_registration_trial_disabled
  """column name"""
delegate_registration_v3_phase1_enabled
  """column name"""
delegate_registration_v3_phase2_enabled
  """column name"""
delreg_authnet_enabled
  """column name"""
delreg_beta_enabled
  """column name"""
delreg_invoice_enabled
  """column name"""
delreg_invoice_show_email
  """column name"""
delreg_invoice_show_end
  """column name"""
delreg_invoice_show_invoice_date
  """column name"""
delreg_invoice_show_invoice_number
  """column name"""
delreg_invoice_show_name
  """column name"""
delreg_invoice_show_notification_email
  """column name"""
delreg_invoice_show_payment_method
  """column name"""
delreg_invoice_show_registered_by_email
  """column name"""
delreg_invoice_show_registration_date
  """column name"""
delreg_invoice_show_registration_number
  """column name"""
delreg_invoice_show_start
  """column name"""
delreg_invoice_show_status
  """column name"""
delreg_invoice_show_telephone
  """column name"""
delreg_invoice_show_venue
  """column name"""
delreg_paypal_enabled
  """column name"""
delreg_stripe_enabled
  """column name"""
event_just_finshed_customer_care_actioned
  """column name"""
event_starts_soon_customer_care_actioned
  """column name"""
exhibitors_can_chat
  """column name"""
exhibitors_hide_unengaged_details
  """column name"""
filter_committee_reviewers_by_category
  """column name"""
has_multi_stage
  """column name"""
has_networking
  """column name"""
has_new_auth
  """column name"""
has_report_builders
  """column name"""
has_reviewing
  """column name"""
has_submitter_can_see_review
  """column name"""
has_virtual_conference
  """column name"""
has_virtual_conference_group_chat
  """column name"""
has_virtual_conference_private_chat
  """column name"""
has_virtual_conference_public_chat
  """column name"""
has_web_payments
  """column name"""
hide_submitter_from_committee
  """column name"""
ieee_copyright_form_enabled
  """column name"""
ieee_copyright_has_form
  """column name"""
individual_author_forms_presenter_only
  """column name"""
invoice
  """column name"""
link_status
  """column name"""
logo_display_program_status
  """column name"""
multi_stage_demo_requested
  """column name"""
networking_social_media_email_enabled
  """column name"""
networking_social_media_facebook_enabled
  """column name"""
networking_social_media_instagram_enabled
  """column name"""
networking_social_media_linkedin_enabled
  """column name"""
networking_social_media_twitter_enabled
  """column name"""
program_background_logo_cut_around
  """column name"""
program_background_logo_fade_bottom
  """column name"""
program_beta_enabled
  """column name"""
program_chair_visibility
  """column name"""
program_demo_requested
  """column name"""
program_description_visibility
  """column name"""
program_event_is_in_public_list
  """column name"""
program_hide_dates_times
  """column name"""
program_information_public
  """column name"""
program_location_visibility
  """column name"""
program_published
  """column name"""
program_session_downloads
  """column name"""
program_show_submission_ids
  """column name"""
program_timezone_control_enabled
  """column name"""
program_track_visibility
  """column name"""
program_trial_disabled
  """column name"""
program_type_visibility
  """column name"""
program_use_columns_as_locations
  """column name"""
public_program_enabled
  """column name"""
reviewing_deadline_customer_care_actioned
  """column name"""
send_symposium_attach_and_remove_emails
  """column name"""
session_chair_has_elsevier_affiliations_search
  """column name"""
session_chair_mandatory_city
  """column name"""
session_chair_mandatory_country
  """column name"""
session_chair_mandatory_institution
  """column name"""
session_chair_mandatory_state
  """column name"""
session_chair_show_city
  """column name"""
session_chair_show_country
  """column name"""
session_chair_show_institution
  """column name"""
session_chair_show_state
  """column name"""
show_logos_on_dashboard
  """column name"""
show_presenter_emails_in_vc
  """column name"""
show_to_committee_accepted_individual_abstracts
  """column name"""
show_to_committee_accepted_sorted_by_acceptance
  """column name"""
show_to_committee_accepted_sorted_by_code
  """column name"""
show_to_committee_accepted_sorted_by_id
  """column name"""
show_to_committee_all_grouped_by_average_grade
  """column name"""
show_to_committee_all_grouped_by_final_category
  """column name"""
show_to_committee_all_individual_abstracts
  """column name"""
show_to_committee_all_sorted_by_id
  """column name"""
show_to_committee_countries_accepted
  """column name"""
show_to_committee_countries_accepted_presenters
  """column name"""
show_to_committee_countries_all
  """column name"""
show_to_committee_countries_all_presenters
  """column name"""
show_to_committee_grouped_by_acceptance
  """column name"""
show_to_committee_grouped_by_final_category
  """column name"""
show_to_committee_indexed_authors
  """column name"""
show_to_committee_indexed_authors_with_affiliations
  """column name"""
show_to_committee_indexed_presenters
  """column name"""
show_to_committee_indexed_presenters_with_affiliation
  """column name"""
some_abstracts_received_customer_care_actioned
  """column name"""
some_decisions_received_customer_care_actioned
  """column name"""
submission_deadline_reached_customer_care_actioned
  """column name"""
submission_form_right_to_left
  """column name"""
symposium_attachments_open
  """column name"""
symposium_decisions_committee_decide
  """column name"""
symposium_demo_requested
  """column name"""
symposium_hide_submitter_email
  """column name"""
symposium_hide_submitter_name
  """column name"""
symposium_invites_open
  """column name"""
symposium_reviews_open
  """column name"""
symposium_submissions_open
  """column name"""
symposium_submitters_can_view_decisions
  """column name"""
symposium_submitters_can_view_reviews
  """column name"""
symposium_trial_disabled
  """column name"""
theme_panel_replace_logo
  """column name"""
theme_panel_show_dashboard
  """column name"""
theme_panel_show_dates
  """column name"""
theme_panel_show_submitters
  """column name"""
theme_panel_use_event_title
  """column name"""
theme_panel_use_primary_colour
  """column name"""
timezone_locked_to_event
  """column name"""
use_old_review_app
  """column name"""
zoom_has_integration
}

"""
select "events_aggregate_bool_exp_bool_or_arguments_columns" columns of table "events_with_archived"
"""
enum events_select_column_events_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
advanced_admin_demo_requested
  """column name"""
api_enabled
  """column name"""
archived
  """column name"""
comments_require_moderation
  """column name"""
commitee_can_assign_reviews
  """column name"""
commitee_can_assign_symposium_reviews
  """column name"""
committee_members_can_edit_program_code
  """column name"""
delegate_registration_demo_requested
  """column name"""
delegate_registration_has_fees
  """column name"""
delegate_registration_open
  """column name"""
delegate_registration_show_launch_announcement
  """column name"""
delegate_registration_trial_disabled
  """column name"""
delegate_registration_v3_phase1_enabled
  """column name"""
delegate_registration_v3_phase2_enabled
  """column name"""
delreg_authnet_enabled
  """column name"""
delreg_beta_enabled
  """column name"""
delreg_invoice_enabled
  """column name"""
delreg_invoice_show_email
  """column name"""
delreg_invoice_show_end
  """column name"""
delreg_invoice_show_invoice_date
  """column name"""
delreg_invoice_show_invoice_number
  """column name"""
delreg_invoice_show_name
  """column name"""
delreg_invoice_show_notification_email
  """column name"""
delreg_invoice_show_payment_method
  """column name"""
delreg_invoice_show_registered_by_email
  """column name"""
delreg_invoice_show_registration_date
  """column name"""
delreg_invoice_show_registration_number
  """column name"""
delreg_invoice_show_start
  """column name"""
delreg_invoice_show_status
  """column name"""
delreg_invoice_show_telephone
  """column name"""
delreg_invoice_show_venue
  """column name"""
delreg_paypal_enabled
  """column name"""
delreg_stripe_enabled
  """column name"""
event_just_finshed_customer_care_actioned
  """column name"""
event_starts_soon_customer_care_actioned
  """column name"""
exhibitors_can_chat
  """column name"""
exhibitors_hide_unengaged_details
  """column name"""
filter_committee_reviewers_by_category
  """column name"""
has_multi_stage
  """column name"""
has_networking
  """column name"""
has_new_auth
  """column name"""
has_report_builders
  """column name"""
has_reviewing
  """column name"""
has_submitter_can_see_review
  """column name"""
has_virtual_conference
  """column name"""
has_virtual_conference_group_chat
  """column name"""
has_virtual_conference_private_chat
  """column name"""
has_virtual_conference_public_chat
  """column name"""
has_web_payments
  """column name"""
hide_submitter_from_committee
  """column name"""
ieee_copyright_form_enabled
  """column name"""
ieee_copyright_has_form
  """column name"""
individual_author_forms_presenter_only
  """column name"""
invoice
  """column name"""
link_status
  """column name"""
logo_display_program_status
  """column name"""
multi_stage_demo_requested
  """column name"""
networking_social_media_email_enabled
  """column name"""
networking_social_media_facebook_enabled
  """column name"""
networking_social_media_instagram_enabled
  """column name"""
networking_social_media_linkedin_enabled
  """column name"""
networking_social_media_twitter_enabled
  """column name"""
program_background_logo_cut_around
  """column name"""
program_background_logo_fade_bottom
  """column name"""
program_beta_enabled
  """column name"""
program_chair_visibility
  """column name"""
program_demo_requested
  """column name"""
program_description_visibility
  """column name"""
program_event_is_in_public_list
  """column name"""
program_hide_dates_times
  """column name"""
program_information_public
  """column name"""
program_location_visibility
  """column name"""
program_published
  """column name"""
program_session_downloads
  """column name"""
program_show_submission_ids
  """column name"""
program_timezone_control_enabled
  """column name"""
program_track_visibility
  """column name"""
program_trial_disabled
  """column name"""
program_type_visibility
  """column name"""
program_use_columns_as_locations
  """column name"""
public_program_enabled
  """column name"""
reviewing_deadline_customer_care_actioned
  """column name"""
send_symposium_attach_and_remove_emails
  """column name"""
session_chair_has_elsevier_affiliations_search
  """column name"""
session_chair_mandatory_city
  """column name"""
session_chair_mandatory_country
  """column name"""
session_chair_mandatory_institution
  """column name"""
session_chair_mandatory_state
  """column name"""
session_chair_show_city
  """column name"""
session_chair_show_country
  """column name"""
session_chair_show_institution
  """column name"""
session_chair_show_state
  """column name"""
show_logos_on_dashboard
  """column name"""
show_presenter_emails_in_vc
  """column name"""
show_to_committee_accepted_individual_abstracts
  """column name"""
show_to_committee_accepted_sorted_by_acceptance
  """column name"""
show_to_committee_accepted_sorted_by_code
  """column name"""
show_to_committee_accepted_sorted_by_id
  """column name"""
show_to_committee_all_grouped_by_average_grade
  """column name"""
show_to_committee_all_grouped_by_final_category
  """column name"""
show_to_committee_all_individual_abstracts
  """column name"""
show_to_committee_all_sorted_by_id
  """column name"""
show_to_committee_countries_accepted
  """column name"""
show_to_committee_countries_accepted_presenters
  """column name"""
show_to_committee_countries_all
  """column name"""
show_to_committee_countries_all_presenters
  """column name"""
show_to_committee_grouped_by_acceptance
  """column name"""
show_to_committee_grouped_by_final_category
  """column name"""
show_to_committee_indexed_authors
  """column name"""
show_to_committee_indexed_authors_with_affiliations
  """column name"""
show_to_committee_indexed_presenters
  """column name"""
show_to_committee_indexed_presenters_with_affiliation
  """column name"""
some_abstracts_received_customer_care_actioned
  """column name"""
some_decisions_received_customer_care_actioned
  """column name"""
submission_deadline_reached_customer_care_actioned
  """column name"""
submission_form_right_to_left
  """column name"""
symposium_attachments_open
  """column name"""
symposium_decisions_committee_decide
  """column name"""
symposium_demo_requested
  """column name"""
symposium_hide_submitter_email
  """column name"""
symposium_hide_submitter_name
  """column name"""
symposium_invites_open
  """column name"""
symposium_reviews_open
  """column name"""
symposium_submissions_open
  """column name"""
symposium_submitters_can_view_decisions
  """column name"""
symposium_submitters_can_view_reviews
  """column name"""
symposium_trial_disabled
  """column name"""
theme_panel_replace_logo
  """column name"""
theme_panel_show_dashboard
  """column name"""
theme_panel_show_dates
  """column name"""
theme_panel_show_submitters
  """column name"""
theme_panel_use_event_title
  """column name"""
theme_panel_use_primary_colour
  """column name"""
timezone_locked_to_event
  """column name"""
use_old_review_app
  """column name"""
zoom_has_integration
}

"""
input type for updating data in table "events_with_archived"
"""
input events_set_input {
  abbreviation: String
  advanced_admin_demo_requested: Boolean
  advanced_admin_trial_start_date: date
  allowed_auth_type: allowed_auth_type
  api_enabled: Boolean
  api_user_invite_message: String
  api_user_invite_subject: String
  api_user_invite_subject_register: String
  archived: Boolean
  client_id: Int
  column_headers_program_status: column_headers_status
  comments_require_moderation: Boolean
  commitee_can_assign_reviews: Boolean
  commitee_can_assign_symposium_reviews: Boolean
  committee_member_invite_message: String
  committee_member_invite_subject: String
  committee_member_invite_subject_register: String
  committee_members_can_edit_program_code: Boolean
  countries: _text
  created_at: timestamptz
  created_by: Int
  currency: String
  delegate_registration_demo_requested: Boolean
  delegate_registration_enabled: feature_status
  delegate_registration_has_fees: Boolean
  delegate_registration_open: Boolean
  delegate_registration_show_launch_announcement: Boolean
  delegate_registration_trial_disabled: Boolean
  delegate_registration_trial_start_date: date
  delegate_registration_v3_phase1_enabled: Boolean
  delegate_registration_v3_phase2_enabled: Boolean
  delreg_authnet_acc: String
  delreg_authnet_enabled: Boolean
  delreg_authnet_key: String
  delreg_authnet_transaction_key: String
  delreg_beta_enabled: Boolean
  delreg_currency: paypal_payment_currency
  delreg_failed_transaction_message: String
  delreg_invoice_button_text: String
  delreg_invoice_details: String
  delreg_invoice_email_override: String
  delreg_invoice_enabled: Boolean
  delreg_invoice_footer: String
  delreg_invoice_name_override_question: Int
  delreg_invoice_show_email: Boolean
  delreg_invoice_show_end: Boolean
  delreg_invoice_show_invoice_date: Boolean
  delreg_invoice_show_invoice_number: Boolean
  delreg_invoice_show_name: Boolean
  delreg_invoice_show_notification_email: Boolean
  delreg_invoice_show_payment_method: Boolean
  delreg_invoice_show_registered_by_email: Boolean
  delreg_invoice_show_registration_date: Boolean
  delreg_invoice_show_registration_number: Boolean
  delreg_invoice_show_start: Boolean
  delreg_invoice_show_status: Boolean
  delreg_invoice_show_telephone: Boolean
  delreg_invoice_show_venue: Boolean
  delreg_invoice_telephone_override: String
  delreg_invoice_title: String
  delreg_paypal_acc: String
  delreg_paypal_enabled: Boolean
  delreg_stripe_acc: String
  delreg_stripe_enabled: Boolean
  delreg_thank_you_message: String
  delreg_vat_rate: numeric
  delreg_welcome_message: String
  email_signature: String
  event_admin_invite_message: String
  event_admin_invite_subject: String
  event_admin_invite_subject_register: String
  event_code: String
  event_end_date: date
  event_just_finshed_customer_care_actioned: Boolean
  event_logo: String
  event_start_date: date
  event_starts_soon_customer_care_actioned: Boolean
  event_title: String
  eventbrite_event_id: String
  eventbrite_token: String
  exhibitors_can_chat: Boolean
  exhibitors_hide_unengaged_details: Boolean
  filter_committee_reviewers_by_category: Boolean
  has_multi_stage: Boolean
  """Whether the event admin has enabled networking for the event"""
has_networking: Boolean
  has_new_auth: Boolean
  has_report_builders: Boolean
  has_reviewing: Boolean
  has_submitter_can_see_review: Boolean
  has_symposia: feature_status
  has_virtual_conference: Boolean
  has_virtual_conference_group_chat: Boolean
  has_virtual_conference_private_chat: Boolean
  has_virtual_conference_public_chat: Boolean
  has_web_payments: Boolean
  hide_submitter_from_committee: Boolean
  """A unique identifier for each event"""
id: Int
  ieee_copyright_art_source: String
  ieee_copyright_form_enabled: Boolean
  ieee_copyright_has_form: Boolean
  ieee_copyright_pub_title: String
  in_titles_listing_label: String
  individual_author_forms_presenter_only: Boolean
  invoice: Boolean
  invoice_text: String
  invoice_title: String
  link_status: Boolean
  logo_display_program_status: Boolean
  multi_stage_demo_requested: Boolean
  multi_stage_trial_start_date: date
  networking_social_media_email_enabled: Boolean
  networking_social_media_facebook_enabled: Boolean
  networking_social_media_instagram_enabled: Boolean
  networking_social_media_linkedin_enabled: Boolean
  networking_social_media_twitter_enabled: Boolean
  notification_email: citext
  original_price_package: price_package
  payment_extension_days: Int
  paypal_payment_gateway_account: String
  price_package: price_package
  program_background_colour: String
  program_background_logo: String
  program_background_logo_cut_around: Boolean
  program_background_logo_fade_bottom: Boolean
  program_background_logo_type: logo_type
  program_beta_enabled: Boolean
  program_chair_label: String
  program_chair_visibility: Boolean
  program_colour: String
  program_colours: colour_type
  program_custom_title_text: String
  program_demo_requested: Boolean
  program_description_visibility: Boolean
  program_error_message: String
  program_event_is_in_public_list: Boolean
  program_hide_dates_times: Boolean
  program_info_abstract_books_title: String
  program_info_downloads_title: String
  program_info_information_title: String
  program_info_secondary_information_title: String
  program_information_public: Boolean
  program_location_label: String
  program_location_visibility: Boolean
  program_menu_logo: String
  program_menu_logo_type: logo_type
  program_primary_colour: String
  program_published: Boolean
  program_secondary_colour: String
  program_session_comments: program_comment_status
  program_session_downloads: Boolean
  program_short_link: String
  program_show_submission_ids: Boolean
  program_submission_comments: program_comment_status
  program_symposium_comments: program_comment_status
  program_timezone_control_enabled: Boolean
  program_timezone_display: timezone_display
  program_title: title_type
  program_top_logo: String
  program_top_logo_type: logo_type
  program_track_label: String
  program_track_visibility: Boolean
  program_trial_disabled: Boolean
  program_trial_start_date: date
  program_type: program_type
  program_type_label: String
  program_type_visibility: Boolean
  program_use_columns_as_locations: Boolean
  program_video_link_label: String
  programme_builder_access_code: String
  programme_builder_model: jsonb
  public_program_enabled: Boolean
  quickbooks_item_number: Int
  reviewing_deadline_customer_care_actioned: Boolean
  secure_program_allowed_delegate_status: _delegate_registration_status
  secure_program_login: secure_program_auth
  send_symposium_attach_and_remove_emails: Boolean
  session_chair_author_label: String
  session_chair_city_label: String
  session_chair_country_label: String
  session_chair_has_elsevier_affiliations_search: Boolean
  session_chair_institution_label: String
  session_chair_mandatory_city: Boolean
  session_chair_mandatory_country: Boolean
  session_chair_mandatory_institution: Boolean
  session_chair_mandatory_state: Boolean
  session_chair_show_city: Boolean
  session_chair_show_country: Boolean
  session_chair_show_institution: Boolean
  session_chair_show_state: Boolean
  session_chair_state_label: String
  show_logos_on_dashboard: Boolean
  """
  Whether presenter emails should be displayed in submissions in the virtual conference
  """
show_presenter_emails_in_vc: Boolean
  show_to_committee_accepted_individual_abstracts: Boolean
  show_to_committee_accepted_sorted_by_acceptance: Boolean
  show_to_committee_accepted_sorted_by_code: Boolean
  show_to_committee_accepted_sorted_by_id: Boolean
  show_to_committee_all_grouped_by_average_grade: Boolean
  show_to_committee_all_grouped_by_final_category: Boolean
  show_to_committee_all_individual_abstracts: Boolean
  show_to_committee_all_sorted_by_id: Boolean
  show_to_committee_countries_accepted: Boolean
  show_to_committee_countries_accepted_presenters: Boolean
  show_to_committee_countries_all: Boolean
  show_to_committee_countries_all_presenters: Boolean
  show_to_committee_grouped_by_acceptance: Boolean
  show_to_committee_grouped_by_final_category: Boolean
  show_to_committee_indexed_authors: Boolean
  show_to_committee_indexed_authors_with_affiliations: Boolean
  show_to_committee_indexed_presenters: Boolean
  show_to_committee_indexed_presenters_with_affiliation: Boolean
  soaa_notes: String
  some_abstracts_received_customer_care_actioned: Boolean
  some_decisions_received_customer_care_actioned: Boolean
  sponsors_label: String
  status: event_status
  stripe_user_id: String
  submission_deadline_reached_customer_care_actioned: Boolean
  submission_form_right_to_left: Boolean
  submission_payment_paypal_gateway: String
  symposia_label: String
  symposia_thank_you_message: String
  symposia_welcome_message: String
  symposium_attachments_open: Boolean
  symposium_decisions_committee_decide: Boolean
  symposium_demo_requested: Boolean
  symposium_hide_submitter_email: Boolean
  symposium_hide_submitter_name: Boolean
  symposium_invites_open: Boolean
  symposium_label: String
  symposium_reviews_open: Boolean
  symposium_reviews_thank_you_message: String
  symposium_reviews_welcome_message: String
  symposium_submissions_open: Boolean
  symposium_submitters_can_view_decisions: Boolean
  symposium_submitters_can_view_reviews: Boolean
  symposium_trial_disabled: Boolean
  symposium_trial_start_date: date
  symposium_type: event_symposium_types
  telephone_number: String
  theme_banner_img: String
  theme_logo: String
  theme_panel_description: String
  theme_panel_logo: String
  theme_panel_overline: String
  theme_panel_replace_logo: Boolean
  theme_panel_show_dashboard: Boolean
  theme_panel_show_dates: Boolean
  theme_panel_show_submitters: Boolean
  theme_panel_subtitle: String
  theme_panel_title: String
  theme_panel_use_event_title: Boolean
  theme_panel_use_primary_colour: Boolean
  theme_primary: String
  theme_primary_active: String
  theme_primary_background: String
  theme_primary_dark: String
  theme_primary_hover: String
  theme_secondary: String
  theme_secondary_active: String
  theme_secondary_hover: String
  theme_secondary_text: String
  time_display_program_status: time_display_status
  time_stamp: bigint
  timezone: String
  timezone_locked_to_event: Boolean
  updated_at: timestamptz
  use_old_review_app: Boolean
  vat_rate: numeric
  venue: String
  verified_sender_email_id: Int
  website: String
  zoom_access_token: String
  zoom_account_id: String
  zoom_has_integration: Boolean
  zoom_refresh_token: String
}

"""aggregate stddev on columns"""
type events_stddev_fields {
   client_id: Float
   created_by: Float
   delreg_invoice_name_override_question: Float
   delreg_vat_rate: Float
  """A unique identifier for each event"""
 id: Float
   payment_extension_days: Float
   quickbooks_item_number: Float
   time_stamp: Float
   vat_rate: Float
   verified_sender_email_id: Float
}

"""
order by stddev() on columns of table "events_with_archived"
"""
input events_stddev_order_by {
  client_id: order_by
  created_by: order_by
  delreg_invoice_name_override_question: order_by
  delreg_vat_rate: order_by
  """A unique identifier for each event"""
id: order_by
  payment_extension_days: order_by
  quickbooks_item_number: order_by
  time_stamp: order_by
  vat_rate: order_by
  verified_sender_email_id: order_by
}

"""aggregate stddev_pop on columns"""
type events_stddev_pop_fields {
   client_id: Float
   created_by: Float
   delreg_invoice_name_override_question: Float
   delreg_vat_rate: Float
  """A unique identifier for each event"""
 id: Float
   payment_extension_days: Float
   quickbooks_item_number: Float
   time_stamp: Float
   vat_rate: Float
   verified_sender_email_id: Float
}

"""
order by stddev_pop() on columns of table "events_with_archived"
"""
input events_stddev_pop_order_by {
  client_id: order_by
  created_by: order_by
  delreg_invoice_name_override_question: order_by
  delreg_vat_rate: order_by
  """A unique identifier for each event"""
id: order_by
  payment_extension_days: order_by
  quickbooks_item_number: order_by
  time_stamp: order_by
  vat_rate: order_by
  verified_sender_email_id: order_by
}

"""aggregate stddev_samp on columns"""
type events_stddev_samp_fields {
   client_id: Float
   created_by: Float
   delreg_invoice_name_override_question: Float
   delreg_vat_rate: Float
  """A unique identifier for each event"""
 id: Float
   payment_extension_days: Float
   quickbooks_item_number: Float
   time_stamp: Float
   vat_rate: Float
   verified_sender_email_id: Float
}

"""
order by stddev_samp() on columns of table "events_with_archived"
"""
input events_stddev_samp_order_by {
  client_id: order_by
  created_by: order_by
  delreg_invoice_name_override_question: order_by
  delreg_vat_rate: order_by
  """A unique identifier for each event"""
id: order_by
  payment_extension_days: order_by
  quickbooks_item_number: order_by
  time_stamp: order_by
  vat_rate: order_by
  verified_sender_email_id: order_by
}

"""
Streaming cursor of the table "events"
"""
input events_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: events_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input events_stream_cursor_value_input {
  abbreviation: String
  advanced_admin_demo_requested: Boolean
  advanced_admin_trial_start_date: date
  allowed_auth_type: allowed_auth_type
  api_enabled: Boolean
  api_user_invite_message: String
  api_user_invite_subject: String
  api_user_invite_subject_register: String
  archived: Boolean
  client_id: Int
  column_headers_program_status: column_headers_status
  comments_require_moderation: Boolean
  commitee_can_assign_reviews: Boolean
  commitee_can_assign_symposium_reviews: Boolean
  committee_member_invite_message: String
  committee_member_invite_subject: String
  committee_member_invite_subject_register: String
  committee_members_can_edit_program_code: Boolean
  countries: _text
  created_at: timestamptz
  created_by: Int
  currency: String
  delegate_registration_demo_requested: Boolean
  delegate_registration_enabled: feature_status
  delegate_registration_has_fees: Boolean
  delegate_registration_open: Boolean
  delegate_registration_show_launch_announcement: Boolean
  delegate_registration_trial_disabled: Boolean
  delegate_registration_trial_start_date: date
  delegate_registration_v3_phase1_enabled: Boolean
  delegate_registration_v3_phase2_enabled: Boolean
  delreg_authnet_acc: String
  delreg_authnet_enabled: Boolean
  delreg_authnet_key: String
  delreg_authnet_transaction_key: String
  delreg_beta_enabled: Boolean
  delreg_currency: paypal_payment_currency
  delreg_failed_transaction_message: String
  delreg_invoice_button_text: String
  delreg_invoice_details: String
  delreg_invoice_email_override: String
  delreg_invoice_enabled: Boolean
  delreg_invoice_footer: String
  delreg_invoice_name_override_question: Int
  delreg_invoice_show_email: Boolean
  delreg_invoice_show_end: Boolean
  delreg_invoice_show_invoice_date: Boolean
  delreg_invoice_show_invoice_number: Boolean
  delreg_invoice_show_name: Boolean
  delreg_invoice_show_notification_email: Boolean
  delreg_invoice_show_payment_method: Boolean
  delreg_invoice_show_registered_by_email: Boolean
  delreg_invoice_show_registration_date: Boolean
  delreg_invoice_show_registration_number: Boolean
  delreg_invoice_show_start: Boolean
  delreg_invoice_show_status: Boolean
  delreg_invoice_show_telephone: Boolean
  delreg_invoice_show_venue: Boolean
  delreg_invoice_telephone_override: String
  delreg_invoice_title: String
  delreg_paypal_acc: String
  delreg_paypal_enabled: Boolean
  delreg_stripe_acc: String
  delreg_stripe_enabled: Boolean
  delreg_thank_you_message: String
  delreg_vat_rate: numeric
  delreg_welcome_message: String
  email_signature: String
  event_admin_invite_message: String
  event_admin_invite_subject: String
  event_admin_invite_subject_register: String
  event_code: String
  event_end_date: date
  event_just_finshed_customer_care_actioned: Boolean
  event_logo: String
  event_start_date: date
  event_starts_soon_customer_care_actioned: Boolean
  event_title: String
  eventbrite_event_id: String
  eventbrite_token: String
  exhibitors_can_chat: Boolean
  exhibitors_hide_unengaged_details: Boolean
  filter_committee_reviewers_by_category: Boolean
  has_multi_stage: Boolean
  """Whether the event admin has enabled networking for the event"""
has_networking: Boolean
  has_new_auth: Boolean
  has_report_builders: Boolean
  has_reviewing: Boolean
  has_submitter_can_see_review: Boolean
  has_symposia: feature_status
  has_virtual_conference: Boolean
  has_virtual_conference_group_chat: Boolean
  has_virtual_conference_private_chat: Boolean
  has_virtual_conference_public_chat: Boolean
  has_web_payments: Boolean
  hide_submitter_from_committee: Boolean
  """A unique identifier for each event"""
id: Int
  ieee_copyright_art_source: String
  ieee_copyright_form_enabled: Boolean
  ieee_copyright_has_form: Boolean
  ieee_copyright_pub_title: String
  in_titles_listing_label: String
  individual_author_forms_presenter_only: Boolean
  invoice: Boolean
  invoice_text: String
  invoice_title: String
  link_status: Boolean
  logo_display_program_status: Boolean
  multi_stage_demo_requested: Boolean
  multi_stage_trial_start_date: date
  networking_social_media_email_enabled: Boolean
  networking_social_media_facebook_enabled: Boolean
  networking_social_media_instagram_enabled: Boolean
  networking_social_media_linkedin_enabled: Boolean
  networking_social_media_twitter_enabled: Boolean
  notification_email: citext
  original_price_package: price_package
  payment_extension_days: Int
  paypal_payment_gateway_account: String
  price_package: price_package
  program_background_colour: String
  program_background_logo: String
  program_background_logo_cut_around: Boolean
  program_background_logo_fade_bottom: Boolean
  program_background_logo_type: logo_type
  program_beta_enabled: Boolean
  program_chair_label: String
  program_chair_visibility: Boolean
  program_colour: String
  program_colours: colour_type
  program_custom_title_text: String
  program_demo_requested: Boolean
  program_description_visibility: Boolean
  program_error_message: String
  program_event_is_in_public_list: Boolean
  program_hide_dates_times: Boolean
  program_info_abstract_books_title: String
  program_info_downloads_title: String
  program_info_information_title: String
  program_info_secondary_information_title: String
  program_information_public: Boolean
  program_location_label: String
  program_location_visibility: Boolean
  program_menu_logo: String
  program_menu_logo_type: logo_type
  program_primary_colour: String
  program_published: Boolean
  program_secondary_colour: String
  program_session_comments: program_comment_status
  program_session_downloads: Boolean
  program_short_link: String
  program_show_submission_ids: Boolean
  program_submission_comments: program_comment_status
  program_symposium_comments: program_comment_status
  program_timezone_control_enabled: Boolean
  program_timezone_display: timezone_display
  program_title: title_type
  program_top_logo: String
  program_top_logo_type: logo_type
  program_track_label: String
  program_track_visibility: Boolean
  program_trial_disabled: Boolean
  program_trial_start_date: date
  program_type: program_type
  program_type_label: String
  program_type_visibility: Boolean
  program_use_columns_as_locations: Boolean
  program_video_link_label: String
  programme_builder_access_code: String
  programme_builder_model: jsonb
  public_program_enabled: Boolean
  quickbooks_item_number: Int
  reviewing_deadline_customer_care_actioned: Boolean
  secure_program_allowed_delegate_status: _delegate_registration_status
  secure_program_login: secure_program_auth
  send_symposium_attach_and_remove_emails: Boolean
  session_chair_author_label: String
  session_chair_city_label: String
  session_chair_country_label: String
  session_chair_has_elsevier_affiliations_search: Boolean
  session_chair_institution_label: String
  session_chair_mandatory_city: Boolean
  session_chair_mandatory_country: Boolean
  session_chair_mandatory_institution: Boolean
  session_chair_mandatory_state: Boolean
  session_chair_show_city: Boolean
  session_chair_show_country: Boolean
  session_chair_show_institution: Boolean
  session_chair_show_state: Boolean
  session_chair_state_label: String
  show_logos_on_dashboard: Boolean
  """
  Whether presenter emails should be displayed in submissions in the virtual conference
  """
show_presenter_emails_in_vc: Boolean
  show_to_committee_accepted_individual_abstracts: Boolean
  show_to_committee_accepted_sorted_by_acceptance: Boolean
  show_to_committee_accepted_sorted_by_code: Boolean
  show_to_committee_accepted_sorted_by_id: Boolean
  show_to_committee_all_grouped_by_average_grade: Boolean
  show_to_committee_all_grouped_by_final_category: Boolean
  show_to_committee_all_individual_abstracts: Boolean
  show_to_committee_all_sorted_by_id: Boolean
  show_to_committee_countries_accepted: Boolean
  show_to_committee_countries_accepted_presenters: Boolean
  show_to_committee_countries_all: Boolean
  show_to_committee_countries_all_presenters: Boolean
  show_to_committee_grouped_by_acceptance: Boolean
  show_to_committee_grouped_by_final_category: Boolean
  show_to_committee_indexed_authors: Boolean
  show_to_committee_indexed_authors_with_affiliations: Boolean
  show_to_committee_indexed_presenters: Boolean
  show_to_committee_indexed_presenters_with_affiliation: Boolean
  soaa_notes: String
  some_abstracts_received_customer_care_actioned: Boolean
  some_decisions_received_customer_care_actioned: Boolean
  sponsors_label: String
  status: event_status
  stripe_user_id: String
  submission_deadline_reached_customer_care_actioned: Boolean
  submission_form_right_to_left: Boolean
  submission_payment_paypal_gateway: String
  symposia_label: String
  symposia_thank_you_message: String
  symposia_welcome_message: String
  symposium_attachments_open: Boolean
  symposium_decisions_committee_decide: Boolean
  symposium_demo_requested: Boolean
  symposium_hide_submitter_email: Boolean
  symposium_hide_submitter_name: Boolean
  symposium_invites_open: Boolean
  symposium_label: String
  symposium_reviews_open: Boolean
  symposium_reviews_thank_you_message: String
  symposium_reviews_welcome_message: String
  symposium_submissions_open: Boolean
  symposium_submitters_can_view_decisions: Boolean
  symposium_submitters_can_view_reviews: Boolean
  symposium_trial_disabled: Boolean
  symposium_trial_start_date: date
  symposium_type: event_symposium_types
  telephone_number: String
  theme_banner_img: String
  theme_logo: String
  theme_panel_description: String
  theme_panel_logo: String
  theme_panel_overline: String
  theme_panel_replace_logo: Boolean
  theme_panel_show_dashboard: Boolean
  theme_panel_show_dates: Boolean
  theme_panel_show_submitters: Boolean
  theme_panel_subtitle: String
  theme_panel_title: String
  theme_panel_use_event_title: Boolean
  theme_panel_use_primary_colour: Boolean
  theme_primary: String
  theme_primary_active: String
  theme_primary_background: String
  theme_primary_dark: String
  theme_primary_hover: String
  theme_secondary: String
  theme_secondary_active: String
  theme_secondary_hover: String
  theme_secondary_text: String
  time_display_program_status: time_display_status
  time_stamp: bigint
  timezone: String
  timezone_locked_to_event: Boolean
  updated_at: timestamptz
  use_old_review_app: Boolean
  vat_rate: numeric
  venue: String
  verified_sender_email_id: Int
  website: String
  zoom_access_token: String
  zoom_account_id: String
  zoom_has_integration: Boolean
  zoom_refresh_token: String
}

"""aggregate sum on columns"""
type events_sum_fields {
   client_id: Int
   created_by: Int
   delreg_invoice_name_override_question: Int
   delreg_vat_rate: numeric
  """A unique identifier for each event"""
 id: Int
   payment_extension_days: Int
   quickbooks_item_number: Int
   time_stamp: bigint
   vat_rate: numeric
   verified_sender_email_id: Int
}

"""
order by sum() on columns of table "events_with_archived"
"""
input events_sum_order_by {
  client_id: order_by
  created_by: order_by
  delreg_invoice_name_override_question: order_by
  delreg_vat_rate: order_by
  """A unique identifier for each event"""
id: order_by
  payment_extension_days: order_by
  quickbooks_item_number: order_by
  time_stamp: order_by
  vat_rate: order_by
  verified_sender_email_id: order_by
}

"""
update columns of table "events_with_archived"
"""
enum events_update_column {
  """column name"""
abbreviation
  """column name"""
advanced_admin_demo_requested
  """column name"""
advanced_admin_trial_start_date
  """column name"""
allowed_auth_type
  """column name"""
api_enabled
  """column name"""
api_user_invite_message
  """column name"""
api_user_invite_subject
  """column name"""
api_user_invite_subject_register
  """column name"""
archived
  """column name"""
client_id
  """column name"""
column_headers_program_status
  """column name"""
comments_require_moderation
  """column name"""
commitee_can_assign_reviews
  """column name"""
commitee_can_assign_symposium_reviews
  """column name"""
committee_member_invite_message
  """column name"""
committee_member_invite_subject
  """column name"""
committee_member_invite_subject_register
  """column name"""
committee_members_can_edit_program_code
  """column name"""
countries
  """column name"""
created_at
  """column name"""
created_by
  """column name"""
currency
  """column name"""
delegate_registration_demo_requested
  """column name"""
delegate_registration_enabled
  """column name"""
delegate_registration_has_fees
  """column name"""
delegate_registration_open
  """column name"""
delegate_registration_show_launch_announcement
  """column name"""
delegate_registration_trial_disabled
  """column name"""
delegate_registration_trial_start_date
  """column name"""
delegate_registration_v3_phase1_enabled
  """column name"""
delegate_registration_v3_phase2_enabled
  """column name"""
delreg_authnet_acc
  """column name"""
delreg_authnet_enabled
  """column name"""
delreg_authnet_key
  """column name"""
delreg_authnet_transaction_key
  """column name"""
delreg_beta_enabled
  """column name"""
delreg_currency
  """column name"""
delreg_failed_transaction_message
  """column name"""
delreg_invoice_button_text
  """column name"""
delreg_invoice_details
  """column name"""
delreg_invoice_email_override
  """column name"""
delreg_invoice_enabled
  """column name"""
delreg_invoice_footer
  """column name"""
delreg_invoice_name_override_question
  """column name"""
delreg_invoice_show_email
  """column name"""
delreg_invoice_show_end
  """column name"""
delreg_invoice_show_invoice_date
  """column name"""
delreg_invoice_show_invoice_number
  """column name"""
delreg_invoice_show_name
  """column name"""
delreg_invoice_show_notification_email
  """column name"""
delreg_invoice_show_payment_method
  """column name"""
delreg_invoice_show_registered_by_email
  """column name"""
delreg_invoice_show_registration_date
  """column name"""
delreg_invoice_show_registration_number
  """column name"""
delreg_invoice_show_start
  """column name"""
delreg_invoice_show_status
  """column name"""
delreg_invoice_show_telephone
  """column name"""
delreg_invoice_show_venue
  """column name"""
delreg_invoice_telephone_override
  """column name"""
delreg_invoice_title
  """column name"""
delreg_paypal_acc
  """column name"""
delreg_paypal_enabled
  """column name"""
delreg_stripe_acc
  """column name"""
delreg_stripe_enabled
  """column name"""
delreg_thank_you_message
  """column name"""
delreg_vat_rate
  """column name"""
delreg_welcome_message
  """column name"""
email_signature
  """column name"""
event_admin_invite_message
  """column name"""
event_admin_invite_subject
  """column name"""
event_admin_invite_subject_register
  """column name"""
event_code
  """column name"""
event_end_date
  """column name"""
event_just_finshed_customer_care_actioned
  """column name"""
event_logo
  """column name"""
event_start_date
  """column name"""
event_starts_soon_customer_care_actioned
  """column name"""
event_title
  """column name"""
eventbrite_event_id
  """column name"""
eventbrite_token
  """column name"""
exhibitors_can_chat
  """column name"""
exhibitors_hide_unengaged_details
  """column name"""
filter_committee_reviewers_by_category
  """column name"""
has_multi_stage
  """column name"""
has_networking
  """column name"""
has_new_auth
  """column name"""
has_report_builders
  """column name"""
has_reviewing
  """column name"""
has_submitter_can_see_review
  """column name"""
has_symposia
  """column name"""
has_virtual_conference
  """column name"""
has_virtual_conference_group_chat
  """column name"""
has_virtual_conference_private_chat
  """column name"""
has_virtual_conference_public_chat
  """column name"""
has_web_payments
  """column name"""
hide_submitter_from_committee
  """column name"""
id
  """column name"""
ieee_copyright_art_source
  """column name"""
ieee_copyright_form_enabled
  """column name"""
ieee_copyright_has_form
  """column name"""
ieee_copyright_pub_title
  """column name"""
in_titles_listing_label
  """column name"""
individual_author_forms_presenter_only
  """column name"""
invoice
  """column name"""
invoice_text
  """column name"""
invoice_title
  """column name"""
link_status
  """column name"""
logo_display_program_status
  """column name"""
multi_stage_demo_requested
  """column name"""
multi_stage_trial_start_date
  """column name"""
networking_social_media_email_enabled
  """column name"""
networking_social_media_facebook_enabled
  """column name"""
networking_social_media_instagram_enabled
  """column name"""
networking_social_media_linkedin_enabled
  """column name"""
networking_social_media_twitter_enabled
  """column name"""
notification_email
  """column name"""
original_price_package
  """column name"""
payment_extension_days
  """column name"""
paypal_payment_gateway_account
  """column name"""
price_package
  """column name"""
program_background_colour
  """column name"""
program_background_logo
  """column name"""
program_background_logo_cut_around
  """column name"""
program_background_logo_fade_bottom
  """column name"""
program_background_logo_type
  """column name"""
program_beta_enabled
  """column name"""
program_chair_label
  """column name"""
program_chair_visibility
  """column name"""
program_colour
  """column name"""
program_colours
  """column name"""
program_custom_title_text
  """column name"""
program_demo_requested
  """column name"""
program_description_visibility
  """column name"""
program_error_message
  """column name"""
program_event_is_in_public_list
  """column name"""
program_hide_dates_times
  """column name"""
program_info_abstract_books_title
  """column name"""
program_info_downloads_title
  """column name"""
program_info_information_title
  """column name"""
program_info_secondary_information_title
  """column name"""
program_information_public
  """column name"""
program_location_label
  """column name"""
program_location_visibility
  """column name"""
program_menu_logo
  """column name"""
program_menu_logo_type
  """column name"""
program_primary_colour
  """column name"""
program_published
  """column name"""
program_secondary_colour
  """column name"""
program_session_comments
  """column name"""
program_session_downloads
  """column name"""
program_short_link
  """column name"""
program_show_submission_ids
  """column name"""
program_submission_comments
  """column name"""
program_symposium_comments
  """column name"""
program_timezone_control_enabled
  """column name"""
program_timezone_display
  """column name"""
program_title
  """column name"""
program_top_logo
  """column name"""
program_top_logo_type
  """column name"""
program_track_label
  """column name"""
program_track_visibility
  """column name"""
program_trial_disabled
  """column name"""
program_trial_start_date
  """column name"""
program_type
  """column name"""
program_type_label
  """column name"""
program_type_visibility
  """column name"""
program_use_columns_as_locations
  """column name"""
program_video_link_label
  """column name"""
programme_builder_access_code
  """column name"""
programme_builder_model
  """column name"""
public_program_enabled
  """column name"""
quickbooks_item_number
  """column name"""
reviewing_deadline_customer_care_actioned
  """column name"""
secure_program_allowed_delegate_status
  """column name"""
secure_program_login
  """column name"""
send_symposium_attach_and_remove_emails
  """column name"""
session_chair_author_label
  """column name"""
session_chair_city_label
  """column name"""
session_chair_country_label
  """column name"""
session_chair_has_elsevier_affiliations_search
  """column name"""
session_chair_institution_label
  """column name"""
session_chair_mandatory_city
  """column name"""
session_chair_mandatory_country
  """column name"""
session_chair_mandatory_institution
  """column name"""
session_chair_mandatory_state
  """column name"""
session_chair_show_city
  """column name"""
session_chair_show_country
  """column name"""
session_chair_show_institution
  """column name"""
session_chair_show_state
  """column name"""
session_chair_state_label
  """column name"""
show_logos_on_dashboard
  """column name"""
show_presenter_emails_in_vc
  """column name"""
show_to_committee_accepted_individual_abstracts
  """column name"""
show_to_committee_accepted_sorted_by_acceptance
  """column name"""
show_to_committee_accepted_sorted_by_code
  """column name"""
show_to_committee_accepted_sorted_by_id
  """column name"""
show_to_committee_all_grouped_by_average_grade
  """column name"""
show_to_committee_all_grouped_by_final_category
  """column name"""
show_to_committee_all_individual_abstracts
  """column name"""
show_to_committee_all_sorted_by_id
  """column name"""
show_to_committee_countries_accepted
  """column name"""
show_to_committee_countries_accepted_presenters
  """column name"""
show_to_committee_countries_all
  """column name"""
show_to_committee_countries_all_presenters
  """column name"""
show_to_committee_grouped_by_acceptance
  """column name"""
show_to_committee_grouped_by_final_category
  """column name"""
show_to_committee_indexed_authors
  """column name"""
show_to_committee_indexed_authors_with_affiliations
  """column name"""
show_to_committee_indexed_presenters
  """column name"""
show_to_committee_indexed_presenters_with_affiliation
  """column name"""
soaa_notes
  """column name"""
some_abstracts_received_customer_care_actioned
  """column name"""
some_decisions_received_customer_care_actioned
  """column name"""
sponsors_label
  """column name"""
status
  """column name"""
stripe_user_id
  """column name"""
submission_deadline_reached_customer_care_actioned
  """column name"""
submission_form_right_to_left
  """column name"""
submission_payment_paypal_gateway
  """column name"""
symposia_label
  """column name"""
symposia_thank_you_message
  """column name"""
symposia_welcome_message
  """column name"""
symposium_attachments_open
  """column name"""
symposium_decisions_committee_decide
  """column name"""
symposium_demo_requested
  """column name"""
symposium_hide_submitter_email
  """column name"""
symposium_hide_submitter_name
  """column name"""
symposium_invites_open
  """column name"""
symposium_label
  """column name"""
symposium_reviews_open
  """column name"""
symposium_reviews_thank_you_message
  """column name"""
symposium_reviews_welcome_message
  """column name"""
symposium_submissions_open
  """column name"""
symposium_submitters_can_view_decisions
  """column name"""
symposium_submitters_can_view_reviews
  """column name"""
symposium_trial_disabled
  """column name"""
symposium_trial_start_date
  """column name"""
symposium_type
  """column name"""
telephone_number
  """column name"""
theme_banner_img
  """column name"""
theme_logo
  """column name"""
theme_panel_description
  """column name"""
theme_panel_logo
  """column name"""
theme_panel_overline
  """column name"""
theme_panel_replace_logo
  """column name"""
theme_panel_show_dashboard
  """column name"""
theme_panel_show_dates
  """column name"""
theme_panel_show_submitters
  """column name"""
theme_panel_subtitle
  """column name"""
theme_panel_title
  """column name"""
theme_panel_use_event_title
  """column name"""
theme_panel_use_primary_colour
  """column name"""
theme_primary
  """column name"""
theme_primary_active
  """column name"""
theme_primary_background
  """column name"""
theme_primary_dark
  """column name"""
theme_primary_hover
  """column name"""
theme_secondary
  """column name"""
theme_secondary_active
  """column name"""
theme_secondary_hover
  """column name"""
theme_secondary_text
  """column name"""
time_display_program_status
  """column name"""
time_stamp
  """column name"""
timezone
  """column name"""
timezone_locked_to_event
  """column name"""
updated_at
  """column name"""
use_old_review_app
  """column name"""
vat_rate
  """column name"""
venue
  """column name"""
verified_sender_email_id
  """column name"""
website
  """column name"""
zoom_access_token
  """column name"""
zoom_account_id
  """column name"""
zoom_has_integration
  """column name"""
zoom_refresh_token
}

input events_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
_append: events_append_input
  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
_delete_at_path: events_delete_at_path_input
  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
_delete_elem: events_delete_elem_input
  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
_delete_key: events_delete_key_input
  """increments the numeric columns with given value of the filtered values"""
_inc: events_inc_input
  """prepend existing jsonb value of filtered columns with new jsonb value"""
_prepend: events_prepend_input
  """sets the columns of the filtered rows to the given values"""
_set: events_set_input
  where: events_bool_exp! 
}

"""aggregate var_pop on columns"""
type events_var_pop_fields {
   client_id: Float
   created_by: Float
   delreg_invoice_name_override_question: Float
   delreg_vat_rate: Float
  """A unique identifier for each event"""
 id: Float
   payment_extension_days: Float
   quickbooks_item_number: Float
   time_stamp: Float
   vat_rate: Float
   verified_sender_email_id: Float
}

"""
order by var_pop() on columns of table "events_with_archived"
"""
input events_var_pop_order_by {
  client_id: order_by
  created_by: order_by
  delreg_invoice_name_override_question: order_by
  delreg_vat_rate: order_by
  """A unique identifier for each event"""
id: order_by
  payment_extension_days: order_by
  quickbooks_item_number: order_by
  time_stamp: order_by
  vat_rate: order_by
  verified_sender_email_id: order_by
}

"""aggregate var_samp on columns"""
type events_var_samp_fields {
   client_id: Float
   created_by: Float
   delreg_invoice_name_override_question: Float
   delreg_vat_rate: Float
  """A unique identifier for each event"""
 id: Float
   payment_extension_days: Float
   quickbooks_item_number: Float
   time_stamp: Float
   vat_rate: Float
   verified_sender_email_id: Float
}

"""
order by var_samp() on columns of table "events_with_archived"
"""
input events_var_samp_order_by {
  client_id: order_by
  created_by: order_by
  delreg_invoice_name_override_question: order_by
  delreg_vat_rate: order_by
  """A unique identifier for each event"""
id: order_by
  payment_extension_days: order_by
  quickbooks_item_number: order_by
  time_stamp: order_by
  vat_rate: order_by
  verified_sender_email_id: order_by
}

"""aggregate variance on columns"""
type events_variance_fields {
   client_id: Float
   created_by: Float
   delreg_invoice_name_override_question: Float
   delreg_vat_rate: Float
  """A unique identifier for each event"""
 id: Float
   payment_extension_days: Float
   quickbooks_item_number: Float
   time_stamp: Float
   vat_rate: Float
   verified_sender_email_id: Float
}

"""
order by variance() on columns of table "events_with_archived"
"""
input events_variance_order_by {
  client_id: order_by
  created_by: order_by
  delreg_invoice_name_override_question: order_by
  delreg_vat_rate: order_by
  """A unique identifier for each event"""
id: order_by
  payment_extension_days: order_by
  quickbooks_item_number: order_by
  time_stamp: order_by
  vat_rate: order_by
  verified_sender_email_id: order_by
}

"""
columns and relationships of "events_verified_sender_emails"
"""
type events_verified_sender_emails {
   event_id: Int! 
   id: uuid! 
   sender_name: String! 
   verified_for_event: Boolean! 
   verified_sender_email_id: Int! 
}

"""
aggregated selection of "events_verified_sender_emails"
"""
type events_verified_sender_emails_aggregate {
   aggregate: events_verified_sender_emails_aggregate_fields
   nodes: [events_verified_sender_emails! ]! 
}

input events_verified_sender_emails_aggregate_bool_exp {
  bool_and: events_verified_sender_emails_aggregate_bool_exp_bool_and
  bool_or: events_verified_sender_emails_aggregate_bool_exp_bool_or
  count: events_verified_sender_emails_aggregate_bool_exp_count
}

input events_verified_sender_emails_aggregate_bool_exp_bool_and {
  arguments: events_verified_sender_emails_select_column_events_verified_sender_emails_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: events_verified_sender_emails_bool_exp
  predicate: Boolean_comparison_exp! 
}

input events_verified_sender_emails_aggregate_bool_exp_bool_or {
  arguments: events_verified_sender_emails_select_column_events_verified_sender_emails_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: events_verified_sender_emails_bool_exp
  predicate: Boolean_comparison_exp! 
}

input events_verified_sender_emails_aggregate_bool_exp_count {
  arguments: [events_verified_sender_emails_select_column! ]
  distinct: Boolean
  filter: events_verified_sender_emails_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "events_verified_sender_emails"
"""
type events_verified_sender_emails_aggregate_fields {
   avg: events_verified_sender_emails_avg_fields
   count(columns: [events_verified_sender_emails_select_column! ], distinct: Boolean): Int! 
   max: events_verified_sender_emails_max_fields
   min: events_verified_sender_emails_min_fields
   stddev: events_verified_sender_emails_stddev_fields
   stddev_pop: events_verified_sender_emails_stddev_pop_fields
   stddev_samp: events_verified_sender_emails_stddev_samp_fields
   sum: events_verified_sender_emails_sum_fields
   var_pop: events_verified_sender_emails_var_pop_fields
   var_samp: events_verified_sender_emails_var_samp_fields
   variance: events_verified_sender_emails_variance_fields
}

"""
order by aggregate values of table "events_verified_sender_emails"
"""
input events_verified_sender_emails_aggregate_order_by {
  avg: events_verified_sender_emails_avg_order_by
  count: order_by
  max: events_verified_sender_emails_max_order_by
  min: events_verified_sender_emails_min_order_by
  stddev: events_verified_sender_emails_stddev_order_by
  stddev_pop: events_verified_sender_emails_stddev_pop_order_by
  stddev_samp: events_verified_sender_emails_stddev_samp_order_by
  sum: events_verified_sender_emails_sum_order_by
  var_pop: events_verified_sender_emails_var_pop_order_by
  var_samp: events_verified_sender_emails_var_samp_order_by
  variance: events_verified_sender_emails_variance_order_by
}

"""
input type for inserting array relation for remote table "events_verified_sender_emails"
"""
input events_verified_sender_emails_arr_rel_insert_input {
  data: [events_verified_sender_emails_insert_input! ]! 
  """upsert condition"""
on_conflict: events_verified_sender_emails_on_conflict
}

"""aggregate avg on columns"""
type events_verified_sender_emails_avg_fields {
   event_id: Float
   verified_sender_email_id: Float
}

"""
order by avg() on columns of table "events_verified_sender_emails"
"""
input events_verified_sender_emails_avg_order_by {
  event_id: order_by
  verified_sender_email_id: order_by
}

"""
Boolean expression to filter rows from the table "events_verified_sender_emails". All fields are combined with a logical 'AND'.
"""
input events_verified_sender_emails_bool_exp {
  _and: [events_verified_sender_emails_bool_exp! ]
  _not: events_verified_sender_emails_bool_exp
  _or: [events_verified_sender_emails_bool_exp! ]
  event_id: Int_comparison_exp
  id: uuid_comparison_exp
  sender_name: String_comparison_exp
  verified_for_event: Boolean_comparison_exp
  verified_sender_email_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "events_verified_sender_emails"
"""
enum events_verified_sender_emails_constraint {
  """
  unique or primary key constraint on columns "event_id", "verified_sender_email_id"
  """
events_verified_sender_emails_event_id_verified_sender_email_id
  """
  unique or primary key constraint on columns "id"
  """
events_verified_sender_emails_pkey
}

"""
input type for incrementing numeric columns in table "events_verified_sender_emails"
"""
input events_verified_sender_emails_inc_input {
  event_id: Int
  verified_sender_email_id: Int
}

"""
input type for inserting data into table "events_verified_sender_emails"
"""
input events_verified_sender_emails_insert_input {
  event_id: Int! 
  id: uuid! 
  sender_name: String! 
  verified_for_event: Boolean! 
  verified_sender_email_id: Int! 
}

"""aggregate max on columns"""
type events_verified_sender_emails_max_fields {
   event_id: Int
   id: uuid
   sender_name: String
   verified_sender_email_id: Int
}

"""
order by max() on columns of table "events_verified_sender_emails"
"""
input events_verified_sender_emails_max_order_by {
  event_id: order_by
  id: order_by
  sender_name: order_by
  verified_sender_email_id: order_by
}

"""aggregate min on columns"""
type events_verified_sender_emails_min_fields {
   event_id: Int
   id: uuid
   sender_name: String
   verified_sender_email_id: Int
}

"""
order by min() on columns of table "events_verified_sender_emails"
"""
input events_verified_sender_emails_min_order_by {
  event_id: order_by
  id: order_by
  sender_name: order_by
  verified_sender_email_id: order_by
}

"""
response of any mutation on the table "events_verified_sender_emails"
"""
type events_verified_sender_emails_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [events_verified_sender_emails! ]! 
}

"""
on_conflict condition type for table "events_verified_sender_emails"
"""
input events_verified_sender_emails_on_conflict {
  constraint: events_verified_sender_emails_constraint! 
  update_columns: [events_verified_sender_emails_update_column! ]! 
  where: events_verified_sender_emails_bool_exp
}

"""
Ordering options when selecting data from "events_verified_sender_emails".
"""
input events_verified_sender_emails_order_by {
  event_id: order_by
  id: order_by
  sender_name: order_by
  verified_for_event: order_by
  verified_sender_email_id: order_by
}

"""primary key columns input for table: events_verified_sender_emails"""
input events_verified_sender_emails_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "events_verified_sender_emails"
"""
enum events_verified_sender_emails_select_column {
  """column name"""
event_id
  """column name"""
id
  """column name"""
sender_name
  """column name"""
verified_for_event
  """column name"""
verified_sender_email_id
}

"""
select "events_verified_sender_emails_aggregate_bool_exp_bool_and_arguments_columns" columns of table "events_verified_sender_emails"
"""
enum events_verified_sender_emails_select_column_events_verified_sender_emails_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
verified_for_event
}

"""
select "events_verified_sender_emails_aggregate_bool_exp_bool_or_arguments_columns" columns of table "events_verified_sender_emails"
"""
enum events_verified_sender_emails_select_column_events_verified_sender_emails_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
verified_for_event
}

"""
input type for updating data in table "events_verified_sender_emails"
"""
input events_verified_sender_emails_set_input {
  event_id: Int
  id: uuid
  sender_name: String
  verified_for_event: Boolean
  verified_sender_email_id: Int
}

"""aggregate stddev on columns"""
type events_verified_sender_emails_stddev_fields {
   event_id: Float
   verified_sender_email_id: Float
}

"""
order by stddev() on columns of table "events_verified_sender_emails"
"""
input events_verified_sender_emails_stddev_order_by {
  event_id: order_by
  verified_sender_email_id: order_by
}

"""aggregate stddev_pop on columns"""
type events_verified_sender_emails_stddev_pop_fields {
   event_id: Float
   verified_sender_email_id: Float
}

"""
order by stddev_pop() on columns of table "events_verified_sender_emails"
"""
input events_verified_sender_emails_stddev_pop_order_by {
  event_id: order_by
  verified_sender_email_id: order_by
}

"""aggregate stddev_samp on columns"""
type events_verified_sender_emails_stddev_samp_fields {
   event_id: Float
   verified_sender_email_id: Float
}

"""
order by stddev_samp() on columns of table "events_verified_sender_emails"
"""
input events_verified_sender_emails_stddev_samp_order_by {
  event_id: order_by
  verified_sender_email_id: order_by
}

"""
Streaming cursor of the table "events_verified_sender_emails"
"""
input events_verified_sender_emails_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: events_verified_sender_emails_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input events_verified_sender_emails_stream_cursor_value_input {
  event_id: Int
  id: uuid
  sender_name: String
  verified_for_event: Boolean
  verified_sender_email_id: Int
}

"""aggregate sum on columns"""
type events_verified_sender_emails_sum_fields {
   event_id: Int
   verified_sender_email_id: Int
}

"""
order by sum() on columns of table "events_verified_sender_emails"
"""
input events_verified_sender_emails_sum_order_by {
  event_id: order_by
  verified_sender_email_id: order_by
}

"""
update columns of table "events_verified_sender_emails"
"""
enum events_verified_sender_emails_update_column {
  """column name"""
event_id
  """column name"""
id
  """column name"""
sender_name
  """column name"""
verified_for_event
  """column name"""
verified_sender_email_id
}

input events_verified_sender_emails_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: events_verified_sender_emails_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: events_verified_sender_emails_set_input
  where: events_verified_sender_emails_bool_exp! 
}

"""aggregate var_pop on columns"""
type events_verified_sender_emails_var_pop_fields {
   event_id: Float
   verified_sender_email_id: Float
}

"""
order by var_pop() on columns of table "events_verified_sender_emails"
"""
input events_verified_sender_emails_var_pop_order_by {
  event_id: order_by
  verified_sender_email_id: order_by
}

"""aggregate var_samp on columns"""
type events_verified_sender_emails_var_samp_fields {
   event_id: Float
   verified_sender_email_id: Float
}

"""
order by var_samp() on columns of table "events_verified_sender_emails"
"""
input events_verified_sender_emails_var_samp_order_by {
  event_id: order_by
  verified_sender_email_id: order_by
}

"""aggregate variance on columns"""
type events_verified_sender_emails_variance_fields {
   event_id: Float
   verified_sender_email_id: Float
}

"""
order by variance() on columns of table "events_verified_sender_emails"
"""
input events_verified_sender_emails_variance_order_by {
  event_id: order_by
  verified_sender_email_id: order_by
}

"""
columns and relationships of "exhibitor_contact_statuses"
"""
type exhibitor_contact_statuses {
   comment: String! 
   value: String! 
}

"""
aggregated selection of "exhibitor_contact_statuses"
"""
type exhibitor_contact_statuses_aggregate {
   aggregate: exhibitor_contact_statuses_aggregate_fields
   nodes: [exhibitor_contact_statuses! ]! 
}

"""
aggregate fields of "exhibitor_contact_statuses"
"""
type exhibitor_contact_statuses_aggregate_fields {
   count(columns: [exhibitor_contact_statuses_select_column! ], distinct: Boolean): Int! 
   max: exhibitor_contact_statuses_max_fields
   min: exhibitor_contact_statuses_min_fields
}

"""
Boolean expression to filter rows from the table "exhibitor_contact_statuses". All fields are combined with a logical 'AND'.
"""
input exhibitor_contact_statuses_bool_exp {
  _and: [exhibitor_contact_statuses_bool_exp! ]
  _not: exhibitor_contact_statuses_bool_exp
  _or: [exhibitor_contact_statuses_bool_exp! ]
  comment: String_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "exhibitor_contact_statuses"
"""
enum exhibitor_contact_statuses_constraint {
  """
  unique or primary key constraint on columns "value"
  """
exhibitor_contact_statuses_pkey
}

enum exhibitor_contact_statuses_enum {
  contacted
  needs_contacting
}

"""
Boolean expression to compare columns of type "exhibitor_contact_statuses_enum". All fields are combined with logical 'AND'.
"""
input exhibitor_contact_statuses_enum_comparison_exp {
  _eq: exhibitor_contact_statuses_enum
  _in: [exhibitor_contact_statuses_enum! ]
  _is_null: Boolean
  _neq: exhibitor_contact_statuses_enum
  _nin: [exhibitor_contact_statuses_enum! ]
}

"""
input type for inserting data into table "exhibitor_contact_statuses"
"""
input exhibitor_contact_statuses_insert_input {
  comment: String! 
  value: String! 
}

"""aggregate max on columns"""
type exhibitor_contact_statuses_max_fields {
   comment: String
   value: String
}

"""aggregate min on columns"""
type exhibitor_contact_statuses_min_fields {
   comment: String
   value: String
}

"""
response of any mutation on the table "exhibitor_contact_statuses"
"""
type exhibitor_contact_statuses_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [exhibitor_contact_statuses! ]! 
}

"""
on_conflict condition type for table "exhibitor_contact_statuses"
"""
input exhibitor_contact_statuses_on_conflict {
  constraint: exhibitor_contact_statuses_constraint! 
  update_columns: [exhibitor_contact_statuses_update_column! ]! 
  where: exhibitor_contact_statuses_bool_exp
}

"""
Ordering options when selecting data from "exhibitor_contact_statuses".
"""
input exhibitor_contact_statuses_order_by {
  comment: order_by
  value: order_by
}

"""primary key columns input for table: exhibitor_contact_statuses"""
input exhibitor_contact_statuses_pk_columns_input {
  value: String! 
}

"""
select columns of table "exhibitor_contact_statuses"
"""
enum exhibitor_contact_statuses_select_column {
  """column name"""
comment
  """column name"""
value
}

"""
input type for updating data in table "exhibitor_contact_statuses"
"""
input exhibitor_contact_statuses_set_input {
  comment: String
  value: String
}

"""
Streaming cursor of the table "exhibitor_contact_statuses"
"""
input exhibitor_contact_statuses_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: exhibitor_contact_statuses_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input exhibitor_contact_statuses_stream_cursor_value_input {
  comment: String
  value: String
}

"""
update columns of table "exhibitor_contact_statuses"
"""
enum exhibitor_contact_statuses_update_column {
  """column name"""
comment
  """column name"""
value
}

input exhibitor_contact_statuses_updates {
  """sets the columns of the filtered rows to the given values"""
_set: exhibitor_contact_statuses_set_input
  where: exhibitor_contact_statuses_bool_exp! 
}

"""
columns and relationships of "exhibitor_contacts"
"""
type exhibitor_contacts {
   affiliation: String! 
  """An object relationship"""
 assigned_representative: exhibitor_representatives
   assigned_to: uuid
   came_through: String! 
   contact_status: exhibitor_contact_statuses_enum! 
   created_at: timestamptz! 
   email: String! 
  """An object relationship"""
 exhibitor: exhibitors! 
   exhibitor_id: uuid! 
   id: uuid! 
   name: String! 
   notes: String! 
   offer_clicked: Boolean! 
   role: String! 
   updated_at: timestamptz! 
  """An array relationship"""
 user("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): [users! ]! 
  """An aggregate relationship"""
 user_aggregate("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): users_aggregate! 
}

"""
aggregated selection of "exhibitor_contacts"
"""
type exhibitor_contacts_aggregate {
   aggregate: exhibitor_contacts_aggregate_fields
   nodes: [exhibitor_contacts! ]! 
}

input exhibitor_contacts_aggregate_bool_exp {
  bool_and: exhibitor_contacts_aggregate_bool_exp_bool_and
  bool_or: exhibitor_contacts_aggregate_bool_exp_bool_or
  count: exhibitor_contacts_aggregate_bool_exp_count
}

input exhibitor_contacts_aggregate_bool_exp_bool_and {
  arguments: exhibitor_contacts_select_column_exhibitor_contacts_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: exhibitor_contacts_bool_exp
  predicate: Boolean_comparison_exp! 
}

input exhibitor_contacts_aggregate_bool_exp_bool_or {
  arguments: exhibitor_contacts_select_column_exhibitor_contacts_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: exhibitor_contacts_bool_exp
  predicate: Boolean_comparison_exp! 
}

input exhibitor_contacts_aggregate_bool_exp_count {
  arguments: [exhibitor_contacts_select_column! ]
  distinct: Boolean
  filter: exhibitor_contacts_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "exhibitor_contacts"
"""
type exhibitor_contacts_aggregate_fields {
   count(columns: [exhibitor_contacts_select_column! ], distinct: Boolean): Int! 
   max: exhibitor_contacts_max_fields
   min: exhibitor_contacts_min_fields
}

"""
order by aggregate values of table "exhibitor_contacts"
"""
input exhibitor_contacts_aggregate_order_by {
  count: order_by
  max: exhibitor_contacts_max_order_by
  min: exhibitor_contacts_min_order_by
}

"""
input type for inserting array relation for remote table "exhibitor_contacts"
"""
input exhibitor_contacts_arr_rel_insert_input {
  data: [exhibitor_contacts_insert_input! ]! 
  """upsert condition"""
on_conflict: exhibitor_contacts_on_conflict
}

"""
Boolean expression to filter rows from the table "exhibitor_contacts". All fields are combined with a logical 'AND'.
"""
input exhibitor_contacts_bool_exp {
  _and: [exhibitor_contacts_bool_exp! ]
  _not: exhibitor_contacts_bool_exp
  _or: [exhibitor_contacts_bool_exp! ]
  affiliation: String_comparison_exp
  assigned_representative: exhibitor_representatives_bool_exp
  assigned_to: uuid_comparison_exp
  came_through: String_comparison_exp
  contact_status: exhibitor_contact_statuses_enum_comparison_exp
  created_at: timestamptz_comparison_exp
  email: String_comparison_exp
  exhibitor: exhibitors_bool_exp
  exhibitor_id: uuid_comparison_exp
  id: uuid_comparison_exp
  name: String_comparison_exp
  notes: String_comparison_exp
  offer_clicked: Boolean_comparison_exp
  role: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  user: users_bool_exp
  user_aggregate: users_aggregate_bool_exp
}

"""
unique or primary key constraints on table "exhibitor_contacts"
"""
enum exhibitor_contacts_constraint {
  """
  unique or primary key constraint on columns "email", "exhibitor_id"
  """
exhibitor_contacts_exhibitor_id_email_key
  """
  unique or primary key constraint on columns "id"
  """
exhibitor_contacts_pkey
}

"""
input type for inserting data into table "exhibitor_contacts"
"""
input exhibitor_contacts_insert_input {
  affiliation: String! 
  assigned_representative: exhibitor_representatives_obj_rel_insert_input
  assigned_to: uuid
  came_through: String! 
  contact_status: exhibitor_contact_statuses_enum! 
  created_at: timestamptz! 
  email: String! 
  exhibitor: exhibitors_obj_rel_insert_input
  exhibitor_id: uuid! 
  id: uuid! 
  name: String! 
  notes: String! 
  offer_clicked: Boolean! 
  role: String! 
  updated_at: timestamptz! 
  user: users_arr_rel_insert_input
}

"""aggregate max on columns"""
type exhibitor_contacts_max_fields {
   affiliation: String
   assigned_to: uuid
   came_through: String
   created_at: timestamptz
   email: String
   exhibitor_id: uuid
   id: uuid
   name: String
   notes: String
   role: String
   updated_at: timestamptz
}

"""
order by max() on columns of table "exhibitor_contacts"
"""
input exhibitor_contacts_max_order_by {
  affiliation: order_by
  assigned_to: order_by
  came_through: order_by
  created_at: order_by
  email: order_by
  exhibitor_id: order_by
  id: order_by
  name: order_by
  notes: order_by
  role: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type exhibitor_contacts_min_fields {
   affiliation: String
   assigned_to: uuid
   came_through: String
   created_at: timestamptz
   email: String
   exhibitor_id: uuid
   id: uuid
   name: String
   notes: String
   role: String
   updated_at: timestamptz
}

"""
order by min() on columns of table "exhibitor_contacts"
"""
input exhibitor_contacts_min_order_by {
  affiliation: order_by
  assigned_to: order_by
  came_through: order_by
  created_at: order_by
  email: order_by
  exhibitor_id: order_by
  id: order_by
  name: order_by
  notes: order_by
  role: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "exhibitor_contacts"
"""
type exhibitor_contacts_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [exhibitor_contacts! ]! 
}

"""
on_conflict condition type for table "exhibitor_contacts"
"""
input exhibitor_contacts_on_conflict {
  constraint: exhibitor_contacts_constraint! 
  update_columns: [exhibitor_contacts_update_column! ]! 
  where: exhibitor_contacts_bool_exp
}

"""Ordering options when selecting data from "exhibitor_contacts"."""
input exhibitor_contacts_order_by {
  affiliation: order_by
  assigned_representative: exhibitor_representatives_order_by
  assigned_to: order_by
  came_through: order_by
  contact_status: order_by
  created_at: order_by
  email: order_by
  exhibitor: exhibitors_order_by
  exhibitor_id: order_by
  id: order_by
  name: order_by
  notes: order_by
  offer_clicked: order_by
  role: order_by
  updated_at: order_by
  user_aggregate: users_aggregate_order_by
}

"""primary key columns input for table: exhibitor_contacts"""
input exhibitor_contacts_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "exhibitor_contacts"
"""
enum exhibitor_contacts_select_column {
  """column name"""
affiliation
  """column name"""
assigned_to
  """column name"""
came_through
  """column name"""
contact_status
  """column name"""
created_at
  """column name"""
email
  """column name"""
exhibitor_id
  """column name"""
id
  """column name"""
name
  """column name"""
notes
  """column name"""
offer_clicked
  """column name"""
role
  """column name"""
updated_at
}

"""
select "exhibitor_contacts_aggregate_bool_exp_bool_and_arguments_columns" columns of table "exhibitor_contacts"
"""
enum exhibitor_contacts_select_column_exhibitor_contacts_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
offer_clicked
}

"""
select "exhibitor_contacts_aggregate_bool_exp_bool_or_arguments_columns" columns of table "exhibitor_contacts"
"""
enum exhibitor_contacts_select_column_exhibitor_contacts_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
offer_clicked
}

"""
input type for updating data in table "exhibitor_contacts"
"""
input exhibitor_contacts_set_input {
  affiliation: String
  assigned_to: uuid
  came_through: String
  contact_status: exhibitor_contact_statuses_enum
  created_at: timestamptz
  email: String
  exhibitor_id: uuid
  id: uuid
  name: String
  notes: String
  offer_clicked: Boolean
  role: String
  updated_at: timestamptz
}

"""
Streaming cursor of the table "exhibitor_contacts"
"""
input exhibitor_contacts_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: exhibitor_contacts_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input exhibitor_contacts_stream_cursor_value_input {
  affiliation: String
  assigned_to: uuid
  came_through: String
  contact_status: exhibitor_contact_statuses_enum
  created_at: timestamptz
  email: String
  exhibitor_id: uuid
  id: uuid
  name: String
  notes: String
  offer_clicked: Boolean
  role: String
  updated_at: timestamptz
}

"""
update columns of table "exhibitor_contacts"
"""
enum exhibitor_contacts_update_column {
  """column name"""
affiliation
  """column name"""
assigned_to
  """column name"""
came_through
  """column name"""
contact_status
  """column name"""
created_at
  """column name"""
email
  """column name"""
exhibitor_id
  """column name"""
id
  """column name"""
name
  """column name"""
notes
  """column name"""
offer_clicked
  """column name"""
role
  """column name"""
updated_at
}

input exhibitor_contacts_updates {
  """sets the columns of the filtered rows to the given values"""
_set: exhibitor_contacts_set_input
  where: exhibitor_contacts_bool_exp! 
}

"""
columns and relationships of "exhibitor_page_views"
"""
type exhibitor_page_views {
   created_at: timestamptz! 
  """An object relationship"""
 exhibitor: exhibitors! 
   exhibitor_id: uuid! 
   id: uuid! 
   updated_at: timestamptz! 
  """An object relationship"""
 user: users
   user_id: Int
   view_time_ms: bigint
}

"""
aggregated selection of "exhibitor_page_views"
"""
type exhibitor_page_views_aggregate {
   aggregate: exhibitor_page_views_aggregate_fields
   nodes: [exhibitor_page_views! ]! 
}

input exhibitor_page_views_aggregate_bool_exp {
  count: exhibitor_page_views_aggregate_bool_exp_count
}

input exhibitor_page_views_aggregate_bool_exp_count {
  arguments: [exhibitor_page_views_select_column! ]
  distinct: Boolean
  filter: exhibitor_page_views_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "exhibitor_page_views"
"""
type exhibitor_page_views_aggregate_fields {
   avg: exhibitor_page_views_avg_fields
   count(columns: [exhibitor_page_views_select_column! ], distinct: Boolean): Int! 
   max: exhibitor_page_views_max_fields
   min: exhibitor_page_views_min_fields
   stddev: exhibitor_page_views_stddev_fields
   stddev_pop: exhibitor_page_views_stddev_pop_fields
   stddev_samp: exhibitor_page_views_stddev_samp_fields
   sum: exhibitor_page_views_sum_fields
   var_pop: exhibitor_page_views_var_pop_fields
   var_samp: exhibitor_page_views_var_samp_fields
   variance: exhibitor_page_views_variance_fields
}

"""
order by aggregate values of table "exhibitor_page_views"
"""
input exhibitor_page_views_aggregate_order_by {
  avg: exhibitor_page_views_avg_order_by
  count: order_by
  max: exhibitor_page_views_max_order_by
  min: exhibitor_page_views_min_order_by
  stddev: exhibitor_page_views_stddev_order_by
  stddev_pop: exhibitor_page_views_stddev_pop_order_by
  stddev_samp: exhibitor_page_views_stddev_samp_order_by
  sum: exhibitor_page_views_sum_order_by
  var_pop: exhibitor_page_views_var_pop_order_by
  var_samp: exhibitor_page_views_var_samp_order_by
  variance: exhibitor_page_views_variance_order_by
}

"""
input type for inserting array relation for remote table "exhibitor_page_views"
"""
input exhibitor_page_views_arr_rel_insert_input {
  data: [exhibitor_page_views_insert_input! ]! 
  """upsert condition"""
on_conflict: exhibitor_page_views_on_conflict
}

"""aggregate avg on columns"""
type exhibitor_page_views_avg_fields {
   user_id: Float
   view_time_ms: Float
}

"""
order by avg() on columns of table "exhibitor_page_views"
"""
input exhibitor_page_views_avg_order_by {
  user_id: order_by
  view_time_ms: order_by
}

"""
Boolean expression to filter rows from the table "exhibitor_page_views". All fields are combined with a logical 'AND'.
"""
input exhibitor_page_views_bool_exp {
  _and: [exhibitor_page_views_bool_exp! ]
  _not: exhibitor_page_views_bool_exp
  _or: [exhibitor_page_views_bool_exp! ]
  created_at: timestamptz_comparison_exp
  exhibitor: exhibitors_bool_exp
  exhibitor_id: uuid_comparison_exp
  id: uuid_comparison_exp
  updated_at: timestamptz_comparison_exp
  user: users_bool_exp
  user_id: Int_comparison_exp
  view_time_ms: bigint_comparison_exp
}

"""
unique or primary key constraints on table "exhibitor_page_views"
"""
enum exhibitor_page_views_constraint {
  """
  unique or primary key constraint on columns "id"
  """
exhibitor_page_views_pkey
}

"""
input type for incrementing numeric columns in table "exhibitor_page_views"
"""
input exhibitor_page_views_inc_input {
  user_id: Int
  view_time_ms: bigint
}

"""
input type for inserting data into table "exhibitor_page_views"
"""
input exhibitor_page_views_insert_input {
  created_at: timestamptz! 
  exhibitor: exhibitors_obj_rel_insert_input
  exhibitor_id: uuid! 
  id: uuid! 
  updated_at: timestamptz! 
  user: users_obj_rel_insert_input
  user_id: Int
  view_time_ms: bigint
}

"""aggregate max on columns"""
type exhibitor_page_views_max_fields {
   created_at: timestamptz
   exhibitor_id: uuid
   id: uuid
   updated_at: timestamptz
   user_id: Int
   view_time_ms: bigint
}

"""
order by max() on columns of table "exhibitor_page_views"
"""
input exhibitor_page_views_max_order_by {
  created_at: order_by
  exhibitor_id: order_by
  id: order_by
  updated_at: order_by
  user_id: order_by
  view_time_ms: order_by
}

"""aggregate min on columns"""
type exhibitor_page_views_min_fields {
   created_at: timestamptz
   exhibitor_id: uuid
   id: uuid
   updated_at: timestamptz
   user_id: Int
   view_time_ms: bigint
}

"""
order by min() on columns of table "exhibitor_page_views"
"""
input exhibitor_page_views_min_order_by {
  created_at: order_by
  exhibitor_id: order_by
  id: order_by
  updated_at: order_by
  user_id: order_by
  view_time_ms: order_by
}

"""
response of any mutation on the table "exhibitor_page_views"
"""
type exhibitor_page_views_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [exhibitor_page_views! ]! 
}

"""
on_conflict condition type for table "exhibitor_page_views"
"""
input exhibitor_page_views_on_conflict {
  constraint: exhibitor_page_views_constraint! 
  update_columns: [exhibitor_page_views_update_column! ]! 
  where: exhibitor_page_views_bool_exp
}

"""Ordering options when selecting data from "exhibitor_page_views"."""
input exhibitor_page_views_order_by {
  created_at: order_by
  exhibitor: exhibitors_order_by
  exhibitor_id: order_by
  id: order_by
  updated_at: order_by
  user: users_order_by
  user_id: order_by
  view_time_ms: order_by
}

"""primary key columns input for table: exhibitor_page_views"""
input exhibitor_page_views_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "exhibitor_page_views"
"""
enum exhibitor_page_views_select_column {
  """column name"""
created_at
  """column name"""
exhibitor_id
  """column name"""
id
  """column name"""
updated_at
  """column name"""
user_id
  """column name"""
view_time_ms
}

"""
input type for updating data in table "exhibitor_page_views"
"""
input exhibitor_page_views_set_input {
  created_at: timestamptz
  exhibitor_id: uuid
  id: uuid
  updated_at: timestamptz
  user_id: Int
  view_time_ms: bigint
}

"""aggregate stddev on columns"""
type exhibitor_page_views_stddev_fields {
   user_id: Float
   view_time_ms: Float
}

"""
order by stddev() on columns of table "exhibitor_page_views"
"""
input exhibitor_page_views_stddev_order_by {
  user_id: order_by
  view_time_ms: order_by
}

"""aggregate stddev_pop on columns"""
type exhibitor_page_views_stddev_pop_fields {
   user_id: Float
   view_time_ms: Float
}

"""
order by stddev_pop() on columns of table "exhibitor_page_views"
"""
input exhibitor_page_views_stddev_pop_order_by {
  user_id: order_by
  view_time_ms: order_by
}

"""aggregate stddev_samp on columns"""
type exhibitor_page_views_stddev_samp_fields {
   user_id: Float
   view_time_ms: Float
}

"""
order by stddev_samp() on columns of table "exhibitor_page_views"
"""
input exhibitor_page_views_stddev_samp_order_by {
  user_id: order_by
  view_time_ms: order_by
}

"""
Streaming cursor of the table "exhibitor_page_views"
"""
input exhibitor_page_views_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: exhibitor_page_views_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input exhibitor_page_views_stream_cursor_value_input {
  created_at: timestamptz
  exhibitor_id: uuid
  id: uuid
  updated_at: timestamptz
  user_id: Int
  view_time_ms: bigint
}

"""aggregate sum on columns"""
type exhibitor_page_views_sum_fields {
   user_id: Int
   view_time_ms: bigint
}

"""
order by sum() on columns of table "exhibitor_page_views"
"""
input exhibitor_page_views_sum_order_by {
  user_id: order_by
  view_time_ms: order_by
}

"""
update columns of table "exhibitor_page_views"
"""
enum exhibitor_page_views_update_column {
  """column name"""
created_at
  """column name"""
exhibitor_id
  """column name"""
id
  """column name"""
updated_at
  """column name"""
user_id
  """column name"""
view_time_ms
}

input exhibitor_page_views_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: exhibitor_page_views_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: exhibitor_page_views_set_input
  where: exhibitor_page_views_bool_exp! 
}

"""aggregate var_pop on columns"""
type exhibitor_page_views_var_pop_fields {
   user_id: Float
   view_time_ms: Float
}

"""
order by var_pop() on columns of table "exhibitor_page_views"
"""
input exhibitor_page_views_var_pop_order_by {
  user_id: order_by
  view_time_ms: order_by
}

"""aggregate var_samp on columns"""
type exhibitor_page_views_var_samp_fields {
   user_id: Float
   view_time_ms: Float
}

"""
order by var_samp() on columns of table "exhibitor_page_views"
"""
input exhibitor_page_views_var_samp_order_by {
  user_id: order_by
  view_time_ms: order_by
}

"""aggregate variance on columns"""
type exhibitor_page_views_variance_fields {
   user_id: Float
   view_time_ms: Float
}

"""
order by variance() on columns of table "exhibitor_page_views"
"""
input exhibitor_page_views_variance_order_by {
  user_id: order_by
  view_time_ms: order_by
}

"""
columns and relationships of "exhibitor_representative_user_badge"
"""
type exhibitor_representative_user_badge {
   avatar: String
   event_id: Int
   first_name: String
   last_name: String
   representative_id: uuid
   role: String
   user_id: Int
}

"""
aggregated selection of "exhibitor_representative_user_badge"
"""
type exhibitor_representative_user_badge_aggregate {
   aggregate: exhibitor_representative_user_badge_aggregate_fields
   nodes: [exhibitor_representative_user_badge! ]! 
}

"""
aggregate fields of "exhibitor_representative_user_badge"
"""
type exhibitor_representative_user_badge_aggregate_fields {
   avg: exhibitor_representative_user_badge_avg_fields
   count(columns: [exhibitor_representative_user_badge_select_column! ], distinct: Boolean): Int! 
   max: exhibitor_representative_user_badge_max_fields
   min: exhibitor_representative_user_badge_min_fields
   stddev: exhibitor_representative_user_badge_stddev_fields
   stddev_pop: exhibitor_representative_user_badge_stddev_pop_fields
   stddev_samp: exhibitor_representative_user_badge_stddev_samp_fields
   sum: exhibitor_representative_user_badge_sum_fields
   var_pop: exhibitor_representative_user_badge_var_pop_fields
   var_samp: exhibitor_representative_user_badge_var_samp_fields
   variance: exhibitor_representative_user_badge_variance_fields
}

"""aggregate avg on columns"""
type exhibitor_representative_user_badge_avg_fields {
   event_id: Float
   user_id: Float
}

"""
Boolean expression to filter rows from the table "exhibitor_representative_user_badge". All fields are combined with a logical 'AND'.
"""
input exhibitor_representative_user_badge_bool_exp {
  _and: [exhibitor_representative_user_badge_bool_exp! ]
  _not: exhibitor_representative_user_badge_bool_exp
  _or: [exhibitor_representative_user_badge_bool_exp! ]
  avatar: String_comparison_exp
  event_id: Int_comparison_exp
  first_name: String_comparison_exp
  last_name: String_comparison_exp
  representative_id: uuid_comparison_exp
  role: String_comparison_exp
  user_id: Int_comparison_exp
}

"""
input type for inserting data into table "exhibitor_representative_user_badge"
"""
input exhibitor_representative_user_badge_insert_input {
  avatar: String
  event_id: Int
  first_name: String
  last_name: String
  representative_id: uuid
  role: String
  user_id: Int
}

"""aggregate max on columns"""
type exhibitor_representative_user_badge_max_fields {
   avatar: String
   event_id: Int
   first_name: String
   last_name: String
   representative_id: uuid
   role: String
   user_id: Int
}

"""aggregate min on columns"""
type exhibitor_representative_user_badge_min_fields {
   avatar: String
   event_id: Int
   first_name: String
   last_name: String
   representative_id: uuid
   role: String
   user_id: Int
}

"""
input type for inserting object relation for remote table "exhibitor_representative_user_badge"
"""
input exhibitor_representative_user_badge_obj_rel_insert_input {
  data: exhibitor_representative_user_badge_insert_input! 
}

"""
Ordering options when selecting data from "exhibitor_representative_user_badge".
"""
input exhibitor_representative_user_badge_order_by {
  avatar: order_by
  event_id: order_by
  first_name: order_by
  last_name: order_by
  representative_id: order_by
  role: order_by
  user_id: order_by
}

"""
select columns of table "exhibitor_representative_user_badge"
"""
enum exhibitor_representative_user_badge_select_column {
  """column name"""
avatar
  """column name"""
event_id
  """column name"""
first_name
  """column name"""
last_name
  """column name"""
representative_id
  """column name"""
role
  """column name"""
user_id
}

"""aggregate stddev on columns"""
type exhibitor_representative_user_badge_stddev_fields {
   event_id: Float
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type exhibitor_representative_user_badge_stddev_pop_fields {
   event_id: Float
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type exhibitor_representative_user_badge_stddev_samp_fields {
   event_id: Float
   user_id: Float
}

"""
Streaming cursor of the table "exhibitor_representative_user_badge"
"""
input exhibitor_representative_user_badge_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: exhibitor_representative_user_badge_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input exhibitor_representative_user_badge_stream_cursor_value_input {
  avatar: String
  event_id: Int
  first_name: String
  last_name: String
  representative_id: uuid
  role: String
  user_id: Int
}

"""aggregate sum on columns"""
type exhibitor_representative_user_badge_sum_fields {
   event_id: Int
   user_id: Int
}

"""aggregate var_pop on columns"""
type exhibitor_representative_user_badge_var_pop_fields {
   event_id: Float
   user_id: Float
}

"""aggregate var_samp on columns"""
type exhibitor_representative_user_badge_var_samp_fields {
   event_id: Float
   user_id: Float
}

"""aggregate variance on columns"""
type exhibitor_representative_user_badge_variance_fields {
   event_id: Float
   user_id: Float
}

"""
columns and relationships of "exhibitor_representative_users"
"""
type exhibitor_representative_users {
   email: citext
   event_id: Int
  """An array relationship"""
 exhibitor_contacts("""distinct select on columns"""
distinct_on: [exhibitor_contacts_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_contacts_order_by! ], """filter the rows returned"""
where: exhibitor_contacts_bool_exp): [exhibitor_contacts! ]! 
  """An aggregate relationship"""
 exhibitor_contacts_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_contacts_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_contacts_order_by! ], """filter the rows returned"""
where: exhibitor_contacts_bool_exp): exhibitor_contacts_aggregate! 
   exhibitor_id: uuid
   user_id: Int
}

"""
aggregated selection of "exhibitor_representative_users"
"""
type exhibitor_representative_users_aggregate {
   aggregate: exhibitor_representative_users_aggregate_fields
   nodes: [exhibitor_representative_users! ]! 
}

"""
aggregate fields of "exhibitor_representative_users"
"""
type exhibitor_representative_users_aggregate_fields {
   avg: exhibitor_representative_users_avg_fields
   count(columns: [exhibitor_representative_users_select_column! ], distinct: Boolean): Int! 
   max: exhibitor_representative_users_max_fields
   min: exhibitor_representative_users_min_fields
   stddev: exhibitor_representative_users_stddev_fields
   stddev_pop: exhibitor_representative_users_stddev_pop_fields
   stddev_samp: exhibitor_representative_users_stddev_samp_fields
   sum: exhibitor_representative_users_sum_fields
   var_pop: exhibitor_representative_users_var_pop_fields
   var_samp: exhibitor_representative_users_var_samp_fields
   variance: exhibitor_representative_users_variance_fields
}

"""aggregate avg on columns"""
type exhibitor_representative_users_avg_fields {
   event_id: Float
   user_id: Float
}

"""
Boolean expression to filter rows from the table "exhibitor_representative_users". All fields are combined with a logical 'AND'.
"""
input exhibitor_representative_users_bool_exp {
  _and: [exhibitor_representative_users_bool_exp! ]
  _not: exhibitor_representative_users_bool_exp
  _or: [exhibitor_representative_users_bool_exp! ]
  email: citext_comparison_exp
  event_id: Int_comparison_exp
  exhibitor_contacts: exhibitor_contacts_bool_exp
  exhibitor_contacts_aggregate: exhibitor_contacts_aggregate_bool_exp
  exhibitor_id: uuid_comparison_exp
  user_id: Int_comparison_exp
}

"""aggregate max on columns"""
type exhibitor_representative_users_max_fields {
   email: citext
   event_id: Int
   exhibitor_id: uuid
   user_id: Int
}

"""aggregate min on columns"""
type exhibitor_representative_users_min_fields {
   email: citext
   event_id: Int
   exhibitor_id: uuid
   user_id: Int
}

"""
Ordering options when selecting data from "exhibitor_representative_users".
"""
input exhibitor_representative_users_order_by {
  email: order_by
  event_id: order_by
  exhibitor_contacts_aggregate: exhibitor_contacts_aggregate_order_by
  exhibitor_id: order_by
  user_id: order_by
}

"""
select columns of table "exhibitor_representative_users"
"""
enum exhibitor_representative_users_select_column {
  """column name"""
email
  """column name"""
event_id
  """column name"""
exhibitor_id
  """column name"""
user_id
}

"""aggregate stddev on columns"""
type exhibitor_representative_users_stddev_fields {
   event_id: Float
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type exhibitor_representative_users_stddev_pop_fields {
   event_id: Float
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type exhibitor_representative_users_stddev_samp_fields {
   event_id: Float
   user_id: Float
}

"""
Streaming cursor of the table "exhibitor_representative_users"
"""
input exhibitor_representative_users_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: exhibitor_representative_users_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input exhibitor_representative_users_stream_cursor_value_input {
  email: citext
  event_id: Int
  exhibitor_id: uuid
  user_id: Int
}

"""aggregate sum on columns"""
type exhibitor_representative_users_sum_fields {
   event_id: Int
   user_id: Int
}

"""aggregate var_pop on columns"""
type exhibitor_representative_users_var_pop_fields {
   event_id: Float
   user_id: Float
}

"""aggregate var_samp on columns"""
type exhibitor_representative_users_var_samp_fields {
   event_id: Float
   user_id: Float
}

"""aggregate variance on columns"""
type exhibitor_representative_users_variance_fields {
   event_id: Float
   user_id: Float
}

"""
columns and relationships of "exhibitor_representatives"
"""
type exhibitor_representatives {
   created_at: timestamptz! 
   email: String! 
  """An object relationship"""
 exhibitor: exhibitors! 
  """An array relationship"""
 exhibitor_contacts("""distinct select on columns"""
distinct_on: [exhibitor_contacts_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_contacts_order_by! ], """filter the rows returned"""
where: exhibitor_contacts_bool_exp): [exhibitor_contacts! ]! 
  """An aggregate relationship"""
 exhibitor_contacts_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_contacts_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_contacts_order_by! ], """filter the rows returned"""
where: exhibitor_contacts_bool_exp): exhibitor_contacts_aggregate! 
   exhibitor_id: uuid! 
   id: uuid! 
   updated_at: timestamptz! 
  """An object relationship"""
 user_badge: exhibitor_representative_user_badge
  """An array relationship"""
 users("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): [users! ]! 
  """An aggregate relationship"""
 users_aggregate("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): users_aggregate! 
}

"""
aggregated selection of "exhibitor_representatives"
"""
type exhibitor_representatives_aggregate {
   aggregate: exhibitor_representatives_aggregate_fields
   nodes: [exhibitor_representatives! ]! 
}

input exhibitor_representatives_aggregate_bool_exp {
  count: exhibitor_representatives_aggregate_bool_exp_count
}

input exhibitor_representatives_aggregate_bool_exp_count {
  arguments: [exhibitor_representatives_select_column! ]
  distinct: Boolean
  filter: exhibitor_representatives_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "exhibitor_representatives"
"""
type exhibitor_representatives_aggregate_fields {
   count(columns: [exhibitor_representatives_select_column! ], distinct: Boolean): Int! 
   max: exhibitor_representatives_max_fields
   min: exhibitor_representatives_min_fields
}

"""
order by aggregate values of table "exhibitor_representatives"
"""
input exhibitor_representatives_aggregate_order_by {
  count: order_by
  max: exhibitor_representatives_max_order_by
  min: exhibitor_representatives_min_order_by
}

"""
input type for inserting array relation for remote table "exhibitor_representatives"
"""
input exhibitor_representatives_arr_rel_insert_input {
  data: [exhibitor_representatives_insert_input! ]! 
  """upsert condition"""
on_conflict: exhibitor_representatives_on_conflict
}

"""
Boolean expression to filter rows from the table "exhibitor_representatives". All fields are combined with a logical 'AND'.
"""
input exhibitor_representatives_bool_exp {
  _and: [exhibitor_representatives_bool_exp! ]
  _not: exhibitor_representatives_bool_exp
  _or: [exhibitor_representatives_bool_exp! ]
  created_at: timestamptz_comparison_exp
  email: String_comparison_exp
  exhibitor: exhibitors_bool_exp
  exhibitor_contacts: exhibitor_contacts_bool_exp
  exhibitor_contacts_aggregate: exhibitor_contacts_aggregate_bool_exp
  exhibitor_id: uuid_comparison_exp
  id: uuid_comparison_exp
  updated_at: timestamptz_comparison_exp
  user_badge: exhibitor_representative_user_badge_bool_exp
  users: users_bool_exp
  users_aggregate: users_aggregate_bool_exp
}

"""
unique or primary key constraints on table "exhibitor_representatives"
"""
enum exhibitor_representatives_constraint {
  """
  unique or primary key constraint on columns "email", "exhibitor_id"
  """
exhibitor_representatives_exhibitor_id_email_key
  """
  unique or primary key constraint on columns "id"
  """
exhibitor_representatives_pkey
}

"""
input type for inserting data into table "exhibitor_representatives"
"""
input exhibitor_representatives_insert_input {
  created_at: timestamptz! 
  email: String! 
  exhibitor: exhibitors_obj_rel_insert_input
  exhibitor_contacts: exhibitor_contacts_arr_rel_insert_input
  exhibitor_id: uuid! 
  id: uuid! 
  updated_at: timestamptz! 
  user_badge: exhibitor_representative_user_badge_obj_rel_insert_input
  users: users_arr_rel_insert_input
}

"""aggregate max on columns"""
type exhibitor_representatives_max_fields {
   created_at: timestamptz
   email: String
   exhibitor_id: uuid
   id: uuid
   updated_at: timestamptz
}

"""
order by max() on columns of table "exhibitor_representatives"
"""
input exhibitor_representatives_max_order_by {
  created_at: order_by
  email: order_by
  exhibitor_id: order_by
  id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type exhibitor_representatives_min_fields {
   created_at: timestamptz
   email: String
   exhibitor_id: uuid
   id: uuid
   updated_at: timestamptz
}

"""
order by min() on columns of table "exhibitor_representatives"
"""
input exhibitor_representatives_min_order_by {
  created_at: order_by
  email: order_by
  exhibitor_id: order_by
  id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "exhibitor_representatives"
"""
type exhibitor_representatives_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [exhibitor_representatives! ]! 
}

"""
input type for inserting object relation for remote table "exhibitor_representatives"
"""
input exhibitor_representatives_obj_rel_insert_input {
  data: exhibitor_representatives_insert_input! 
  """upsert condition"""
on_conflict: exhibitor_representatives_on_conflict
}

"""
on_conflict condition type for table "exhibitor_representatives"
"""
input exhibitor_representatives_on_conflict {
  constraint: exhibitor_representatives_constraint! 
  update_columns: [exhibitor_representatives_update_column! ]! 
  where: exhibitor_representatives_bool_exp
}

"""Ordering options when selecting data from "exhibitor_representatives"."""
input exhibitor_representatives_order_by {
  created_at: order_by
  email: order_by
  exhibitor: exhibitors_order_by
  exhibitor_contacts_aggregate: exhibitor_contacts_aggregate_order_by
  exhibitor_id: order_by
  id: order_by
  updated_at: order_by
  user_badge: exhibitor_representative_user_badge_order_by
  users_aggregate: users_aggregate_order_by
}

"""primary key columns input for table: exhibitor_representatives"""
input exhibitor_representatives_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "exhibitor_representatives"
"""
enum exhibitor_representatives_select_column {
  """column name"""
created_at
  """column name"""
email
  """column name"""
exhibitor_id
  """column name"""
id
  """column name"""
updated_at
}

"""
input type for updating data in table "exhibitor_representatives"
"""
input exhibitor_representatives_set_input {
  created_at: timestamptz
  email: String
  exhibitor_id: uuid
  id: uuid
  updated_at: timestamptz
}

"""
Streaming cursor of the table "exhibitor_representatives"
"""
input exhibitor_representatives_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: exhibitor_representatives_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input exhibitor_representatives_stream_cursor_value_input {
  created_at: timestamptz
  email: String
  exhibitor_id: uuid
  id: uuid
  updated_at: timestamptz
}

"""
update columns of table "exhibitor_representatives"
"""
enum exhibitor_representatives_update_column {
  """column name"""
created_at
  """column name"""
email
  """column name"""
exhibitor_id
  """column name"""
id
  """column name"""
updated_at
}

input exhibitor_representatives_updates {
  """sets the columns of the filtered rows to the given values"""
_set: exhibitor_representatives_set_input
  where: exhibitor_representatives_bool_exp! 
}

"""
columns and relationships of "exhibitor_resources"
"""
type exhibitor_resources {
   created_at: timestamptz! 
  """An object relationship"""
 exhibitor: exhibitors! 
   exhibitor_id: uuid! 
   id: uuid! 
   label: String! 
   order: Int! 
   updated_at: timestamptz! 
   uploaded: Boolean! 
}

"""
aggregated selection of "exhibitor_resources"
"""
type exhibitor_resources_aggregate {
   aggregate: exhibitor_resources_aggregate_fields
   nodes: [exhibitor_resources! ]! 
}

input exhibitor_resources_aggregate_bool_exp {
  bool_and: exhibitor_resources_aggregate_bool_exp_bool_and
  bool_or: exhibitor_resources_aggregate_bool_exp_bool_or
  count: exhibitor_resources_aggregate_bool_exp_count
}

input exhibitor_resources_aggregate_bool_exp_bool_and {
  arguments: exhibitor_resources_select_column_exhibitor_resources_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: exhibitor_resources_bool_exp
  predicate: Boolean_comparison_exp! 
}

input exhibitor_resources_aggregate_bool_exp_bool_or {
  arguments: exhibitor_resources_select_column_exhibitor_resources_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: exhibitor_resources_bool_exp
  predicate: Boolean_comparison_exp! 
}

input exhibitor_resources_aggregate_bool_exp_count {
  arguments: [exhibitor_resources_select_column! ]
  distinct: Boolean
  filter: exhibitor_resources_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "exhibitor_resources"
"""
type exhibitor_resources_aggregate_fields {
   avg: exhibitor_resources_avg_fields
   count(columns: [exhibitor_resources_select_column! ], distinct: Boolean): Int! 
   max: exhibitor_resources_max_fields
   min: exhibitor_resources_min_fields
   stddev: exhibitor_resources_stddev_fields
   stddev_pop: exhibitor_resources_stddev_pop_fields
   stddev_samp: exhibitor_resources_stddev_samp_fields
   sum: exhibitor_resources_sum_fields
   var_pop: exhibitor_resources_var_pop_fields
   var_samp: exhibitor_resources_var_samp_fields
   variance: exhibitor_resources_variance_fields
}

"""
order by aggregate values of table "exhibitor_resources"
"""
input exhibitor_resources_aggregate_order_by {
  avg: exhibitor_resources_avg_order_by
  count: order_by
  max: exhibitor_resources_max_order_by
  min: exhibitor_resources_min_order_by
  stddev: exhibitor_resources_stddev_order_by
  stddev_pop: exhibitor_resources_stddev_pop_order_by
  stddev_samp: exhibitor_resources_stddev_samp_order_by
  sum: exhibitor_resources_sum_order_by
  var_pop: exhibitor_resources_var_pop_order_by
  var_samp: exhibitor_resources_var_samp_order_by
  variance: exhibitor_resources_variance_order_by
}

"""
input type for inserting array relation for remote table "exhibitor_resources"
"""
input exhibitor_resources_arr_rel_insert_input {
  data: [exhibitor_resources_insert_input! ]! 
  """upsert condition"""
on_conflict: exhibitor_resources_on_conflict
}

"""aggregate avg on columns"""
type exhibitor_resources_avg_fields {
   order: Float
}

"""
order by avg() on columns of table "exhibitor_resources"
"""
input exhibitor_resources_avg_order_by {
  order: order_by
}

"""
Boolean expression to filter rows from the table "exhibitor_resources". All fields are combined with a logical 'AND'.
"""
input exhibitor_resources_bool_exp {
  _and: [exhibitor_resources_bool_exp! ]
  _not: exhibitor_resources_bool_exp
  _or: [exhibitor_resources_bool_exp! ]
  created_at: timestamptz_comparison_exp
  exhibitor: exhibitors_bool_exp
  exhibitor_id: uuid_comparison_exp
  id: uuid_comparison_exp
  label: String_comparison_exp
  order: Int_comparison_exp
  updated_at: timestamptz_comparison_exp
  uploaded: Boolean_comparison_exp
}

"""
unique or primary key constraints on table "exhibitor_resources"
"""
enum exhibitor_resources_constraint {
  """
  unique or primary key constraint on columns "id"
  """
exhibitor_resources_pkey
}

"""
input type for incrementing numeric columns in table "exhibitor_resources"
"""
input exhibitor_resources_inc_input {
  order: Int
}

"""
input type for inserting data into table "exhibitor_resources"
"""
input exhibitor_resources_insert_input {
  created_at: timestamptz! 
  exhibitor: exhibitors_obj_rel_insert_input
  exhibitor_id: uuid! 
  id: uuid! 
  label: String! 
  order: Int! 
  updated_at: timestamptz! 
  uploaded: Boolean! 
}

"""aggregate max on columns"""
type exhibitor_resources_max_fields {
   created_at: timestamptz
   exhibitor_id: uuid
   id: uuid
   label: String
   order: Int
   updated_at: timestamptz
}

"""
order by max() on columns of table "exhibitor_resources"
"""
input exhibitor_resources_max_order_by {
  created_at: order_by
  exhibitor_id: order_by
  id: order_by
  label: order_by
  order: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type exhibitor_resources_min_fields {
   created_at: timestamptz
   exhibitor_id: uuid
   id: uuid
   label: String
   order: Int
   updated_at: timestamptz
}

"""
order by min() on columns of table "exhibitor_resources"
"""
input exhibitor_resources_min_order_by {
  created_at: order_by
  exhibitor_id: order_by
  id: order_by
  label: order_by
  order: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "exhibitor_resources"
"""
type exhibitor_resources_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [exhibitor_resources! ]! 
}

"""
on_conflict condition type for table "exhibitor_resources"
"""
input exhibitor_resources_on_conflict {
  constraint: exhibitor_resources_constraint! 
  update_columns: [exhibitor_resources_update_column! ]! 
  where: exhibitor_resources_bool_exp
}

"""Ordering options when selecting data from "exhibitor_resources"."""
input exhibitor_resources_order_by {
  created_at: order_by
  exhibitor: exhibitors_order_by
  exhibitor_id: order_by
  id: order_by
  label: order_by
  order: order_by
  updated_at: order_by
  uploaded: order_by
}

"""primary key columns input for table: exhibitor_resources"""
input exhibitor_resources_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "exhibitor_resources"
"""
enum exhibitor_resources_select_column {
  """column name"""
created_at
  """column name"""
exhibitor_id
  """column name"""
id
  """column name"""
label
  """column name"""
order
  """column name"""
updated_at
  """column name"""
uploaded
}

"""
select "exhibitor_resources_aggregate_bool_exp_bool_and_arguments_columns" columns of table "exhibitor_resources"
"""
enum exhibitor_resources_select_column_exhibitor_resources_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
uploaded
}

"""
select "exhibitor_resources_aggregate_bool_exp_bool_or_arguments_columns" columns of table "exhibitor_resources"
"""
enum exhibitor_resources_select_column_exhibitor_resources_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
uploaded
}

"""
input type for updating data in table "exhibitor_resources"
"""
input exhibitor_resources_set_input {
  created_at: timestamptz
  exhibitor_id: uuid
  id: uuid
  label: String
  order: Int
  updated_at: timestamptz
  uploaded: Boolean
}

"""aggregate stddev on columns"""
type exhibitor_resources_stddev_fields {
   order: Float
}

"""
order by stddev() on columns of table "exhibitor_resources"
"""
input exhibitor_resources_stddev_order_by {
  order: order_by
}

"""aggregate stddev_pop on columns"""
type exhibitor_resources_stddev_pop_fields {
   order: Float
}

"""
order by stddev_pop() on columns of table "exhibitor_resources"
"""
input exhibitor_resources_stddev_pop_order_by {
  order: order_by
}

"""aggregate stddev_samp on columns"""
type exhibitor_resources_stddev_samp_fields {
   order: Float
}

"""
order by stddev_samp() on columns of table "exhibitor_resources"
"""
input exhibitor_resources_stddev_samp_order_by {
  order: order_by
}

"""
Streaming cursor of the table "exhibitor_resources"
"""
input exhibitor_resources_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: exhibitor_resources_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input exhibitor_resources_stream_cursor_value_input {
  created_at: timestamptz
  exhibitor_id: uuid
  id: uuid
  label: String
  order: Int
  updated_at: timestamptz
  uploaded: Boolean
}

"""aggregate sum on columns"""
type exhibitor_resources_sum_fields {
   order: Int
}

"""
order by sum() on columns of table "exhibitor_resources"
"""
input exhibitor_resources_sum_order_by {
  order: order_by
}

"""
update columns of table "exhibitor_resources"
"""
enum exhibitor_resources_update_column {
  """column name"""
created_at
  """column name"""
exhibitor_id
  """column name"""
id
  """column name"""
label
  """column name"""
order
  """column name"""
updated_at
  """column name"""
uploaded
}

input exhibitor_resources_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: exhibitor_resources_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: exhibitor_resources_set_input
  where: exhibitor_resources_bool_exp! 
}

"""aggregate var_pop on columns"""
type exhibitor_resources_var_pop_fields {
   order: Float
}

"""
order by var_pop() on columns of table "exhibitor_resources"
"""
input exhibitor_resources_var_pop_order_by {
  order: order_by
}

"""aggregate var_samp on columns"""
type exhibitor_resources_var_samp_fields {
   order: Float
}

"""
order by var_samp() on columns of table "exhibitor_resources"
"""
input exhibitor_resources_var_samp_order_by {
  order: order_by
}

"""aggregate variance on columns"""
type exhibitor_resources_variance_fields {
   order: Float
}

"""
order by variance() on columns of table "exhibitor_resources"
"""
input exhibitor_resources_variance_order_by {
  order: order_by
}

"""
columns and relationships of "exhibitor_sizes"
"""
type exhibitor_sizes {
   comment: String! 
   value: String! 
}

"""
aggregated selection of "exhibitor_sizes"
"""
type exhibitor_sizes_aggregate {
   aggregate: exhibitor_sizes_aggregate_fields
   nodes: [exhibitor_sizes! ]! 
}

"""
aggregate fields of "exhibitor_sizes"
"""
type exhibitor_sizes_aggregate_fields {
   count(columns: [exhibitor_sizes_select_column! ], distinct: Boolean): Int! 
   max: exhibitor_sizes_max_fields
   min: exhibitor_sizes_min_fields
}

"""
Boolean expression to filter rows from the table "exhibitor_sizes". All fields are combined with a logical 'AND'.
"""
input exhibitor_sizes_bool_exp {
  _and: [exhibitor_sizes_bool_exp! ]
  _not: exhibitor_sizes_bool_exp
  _or: [exhibitor_sizes_bool_exp! ]
  comment: String_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "exhibitor_sizes"
"""
enum exhibitor_sizes_constraint {
  """
  unique or primary key constraint on columns "value"
  """
exhibitor_sizes_pkey
}

enum exhibitor_sizes_enum {
  grid
  half_screen
}

"""
Boolean expression to compare columns of type "exhibitor_sizes_enum". All fields are combined with logical 'AND'.
"""
input exhibitor_sizes_enum_comparison_exp {
  _eq: exhibitor_sizes_enum
  _in: [exhibitor_sizes_enum! ]
  _is_null: Boolean
  _neq: exhibitor_sizes_enum
  _nin: [exhibitor_sizes_enum! ]
}

"""
input type for inserting data into table "exhibitor_sizes"
"""
input exhibitor_sizes_insert_input {
  comment: String! 
  value: String! 
}

"""aggregate max on columns"""
type exhibitor_sizes_max_fields {
   comment: String
   value: String
}

"""aggregate min on columns"""
type exhibitor_sizes_min_fields {
   comment: String
   value: String
}

"""
response of any mutation on the table "exhibitor_sizes"
"""
type exhibitor_sizes_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [exhibitor_sizes! ]! 
}

"""
on_conflict condition type for table "exhibitor_sizes"
"""
input exhibitor_sizes_on_conflict {
  constraint: exhibitor_sizes_constraint! 
  update_columns: [exhibitor_sizes_update_column! ]! 
  where: exhibitor_sizes_bool_exp
}

"""Ordering options when selecting data from "exhibitor_sizes"."""
input exhibitor_sizes_order_by {
  comment: order_by
  value: order_by
}

"""primary key columns input for table: exhibitor_sizes"""
input exhibitor_sizes_pk_columns_input {
  value: String! 
}

"""
select columns of table "exhibitor_sizes"
"""
enum exhibitor_sizes_select_column {
  """column name"""
comment
  """column name"""
value
}

"""
input type for updating data in table "exhibitor_sizes"
"""
input exhibitor_sizes_set_input {
  comment: String
  value: String
}

"""
Streaming cursor of the table "exhibitor_sizes"
"""
input exhibitor_sizes_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: exhibitor_sizes_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input exhibitor_sizes_stream_cursor_value_input {
  comment: String
  value: String
}

"""
update columns of table "exhibitor_sizes"
"""
enum exhibitor_sizes_update_column {
  """column name"""
comment
  """column name"""
value
}

input exhibitor_sizes_updates {
  """sets the columns of the filtered rows to the given values"""
_set: exhibitor_sizes_set_input
  where: exhibitor_sizes_bool_exp! 
}

"""
columns and relationships of "exhibitor_social_clicks"
"""
type exhibitor_social_clicks {
  """An object relationship"""
 exhibitor: exhibitors! 
   exhibitor_id: uuid! 
   id: uuid! 
   social_type: String! 
   user_id: Int
}

"""
aggregated selection of "exhibitor_social_clicks"
"""
type exhibitor_social_clicks_aggregate {
   aggregate: exhibitor_social_clicks_aggregate_fields
   nodes: [exhibitor_social_clicks! ]! 
}

"""
aggregate fields of "exhibitor_social_clicks"
"""
type exhibitor_social_clicks_aggregate_fields {
   avg: exhibitor_social_clicks_avg_fields
   count(columns: [exhibitor_social_clicks_select_column! ], distinct: Boolean): Int! 
   max: exhibitor_social_clicks_max_fields
   min: exhibitor_social_clicks_min_fields
   stddev: exhibitor_social_clicks_stddev_fields
   stddev_pop: exhibitor_social_clicks_stddev_pop_fields
   stddev_samp: exhibitor_social_clicks_stddev_samp_fields
   sum: exhibitor_social_clicks_sum_fields
   var_pop: exhibitor_social_clicks_var_pop_fields
   var_samp: exhibitor_social_clicks_var_samp_fields
   variance: exhibitor_social_clicks_variance_fields
}

"""aggregate avg on columns"""
type exhibitor_social_clicks_avg_fields {
   user_id: Float
}

"""
Boolean expression to filter rows from the table "exhibitor_social_clicks". All fields are combined with a logical 'AND'.
"""
input exhibitor_social_clicks_bool_exp {
  _and: [exhibitor_social_clicks_bool_exp! ]
  _not: exhibitor_social_clicks_bool_exp
  _or: [exhibitor_social_clicks_bool_exp! ]
  exhibitor: exhibitors_bool_exp
  exhibitor_id: uuid_comparison_exp
  id: uuid_comparison_exp
  social_type: String_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "exhibitor_social_clicks"
"""
enum exhibitor_social_clicks_constraint {
  """
  unique or primary key constraint on columns "id"
  """
exhibitor_social_clicks_pkey
}

"""
input type for incrementing numeric columns in table "exhibitor_social_clicks"
"""
input exhibitor_social_clicks_inc_input {
  user_id: Int
}

"""
input type for inserting data into table "exhibitor_social_clicks"
"""
input exhibitor_social_clicks_insert_input {
  exhibitor: exhibitors_obj_rel_insert_input
  exhibitor_id: uuid! 
  id: uuid! 
  social_type: String! 
  user_id: Int
}

"""aggregate max on columns"""
type exhibitor_social_clicks_max_fields {
   exhibitor_id: uuid
   id: uuid
   social_type: String
   user_id: Int
}

"""aggregate min on columns"""
type exhibitor_social_clicks_min_fields {
   exhibitor_id: uuid
   id: uuid
   social_type: String
   user_id: Int
}

"""
response of any mutation on the table "exhibitor_social_clicks"
"""
type exhibitor_social_clicks_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [exhibitor_social_clicks! ]! 
}

"""
on_conflict condition type for table "exhibitor_social_clicks"
"""
input exhibitor_social_clicks_on_conflict {
  constraint: exhibitor_social_clicks_constraint! 
  update_columns: [exhibitor_social_clicks_update_column! ]! 
  where: exhibitor_social_clicks_bool_exp
}

"""Ordering options when selecting data from "exhibitor_social_clicks"."""
input exhibitor_social_clicks_order_by {
  exhibitor: exhibitors_order_by
  exhibitor_id: order_by
  id: order_by
  social_type: order_by
  user_id: order_by
}

"""primary key columns input for table: exhibitor_social_clicks"""
input exhibitor_social_clicks_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "exhibitor_social_clicks"
"""
enum exhibitor_social_clicks_select_column {
  """column name"""
exhibitor_id
  """column name"""
id
  """column name"""
social_type
  """column name"""
user_id
}

"""
input type for updating data in table "exhibitor_social_clicks"
"""
input exhibitor_social_clicks_set_input {
  exhibitor_id: uuid
  id: uuid
  social_type: String
  user_id: Int
}

"""aggregate stddev on columns"""
type exhibitor_social_clicks_stddev_fields {
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type exhibitor_social_clicks_stddev_pop_fields {
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type exhibitor_social_clicks_stddev_samp_fields {
   user_id: Float
}

"""
Streaming cursor of the table "exhibitor_social_clicks"
"""
input exhibitor_social_clicks_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: exhibitor_social_clicks_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input exhibitor_social_clicks_stream_cursor_value_input {
  exhibitor_id: uuid
  id: uuid
  social_type: String
  user_id: Int
}

"""aggregate sum on columns"""
type exhibitor_social_clicks_sum_fields {
   user_id: Int
}

"""
update columns of table "exhibitor_social_clicks"
"""
enum exhibitor_social_clicks_update_column {
  """column name"""
exhibitor_id
  """column name"""
id
  """column name"""
social_type
  """column name"""
user_id
}

input exhibitor_social_clicks_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: exhibitor_social_clicks_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: exhibitor_social_clicks_set_input
  where: exhibitor_social_clicks_bool_exp! 
}

"""aggregate var_pop on columns"""
type exhibitor_social_clicks_var_pop_fields {
   user_id: Float
}

"""aggregate var_samp on columns"""
type exhibitor_social_clicks_var_samp_fields {
   user_id: Float
}

"""aggregate variance on columns"""
type exhibitor_social_clicks_variance_fields {
   user_id: Float
}

"""
columns and relationships of "exhibitor_statuses"
"""
type exhibitor_statuses {
   comment: String! 
   value: String! 
}

"""
aggregated selection of "exhibitor_statuses"
"""
type exhibitor_statuses_aggregate {
   aggregate: exhibitor_statuses_aggregate_fields
   nodes: [exhibitor_statuses! ]! 
}

"""
aggregate fields of "exhibitor_statuses"
"""
type exhibitor_statuses_aggregate_fields {
   count(columns: [exhibitor_statuses_select_column! ], distinct: Boolean): Int! 
   max: exhibitor_statuses_max_fields
   min: exhibitor_statuses_min_fields
}

"""
Boolean expression to filter rows from the table "exhibitor_statuses". All fields are combined with a logical 'AND'.
"""
input exhibitor_statuses_bool_exp {
  _and: [exhibitor_statuses_bool_exp! ]
  _not: exhibitor_statuses_bool_exp
  _or: [exhibitor_statuses_bool_exp! ]
  comment: String_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "exhibitor_statuses"
"""
enum exhibitor_statuses_constraint {
  """
  unique or primary key constraint on columns "value"
  """
exhibitor_statuses_pkey
}

enum exhibitor_statuses_enum {
  not_published
  not_started
  published
}

"""
Boolean expression to compare columns of type "exhibitor_statuses_enum". All fields are combined with logical 'AND'.
"""
input exhibitor_statuses_enum_comparison_exp {
  _eq: exhibitor_statuses_enum
  _in: [exhibitor_statuses_enum! ]
  _is_null: Boolean
  _neq: exhibitor_statuses_enum
  _nin: [exhibitor_statuses_enum! ]
}

"""
input type for inserting data into table "exhibitor_statuses"
"""
input exhibitor_statuses_insert_input {
  comment: String! 
  value: String! 
}

"""aggregate max on columns"""
type exhibitor_statuses_max_fields {
   comment: String
   value: String
}

"""aggregate min on columns"""
type exhibitor_statuses_min_fields {
   comment: String
   value: String
}

"""
response of any mutation on the table "exhibitor_statuses"
"""
type exhibitor_statuses_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [exhibitor_statuses! ]! 
}

"""
on_conflict condition type for table "exhibitor_statuses"
"""
input exhibitor_statuses_on_conflict {
  constraint: exhibitor_statuses_constraint! 
  update_columns: [exhibitor_statuses_update_column! ]! 
  where: exhibitor_statuses_bool_exp
}

"""Ordering options when selecting data from "exhibitor_statuses"."""
input exhibitor_statuses_order_by {
  comment: order_by
  value: order_by
}

"""primary key columns input for table: exhibitor_statuses"""
input exhibitor_statuses_pk_columns_input {
  value: String! 
}

"""
select columns of table "exhibitor_statuses"
"""
enum exhibitor_statuses_select_column {
  """column name"""
comment
  """column name"""
value
}

"""
input type for updating data in table "exhibitor_statuses"
"""
input exhibitor_statuses_set_input {
  comment: String
  value: String
}

"""
Streaming cursor of the table "exhibitor_statuses"
"""
input exhibitor_statuses_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: exhibitor_statuses_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input exhibitor_statuses_stream_cursor_value_input {
  comment: String
  value: String
}

"""
update columns of table "exhibitor_statuses"
"""
enum exhibitor_statuses_update_column {
  """column name"""
comment
  """column name"""
value
}

input exhibitor_statuses_updates {
  """sets the columns of the filtered rows to the given values"""
_set: exhibitor_statuses_set_input
  where: exhibitor_statuses_bool_exp! 
}

"""Unique exhibitor event tags"""
type exhibitor_tags {
   created_at: timestamptz! 
   event_id: Int! 
  """An array relationship"""
 exhibitors_tags("""distinct select on columns"""
distinct_on: [exhibitors_tags_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitors_tags_order_by! ], """filter the rows returned"""
where: exhibitors_tags_bool_exp): [exhibitors_tags! ]! 
  """An aggregate relationship"""
 exhibitors_tags_aggregate("""distinct select on columns"""
distinct_on: [exhibitors_tags_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitors_tags_order_by! ], """filter the rows returned"""
where: exhibitors_tags_bool_exp): exhibitors_tags_aggregate! 
   id: uuid! 
   tag: String! 
  """Not used except to allow on_conflict without any update columns"""
 updated: Boolean! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "exhibitor_tags"
"""
type exhibitor_tags_aggregate {
   aggregate: exhibitor_tags_aggregate_fields
   nodes: [exhibitor_tags! ]! 
}

"""
aggregate fields of "exhibitor_tags"
"""
type exhibitor_tags_aggregate_fields {
   avg: exhibitor_tags_avg_fields
   count(columns: [exhibitor_tags_select_column! ], distinct: Boolean): Int! 
   max: exhibitor_tags_max_fields
   min: exhibitor_tags_min_fields
   stddev: exhibitor_tags_stddev_fields
   stddev_pop: exhibitor_tags_stddev_pop_fields
   stddev_samp: exhibitor_tags_stddev_samp_fields
   sum: exhibitor_tags_sum_fields
   var_pop: exhibitor_tags_var_pop_fields
   var_samp: exhibitor_tags_var_samp_fields
   variance: exhibitor_tags_variance_fields
}

"""aggregate avg on columns"""
type exhibitor_tags_avg_fields {
   event_id: Float
}

"""
Boolean expression to filter rows from the table "exhibitor_tags". All fields are combined with a logical 'AND'.
"""
input exhibitor_tags_bool_exp {
  _and: [exhibitor_tags_bool_exp! ]
  _not: exhibitor_tags_bool_exp
  _or: [exhibitor_tags_bool_exp! ]
  created_at: timestamptz_comparison_exp
  event_id: Int_comparison_exp
  exhibitors_tags: exhibitors_tags_bool_exp
  exhibitors_tags_aggregate: exhibitors_tags_aggregate_bool_exp
  id: uuid_comparison_exp
  tag: String_comparison_exp
  updated: Boolean_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "exhibitor_tags"
"""
enum exhibitor_tags_constraint {
  """
  unique or primary key constraint on columns "id"
  """
exhibitor_tags_pkey
  """
  unique or primary key constraint on columns "event_id", "tag"
  """
exhibitor_tags_tag_event_id_key
}

"""
input type for incrementing numeric columns in table "exhibitor_tags"
"""
input exhibitor_tags_inc_input {
  event_id: Int
}

"""
input type for inserting data into table "exhibitor_tags"
"""
input exhibitor_tags_insert_input {
  created_at: timestamptz! 
  event_id: Int! 
  exhibitors_tags: exhibitors_tags_arr_rel_insert_input
  id: uuid! 
  tag: String! 
  """Not used except to allow on_conflict without any update columns"""
updated: Boolean! 
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type exhibitor_tags_max_fields {
   created_at: timestamptz
   event_id: Int
   id: uuid
   tag: String
   updated_at: timestamptz
}

"""aggregate min on columns"""
type exhibitor_tags_min_fields {
   created_at: timestamptz
   event_id: Int
   id: uuid
   tag: String
   updated_at: timestamptz
}

"""
response of any mutation on the table "exhibitor_tags"
"""
type exhibitor_tags_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [exhibitor_tags! ]! 
}

"""
input type for inserting object relation for remote table "exhibitor_tags"
"""
input exhibitor_tags_obj_rel_insert_input {
  data: exhibitor_tags_insert_input! 
  """upsert condition"""
on_conflict: exhibitor_tags_on_conflict
}

"""
on_conflict condition type for table "exhibitor_tags"
"""
input exhibitor_tags_on_conflict {
  constraint: exhibitor_tags_constraint! 
  update_columns: [exhibitor_tags_update_column! ]! 
  where: exhibitor_tags_bool_exp
}

"""Ordering options when selecting data from "exhibitor_tags"."""
input exhibitor_tags_order_by {
  created_at: order_by
  event_id: order_by
  exhibitors_tags_aggregate: exhibitors_tags_aggregate_order_by
  id: order_by
  tag: order_by
  updated: order_by
  updated_at: order_by
}

"""primary key columns input for table: exhibitor_tags"""
input exhibitor_tags_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "exhibitor_tags"
"""
enum exhibitor_tags_select_column {
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
id
  """column name"""
tag
  """column name"""
updated
  """column name"""
updated_at
}

"""
input type for updating data in table "exhibitor_tags"
"""
input exhibitor_tags_set_input {
  created_at: timestamptz
  event_id: Int
  id: uuid
  tag: String
  """Not used except to allow on_conflict without any update columns"""
updated: Boolean
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type exhibitor_tags_stddev_fields {
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type exhibitor_tags_stddev_pop_fields {
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type exhibitor_tags_stddev_samp_fields {
   event_id: Float
}

"""
Streaming cursor of the table "exhibitor_tags"
"""
input exhibitor_tags_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: exhibitor_tags_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input exhibitor_tags_stream_cursor_value_input {
  created_at: timestamptz
  event_id: Int
  id: uuid
  tag: String
  """Not used except to allow on_conflict without any update columns"""
updated: Boolean
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type exhibitor_tags_sum_fields {
   event_id: Int
}

"""
update columns of table "exhibitor_tags"
"""
enum exhibitor_tags_update_column {
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
id
  """column name"""
tag
  """column name"""
updated
  """column name"""
updated_at
}

input exhibitor_tags_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: exhibitor_tags_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: exhibitor_tags_set_input
  where: exhibitor_tags_bool_exp! 
}

"""aggregate var_pop on columns"""
type exhibitor_tags_var_pop_fields {
   event_id: Float
}

"""aggregate var_samp on columns"""
type exhibitor_tags_var_samp_fields {
   event_id: Float
}

"""aggregate variance on columns"""
type exhibitor_tags_variance_fields {
   event_id: Float
}

"""
columns and relationships of "exhibitor_users"
"""
type exhibitor_users {
   email: citext
   event_id: Int
  """An array relationship"""
 exhibitor_contacts("""distinct select on columns"""
distinct_on: [exhibitor_contacts_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_contacts_order_by! ], """filter the rows returned"""
where: exhibitor_contacts_bool_exp): [exhibitor_contacts! ]! 
  """An aggregate relationship"""
 exhibitor_contacts_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_contacts_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_contacts_order_by! ], """filter the rows returned"""
where: exhibitor_contacts_bool_exp): exhibitor_contacts_aggregate! 
   exhibitor_id: uuid
   user_id: Int
}

"""
aggregated selection of "exhibitor_users"
"""
type exhibitor_users_aggregate {
   aggregate: exhibitor_users_aggregate_fields
   nodes: [exhibitor_users! ]! 
}

"""
aggregate fields of "exhibitor_users"
"""
type exhibitor_users_aggregate_fields {
   avg: exhibitor_users_avg_fields
   count(columns: [exhibitor_users_select_column! ], distinct: Boolean): Int! 
   max: exhibitor_users_max_fields
   min: exhibitor_users_min_fields
   stddev: exhibitor_users_stddev_fields
   stddev_pop: exhibitor_users_stddev_pop_fields
   stddev_samp: exhibitor_users_stddev_samp_fields
   sum: exhibitor_users_sum_fields
   var_pop: exhibitor_users_var_pop_fields
   var_samp: exhibitor_users_var_samp_fields
   variance: exhibitor_users_variance_fields
}

"""aggregate avg on columns"""
type exhibitor_users_avg_fields {
   event_id: Float
   user_id: Float
}

"""
Boolean expression to filter rows from the table "exhibitor_users". All fields are combined with a logical 'AND'.
"""
input exhibitor_users_bool_exp {
  _and: [exhibitor_users_bool_exp! ]
  _not: exhibitor_users_bool_exp
  _or: [exhibitor_users_bool_exp! ]
  email: citext_comparison_exp
  event_id: Int_comparison_exp
  exhibitor_contacts: exhibitor_contacts_bool_exp
  exhibitor_contacts_aggregate: exhibitor_contacts_aggregate_bool_exp
  exhibitor_id: uuid_comparison_exp
  user_id: Int_comparison_exp
}

"""aggregate max on columns"""
type exhibitor_users_max_fields {
   email: citext
   event_id: Int
   exhibitor_id: uuid
   user_id: Int
}

"""aggregate min on columns"""
type exhibitor_users_min_fields {
   email: citext
   event_id: Int
   exhibitor_id: uuid
   user_id: Int
}

"""Ordering options when selecting data from "exhibitor_users"."""
input exhibitor_users_order_by {
  email: order_by
  event_id: order_by
  exhibitor_contacts_aggregate: exhibitor_contacts_aggregate_order_by
  exhibitor_id: order_by
  user_id: order_by
}

"""
select columns of table "exhibitor_users"
"""
enum exhibitor_users_select_column {
  """column name"""
email
  """column name"""
event_id
  """column name"""
exhibitor_id
  """column name"""
user_id
}

"""aggregate stddev on columns"""
type exhibitor_users_stddev_fields {
   event_id: Float
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type exhibitor_users_stddev_pop_fields {
   event_id: Float
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type exhibitor_users_stddev_samp_fields {
   event_id: Float
   user_id: Float
}

"""
Streaming cursor of the table "exhibitor_users"
"""
input exhibitor_users_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: exhibitor_users_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input exhibitor_users_stream_cursor_value_input {
  email: citext
  event_id: Int
  exhibitor_id: uuid
  user_id: Int
}

"""aggregate sum on columns"""
type exhibitor_users_sum_fields {
   event_id: Int
   user_id: Int
}

"""aggregate var_pop on columns"""
type exhibitor_users_var_pop_fields {
   event_id: Float
   user_id: Float
}

"""aggregate var_samp on columns"""
type exhibitor_users_var_samp_fields {
   event_id: Float
   user_id: Float
}

"""aggregate variance on columns"""
type exhibitor_users_variance_fields {
   event_id: Float
   user_id: Float
}

"""
columns and relationships of "exhibitors"
"""
type exhibitors {
   archived: Boolean! 
   booth_description: String! 
   booth_name: String! 
   colour: String
   created_at: timestamptz! 
   cta_label: String! 
   cta_url: String! 
   email: String! 
   event_id: Int! 
  """An array relationship"""
 exhibitor_contacts("""distinct select on columns"""
distinct_on: [exhibitor_contacts_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_contacts_order_by! ], """filter the rows returned"""
where: exhibitor_contacts_bool_exp): [exhibitor_contacts! ]! 
  """An aggregate relationship"""
 exhibitor_contacts_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_contacts_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_contacts_order_by! ], """filter the rows returned"""
where: exhibitor_contacts_bool_exp): exhibitor_contacts_aggregate! 
  """An array relationship"""
 exhibitor_page_views("""distinct select on columns"""
distinct_on: [exhibitor_page_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_page_views_order_by! ], """filter the rows returned"""
where: exhibitor_page_views_bool_exp): [exhibitor_page_views! ]! 
  """An aggregate relationship"""
 exhibitor_page_views_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_page_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_page_views_order_by! ], """filter the rows returned"""
where: exhibitor_page_views_bool_exp): exhibitor_page_views_aggregate! 
  """An array relationship"""
 exhibitor_representatives("""distinct select on columns"""
distinct_on: [exhibitor_representatives_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_representatives_order_by! ], """filter the rows returned"""
where: exhibitor_representatives_bool_exp): [exhibitor_representatives! ]! 
  """An aggregate relationship"""
 exhibitor_representatives_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_representatives_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_representatives_order_by! ], """filter the rows returned"""
where: exhibitor_representatives_bool_exp): exhibitor_representatives_aggregate! 
  """An array relationship"""
 exhibitor_resources("""distinct select on columns"""
distinct_on: [exhibitor_resources_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_resources_order_by! ], """filter the rows returned"""
where: exhibitor_resources_bool_exp): [exhibitor_resources! ]! 
  """An aggregate relationship"""
 exhibitor_resources_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_resources_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_resources_order_by! ], """filter the rows returned"""
where: exhibitor_resources_bool_exp): exhibitor_resources_aggregate! 
  """An array relationship"""
 exhibitors_tags("""distinct select on columns"""
distinct_on: [exhibitors_tags_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitors_tags_order_by! ], """filter the rows returned"""
where: exhibitors_tags_bool_exp): [exhibitors_tags! ]! 
  """An aggregate relationship"""
 exhibitors_tags_aggregate("""distinct select on columns"""
distinct_on: [exhibitors_tags_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitors_tags_order_by! ], """filter the rows returned"""
where: exhibitors_tags_bool_exp): exhibitors_tags_aggregate! 
   facebook: String! 
   hide_booth: Boolean! 
   id: uuid! 
   instagram: String! 
   linked_in: String! 
   logo: String
   logo_header: String
   name: String! 
   offer_button: String! 
   offer_title: String! 
   order: Int! 
   profile: String
   size: exhibitor_sizes_enum! 
   status: exhibitor_statuses_enum! 
   twitter: String! 
   updated_at: timestamptz! 
  """An array relationship"""
 user("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): [users! ]! 
  """An aggregate relationship"""
 user_aggregate("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): users_aggregate! 
   video: String! 
   website: String! 
}

"""
aggregated selection of "exhibitors"
"""
type exhibitors_aggregate {
   aggregate: exhibitors_aggregate_fields
   nodes: [exhibitors! ]! 
}

input exhibitors_aggregate_bool_exp {
  bool_and: exhibitors_aggregate_bool_exp_bool_and
  bool_or: exhibitors_aggregate_bool_exp_bool_or
  count: exhibitors_aggregate_bool_exp_count
}

input exhibitors_aggregate_bool_exp_bool_and {
  arguments: exhibitors_select_column_exhibitors_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: exhibitors_bool_exp
  predicate: Boolean_comparison_exp! 
}

input exhibitors_aggregate_bool_exp_bool_or {
  arguments: exhibitors_select_column_exhibitors_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: exhibitors_bool_exp
  predicate: Boolean_comparison_exp! 
}

input exhibitors_aggregate_bool_exp_count {
  arguments: [exhibitors_select_column! ]
  distinct: Boolean
  filter: exhibitors_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "exhibitors"
"""
type exhibitors_aggregate_fields {
   avg: exhibitors_avg_fields
   count(columns: [exhibitors_select_column! ], distinct: Boolean): Int! 
   max: exhibitors_max_fields
   min: exhibitors_min_fields
   stddev: exhibitors_stddev_fields
   stddev_pop: exhibitors_stddev_pop_fields
   stddev_samp: exhibitors_stddev_samp_fields
   sum: exhibitors_sum_fields
   var_pop: exhibitors_var_pop_fields
   var_samp: exhibitors_var_samp_fields
   variance: exhibitors_variance_fields
}

"""
order by aggregate values of table "exhibitors"
"""
input exhibitors_aggregate_order_by {
  avg: exhibitors_avg_order_by
  count: order_by
  max: exhibitors_max_order_by
  min: exhibitors_min_order_by
  stddev: exhibitors_stddev_order_by
  stddev_pop: exhibitors_stddev_pop_order_by
  stddev_samp: exhibitors_stddev_samp_order_by
  sum: exhibitors_sum_order_by
  var_pop: exhibitors_var_pop_order_by
  var_samp: exhibitors_var_samp_order_by
  variance: exhibitors_variance_order_by
}

"""
input type for inserting array relation for remote table "exhibitors"
"""
input exhibitors_arr_rel_insert_input {
  data: [exhibitors_insert_input! ]! 
  """upsert condition"""
on_conflict: exhibitors_on_conflict
}

"""aggregate avg on columns"""
type exhibitors_avg_fields {
   event_id: Float
   order: Float
}

"""
order by avg() on columns of table "exhibitors"
"""
input exhibitors_avg_order_by {
  event_id: order_by
  order: order_by
}

"""
Boolean expression to filter rows from the table "exhibitors". All fields are combined with a logical 'AND'.
"""
input exhibitors_bool_exp {
  _and: [exhibitors_bool_exp! ]
  _not: exhibitors_bool_exp
  _or: [exhibitors_bool_exp! ]
  archived: Boolean_comparison_exp
  booth_description: String_comparison_exp
  booth_name: String_comparison_exp
  colour: String_comparison_exp
  created_at: timestamptz_comparison_exp
  cta_label: String_comparison_exp
  cta_url: String_comparison_exp
  email: String_comparison_exp
  event_id: Int_comparison_exp
  exhibitor_contacts: exhibitor_contacts_bool_exp
  exhibitor_contacts_aggregate: exhibitor_contacts_aggregate_bool_exp
  exhibitor_page_views: exhibitor_page_views_bool_exp
  exhibitor_page_views_aggregate: exhibitor_page_views_aggregate_bool_exp
  exhibitor_representatives: exhibitor_representatives_bool_exp
  exhibitor_representatives_aggregate: exhibitor_representatives_aggregate_bool_exp
  exhibitor_resources: exhibitor_resources_bool_exp
  exhibitor_resources_aggregate: exhibitor_resources_aggregate_bool_exp
  exhibitors_tags: exhibitors_tags_bool_exp
  exhibitors_tags_aggregate: exhibitors_tags_aggregate_bool_exp
  facebook: String_comparison_exp
  hide_booth: Boolean_comparison_exp
  id: uuid_comparison_exp
  instagram: String_comparison_exp
  linked_in: String_comparison_exp
  logo: String_comparison_exp
  logo_header: String_comparison_exp
  name: String_comparison_exp
  offer_button: String_comparison_exp
  offer_title: String_comparison_exp
  order: Int_comparison_exp
  profile: String_comparison_exp
  size: exhibitor_sizes_enum_comparison_exp
  status: exhibitor_statuses_enum_comparison_exp
  twitter: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  user: users_bool_exp
  user_aggregate: users_aggregate_bool_exp
  video: String_comparison_exp
  website: String_comparison_exp
}

"""
unique or primary key constraints on table "exhibitors"
"""
enum exhibitors_constraint {
  """
  unique or primary key constraint on columns "id"
  """
exhibitors_pkey
}

"""
input type for incrementing numeric columns in table "exhibitors"
"""
input exhibitors_inc_input {
  event_id: Int
  order: Int
}

"""
input type for inserting data into table "exhibitors"
"""
input exhibitors_insert_input {
  archived: Boolean! 
  booth_description: String! 
  booth_name: String! 
  colour: String
  created_at: timestamptz! 
  cta_label: String! 
  cta_url: String! 
  email: String! 
  event_id: Int! 
  exhibitor_contacts: exhibitor_contacts_arr_rel_insert_input
  exhibitor_page_views: exhibitor_page_views_arr_rel_insert_input
  exhibitor_representatives: exhibitor_representatives_arr_rel_insert_input
  exhibitor_resources: exhibitor_resources_arr_rel_insert_input
  exhibitors_tags: exhibitors_tags_arr_rel_insert_input
  facebook: String! 
  hide_booth: Boolean! 
  id: uuid! 
  instagram: String! 
  linked_in: String! 
  logo: String
  logo_header: String
  name: String! 
  offer_button: String! 
  offer_title: String! 
  order: Int! 
  profile: String
  size: exhibitor_sizes_enum! 
  status: exhibitor_statuses_enum! 
  twitter: String! 
  updated_at: timestamptz! 
  user: users_arr_rel_insert_input
  video: String! 
  website: String! 
}

"""aggregate max on columns"""
type exhibitors_max_fields {
   booth_description: String
   booth_name: String
   colour: String
   created_at: timestamptz
   cta_label: String
   cta_url: String
   email: String
   event_id: Int
   facebook: String
   id: uuid
   instagram: String
   linked_in: String
   logo: String
   logo_header: String
   name: String
   offer_button: String
   offer_title: String
   order: Int
   profile: String
   twitter: String
   updated_at: timestamptz
   video: String
   website: String
}

"""
order by max() on columns of table "exhibitors"
"""
input exhibitors_max_order_by {
  booth_description: order_by
  booth_name: order_by
  colour: order_by
  created_at: order_by
  cta_label: order_by
  cta_url: order_by
  email: order_by
  event_id: order_by
  facebook: order_by
  id: order_by
  instagram: order_by
  linked_in: order_by
  logo: order_by
  logo_header: order_by
  name: order_by
  offer_button: order_by
  offer_title: order_by
  order: order_by
  profile: order_by
  twitter: order_by
  updated_at: order_by
  video: order_by
  website: order_by
}

"""aggregate min on columns"""
type exhibitors_min_fields {
   booth_description: String
   booth_name: String
   colour: String
   created_at: timestamptz
   cta_label: String
   cta_url: String
   email: String
   event_id: Int
   facebook: String
   id: uuid
   instagram: String
   linked_in: String
   logo: String
   logo_header: String
   name: String
   offer_button: String
   offer_title: String
   order: Int
   profile: String
   twitter: String
   updated_at: timestamptz
   video: String
   website: String
}

"""
order by min() on columns of table "exhibitors"
"""
input exhibitors_min_order_by {
  booth_description: order_by
  booth_name: order_by
  colour: order_by
  created_at: order_by
  cta_label: order_by
  cta_url: order_by
  email: order_by
  event_id: order_by
  facebook: order_by
  id: order_by
  instagram: order_by
  linked_in: order_by
  logo: order_by
  logo_header: order_by
  name: order_by
  offer_button: order_by
  offer_title: order_by
  order: order_by
  profile: order_by
  twitter: order_by
  updated_at: order_by
  video: order_by
  website: order_by
}

"""
response of any mutation on the table "exhibitors"
"""
type exhibitors_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [exhibitors! ]! 
}

"""
input type for inserting object relation for remote table "exhibitors"
"""
input exhibitors_obj_rel_insert_input {
  data: exhibitors_insert_input! 
  """upsert condition"""
on_conflict: exhibitors_on_conflict
}

"""
on_conflict condition type for table "exhibitors"
"""
input exhibitors_on_conflict {
  constraint: exhibitors_constraint! 
  update_columns: [exhibitors_update_column! ]! 
  where: exhibitors_bool_exp
}

"""Ordering options when selecting data from "exhibitors"."""
input exhibitors_order_by {
  archived: order_by
  booth_description: order_by
  booth_name: order_by
  colour: order_by
  created_at: order_by
  cta_label: order_by
  cta_url: order_by
  email: order_by
  event_id: order_by
  exhibitor_contacts_aggregate: exhibitor_contacts_aggregate_order_by
  exhibitor_page_views_aggregate: exhibitor_page_views_aggregate_order_by
  exhibitor_representatives_aggregate: exhibitor_representatives_aggregate_order_by
  exhibitor_resources_aggregate: exhibitor_resources_aggregate_order_by
  exhibitors_tags_aggregate: exhibitors_tags_aggregate_order_by
  facebook: order_by
  hide_booth: order_by
  id: order_by
  instagram: order_by
  linked_in: order_by
  logo: order_by
  logo_header: order_by
  name: order_by
  offer_button: order_by
  offer_title: order_by
  order: order_by
  profile: order_by
  size: order_by
  status: order_by
  twitter: order_by
  updated_at: order_by
  user_aggregate: users_aggregate_order_by
  video: order_by
  website: order_by
}

"""primary key columns input for table: exhibitors"""
input exhibitors_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "exhibitors"
"""
enum exhibitors_select_column {
  """column name"""
archived
  """column name"""
booth_description
  """column name"""
booth_name
  """column name"""
colour
  """column name"""
created_at
  """column name"""
cta_label
  """column name"""
cta_url
  """column name"""
email
  """column name"""
event_id
  """column name"""
facebook
  """column name"""
hide_booth
  """column name"""
id
  """column name"""
instagram
  """column name"""
linked_in
  """column name"""
logo
  """column name"""
logo_header
  """column name"""
name
  """column name"""
offer_button
  """column name"""
offer_title
  """column name"""
order
  """column name"""
profile
  """column name"""
size
  """column name"""
status
  """column name"""
twitter
  """column name"""
updated_at
  """column name"""
video
  """column name"""
website
}

"""
select "exhibitors_aggregate_bool_exp_bool_and_arguments_columns" columns of table "exhibitors"
"""
enum exhibitors_select_column_exhibitors_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
archived
  """column name"""
hide_booth
}

"""
select "exhibitors_aggregate_bool_exp_bool_or_arguments_columns" columns of table "exhibitors"
"""
enum exhibitors_select_column_exhibitors_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
archived
  """column name"""
hide_booth
}

"""
input type for updating data in table "exhibitors"
"""
input exhibitors_set_input {
  archived: Boolean
  booth_description: String
  booth_name: String
  colour: String
  created_at: timestamptz
  cta_label: String
  cta_url: String
  email: String
  event_id: Int
  facebook: String
  hide_booth: Boolean
  id: uuid
  instagram: String
  linked_in: String
  logo: String
  logo_header: String
  name: String
  offer_button: String
  offer_title: String
  order: Int
  profile: String
  size: exhibitor_sizes_enum
  status: exhibitor_statuses_enum
  twitter: String
  updated_at: timestamptz
  video: String
  website: String
}

"""aggregate stddev on columns"""
type exhibitors_stddev_fields {
   event_id: Float
   order: Float
}

"""
order by stddev() on columns of table "exhibitors"
"""
input exhibitors_stddev_order_by {
  event_id: order_by
  order: order_by
}

"""aggregate stddev_pop on columns"""
type exhibitors_stddev_pop_fields {
   event_id: Float
   order: Float
}

"""
order by stddev_pop() on columns of table "exhibitors"
"""
input exhibitors_stddev_pop_order_by {
  event_id: order_by
  order: order_by
}

"""aggregate stddev_samp on columns"""
type exhibitors_stddev_samp_fields {
   event_id: Float
   order: Float
}

"""
order by stddev_samp() on columns of table "exhibitors"
"""
input exhibitors_stddev_samp_order_by {
  event_id: order_by
  order: order_by
}

"""
Streaming cursor of the table "exhibitors"
"""
input exhibitors_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: exhibitors_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input exhibitors_stream_cursor_value_input {
  archived: Boolean
  booth_description: String
  booth_name: String
  colour: String
  created_at: timestamptz
  cta_label: String
  cta_url: String
  email: String
  event_id: Int
  facebook: String
  hide_booth: Boolean
  id: uuid
  instagram: String
  linked_in: String
  logo: String
  logo_header: String
  name: String
  offer_button: String
  offer_title: String
  order: Int
  profile: String
  size: exhibitor_sizes_enum
  status: exhibitor_statuses_enum
  twitter: String
  updated_at: timestamptz
  video: String
  website: String
}

"""aggregate sum on columns"""
type exhibitors_sum_fields {
   event_id: Int
   order: Int
}

"""
order by sum() on columns of table "exhibitors"
"""
input exhibitors_sum_order_by {
  event_id: order_by
  order: order_by
}

"""Exhibitor tags linking table"""
type exhibitors_tags {
  """An object relationship"""
 exhibitor: exhibitors! 
   exhibitor_id: uuid! 
  """An object relationship"""
 exhibitor_tag: exhibitor_tags! 
   exhibitor_tag_id: uuid! 
   id: uuid! 
}

"""
aggregated selection of "exhibitors_tags"
"""
type exhibitors_tags_aggregate {
   aggregate: exhibitors_tags_aggregate_fields
   nodes: [exhibitors_tags! ]! 
}

input exhibitors_tags_aggregate_bool_exp {
  count: exhibitors_tags_aggregate_bool_exp_count
}

input exhibitors_tags_aggregate_bool_exp_count {
  arguments: [exhibitors_tags_select_column! ]
  distinct: Boolean
  filter: exhibitors_tags_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "exhibitors_tags"
"""
type exhibitors_tags_aggregate_fields {
   count(columns: [exhibitors_tags_select_column! ], distinct: Boolean): Int! 
   max: exhibitors_tags_max_fields
   min: exhibitors_tags_min_fields
}

"""
order by aggregate values of table "exhibitors_tags"
"""
input exhibitors_tags_aggregate_order_by {
  count: order_by
  max: exhibitors_tags_max_order_by
  min: exhibitors_tags_min_order_by
}

"""
input type for inserting array relation for remote table "exhibitors_tags"
"""
input exhibitors_tags_arr_rel_insert_input {
  data: [exhibitors_tags_insert_input! ]! 
  """upsert condition"""
on_conflict: exhibitors_tags_on_conflict
}

"""
Boolean expression to filter rows from the table "exhibitors_tags". All fields are combined with a logical 'AND'.
"""
input exhibitors_tags_bool_exp {
  _and: [exhibitors_tags_bool_exp! ]
  _not: exhibitors_tags_bool_exp
  _or: [exhibitors_tags_bool_exp! ]
  exhibitor: exhibitors_bool_exp
  exhibitor_id: uuid_comparison_exp
  exhibitor_tag: exhibitor_tags_bool_exp
  exhibitor_tag_id: uuid_comparison_exp
  id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "exhibitors_tags"
"""
enum exhibitors_tags_constraint {
  """
  unique or primary key constraint on columns "exhibitor_tag_id", "exhibitor_id"
  """
exhibitors_tags_exhibitor_id_exhibitor_tag_id_key
  """
  unique or primary key constraint on columns "id"
  """
exhibitors_tags_pkey
}

"""
input type for inserting data into table "exhibitors_tags"
"""
input exhibitors_tags_insert_input {
  exhibitor: exhibitors_obj_rel_insert_input
  exhibitor_id: uuid! 
  exhibitor_tag: exhibitor_tags_obj_rel_insert_input
  exhibitor_tag_id: uuid! 
  id: uuid! 
}

"""aggregate max on columns"""
type exhibitors_tags_max_fields {
   exhibitor_id: uuid
   exhibitor_tag_id: uuid
   id: uuid
}

"""
order by max() on columns of table "exhibitors_tags"
"""
input exhibitors_tags_max_order_by {
  exhibitor_id: order_by
  exhibitor_tag_id: order_by
  id: order_by
}

"""aggregate min on columns"""
type exhibitors_tags_min_fields {
   exhibitor_id: uuid
   exhibitor_tag_id: uuid
   id: uuid
}

"""
order by min() on columns of table "exhibitors_tags"
"""
input exhibitors_tags_min_order_by {
  exhibitor_id: order_by
  exhibitor_tag_id: order_by
  id: order_by
}

"""
response of any mutation on the table "exhibitors_tags"
"""
type exhibitors_tags_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [exhibitors_tags! ]! 
}

"""
on_conflict condition type for table "exhibitors_tags"
"""
input exhibitors_tags_on_conflict {
  constraint: exhibitors_tags_constraint! 
  update_columns: [exhibitors_tags_update_column! ]! 
  where: exhibitors_tags_bool_exp
}

"""Ordering options when selecting data from "exhibitors_tags"."""
input exhibitors_tags_order_by {
  exhibitor: exhibitors_order_by
  exhibitor_id: order_by
  exhibitor_tag: exhibitor_tags_order_by
  exhibitor_tag_id: order_by
  id: order_by
}

"""primary key columns input for table: exhibitors_tags"""
input exhibitors_tags_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "exhibitors_tags"
"""
enum exhibitors_tags_select_column {
  """column name"""
exhibitor_id
  """column name"""
exhibitor_tag_id
  """column name"""
id
}

"""
input type for updating data in table "exhibitors_tags"
"""
input exhibitors_tags_set_input {
  exhibitor_id: uuid
  exhibitor_tag_id: uuid
  id: uuid
}

"""
Streaming cursor of the table "exhibitors_tags"
"""
input exhibitors_tags_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: exhibitors_tags_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input exhibitors_tags_stream_cursor_value_input {
  exhibitor_id: uuid
  exhibitor_tag_id: uuid
  id: uuid
}

"""
update columns of table "exhibitors_tags"
"""
enum exhibitors_tags_update_column {
  """column name"""
exhibitor_id
  """column name"""
exhibitor_tag_id
  """column name"""
id
}

input exhibitors_tags_updates {
  """sets the columns of the filtered rows to the given values"""
_set: exhibitors_tags_set_input
  where: exhibitors_tags_bool_exp! 
}

"""
update columns of table "exhibitors"
"""
enum exhibitors_update_column {
  """column name"""
archived
  """column name"""
booth_description
  """column name"""
booth_name
  """column name"""
colour
  """column name"""
created_at
  """column name"""
cta_label
  """column name"""
cta_url
  """column name"""
email
  """column name"""
event_id
  """column name"""
facebook
  """column name"""
hide_booth
  """column name"""
id
  """column name"""
instagram
  """column name"""
linked_in
  """column name"""
logo
  """column name"""
logo_header
  """column name"""
name
  """column name"""
offer_button
  """column name"""
offer_title
  """column name"""
order
  """column name"""
profile
  """column name"""
size
  """column name"""
status
  """column name"""
twitter
  """column name"""
updated_at
  """column name"""
video
  """column name"""
website
}

input exhibitors_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: exhibitors_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: exhibitors_set_input
  where: exhibitors_bool_exp! 
}

"""aggregate var_pop on columns"""
type exhibitors_var_pop_fields {
   event_id: Float
   order: Float
}

"""
order by var_pop() on columns of table "exhibitors"
"""
input exhibitors_var_pop_order_by {
  event_id: order_by
  order: order_by
}

"""aggregate var_samp on columns"""
type exhibitors_var_samp_fields {
   event_id: Float
   order: Float
}

"""
order by var_samp() on columns of table "exhibitors"
"""
input exhibitors_var_samp_order_by {
  event_id: order_by
  order: order_by
}

"""aggregate variance on columns"""
type exhibitors_variance_fields {
   event_id: Float
   order: Float
}

"""
order by variance() on columns of table "exhibitors"
"""
input exhibitors_variance_order_by {
  event_id: order_by
  order: order_by
}

"""
columns and relationships of "export_progresses"
"""
type export_progresses {
   complete: Boolean! 
   created_at: timestamptz! 
   failed: Boolean! 
   id: uuid! 
   progress_pct: numeric! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "export_progresses"
"""
type export_progresses_aggregate {
   aggregate: export_progresses_aggregate_fields
   nodes: [export_progresses! ]! 
}

"""
aggregate fields of "export_progresses"
"""
type export_progresses_aggregate_fields {
   avg: export_progresses_avg_fields
   count(columns: [export_progresses_select_column! ], distinct: Boolean): Int! 
   max: export_progresses_max_fields
   min: export_progresses_min_fields
   stddev: export_progresses_stddev_fields
   stddev_pop: export_progresses_stddev_pop_fields
   stddev_samp: export_progresses_stddev_samp_fields
   sum: export_progresses_sum_fields
   var_pop: export_progresses_var_pop_fields
   var_samp: export_progresses_var_samp_fields
   variance: export_progresses_variance_fields
}

"""aggregate avg on columns"""
type export_progresses_avg_fields {
   progress_pct: Float
}

"""
Boolean expression to filter rows from the table "export_progresses". All fields are combined with a logical 'AND'.
"""
input export_progresses_bool_exp {
  _and: [export_progresses_bool_exp! ]
  _not: export_progresses_bool_exp
  _or: [export_progresses_bool_exp! ]
  complete: Boolean_comparison_exp
  created_at: timestamptz_comparison_exp
  failed: Boolean_comparison_exp
  id: uuid_comparison_exp
  progress_pct: numeric_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "export_progresses"
"""
enum export_progresses_constraint {
  """
  unique or primary key constraint on columns "id"
  """
export_progresses_pkey
}

"""
input type for incrementing numeric columns in table "export_progresses"
"""
input export_progresses_inc_input {
  progress_pct: numeric
}

"""
input type for inserting data into table "export_progresses"
"""
input export_progresses_insert_input {
  complete: Boolean! 
  created_at: timestamptz! 
  failed: Boolean! 
  id: uuid! 
  progress_pct: numeric! 
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type export_progresses_max_fields {
   created_at: timestamptz
   id: uuid
   progress_pct: numeric
   updated_at: timestamptz
}

"""aggregate min on columns"""
type export_progresses_min_fields {
   created_at: timestamptz
   id: uuid
   progress_pct: numeric
   updated_at: timestamptz
}

"""
response of any mutation on the table "export_progresses"
"""
type export_progresses_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [export_progresses! ]! 
}

"""
on_conflict condition type for table "export_progresses"
"""
input export_progresses_on_conflict {
  constraint: export_progresses_constraint! 
  update_columns: [export_progresses_update_column! ]! 
  where: export_progresses_bool_exp
}

"""Ordering options when selecting data from "export_progresses"."""
input export_progresses_order_by {
  complete: order_by
  created_at: order_by
  failed: order_by
  id: order_by
  progress_pct: order_by
  updated_at: order_by
}

"""primary key columns input for table: export_progresses"""
input export_progresses_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "export_progresses"
"""
enum export_progresses_select_column {
  """column name"""
complete
  """column name"""
created_at
  """column name"""
failed
  """column name"""
id
  """column name"""
progress_pct
  """column name"""
updated_at
}

"""
input type for updating data in table "export_progresses"
"""
input export_progresses_set_input {
  complete: Boolean
  created_at: timestamptz
  failed: Boolean
  id: uuid
  progress_pct: numeric
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type export_progresses_stddev_fields {
   progress_pct: Float
}

"""aggregate stddev_pop on columns"""
type export_progresses_stddev_pop_fields {
   progress_pct: Float
}

"""aggregate stddev_samp on columns"""
type export_progresses_stddev_samp_fields {
   progress_pct: Float
}

"""
Streaming cursor of the table "export_progresses"
"""
input export_progresses_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: export_progresses_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input export_progresses_stream_cursor_value_input {
  complete: Boolean
  created_at: timestamptz
  failed: Boolean
  id: uuid
  progress_pct: numeric
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type export_progresses_sum_fields {
   progress_pct: numeric
}

"""
update columns of table "export_progresses"
"""
enum export_progresses_update_column {
  """column name"""
complete
  """column name"""
created_at
  """column name"""
failed
  """column name"""
id
  """column name"""
progress_pct
  """column name"""
updated_at
}

input export_progresses_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: export_progresses_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: export_progresses_set_input
  where: export_progresses_bool_exp! 
}

"""aggregate var_pop on columns"""
type export_progresses_var_pop_fields {
   progress_pct: Float
}

"""aggregate var_samp on columns"""
type export_progresses_var_samp_fields {
   progress_pct: Float
}

"""aggregate variance on columns"""
type export_progresses_variance_fields {
   progress_pct: Float
}

scalar feature_status 

"""
Boolean expression to compare columns of type "feature_status". All fields are combined with logical 'AND'.
"""
input feature_status_comparison_exp {
  _eq: feature_status
  _gt: feature_status
  _gte: feature_status
  _in: [feature_status! ]
  _is_null: Boolean
  _lt: feature_status
  _lte: feature_status
  _neq: feature_status
  _nin: [feature_status! ]
}

scalar field_status 

"""
Boolean expression to compare columns of type "field_status". All fields are combined with logical 'AND'.
"""
input field_status_comparison_exp {
  _eq: field_status
  _gt: field_status
  _gte: field_status
  _in: [field_status! ]
  _is_null: Boolean
  _lt: field_status
  _lte: field_status
  _neq: field_status
  _nin: [field_status! ]
}

"""
columns and relationships of "gql_api_keys"
"""
type gql_api_keys {
   api_key: uuid! 
   created_at: timestamptz! 
   updated_at: timestamptz
   user_id: Int! 
}

"""
aggregated selection of "gql_api_keys"
"""
type gql_api_keys_aggregate {
   aggregate: gql_api_keys_aggregate_fields
   nodes: [gql_api_keys! ]! 
}

"""
aggregate fields of "gql_api_keys"
"""
type gql_api_keys_aggregate_fields {
   avg: gql_api_keys_avg_fields
   count(columns: [gql_api_keys_select_column! ], distinct: Boolean): Int! 
   max: gql_api_keys_max_fields
   min: gql_api_keys_min_fields
   stddev: gql_api_keys_stddev_fields
   stddev_pop: gql_api_keys_stddev_pop_fields
   stddev_samp: gql_api_keys_stddev_samp_fields
   sum: gql_api_keys_sum_fields
   var_pop: gql_api_keys_var_pop_fields
   var_samp: gql_api_keys_var_samp_fields
   variance: gql_api_keys_variance_fields
}

"""aggregate avg on columns"""
type gql_api_keys_avg_fields {
   user_id: Float
}

"""
Boolean expression to filter rows from the table "gql_api_keys". All fields are combined with a logical 'AND'.
"""
input gql_api_keys_bool_exp {
  _and: [gql_api_keys_bool_exp! ]
  _not: gql_api_keys_bool_exp
  _or: [gql_api_keys_bool_exp! ]
  api_key: uuid_comparison_exp
  created_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "gql_api_keys"
"""
enum gql_api_keys_constraint {
  """
  unique or primary key constraint on columns "api_key"
  """
gql_api_keys_pkey
  """
  unique or primary key constraint on columns "user_id"
  """
gql_api_keys_user_id_key
}

"""
input type for incrementing numeric columns in table "gql_api_keys"
"""
input gql_api_keys_inc_input {
  user_id: Int
}

"""
input type for inserting data into table "gql_api_keys"
"""
input gql_api_keys_insert_input {
  api_key: uuid! 
  created_at: timestamptz! 
  updated_at: timestamptz! 
  user_id: Int! 
}

"""aggregate max on columns"""
type gql_api_keys_max_fields {
   api_key: uuid
   created_at: timestamptz
   updated_at: timestamptz
   user_id: Int
}

"""aggregate min on columns"""
type gql_api_keys_min_fields {
   api_key: uuid
   created_at: timestamptz
   updated_at: timestamptz
   user_id: Int
}

"""
response of any mutation on the table "gql_api_keys"
"""
type gql_api_keys_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [gql_api_keys! ]! 
}

"""
on_conflict condition type for table "gql_api_keys"
"""
input gql_api_keys_on_conflict {
  constraint: gql_api_keys_constraint! 
  update_columns: [gql_api_keys_update_column! ]! 
  where: gql_api_keys_bool_exp
}

"""Ordering options when selecting data from "gql_api_keys"."""
input gql_api_keys_order_by {
  api_key: order_by
  created_at: order_by
  updated_at: order_by
  user_id: order_by
}

"""primary key columns input for table: gql_api_keys"""
input gql_api_keys_pk_columns_input {
  api_key: uuid! 
}

"""
select columns of table "gql_api_keys"
"""
enum gql_api_keys_select_column {
  """column name"""
api_key
  """column name"""
created_at
  """column name"""
updated_at
  """column name"""
user_id
}

"""
input type for updating data in table "gql_api_keys"
"""
input gql_api_keys_set_input {
  api_key: uuid
  created_at: timestamptz
  updated_at: timestamptz
  user_id: Int
}

"""aggregate stddev on columns"""
type gql_api_keys_stddev_fields {
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type gql_api_keys_stddev_pop_fields {
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type gql_api_keys_stddev_samp_fields {
   user_id: Float
}

"""
Streaming cursor of the table "gql_api_keys"
"""
input gql_api_keys_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: gql_api_keys_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input gql_api_keys_stream_cursor_value_input {
  api_key: uuid
  created_at: timestamptz
  updated_at: timestamptz
  user_id: Int
}

"""aggregate sum on columns"""
type gql_api_keys_sum_fields {
   user_id: Int
}

"""
update columns of table "gql_api_keys"
"""
enum gql_api_keys_update_column {
  """column name"""
api_key
  """column name"""
created_at
  """column name"""
updated_at
  """column name"""
user_id
}

input gql_api_keys_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: gql_api_keys_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: gql_api_keys_set_input
  where: gql_api_keys_bool_exp! 
}

"""aggregate var_pop on columns"""
type gql_api_keys_var_pop_fields {
   user_id: Float
}

"""aggregate var_samp on columns"""
type gql_api_keys_var_samp_fields {
   user_id: Float
}

"""aggregate variance on columns"""
type gql_api_keys_variance_fields {
   user_id: Float
}

scalar json 

"""
Boolean expression to compare columns of type "json". All fields are combined with logical 'AND'.
"""
input json_comparison_exp {
  _eq: json
  _gt: json
  _gte: json
  _in: [json! ]
  _is_null: Boolean
  _lt: json
  _lte: json
  _neq: json
  _nin: [json! ]
}

scalar jsonb 

input jsonb_cast_exp {
  String: String_comparison_exp
}

"""
Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'.
"""
input jsonb_comparison_exp {
  _cast: jsonb_cast_exp
  """is the column contained in the given json value"""
_contained_in: jsonb
  """does the column contain the given json value at the top level"""
_contains: jsonb
  _eq: jsonb
  _gt: jsonb
  _gte: jsonb
  """does the string exist as a top-level key in the column"""
_has_key: String
  """do all of these strings exist as top-level keys in the column"""
_has_keys_all: [String! ]
  """do any of these strings exist as top-level keys in the column"""
_has_keys_any: [String! ]
  _in: [jsonb! ]
  _is_null: Boolean
  _lt: jsonb
  _lte: jsonb
  _neq: jsonb
  _nin: [jsonb! ]
}

scalar logo_type 

"""
Boolean expression to compare columns of type "logo_type". All fields are combined with logical 'AND'.
"""
input logo_type_comparison_exp {
  _eq: logo_type
  _gt: logo_type
  _gte: logo_type
  _in: [logo_type! ]
  _is_null: Boolean
  _lt: logo_type
  _lte: logo_type
  _neq: logo_type
  _nin: [logo_type! ]
}

"""mutation root"""
type mutation_root {
   change_submission_owner(input: ChangeSubmissionOwner! ): ChangedSubmissionOwner! 
  """
  delete data from the table: "affiliation_versions"
  """
 delete_affiliation_versions("""filter the rows which have to be deleted"""
where: affiliation_versions_bool_exp! ): affiliation_versions_mutation_response
  """
  delete single row from the table: "affiliation_versions"
  """
 delete_affiliation_versions_by_pk(id: bigint! ): affiliation_versions
  """
  delete data from the table: "affiliations"
  """
 delete_affiliations("""filter the rows which have to be deleted"""
where: affiliations_bool_exp! ): affiliations_mutation_response
  """
  delete single row from the table: "affiliations"
  """
 delete_affiliations_by_pk(id: Int! ): affiliations
  """
  delete data from the table: "allowed_submitters"
  """
 delete_allowed_submitters("""filter the rows which have to be deleted"""
where: allowed_submitters_bool_exp! ): allowed_submitters_mutation_response
  """
  delete single row from the table: "allowed_submitters"
  """
 delete_allowed_submitters_by_pk(id: Int! ): allowed_submitters
  """
  delete data from the table: "api_keys"
  """
 delete_api_keys("""filter the rows which have to be deleted"""
where: api_keys_bool_exp! ): api_keys_mutation_response
  """
  delete data from the table: "author_field_response_versions"
  """
 delete_author_field_response_versions("""filter the rows which have to be deleted"""
where: author_field_response_versions_bool_exp! ): author_field_response_versions_mutation_response
  """
  delete single row from the table: "author_field_response_versions"
  """
 delete_author_field_response_versions_by_pk(id: bigint! ): author_field_response_versions
  """
  delete data from the table: "author_field_responses"
  """
 delete_author_field_responses("""filter the rows which have to be deleted"""
where: author_field_responses_bool_exp! ): author_field_responses_mutation_response
  """
  delete single row from the table: "author_field_responses"
  """
 delete_author_field_responses_by_pk(id: Int! ): author_field_responses
  """
  delete data from the table: "author_fields"
  """
 delete_author_fields("""filter the rows which have to be deleted"""
where: author_fields_bool_exp! ): author_fields_mutation_response
  """
  delete single row from the table: "author_fields"
  """
 delete_author_fields_by_pk(id: Int! ): author_fields
  """
  delete data from the table: "author_versions"
  """
 delete_author_versions("""filter the rows which have to be deleted"""
where: author_versions_bool_exp! ): author_versions_mutation_response
  """
  delete single row from the table: "author_versions"
  """
 delete_author_versions_by_pk(id: bigint! ): author_versions
  """
  delete data from the table: "authors"
  """
 delete_authors("""filter the rows which have to be deleted"""
where: authors_bool_exp! ): authors_mutation_response
  """
  delete single row from the table: "authors"
  """
 delete_authors_by_pk(id: Int! ): authors
  """
  delete data from the table: "browser_errors"
  """
 delete_browser_errors("""filter the rows which have to be deleted"""
where: browser_errors_bool_exp! ): browser_errors_mutation_response
  """
  delete single row from the table: "browser_errors"
  """
 delete_browser_errors_by_pk(id: Int! ): browser_errors
  """
  delete data from the table: "categories"
  """
 delete_categories("""filter the rows which have to be deleted"""
where: categories_bool_exp! ): categories_mutation_response
  """
  delete data from the table: "clients"
  """
 delete_clients("""filter the rows which have to be deleted"""
where: clients_bool_exp! ): clients_mutation_response
  """
  delete single row from the table: "clients"
  """
 delete_clients_by_pk("""A unique identifier for each client"""
client_id: Int! ): clients
  """
  delete data from the table: "clients_permissions"
  """
 delete_clients_permissions("""filter the rows which have to be deleted"""
where: clients_permissions_bool_exp! ): clients_permissions_mutation_response
  """
  delete data from the table: "combined_word_limits"
  """
 delete_combined_word_limits("""filter the rows which have to be deleted"""
where: combined_word_limits_bool_exp! ): combined_word_limits_mutation_response
  """
  delete single row from the table: "combined_word_limits"
  """
 delete_combined_word_limits_by_pk(combined_word_limit_id: Int! ): combined_word_limits
  """
  delete data from the table: "custom_logs"
  """
 delete_custom_logs("""filter the rows which have to be deleted"""
where: custom_logs_bool_exp! ): custom_logs_mutation_response
  """
  delete single row from the table: "custom_logs"
  """
 delete_custom_logs_by_pk(custom_log_id: Int! ): custom_logs
  """
  delete data from the table: "decision_question_responses"
  """
 delete_decision_question_responses("""filter the rows which have to be deleted"""
where: decision_question_responses_bool_exp! ): decision_question_responses_mutation_response
  """
  delete single row from the table: "decision_question_responses"
  """
 delete_decision_question_responses_by_pk(decision_question_response_id: Int! ): decision_question_responses
  """
  delete data from the table: "decision_questions"
  """
 delete_decision_questions("""filter the rows which have to be deleted"""
where: decision_questions_bool_exp! ): decision_questions_mutation_response
  """
  delete single row from the table: "decision_questions"
  """
 delete_decision_questions_by_pk(decision_question_id: Int! ): decision_questions
  """
  delete data from the table: "decisions"
  """
 delete_decisions("""filter the rows which have to be deleted"""
where: decisions_bool_exp! ): decisions_mutation_response
  """
  delete single row from the table: "decisions"
  """
 delete_decisions_by_pk(decision_id: Int! ): decisions
  """
  delete data from the table: "default_questions"
  """
 delete_default_questions("""filter the rows which have to be deleted"""
where: default_questions_bool_exp! ): default_questions_mutation_response
  """
  delete single row from the table: "default_questions"
  """
 delete_default_questions_by_pk(question_id: Int! ): default_questions
  """
  delete data from the table: "delreg_question_responses"
  """
 delete_delreg_question_responses("""filter the rows which have to be deleted"""
where: delreg_question_responses_bool_exp! ): delreg_question_responses_mutation_response
  """
  delete single row from the table: "delreg_question_responses"
  """
 delete_delreg_question_responses_by_pk(id: Int! ): delreg_question_responses
  """
  delete data from the table: "delreg_question_responses_multi"
  """
 delete_delreg_question_responses_multi("""filter the rows which have to be deleted"""
where: delreg_question_responses_multi_bool_exp! ): delreg_question_responses_multi_mutation_response
  """
  delete data from the table: "delreg_questions"
  """
 delete_delreg_questions("""filter the rows which have to be deleted"""
where: delreg_questions_bool_exp! ): delreg_questions_mutation_response
  """
  delete single row from the table: "delreg_questions"
  """
 delete_delreg_questions_by_pk(id: Int! ): delreg_questions
  """
  delete data from the table: "delreg_registrations"
  """
 delete_delreg_registrations("""filter the rows which have to be deleted"""
where: delreg_registrations_bool_exp! ): delreg_registrations_mutation_response
  """
  delete single row from the table: "delreg_registrations"
  """
 delete_delreg_registrations_by_pk(id: Int! ): delreg_registrations
  """
  delete data from the table: "delreg_ticket_headings"
  """
 delete_delreg_ticket_headings("""filter the rows which have to be deleted"""
where: delreg_ticket_headings_bool_exp! ): delreg_ticket_headings_mutation_response
  """
  delete single row from the table: "delreg_ticket_headings"
  """
 delete_delreg_ticket_headings_by_pk(id: Int! ): delreg_ticket_headings
  """
  delete data from the table: "delreg_tickets"
  """
 delete_delreg_tickets("""filter the rows which have to be deleted"""
where: delreg_tickets_bool_exp! ): delreg_tickets_mutation_response
  """
  delete single row from the table: "delreg_tickets"
  """
 delete_delreg_tickets_by_pk(id: Int! ): delreg_tickets
  """
  delete data from the table: "dr_addon_coupons"
  """
 delete_dr_addon_coupons("""filter the rows which have to be deleted"""
where: dr_addon_coupons_bool_exp! ): dr_addon_coupons_mutation_response
  """
  delete single row from the table: "dr_addon_coupons"
  """
 delete_dr_addon_coupons_by_pk(id: uuid! ): dr_addon_coupons
  """
  delete data from the table: "dr_addon_questions"
  """
 delete_dr_addon_questions("""filter the rows which have to be deleted"""
where: dr_addon_questions_bool_exp! ): dr_addon_questions_mutation_response
  """
  delete single row from the table: "dr_addon_questions"
  """
 delete_dr_addon_questions_by_pk(id: uuid! ): dr_addon_questions
  """
  delete data from the table: "dr_addon_tax_rules"
  """
 delete_dr_addon_tax_rules("""filter the rows which have to be deleted"""
where: dr_addon_tax_rules_bool_exp! ): dr_addon_tax_rules_mutation_response
  """
  delete single row from the table: "dr_addon_tax_rules"
  """
 delete_dr_addon_tax_rules_by_pk(id: uuid! ): dr_addon_tax_rules
  """
  delete data from the table: "dr_addons"
  """
 delete_dr_addons("""filter the rows which have to be deleted"""
where: dr_addons_bool_exp! ): dr_addons_mutation_response
  """
  delete single row from the table: "dr_addons"
  """
 delete_dr_addons_by_pk(id: uuid! ): dr_addons
  """
  delete data from the table: "dr_analytics_event_types"
  """
 delete_dr_analytics_event_types("""filter the rows which have to be deleted"""
where: dr_analytics_event_types_bool_exp! ): dr_analytics_event_types_mutation_response
  """
  delete single row from the table: "dr_analytics_event_types"
  """
 delete_dr_analytics_event_types_by_pk(value: String! ): dr_analytics_event_types
  """
  delete data from the table: "dr_analytics_events"
  """
 delete_dr_analytics_events("""filter the rows which have to be deleted"""
where: dr_analytics_events_bool_exp! ): dr_analytics_events_mutation_response
  """
  delete single row from the table: "dr_analytics_events"
  """
 delete_dr_analytics_events_by_pk(id: Int! ): dr_analytics_events
  """
  delete data from the table: "dr_attendee_addon_tax_rules"
  """
 delete_dr_attendee_addon_tax_rules("""filter the rows which have to be deleted"""
where: dr_attendee_addon_tax_rules_bool_exp! ): dr_attendee_addon_tax_rules_mutation_response
  """
  delete single row from the table: "dr_attendee_addon_tax_rules"
  """
 delete_dr_attendee_addon_tax_rules_by_pk(id: uuid! ): dr_attendee_addon_tax_rules
  """
  delete data from the table: "dr_attendee_addons"
  """
 delete_dr_attendee_addons("""filter the rows which have to be deleted"""
where: dr_attendee_addons_bool_exp! ): dr_attendee_addons_mutation_response
  """
  delete single row from the table: "dr_attendee_addons"
  """
 delete_dr_attendee_addons_by_pk(id: uuid! ): dr_attendee_addons
  """
  delete data from the table: "dr_attendee_question_response_options"
  """
 delete_dr_attendee_question_response_options("""filter the rows which have to be deleted"""
where: dr_attendee_question_response_options_bool_exp! ): dr_attendee_question_response_options_mutation_response
  """
  delete single row from the table: "dr_attendee_question_response_options"
  """
 delete_dr_attendee_question_response_options_by_pk(id: uuid! ): dr_attendee_question_response_options
  """
  delete data from the table: "dr_attendee_question_responses"
  """
 delete_dr_attendee_question_responses("""filter the rows which have to be deleted"""
where: dr_attendee_question_responses_bool_exp! ): dr_attendee_question_responses_mutation_response
  """
  delete single row from the table: "dr_attendee_question_responses"
  """
 delete_dr_attendee_question_responses_by_pk(id: uuid! ): dr_attendee_question_responses
  """
  delete data from the table: "dr_attendee_ticket_tax_rules"
  """
 delete_dr_attendee_ticket_tax_rules("""filter the rows which have to be deleted"""
where: dr_attendee_ticket_tax_rules_bool_exp! ): dr_attendee_ticket_tax_rules_mutation_response
  """
  delete single row from the table: "dr_attendee_ticket_tax_rules"
  """
 delete_dr_attendee_ticket_tax_rules_by_pk(id: uuid! ): dr_attendee_ticket_tax_rules
  """
  delete data from the table: "dr_attendee_tickets"
  """
 delete_dr_attendee_tickets("""filter the rows which have to be deleted"""
where: dr_attendee_tickets_bool_exp! ): dr_attendee_tickets_mutation_response
  """
  delete single row from the table: "dr_attendee_tickets"
  """
 delete_dr_attendee_tickets_by_pk(id: uuid! ): dr_attendee_tickets
  """
  delete data from the table: "dr_attendees"
  """
 delete_dr_attendees("""filter the rows which have to be deleted"""
where: dr_attendees_bool_exp! ): dr_attendees_mutation_response
  """
  delete single row from the table: "dr_attendees"
  """
 delete_dr_attendees_by_pk(id: uuid! ): dr_attendees
  """
  delete data from the table: "dr_authorize_webhooks"
  """
 delete_dr_authorize_webhooks("""filter the rows which have to be deleted"""
where: dr_authorize_webhooks_bool_exp! ): dr_authorize_webhooks_mutation_response
  """
  delete single row from the table: "dr_authorize_webhooks"
  """
 delete_dr_authorize_webhooks_by_pk(id: uuid! ): dr_authorize_webhooks
  """
  delete data from the table: "dr_coupon_discount_type"
  """
 delete_dr_coupon_discount_type("""filter the rows which have to be deleted"""
where: dr_coupon_discount_type_bool_exp! ): dr_coupon_discount_type_mutation_response
  """
  delete single row from the table: "dr_coupon_discount_type"
  """
 delete_dr_coupon_discount_type_by_pk(value: String! ): dr_coupon_discount_type
  """
  delete data from the table: "dr_coupons"
  """
 delete_dr_coupons("""filter the rows which have to be deleted"""
where: dr_coupons_bool_exp! ): dr_coupons_mutation_response
  """
  delete single row from the table: "dr_coupons"
  """
 delete_dr_coupons_by_pk(id: uuid! ): dr_coupons
  """
  delete data from the table: "dr_currencies"
  """
 delete_dr_currencies("""filter the rows which have to be deleted"""
where: dr_currencies_bool_exp! ): dr_currencies_mutation_response
  """
  delete single row from the table: "dr_currencies"
  """
 delete_dr_currencies_by_pk(value: String! ): dr_currencies
  """
  delete data from the table: "dr_event_details"
  """
 delete_dr_event_details("""filter the rows which have to be deleted"""
where: dr_event_details_bool_exp! ): dr_event_details_mutation_response
  """
  delete single row from the table: "dr_event_details"
  """
 delete_dr_event_details_by_pk(id: uuid! ): dr_event_details
  """
  delete data from the table: "dr_group_questions"
  """
 delete_dr_group_questions("""filter the rows which have to be deleted"""
where: dr_group_questions_bool_exp! ): dr_group_questions_mutation_response
  """
  delete single row from the table: "dr_group_questions"
  """
 delete_dr_group_questions_by_pk(id: uuid! ): dr_group_questions
  """
  delete data from the table: "dr_invoice_setup"
  """
 delete_dr_invoice_setup("""filter the rows which have to be deleted"""
where: dr_invoice_setup_bool_exp! ): dr_invoice_setup_mutation_response
  """
  delete single row from the table: "dr_invoice_setup"
  """
 delete_dr_invoice_setup_by_pk(id: uuid! ): dr_invoice_setup
  """
  delete data from the table: "dr_line_item_statuses"
  """
 delete_dr_line_item_statuses("""filter the rows which have to be deleted"""
where: dr_line_item_statuses_bool_exp! ): dr_line_item_statuses_mutation_response
  """
  delete single row from the table: "dr_line_item_statuses"
  """
 delete_dr_line_item_statuses_by_pk(value: String! ): dr_line_item_statuses
  """
  delete data from the table: "dr_marketing_campaigns"
  """
 delete_dr_marketing_campaigns("""filter the rows which have to be deleted"""
where: dr_marketing_campaigns_bool_exp! ): dr_marketing_campaigns_mutation_response
  """
  delete single row from the table: "dr_marketing_campaigns"
  """
 delete_dr_marketing_campaigns_by_pk(id: uuid! ): dr_marketing_campaigns
  """
  delete data from the table: "dr_offline_payments_setup"
  """
 delete_dr_offline_payments_setup("""filter the rows which have to be deleted"""
where: dr_offline_payments_setup_bool_exp! ): dr_offline_payments_setup_mutation_response
  """
  delete single row from the table: "dr_offline_payments_setup"
  """
 delete_dr_offline_payments_setup_by_pk(id: uuid! ): dr_offline_payments_setup
  """
  delete data from the table: "dr_order_payment_type"
  """
 delete_dr_order_payment_type("""filter the rows which have to be deleted"""
where: dr_order_payment_type_bool_exp! ): dr_order_payment_type_mutation_response
  """
  delete single row from the table: "dr_order_payment_type"
  """
 delete_dr_order_payment_type_by_pk(value: String! ): dr_order_payment_type
  """
  delete data from the table: "dr_orders"
  """
 delete_dr_orders("""filter the rows which have to be deleted"""
where: dr_orders_bool_exp! ): dr_orders_mutation_response
  """
  delete single row from the table: "dr_orders"
  """
 delete_dr_orders_by_pk(id: uuid! ): dr_orders
  """
  delete data from the table: "dr_paypal_setup"
  """
 delete_dr_paypal_setup("""filter the rows which have to be deleted"""
where: dr_paypal_setup_bool_exp! ): dr_paypal_setup_mutation_response
  """
  delete single row from the table: "dr_paypal_setup"
  """
 delete_dr_paypal_setup_by_pk(id: uuid! ): dr_paypal_setup
  """
  delete data from the table: "dr_question_dependencies"
  """
 delete_dr_question_dependencies("""filter the rows which have to be deleted"""
where: dr_question_dependencies_bool_exp! ): dr_question_dependencies_mutation_response
  """
  delete single row from the table: "dr_question_dependencies"
  """
 delete_dr_question_dependencies_by_pk(id: uuid! ): dr_question_dependencies
  """
  delete data from the table: "dr_question_options"
  """
 delete_dr_question_options("""filter the rows which have to be deleted"""
where: dr_question_options_bool_exp! ): dr_question_options_mutation_response
  """
  delete single row from the table: "dr_question_options"
  """
 delete_dr_question_options_by_pk(id: uuid! ): dr_question_options
  """
  delete data from the table: "dr_question_types"
  """
 delete_dr_question_types("""filter the rows which have to be deleted"""
where: dr_question_types_bool_exp! ): dr_question_types_mutation_response
  """
  delete single row from the table: "dr_question_types"
  """
 delete_dr_question_types_by_pk(value: String! ): dr_question_types
  """
  delete data from the table: "dr_questions"
  """
 delete_dr_questions("""filter the rows which have to be deleted"""
where: dr_questions_bool_exp! ): dr_questions_mutation_response
  """
  delete single row from the table: "dr_questions"
  """
 delete_dr_questions_by_pk(id: uuid! ): dr_questions
  """
  delete data from the table: "dr_service_fee_charges"
  """
 delete_dr_service_fee_charges("""filter the rows which have to be deleted"""
where: dr_service_fee_charges_bool_exp! ): dr_service_fee_charges_mutation_response
  """
  delete single row from the table: "dr_service_fee_charges"
  """
 delete_dr_service_fee_charges_by_pk(id: uuid! ): dr_service_fee_charges
  """
  delete data from the table: "dr_stripe_delayed_payments_customer"
  """
 delete_dr_stripe_delayed_payments_customer("""filter the rows which have to be deleted"""
where: dr_stripe_delayed_payments_customer_bool_exp! ): dr_stripe_delayed_payments_customer_mutation_response
  """
  delete single row from the table: "dr_stripe_delayed_payments_customer"
  """
 delete_dr_stripe_delayed_payments_customer_by_pk(id: uuid! ): dr_stripe_delayed_payments_customer
  """
  delete data from the table: "dr_stripe_webhooks"
  """
 delete_dr_stripe_webhooks("""filter the rows which have to be deleted"""
where: dr_stripe_webhooks_bool_exp! ): dr_stripe_webhooks_mutation_response
  """
  delete single row from the table: "dr_stripe_webhooks"
  """
 delete_dr_stripe_webhooks_by_pk(id: uuid! ): dr_stripe_webhooks
  """
  delete data from the table: "dr_tax_rules"
  """
 delete_dr_tax_rules("""filter the rows which have to be deleted"""
where: dr_tax_rules_bool_exp! ): dr_tax_rules_mutation_response
  """
  delete single row from the table: "dr_tax_rules"
  """
 delete_dr_tax_rules_by_pk(id: uuid! ): dr_tax_rules
  """
  delete data from the table: "dr_ticket_addons"
  """
 delete_dr_ticket_addons("""filter the rows which have to be deleted"""
where: dr_ticket_addons_bool_exp! ): dr_ticket_addons_mutation_response
  """
  delete single row from the table: "dr_ticket_addons"
  """
 delete_dr_ticket_addons_by_pk(id: uuid! ): dr_ticket_addons
  """
  delete data from the table: "dr_ticket_coupons"
  """
 delete_dr_ticket_coupons("""filter the rows which have to be deleted"""
where: dr_ticket_coupons_bool_exp! ): dr_ticket_coupons_mutation_response
  """
  delete single row from the table: "dr_ticket_coupons"
  """
 delete_dr_ticket_coupons_by_pk(id: uuid! ): dr_ticket_coupons
  """
  delete data from the table: "dr_ticket_groups"
  """
 delete_dr_ticket_groups("""filter the rows which have to be deleted"""
where: dr_ticket_groups_bool_exp! ): dr_ticket_groups_mutation_response
  """
  delete single row from the table: "dr_ticket_groups"
  """
 delete_dr_ticket_groups_by_pk(id: Int! ): dr_ticket_groups
  """
  delete data from the table: "dr_ticket_groups_ungrouped_order"
  """
 delete_dr_ticket_groups_ungrouped_order("""filter the rows which have to be deleted"""
where: dr_ticket_groups_ungrouped_order_bool_exp! ): dr_ticket_groups_ungrouped_order_mutation_response
  """
  delete single row from the table: "dr_ticket_groups_ungrouped_order"
  """
 delete_dr_ticket_groups_ungrouped_order_by_pk(id: Int! ): dr_ticket_groups_ungrouped_order
  """
  delete data from the table: "dr_ticket_tax_rules"
  """
 delete_dr_ticket_tax_rules("""filter the rows which have to be deleted"""
where: dr_ticket_tax_rules_bool_exp! ): dr_ticket_tax_rules_mutation_response
  """
  delete single row from the table: "dr_ticket_tax_rules"
  """
 delete_dr_ticket_tax_rules_by_pk(id: uuid! ): dr_ticket_tax_rules
  """
  delete data from the table: "dr_tickets"
  """
 delete_dr_tickets("""filter the rows which have to be deleted"""
where: dr_tickets_bool_exp! ): dr_tickets_mutation_response
  """
  delete single row from the table: "dr_tickets"
  """
 delete_dr_tickets_by_pk(id: uuid! ): dr_tickets
  """
  delete data from the table: "dr_tickets_view"
  """
 delete_dr_tickets_view("""filter the rows which have to be deleted"""
where: dr_tickets_view_bool_exp! ): dr_tickets_view_mutation_response
  """
  delete data from the table: "dr_transaction_types"
  """
 delete_dr_transaction_types("""filter the rows which have to be deleted"""
where: dr_transaction_types_bool_exp! ): dr_transaction_types_mutation_response
  """
  delete single row from the table: "dr_transaction_types"
  """
 delete_dr_transaction_types_by_pk(value: String! ): dr_transaction_types
  """
  delete data from the table: "dr_transactions"
  """
 delete_dr_transactions("""filter the rows which have to be deleted"""
where: dr_transactions_bool_exp! ): dr_transactions_mutation_response
  """
  delete single row from the table: "dr_transactions"
  """
 delete_dr_transactions_by_pk(id: uuid! ): dr_transactions
  """
  delete data from the table: "dr_vat_address"
  """
 delete_dr_vat_address("""filter the rows which have to be deleted"""
where: dr_vat_address_bool_exp! ): dr_vat_address_mutation_response
  """
  delete single row from the table: "dr_vat_address"
  """
 delete_dr_vat_address_by_pk(id: uuid! ): dr_vat_address
  """
  delete data from the table: "errors"
  """
 delete_errors("""filter the rows which have to be deleted"""
where: errors_bool_exp! ): errors_mutation_response
  """
  delete single row from the table: "errors"
  """
 delete_errors_by_pk(error_id: Int! ): errors
  """
  delete data from the table: "event_acceptance_types"
  """
 delete_event_acceptance_types("""filter the rows which have to be deleted"""
where: event_acceptance_types_bool_exp! ): event_acceptance_types_mutation_response
  """
  delete single row from the table: "event_acceptance_types"
  """
 delete_event_acceptance_types_by_pk(event_acceptance_type_id: Int! ): event_acceptance_types
  """
  delete data from the table: "event_emails"
  """
 delete_event_emails("""filter the rows which have to be deleted"""
where: event_emails_bool_exp! ): event_emails_mutation_response
  """
  delete single row from the table: "event_emails"
  """
 delete_event_emails_by_pk(id: Int! ): event_emails
  """
  delete data from the table: "event_payments"
  """
 delete_event_payments("""filter the rows which have to be deleted"""
where: event_payments_bool_exp! ): event_payments_mutation_response
  """
  delete single row from the table: "event_payments"
  """
 delete_event_payments_by_pk(id: Int! ): event_payments
  """
  delete data from the table: "event_program_menu_sponsors"
  """
 delete_event_program_menu_sponsors("""filter the rows which have to be deleted"""
where: event_program_menu_sponsors_bool_exp! ): event_program_menu_sponsors_mutation_response
  """
  delete data from the table: "event_suspicions"
  """
 delete_event_suspicions("""filter the rows which have to be deleted"""
where: event_suspicions_bool_exp! ): event_suspicions_mutation_response
  """
  delete single row from the table: "event_suspicions"
  """
 delete_event_suspicions_by_pk(id: uuid! ): event_suspicions
  """
  delete data from the table: "events_with_archived"
  """
 delete_events("""filter the rows which have to be deleted"""
where: events_bool_exp! ): events_mutation_response
  """
  delete single row from the table: "events_with_archived"
  """
 delete_events_by_pk("""A unique identifier for each event"""
id: Int! ): events
  """
  delete data from the table: "events_permissions"
  """
 delete_events_permissions("""filter the rows which have to be deleted"""
where: events_permissions_bool_exp! ): events_permissions_mutation_response
  """
  delete data from the table: "events_verified_sender_emails"
  """
 delete_events_verified_sender_emails("""filter the rows which have to be deleted"""
where: events_verified_sender_emails_bool_exp! ): events_verified_sender_emails_mutation_response
  """
  delete single row from the table: "events_verified_sender_emails"
  """
 delete_events_verified_sender_emails_by_pk(id: uuid! ): events_verified_sender_emails
  """
  delete data from the table: "exhibitor_contact_statuses"
  """
 delete_exhibitor_contact_statuses("""filter the rows which have to be deleted"""
where: exhibitor_contact_statuses_bool_exp! ): exhibitor_contact_statuses_mutation_response
  """
  delete single row from the table: "exhibitor_contact_statuses"
  """
 delete_exhibitor_contact_statuses_by_pk(value: String! ): exhibitor_contact_statuses
  """
  delete data from the table: "exhibitor_contacts"
  """
 delete_exhibitor_contacts("""filter the rows which have to be deleted"""
where: exhibitor_contacts_bool_exp! ): exhibitor_contacts_mutation_response
  """
  delete single row from the table: "exhibitor_contacts"
  """
 delete_exhibitor_contacts_by_pk(id: uuid! ): exhibitor_contacts
  """
  delete data from the table: "exhibitor_page_views"
  """
 delete_exhibitor_page_views("""filter the rows which have to be deleted"""
where: exhibitor_page_views_bool_exp! ): exhibitor_page_views_mutation_response
  """
  delete single row from the table: "exhibitor_page_views"
  """
 delete_exhibitor_page_views_by_pk(id: uuid! ): exhibitor_page_views
  """
  delete data from the table: "exhibitor_representatives"
  """
 delete_exhibitor_representatives("""filter the rows which have to be deleted"""
where: exhibitor_representatives_bool_exp! ): exhibitor_representatives_mutation_response
  """
  delete single row from the table: "exhibitor_representatives"
  """
 delete_exhibitor_representatives_by_pk(id: uuid! ): exhibitor_representatives
  """
  delete data from the table: "exhibitor_resources"
  """
 delete_exhibitor_resources("""filter the rows which have to be deleted"""
where: exhibitor_resources_bool_exp! ): exhibitor_resources_mutation_response
  """
  delete single row from the table: "exhibitor_resources"
  """
 delete_exhibitor_resources_by_pk(id: uuid! ): exhibitor_resources
  """
  delete data from the table: "exhibitor_sizes"
  """
 delete_exhibitor_sizes("""filter the rows which have to be deleted"""
where: exhibitor_sizes_bool_exp! ): exhibitor_sizes_mutation_response
  """
  delete single row from the table: "exhibitor_sizes"
  """
 delete_exhibitor_sizes_by_pk(value: String! ): exhibitor_sizes
  """
  delete data from the table: "exhibitor_social_clicks"
  """
 delete_exhibitor_social_clicks("""filter the rows which have to be deleted"""
where: exhibitor_social_clicks_bool_exp! ): exhibitor_social_clicks_mutation_response
  """
  delete single row from the table: "exhibitor_social_clicks"
  """
 delete_exhibitor_social_clicks_by_pk(id: uuid! ): exhibitor_social_clicks
  """
  delete data from the table: "exhibitor_statuses"
  """
 delete_exhibitor_statuses("""filter the rows which have to be deleted"""
where: exhibitor_statuses_bool_exp! ): exhibitor_statuses_mutation_response
  """
  delete single row from the table: "exhibitor_statuses"
  """
 delete_exhibitor_statuses_by_pk(value: String! ): exhibitor_statuses
  """
  delete data from the table: "exhibitor_tags"
  """
 delete_exhibitor_tags("""filter the rows which have to be deleted"""
where: exhibitor_tags_bool_exp! ): exhibitor_tags_mutation_response
  """
  delete single row from the table: "exhibitor_tags"
  """
 delete_exhibitor_tags_by_pk(id: uuid! ): exhibitor_tags
  """
  delete data from the table: "exhibitors"
  """
 delete_exhibitors("""filter the rows which have to be deleted"""
where: exhibitors_bool_exp! ): exhibitors_mutation_response
  """
  delete single row from the table: "exhibitors"
  """
 delete_exhibitors_by_pk(id: uuid! ): exhibitors
  """
  delete data from the table: "exhibitors_tags"
  """
 delete_exhibitors_tags("""filter the rows which have to be deleted"""
where: exhibitors_tags_bool_exp! ): exhibitors_tags_mutation_response
  """
  delete single row from the table: "exhibitors_tags"
  """
 delete_exhibitors_tags_by_pk(id: uuid! ): exhibitors_tags
  """
  delete data from the table: "export_progresses"
  """
 delete_export_progresses("""filter the rows which have to be deleted"""
where: export_progresses_bool_exp! ): export_progresses_mutation_response
  """
  delete single row from the table: "export_progresses"
  """
 delete_export_progresses_by_pk(id: uuid! ): export_progresses
  """
  delete data from the table: "gql_api_keys"
  """
 delete_gql_api_keys("""filter the rows which have to be deleted"""
where: gql_api_keys_bool_exp! ): gql_api_keys_mutation_response
  """
  delete single row from the table: "gql_api_keys"
  """
 delete_gql_api_keys_by_pk(api_key: uuid! ): gql_api_keys
  """
  delete data from the table: "notifications"
  """
 delete_notifications("""filter the rows which have to be deleted"""
where: notifications_bool_exp! ): notifications_mutation_response
  """
  delete single row from the table: "notifications"
  """
 delete_notifications_by_pk(notification_id: Int! ): notifications
  """
  delete data from the table: "notifications_users"
  """
 delete_notifications_users("""filter the rows which have to be deleted"""
where: notifications_users_bool_exp! ): notifications_users_mutation_response
  """
  delete single row from the table: "notifications_users"
  """
 delete_notifications_users_by_pk(id: Int! ): notifications_users
  """
  delete data from the table: "oa_db_env"
  """
 delete_oa_db_env("""filter the rows which have to be deleted"""
where: oa_db_env_bool_exp! ): oa_db_env_mutation_response
  """
  delete single row from the table: "oa_db_env"
  """
 delete_oa_db_env_by_pk(key: String! ): oa_db_env
  """
  delete data from the table: "oauth_codes"
  """
 delete_oauth_codes("""filter the rows which have to be deleted"""
where: oauth_codes_bool_exp! ): oauth_codes_mutation_response
  """
  delete single row from the table: "oauth_codes"
  """
 delete_oauth_codes_by_pk(id: uuid! ): oauth_codes
  """
  delete data from the table: "program_attachments"
  """
 delete_program_attachments("""filter the rows which have to be deleted"""
where: program_attachments_bool_exp! ): program_attachments_mutation_response
  """
  delete single row from the table: "program_attachments"
  """
 delete_program_attachments_by_pk(id: Int! ): program_attachments
  """
  delete data from the table: "program_chairs"
  """
 delete_program_chairs("""filter the rows which have to be deleted"""
where: program_chairs_bool_exp! ): program_chairs_mutation_response
  """
  delete single row from the table: "program_chairs"
  """
 delete_program_chairs_by_pk(program_chair_id: Int! ): program_chairs
  """
  delete data from the table: "program_columns"
  """
 delete_program_columns("""filter the rows which have to be deleted"""
where: program_columns_bool_exp! ): program_columns_mutation_response
  """
  delete single row from the table: "program_columns"
  """
 delete_program_columns_by_pk(id: Int! ): program_columns
  """
  delete data from the table: "program_columns_zoom_users"
  """
 delete_program_columns_zoom_users("""filter the rows which have to be deleted"""
where: program_columns_zoom_users_bool_exp! ): program_columns_zoom_users_mutation_response
  """
  delete single row from the table: "program_columns_zoom_users"
  """
 delete_program_columns_zoom_users_by_pk(id: Int! ): program_columns_zoom_users
  """
  delete data from the table: "program_dates"
  """
 delete_program_dates("""filter the rows which have to be deleted"""
where: program_dates_bool_exp! ): program_dates_mutation_response
  """
  delete single row from the table: "program_dates"
  """
 delete_program_dates_by_pk(id: Int! ): program_dates
  """
  delete data from the table: "program_downloads"
  """
 delete_program_downloads("""filter the rows which have to be deleted"""
where: program_downloads_bool_exp! ): program_downloads_mutation_response
  """
  delete single row from the table: "program_downloads"
  """
 delete_program_downloads_by_pk(program_download_id: Int! ): program_downloads
  """
  delete data from the table: "program_info"
  """
 delete_program_info("""filter the rows which have to be deleted"""
where: program_info_bool_exp! ): program_info_mutation_response
  """
  delete single row from the table: "program_info"
  """
 delete_program_info_by_pk(program_info_id: Int! ): program_info
  """
  delete data from the table: "program_information"
  """
 delete_program_information("""filter the rows which have to be deleted"""
where: program_information_bool_exp! ): program_information_mutation_response
  """
  delete single row from the table: "program_information"
  """
 delete_program_information_by_pk(program_information_id: Int! ): program_information
  """
  delete data from the table: "program_locations"
  """
 delete_program_locations("""filter the rows which have to be deleted"""
where: program_locations_bool_exp! ): program_locations_mutation_response
  """
  delete single row from the table: "program_locations"
  """
 delete_program_locations_by_pk(program_location_id: Int! ): program_locations
  """
  delete data from the table: "program_session_attachments"
  """
 delete_program_session_activities("""filter the rows which have to be deleted"""
where: program_session_activities_bool_exp! ): program_session_activities_mutation_response
  """
  delete data from the table: "program_session_categories"
  """
 delete_program_session_categories("""filter the rows which have to be deleted"""
where: program_session_categories_bool_exp! ): program_session_categories_mutation_response
  """
  delete single row from the table: "program_session_categories"
  """
 delete_program_session_categories_by_pk(id: Int! ): program_session_categories
  """
  delete data from the table: "program_session_category_type"
  """
 delete_program_session_category_type("""filter the rows which have to be deleted"""
where: program_session_category_type_bool_exp! ): program_session_category_type_mutation_response
  """
  delete single row from the table: "program_session_category_type"
  """
 delete_program_session_category_type_by_pk(id: Int! ): program_session_category_type
  """
  delete data from the table: "program_session_sponsors"
  """
 delete_program_session_sponsors("""filter the rows which have to be deleted"""
where: program_session_sponsors_bool_exp! ): program_session_sponsors_mutation_response
  """
  delete data from the table: "program_session_zoom_meetings"
  """
 delete_program_session_zoom_meetings("""filter the rows which have to be deleted"""
where: program_session_zoom_meetings_bool_exp! ): program_session_zoom_meetings_mutation_response
  """
  delete single row from the table: "program_session_zoom_meetings"
  """
 delete_program_session_zoom_meetings_by_pk(id: Int! ): program_session_zoom_meetings
  """
  delete data from the table: "program_sessions"
  """
 delete_program_sessions("""filter the rows which have to be deleted"""
where: program_sessions_bool_exp! ): program_sessions_mutation_response
  """
  delete single row from the table: "program_sessions"
  """
 delete_program_sessions_by_pk(id: Int! ): program_sessions
  """
  delete data from the table: "program_sessions_categories"
  """
 delete_program_sessions_categories("""filter the rows which have to be deleted"""
where: program_sessions_categories_bool_exp! ): program_sessions_categories_mutation_response
  """
  delete single row from the table: "program_sessions_categories"
  """
 delete_program_sessions_categories_by_pk(id: Int! ): program_sessions_categories
  """
  delete data from the table: "program_sessions_chairs"
  """
 delete_program_sessions_chairs("""filter the rows which have to be deleted"""
where: program_sessions_chairs_bool_exp! ): program_sessions_chairs_mutation_response
  """
  delete single row from the table: "program_sessions_chairs"
  """
 delete_program_sessions_chairs_by_pk(id: Int! ): program_sessions_chairs
  """
  delete data from the table: "program_sessions_comments"
  """
 delete_program_sessions_comments("""filter the rows which have to be deleted"""
where: program_sessions_comments_bool_exp! ): program_sessions_comments_mutation_response
  """
  delete single row from the table: "program_sessions_comments"
  """
 delete_program_sessions_comments_by_pk(session_comment_id: Int! ): program_sessions_comments
  """
  delete data from the table: "program_sessions_program_columns"
  """
 delete_program_sessions_program_columns("""filter the rows which have to be deleted"""
where: program_sessions_program_columns_bool_exp! ): program_sessions_program_columns_mutation_response
  """
  delete data from the table: "program_sessions_submissions"
  """
 delete_program_sessions_submissions("""filter the rows which have to be deleted"""
where: program_sessions_submissions_bool_exp! ): program_sessions_submissions_mutation_response
  """
  delete data from the table: "program_sessions_symposia"
  """
 delete_program_sessions_symposia("""filter the rows which have to be deleted"""
where: program_sessions_symposia_bool_exp! ): program_sessions_symposia_mutation_response
  """
  delete data from the table: "program_sponsors"
  """
 delete_program_sponsors("""filter the rows which have to be deleted"""
where: program_sponsors_bool_exp! ): program_sponsors_mutation_response
  """
  delete single row from the table: "program_sponsors"
  """
 delete_program_sponsors_by_pk(id: Int! ): program_sponsors
  """
  delete data from the table: "program_submissions_comments"
  """
 delete_program_submissions_comments("""filter the rows which have to be deleted"""
where: program_submissions_comments_bool_exp! ): program_submissions_comments_mutation_response
  """
  delete single row from the table: "program_submissions_comments"
  """
 delete_program_submissions_comments_by_pk(id: Int! ): program_submissions_comments
  """
  delete data from the table: "program_symposium_comments"
  """
 delete_program_symposium_comments("""filter the rows which have to be deleted"""
where: program_symposium_comments_bool_exp! ): program_symposium_comments_mutation_response
  """
  delete single row from the table: "program_symposium_comments"
  """
 delete_program_symposium_comments_by_pk(program_symposium_comment_id: Int! ): program_symposium_comments
  """
  delete data from the table: "program_tabs"
  """
 delete_program_tabs("""filter the rows which have to be deleted"""
where: program_tabs_bool_exp! ): program_tabs_mutation_response
  """
  delete data from the table: "program_tracks"
  """
 delete_program_tracks("""filter the rows which have to be deleted"""
where: program_tracks_bool_exp! ): program_tracks_mutation_response
  """
  delete single row from the table: "program_tracks"
  """
 delete_program_tracks_by_pk(program_track_id: Int! ): program_tracks
  """
  delete data from the table: "program_types"
  """
 delete_program_types("""filter the rows which have to be deleted"""
where: program_types_bool_exp! ): program_types_mutation_response
  """
  delete single row from the table: "program_types"
  """
 delete_program_types_by_pk(program_type_id: Int! ): program_types
  """
  delete data from the table: "question_response_versions"
  """
 delete_question_response_versions("""filter the rows which have to be deleted"""
where: question_response_versions_bool_exp! ): question_response_versions_mutation_response
  """
  delete single row from the table: "question_response_versions"
  """
 delete_question_response_versions_by_pk(id: bigint! ): question_response_versions
  """
  delete data from the table: "question_responses"
  """
 delete_question_responses("""filter the rows which have to be deleted"""
where: question_responses_bool_exp! ): question_responses_mutation_response
  """
  delete single row from the table: "question_responses"
  """
 delete_question_responses_by_pk(id: Int! ): question_responses
  """
  delete data from the table: "question_responses_view"
  """
 delete_question_responses_view("""filter the rows which have to be deleted"""
where: question_responses_view_bool_exp! ): question_responses_view_mutation_response
  """
  delete data from the table: "questions"
  """
 delete_questions("""filter the rows which have to be deleted"""
where: questions_bool_exp! ): questions_mutation_response
  """
  delete single row from the table: "questions"
  """
 delete_questions_by_pk(id: Int! ): questions
  """
  delete data from the table: "questions_stage_options"
  """
 delete_questions_stage_options("""filter the rows which have to be deleted"""
where: questions_stage_options_bool_exp! ): questions_stage_options_mutation_response
  """
  delete single row from the table: "questions_stage_options"
  """
 delete_questions_stage_options_by_pk(id: Int! ): questions_stage_options
  """
  delete data from the table: "questions_stage_options_view"
  """
 delete_questions_stage_options_view("""filter the rows which have to be deleted"""
where: questions_stage_options_view_bool_exp! ): questions_stage_options_view_mutation_response
  """
  delete data from the table: "questions_view"
  """
 delete_questions_view("""filter the rows which have to be deleted"""
where: questions_view_bool_exp! ): questions_view_mutation_response
  """
  delete data from the table: "ratings"
  """
 delete_ratings("""filter the rows which have to be deleted"""
where: ratings_bool_exp! ): ratings_mutation_response
  """
  delete single row from the table: "ratings"
  """
 delete_ratings_by_pk(id: Int! ): ratings
  """
  delete data from the table: "read_by_user_program_comments"
  """
 delete_read_by_user_program_comments("""filter the rows which have to be deleted"""
where: read_by_user_program_comments_bool_exp! ): read_by_user_program_comments_mutation_response
  """
  delete single row from the table: "read_by_user_program_comments"
  """
 delete_read_by_user_program_comments_by_pk(id: Int! ): read_by_user_program_comments
  """
  delete data from the table: "revenues"
  """
 delete_revenues("""filter the rows which have to be deleted"""
where: revenues_bool_exp! ): revenues_mutation_response
  """
  delete single row from the table: "revenues"
  """
 delete_revenues_by_pk(month: Int! , year: Int! ): revenues
  """
  delete data from the table: "review_dates"
  """
 delete_review_dates("""filter the rows which have to be deleted"""
where: review_dates_bool_exp! ): review_dates_mutation_response
  """
  delete single row from the table: "review_dates"
  """
 delete_review_dates_by_pk(id: Int! ): review_dates
  """
  delete data from the table: "reviewer_admin_notes"
  """
 delete_reviewer_admin_notes("""filter the rows which have to be deleted"""
where: reviewer_admin_notes_bool_exp! ): reviewer_admin_notes_mutation_response
  """
  delete data from the table: "reviewer_categories"
  """
 delete_reviewer_categories("""filter the rows which have to be deleted"""
where: reviewer_categories_bool_exp! ): reviewer_categories_mutation_response
  """
  delete data from the table: "reviewer_inline_comments"
  """
 delete_reviewer_inline_comments("""filter the rows which have to be deleted"""
where: reviewer_inline_comments_bool_exp! ): reviewer_inline_comments_mutation_response
  """
  delete single row from the table: "reviewer_inline_comments"
  """
 delete_reviewer_inline_comments_by_pk(id: uuid! ): reviewer_inline_comments
  """
  delete data from the table: "reviewer_question_responses"
  """
 delete_reviewer_question_responses("""filter the rows which have to be deleted"""
where: reviewer_question_responses_bool_exp! ): reviewer_question_responses_mutation_response
  """
  delete single row from the table: "reviewer_question_responses"
  """
 delete_reviewer_question_responses_by_pk(id: Int! ): reviewer_question_responses
  """
  delete data from the table: "reviewer_questions"
  """
 delete_reviewer_questions("""filter the rows which have to be deleted"""
where: reviewer_questions_bool_exp! ): reviewer_questions_mutation_response
  """
  delete single row from the table: "reviewer_questions"
  """
 delete_reviewer_questions_by_pk(id: Int! ): reviewer_questions
  """
  delete data from the table: "reviews"
  """
 delete_reviews("""filter the rows which have to be deleted"""
where: reviews_bool_exp! ): reviews_mutation_response
  """
  delete single row from the table: "reviews"
  """
 delete_reviews_by_pk(id: Int! ): reviews
  """
  delete data from the table: "search_authors"
  """
 delete_search_authors("""filter the rows which have to be deleted"""
where: search_authors_bool_exp! ): search_authors_mutation_response
  """
  delete data from the table: "search_chairs"
  """
 delete_search_chairs("""filter the rows which have to be deleted"""
where: search_chairs_bool_exp! ): search_chairs_mutation_response
  """
  delete data from the table: "search_program_sessions"
  """
 delete_search_program_sessions("""filter the rows which have to be deleted"""
where: search_program_sessions_bool_exp! ): search_program_sessions_mutation_response
  """
  delete data from the table: "search_question_responses"
  """
 delete_search_question_responses("""filter the rows which have to be deleted"""
where: search_question_responses_bool_exp! ): search_question_responses_mutation_response
  """
  delete data from the table: "search_symposium_question_responses"
  """
 delete_search_symposium_question_responses("""filter the rows which have to be deleted"""
where: search_symposium_question_responses_bool_exp! ): search_symposium_question_responses_mutation_response
  """
  delete data from the table: "session_chair_affiliations"
  """
 delete_session_chair_affiliations("""filter the rows which have to be deleted"""
where: session_chair_affiliations_bool_exp! ): session_chair_affiliations_mutation_response
  """
  delete single row from the table: "session_chair_affiliations"
  """
 delete_session_chair_affiliations_by_pk(affiliation_id: Int! ): session_chair_affiliations
  """
  delete data from the table: "session_chair_fields"
  """
 delete_session_chair_fields("""filter the rows which have to be deleted"""
where: session_chair_fields_bool_exp! ): session_chair_fields_mutation_response
  """
  delete single row from the table: "session_chair_fields"
  """
 delete_session_chair_fields_by_pk(id: Int! ): session_chair_fields
  """
  delete data from the table: "session_chair_responses"
  """
 delete_session_chair_responses("""filter the rows which have to be deleted"""
where: session_chair_responses_bool_exp! ): session_chair_responses_mutation_response
  """
  delete single row from the table: "session_chair_responses"
  """
 delete_session_chair_responses_by_pk(id: Int! ): session_chair_responses
  """
  delete data from the table: "session_chairs"
  """
 delete_session_chairs("""filter the rows which have to be deleted"""
where: session_chairs_bool_exp! ): session_chairs_mutation_response
  """
  delete single row from the table: "session_chairs"
  """
 delete_session_chairs_by_pk(id: Int! ): session_chairs
  """
  delete data from the table: "session_links"
  """
 delete_session_links("""filter the rows which have to be deleted"""
where: session_links_bool_exp! ): session_links_mutation_response
  """
  delete data from the table: "sessions"
  """
 delete_sessions("""filter the rows which have to be deleted"""
where: sessions_bool_exp! ): sessions_mutation_response
  """
  delete data from the table: "software_updates"
  """
 delete_software_updates("""filter the rows which have to be deleted"""
where: software_updates_bool_exp! ): software_updates_mutation_response
  """
  delete single row from the table: "software_updates"
  """
 delete_software_updates_by_pk(software_update_id: Int! ): software_updates
  """
  delete data from the table: "stages"
  """
 delete_stages("""filter the rows which have to be deleted"""
where: stages_bool_exp! ): stages_mutation_response
  """
  delete single row from the table: "stages"
  """
 delete_stages_by_pk(id: Int! ): stages
  """
  delete data from the table: "stages_event_acceptance_types"
  """
 delete_stages_event_acceptance_types("""filter the rows which have to be deleted"""
where: stages_event_acceptance_types_bool_exp! ): stages_event_acceptance_types_mutation_response
  """
  delete single row from the table: "stages_event_acceptance_types"
  """
 delete_stages_event_acceptance_types_by_pk(stages_event_acceptance_type_id: Int! ): stages_event_acceptance_types
  """
  delete data from the table: "stages_view"
  """
 delete_stages_view("""filter the rows which have to be deleted"""
where: stages_view_bool_exp! ): stages_view_mutation_response
  """
  delete data from the table: "submission_acceptance_types"
  """
 delete_submission_acceptance_types("""filter the rows which have to be deleted"""
where: submission_acceptance_types_bool_exp! ): submission_acceptance_types_mutation_response
  """
  delete data from the table: "submission_owner_log"
  """
 delete_submission_owner_log("""filter the rows which have to be deleted"""
where: submission_owner_log_bool_exp! ): submission_owner_log_mutation_response
  """
  delete single row from the table: "submission_owner_log"
  """
 delete_submission_owner_log_by_pk(id: uuid! ): submission_owner_log
  """
  delete data from the table: "submissions_with_archived"
  """
 delete_submissions("""filter the rows which have to be deleted"""
where: submissions_bool_exp! ): submissions_mutation_response
  """
  delete single row from the table: "submissions_with_archived"
  """
 delete_submissions_by_pk("""A globally unique identifier for each submission"""
id: Int! ): submissions
  """
  delete data from the table: "symposia_with_archived"
  """
 delete_symposia("""filter the rows which have to be deleted"""
where: symposia_bool_exp! ): symposia_mutation_response
  """
  delete data from the table: "symposia_acceptance_types"
  """
 delete_symposia_acceptance_types("""filter the rows which have to be deleted"""
where: symposia_acceptance_types_bool_exp! ): symposia_acceptance_types_mutation_response
  """
  delete single row from the table: "symposia_acceptance_types"
  """
 delete_symposia_acceptance_types_by_pk(symposium_acceptance_type_id: Int! ): symposia_acceptance_types
  """
  delete single row from the table: "symposia_with_archived"
  """
 delete_symposia_by_pk(id: Int! ): symposia
  """
  delete data from the table: "symposium_affiliations"
  """
 delete_symposium_affiliations("""filter the rows which have to be deleted"""
where: symposium_affiliations_bool_exp! ): symposium_affiliations_mutation_response
  """
  delete single row from the table: "symposium_affiliations"
  """
 delete_symposium_affiliations_by_pk(id: Int! ): symposium_affiliations
  """
  delete data from the table: "symposium_person_field_responses"
  """
 delete_symposium_person_field_responses("""filter the rows which have to be deleted"""
where: symposium_person_field_responses_bool_exp! ): symposium_person_field_responses_mutation_response
  """
  delete single row from the table: "symposium_person_field_responses"
  """
 delete_symposium_person_field_responses_by_pk(id: Int! ): symposium_person_field_responses
  """
  delete data from the table: "symposium_person_fields"
  """
 delete_symposium_person_fields("""filter the rows which have to be deleted"""
where: symposium_person_fields_bool_exp! ): symposium_person_fields_mutation_response
  """
  delete single row from the table: "symposium_person_fields"
  """
 delete_symposium_person_fields_by_pk(id: Int! ): symposium_person_fields
  """
  delete data from the table: "symposium_persons"
  """
 delete_symposium_persons("""filter the rows which have to be deleted"""
where: symposium_persons_bool_exp! ): symposium_persons_mutation_response
  """
  delete single row from the table: "symposium_persons"
  """
 delete_symposium_persons_by_pk(id: Int! ): symposium_persons
  """
  delete data from the table: "symposium_question_responses"
  """
 delete_symposium_question_responses("""filter the rows which have to be deleted"""
where: symposium_question_responses_bool_exp! ): symposium_question_responses_mutation_response
  """
  delete single row from the table: "symposium_question_responses"
  """
 delete_symposium_question_responses_by_pk(id: Int! ): symposium_question_responses
  """
  delete data from the table: "symposium_questions"
  """
 delete_symposium_questions("""filter the rows which have to be deleted"""
where: symposium_questions_bool_exp! ): symposium_questions_mutation_response
  """
  delete single row from the table: "symposium_questions"
  """
 delete_symposium_questions_by_pk(symposium_question_id: Int! ): symposium_questions
  """
  delete data from the table: "symposium_review_question_responses"
  """
 delete_symposium_review_question_responses("""filter the rows which have to be deleted"""
where: symposium_review_question_responses_bool_exp! ): symposium_review_question_responses_mutation_response
  """
  delete single row from the table: "symposium_review_question_responses"
  """
 delete_symposium_review_question_responses_by_pk(symposium_review_question_response_id: Int! ): symposium_review_question_responses
  """
  delete data from the table: "symposium_review_questions"
  """
 delete_symposium_review_questions("""filter the rows which have to be deleted"""
where: symposium_review_questions_bool_exp! ): symposium_review_questions_mutation_response
  """
  delete single row from the table: "symposium_review_questions"
  """
 delete_symposium_review_questions_by_pk(symposium_review_question_id: Int! ): symposium_review_questions
  """
  delete data from the table: "symposium_reviews"
  """
 delete_symposium_reviews("""filter the rows which have to be deleted"""
where: symposium_reviews_bool_exp! ): symposium_reviews_mutation_response
  """
  delete single row from the table: "symposium_reviews"
  """
 delete_symposium_reviews_by_pk(symposium_review_id: Int! ): symposium_reviews
  """
  delete data from the table: "symposium_submission_session_times"
  """
 delete_symposium_submission_session_times("""filter the rows which have to be deleted"""
where: symposium_submission_session_times_bool_exp! ): symposium_submission_session_times_mutation_response
  """
  delete single row from the table: "symposium_submission_session_times"
  """
 delete_symposium_submission_session_times_by_pk(id: Int! ): symposium_submission_session_times
  """
  delete data from the table: "table_email_attachments"
  """
 delete_table_email_attachments("""filter the rows which have to be deleted"""
where: table_email_attachments_bool_exp! ): table_email_attachments_mutation_response
  """
  delete single row from the table: "table_email_attachments"
  """
 delete_table_email_attachments_by_pk(id: uuid! ): table_email_attachments
  """
  delete data from the table: "table_email_filters"
  """
 delete_table_email_filters("""filter the rows which have to be deleted"""
where: table_email_filters_bool_exp! ): table_email_filters_mutation_response
  """
  delete single row from the table: "table_email_filters"
  """
 delete_table_email_filters_by_pk(id: uuid! ): table_email_filters
  """
  delete data from the table: "table_email_merge_field_defaults"
  """
 delete_table_email_merge_field_defaults("""filter the rows which have to be deleted"""
where: table_email_merge_field_defaults_bool_exp! ): table_email_merge_field_defaults_mutation_response
  """
  delete single row from the table: "table_email_merge_field_defaults"
  """
 delete_table_email_merge_field_defaults_by_pk(id: uuid! ): table_email_merge_field_defaults
  """
  delete data from the table: "table_email_recipient_groups"
  """
 delete_table_email_recipient_groups("""filter the rows which have to be deleted"""
where: table_email_recipient_groups_bool_exp! ): table_email_recipient_groups_mutation_response
  """
  delete single row from the table: "table_email_recipient_groups"
  """
 delete_table_email_recipient_groups_by_pk(value: String! ): table_email_recipient_groups
  """
  delete data from the table: "table_email_templates"
  """
 delete_table_email_templates("""filter the rows which have to be deleted"""
where: table_email_templates_bool_exp! ): table_email_templates_mutation_response
  """
  delete single row from the table: "table_email_templates"
  """
 delete_table_email_templates_by_pk(id: uuid! ): table_email_templates
  """
  delete data from the table: "track_review_auto_assigns"
  """
 delete_track_review_auto_assigns("""filter the rows which have to be deleted"""
where: track_review_auto_assigns_bool_exp! ): track_review_auto_assigns_mutation_response
  """
  delete single row from the table: "track_review_auto_assigns"
  """
 delete_track_review_auto_assigns_by_pk(id: uuid! ): track_review_auto_assigns
  """
  delete data from the table: "user_asked_for_ratings"
  """
 delete_user_asked_for_ratings("""filter the rows which have to be deleted"""
where: user_asked_for_ratings_bool_exp! ): user_asked_for_ratings_mutation_response
  """
  delete single row from the table: "user_asked_for_ratings"
  """
 delete_user_asked_for_ratings_by_pk(id: Int! ): user_asked_for_ratings
  """
  delete data from the table: "user_emails"
  """
 delete_user_emails("""filter the rows which have to be deleted"""
where: user_emails_bool_exp! ): user_emails_mutation_response
  """
  delete data from the table: "user_view"
  """
 delete_user_view("""filter the rows which have to be deleted"""
where: user_view_bool_exp! ): user_view_mutation_response
  """
  delete data from the table: "users"
  """
 delete_users("""filter the rows which have to be deleted"""
where: users_bool_exp! ): users_mutation_response
  """
  delete single row from the table: "users"
  """
 delete_users_by_pk(id: Int! ): users
  """
  delete data from the table: "verified_sender_emails"
  """
 delete_verified_sender_emails("""filter the rows which have to be deleted"""
where: verified_sender_emails_bool_exp! ): verified_sender_emails_mutation_response
  """
  delete single row from the table: "verified_sender_emails"
  """
 delete_verified_sender_emails_by_pk(verified_sender_email_id: Int! ): verified_sender_emails
  """
  delete data from the table: "virtual_conference_announcement_button_clicks"
  """
 delete_virtual_conference_announcement_button_clicks("""filter the rows which have to be deleted"""
where: virtual_conference_announcement_button_clicks_bool_exp! ): virtual_conference_announcement_button_clicks_mutation_response
  """
  delete single row from the table: "virtual_conference_announcement_button_clicks"
  """
 delete_virtual_conference_announcement_button_clicks_by_pk(id: uuid! ): virtual_conference_announcement_button_clicks
  """
  delete data from the table: "virtual_conference_announcement_dismissals"
  """
 delete_virtual_conference_announcement_dismissals("""filter the rows which have to be deleted"""
where: virtual_conference_announcement_dismissals_bool_exp! ): virtual_conference_announcement_dismissals_mutation_response
  """
  delete single row from the table: "virtual_conference_announcement_dismissals"
  """
 delete_virtual_conference_announcement_dismissals_by_pk(id: uuid! ): virtual_conference_announcement_dismissals
  """
  delete data from the table: "virtual_conference_announcement_views"
  """
 delete_virtual_conference_announcement_views("""filter the rows which have to be deleted"""
where: virtual_conference_announcement_views_bool_exp! ): virtual_conference_announcement_views_mutation_response
  """
  delete single row from the table: "virtual_conference_announcement_views"
  """
 delete_virtual_conference_announcement_views_by_pk(id: uuid! ): virtual_conference_announcement_views
  """
  delete data from the table: "virtual_conference_announcements"
  """
 delete_virtual_conference_announcements("""filter the rows which have to be deleted"""
where: virtual_conference_announcements_bool_exp! ): virtual_conference_announcements_mutation_response
  """
  delete single row from the table: "virtual_conference_announcements"
  """
 delete_virtual_conference_announcements_by_pk(id: uuid! ): virtual_conference_announcements
  """
  delete data from the table: "virtual_conference_chat_group_invitations"
  """
 delete_virtual_conference_chat_group_invitations("""filter the rows which have to be deleted"""
where: virtual_conference_chat_group_invitations_bool_exp! ): virtual_conference_chat_group_invitations_mutation_response
  """
  delete single row from the table: "virtual_conference_chat_group_invitations"
  """
 delete_virtual_conference_chat_group_invitations_by_pk(id: Int! ): virtual_conference_chat_group_invitations
  """
  delete data from the table: "virtual_conference_chat_group_reports"
  """
 delete_virtual_conference_chat_group_reports("""filter the rows which have to be deleted"""
where: virtual_conference_chat_group_reports_bool_exp! ): virtual_conference_chat_group_reports_mutation_response
  """
  delete single row from the table: "virtual_conference_chat_group_reports"
  """
 delete_virtual_conference_chat_group_reports_by_pk(id: Int! ): virtual_conference_chat_group_reports
  """
  delete data from the table: "virtual_conference_chat_group_reports_read_by"
  """
 delete_virtual_conference_chat_group_reports_read_by("""filter the rows which have to be deleted"""
where: virtual_conference_chat_group_reports_read_by_bool_exp! ): virtual_conference_chat_group_reports_read_by_mutation_response
  """
  delete single row from the table: "virtual_conference_chat_group_reports_read_by"
  """
 delete_virtual_conference_chat_group_reports_read_by_by_pk(id: Int! ): virtual_conference_chat_group_reports_read_by
  """
  delete data from the table: "virtual_conference_chat_groups"
  """
 delete_virtual_conference_chat_groups("""filter the rows which have to be deleted"""
where: virtual_conference_chat_groups_bool_exp! ): virtual_conference_chat_groups_mutation_response
  """
  delete single row from the table: "virtual_conference_chat_groups"
  """
 delete_virtual_conference_chat_groups_by_pk(id: uuid! ): virtual_conference_chat_groups
  """
  delete data from the table: "virtual_conference_cron_job_last_rans"
  """
 delete_virtual_conference_cron_job_last_rans("""filter the rows which have to be deleted"""
where: virtual_conference_cron_job_last_rans_bool_exp! ): virtual_conference_cron_job_last_rans_mutation_response
  """
  delete single row from the table: "virtual_conference_cron_job_last_rans"
  """
 delete_virtual_conference_cron_job_last_rans_by_pk(id: Int! ): virtual_conference_cron_job_last_rans
  """
  delete data from the table: "virtual_conference_direct_chat_blocks"
  """
 delete_virtual_conference_direct_chat_blocks("""filter the rows which have to be deleted"""
where: virtual_conference_direct_chat_blocks_bool_exp! ): virtual_conference_direct_chat_blocks_mutation_response
  """
  delete single row from the table: "virtual_conference_direct_chat_blocks"
  """
 delete_virtual_conference_direct_chat_blocks_by_pk(id: Int! ): virtual_conference_direct_chat_blocks
  """
  delete data from the table: "virtual_conference_direct_messages"
  """
 delete_virtual_conference_direct_messages("""filter the rows which have to be deleted"""
where: virtual_conference_direct_messages_bool_exp! ): virtual_conference_direct_messages_mutation_response
  """
  delete single row from the table: "virtual_conference_direct_messages"
  """
 delete_virtual_conference_direct_messages_by_pk(id: Int! ): virtual_conference_direct_messages
  """
  delete data from the table: "virtual_conference_direct_video_calls"
  """
 delete_virtual_conference_direct_video_calls("""filter the rows which have to be deleted"""
where: virtual_conference_direct_video_calls_bool_exp! ): virtual_conference_direct_video_calls_mutation_response
  """
  delete single row from the table: "virtual_conference_direct_video_calls"
  """
 delete_virtual_conference_direct_video_calls_by_pk(id: Int! ): virtual_conference_direct_video_calls
  """
  delete data from the table: "virtual_conference_email_notification_speeds"
  """
 delete_virtual_conference_email_notification_speeds("""filter the rows which have to be deleted"""
where: virtual_conference_email_notification_speeds_bool_exp! ): virtual_conference_email_notification_speeds_mutation_response
  """
  delete single row from the table: "virtual_conference_email_notification_speeds"
  """
 delete_virtual_conference_email_notification_speeds_by_pk(value: String! ): virtual_conference_email_notification_speeds
  """
  delete data from the table: "virtual_conference_event_chat_blocks"
  """
 delete_virtual_conference_event_chat_blocks("""filter the rows which have to be deleted"""
where: virtual_conference_event_chat_blocks_bool_exp! ): virtual_conference_event_chat_blocks_mutation_response
  """
  delete single row from the table: "virtual_conference_event_chat_blocks"
  """
 delete_virtual_conference_event_chat_blocks_by_pk(id: Int! ): virtual_conference_event_chat_blocks
  """
  delete data from the table: "virtual_conference_event_interests"
  """
 delete_virtual_conference_event_interests("""filter the rows which have to be deleted"""
where: virtual_conference_event_interests_bool_exp! ): virtual_conference_event_interests_mutation_response
  """
  delete single row from the table: "virtual_conference_event_interests"
  """
 delete_virtual_conference_event_interests_by_pk(id: Int! ): virtual_conference_event_interests
  """
  delete data from the table: "virtual_conference_event_messages"
  """
 delete_virtual_conference_event_messages("""filter the rows which have to be deleted"""
where: virtual_conference_event_messages_bool_exp! ): virtual_conference_event_messages_mutation_response
  """
  delete single row from the table: "virtual_conference_event_messages"
  """
 delete_virtual_conference_event_messages_by_pk(id: Int! ): virtual_conference_event_messages
  """
  delete data from the table: "virtual_conference_event_messages_last_read"
  """
 delete_virtual_conference_event_messages_last_read("""filter the rows which have to be deleted"""
where: virtual_conference_event_messages_last_read_bool_exp! ): virtual_conference_event_messages_last_read_mutation_response
  """
  delete single row from the table: "virtual_conference_event_messages_last_read"
  """
 delete_virtual_conference_event_messages_last_read_by_pk(id: Int! ): virtual_conference_event_messages_last_read
  """
  delete data from the table: "virtual_conference_group_chat_message_reads"
  """
 delete_virtual_conference_group_chat_message_reads("""filter the rows which have to be deleted"""
where: virtual_conference_group_chat_message_reads_bool_exp! ): virtual_conference_group_chat_message_reads_mutation_response
  """
  delete single row from the table: "virtual_conference_group_chat_message_reads"
  """
 delete_virtual_conference_group_chat_message_reads_by_pk(id: Int! ): virtual_conference_group_chat_message_reads
  """
  delete data from the table: "virtual_conference_group_chat_messages"
  """
 delete_virtual_conference_group_chat_messages("""filter the rows which have to be deleted"""
where: virtual_conference_group_chat_messages_bool_exp! ): virtual_conference_group_chat_messages_mutation_response
  """
  delete single row from the table: "virtual_conference_group_chat_messages"
  """
 delete_virtual_conference_group_chat_messages_by_pk(id: Int! ): virtual_conference_group_chat_messages
  """
  delete data from the table: "virtual_conference_group_video_call_dismissals"
  """
 delete_virtual_conference_group_video_call_dismissals("""filter the rows which have to be deleted"""
where: virtual_conference_group_video_call_dismissals_bool_exp! ): virtual_conference_group_video_call_dismissals_mutation_response
  """
  delete single row from the table: "virtual_conference_group_video_call_dismissals"
  """
 delete_virtual_conference_group_video_call_dismissals_by_pk(id: Int! ): virtual_conference_group_video_call_dismissals
  """
  delete data from the table: "virtual_conference_group_video_call_durations"
  """
 delete_virtual_conference_group_video_call_durations("""filter the rows which have to be deleted"""
where: virtual_conference_group_video_call_durations_bool_exp! ): virtual_conference_group_video_call_durations_mutation_response
  """
  delete single row from the table: "virtual_conference_group_video_call_durations"
  """
 delete_virtual_conference_group_video_call_durations_by_pk(id: uuid! ): virtual_conference_group_video_call_durations
  """
  delete data from the table: "virtual_conference_group_video_call_joins"
  """
 delete_virtual_conference_group_video_call_joins("""filter the rows which have to be deleted"""
where: virtual_conference_group_video_call_joins_bool_exp! ): virtual_conference_group_video_call_joins_mutation_response
  """
  delete single row from the table: "virtual_conference_group_video_call_joins"
  """
 delete_virtual_conference_group_video_call_joins_by_pk(id: Int! ): virtual_conference_group_video_call_joins
  """
  delete data from the table: "virtual_conference_group_video_call_notification_dismissals"
  """
 delete_virtual_conference_group_video_call_notification_dismissals("""filter the rows which have to be deleted"""
where: virtual_conference_group_video_call_notification_dismissals_bool_exp! ): virtual_conference_group_video_call_notification_dismissals_mutation_response
  """
  delete single row from the table: "virtual_conference_group_video_call_notification_dismissals"
  """
 delete_virtual_conference_group_video_call_notification_dismissals_by_pk(id: Int! ): virtual_conference_group_video_call_notification_dismissals
  """
  delete data from the table: "virtual_conference_name_badge"
  """
 delete_virtual_conference_name_badge("""filter the rows which have to be deleted"""
where: virtual_conference_name_badge_bool_exp! ): virtual_conference_name_badge_mutation_response
  """
  delete single row from the table: "virtual_conference_name_badge"
  """
 delete_virtual_conference_name_badge_by_pk(id: Int! ): virtual_conference_name_badge
  """
  delete data from the table: "virtual_conference_notification_preferences"
  """
 delete_virtual_conference_notification_preferences("""filter the rows which have to be deleted"""
where: virtual_conference_notification_preferences_bool_exp! ): virtual_conference_notification_preferences_mutation_response
  """
  delete single row from the table: "virtual_conference_notification_preferences"
  """
 delete_virtual_conference_notification_preferences_by_pk(id: Int! ): virtual_conference_notification_preferences
  """
  delete data from the table: "virtual_conference_page_views"
  """
 delete_virtual_conference_page_views("""filter the rows which have to be deleted"""
where: virtual_conference_page_views_bool_exp! ): virtual_conference_page_views_mutation_response
  """
  delete single row from the table: "virtual_conference_page_views"
  """
 delete_virtual_conference_page_views_by_pk(id: uuid! ): virtual_conference_page_views
  """
  delete data from the table: "virtual_conference_poster_views"
  """
 delete_virtual_conference_poster_views("""filter the rows which have to be deleted"""
where: virtual_conference_poster_views_bool_exp! ): virtual_conference_poster_views_mutation_response
  """
  delete single row from the table: "virtual_conference_poster_views"
  """
 delete_virtual_conference_poster_views_by_pk(id: Int! ): virtual_conference_poster_views
  """
  delete data from the table: "virtual_conference_requests"
  """
 delete_virtual_conference_requests("""filter the rows which have to be deleted"""
where: virtual_conference_requests_bool_exp! ): virtual_conference_requests_mutation_response
  """
  delete single row from the table: "virtual_conference_requests"
  """
 delete_virtual_conference_requests_by_pk(id: Int! ): virtual_conference_requests
  """
  delete data from the table: "virtual_conference_saved_badges"
  """
 delete_virtual_conference_saved_badges("""filter the rows which have to be deleted"""
where: virtual_conference_saved_badges_bool_exp! ): virtual_conference_saved_badges_mutation_response
  """
  delete single row from the table: "virtual_conference_saved_badges"
  """
 delete_virtual_conference_saved_badges_by_pk(id: Int! ): virtual_conference_saved_badges
  """
  delete data from the table: "virtual_conference_session_bookmarks"
  """
 delete_virtual_conference_session_bookmarks("""filter the rows which have to be deleted"""
where: virtual_conference_session_bookmarks_bool_exp! ): virtual_conference_session_bookmarks_mutation_response
  """
  delete single row from the table: "virtual_conference_session_bookmarks"
  """
 delete_virtual_conference_session_bookmarks_by_pk(id: Int! ): virtual_conference_session_bookmarks
  """
  delete data from the table: "virtual_conference_session_views"
  """
 delete_virtual_conference_session_views("""filter the rows which have to be deleted"""
where: virtual_conference_session_views_bool_exp! ): virtual_conference_session_views_mutation_response
  """
  delete single row from the table: "virtual_conference_session_views"
  """
 delete_virtual_conference_session_views_by_pk(id: Int! ): virtual_conference_session_views
  """
  delete data from the table: "virtual_conference_sessions"
  """
 delete_virtual_conference_sessions("""filter the rows which have to be deleted"""
where: virtual_conference_sessions_bool_exp! ): virtual_conference_sessions_mutation_response
  """
  delete single row from the table: "virtual_conference_sessions"
  """
 delete_virtual_conference_sessions_by_pk(id: uuid! ): virtual_conference_sessions
  """
  delete data from the table: "virtual_conference_submission_bookmarks"
  """
 delete_virtual_conference_submission_bookmarks("""filter the rows which have to be deleted"""
where: virtual_conference_submission_bookmarks_bool_exp! ): virtual_conference_submission_bookmarks_mutation_response
  """
  delete single row from the table: "virtual_conference_submission_bookmarks"
  """
 delete_virtual_conference_submission_bookmarks_by_pk(id: uuid! ): virtual_conference_submission_bookmarks
  """
  delete data from the table: "virtual_conference_submission_views"
  """
 delete_virtual_conference_submission_views("""filter the rows which have to be deleted"""
where: virtual_conference_submission_views_bool_exp! ): virtual_conference_submission_views_mutation_response
  """
  delete single row from the table: "virtual_conference_submission_views"
  """
 delete_virtual_conference_submission_views_by_pk(id: Int! ): virtual_conference_submission_views
  """
  delete data from the table: "virtual_conference_symposium_views"
  """
 delete_virtual_conference_symposium_views("""filter the rows which have to be deleted"""
where: virtual_conference_symposium_views_bool_exp! ): virtual_conference_symposium_views_mutation_response
  """
  delete single row from the table: "virtual_conference_symposium_views"
  """
 delete_virtual_conference_symposium_views_by_pk(id: Int! ): virtual_conference_symposium_views
  """
  delete data from the table: "virtual_conference_user_heartbeats"
  """
 delete_virtual_conference_user_heartbeats("""filter the rows which have to be deleted"""
where: virtual_conference_user_heartbeats_bool_exp! ): virtual_conference_user_heartbeats_mutation_response
  """
  delete single row from the table: "virtual_conference_user_heartbeats"
  """
 delete_virtual_conference_user_heartbeats_by_pk(id: Int! ): virtual_conference_user_heartbeats
  """
  delete data from the table: "virtual_conference_user_interests"
  """
 delete_virtual_conference_user_interests("""filter the rows which have to be deleted"""
where: virtual_conference_user_interests_bool_exp! ): virtual_conference_user_interests_mutation_response
  """
  delete single row from the table: "virtual_conference_user_interests"
  """
 delete_virtual_conference_user_interests_by_pk(id: Int! ): virtual_conference_user_interests
  """
  delete data from the table: "virtual_conference_user_notifications_last_emailed"
  """
 delete_virtual_conference_user_notifications_last_emailed("""filter the rows which have to be deleted"""
where: virtual_conference_user_notifications_last_emailed_bool_exp! ): virtual_conference_user_notifications_last_emailed_mutation_response
  """
  delete single row from the table: "virtual_conference_user_notifications_last_emailed"
  """
 delete_virtual_conference_user_notifications_last_emailed_by_pk(id: Int! ): virtual_conference_user_notifications_last_emailed
  """
  delete data from the table: "walkthrough_metrics"
  """
 delete_walkthrough_metrics("""filter the rows which have to be deleted"""
where: walkthrough_metrics_bool_exp! ): walkthrough_metrics_mutation_response
  """
  delete single row from the table: "walkthrough_metrics"
  """
 delete_walkthrough_metrics_by_pk(id: Int! ): walkthrough_metrics
  """
  delete data from the table: "zoom_users_cache"
  """
 delete_zoom_users_cache("""filter the rows which have to be deleted"""
where: zoom_users_cache_bool_exp! ): zoom_users_cache_mutation_response
  """
  delete single row from the table: "zoom_users_cache"
  """
 delete_zoom_users_cache_by_pk(id: Int! ): zoom_users_cache
  """Submit individual attendee forms"""
 dr_attendee_submit(attendee: DrAttendeeSubmit! ): DrAttendeeSubmitOutput! 
   dr_authorize_register(input: DrAuthorizeRegister! ): DrAuthorizeRegisterOutput! 
   dr_authorize_unregister: DrAuthorizeUnregisterOutput! 
   dr_authorize_webhook(webhook: DrAuthorizeWebhook! ): DrAuthorizeWebhookOutput! 
   dr_change_attendee_owner(input: DrChangeAttendeeOwner! ): DrChangedAttendeeOwner! 
   dr_offline_payment(order_id: String! ): DrOfflinePaymentOutput! 
   dr_paypal_confirm(input: DrPaypalConfirm! ): DrPaypalConfirmOutput! 
  """
  Checks and updates PayPal partner setups - either for a single event if x-hasura-event-id exists, or all paypal events otherwise
  """
 dr_paypal_partner_check: DrPayPalPartnerCheckOutput! 
   dr_register(attendees: [DrAttendee! ]! , coupon: DrCoupon, marketing_campaign_id: String, offline_payment: Boolean! , payer_address: String, payer_business_name: String, payer_name: String, payer_tax_number: String, to_pay_email: String): DrRegisterOutput! 
   dr_register_stripe_invoice_link(input: DrInvoiceLink! ): InvoiceLinkOutput! 
  """dr_send_cancelled_attendee_email"""
 dr_send_cancelled_attendee_email(attendee: String! ): DrSendCancelledTicketEmailOutput! 
   dr_service_fee_charge(event_id: Int! ): ServiceFeeChargeOutput! 
   dr_stripe_delayed_payment_add_card(session_id: String! ): CardData! 
   dr_stripe_delayed_payment_remove_card: DrStripeRemovedCard! 
   dr_stripe_refund(refund: DrRefund! ): DrRefundOutput! 
   dr_stripe_register_account(code: String! ): DrStripeRegisterAccountOutput! 
   dr_stripe_unregister_account: DrStripeUnregisterAccountOutput! 
   dr_stripe_webhook(webhook: DrStripeWebhook! ): DrStripeWebhookOutput! 
  """generate_file_upload_url"""
 generate_file_upload_url(file: GenerateFileUploadUrlFile! ): GenerateFileUploadUrlOutput! 
   generate_html_to_pdf_download(file_name_prefix: String! , html: String! ): PdfToDownload! 
  """
  insert data into the table: "affiliation_versions"
  """
 insert_affiliation_versions("""the rows to be inserted"""
objects: [affiliation_versions_insert_input! ]! , """upsert condition"""
on_conflict: affiliation_versions_on_conflict): affiliation_versions_mutation_response
  """
  insert a single row into the table: "affiliation_versions"
  """
 insert_affiliation_versions_one("""the row to be inserted"""
object: affiliation_versions_insert_input! , """upsert condition"""
on_conflict: affiliation_versions_on_conflict): affiliation_versions
  """
  insert data into the table: "affiliations"
  """
 insert_affiliations("""the rows to be inserted"""
objects: [affiliations_insert_input! ]! , """upsert condition"""
on_conflict: affiliations_on_conflict): affiliations_mutation_response
  """
  insert a single row into the table: "affiliations"
  """
 insert_affiliations_one("""the row to be inserted"""
object: affiliations_insert_input! , """upsert condition"""
on_conflict: affiliations_on_conflict): affiliations
  """
  insert data into the table: "allowed_submitters"
  """
 insert_allowed_submitters("""the rows to be inserted"""
objects: [allowed_submitters_insert_input! ]! , """upsert condition"""
on_conflict: allowed_submitters_on_conflict): allowed_submitters_mutation_response
  """
  insert a single row into the table: "allowed_submitters"
  """
 insert_allowed_submitters_one("""the row to be inserted"""
object: allowed_submitters_insert_input! , """upsert condition"""
on_conflict: allowed_submitters_on_conflict): allowed_submitters
  """
  insert data into the table: "api_keys"
  """
 insert_api_keys("""the rows to be inserted"""
objects: [api_keys_insert_input! ]! , """upsert condition"""
on_conflict: api_keys_on_conflict): api_keys_mutation_response
  """
  insert a single row into the table: "api_keys"
  """
 insert_api_keys_one("""the row to be inserted"""
object: api_keys_insert_input! , """upsert condition"""
on_conflict: api_keys_on_conflict): api_keys
  """
  insert data into the table: "author_field_response_versions"
  """
 insert_author_field_response_versions("""the rows to be inserted"""
objects: [author_field_response_versions_insert_input! ]! , """upsert condition"""
on_conflict: author_field_response_versions_on_conflict): author_field_response_versions_mutation_response
  """
  insert a single row into the table: "author_field_response_versions"
  """
 insert_author_field_response_versions_one("""the row to be inserted"""
object: author_field_response_versions_insert_input! , """upsert condition"""
on_conflict: author_field_response_versions_on_conflict): author_field_response_versions
  """
  insert data into the table: "author_field_responses"
  """
 insert_author_field_responses("""the rows to be inserted"""
objects: [author_field_responses_insert_input! ]! , """upsert condition"""
on_conflict: author_field_responses_on_conflict): author_field_responses_mutation_response
  """
  insert a single row into the table: "author_field_responses"
  """
 insert_author_field_responses_one("""the row to be inserted"""
object: author_field_responses_insert_input! , """upsert condition"""
on_conflict: author_field_responses_on_conflict): author_field_responses
  """
  insert data into the table: "author_fields"
  """
 insert_author_fields("""the rows to be inserted"""
objects: [author_fields_insert_input! ]! , """upsert condition"""
on_conflict: author_fields_on_conflict): author_fields_mutation_response
  """
  insert a single row into the table: "author_fields"
  """
 insert_author_fields_one("""the row to be inserted"""
object: author_fields_insert_input! , """upsert condition"""
on_conflict: author_fields_on_conflict): author_fields
  """
  insert data into the table: "author_versions"
  """
 insert_author_versions("""the rows to be inserted"""
objects: [author_versions_insert_input! ]! , """upsert condition"""
on_conflict: author_versions_on_conflict): author_versions_mutation_response
  """
  insert a single row into the table: "author_versions"
  """
 insert_author_versions_one("""the row to be inserted"""
object: author_versions_insert_input! , """upsert condition"""
on_conflict: author_versions_on_conflict): author_versions
  """
  insert data into the table: "authors"
  """
 insert_authors("""the rows to be inserted"""
objects: [authors_insert_input! ]! , """upsert condition"""
on_conflict: authors_on_conflict): authors_mutation_response
  """
  insert a single row into the table: "authors"
  """
 insert_authors_one("""the row to be inserted"""
object: authors_insert_input! , """upsert condition"""
on_conflict: authors_on_conflict): authors
  """
  insert data into the table: "browser_errors"
  """
 insert_browser_errors("""the rows to be inserted"""
objects: [browser_errors_insert_input! ]! , """upsert condition"""
on_conflict: browser_errors_on_conflict): browser_errors_mutation_response
  """
  insert a single row into the table: "browser_errors"
  """
 insert_browser_errors_one("""the row to be inserted"""
object: browser_errors_insert_input! , """upsert condition"""
on_conflict: browser_errors_on_conflict): browser_errors
  """
  insert data into the table: "categories"
  """
 insert_categories("""the rows to be inserted"""
objects: [categories_insert_input! ]! ): categories_mutation_response
  """
  insert a single row into the table: "categories"
  """
 insert_categories_one("""the row to be inserted"""
object: categories_insert_input! ): categories
  """
  insert data into the table: "clients"
  """
 insert_clients("""the rows to be inserted"""
objects: [clients_insert_input! ]! , """upsert condition"""
on_conflict: clients_on_conflict): clients_mutation_response
  """
  insert a single row into the table: "clients"
  """
 insert_clients_one("""the row to be inserted"""
object: clients_insert_input! , """upsert condition"""
on_conflict: clients_on_conflict): clients
  """
  insert data into the table: "clients_permissions"
  """
 insert_clients_permissions("""the rows to be inserted"""
objects: [clients_permissions_insert_input! ]! ): clients_permissions_mutation_response
  """
  insert a single row into the table: "clients_permissions"
  """
 insert_clients_permissions_one("""the row to be inserted"""
object: clients_permissions_insert_input! ): clients_permissions
  """
  insert data into the table: "combined_word_limits"
  """
 insert_combined_word_limits("""the rows to be inserted"""
objects: [combined_word_limits_insert_input! ]! , """upsert condition"""
on_conflict: combined_word_limits_on_conflict): combined_word_limits_mutation_response
  """
  insert a single row into the table: "combined_word_limits"
  """
 insert_combined_word_limits_one("""the row to be inserted"""
object: combined_word_limits_insert_input! , """upsert condition"""
on_conflict: combined_word_limits_on_conflict): combined_word_limits
  """
  insert data into the table: "custom_logs"
  """
 insert_custom_logs("""the rows to be inserted"""
objects: [custom_logs_insert_input! ]! , """upsert condition"""
on_conflict: custom_logs_on_conflict): custom_logs_mutation_response
  """
  insert a single row into the table: "custom_logs"
  """
 insert_custom_logs_one("""the row to be inserted"""
object: custom_logs_insert_input! , """upsert condition"""
on_conflict: custom_logs_on_conflict): custom_logs
  """
  insert data into the table: "decision_question_responses"
  """
 insert_decision_question_responses("""the rows to be inserted"""
objects: [decision_question_responses_insert_input! ]! , """upsert condition"""
on_conflict: decision_question_responses_on_conflict): decision_question_responses_mutation_response
  """
  insert a single row into the table: "decision_question_responses"
  """
 insert_decision_question_responses_one("""the row to be inserted"""
object: decision_question_responses_insert_input! , """upsert condition"""
on_conflict: decision_question_responses_on_conflict): decision_question_responses
  """
  insert data into the table: "decision_questions"
  """
 insert_decision_questions("""the rows to be inserted"""
objects: [decision_questions_insert_input! ]! , """upsert condition"""
on_conflict: decision_questions_on_conflict): decision_questions_mutation_response
  """
  insert a single row into the table: "decision_questions"
  """
 insert_decision_questions_one("""the row to be inserted"""
object: decision_questions_insert_input! , """upsert condition"""
on_conflict: decision_questions_on_conflict): decision_questions
  """
  insert data into the table: "decisions"
  """
 insert_decisions("""the rows to be inserted"""
objects: [decisions_insert_input! ]! , """upsert condition"""
on_conflict: decisions_on_conflict): decisions_mutation_response
  """
  insert a single row into the table: "decisions"
  """
 insert_decisions_one("""the row to be inserted"""
object: decisions_insert_input! , """upsert condition"""
on_conflict: decisions_on_conflict): decisions
  """
  insert data into the table: "default_questions"
  """
 insert_default_questions("""the rows to be inserted"""
objects: [default_questions_insert_input! ]! , """upsert condition"""
on_conflict: default_questions_on_conflict): default_questions_mutation_response
  """
  insert a single row into the table: "default_questions"
  """
 insert_default_questions_one("""the row to be inserted"""
object: default_questions_insert_input! , """upsert condition"""
on_conflict: default_questions_on_conflict): default_questions
  """
  insert data into the table: "delreg_question_responses"
  """
 insert_delreg_question_responses("""the rows to be inserted"""
objects: [delreg_question_responses_insert_input! ]! , """upsert condition"""
on_conflict: delreg_question_responses_on_conflict): delreg_question_responses_mutation_response
  """
  insert data into the table: "delreg_question_responses_multi"
  """
 insert_delreg_question_responses_multi("""the rows to be inserted"""
objects: [delreg_question_responses_multi_insert_input! ]! ): delreg_question_responses_multi_mutation_response
  """
  insert a single row into the table: "delreg_question_responses_multi"
  """
 insert_delreg_question_responses_multi_one("""the row to be inserted"""
object: delreg_question_responses_multi_insert_input! ): delreg_question_responses_multi
  """
  insert a single row into the table: "delreg_question_responses"
  """
 insert_delreg_question_responses_one("""the row to be inserted"""
object: delreg_question_responses_insert_input! , """upsert condition"""
on_conflict: delreg_question_responses_on_conflict): delreg_question_responses
  """
  insert data into the table: "delreg_questions"
  """
 insert_delreg_questions("""the rows to be inserted"""
objects: [delreg_questions_insert_input! ]! , """upsert condition"""
on_conflict: delreg_questions_on_conflict): delreg_questions_mutation_response
  """
  insert a single row into the table: "delreg_questions"
  """
 insert_delreg_questions_one("""the row to be inserted"""
object: delreg_questions_insert_input! , """upsert condition"""
on_conflict: delreg_questions_on_conflict): delreg_questions
  """
  insert data into the table: "delreg_registrations"
  """
 insert_delreg_registrations("""the rows to be inserted"""
objects: [delreg_registrations_insert_input! ]! , """upsert condition"""
on_conflict: delreg_registrations_on_conflict): delreg_registrations_mutation_response
  """
  insert a single row into the table: "delreg_registrations"
  """
 insert_delreg_registrations_one("""the row to be inserted"""
object: delreg_registrations_insert_input! , """upsert condition"""
on_conflict: delreg_registrations_on_conflict): delreg_registrations
  """
  insert data into the table: "delreg_ticket_headings"
  """
 insert_delreg_ticket_headings("""the rows to be inserted"""
objects: [delreg_ticket_headings_insert_input! ]! , """upsert condition"""
on_conflict: delreg_ticket_headings_on_conflict): delreg_ticket_headings_mutation_response
  """
  insert a single row into the table: "delreg_ticket_headings"
  """
 insert_delreg_ticket_headings_one("""the row to be inserted"""
object: delreg_ticket_headings_insert_input! , """upsert condition"""
on_conflict: delreg_ticket_headings_on_conflict): delreg_ticket_headings
  """
  insert data into the table: "delreg_tickets"
  """
 insert_delreg_tickets("""the rows to be inserted"""
objects: [delreg_tickets_insert_input! ]! , """upsert condition"""
on_conflict: delreg_tickets_on_conflict): delreg_tickets_mutation_response
  """
  insert a single row into the table: "delreg_tickets"
  """
 insert_delreg_tickets_one("""the row to be inserted"""
object: delreg_tickets_insert_input! , """upsert condition"""
on_conflict: delreg_tickets_on_conflict): delreg_tickets
  """
  insert data into the table: "dr_addon_coupons"
  """
 insert_dr_addon_coupons("""the rows to be inserted"""
objects: [dr_addon_coupons_insert_input! ]! , """upsert condition"""
on_conflict: dr_addon_coupons_on_conflict): dr_addon_coupons_mutation_response
  """
  insert a single row into the table: "dr_addon_coupons"
  """
 insert_dr_addon_coupons_one("""the row to be inserted"""
object: dr_addon_coupons_insert_input! , """upsert condition"""
on_conflict: dr_addon_coupons_on_conflict): dr_addon_coupons
  """
  insert data into the table: "dr_addon_questions"
  """
 insert_dr_addon_questions("""the rows to be inserted"""
objects: [dr_addon_questions_insert_input! ]! , """upsert condition"""
on_conflict: dr_addon_questions_on_conflict): dr_addon_questions_mutation_response
  """
  insert a single row into the table: "dr_addon_questions"
  """
 insert_dr_addon_questions_one("""the row to be inserted"""
object: dr_addon_questions_insert_input! , """upsert condition"""
on_conflict: dr_addon_questions_on_conflict): dr_addon_questions
  """
  insert data into the table: "dr_addon_tax_rules"
  """
 insert_dr_addon_tax_rules("""the rows to be inserted"""
objects: [dr_addon_tax_rules_insert_input! ]! , """upsert condition"""
on_conflict: dr_addon_tax_rules_on_conflict): dr_addon_tax_rules_mutation_response
  """
  insert a single row into the table: "dr_addon_tax_rules"
  """
 insert_dr_addon_tax_rules_one("""the row to be inserted"""
object: dr_addon_tax_rules_insert_input! , """upsert condition"""
on_conflict: dr_addon_tax_rules_on_conflict): dr_addon_tax_rules
  """
  insert data into the table: "dr_addons"
  """
 insert_dr_addons("""the rows to be inserted"""
objects: [dr_addons_insert_input! ]! , """upsert condition"""
on_conflict: dr_addons_on_conflict): dr_addons_mutation_response
  """
  insert a single row into the table: "dr_addons"
  """
 insert_dr_addons_one("""the row to be inserted"""
object: dr_addons_insert_input! , """upsert condition"""
on_conflict: dr_addons_on_conflict): dr_addons
  """
  insert data into the table: "dr_analytics_event_types"
  """
 insert_dr_analytics_event_types("""the rows to be inserted"""
objects: [dr_analytics_event_types_insert_input! ]! , """upsert condition"""
on_conflict: dr_analytics_event_types_on_conflict): dr_analytics_event_types_mutation_response
  """
  insert a single row into the table: "dr_analytics_event_types"
  """
 insert_dr_analytics_event_types_one("""the row to be inserted"""
object: dr_analytics_event_types_insert_input! , """upsert condition"""
on_conflict: dr_analytics_event_types_on_conflict): dr_analytics_event_types
  """
  insert data into the table: "dr_analytics_events"
  """
 insert_dr_analytics_events("""the rows to be inserted"""
objects: [dr_analytics_events_insert_input! ]! , """upsert condition"""
on_conflict: dr_analytics_events_on_conflict): dr_analytics_events_mutation_response
  """
  insert a single row into the table: "dr_analytics_events"
  """
 insert_dr_analytics_events_one("""the row to be inserted"""
object: dr_analytics_events_insert_input! , """upsert condition"""
on_conflict: dr_analytics_events_on_conflict): dr_analytics_events
  """
  insert data into the table: "dr_attendee_addon_tax_rules"
  """
 insert_dr_attendee_addon_tax_rules("""the rows to be inserted"""
objects: [dr_attendee_addon_tax_rules_insert_input! ]! , """upsert condition"""
on_conflict: dr_attendee_addon_tax_rules_on_conflict): dr_attendee_addon_tax_rules_mutation_response
  """
  insert a single row into the table: "dr_attendee_addon_tax_rules"
  """
 insert_dr_attendee_addon_tax_rules_one("""the row to be inserted"""
object: dr_attendee_addon_tax_rules_insert_input! , """upsert condition"""
on_conflict: dr_attendee_addon_tax_rules_on_conflict): dr_attendee_addon_tax_rules
  """
  insert data into the table: "dr_attendee_addons"
  """
 insert_dr_attendee_addons("""the rows to be inserted"""
objects: [dr_attendee_addons_insert_input! ]! , """upsert condition"""
on_conflict: dr_attendee_addons_on_conflict): dr_attendee_addons_mutation_response
  """
  insert a single row into the table: "dr_attendee_addons"
  """
 insert_dr_attendee_addons_one("""the row to be inserted"""
object: dr_attendee_addons_insert_input! , """upsert condition"""
on_conflict: dr_attendee_addons_on_conflict): dr_attendee_addons
  """
  insert data into the table: "dr_attendee_question_response_options"
  """
 insert_dr_attendee_question_response_options("""the rows to be inserted"""
objects: [dr_attendee_question_response_options_insert_input! ]! , """upsert condition"""
on_conflict: dr_attendee_question_response_options_on_conflict): dr_attendee_question_response_options_mutation_response
  """
  insert a single row into the table: "dr_attendee_question_response_options"
  """
 insert_dr_attendee_question_response_options_one("""the row to be inserted"""
object: dr_attendee_question_response_options_insert_input! , """upsert condition"""
on_conflict: dr_attendee_question_response_options_on_conflict): dr_attendee_question_response_options
  """
  insert data into the table: "dr_attendee_question_responses"
  """
 insert_dr_attendee_question_responses("""the rows to be inserted"""
objects: [dr_attendee_question_responses_insert_input! ]! , """upsert condition"""
on_conflict: dr_attendee_question_responses_on_conflict): dr_attendee_question_responses_mutation_response
  """
  insert a single row into the table: "dr_attendee_question_responses"
  """
 insert_dr_attendee_question_responses_one("""the row to be inserted"""
object: dr_attendee_question_responses_insert_input! , """upsert condition"""
on_conflict: dr_attendee_question_responses_on_conflict): dr_attendee_question_responses
  """
  insert data into the table: "dr_attendee_ticket_tax_rules"
  """
 insert_dr_attendee_ticket_tax_rules("""the rows to be inserted"""
objects: [dr_attendee_ticket_tax_rules_insert_input! ]! , """upsert condition"""
on_conflict: dr_attendee_ticket_tax_rules_on_conflict): dr_attendee_ticket_tax_rules_mutation_response
  """
  insert a single row into the table: "dr_attendee_ticket_tax_rules"
  """
 insert_dr_attendee_ticket_tax_rules_one("""the row to be inserted"""
object: dr_attendee_ticket_tax_rules_insert_input! , """upsert condition"""
on_conflict: dr_attendee_ticket_tax_rules_on_conflict): dr_attendee_ticket_tax_rules
  """
  insert data into the table: "dr_attendee_tickets"
  """
 insert_dr_attendee_tickets("""the rows to be inserted"""
objects: [dr_attendee_tickets_insert_input! ]! , """upsert condition"""
on_conflict: dr_attendee_tickets_on_conflict): dr_attendee_tickets_mutation_response
  """
  insert a single row into the table: "dr_attendee_tickets"
  """
 insert_dr_attendee_tickets_one("""the row to be inserted"""
object: dr_attendee_tickets_insert_input! , """upsert condition"""
on_conflict: dr_attendee_tickets_on_conflict): dr_attendee_tickets
  """
  insert data into the table: "dr_attendees"
  """
 insert_dr_attendees("""the rows to be inserted"""
objects: [dr_attendees_insert_input! ]! , """upsert condition"""
on_conflict: dr_attendees_on_conflict): dr_attendees_mutation_response
  """
  insert a single row into the table: "dr_attendees"
  """
 insert_dr_attendees_one("""the row to be inserted"""
object: dr_attendees_insert_input! , """upsert condition"""
on_conflict: dr_attendees_on_conflict): dr_attendees
  """
  insert data into the table: "dr_authorize_webhooks"
  """
 insert_dr_authorize_webhooks("""the rows to be inserted"""
objects: [dr_authorize_webhooks_insert_input! ]! , """upsert condition"""
on_conflict: dr_authorize_webhooks_on_conflict): dr_authorize_webhooks_mutation_response
  """
  insert a single row into the table: "dr_authorize_webhooks"
  """
 insert_dr_authorize_webhooks_one("""the row to be inserted"""
object: dr_authorize_webhooks_insert_input! , """upsert condition"""
on_conflict: dr_authorize_webhooks_on_conflict): dr_authorize_webhooks
  """
  insert data into the table: "dr_coupon_discount_type"
  """
 insert_dr_coupon_discount_type("""the rows to be inserted"""
objects: [dr_coupon_discount_type_insert_input! ]! , """upsert condition"""
on_conflict: dr_coupon_discount_type_on_conflict): dr_coupon_discount_type_mutation_response
  """
  insert a single row into the table: "dr_coupon_discount_type"
  """
 insert_dr_coupon_discount_type_one("""the row to be inserted"""
object: dr_coupon_discount_type_insert_input! , """upsert condition"""
on_conflict: dr_coupon_discount_type_on_conflict): dr_coupon_discount_type
  """
  insert data into the table: "dr_coupons"
  """
 insert_dr_coupons("""the rows to be inserted"""
objects: [dr_coupons_insert_input! ]! , """upsert condition"""
on_conflict: dr_coupons_on_conflict): dr_coupons_mutation_response
  """
  insert a single row into the table: "dr_coupons"
  """
 insert_dr_coupons_one("""the row to be inserted"""
object: dr_coupons_insert_input! , """upsert condition"""
on_conflict: dr_coupons_on_conflict): dr_coupons
  """
  insert data into the table: "dr_currencies"
  """
 insert_dr_currencies("""the rows to be inserted"""
objects: [dr_currencies_insert_input! ]! , """upsert condition"""
on_conflict: dr_currencies_on_conflict): dr_currencies_mutation_response
  """
  insert a single row into the table: "dr_currencies"
  """
 insert_dr_currencies_one("""the row to be inserted"""
object: dr_currencies_insert_input! , """upsert condition"""
on_conflict: dr_currencies_on_conflict): dr_currencies
  """
  insert data into the table: "dr_event_details"
  """
 insert_dr_event_details("""the rows to be inserted"""
objects: [dr_event_details_insert_input! ]! , """upsert condition"""
on_conflict: dr_event_details_on_conflict): dr_event_details_mutation_response
  """
  insert a single row into the table: "dr_event_details"
  """
 insert_dr_event_details_one("""the row to be inserted"""
object: dr_event_details_insert_input! , """upsert condition"""
on_conflict: dr_event_details_on_conflict): dr_event_details
  """
  insert data into the table: "dr_group_questions"
  """
 insert_dr_group_questions("""the rows to be inserted"""
objects: [dr_group_questions_insert_input! ]! , """upsert condition"""
on_conflict: dr_group_questions_on_conflict): dr_group_questions_mutation_response
  """
  insert a single row into the table: "dr_group_questions"
  """
 insert_dr_group_questions_one("""the row to be inserted"""
object: dr_group_questions_insert_input! , """upsert condition"""
on_conflict: dr_group_questions_on_conflict): dr_group_questions
  """
  insert data into the table: "dr_invoice_setup"
  """
 insert_dr_invoice_setup("""the rows to be inserted"""
objects: [dr_invoice_setup_insert_input! ]! , """upsert condition"""
on_conflict: dr_invoice_setup_on_conflict): dr_invoice_setup_mutation_response
  """
  insert a single row into the table: "dr_invoice_setup"
  """
 insert_dr_invoice_setup_one("""the row to be inserted"""
object: dr_invoice_setup_insert_input! , """upsert condition"""
on_conflict: dr_invoice_setup_on_conflict): dr_invoice_setup
  """
  insert data into the table: "dr_line_item_statuses"
  """
 insert_dr_line_item_statuses("""the rows to be inserted"""
objects: [dr_line_item_statuses_insert_input! ]! , """upsert condition"""
on_conflict: dr_line_item_statuses_on_conflict): dr_line_item_statuses_mutation_response
  """
  insert a single row into the table: "dr_line_item_statuses"
  """
 insert_dr_line_item_statuses_one("""the row to be inserted"""
object: dr_line_item_statuses_insert_input! , """upsert condition"""
on_conflict: dr_line_item_statuses_on_conflict): dr_line_item_statuses
  """
  insert data into the table: "dr_marketing_campaigns"
  """
 insert_dr_marketing_campaigns("""the rows to be inserted"""
objects: [dr_marketing_campaigns_insert_input! ]! , """upsert condition"""
on_conflict: dr_marketing_campaigns_on_conflict): dr_marketing_campaigns_mutation_response
  """
  insert a single row into the table: "dr_marketing_campaigns"
  """
 insert_dr_marketing_campaigns_one("""the row to be inserted"""
object: dr_marketing_campaigns_insert_input! , """upsert condition"""
on_conflict: dr_marketing_campaigns_on_conflict): dr_marketing_campaigns
  """
  insert data into the table: "dr_offline_payments_setup"
  """
 insert_dr_offline_payments_setup("""the rows to be inserted"""
objects: [dr_offline_payments_setup_insert_input! ]! , """upsert condition"""
on_conflict: dr_offline_payments_setup_on_conflict): dr_offline_payments_setup_mutation_response
  """
  insert a single row into the table: "dr_offline_payments_setup"
  """
 insert_dr_offline_payments_setup_one("""the row to be inserted"""
object: dr_offline_payments_setup_insert_input! , """upsert condition"""
on_conflict: dr_offline_payments_setup_on_conflict): dr_offline_payments_setup
  """
  insert data into the table: "dr_order_payment_type"
  """
 insert_dr_order_payment_type("""the rows to be inserted"""
objects: [dr_order_payment_type_insert_input! ]! , """upsert condition"""
on_conflict: dr_order_payment_type_on_conflict): dr_order_payment_type_mutation_response
  """
  insert a single row into the table: "dr_order_payment_type"
  """
 insert_dr_order_payment_type_one("""the row to be inserted"""
object: dr_order_payment_type_insert_input! , """upsert condition"""
on_conflict: dr_order_payment_type_on_conflict): dr_order_payment_type
  """
  insert data into the table: "dr_orders"
  """
 insert_dr_orders("""the rows to be inserted"""
objects: [dr_orders_insert_input! ]! , """upsert condition"""
on_conflict: dr_orders_on_conflict): dr_orders_mutation_response
  """
  insert a single row into the table: "dr_orders"
  """
 insert_dr_orders_one("""the row to be inserted"""
object: dr_orders_insert_input! , """upsert condition"""
on_conflict: dr_orders_on_conflict): dr_orders
  """
  insert data into the table: "dr_paypal_setup"
  """
 insert_dr_paypal_setup("""the rows to be inserted"""
objects: [dr_paypal_setup_insert_input! ]! , """upsert condition"""
on_conflict: dr_paypal_setup_on_conflict): dr_paypal_setup_mutation_response
  """
  insert a single row into the table: "dr_paypal_setup"
  """
 insert_dr_paypal_setup_one("""the row to be inserted"""
object: dr_paypal_setup_insert_input! , """upsert condition"""
on_conflict: dr_paypal_setup_on_conflict): dr_paypal_setup
  """
  insert data into the table: "dr_question_dependencies"
  """
 insert_dr_question_dependencies("""the rows to be inserted"""
objects: [dr_question_dependencies_insert_input! ]! , """upsert condition"""
on_conflict: dr_question_dependencies_on_conflict): dr_question_dependencies_mutation_response
  """
  insert a single row into the table: "dr_question_dependencies"
  """
 insert_dr_question_dependencies_one("""the row to be inserted"""
object: dr_question_dependencies_insert_input! , """upsert condition"""
on_conflict: dr_question_dependencies_on_conflict): dr_question_dependencies
  """
  insert data into the table: "dr_question_options"
  """
 insert_dr_question_options("""the rows to be inserted"""
objects: [dr_question_options_insert_input! ]! , """upsert condition"""
on_conflict: dr_question_options_on_conflict): dr_question_options_mutation_response
  """
  insert a single row into the table: "dr_question_options"
  """
 insert_dr_question_options_one("""the row to be inserted"""
object: dr_question_options_insert_input! , """upsert condition"""
on_conflict: dr_question_options_on_conflict): dr_question_options
  """
  insert data into the table: "dr_question_types"
  """
 insert_dr_question_types("""the rows to be inserted"""
objects: [dr_question_types_insert_input! ]! , """upsert condition"""
on_conflict: dr_question_types_on_conflict): dr_question_types_mutation_response
  """
  insert a single row into the table: "dr_question_types"
  """
 insert_dr_question_types_one("""the row to be inserted"""
object: dr_question_types_insert_input! , """upsert condition"""
on_conflict: dr_question_types_on_conflict): dr_question_types
  """
  insert data into the table: "dr_questions"
  """
 insert_dr_questions("""the rows to be inserted"""
objects: [dr_questions_insert_input! ]! , """upsert condition"""
on_conflict: dr_questions_on_conflict): dr_questions_mutation_response
  """
  insert a single row into the table: "dr_questions"
  """
 insert_dr_questions_one("""the row to be inserted"""
object: dr_questions_insert_input! , """upsert condition"""
on_conflict: dr_questions_on_conflict): dr_questions
  """
  insert data into the table: "dr_service_fee_charges"
  """
 insert_dr_service_fee_charges("""the rows to be inserted"""
objects: [dr_service_fee_charges_insert_input! ]! , """upsert condition"""
on_conflict: dr_service_fee_charges_on_conflict): dr_service_fee_charges_mutation_response
  """
  insert a single row into the table: "dr_service_fee_charges"
  """
 insert_dr_service_fee_charges_one("""the row to be inserted"""
object: dr_service_fee_charges_insert_input! , """upsert condition"""
on_conflict: dr_service_fee_charges_on_conflict): dr_service_fee_charges
  """
  insert data into the table: "dr_stripe_delayed_payments_customer"
  """
 insert_dr_stripe_delayed_payments_customer("""the rows to be inserted"""
objects: [dr_stripe_delayed_payments_customer_insert_input! ]! , """upsert condition"""
on_conflict: dr_stripe_delayed_payments_customer_on_conflict): dr_stripe_delayed_payments_customer_mutation_response
  """
  insert a single row into the table: "dr_stripe_delayed_payments_customer"
  """
 insert_dr_stripe_delayed_payments_customer_one("""the row to be inserted"""
object: dr_stripe_delayed_payments_customer_insert_input! , """upsert condition"""
on_conflict: dr_stripe_delayed_payments_customer_on_conflict): dr_stripe_delayed_payments_customer
  """
  insert data into the table: "dr_stripe_webhooks"
  """
 insert_dr_stripe_webhooks("""the rows to be inserted"""
objects: [dr_stripe_webhooks_insert_input! ]! , """upsert condition"""
on_conflict: dr_stripe_webhooks_on_conflict): dr_stripe_webhooks_mutation_response
  """
  insert a single row into the table: "dr_stripe_webhooks"
  """
 insert_dr_stripe_webhooks_one("""the row to be inserted"""
object: dr_stripe_webhooks_insert_input! , """upsert condition"""
on_conflict: dr_stripe_webhooks_on_conflict): dr_stripe_webhooks
  """
  insert data into the table: "dr_tax_rules"
  """
 insert_dr_tax_rules("""the rows to be inserted"""
objects: [dr_tax_rules_insert_input! ]! , """upsert condition"""
on_conflict: dr_tax_rules_on_conflict): dr_tax_rules_mutation_response
  """
  insert a single row into the table: "dr_tax_rules"
  """
 insert_dr_tax_rules_one("""the row to be inserted"""
object: dr_tax_rules_insert_input! , """upsert condition"""
on_conflict: dr_tax_rules_on_conflict): dr_tax_rules
  """
  insert data into the table: "dr_ticket_addons"
  """
 insert_dr_ticket_addons("""the rows to be inserted"""
objects: [dr_ticket_addons_insert_input! ]! , """upsert condition"""
on_conflict: dr_ticket_addons_on_conflict): dr_ticket_addons_mutation_response
  """
  insert a single row into the table: "dr_ticket_addons"
  """
 insert_dr_ticket_addons_one("""the row to be inserted"""
object: dr_ticket_addons_insert_input! , """upsert condition"""
on_conflict: dr_ticket_addons_on_conflict): dr_ticket_addons
  """
  insert data into the table: "dr_ticket_coupons"
  """
 insert_dr_ticket_coupons("""the rows to be inserted"""
objects: [dr_ticket_coupons_insert_input! ]! , """upsert condition"""
on_conflict: dr_ticket_coupons_on_conflict): dr_ticket_coupons_mutation_response
  """
  insert a single row into the table: "dr_ticket_coupons"
  """
 insert_dr_ticket_coupons_one("""the row to be inserted"""
object: dr_ticket_coupons_insert_input! , """upsert condition"""
on_conflict: dr_ticket_coupons_on_conflict): dr_ticket_coupons
  """
  insert data into the table: "dr_ticket_groups"
  """
 insert_dr_ticket_groups("""the rows to be inserted"""
objects: [dr_ticket_groups_insert_input! ]! , """upsert condition"""
on_conflict: dr_ticket_groups_on_conflict): dr_ticket_groups_mutation_response
  """
  insert a single row into the table: "dr_ticket_groups"
  """
 insert_dr_ticket_groups_one("""the row to be inserted"""
object: dr_ticket_groups_insert_input! , """upsert condition"""
on_conflict: dr_ticket_groups_on_conflict): dr_ticket_groups
  """
  insert data into the table: "dr_ticket_groups_ungrouped_order"
  """
 insert_dr_ticket_groups_ungrouped_order("""the rows to be inserted"""
objects: [dr_ticket_groups_ungrouped_order_insert_input! ]! , """upsert condition"""
on_conflict: dr_ticket_groups_ungrouped_order_on_conflict): dr_ticket_groups_ungrouped_order_mutation_response
  """
  insert a single row into the table: "dr_ticket_groups_ungrouped_order"
  """
 insert_dr_ticket_groups_ungrouped_order_one("""the row to be inserted"""
object: dr_ticket_groups_ungrouped_order_insert_input! , """upsert condition"""
on_conflict: dr_ticket_groups_ungrouped_order_on_conflict): dr_ticket_groups_ungrouped_order
  """
  insert data into the table: "dr_ticket_tax_rules"
  """
 insert_dr_ticket_tax_rules("""the rows to be inserted"""
objects: [dr_ticket_tax_rules_insert_input! ]! , """upsert condition"""
on_conflict: dr_ticket_tax_rules_on_conflict): dr_ticket_tax_rules_mutation_response
  """
  insert a single row into the table: "dr_ticket_tax_rules"
  """
 insert_dr_ticket_tax_rules_one("""the row to be inserted"""
object: dr_ticket_tax_rules_insert_input! , """upsert condition"""
on_conflict: dr_ticket_tax_rules_on_conflict): dr_ticket_tax_rules
  """
  insert data into the table: "dr_tickets"
  """
 insert_dr_tickets("""the rows to be inserted"""
objects: [dr_tickets_insert_input! ]! , """upsert condition"""
on_conflict: dr_tickets_on_conflict): dr_tickets_mutation_response
  """
  insert a single row into the table: "dr_tickets"
  """
 insert_dr_tickets_one("""the row to be inserted"""
object: dr_tickets_insert_input! , """upsert condition"""
on_conflict: dr_tickets_on_conflict): dr_tickets
  """
  insert data into the table: "dr_tickets_view"
  """
 insert_dr_tickets_view("""the rows to be inserted"""
objects: [dr_tickets_view_insert_input! ]! ): dr_tickets_view_mutation_response
  """
  insert a single row into the table: "dr_tickets_view"
  """
 insert_dr_tickets_view_one("""the row to be inserted"""
object: dr_tickets_view_insert_input! ): dr_tickets_view
  """
  insert data into the table: "dr_transaction_types"
  """
 insert_dr_transaction_types("""the rows to be inserted"""
objects: [dr_transaction_types_insert_input! ]! , """upsert condition"""
on_conflict: dr_transaction_types_on_conflict): dr_transaction_types_mutation_response
  """
  insert a single row into the table: "dr_transaction_types"
  """
 insert_dr_transaction_types_one("""the row to be inserted"""
object: dr_transaction_types_insert_input! , """upsert condition"""
on_conflict: dr_transaction_types_on_conflict): dr_transaction_types
  """
  insert data into the table: "dr_transactions"
  """
 insert_dr_transactions("""the rows to be inserted"""
objects: [dr_transactions_insert_input! ]! , """upsert condition"""
on_conflict: dr_transactions_on_conflict): dr_transactions_mutation_response
  """
  insert a single row into the table: "dr_transactions"
  """
 insert_dr_transactions_one("""the row to be inserted"""
object: dr_transactions_insert_input! , """upsert condition"""
on_conflict: dr_transactions_on_conflict): dr_transactions
  """
  insert data into the table: "dr_vat_address"
  """
 insert_dr_vat_address("""the rows to be inserted"""
objects: [dr_vat_address_insert_input! ]! , """upsert condition"""
on_conflict: dr_vat_address_on_conflict): dr_vat_address_mutation_response
  """
  insert a single row into the table: "dr_vat_address"
  """
 insert_dr_vat_address_one("""the row to be inserted"""
object: dr_vat_address_insert_input! , """upsert condition"""
on_conflict: dr_vat_address_on_conflict): dr_vat_address
  """
  insert data into the table: "errors"
  """
 insert_errors("""the rows to be inserted"""
objects: [errors_insert_input! ]! , """upsert condition"""
on_conflict: errors_on_conflict): errors_mutation_response
  """
  insert a single row into the table: "errors"
  """
 insert_errors_one("""the row to be inserted"""
object: errors_insert_input! , """upsert condition"""
on_conflict: errors_on_conflict): errors
  """
  insert data into the table: "event_acceptance_types"
  """
 insert_event_acceptance_types("""the rows to be inserted"""
objects: [event_acceptance_types_insert_input! ]! , """upsert condition"""
on_conflict: event_acceptance_types_on_conflict): event_acceptance_types_mutation_response
  """
  insert a single row into the table: "event_acceptance_types"
  """
 insert_event_acceptance_types_one("""the row to be inserted"""
object: event_acceptance_types_insert_input! , """upsert condition"""
on_conflict: event_acceptance_types_on_conflict): event_acceptance_types
  """
  insert data into the table: "event_emails"
  """
 insert_event_emails("""the rows to be inserted"""
objects: [event_emails_insert_input! ]! , """upsert condition"""
on_conflict: event_emails_on_conflict): event_emails_mutation_response
  """
  insert a single row into the table: "event_emails"
  """
 insert_event_emails_one("""the row to be inserted"""
object: event_emails_insert_input! , """upsert condition"""
on_conflict: event_emails_on_conflict): event_emails
  """
  insert data into the table: "event_payments"
  """
 insert_event_payments("""the rows to be inserted"""
objects: [event_payments_insert_input! ]! , """upsert condition"""
on_conflict: event_payments_on_conflict): event_payments_mutation_response
  """
  insert a single row into the table: "event_payments"
  """
 insert_event_payments_one("""the row to be inserted"""
object: event_payments_insert_input! , """upsert condition"""
on_conflict: event_payments_on_conflict): event_payments
  """
  insert data into the table: "event_program_menu_sponsors"
  """
 insert_event_program_menu_sponsors("""the rows to be inserted"""
objects: [event_program_menu_sponsors_insert_input! ]! ): event_program_menu_sponsors_mutation_response
  """
  insert a single row into the table: "event_program_menu_sponsors"
  """
 insert_event_program_menu_sponsors_one("""the row to be inserted"""
object: event_program_menu_sponsors_insert_input! ): event_program_menu_sponsors
  """
  insert data into the table: "event_suspicions"
  """
 insert_event_suspicions("""the rows to be inserted"""
objects: [event_suspicions_insert_input! ]! , """upsert condition"""
on_conflict: event_suspicions_on_conflict): event_suspicions_mutation_response
  """
  insert a single row into the table: "event_suspicions"
  """
 insert_event_suspicions_one("""the row to be inserted"""
object: event_suspicions_insert_input! , """upsert condition"""
on_conflict: event_suspicions_on_conflict): event_suspicions
  """
  insert data into the table: "events_with_archived"
  """
 insert_events("""the rows to be inserted"""
objects: [events_insert_input! ]! , """upsert condition"""
on_conflict: events_on_conflict): events_mutation_response
  """
  insert a single row into the table: "events_with_archived"
  """
 insert_events_one("""the row to be inserted"""
object: events_insert_input! , """upsert condition"""
on_conflict: events_on_conflict): events
  """
  insert data into the table: "events_permissions"
  """
 insert_events_permissions("""the rows to be inserted"""
objects: [events_permissions_insert_input! ]! ): events_permissions_mutation_response
  """
  insert a single row into the table: "events_permissions"
  """
 insert_events_permissions_one("""the row to be inserted"""
object: events_permissions_insert_input! ): events_permissions
  """
  insert data into the table: "events_verified_sender_emails"
  """
 insert_events_verified_sender_emails("""the rows to be inserted"""
objects: [events_verified_sender_emails_insert_input! ]! , """upsert condition"""
on_conflict: events_verified_sender_emails_on_conflict): events_verified_sender_emails_mutation_response
  """
  insert a single row into the table: "events_verified_sender_emails"
  """
 insert_events_verified_sender_emails_one("""the row to be inserted"""
object: events_verified_sender_emails_insert_input! , """upsert condition"""
on_conflict: events_verified_sender_emails_on_conflict): events_verified_sender_emails
  """
  insert data into the table: "exhibitor_contact_statuses"
  """
 insert_exhibitor_contact_statuses("""the rows to be inserted"""
objects: [exhibitor_contact_statuses_insert_input! ]! , """upsert condition"""
on_conflict: exhibitor_contact_statuses_on_conflict): exhibitor_contact_statuses_mutation_response
  """
  insert a single row into the table: "exhibitor_contact_statuses"
  """
 insert_exhibitor_contact_statuses_one("""the row to be inserted"""
object: exhibitor_contact_statuses_insert_input! , """upsert condition"""
on_conflict: exhibitor_contact_statuses_on_conflict): exhibitor_contact_statuses
  """
  insert data into the table: "exhibitor_contacts"
  """
 insert_exhibitor_contacts("""the rows to be inserted"""
objects: [exhibitor_contacts_insert_input! ]! , """upsert condition"""
on_conflict: exhibitor_contacts_on_conflict): exhibitor_contacts_mutation_response
  """
  insert a single row into the table: "exhibitor_contacts"
  """
 insert_exhibitor_contacts_one("""the row to be inserted"""
object: exhibitor_contacts_insert_input! , """upsert condition"""
on_conflict: exhibitor_contacts_on_conflict): exhibitor_contacts
  """
  insert data into the table: "exhibitor_page_views"
  """
 insert_exhibitor_page_views("""the rows to be inserted"""
objects: [exhibitor_page_views_insert_input! ]! , """upsert condition"""
on_conflict: exhibitor_page_views_on_conflict): exhibitor_page_views_mutation_response
  """
  insert a single row into the table: "exhibitor_page_views"
  """
 insert_exhibitor_page_views_one("""the row to be inserted"""
object: exhibitor_page_views_insert_input! , """upsert condition"""
on_conflict: exhibitor_page_views_on_conflict): exhibitor_page_views
  """
  insert data into the table: "exhibitor_representatives"
  """
 insert_exhibitor_representatives("""the rows to be inserted"""
objects: [exhibitor_representatives_insert_input! ]! , """upsert condition"""
on_conflict: exhibitor_representatives_on_conflict): exhibitor_representatives_mutation_response
  """
  insert a single row into the table: "exhibitor_representatives"
  """
 insert_exhibitor_representatives_one("""the row to be inserted"""
object: exhibitor_representatives_insert_input! , """upsert condition"""
on_conflict: exhibitor_representatives_on_conflict): exhibitor_representatives
  """
  insert data into the table: "exhibitor_resources"
  """
 insert_exhibitor_resources("""the rows to be inserted"""
objects: [exhibitor_resources_insert_input! ]! , """upsert condition"""
on_conflict: exhibitor_resources_on_conflict): exhibitor_resources_mutation_response
  """
  insert a single row into the table: "exhibitor_resources"
  """
 insert_exhibitor_resources_one("""the row to be inserted"""
object: exhibitor_resources_insert_input! , """upsert condition"""
on_conflict: exhibitor_resources_on_conflict): exhibitor_resources
  """
  insert data into the table: "exhibitor_sizes"
  """
 insert_exhibitor_sizes("""the rows to be inserted"""
objects: [exhibitor_sizes_insert_input! ]! , """upsert condition"""
on_conflict: exhibitor_sizes_on_conflict): exhibitor_sizes_mutation_response
  """
  insert a single row into the table: "exhibitor_sizes"
  """
 insert_exhibitor_sizes_one("""the row to be inserted"""
object: exhibitor_sizes_insert_input! , """upsert condition"""
on_conflict: exhibitor_sizes_on_conflict): exhibitor_sizes
  """
  insert data into the table: "exhibitor_social_clicks"
  """
 insert_exhibitor_social_clicks("""the rows to be inserted"""
objects: [exhibitor_social_clicks_insert_input! ]! , """upsert condition"""
on_conflict: exhibitor_social_clicks_on_conflict): exhibitor_social_clicks_mutation_response
  """
  insert a single row into the table: "exhibitor_social_clicks"
  """
 insert_exhibitor_social_clicks_one("""the row to be inserted"""
object: exhibitor_social_clicks_insert_input! , """upsert condition"""
on_conflict: exhibitor_social_clicks_on_conflict): exhibitor_social_clicks
  """
  insert data into the table: "exhibitor_statuses"
  """
 insert_exhibitor_statuses("""the rows to be inserted"""
objects: [exhibitor_statuses_insert_input! ]! , """upsert condition"""
on_conflict: exhibitor_statuses_on_conflict): exhibitor_statuses_mutation_response
  """
  insert a single row into the table: "exhibitor_statuses"
  """
 insert_exhibitor_statuses_one("""the row to be inserted"""
object: exhibitor_statuses_insert_input! , """upsert condition"""
on_conflict: exhibitor_statuses_on_conflict): exhibitor_statuses
  """
  insert data into the table: "exhibitor_tags"
  """
 insert_exhibitor_tags("""the rows to be inserted"""
objects: [exhibitor_tags_insert_input! ]! , """upsert condition"""
on_conflict: exhibitor_tags_on_conflict): exhibitor_tags_mutation_response
  """
  insert a single row into the table: "exhibitor_tags"
  """
 insert_exhibitor_tags_one("""the row to be inserted"""
object: exhibitor_tags_insert_input! , """upsert condition"""
on_conflict: exhibitor_tags_on_conflict): exhibitor_tags
  """
  insert data into the table: "exhibitors"
  """
 insert_exhibitors("""the rows to be inserted"""
objects: [exhibitors_insert_input! ]! , """upsert condition"""
on_conflict: exhibitors_on_conflict): exhibitors_mutation_response
  """
  insert a single row into the table: "exhibitors"
  """
 insert_exhibitors_one("""the row to be inserted"""
object: exhibitors_insert_input! , """upsert condition"""
on_conflict: exhibitors_on_conflict): exhibitors
  """
  insert data into the table: "exhibitors_tags"
  """
 insert_exhibitors_tags("""the rows to be inserted"""
objects: [exhibitors_tags_insert_input! ]! , """upsert condition"""
on_conflict: exhibitors_tags_on_conflict): exhibitors_tags_mutation_response
  """
  insert a single row into the table: "exhibitors_tags"
  """
 insert_exhibitors_tags_one("""the row to be inserted"""
object: exhibitors_tags_insert_input! , """upsert condition"""
on_conflict: exhibitors_tags_on_conflict): exhibitors_tags
  """
  insert data into the table: "export_progresses"
  """
 insert_export_progresses("""the rows to be inserted"""
objects: [export_progresses_insert_input! ]! , """upsert condition"""
on_conflict: export_progresses_on_conflict): export_progresses_mutation_response
  """
  insert a single row into the table: "export_progresses"
  """
 insert_export_progresses_one("""the row to be inserted"""
object: export_progresses_insert_input! , """upsert condition"""
on_conflict: export_progresses_on_conflict): export_progresses
  """
  insert data into the table: "gql_api_keys"
  """
 insert_gql_api_keys("""the rows to be inserted"""
objects: [gql_api_keys_insert_input! ]! , """upsert condition"""
on_conflict: gql_api_keys_on_conflict): gql_api_keys_mutation_response
  """
  insert a single row into the table: "gql_api_keys"
  """
 insert_gql_api_keys_one("""the row to be inserted"""
object: gql_api_keys_insert_input! , """upsert condition"""
on_conflict: gql_api_keys_on_conflict): gql_api_keys
  """
  insert data into the table: "notifications"
  """
 insert_notifications("""the rows to be inserted"""
objects: [notifications_insert_input! ]! , """upsert condition"""
on_conflict: notifications_on_conflict): notifications_mutation_response
  """
  insert a single row into the table: "notifications"
  """
 insert_notifications_one("""the row to be inserted"""
object: notifications_insert_input! , """upsert condition"""
on_conflict: notifications_on_conflict): notifications
  """
  insert data into the table: "notifications_users"
  """
 insert_notifications_users("""the rows to be inserted"""
objects: [notifications_users_insert_input! ]! , """upsert condition"""
on_conflict: notifications_users_on_conflict): notifications_users_mutation_response
  """
  insert a single row into the table: "notifications_users"
  """
 insert_notifications_users_one("""the row to be inserted"""
object: notifications_users_insert_input! , """upsert condition"""
on_conflict: notifications_users_on_conflict): notifications_users
  """
  insert data into the table: "oa_db_env"
  """
 insert_oa_db_env("""the rows to be inserted"""
objects: [oa_db_env_insert_input! ]! , """upsert condition"""
on_conflict: oa_db_env_on_conflict): oa_db_env_mutation_response
  """
  insert a single row into the table: "oa_db_env"
  """
 insert_oa_db_env_one("""the row to be inserted"""
object: oa_db_env_insert_input! , """upsert condition"""
on_conflict: oa_db_env_on_conflict): oa_db_env
  """
  insert data into the table: "oauth_codes"
  """
 insert_oauth_codes("""the rows to be inserted"""
objects: [oauth_codes_insert_input! ]! , """upsert condition"""
on_conflict: oauth_codes_on_conflict): oauth_codes_mutation_response
  """
  insert a single row into the table: "oauth_codes"
  """
 insert_oauth_codes_one("""the row to be inserted"""
object: oauth_codes_insert_input! , """upsert condition"""
on_conflict: oauth_codes_on_conflict): oauth_codes
  """
  insert data into the table: "program_attachments"
  """
 insert_program_attachments("""the rows to be inserted"""
objects: [program_attachments_insert_input! ]! , """upsert condition"""
on_conflict: program_attachments_on_conflict): program_attachments_mutation_response
  """
  insert a single row into the table: "program_attachments"
  """
 insert_program_attachments_one("""the row to be inserted"""
object: program_attachments_insert_input! , """upsert condition"""
on_conflict: program_attachments_on_conflict): program_attachments
  """
  insert data into the table: "program_chairs"
  """
 insert_program_chairs("""the rows to be inserted"""
objects: [program_chairs_insert_input! ]! , """upsert condition"""
on_conflict: program_chairs_on_conflict): program_chairs_mutation_response
  """
  insert a single row into the table: "program_chairs"
  """
 insert_program_chairs_one("""the row to be inserted"""
object: program_chairs_insert_input! , """upsert condition"""
on_conflict: program_chairs_on_conflict): program_chairs
  """
  insert data into the table: "program_columns"
  """
 insert_program_columns("""the rows to be inserted"""
objects: [program_columns_insert_input! ]! , """upsert condition"""
on_conflict: program_columns_on_conflict): program_columns_mutation_response
  """
  insert a single row into the table: "program_columns"
  """
 insert_program_columns_one("""the row to be inserted"""
object: program_columns_insert_input! , """upsert condition"""
on_conflict: program_columns_on_conflict): program_columns
  """
  insert data into the table: "program_columns_zoom_users"
  """
 insert_program_columns_zoom_users("""the rows to be inserted"""
objects: [program_columns_zoom_users_insert_input! ]! , """upsert condition"""
on_conflict: program_columns_zoom_users_on_conflict): program_columns_zoom_users_mutation_response
  """
  insert a single row into the table: "program_columns_zoom_users"
  """
 insert_program_columns_zoom_users_one("""the row to be inserted"""
object: program_columns_zoom_users_insert_input! , """upsert condition"""
on_conflict: program_columns_zoom_users_on_conflict): program_columns_zoom_users
  """
  insert data into the table: "program_dates"
  """
 insert_program_dates("""the rows to be inserted"""
objects: [program_dates_insert_input! ]! , """upsert condition"""
on_conflict: program_dates_on_conflict): program_dates_mutation_response
  """
  insert a single row into the table: "program_dates"
  """
 insert_program_dates_one("""the row to be inserted"""
object: program_dates_insert_input! , """upsert condition"""
on_conflict: program_dates_on_conflict): program_dates
  """
  insert data into the table: "program_downloads"
  """
 insert_program_downloads("""the rows to be inserted"""
objects: [program_downloads_insert_input! ]! , """upsert condition"""
on_conflict: program_downloads_on_conflict): program_downloads_mutation_response
  """
  insert a single row into the table: "program_downloads"
  """
 insert_program_downloads_one("""the row to be inserted"""
object: program_downloads_insert_input! , """upsert condition"""
on_conflict: program_downloads_on_conflict): program_downloads
  """
  insert data into the table: "program_info"
  """
 insert_program_info("""the rows to be inserted"""
objects: [program_info_insert_input! ]! , """upsert condition"""
on_conflict: program_info_on_conflict): program_info_mutation_response
  """
  insert a single row into the table: "program_info"
  """
 insert_program_info_one("""the row to be inserted"""
object: program_info_insert_input! , """upsert condition"""
on_conflict: program_info_on_conflict): program_info
  """
  insert data into the table: "program_information"
  """
 insert_program_information("""the rows to be inserted"""
objects: [program_information_insert_input! ]! , """upsert condition"""
on_conflict: program_information_on_conflict): program_information_mutation_response
  """
  insert a single row into the table: "program_information"
  """
 insert_program_information_one("""the row to be inserted"""
object: program_information_insert_input! , """upsert condition"""
on_conflict: program_information_on_conflict): program_information
  """
  insert data into the table: "program_locations"
  """
 insert_program_locations("""the rows to be inserted"""
objects: [program_locations_insert_input! ]! , """upsert condition"""
on_conflict: program_locations_on_conflict): program_locations_mutation_response
  """
  insert a single row into the table: "program_locations"
  """
 insert_program_locations_one("""the row to be inserted"""
object: program_locations_insert_input! , """upsert condition"""
on_conflict: program_locations_on_conflict): program_locations
  """
  insert data into the table: "program_session_attachments"
  """
 insert_program_session_activities("""the rows to be inserted"""
objects: [program_session_activities_insert_input! ]! ): program_session_activities_mutation_response
  """
  insert a single row into the table: "program_session_attachments"
  """
 insert_program_session_activities_one("""the row to be inserted"""
object: program_session_activities_insert_input! ): program_session_activities
  """
  insert data into the table: "program_session_categories"
  """
 insert_program_session_categories("""the rows to be inserted"""
objects: [program_session_categories_insert_input! ]! , """upsert condition"""
on_conflict: program_session_categories_on_conflict): program_session_categories_mutation_response
  """
  insert a single row into the table: "program_session_categories"
  """
 insert_program_session_categories_one("""the row to be inserted"""
object: program_session_categories_insert_input! , """upsert condition"""
on_conflict: program_session_categories_on_conflict): program_session_categories
  """
  insert data into the table: "program_session_category_type"
  """
 insert_program_session_category_type("""the rows to be inserted"""
objects: [program_session_category_type_insert_input! ]! , """upsert condition"""
on_conflict: program_session_category_type_on_conflict): program_session_category_type_mutation_response
  """
  insert a single row into the table: "program_session_category_type"
  """
 insert_program_session_category_type_one("""the row to be inserted"""
object: program_session_category_type_insert_input! , """upsert condition"""
on_conflict: program_session_category_type_on_conflict): program_session_category_type
  """
  insert data into the table: "program_session_sponsors"
  """
 insert_program_session_sponsors("""the rows to be inserted"""
objects: [program_session_sponsors_insert_input! ]! ): program_session_sponsors_mutation_response
  """
  insert a single row into the table: "program_session_sponsors"
  """
 insert_program_session_sponsors_one("""the row to be inserted"""
object: program_session_sponsors_insert_input! ): program_session_sponsors
  """
  insert data into the table: "program_session_zoom_meetings"
  """
 insert_program_session_zoom_meetings("""the rows to be inserted"""
objects: [program_session_zoom_meetings_insert_input! ]! , """upsert condition"""
on_conflict: program_session_zoom_meetings_on_conflict): program_session_zoom_meetings_mutation_response
  """
  insert a single row into the table: "program_session_zoom_meetings"
  """
 insert_program_session_zoom_meetings_one("""the row to be inserted"""
object: program_session_zoom_meetings_insert_input! , """upsert condition"""
on_conflict: program_session_zoom_meetings_on_conflict): program_session_zoom_meetings
  """
  insert data into the table: "program_sessions"
  """
 insert_program_sessions("""the rows to be inserted"""
objects: [program_sessions_insert_input! ]! , """upsert condition"""
on_conflict: program_sessions_on_conflict): program_sessions_mutation_response
  """
  insert data into the table: "program_sessions_categories"
  """
 insert_program_sessions_categories("""the rows to be inserted"""
objects: [program_sessions_categories_insert_input! ]! , """upsert condition"""
on_conflict: program_sessions_categories_on_conflict): program_sessions_categories_mutation_response
  """
  insert a single row into the table: "program_sessions_categories"
  """
 insert_program_sessions_categories_one("""the row to be inserted"""
object: program_sessions_categories_insert_input! , """upsert condition"""
on_conflict: program_sessions_categories_on_conflict): program_sessions_categories
  """
  insert data into the table: "program_sessions_chairs"
  """
 insert_program_sessions_chairs("""the rows to be inserted"""
objects: [program_sessions_chairs_insert_input! ]! , """upsert condition"""
on_conflict: program_sessions_chairs_on_conflict): program_sessions_chairs_mutation_response
  """
  insert a single row into the table: "program_sessions_chairs"
  """
 insert_program_sessions_chairs_one("""the row to be inserted"""
object: program_sessions_chairs_insert_input! , """upsert condition"""
on_conflict: program_sessions_chairs_on_conflict): program_sessions_chairs
  """
  insert data into the table: "program_sessions_comments"
  """
 insert_program_sessions_comments("""the rows to be inserted"""
objects: [program_sessions_comments_insert_input! ]! , """upsert condition"""
on_conflict: program_sessions_comments_on_conflict): program_sessions_comments_mutation_response
  """
  insert a single row into the table: "program_sessions_comments"
  """
 insert_program_sessions_comments_one("""the row to be inserted"""
object: program_sessions_comments_insert_input! , """upsert condition"""
on_conflict: program_sessions_comments_on_conflict): program_sessions_comments
  """
  insert a single row into the table: "program_sessions"
  """
 insert_program_sessions_one("""the row to be inserted"""
object: program_sessions_insert_input! , """upsert condition"""
on_conflict: program_sessions_on_conflict): program_sessions
  """
  insert data into the table: "program_sessions_program_columns"
  """
 insert_program_sessions_program_columns("""the rows to be inserted"""
objects: [program_sessions_program_columns_insert_input! ]! ): program_sessions_program_columns_mutation_response
  """
  insert a single row into the table: "program_sessions_program_columns"
  """
 insert_program_sessions_program_columns_one("""the row to be inserted"""
object: program_sessions_program_columns_insert_input! ): program_sessions_program_columns
  """
  insert data into the table: "program_sessions_submissions"
  """
 insert_program_sessions_submissions("""the rows to be inserted"""
objects: [program_sessions_submissions_insert_input! ]! ): program_sessions_submissions_mutation_response
  """
  insert a single row into the table: "program_sessions_submissions"
  """
 insert_program_sessions_submissions_one("""the row to be inserted"""
object: program_sessions_submissions_insert_input! ): program_sessions_submissions
  """
  insert data into the table: "program_sessions_symposia"
  """
 insert_program_sessions_symposia("""the rows to be inserted"""
objects: [program_sessions_symposia_insert_input! ]! ): program_sessions_symposia_mutation_response
  """
  insert a single row into the table: "program_sessions_symposia"
  """
 insert_program_sessions_symposia_one("""the row to be inserted"""
object: program_sessions_symposia_insert_input! ): program_sessions_symposia
  """
  insert data into the table: "program_sponsors"
  """
 insert_program_sponsors("""the rows to be inserted"""
objects: [program_sponsors_insert_input! ]! , """upsert condition"""
on_conflict: program_sponsors_on_conflict): program_sponsors_mutation_response
  """
  insert a single row into the table: "program_sponsors"
  """
 insert_program_sponsors_one("""the row to be inserted"""
object: program_sponsors_insert_input! , """upsert condition"""
on_conflict: program_sponsors_on_conflict): program_sponsors
  """
  insert data into the table: "program_submissions_comments"
  """
 insert_program_submissions_comments("""the rows to be inserted"""
objects: [program_submissions_comments_insert_input! ]! , """upsert condition"""
on_conflict: program_submissions_comments_on_conflict): program_submissions_comments_mutation_response
  """
  insert a single row into the table: "program_submissions_comments"
  """
 insert_program_submissions_comments_one("""the row to be inserted"""
object: program_submissions_comments_insert_input! , """upsert condition"""
on_conflict: program_submissions_comments_on_conflict): program_submissions_comments
  """
  insert data into the table: "program_symposium_comments"
  """
 insert_program_symposium_comments("""the rows to be inserted"""
objects: [program_symposium_comments_insert_input! ]! , """upsert condition"""
on_conflict: program_symposium_comments_on_conflict): program_symposium_comments_mutation_response
  """
  insert a single row into the table: "program_symposium_comments"
  """
 insert_program_symposium_comments_one("""the row to be inserted"""
object: program_symposium_comments_insert_input! , """upsert condition"""
on_conflict: program_symposium_comments_on_conflict): program_symposium_comments
  """
  insert data into the table: "program_tabs"
  """
 insert_program_tabs("""the rows to be inserted"""
objects: [program_tabs_insert_input! ]! , """upsert condition"""
on_conflict: program_tabs_on_conflict): program_tabs_mutation_response
  """
  insert a single row into the table: "program_tabs"
  """
 insert_program_tabs_one("""the row to be inserted"""
object: program_tabs_insert_input! , """upsert condition"""
on_conflict: program_tabs_on_conflict): program_tabs
  """
  insert data into the table: "program_tracks"
  """
 insert_program_tracks("""the rows to be inserted"""
objects: [program_tracks_insert_input! ]! , """upsert condition"""
on_conflict: program_tracks_on_conflict): program_tracks_mutation_response
  """
  insert a single row into the table: "program_tracks"
  """
 insert_program_tracks_one("""the row to be inserted"""
object: program_tracks_insert_input! , """upsert condition"""
on_conflict: program_tracks_on_conflict): program_tracks
  """
  insert data into the table: "program_types"
  """
 insert_program_types("""the rows to be inserted"""
objects: [program_types_insert_input! ]! , """upsert condition"""
on_conflict: program_types_on_conflict): program_types_mutation_response
  """
  insert a single row into the table: "program_types"
  """
 insert_program_types_one("""the row to be inserted"""
object: program_types_insert_input! , """upsert condition"""
on_conflict: program_types_on_conflict): program_types
  """
  insert data into the table: "question_response_versions"
  """
 insert_question_response_versions("""the rows to be inserted"""
objects: [question_response_versions_insert_input! ]! , """upsert condition"""
on_conflict: question_response_versions_on_conflict): question_response_versions_mutation_response
  """
  insert a single row into the table: "question_response_versions"
  """
 insert_question_response_versions_one("""the row to be inserted"""
object: question_response_versions_insert_input! , """upsert condition"""
on_conflict: question_response_versions_on_conflict): question_response_versions
  """
  insert data into the table: "question_responses"
  """
 insert_question_responses("""the rows to be inserted"""
objects: [question_responses_insert_input! ]! , """upsert condition"""
on_conflict: question_responses_on_conflict): question_responses_mutation_response
  """
  insert a single row into the table: "question_responses"
  """
 insert_question_responses_one("""the row to be inserted"""
object: question_responses_insert_input! , """upsert condition"""
on_conflict: question_responses_on_conflict): question_responses
  """
  insert data into the table: "question_responses_view"
  """
 insert_question_responses_view("""the rows to be inserted"""
objects: [question_responses_view_insert_input! ]! ): question_responses_view_mutation_response
  """
  insert a single row into the table: "question_responses_view"
  """
 insert_question_responses_view_one("""the row to be inserted"""
object: question_responses_view_insert_input! ): question_responses_view
  """
  insert data into the table: "questions"
  """
 insert_questions("""the rows to be inserted"""
objects: [questions_insert_input! ]! , """upsert condition"""
on_conflict: questions_on_conflict): questions_mutation_response
  """
  insert a single row into the table: "questions"
  """
 insert_questions_one("""the row to be inserted"""
object: questions_insert_input! , """upsert condition"""
on_conflict: questions_on_conflict): questions
  """
  insert data into the table: "questions_stage_options"
  """
 insert_questions_stage_options("""the rows to be inserted"""
objects: [questions_stage_options_insert_input! ]! , """upsert condition"""
on_conflict: questions_stage_options_on_conflict): questions_stage_options_mutation_response
  """
  insert a single row into the table: "questions_stage_options"
  """
 insert_questions_stage_options_one("""the row to be inserted"""
object: questions_stage_options_insert_input! , """upsert condition"""
on_conflict: questions_stage_options_on_conflict): questions_stage_options
  """
  insert data into the table: "questions_stage_options_view"
  """
 insert_questions_stage_options_view("""the rows to be inserted"""
objects: [questions_stage_options_view_insert_input! ]! ): questions_stage_options_view_mutation_response
  """
  insert a single row into the table: "questions_stage_options_view"
  """
 insert_questions_stage_options_view_one("""the row to be inserted"""
object: questions_stage_options_view_insert_input! ): questions_stage_options_view
  """
  insert data into the table: "questions_view"
  """
 insert_questions_view("""the rows to be inserted"""
objects: [questions_view_insert_input! ]! ): questions_view_mutation_response
  """
  insert a single row into the table: "questions_view"
  """
 insert_questions_view_one("""the row to be inserted"""
object: questions_view_insert_input! ): questions_view
  """
  insert data into the table: "ratings"
  """
 insert_ratings("""the rows to be inserted"""
objects: [ratings_insert_input! ]! , """upsert condition"""
on_conflict: ratings_on_conflict): ratings_mutation_response
  """
  insert a single row into the table: "ratings"
  """
 insert_ratings_one("""the row to be inserted"""
object: ratings_insert_input! , """upsert condition"""
on_conflict: ratings_on_conflict): ratings
  """
  insert data into the table: "read_by_user_program_comments"
  """
 insert_read_by_user_program_comments("""the rows to be inserted"""
objects: [read_by_user_program_comments_insert_input! ]! , """upsert condition"""
on_conflict: read_by_user_program_comments_on_conflict): read_by_user_program_comments_mutation_response
  """
  insert a single row into the table: "read_by_user_program_comments"
  """
 insert_read_by_user_program_comments_one("""the row to be inserted"""
object: read_by_user_program_comments_insert_input! , """upsert condition"""
on_conflict: read_by_user_program_comments_on_conflict): read_by_user_program_comments
  """
  insert data into the table: "revenues"
  """
 insert_revenues("""the rows to be inserted"""
objects: [revenues_insert_input! ]! , """upsert condition"""
on_conflict: revenues_on_conflict): revenues_mutation_response
  """
  insert a single row into the table: "revenues"
  """
 insert_revenues_one("""the row to be inserted"""
object: revenues_insert_input! , """upsert condition"""
on_conflict: revenues_on_conflict): revenues
  """
  insert data into the table: "review_dates"
  """
 insert_review_dates("""the rows to be inserted"""
objects: [review_dates_insert_input! ]! , """upsert condition"""
on_conflict: review_dates_on_conflict): review_dates_mutation_response
  """
  insert a single row into the table: "review_dates"
  """
 insert_review_dates_one("""the row to be inserted"""
object: review_dates_insert_input! , """upsert condition"""
on_conflict: review_dates_on_conflict): review_dates
  """
  insert data into the table: "reviewer_admin_notes"
  """
 insert_reviewer_admin_notes("""the rows to be inserted"""
objects: [reviewer_admin_notes_insert_input! ]! , """upsert condition"""
on_conflict: reviewer_admin_notes_on_conflict): reviewer_admin_notes_mutation_response
  """
  insert a single row into the table: "reviewer_admin_notes"
  """
 insert_reviewer_admin_notes_one("""the row to be inserted"""
object: reviewer_admin_notes_insert_input! , """upsert condition"""
on_conflict: reviewer_admin_notes_on_conflict): reviewer_admin_notes
  """
  insert data into the table: "reviewer_categories"
  """
 insert_reviewer_categories("""the rows to be inserted"""
objects: [reviewer_categories_insert_input! ]! ): reviewer_categories_mutation_response
  """
  insert a single row into the table: "reviewer_categories"
  """
 insert_reviewer_categories_one("""the row to be inserted"""
object: reviewer_categories_insert_input! ): reviewer_categories
  """
  insert data into the table: "reviewer_inline_comments"
  """
 insert_reviewer_inline_comments("""the rows to be inserted"""
objects: [reviewer_inline_comments_insert_input! ]! , """upsert condition"""
on_conflict: reviewer_inline_comments_on_conflict): reviewer_inline_comments_mutation_response
  """
  insert a single row into the table: "reviewer_inline_comments"
  """
 insert_reviewer_inline_comments_one("""the row to be inserted"""
object: reviewer_inline_comments_insert_input! , """upsert condition"""
on_conflict: reviewer_inline_comments_on_conflict): reviewer_inline_comments
  """
  insert data into the table: "reviewer_question_responses"
  """
 insert_reviewer_question_responses("""the rows to be inserted"""
objects: [reviewer_question_responses_insert_input! ]! , """upsert condition"""
on_conflict: reviewer_question_responses_on_conflict): reviewer_question_responses_mutation_response
  """
  insert a single row into the table: "reviewer_question_responses"
  """
 insert_reviewer_question_responses_one("""the row to be inserted"""
object: reviewer_question_responses_insert_input! , """upsert condition"""
on_conflict: reviewer_question_responses_on_conflict): reviewer_question_responses
  """
  insert data into the table: "reviewer_questions"
  """
 insert_reviewer_questions("""the rows to be inserted"""
objects: [reviewer_questions_insert_input! ]! , """upsert condition"""
on_conflict: reviewer_questions_on_conflict): reviewer_questions_mutation_response
  """
  insert a single row into the table: "reviewer_questions"
  """
 insert_reviewer_questions_one("""the row to be inserted"""
object: reviewer_questions_insert_input! , """upsert condition"""
on_conflict: reviewer_questions_on_conflict): reviewer_questions
  """
  insert data into the table: "reviews"
  """
 insert_reviews("""the rows to be inserted"""
objects: [reviews_insert_input! ]! , """upsert condition"""
on_conflict: reviews_on_conflict): reviews_mutation_response
  """
  insert a single row into the table: "reviews"
  """
 insert_reviews_one("""the row to be inserted"""
object: reviews_insert_input! , """upsert condition"""
on_conflict: reviews_on_conflict): reviews
  """
  insert data into the table: "search_authors"
  """
 insert_search_authors("""the rows to be inserted"""
objects: [search_authors_insert_input! ]! ): search_authors_mutation_response
  """
  insert a single row into the table: "search_authors"
  """
 insert_search_authors_one("""the row to be inserted"""
object: search_authors_insert_input! ): search_authors
  """
  insert data into the table: "search_chairs"
  """
 insert_search_chairs("""the rows to be inserted"""
objects: [search_chairs_insert_input! ]! ): search_chairs_mutation_response
  """
  insert a single row into the table: "search_chairs"
  """
 insert_search_chairs_one("""the row to be inserted"""
object: search_chairs_insert_input! ): search_chairs
  """
  insert data into the table: "search_program_sessions"
  """
 insert_search_program_sessions("""the rows to be inserted"""
objects: [search_program_sessions_insert_input! ]! ): search_program_sessions_mutation_response
  """
  insert a single row into the table: "search_program_sessions"
  """
 insert_search_program_sessions_one("""the row to be inserted"""
object: search_program_sessions_insert_input! ): search_program_sessions
  """
  insert data into the table: "search_question_responses"
  """
 insert_search_question_responses("""the rows to be inserted"""
objects: [search_question_responses_insert_input! ]! ): search_question_responses_mutation_response
  """
  insert a single row into the table: "search_question_responses"
  """
 insert_search_question_responses_one("""the row to be inserted"""
object: search_question_responses_insert_input! ): search_question_responses
  """
  insert data into the table: "search_symposium_question_responses"
  """
 insert_search_symposium_question_responses("""the rows to be inserted"""
objects: [search_symposium_question_responses_insert_input! ]! ): search_symposium_question_responses_mutation_response
  """
  insert a single row into the table: "search_symposium_question_responses"
  """
 insert_search_symposium_question_responses_one("""the row to be inserted"""
object: search_symposium_question_responses_insert_input! ): search_symposium_question_responses
  """
  insert data into the table: "session_chair_affiliations"
  """
 insert_session_chair_affiliations("""the rows to be inserted"""
objects: [session_chair_affiliations_insert_input! ]! , """upsert condition"""
on_conflict: session_chair_affiliations_on_conflict): session_chair_affiliations_mutation_response
  """
  insert a single row into the table: "session_chair_affiliations"
  """
 insert_session_chair_affiliations_one("""the row to be inserted"""
object: session_chair_affiliations_insert_input! , """upsert condition"""
on_conflict: session_chair_affiliations_on_conflict): session_chair_affiliations
  """
  insert data into the table: "session_chair_fields"
  """
 insert_session_chair_fields("""the rows to be inserted"""
objects: [session_chair_fields_insert_input! ]! , """upsert condition"""
on_conflict: session_chair_fields_on_conflict): session_chair_fields_mutation_response
  """
  insert a single row into the table: "session_chair_fields"
  """
 insert_session_chair_fields_one("""the row to be inserted"""
object: session_chair_fields_insert_input! , """upsert condition"""
on_conflict: session_chair_fields_on_conflict): session_chair_fields
  """
  insert data into the table: "session_chair_responses"
  """
 insert_session_chair_responses("""the rows to be inserted"""
objects: [session_chair_responses_insert_input! ]! , """upsert condition"""
on_conflict: session_chair_responses_on_conflict): session_chair_responses_mutation_response
  """
  insert a single row into the table: "session_chair_responses"
  """
 insert_session_chair_responses_one("""the row to be inserted"""
object: session_chair_responses_insert_input! , """upsert condition"""
on_conflict: session_chair_responses_on_conflict): session_chair_responses
  """
  insert data into the table: "session_chairs"
  """
 insert_session_chairs("""the rows to be inserted"""
objects: [session_chairs_insert_input! ]! , """upsert condition"""
on_conflict: session_chairs_on_conflict): session_chairs_mutation_response
  """
  insert a single row into the table: "session_chairs"
  """
 insert_session_chairs_one("""the row to be inserted"""
object: session_chairs_insert_input! , """upsert condition"""
on_conflict: session_chairs_on_conflict): session_chairs
  """
  insert data into the table: "session_links"
  """
 insert_session_links("""the rows to be inserted"""
objects: [session_links_insert_input! ]! ): session_links_mutation_response
  """
  insert a single row into the table: "session_links"
  """
 insert_session_links_one("""the row to be inserted"""
object: session_links_insert_input! ): session_links
  """
  insert data into the table: "sessions"
  """
 insert_sessions("""the rows to be inserted"""
objects: [sessions_insert_input! ]! ): sessions_mutation_response
  """
  insert a single row into the table: "sessions"
  """
 insert_sessions_one("""the row to be inserted"""
object: sessions_insert_input! ): sessions
  """
  insert data into the table: "software_updates"
  """
 insert_software_updates("""the rows to be inserted"""
objects: [software_updates_insert_input! ]! , """upsert condition"""
on_conflict: software_updates_on_conflict): software_updates_mutation_response
  """
  insert a single row into the table: "software_updates"
  """
 insert_software_updates_one("""the row to be inserted"""
object: software_updates_insert_input! , """upsert condition"""
on_conflict: software_updates_on_conflict): software_updates
  """
  insert data into the table: "stages"
  """
 insert_stages("""the rows to be inserted"""
objects: [stages_insert_input! ]! , """upsert condition"""
on_conflict: stages_on_conflict): stages_mutation_response
  """
  insert data into the table: "stages_event_acceptance_types"
  """
 insert_stages_event_acceptance_types("""the rows to be inserted"""
objects: [stages_event_acceptance_types_insert_input! ]! , """upsert condition"""
on_conflict: stages_event_acceptance_types_on_conflict): stages_event_acceptance_types_mutation_response
  """
  insert a single row into the table: "stages_event_acceptance_types"
  """
 insert_stages_event_acceptance_types_one("""the row to be inserted"""
object: stages_event_acceptance_types_insert_input! , """upsert condition"""
on_conflict: stages_event_acceptance_types_on_conflict): stages_event_acceptance_types
  """
  insert a single row into the table: "stages"
  """
 insert_stages_one("""the row to be inserted"""
object: stages_insert_input! , """upsert condition"""
on_conflict: stages_on_conflict): stages
  """
  insert data into the table: "stages_view"
  """
 insert_stages_view("""the rows to be inserted"""
objects: [stages_view_insert_input! ]! ): stages_view_mutation_response
  """
  insert a single row into the table: "stages_view"
  """
 insert_stages_view_one("""the row to be inserted"""
object: stages_view_insert_input! ): stages_view
  """
  insert data into the table: "submission_acceptance_types"
  """
 insert_submission_acceptance_types("""the rows to be inserted"""
objects: [submission_acceptance_types_insert_input! ]! ): submission_acceptance_types_mutation_response
  """
  insert a single row into the table: "submission_acceptance_types"
  """
 insert_submission_acceptance_types_one("""the row to be inserted"""
object: submission_acceptance_types_insert_input! ): submission_acceptance_types
  """
  insert data into the table: "submission_owner_log"
  """
 insert_submission_owner_log("""the rows to be inserted"""
objects: [submission_owner_log_insert_input! ]! , """upsert condition"""
on_conflict: submission_owner_log_on_conflict): submission_owner_log_mutation_response
  """
  insert a single row into the table: "submission_owner_log"
  """
 insert_submission_owner_log_one("""the row to be inserted"""
object: submission_owner_log_insert_input! , """upsert condition"""
on_conflict: submission_owner_log_on_conflict): submission_owner_log
  """
  insert data into the table: "submissions_with_archived"
  """
 insert_submissions("""the rows to be inserted"""
objects: [submissions_insert_input! ]! , """upsert condition"""
on_conflict: submissions_on_conflict): submissions_mutation_response
  """
  insert a single row into the table: "submissions_with_archived"
  """
 insert_submissions_one("""the row to be inserted"""
object: submissions_insert_input! , """upsert condition"""
on_conflict: submissions_on_conflict): submissions
  """
  insert data into the table: "symposia_with_archived"
  """
 insert_symposia("""the rows to be inserted"""
objects: [symposia_insert_input! ]! , """upsert condition"""
on_conflict: symposia_on_conflict): symposia_mutation_response
  """
  insert data into the table: "symposia_acceptance_types"
  """
 insert_symposia_acceptance_types("""the rows to be inserted"""
objects: [symposia_acceptance_types_insert_input! ]! , """upsert condition"""
on_conflict: symposia_acceptance_types_on_conflict): symposia_acceptance_types_mutation_response
  """
  insert a single row into the table: "symposia_acceptance_types"
  """
 insert_symposia_acceptance_types_one("""the row to be inserted"""
object: symposia_acceptance_types_insert_input! , """upsert condition"""
on_conflict: symposia_acceptance_types_on_conflict): symposia_acceptance_types
  """
  insert a single row into the table: "symposia_with_archived"
  """
 insert_symposia_one("""the row to be inserted"""
object: symposia_insert_input! , """upsert condition"""
on_conflict: symposia_on_conflict): symposia
  """
  insert data into the table: "symposium_affiliations"
  """
 insert_symposium_affiliations("""the rows to be inserted"""
objects: [symposium_affiliations_insert_input! ]! , """upsert condition"""
on_conflict: symposium_affiliations_on_conflict): symposium_affiliations_mutation_response
  """
  insert a single row into the table: "symposium_affiliations"
  """
 insert_symposium_affiliations_one("""the row to be inserted"""
object: symposium_affiliations_insert_input! , """upsert condition"""
on_conflict: symposium_affiliations_on_conflict): symposium_affiliations
  """
  insert data into the table: "symposium_person_field_responses"
  """
 insert_symposium_person_field_responses("""the rows to be inserted"""
objects: [symposium_person_field_responses_insert_input! ]! , """upsert condition"""
on_conflict: symposium_person_field_responses_on_conflict): symposium_person_field_responses_mutation_response
  """
  insert a single row into the table: "symposium_person_field_responses"
  """
 insert_symposium_person_field_responses_one("""the row to be inserted"""
object: symposium_person_field_responses_insert_input! , """upsert condition"""
on_conflict: symposium_person_field_responses_on_conflict): symposium_person_field_responses
  """
  insert data into the table: "symposium_person_fields"
  """
 insert_symposium_person_fields("""the rows to be inserted"""
objects: [symposium_person_fields_insert_input! ]! , """upsert condition"""
on_conflict: symposium_person_fields_on_conflict): symposium_person_fields_mutation_response
  """
  insert a single row into the table: "symposium_person_fields"
  """
 insert_symposium_person_fields_one("""the row to be inserted"""
object: symposium_person_fields_insert_input! , """upsert condition"""
on_conflict: symposium_person_fields_on_conflict): symposium_person_fields
  """
  insert data into the table: "symposium_persons"
  """
 insert_symposium_persons("""the rows to be inserted"""
objects: [symposium_persons_insert_input! ]! , """upsert condition"""
on_conflict: symposium_persons_on_conflict): symposium_persons_mutation_response
  """
  insert a single row into the table: "symposium_persons"
  """
 insert_symposium_persons_one("""the row to be inserted"""
object: symposium_persons_insert_input! , """upsert condition"""
on_conflict: symposium_persons_on_conflict): symposium_persons
  """
  insert data into the table: "symposium_question_responses"
  """
 insert_symposium_question_responses("""the rows to be inserted"""
objects: [symposium_question_responses_insert_input! ]! , """upsert condition"""
on_conflict: symposium_question_responses_on_conflict): symposium_question_responses_mutation_response
  """
  insert a single row into the table: "symposium_question_responses"
  """
 insert_symposium_question_responses_one("""the row to be inserted"""
object: symposium_question_responses_insert_input! , """upsert condition"""
on_conflict: symposium_question_responses_on_conflict): symposium_question_responses
  """
  insert data into the table: "symposium_questions"
  """
 insert_symposium_questions("""the rows to be inserted"""
objects: [symposium_questions_insert_input! ]! , """upsert condition"""
on_conflict: symposium_questions_on_conflict): symposium_questions_mutation_response
  """
  insert a single row into the table: "symposium_questions"
  """
 insert_symposium_questions_one("""the row to be inserted"""
object: symposium_questions_insert_input! , """upsert condition"""
on_conflict: symposium_questions_on_conflict): symposium_questions
  """
  insert data into the table: "symposium_review_question_responses"
  """
 insert_symposium_review_question_responses("""the rows to be inserted"""
objects: [symposium_review_question_responses_insert_input! ]! , """upsert condition"""
on_conflict: symposium_review_question_responses_on_conflict): symposium_review_question_responses_mutation_response
  """
  insert a single row into the table: "symposium_review_question_responses"
  """
 insert_symposium_review_question_responses_one("""the row to be inserted"""
object: symposium_review_question_responses_insert_input! , """upsert condition"""
on_conflict: symposium_review_question_responses_on_conflict): symposium_review_question_responses
  """
  insert data into the table: "symposium_review_questions"
  """
 insert_symposium_review_questions("""the rows to be inserted"""
objects: [symposium_review_questions_insert_input! ]! , """upsert condition"""
on_conflict: symposium_review_questions_on_conflict): symposium_review_questions_mutation_response
  """
  insert a single row into the table: "symposium_review_questions"
  """
 insert_symposium_review_questions_one("""the row to be inserted"""
object: symposium_review_questions_insert_input! , """upsert condition"""
on_conflict: symposium_review_questions_on_conflict): symposium_review_questions
  """
  insert data into the table: "symposium_reviews"
  """
 insert_symposium_reviews("""the rows to be inserted"""
objects: [symposium_reviews_insert_input! ]! , """upsert condition"""
on_conflict: symposium_reviews_on_conflict): symposium_reviews_mutation_response
  """
  insert a single row into the table: "symposium_reviews"
  """
 insert_symposium_reviews_one("""the row to be inserted"""
object: symposium_reviews_insert_input! , """upsert condition"""
on_conflict: symposium_reviews_on_conflict): symposium_reviews
  """
  insert data into the table: "symposium_submission_session_times"
  """
 insert_symposium_submission_session_times("""the rows to be inserted"""
objects: [symposium_submission_session_times_insert_input! ]! , """upsert condition"""
on_conflict: symposium_submission_session_times_on_conflict): symposium_submission_session_times_mutation_response
  """
  insert a single row into the table: "symposium_submission_session_times"
  """
 insert_symposium_submission_session_times_one("""the row to be inserted"""
object: symposium_submission_session_times_insert_input! , """upsert condition"""
on_conflict: symposium_submission_session_times_on_conflict): symposium_submission_session_times
  """
  insert data into the table: "table_email_attachments"
  """
 insert_table_email_attachments("""the rows to be inserted"""
objects: [table_email_attachments_insert_input! ]! , """upsert condition"""
on_conflict: table_email_attachments_on_conflict): table_email_attachments_mutation_response
  """
  insert a single row into the table: "table_email_attachments"
  """
 insert_table_email_attachments_one("""the row to be inserted"""
object: table_email_attachments_insert_input! , """upsert condition"""
on_conflict: table_email_attachments_on_conflict): table_email_attachments
  """
  insert data into the table: "table_email_filters"
  """
 insert_table_email_filters("""the rows to be inserted"""
objects: [table_email_filters_insert_input! ]! , """upsert condition"""
on_conflict: table_email_filters_on_conflict): table_email_filters_mutation_response
  """
  insert a single row into the table: "table_email_filters"
  """
 insert_table_email_filters_one("""the row to be inserted"""
object: table_email_filters_insert_input! , """upsert condition"""
on_conflict: table_email_filters_on_conflict): table_email_filters
  """
  insert data into the table: "table_email_merge_field_defaults"
  """
 insert_table_email_merge_field_defaults("""the rows to be inserted"""
objects: [table_email_merge_field_defaults_insert_input! ]! , """upsert condition"""
on_conflict: table_email_merge_field_defaults_on_conflict): table_email_merge_field_defaults_mutation_response
  """
  insert a single row into the table: "table_email_merge_field_defaults"
  """
 insert_table_email_merge_field_defaults_one("""the row to be inserted"""
object: table_email_merge_field_defaults_insert_input! , """upsert condition"""
on_conflict: table_email_merge_field_defaults_on_conflict): table_email_merge_field_defaults
  """
  insert data into the table: "table_email_recipient_groups"
  """
 insert_table_email_recipient_groups("""the rows to be inserted"""
objects: [table_email_recipient_groups_insert_input! ]! , """upsert condition"""
on_conflict: table_email_recipient_groups_on_conflict): table_email_recipient_groups_mutation_response
  """
  insert a single row into the table: "table_email_recipient_groups"
  """
 insert_table_email_recipient_groups_one("""the row to be inserted"""
object: table_email_recipient_groups_insert_input! , """upsert condition"""
on_conflict: table_email_recipient_groups_on_conflict): table_email_recipient_groups
  """
  insert data into the table: "table_email_templates"
  """
 insert_table_email_templates("""the rows to be inserted"""
objects: [table_email_templates_insert_input! ]! , """upsert condition"""
on_conflict: table_email_templates_on_conflict): table_email_templates_mutation_response
  """
  insert a single row into the table: "table_email_templates"
  """
 insert_table_email_templates_one("""the row to be inserted"""
object: table_email_templates_insert_input! , """upsert condition"""
on_conflict: table_email_templates_on_conflict): table_email_templates
  """
  insert data into the table: "track_review_auto_assigns"
  """
 insert_track_review_auto_assigns("""the rows to be inserted"""
objects: [track_review_auto_assigns_insert_input! ]! , """upsert condition"""
on_conflict: track_review_auto_assigns_on_conflict): track_review_auto_assigns_mutation_response
  """
  insert a single row into the table: "track_review_auto_assigns"
  """
 insert_track_review_auto_assigns_one("""the row to be inserted"""
object: track_review_auto_assigns_insert_input! , """upsert condition"""
on_conflict: track_review_auto_assigns_on_conflict): track_review_auto_assigns
  """
  insert data into the table: "user_asked_for_ratings"
  """
 insert_user_asked_for_ratings("""the rows to be inserted"""
objects: [user_asked_for_ratings_insert_input! ]! , """upsert condition"""
on_conflict: user_asked_for_ratings_on_conflict): user_asked_for_ratings_mutation_response
  """
  insert a single row into the table: "user_asked_for_ratings"
  """
 insert_user_asked_for_ratings_one("""the row to be inserted"""
object: user_asked_for_ratings_insert_input! , """upsert condition"""
on_conflict: user_asked_for_ratings_on_conflict): user_asked_for_ratings
  """
  insert data into the table: "user_emails"
  """
 insert_user_emails("""the rows to be inserted"""
objects: [user_emails_insert_input! ]! ): user_emails_mutation_response
  """
  insert a single row into the table: "user_emails"
  """
 insert_user_emails_one("""the row to be inserted"""
object: user_emails_insert_input! ): user_emails
  """
  insert data into the table: "user_view"
  """
 insert_user_view("""the rows to be inserted"""
objects: [user_view_insert_input! ]! ): user_view_mutation_response
  """
  insert a single row into the table: "user_view"
  """
 insert_user_view_one("""the row to be inserted"""
object: user_view_insert_input! ): user_view
  """
  insert data into the table: "users"
  """
 insert_users("""the rows to be inserted"""
objects: [users_insert_input! ]! , """upsert condition"""
on_conflict: users_on_conflict): users_mutation_response
  """
  insert a single row into the table: "users"
  """
 insert_users_one("""the row to be inserted"""
object: users_insert_input! , """upsert condition"""
on_conflict: users_on_conflict): users
  """
  insert data into the table: "verified_sender_emails"
  """
 insert_verified_sender_emails("""the rows to be inserted"""
objects: [verified_sender_emails_insert_input! ]! , """upsert condition"""
on_conflict: verified_sender_emails_on_conflict): verified_sender_emails_mutation_response
  """
  insert a single row into the table: "verified_sender_emails"
  """
 insert_verified_sender_emails_one("""the row to be inserted"""
object: verified_sender_emails_insert_input! , """upsert condition"""
on_conflict: verified_sender_emails_on_conflict): verified_sender_emails
  """
  insert data into the table: "virtual_conference_announcement_button_clicks"
  """
 insert_virtual_conference_announcement_button_clicks("""the rows to be inserted"""
objects: [virtual_conference_announcement_button_clicks_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_announcement_button_clicks_on_conflict): virtual_conference_announcement_button_clicks_mutation_response
  """
  insert a single row into the table: "virtual_conference_announcement_button_clicks"
  """
 insert_virtual_conference_announcement_button_clicks_one("""the row to be inserted"""
object: virtual_conference_announcement_button_clicks_insert_input! , """upsert condition"""
on_conflict: virtual_conference_announcement_button_clicks_on_conflict): virtual_conference_announcement_button_clicks
  """
  insert data into the table: "virtual_conference_announcement_dismissals"
  """
 insert_virtual_conference_announcement_dismissals("""the rows to be inserted"""
objects: [virtual_conference_announcement_dismissals_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_announcement_dismissals_on_conflict): virtual_conference_announcement_dismissals_mutation_response
  """
  insert a single row into the table: "virtual_conference_announcement_dismissals"
  """
 insert_virtual_conference_announcement_dismissals_one("""the row to be inserted"""
object: virtual_conference_announcement_dismissals_insert_input! , """upsert condition"""
on_conflict: virtual_conference_announcement_dismissals_on_conflict): virtual_conference_announcement_dismissals
  """
  insert data into the table: "virtual_conference_announcement_views"
  """
 insert_virtual_conference_announcement_views("""the rows to be inserted"""
objects: [virtual_conference_announcement_views_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_announcement_views_on_conflict): virtual_conference_announcement_views_mutation_response
  """
  insert a single row into the table: "virtual_conference_announcement_views"
  """
 insert_virtual_conference_announcement_views_one("""the row to be inserted"""
object: virtual_conference_announcement_views_insert_input! , """upsert condition"""
on_conflict: virtual_conference_announcement_views_on_conflict): virtual_conference_announcement_views
  """
  insert data into the table: "virtual_conference_announcements"
  """
 insert_virtual_conference_announcements("""the rows to be inserted"""
objects: [virtual_conference_announcements_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_announcements_on_conflict): virtual_conference_announcements_mutation_response
  """
  insert a single row into the table: "virtual_conference_announcements"
  """
 insert_virtual_conference_announcements_one("""the row to be inserted"""
object: virtual_conference_announcements_insert_input! , """upsert condition"""
on_conflict: virtual_conference_announcements_on_conflict): virtual_conference_announcements
  """
  insert data into the table: "virtual_conference_chat_group_invitations"
  """
 insert_virtual_conference_chat_group_invitations("""the rows to be inserted"""
objects: [virtual_conference_chat_group_invitations_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_chat_group_invitations_on_conflict): virtual_conference_chat_group_invitations_mutation_response
  """
  insert a single row into the table: "virtual_conference_chat_group_invitations"
  """
 insert_virtual_conference_chat_group_invitations_one("""the row to be inserted"""
object: virtual_conference_chat_group_invitations_insert_input! , """upsert condition"""
on_conflict: virtual_conference_chat_group_invitations_on_conflict): virtual_conference_chat_group_invitations
  """
  insert data into the table: "virtual_conference_chat_group_reports"
  """
 insert_virtual_conference_chat_group_reports("""the rows to be inserted"""
objects: [virtual_conference_chat_group_reports_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_chat_group_reports_on_conflict): virtual_conference_chat_group_reports_mutation_response
  """
  insert a single row into the table: "virtual_conference_chat_group_reports"
  """
 insert_virtual_conference_chat_group_reports_one("""the row to be inserted"""
object: virtual_conference_chat_group_reports_insert_input! , """upsert condition"""
on_conflict: virtual_conference_chat_group_reports_on_conflict): virtual_conference_chat_group_reports
  """
  insert data into the table: "virtual_conference_chat_group_reports_read_by"
  """
 insert_virtual_conference_chat_group_reports_read_by("""the rows to be inserted"""
objects: [virtual_conference_chat_group_reports_read_by_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_chat_group_reports_read_by_on_conflict): virtual_conference_chat_group_reports_read_by_mutation_response
  """
  insert a single row into the table: "virtual_conference_chat_group_reports_read_by"
  """
 insert_virtual_conference_chat_group_reports_read_by_one("""the row to be inserted"""
object: virtual_conference_chat_group_reports_read_by_insert_input! , """upsert condition"""
on_conflict: virtual_conference_chat_group_reports_read_by_on_conflict): virtual_conference_chat_group_reports_read_by
  """
  insert data into the table: "virtual_conference_chat_groups"
  """
 insert_virtual_conference_chat_groups("""the rows to be inserted"""
objects: [virtual_conference_chat_groups_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_chat_groups_on_conflict): virtual_conference_chat_groups_mutation_response
  """
  insert a single row into the table: "virtual_conference_chat_groups"
  """
 insert_virtual_conference_chat_groups_one("""the row to be inserted"""
object: virtual_conference_chat_groups_insert_input! , """upsert condition"""
on_conflict: virtual_conference_chat_groups_on_conflict): virtual_conference_chat_groups
  """
  insert data into the table: "virtual_conference_cron_job_last_rans"
  """
 insert_virtual_conference_cron_job_last_rans("""the rows to be inserted"""
objects: [virtual_conference_cron_job_last_rans_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_cron_job_last_rans_on_conflict): virtual_conference_cron_job_last_rans_mutation_response
  """
  insert a single row into the table: "virtual_conference_cron_job_last_rans"
  """
 insert_virtual_conference_cron_job_last_rans_one("""the row to be inserted"""
object: virtual_conference_cron_job_last_rans_insert_input! , """upsert condition"""
on_conflict: virtual_conference_cron_job_last_rans_on_conflict): virtual_conference_cron_job_last_rans
  """
  insert data into the table: "virtual_conference_direct_chat_blocks"
  """
 insert_virtual_conference_direct_chat_blocks("""the rows to be inserted"""
objects: [virtual_conference_direct_chat_blocks_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_direct_chat_blocks_on_conflict): virtual_conference_direct_chat_blocks_mutation_response
  """
  insert a single row into the table: "virtual_conference_direct_chat_blocks"
  """
 insert_virtual_conference_direct_chat_blocks_one("""the row to be inserted"""
object: virtual_conference_direct_chat_blocks_insert_input! , """upsert condition"""
on_conflict: virtual_conference_direct_chat_blocks_on_conflict): virtual_conference_direct_chat_blocks
  """
  insert data into the table: "virtual_conference_direct_messages"
  """
 insert_virtual_conference_direct_messages("""the rows to be inserted"""
objects: [virtual_conference_direct_messages_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_direct_messages_on_conflict): virtual_conference_direct_messages_mutation_response
  """
  insert a single row into the table: "virtual_conference_direct_messages"
  """
 insert_virtual_conference_direct_messages_one("""the row to be inserted"""
object: virtual_conference_direct_messages_insert_input! , """upsert condition"""
on_conflict: virtual_conference_direct_messages_on_conflict): virtual_conference_direct_messages
  """
  insert data into the table: "virtual_conference_direct_video_calls"
  """
 insert_virtual_conference_direct_video_calls("""the rows to be inserted"""
objects: [virtual_conference_direct_video_calls_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_direct_video_calls_on_conflict): virtual_conference_direct_video_calls_mutation_response
  """
  insert a single row into the table: "virtual_conference_direct_video_calls"
  """
 insert_virtual_conference_direct_video_calls_one("""the row to be inserted"""
object: virtual_conference_direct_video_calls_insert_input! , """upsert condition"""
on_conflict: virtual_conference_direct_video_calls_on_conflict): virtual_conference_direct_video_calls
  """
  insert data into the table: "virtual_conference_email_notification_speeds"
  """
 insert_virtual_conference_email_notification_speeds("""the rows to be inserted"""
objects: [virtual_conference_email_notification_speeds_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_email_notification_speeds_on_conflict): virtual_conference_email_notification_speeds_mutation_response
  """
  insert a single row into the table: "virtual_conference_email_notification_speeds"
  """
 insert_virtual_conference_email_notification_speeds_one("""the row to be inserted"""
object: virtual_conference_email_notification_speeds_insert_input! , """upsert condition"""
on_conflict: virtual_conference_email_notification_speeds_on_conflict): virtual_conference_email_notification_speeds
  """
  insert data into the table: "virtual_conference_event_chat_blocks"
  """
 insert_virtual_conference_event_chat_blocks("""the rows to be inserted"""
objects: [virtual_conference_event_chat_blocks_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_event_chat_blocks_on_conflict): virtual_conference_event_chat_blocks_mutation_response
  """
  insert a single row into the table: "virtual_conference_event_chat_blocks"
  """
 insert_virtual_conference_event_chat_blocks_one("""the row to be inserted"""
object: virtual_conference_event_chat_blocks_insert_input! , """upsert condition"""
on_conflict: virtual_conference_event_chat_blocks_on_conflict): virtual_conference_event_chat_blocks
  """
  insert data into the table: "virtual_conference_event_interests"
  """
 insert_virtual_conference_event_interests("""the rows to be inserted"""
objects: [virtual_conference_event_interests_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_event_interests_on_conflict): virtual_conference_event_interests_mutation_response
  """
  insert a single row into the table: "virtual_conference_event_interests"
  """
 insert_virtual_conference_event_interests_one("""the row to be inserted"""
object: virtual_conference_event_interests_insert_input! , """upsert condition"""
on_conflict: virtual_conference_event_interests_on_conflict): virtual_conference_event_interests
  """
  insert data into the table: "virtual_conference_event_messages"
  """
 insert_virtual_conference_event_messages("""the rows to be inserted"""
objects: [virtual_conference_event_messages_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_event_messages_on_conflict): virtual_conference_event_messages_mutation_response
  """
  insert data into the table: "virtual_conference_event_messages_last_read"
  """
 insert_virtual_conference_event_messages_last_read("""the rows to be inserted"""
objects: [virtual_conference_event_messages_last_read_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_event_messages_last_read_on_conflict): virtual_conference_event_messages_last_read_mutation_response
  """
  insert a single row into the table: "virtual_conference_event_messages_last_read"
  """
 insert_virtual_conference_event_messages_last_read_one("""the row to be inserted"""
object: virtual_conference_event_messages_last_read_insert_input! , """upsert condition"""
on_conflict: virtual_conference_event_messages_last_read_on_conflict): virtual_conference_event_messages_last_read
  """
  insert a single row into the table: "virtual_conference_event_messages"
  """
 insert_virtual_conference_event_messages_one("""the row to be inserted"""
object: virtual_conference_event_messages_insert_input! , """upsert condition"""
on_conflict: virtual_conference_event_messages_on_conflict): virtual_conference_event_messages
  """
  insert data into the table: "virtual_conference_group_chat_message_reads"
  """
 insert_virtual_conference_group_chat_message_reads("""the rows to be inserted"""
objects: [virtual_conference_group_chat_message_reads_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_group_chat_message_reads_on_conflict): virtual_conference_group_chat_message_reads_mutation_response
  """
  insert a single row into the table: "virtual_conference_group_chat_message_reads"
  """
 insert_virtual_conference_group_chat_message_reads_one("""the row to be inserted"""
object: virtual_conference_group_chat_message_reads_insert_input! , """upsert condition"""
on_conflict: virtual_conference_group_chat_message_reads_on_conflict): virtual_conference_group_chat_message_reads
  """
  insert data into the table: "virtual_conference_group_chat_messages"
  """
 insert_virtual_conference_group_chat_messages("""the rows to be inserted"""
objects: [virtual_conference_group_chat_messages_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_group_chat_messages_on_conflict): virtual_conference_group_chat_messages_mutation_response
  """
  insert a single row into the table: "virtual_conference_group_chat_messages"
  """
 insert_virtual_conference_group_chat_messages_one("""the row to be inserted"""
object: virtual_conference_group_chat_messages_insert_input! , """upsert condition"""
on_conflict: virtual_conference_group_chat_messages_on_conflict): virtual_conference_group_chat_messages
  """
  insert data into the table: "virtual_conference_group_video_call_dismissals"
  """
 insert_virtual_conference_group_video_call_dismissals("""the rows to be inserted"""
objects: [virtual_conference_group_video_call_dismissals_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_group_video_call_dismissals_on_conflict): virtual_conference_group_video_call_dismissals_mutation_response
  """
  insert a single row into the table: "virtual_conference_group_video_call_dismissals"
  """
 insert_virtual_conference_group_video_call_dismissals_one("""the row to be inserted"""
object: virtual_conference_group_video_call_dismissals_insert_input! , """upsert condition"""
on_conflict: virtual_conference_group_video_call_dismissals_on_conflict): virtual_conference_group_video_call_dismissals
  """
  insert data into the table: "virtual_conference_group_video_call_durations"
  """
 insert_virtual_conference_group_video_call_durations("""the rows to be inserted"""
objects: [virtual_conference_group_video_call_durations_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_group_video_call_durations_on_conflict): virtual_conference_group_video_call_durations_mutation_response
  """
  insert a single row into the table: "virtual_conference_group_video_call_durations"
  """
 insert_virtual_conference_group_video_call_durations_one("""the row to be inserted"""
object: virtual_conference_group_video_call_durations_insert_input! , """upsert condition"""
on_conflict: virtual_conference_group_video_call_durations_on_conflict): virtual_conference_group_video_call_durations
  """
  insert data into the table: "virtual_conference_group_video_call_joins"
  """
 insert_virtual_conference_group_video_call_joins("""the rows to be inserted"""
objects: [virtual_conference_group_video_call_joins_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_group_video_call_joins_on_conflict): virtual_conference_group_video_call_joins_mutation_response
  """
  insert a single row into the table: "virtual_conference_group_video_call_joins"
  """
 insert_virtual_conference_group_video_call_joins_one("""the row to be inserted"""
object: virtual_conference_group_video_call_joins_insert_input! , """upsert condition"""
on_conflict: virtual_conference_group_video_call_joins_on_conflict): virtual_conference_group_video_call_joins
  """
  insert data into the table: "virtual_conference_group_video_call_notification_dismissals"
  """
 insert_virtual_conference_group_video_call_notification_dismissals("""the rows to be inserted"""
objects: [virtual_conference_group_video_call_notification_dismissals_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_group_video_call_notification_dismissals_on_conflict): virtual_conference_group_video_call_notification_dismissals_mutation_response
  """
  insert a single row into the table: "virtual_conference_group_video_call_notification_dismissals"
  """
 insert_virtual_conference_group_video_call_notification_dismissals_one("""the row to be inserted"""
object: virtual_conference_group_video_call_notification_dismissals_insert_input! , """upsert condition"""
on_conflict: virtual_conference_group_video_call_notification_dismissals_on_conflict): virtual_conference_group_video_call_notification_dismissals
  """
  insert data into the table: "virtual_conference_name_badge"
  """
 insert_virtual_conference_name_badge("""the rows to be inserted"""
objects: [virtual_conference_name_badge_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_name_badge_on_conflict): virtual_conference_name_badge_mutation_response
  """
  insert a single row into the table: "virtual_conference_name_badge"
  """
 insert_virtual_conference_name_badge_one("""the row to be inserted"""
object: virtual_conference_name_badge_insert_input! , """upsert condition"""
on_conflict: virtual_conference_name_badge_on_conflict): virtual_conference_name_badge
  """
  insert data into the table: "virtual_conference_notification_preferences"
  """
 insert_virtual_conference_notification_preferences("""the rows to be inserted"""
objects: [virtual_conference_notification_preferences_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_notification_preferences_on_conflict): virtual_conference_notification_preferences_mutation_response
  """
  insert a single row into the table: "virtual_conference_notification_preferences"
  """
 insert_virtual_conference_notification_preferences_one("""the row to be inserted"""
object: virtual_conference_notification_preferences_insert_input! , """upsert condition"""
on_conflict: virtual_conference_notification_preferences_on_conflict): virtual_conference_notification_preferences
  """
  insert data into the table: "virtual_conference_page_views"
  """
 insert_virtual_conference_page_views("""the rows to be inserted"""
objects: [virtual_conference_page_views_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_page_views_on_conflict): virtual_conference_page_views_mutation_response
  """
  insert a single row into the table: "virtual_conference_page_views"
  """
 insert_virtual_conference_page_views_one("""the row to be inserted"""
object: virtual_conference_page_views_insert_input! , """upsert condition"""
on_conflict: virtual_conference_page_views_on_conflict): virtual_conference_page_views
  """
  insert data into the table: "virtual_conference_poster_views"
  """
 insert_virtual_conference_poster_views("""the rows to be inserted"""
objects: [virtual_conference_poster_views_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_poster_views_on_conflict): virtual_conference_poster_views_mutation_response
  """
  insert a single row into the table: "virtual_conference_poster_views"
  """
 insert_virtual_conference_poster_views_one("""the row to be inserted"""
object: virtual_conference_poster_views_insert_input! , """upsert condition"""
on_conflict: virtual_conference_poster_views_on_conflict): virtual_conference_poster_views
  """
  insert data into the table: "virtual_conference_requests"
  """
 insert_virtual_conference_requests("""the rows to be inserted"""
objects: [virtual_conference_requests_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_requests_on_conflict): virtual_conference_requests_mutation_response
  """
  insert a single row into the table: "virtual_conference_requests"
  """
 insert_virtual_conference_requests_one("""the row to be inserted"""
object: virtual_conference_requests_insert_input! , """upsert condition"""
on_conflict: virtual_conference_requests_on_conflict): virtual_conference_requests
  """
  insert data into the table: "virtual_conference_saved_badges"
  """
 insert_virtual_conference_saved_badges("""the rows to be inserted"""
objects: [virtual_conference_saved_badges_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_saved_badges_on_conflict): virtual_conference_saved_badges_mutation_response
  """
  insert a single row into the table: "virtual_conference_saved_badges"
  """
 insert_virtual_conference_saved_badges_one("""the row to be inserted"""
object: virtual_conference_saved_badges_insert_input! , """upsert condition"""
on_conflict: virtual_conference_saved_badges_on_conflict): virtual_conference_saved_badges
  """
  insert data into the table: "virtual_conference_session_bookmarks"
  """
 insert_virtual_conference_session_bookmarks("""the rows to be inserted"""
objects: [virtual_conference_session_bookmarks_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_session_bookmarks_on_conflict): virtual_conference_session_bookmarks_mutation_response
  """
  insert a single row into the table: "virtual_conference_session_bookmarks"
  """
 insert_virtual_conference_session_bookmarks_one("""the row to be inserted"""
object: virtual_conference_session_bookmarks_insert_input! , """upsert condition"""
on_conflict: virtual_conference_session_bookmarks_on_conflict): virtual_conference_session_bookmarks
  """
  insert data into the table: "virtual_conference_session_views"
  """
 insert_virtual_conference_session_views("""the rows to be inserted"""
objects: [virtual_conference_session_views_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_session_views_on_conflict): virtual_conference_session_views_mutation_response
  """
  insert a single row into the table: "virtual_conference_session_views"
  """
 insert_virtual_conference_session_views_one("""the row to be inserted"""
object: virtual_conference_session_views_insert_input! , """upsert condition"""
on_conflict: virtual_conference_session_views_on_conflict): virtual_conference_session_views
  """
  insert data into the table: "virtual_conference_sessions"
  """
 insert_virtual_conference_sessions("""the rows to be inserted"""
objects: [virtual_conference_sessions_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_sessions_on_conflict): virtual_conference_sessions_mutation_response
  """
  insert a single row into the table: "virtual_conference_sessions"
  """
 insert_virtual_conference_sessions_one("""the row to be inserted"""
object: virtual_conference_sessions_insert_input! , """upsert condition"""
on_conflict: virtual_conference_sessions_on_conflict): virtual_conference_sessions
  """
  insert data into the table: "virtual_conference_submission_bookmarks"
  """
 insert_virtual_conference_submission_bookmarks("""the rows to be inserted"""
objects: [virtual_conference_submission_bookmarks_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_submission_bookmarks_on_conflict): virtual_conference_submission_bookmarks_mutation_response
  """
  insert a single row into the table: "virtual_conference_submission_bookmarks"
  """
 insert_virtual_conference_submission_bookmarks_one("""the row to be inserted"""
object: virtual_conference_submission_bookmarks_insert_input! , """upsert condition"""
on_conflict: virtual_conference_submission_bookmarks_on_conflict): virtual_conference_submission_bookmarks
  """
  insert data into the table: "virtual_conference_submission_views"
  """
 insert_virtual_conference_submission_views("""the rows to be inserted"""
objects: [virtual_conference_submission_views_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_submission_views_on_conflict): virtual_conference_submission_views_mutation_response
  """
  insert a single row into the table: "virtual_conference_submission_views"
  """
 insert_virtual_conference_submission_views_one("""the row to be inserted"""
object: virtual_conference_submission_views_insert_input! , """upsert condition"""
on_conflict: virtual_conference_submission_views_on_conflict): virtual_conference_submission_views
  """
  insert data into the table: "virtual_conference_symposium_views"
  """
 insert_virtual_conference_symposium_views("""the rows to be inserted"""
objects: [virtual_conference_symposium_views_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_symposium_views_on_conflict): virtual_conference_symposium_views_mutation_response
  """
  insert a single row into the table: "virtual_conference_symposium_views"
  """
 insert_virtual_conference_symposium_views_one("""the row to be inserted"""
object: virtual_conference_symposium_views_insert_input! , """upsert condition"""
on_conflict: virtual_conference_symposium_views_on_conflict): virtual_conference_symposium_views
  """
  insert data into the table: "virtual_conference_user_heartbeats"
  """
 insert_virtual_conference_user_heartbeats("""the rows to be inserted"""
objects: [virtual_conference_user_heartbeats_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_user_heartbeats_on_conflict): virtual_conference_user_heartbeats_mutation_response
  """
  insert a single row into the table: "virtual_conference_user_heartbeats"
  """
 insert_virtual_conference_user_heartbeats_one("""the row to be inserted"""
object: virtual_conference_user_heartbeats_insert_input! , """upsert condition"""
on_conflict: virtual_conference_user_heartbeats_on_conflict): virtual_conference_user_heartbeats
  """
  insert data into the table: "virtual_conference_user_interests"
  """
 insert_virtual_conference_user_interests("""the rows to be inserted"""
objects: [virtual_conference_user_interests_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_user_interests_on_conflict): virtual_conference_user_interests_mutation_response
  """
  insert a single row into the table: "virtual_conference_user_interests"
  """
 insert_virtual_conference_user_interests_one("""the row to be inserted"""
object: virtual_conference_user_interests_insert_input! , """upsert condition"""
on_conflict: virtual_conference_user_interests_on_conflict): virtual_conference_user_interests
  """
  insert data into the table: "virtual_conference_user_notifications_last_emailed"
  """
 insert_virtual_conference_user_notifications_last_emailed("""the rows to be inserted"""
objects: [virtual_conference_user_notifications_last_emailed_insert_input! ]! , """upsert condition"""
on_conflict: virtual_conference_user_notifications_last_emailed_on_conflict): virtual_conference_user_notifications_last_emailed_mutation_response
  """
  insert a single row into the table: "virtual_conference_user_notifications_last_emailed"
  """
 insert_virtual_conference_user_notifications_last_emailed_one("""the row to be inserted"""
object: virtual_conference_user_notifications_last_emailed_insert_input! , """upsert condition"""
on_conflict: virtual_conference_user_notifications_last_emailed_on_conflict): virtual_conference_user_notifications_last_emailed
  """
  insert data into the table: "walkthrough_metrics"
  """
 insert_walkthrough_metrics("""the rows to be inserted"""
objects: [walkthrough_metrics_insert_input! ]! , """upsert condition"""
on_conflict: walkthrough_metrics_on_conflict): walkthrough_metrics_mutation_response
  """
  insert a single row into the table: "walkthrough_metrics"
  """
 insert_walkthrough_metrics_one("""the row to be inserted"""
object: walkthrough_metrics_insert_input! , """upsert condition"""
on_conflict: walkthrough_metrics_on_conflict): walkthrough_metrics
  """
  insert data into the table: "zoom_users_cache"
  """
 insert_zoom_users_cache("""the rows to be inserted"""
objects: [zoom_users_cache_insert_input! ]! , """upsert condition"""
on_conflict: zoom_users_cache_on_conflict): zoom_users_cache_mutation_response
  """
  insert a single row into the table: "zoom_users_cache"
  """
 insert_zoom_users_cache_one("""the row to be inserted"""
object: zoom_users_cache_insert_input! , """upsert condition"""
on_conflict: zoom_users_cache_on_conflict): zoom_users_cache
   phone_number_validate(input: TelephoneNumberToValidate! ): TelephoneValidationOutput! 
   send_event_admin_emails(append_signature: Boolean! , attachments: [InputEmailAttachment! ]! , blind_cc_admin: Boolean! , body: String! , cc_admin: Boolean! , recipients: [InputEmailRecipient! ]! , subject: String! ): SendEventAdminEmailsOutput! 
  """
  update data of the table: "affiliation_versions"
  """
 update_affiliation_versions("""increments the numeric columns with given value of the filtered values"""
_inc: affiliation_versions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: affiliation_versions_set_input, """filter the rows which have to be updated"""
where: affiliation_versions_bool_exp! ): affiliation_versions_mutation_response
  """
  update single row of the table: "affiliation_versions"
  """
 update_affiliation_versions_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: affiliation_versions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: affiliation_versions_set_input, pk_columns: affiliation_versions_pk_columns_input! ): affiliation_versions
  """
  update multiples rows of table: "affiliation_versions"
  """
 update_affiliation_versions_many("""updates to execute, in order"""
updates: [affiliation_versions_updates! ]! ): [affiliation_versions_mutation_response]
  """
  update data of the table: "affiliations"
  """
 update_affiliations("""increments the numeric columns with given value of the filtered values"""
_inc: affiliations_inc_input, """sets the columns of the filtered rows to the given values"""
_set: affiliations_set_input, """filter the rows which have to be updated"""
where: affiliations_bool_exp! ): affiliations_mutation_response
  """
  update single row of the table: "affiliations"
  """
 update_affiliations_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: affiliations_inc_input, """sets the columns of the filtered rows to the given values"""
_set: affiliations_set_input, pk_columns: affiliations_pk_columns_input! ): affiliations
  """
  update multiples rows of table: "affiliations"
  """
 update_affiliations_many("""updates to execute, in order"""
updates: [affiliations_updates! ]! ): [affiliations_mutation_response]
  """
  update data of the table: "allowed_submitters"
  """
 update_allowed_submitters("""increments the numeric columns with given value of the filtered values"""
_inc: allowed_submitters_inc_input, """sets the columns of the filtered rows to the given values"""
_set: allowed_submitters_set_input, """filter the rows which have to be updated"""
where: allowed_submitters_bool_exp! ): allowed_submitters_mutation_response
  """
  update single row of the table: "allowed_submitters"
  """
 update_allowed_submitters_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: allowed_submitters_inc_input, """sets the columns of the filtered rows to the given values"""
_set: allowed_submitters_set_input, pk_columns: allowed_submitters_pk_columns_input! ): allowed_submitters
  """
  update multiples rows of table: "allowed_submitters"
  """
 update_allowed_submitters_many("""updates to execute, in order"""
updates: [allowed_submitters_updates! ]! ): [allowed_submitters_mutation_response]
  """
  update data of the table: "api_keys"
  """
 update_api_keys("""increments the numeric columns with given value of the filtered values"""
_inc: api_keys_inc_input, """sets the columns of the filtered rows to the given values"""
_set: api_keys_set_input, """filter the rows which have to be updated"""
where: api_keys_bool_exp! ): api_keys_mutation_response
  """
  update multiples rows of table: "api_keys"
  """
 update_api_keys_many("""updates to execute, in order"""
updates: [api_keys_updates! ]! ): [api_keys_mutation_response]
  """
  update data of the table: "author_field_response_versions"
  """
 update_author_field_response_versions("""increments the numeric columns with given value of the filtered values"""
_inc: author_field_response_versions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: author_field_response_versions_set_input, """filter the rows which have to be updated"""
where: author_field_response_versions_bool_exp! ): author_field_response_versions_mutation_response
  """
  update single row of the table: "author_field_response_versions"
  """
 update_author_field_response_versions_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: author_field_response_versions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: author_field_response_versions_set_input, pk_columns: author_field_response_versions_pk_columns_input! ): author_field_response_versions
  """
  update multiples rows of table: "author_field_response_versions"
  """
 update_author_field_response_versions_many("""updates to execute, in order"""
updates: [author_field_response_versions_updates! ]! ): [author_field_response_versions_mutation_response]
  """
  update data of the table: "author_field_responses"
  """
 update_author_field_responses("""increments the numeric columns with given value of the filtered values"""
_inc: author_field_responses_inc_input, """sets the columns of the filtered rows to the given values"""
_set: author_field_responses_set_input, """filter the rows which have to be updated"""
where: author_field_responses_bool_exp! ): author_field_responses_mutation_response
  """
  update single row of the table: "author_field_responses"
  """
 update_author_field_responses_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: author_field_responses_inc_input, """sets the columns of the filtered rows to the given values"""
_set: author_field_responses_set_input, pk_columns: author_field_responses_pk_columns_input! ): author_field_responses
  """
  update multiples rows of table: "author_field_responses"
  """
 update_author_field_responses_many("""updates to execute, in order"""
updates: [author_field_responses_updates! ]! ): [author_field_responses_mutation_response]
  """
  update data of the table: "author_fields"
  """
 update_author_fields("""increments the numeric columns with given value of the filtered values"""
_inc: author_fields_inc_input, """sets the columns of the filtered rows to the given values"""
_set: author_fields_set_input, """filter the rows which have to be updated"""
where: author_fields_bool_exp! ): author_fields_mutation_response
  """
  update single row of the table: "author_fields"
  """
 update_author_fields_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: author_fields_inc_input, """sets the columns of the filtered rows to the given values"""
_set: author_fields_set_input, pk_columns: author_fields_pk_columns_input! ): author_fields
  """
  update multiples rows of table: "author_fields"
  """
 update_author_fields_many("""updates to execute, in order"""
updates: [author_fields_updates! ]! ): [author_fields_mutation_response]
  """
  update data of the table: "author_versions"
  """
 update_author_versions("""increments the numeric columns with given value of the filtered values"""
_inc: author_versions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: author_versions_set_input, """filter the rows which have to be updated"""
where: author_versions_bool_exp! ): author_versions_mutation_response
  """
  update single row of the table: "author_versions"
  """
 update_author_versions_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: author_versions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: author_versions_set_input, pk_columns: author_versions_pk_columns_input! ): author_versions
  """
  update multiples rows of table: "author_versions"
  """
 update_author_versions_many("""updates to execute, in order"""
updates: [author_versions_updates! ]! ): [author_versions_mutation_response]
  """
  update data of the table: "authors"
  """
 update_authors("""increments the numeric columns with given value of the filtered values"""
_inc: authors_inc_input, """sets the columns of the filtered rows to the given values"""
_set: authors_set_input, """filter the rows which have to be updated"""
where: authors_bool_exp! ): authors_mutation_response
  """
  update single row of the table: "authors"
  """
 update_authors_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: authors_inc_input, """sets the columns of the filtered rows to the given values"""
_set: authors_set_input, pk_columns: authors_pk_columns_input! ): authors
  """
  update multiples rows of table: "authors"
  """
 update_authors_many("""updates to execute, in order"""
updates: [authors_updates! ]! ): [authors_mutation_response]
  """
  update data of the table: "browser_errors"
  """
 update_browser_errors("""increments the numeric columns with given value of the filtered values"""
_inc: browser_errors_inc_input, """sets the columns of the filtered rows to the given values"""
_set: browser_errors_set_input, """filter the rows which have to be updated"""
where: browser_errors_bool_exp! ): browser_errors_mutation_response
  """
  update single row of the table: "browser_errors"
  """
 update_browser_errors_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: browser_errors_inc_input, """sets the columns of the filtered rows to the given values"""
_set: browser_errors_set_input, pk_columns: browser_errors_pk_columns_input! ): browser_errors
  """
  update multiples rows of table: "browser_errors"
  """
 update_browser_errors_many("""updates to execute, in order"""
updates: [browser_errors_updates! ]! ): [browser_errors_mutation_response]
  """
  update data of the table: "categories"
  """
 update_categories("""increments the numeric columns with given value of the filtered values"""
_inc: categories_inc_input, """sets the columns of the filtered rows to the given values"""
_set: categories_set_input, """filter the rows which have to be updated"""
where: categories_bool_exp! ): categories_mutation_response
  """
  update multiples rows of table: "categories"
  """
 update_categories_many("""updates to execute, in order"""
updates: [categories_updates! ]! ): [categories_mutation_response]
  """
  update data of the table: "clients"
  """
 update_clients("""increments the numeric columns with given value of the filtered values"""
_inc: clients_inc_input, """sets the columns of the filtered rows to the given values"""
_set: clients_set_input, """filter the rows which have to be updated"""
where: clients_bool_exp! ): clients_mutation_response
  """
  update single row of the table: "clients"
  """
 update_clients_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: clients_inc_input, """sets the columns of the filtered rows to the given values"""
_set: clients_set_input, pk_columns: clients_pk_columns_input! ): clients
  """
  update multiples rows of table: "clients"
  """
 update_clients_many("""updates to execute, in order"""
updates: [clients_updates! ]! ): [clients_mutation_response]
  """
  update data of the table: "clients_permissions"
  """
 update_clients_permissions("""increments the numeric columns with given value of the filtered values"""
_inc: clients_permissions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: clients_permissions_set_input, """filter the rows which have to be updated"""
where: clients_permissions_bool_exp! ): clients_permissions_mutation_response
  """
  update multiples rows of table: "clients_permissions"
  """
 update_clients_permissions_many("""updates to execute, in order"""
updates: [clients_permissions_updates! ]! ): [clients_permissions_mutation_response]
  """
  update data of the table: "combined_word_limits"
  """
 update_combined_word_limits("""increments the numeric columns with given value of the filtered values"""
_inc: combined_word_limits_inc_input, """sets the columns of the filtered rows to the given values"""
_set: combined_word_limits_set_input, """filter the rows which have to be updated"""
where: combined_word_limits_bool_exp! ): combined_word_limits_mutation_response
  """
  update single row of the table: "combined_word_limits"
  """
 update_combined_word_limits_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: combined_word_limits_inc_input, """sets the columns of the filtered rows to the given values"""
_set: combined_word_limits_set_input, pk_columns: combined_word_limits_pk_columns_input! ): combined_word_limits
  """
  update multiples rows of table: "combined_word_limits"
  """
 update_combined_word_limits_many("""updates to execute, in order"""
updates: [combined_word_limits_updates! ]! ): [combined_word_limits_mutation_response]
  """
  update data of the table: "custom_logs"
  """
 update_custom_logs("""increments the numeric columns with given value of the filtered values"""
_inc: custom_logs_inc_input, """sets the columns of the filtered rows to the given values"""
_set: custom_logs_set_input, """filter the rows which have to be updated"""
where: custom_logs_bool_exp! ): custom_logs_mutation_response
  """
  update single row of the table: "custom_logs"
  """
 update_custom_logs_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: custom_logs_inc_input, """sets the columns of the filtered rows to the given values"""
_set: custom_logs_set_input, pk_columns: custom_logs_pk_columns_input! ): custom_logs
  """
  update multiples rows of table: "custom_logs"
  """
 update_custom_logs_many("""updates to execute, in order"""
updates: [custom_logs_updates! ]! ): [custom_logs_mutation_response]
  """
  update data of the table: "decision_question_responses"
  """
 update_decision_question_responses("""increments the numeric columns with given value of the filtered values"""
_inc: decision_question_responses_inc_input, """sets the columns of the filtered rows to the given values"""
_set: decision_question_responses_set_input, """filter the rows which have to be updated"""
where: decision_question_responses_bool_exp! ): decision_question_responses_mutation_response
  """
  update single row of the table: "decision_question_responses"
  """
 update_decision_question_responses_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: decision_question_responses_inc_input, """sets the columns of the filtered rows to the given values"""
_set: decision_question_responses_set_input, pk_columns: decision_question_responses_pk_columns_input! ): decision_question_responses
  """
  update multiples rows of table: "decision_question_responses"
  """
 update_decision_question_responses_many("""updates to execute, in order"""
updates: [decision_question_responses_updates! ]! ): [decision_question_responses_mutation_response]
  """
  update data of the table: "decision_questions"
  """
 update_decision_questions("""increments the numeric columns with given value of the filtered values"""
_inc: decision_questions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: decision_questions_set_input, """filter the rows which have to be updated"""
where: decision_questions_bool_exp! ): decision_questions_mutation_response
  """
  update single row of the table: "decision_questions"
  """
 update_decision_questions_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: decision_questions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: decision_questions_set_input, pk_columns: decision_questions_pk_columns_input! ): decision_questions
  """
  update multiples rows of table: "decision_questions"
  """
 update_decision_questions_many("""updates to execute, in order"""
updates: [decision_questions_updates! ]! ): [decision_questions_mutation_response]
  """
  update data of the table: "decisions"
  """
 update_decisions("""increments the numeric columns with given value of the filtered values"""
_inc: decisions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: decisions_set_input, """filter the rows which have to be updated"""
where: decisions_bool_exp! ): decisions_mutation_response
  """
  update single row of the table: "decisions"
  """
 update_decisions_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: decisions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: decisions_set_input, pk_columns: decisions_pk_columns_input! ): decisions
  """
  update multiples rows of table: "decisions"
  """
 update_decisions_many("""updates to execute, in order"""
updates: [decisions_updates! ]! ): [decisions_mutation_response]
  """
  update data of the table: "default_questions"
  """
 update_default_questions("""increments the numeric columns with given value of the filtered values"""
_inc: default_questions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: default_questions_set_input, """filter the rows which have to be updated"""
where: default_questions_bool_exp! ): default_questions_mutation_response
  """
  update single row of the table: "default_questions"
  """
 update_default_questions_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: default_questions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: default_questions_set_input, pk_columns: default_questions_pk_columns_input! ): default_questions
  """
  update multiples rows of table: "default_questions"
  """
 update_default_questions_many("""updates to execute, in order"""
updates: [default_questions_updates! ]! ): [default_questions_mutation_response]
  """
  update data of the table: "delreg_question_responses"
  """
 update_delreg_question_responses("""increments the numeric columns with given value of the filtered values"""
_inc: delreg_question_responses_inc_input, """sets the columns of the filtered rows to the given values"""
_set: delreg_question_responses_set_input, """filter the rows which have to be updated"""
where: delreg_question_responses_bool_exp! ): delreg_question_responses_mutation_response
  """
  update single row of the table: "delreg_question_responses"
  """
 update_delreg_question_responses_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: delreg_question_responses_inc_input, """sets the columns of the filtered rows to the given values"""
_set: delreg_question_responses_set_input, pk_columns: delreg_question_responses_pk_columns_input! ): delreg_question_responses
  """
  update multiples rows of table: "delreg_question_responses"
  """
 update_delreg_question_responses_many("""updates to execute, in order"""
updates: [delreg_question_responses_updates! ]! ): [delreg_question_responses_mutation_response]
  """
  update data of the table: "delreg_question_responses_multi"
  """
 update_delreg_question_responses_multi("""increments the numeric columns with given value of the filtered values"""
_inc: delreg_question_responses_multi_inc_input, """sets the columns of the filtered rows to the given values"""
_set: delreg_question_responses_multi_set_input, """filter the rows which have to be updated"""
where: delreg_question_responses_multi_bool_exp! ): delreg_question_responses_multi_mutation_response
  """
  update multiples rows of table: "delreg_question_responses_multi"
  """
 update_delreg_question_responses_multi_many("""updates to execute, in order"""
updates: [delreg_question_responses_multi_updates! ]! ): [delreg_question_responses_multi_mutation_response]
  """
  update data of the table: "delreg_questions"
  """
 update_delreg_questions("""increments the numeric columns with given value of the filtered values"""
_inc: delreg_questions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: delreg_questions_set_input, """filter the rows which have to be updated"""
where: delreg_questions_bool_exp! ): delreg_questions_mutation_response
  """
  update single row of the table: "delreg_questions"
  """
 update_delreg_questions_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: delreg_questions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: delreg_questions_set_input, pk_columns: delreg_questions_pk_columns_input! ): delreg_questions
  """
  update multiples rows of table: "delreg_questions"
  """
 update_delreg_questions_many("""updates to execute, in order"""
updates: [delreg_questions_updates! ]! ): [delreg_questions_mutation_response]
  """
  update data of the table: "delreg_registrations"
  """
 update_delreg_registrations("""increments the numeric columns with given value of the filtered values"""
_inc: delreg_registrations_inc_input, """sets the columns of the filtered rows to the given values"""
_set: delreg_registrations_set_input, """filter the rows which have to be updated"""
where: delreg_registrations_bool_exp! ): delreg_registrations_mutation_response
  """
  update single row of the table: "delreg_registrations"
  """
 update_delreg_registrations_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: delreg_registrations_inc_input, """sets the columns of the filtered rows to the given values"""
_set: delreg_registrations_set_input, pk_columns: delreg_registrations_pk_columns_input! ): delreg_registrations
  """
  update multiples rows of table: "delreg_registrations"
  """
 update_delreg_registrations_many("""updates to execute, in order"""
updates: [delreg_registrations_updates! ]! ): [delreg_registrations_mutation_response]
  """
  update data of the table: "delreg_ticket_headings"
  """
 update_delreg_ticket_headings("""increments the numeric columns with given value of the filtered values"""
_inc: delreg_ticket_headings_inc_input, """sets the columns of the filtered rows to the given values"""
_set: delreg_ticket_headings_set_input, """filter the rows which have to be updated"""
where: delreg_ticket_headings_bool_exp! ): delreg_ticket_headings_mutation_response
  """
  update single row of the table: "delreg_ticket_headings"
  """
 update_delreg_ticket_headings_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: delreg_ticket_headings_inc_input, """sets the columns of the filtered rows to the given values"""
_set: delreg_ticket_headings_set_input, pk_columns: delreg_ticket_headings_pk_columns_input! ): delreg_ticket_headings
  """
  update multiples rows of table: "delreg_ticket_headings"
  """
 update_delreg_ticket_headings_many("""updates to execute, in order"""
updates: [delreg_ticket_headings_updates! ]! ): [delreg_ticket_headings_mutation_response]
  """
  update data of the table: "delreg_tickets"
  """
 update_delreg_tickets("""increments the numeric columns with given value of the filtered values"""
_inc: delreg_tickets_inc_input, """sets the columns of the filtered rows to the given values"""
_set: delreg_tickets_set_input, """filter the rows which have to be updated"""
where: delreg_tickets_bool_exp! ): delreg_tickets_mutation_response
  """
  update single row of the table: "delreg_tickets"
  """
 update_delreg_tickets_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: delreg_tickets_inc_input, """sets the columns of the filtered rows to the given values"""
_set: delreg_tickets_set_input, pk_columns: delreg_tickets_pk_columns_input! ): delreg_tickets
  """
  update multiples rows of table: "delreg_tickets"
  """
 update_delreg_tickets_many("""updates to execute, in order"""
updates: [delreg_tickets_updates! ]! ): [delreg_tickets_mutation_response]
  """
  update data of the table: "dr_addon_coupons"
  """
 update_dr_addon_coupons("""sets the columns of the filtered rows to the given values"""
_set: dr_addon_coupons_set_input, """filter the rows which have to be updated"""
where: dr_addon_coupons_bool_exp! ): dr_addon_coupons_mutation_response
  """
  update single row of the table: "dr_addon_coupons"
  """
 update_dr_addon_coupons_by_pk("""sets the columns of the filtered rows to the given values"""
_set: dr_addon_coupons_set_input, pk_columns: dr_addon_coupons_pk_columns_input! ): dr_addon_coupons
  """
  update multiples rows of table: "dr_addon_coupons"
  """
 update_dr_addon_coupons_many("""updates to execute, in order"""
updates: [dr_addon_coupons_updates! ]! ): [dr_addon_coupons_mutation_response]
  """
  update data of the table: "dr_addon_questions"
  """
 update_dr_addon_questions("""sets the columns of the filtered rows to the given values"""
_set: dr_addon_questions_set_input, """filter the rows which have to be updated"""
where: dr_addon_questions_bool_exp! ): dr_addon_questions_mutation_response
  """
  update single row of the table: "dr_addon_questions"
  """
 update_dr_addon_questions_by_pk("""sets the columns of the filtered rows to the given values"""
_set: dr_addon_questions_set_input, pk_columns: dr_addon_questions_pk_columns_input! ): dr_addon_questions
  """
  update multiples rows of table: "dr_addon_questions"
  """
 update_dr_addon_questions_many("""updates to execute, in order"""
updates: [dr_addon_questions_updates! ]! ): [dr_addon_questions_mutation_response]
  """
  update data of the table: "dr_addon_tax_rules"
  """
 update_dr_addon_tax_rules("""sets the columns of the filtered rows to the given values"""
_set: dr_addon_tax_rules_set_input, """filter the rows which have to be updated"""
where: dr_addon_tax_rules_bool_exp! ): dr_addon_tax_rules_mutation_response
  """
  update single row of the table: "dr_addon_tax_rules"
  """
 update_dr_addon_tax_rules_by_pk("""sets the columns of the filtered rows to the given values"""
_set: dr_addon_tax_rules_set_input, pk_columns: dr_addon_tax_rules_pk_columns_input! ): dr_addon_tax_rules
  """
  update multiples rows of table: "dr_addon_tax_rules"
  """
 update_dr_addon_tax_rules_many("""updates to execute, in order"""
updates: [dr_addon_tax_rules_updates! ]! ): [dr_addon_tax_rules_mutation_response]
  """
  update data of the table: "dr_addons"
  """
 update_dr_addons("""increments the numeric columns with given value of the filtered values"""
_inc: dr_addons_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_addons_set_input, """filter the rows which have to be updated"""
where: dr_addons_bool_exp! ): dr_addons_mutation_response
  """
  update single row of the table: "dr_addons"
  """
 update_dr_addons_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_addons_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_addons_set_input, pk_columns: dr_addons_pk_columns_input! ): dr_addons
  """
  update multiples rows of table: "dr_addons"
  """
 update_dr_addons_many("""updates to execute, in order"""
updates: [dr_addons_updates! ]! ): [dr_addons_mutation_response]
  """
  update data of the table: "dr_analytics_event_types"
  """
 update_dr_analytics_event_types("""sets the columns of the filtered rows to the given values"""
_set: dr_analytics_event_types_set_input, """filter the rows which have to be updated"""
where: dr_analytics_event_types_bool_exp! ): dr_analytics_event_types_mutation_response
  """
  update single row of the table: "dr_analytics_event_types"
  """
 update_dr_analytics_event_types_by_pk("""sets the columns of the filtered rows to the given values"""
_set: dr_analytics_event_types_set_input, pk_columns: dr_analytics_event_types_pk_columns_input! ): dr_analytics_event_types
  """
  update multiples rows of table: "dr_analytics_event_types"
  """
 update_dr_analytics_event_types_many("""updates to execute, in order"""
updates: [dr_analytics_event_types_updates! ]! ): [dr_analytics_event_types_mutation_response]
  """
  update data of the table: "dr_analytics_events"
  """
 update_dr_analytics_events("""increments the numeric columns with given value of the filtered values"""
_inc: dr_analytics_events_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_analytics_events_set_input, """filter the rows which have to be updated"""
where: dr_analytics_events_bool_exp! ): dr_analytics_events_mutation_response
  """
  update single row of the table: "dr_analytics_events"
  """
 update_dr_analytics_events_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_analytics_events_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_analytics_events_set_input, pk_columns: dr_analytics_events_pk_columns_input! ): dr_analytics_events
  """
  update multiples rows of table: "dr_analytics_events"
  """
 update_dr_analytics_events_many("""updates to execute, in order"""
updates: [dr_analytics_events_updates! ]! ): [dr_analytics_events_mutation_response]
  """
  update data of the table: "dr_attendee_addon_tax_rules"
  """
 update_dr_attendee_addon_tax_rules("""increments the numeric columns with given value of the filtered values"""
_inc: dr_attendee_addon_tax_rules_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_attendee_addon_tax_rules_set_input, """filter the rows which have to be updated"""
where: dr_attendee_addon_tax_rules_bool_exp! ): dr_attendee_addon_tax_rules_mutation_response
  """
  update single row of the table: "dr_attendee_addon_tax_rules"
  """
 update_dr_attendee_addon_tax_rules_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_attendee_addon_tax_rules_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_attendee_addon_tax_rules_set_input, pk_columns: dr_attendee_addon_tax_rules_pk_columns_input! ): dr_attendee_addon_tax_rules
  """
  update multiples rows of table: "dr_attendee_addon_tax_rules"
  """
 update_dr_attendee_addon_tax_rules_many("""updates to execute, in order"""
updates: [dr_attendee_addon_tax_rules_updates! ]! ): [dr_attendee_addon_tax_rules_mutation_response]
  """
  update data of the table: "dr_attendee_addons"
  """
 update_dr_attendee_addons("""increments the numeric columns with given value of the filtered values"""
_inc: dr_attendee_addons_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_attendee_addons_set_input, """filter the rows which have to be updated"""
where: dr_attendee_addons_bool_exp! ): dr_attendee_addons_mutation_response
  """
  update single row of the table: "dr_attendee_addons"
  """
 update_dr_attendee_addons_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_attendee_addons_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_attendee_addons_set_input, pk_columns: dr_attendee_addons_pk_columns_input! ): dr_attendee_addons
  """
  update multiples rows of table: "dr_attendee_addons"
  """
 update_dr_attendee_addons_many("""updates to execute, in order"""
updates: [dr_attendee_addons_updates! ]! ): [dr_attendee_addons_mutation_response]
  """
  update data of the table: "dr_attendee_question_response_options"
  """
 update_dr_attendee_question_response_options("""sets the columns of the filtered rows to the given values"""
_set: dr_attendee_question_response_options_set_input, """filter the rows which have to be updated"""
where: dr_attendee_question_response_options_bool_exp! ): dr_attendee_question_response_options_mutation_response
  """
  update single row of the table: "dr_attendee_question_response_options"
  """
 update_dr_attendee_question_response_options_by_pk("""sets the columns of the filtered rows to the given values"""
_set: dr_attendee_question_response_options_set_input, pk_columns: dr_attendee_question_response_options_pk_columns_input! ): dr_attendee_question_response_options
  """
  update multiples rows of table: "dr_attendee_question_response_options"
  """
 update_dr_attendee_question_response_options_many("""updates to execute, in order"""
updates: [dr_attendee_question_response_options_updates! ]! ): [dr_attendee_question_response_options_mutation_response]
  """
  update data of the table: "dr_attendee_question_responses"
  """
 update_dr_attendee_question_responses("""sets the columns of the filtered rows to the given values"""
_set: dr_attendee_question_responses_set_input, """filter the rows which have to be updated"""
where: dr_attendee_question_responses_bool_exp! ): dr_attendee_question_responses_mutation_response
  """
  update single row of the table: "dr_attendee_question_responses"
  """
 update_dr_attendee_question_responses_by_pk("""sets the columns of the filtered rows to the given values"""
_set: dr_attendee_question_responses_set_input, pk_columns: dr_attendee_question_responses_pk_columns_input! ): dr_attendee_question_responses
  """
  update multiples rows of table: "dr_attendee_question_responses"
  """
 update_dr_attendee_question_responses_many("""updates to execute, in order"""
updates: [dr_attendee_question_responses_updates! ]! ): [dr_attendee_question_responses_mutation_response]
  """
  update data of the table: "dr_attendee_ticket_tax_rules"
  """
 update_dr_attendee_ticket_tax_rules("""increments the numeric columns with given value of the filtered values"""
_inc: dr_attendee_ticket_tax_rules_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_attendee_ticket_tax_rules_set_input, """filter the rows which have to be updated"""
where: dr_attendee_ticket_tax_rules_bool_exp! ): dr_attendee_ticket_tax_rules_mutation_response
  """
  update single row of the table: "dr_attendee_ticket_tax_rules"
  """
 update_dr_attendee_ticket_tax_rules_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_attendee_ticket_tax_rules_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_attendee_ticket_tax_rules_set_input, pk_columns: dr_attendee_ticket_tax_rules_pk_columns_input! ): dr_attendee_ticket_tax_rules
  """
  update multiples rows of table: "dr_attendee_ticket_tax_rules"
  """
 update_dr_attendee_ticket_tax_rules_many("""updates to execute, in order"""
updates: [dr_attendee_ticket_tax_rules_updates! ]! ): [dr_attendee_ticket_tax_rules_mutation_response]
  """
  update data of the table: "dr_attendee_tickets"
  """
 update_dr_attendee_tickets("""increments the numeric columns with given value of the filtered values"""
_inc: dr_attendee_tickets_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_attendee_tickets_set_input, """filter the rows which have to be updated"""
where: dr_attendee_tickets_bool_exp! ): dr_attendee_tickets_mutation_response
  """
  update single row of the table: "dr_attendee_tickets"
  """
 update_dr_attendee_tickets_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_attendee_tickets_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_attendee_tickets_set_input, pk_columns: dr_attendee_tickets_pk_columns_input! ): dr_attendee_tickets
  """
  update multiples rows of table: "dr_attendee_tickets"
  """
 update_dr_attendee_tickets_many("""updates to execute, in order"""
updates: [dr_attendee_tickets_updates! ]! ): [dr_attendee_tickets_mutation_response]
  """
  update data of the table: "dr_attendees"
  """
 update_dr_attendees("""increments the numeric columns with given value of the filtered values"""
_inc: dr_attendees_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_attendees_set_input, """filter the rows which have to be updated"""
where: dr_attendees_bool_exp! ): dr_attendees_mutation_response
  """
  update single row of the table: "dr_attendees"
  """
 update_dr_attendees_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_attendees_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_attendees_set_input, pk_columns: dr_attendees_pk_columns_input! ): dr_attendees
  """
  update multiples rows of table: "dr_attendees"
  """
 update_dr_attendees_many("""updates to execute, in order"""
updates: [dr_attendees_updates! ]! ): [dr_attendees_mutation_response]
  """
  update data of the table: "dr_authorize_webhooks"
  """
 update_dr_authorize_webhooks("""increments the numeric columns with given value of the filtered values"""
_inc: dr_authorize_webhooks_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_authorize_webhooks_set_input, """filter the rows which have to be updated"""
where: dr_authorize_webhooks_bool_exp! ): dr_authorize_webhooks_mutation_response
  """
  update single row of the table: "dr_authorize_webhooks"
  """
 update_dr_authorize_webhooks_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_authorize_webhooks_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_authorize_webhooks_set_input, pk_columns: dr_authorize_webhooks_pk_columns_input! ): dr_authorize_webhooks
  """
  update multiples rows of table: "dr_authorize_webhooks"
  """
 update_dr_authorize_webhooks_many("""updates to execute, in order"""
updates: [dr_authorize_webhooks_updates! ]! ): [dr_authorize_webhooks_mutation_response]
  """
  update data of the table: "dr_coupon_discount_type"
  """
 update_dr_coupon_discount_type("""sets the columns of the filtered rows to the given values"""
_set: dr_coupon_discount_type_set_input, """filter the rows which have to be updated"""
where: dr_coupon_discount_type_bool_exp! ): dr_coupon_discount_type_mutation_response
  """
  update single row of the table: "dr_coupon_discount_type"
  """
 update_dr_coupon_discount_type_by_pk("""sets the columns of the filtered rows to the given values"""
_set: dr_coupon_discount_type_set_input, pk_columns: dr_coupon_discount_type_pk_columns_input! ): dr_coupon_discount_type
  """
  update multiples rows of table: "dr_coupon_discount_type"
  """
 update_dr_coupon_discount_type_many("""updates to execute, in order"""
updates: [dr_coupon_discount_type_updates! ]! ): [dr_coupon_discount_type_mutation_response]
  """
  update data of the table: "dr_coupons"
  """
 update_dr_coupons("""increments the numeric columns with given value of the filtered values"""
_inc: dr_coupons_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_coupons_set_input, """filter the rows which have to be updated"""
where: dr_coupons_bool_exp! ): dr_coupons_mutation_response
  """
  update single row of the table: "dr_coupons"
  """
 update_dr_coupons_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_coupons_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_coupons_set_input, pk_columns: dr_coupons_pk_columns_input! ): dr_coupons
  """
  update multiples rows of table: "dr_coupons"
  """
 update_dr_coupons_many("""updates to execute, in order"""
updates: [dr_coupons_updates! ]! ): [dr_coupons_mutation_response]
  """
  update data of the table: "dr_currencies"
  """
 update_dr_currencies("""sets the columns of the filtered rows to the given values"""
_set: dr_currencies_set_input, """filter the rows which have to be updated"""
where: dr_currencies_bool_exp! ): dr_currencies_mutation_response
  """
  update single row of the table: "dr_currencies"
  """
 update_dr_currencies_by_pk("""sets the columns of the filtered rows to the given values"""
_set: dr_currencies_set_input, pk_columns: dr_currencies_pk_columns_input! ): dr_currencies
  """
  update multiples rows of table: "dr_currencies"
  """
 update_dr_currencies_many("""updates to execute, in order"""
updates: [dr_currencies_updates! ]! ): [dr_currencies_mutation_response]
  """
  update data of the table: "dr_event_details"
  """
 update_dr_event_details("""increments the numeric columns with given value of the filtered values"""
_inc: dr_event_details_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_event_details_set_input, """filter the rows which have to be updated"""
where: dr_event_details_bool_exp! ): dr_event_details_mutation_response
  """
  update single row of the table: "dr_event_details"
  """
 update_dr_event_details_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_event_details_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_event_details_set_input, pk_columns: dr_event_details_pk_columns_input! ): dr_event_details
  """
  update multiples rows of table: "dr_event_details"
  """
 update_dr_event_details_many("""updates to execute, in order"""
updates: [dr_event_details_updates! ]! ): [dr_event_details_mutation_response]
  """
  update data of the table: "dr_group_questions"
  """
 update_dr_group_questions("""increments the numeric columns with given value of the filtered values"""
_inc: dr_group_questions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_group_questions_set_input, """filter the rows which have to be updated"""
where: dr_group_questions_bool_exp! ): dr_group_questions_mutation_response
  """
  update single row of the table: "dr_group_questions"
  """
 update_dr_group_questions_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_group_questions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_group_questions_set_input, pk_columns: dr_group_questions_pk_columns_input! ): dr_group_questions
  """
  update multiples rows of table: "dr_group_questions"
  """
 update_dr_group_questions_many("""updates to execute, in order"""
updates: [dr_group_questions_updates! ]! ): [dr_group_questions_mutation_response]
  """
  update data of the table: "dr_invoice_setup"
  """
 update_dr_invoice_setup("""increments the numeric columns with given value of the filtered values"""
_inc: dr_invoice_setup_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_invoice_setup_set_input, """filter the rows which have to be updated"""
where: dr_invoice_setup_bool_exp! ): dr_invoice_setup_mutation_response
  """
  update single row of the table: "dr_invoice_setup"
  """
 update_dr_invoice_setup_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_invoice_setup_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_invoice_setup_set_input, pk_columns: dr_invoice_setup_pk_columns_input! ): dr_invoice_setup
  """
  update multiples rows of table: "dr_invoice_setup"
  """
 update_dr_invoice_setup_many("""updates to execute, in order"""
updates: [dr_invoice_setup_updates! ]! ): [dr_invoice_setup_mutation_response]
  """
  update data of the table: "dr_line_item_statuses"
  """
 update_dr_line_item_statuses("""sets the columns of the filtered rows to the given values"""
_set: dr_line_item_statuses_set_input, """filter the rows which have to be updated"""
where: dr_line_item_statuses_bool_exp! ): dr_line_item_statuses_mutation_response
  """
  update single row of the table: "dr_line_item_statuses"
  """
 update_dr_line_item_statuses_by_pk("""sets the columns of the filtered rows to the given values"""
_set: dr_line_item_statuses_set_input, pk_columns: dr_line_item_statuses_pk_columns_input! ): dr_line_item_statuses
  """
  update multiples rows of table: "dr_line_item_statuses"
  """
 update_dr_line_item_statuses_many("""updates to execute, in order"""
updates: [dr_line_item_statuses_updates! ]! ): [dr_line_item_statuses_mutation_response]
  """
  update data of the table: "dr_marketing_campaigns"
  """
 update_dr_marketing_campaigns("""increments the numeric columns with given value of the filtered values"""
_inc: dr_marketing_campaigns_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_marketing_campaigns_set_input, """filter the rows which have to be updated"""
where: dr_marketing_campaigns_bool_exp! ): dr_marketing_campaigns_mutation_response
  """
  update single row of the table: "dr_marketing_campaigns"
  """
 update_dr_marketing_campaigns_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_marketing_campaigns_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_marketing_campaigns_set_input, pk_columns: dr_marketing_campaigns_pk_columns_input! ): dr_marketing_campaigns
  """
  update multiples rows of table: "dr_marketing_campaigns"
  """
 update_dr_marketing_campaigns_many("""updates to execute, in order"""
updates: [dr_marketing_campaigns_updates! ]! ): [dr_marketing_campaigns_mutation_response]
  """
  update data of the table: "dr_offline_payments_setup"
  """
 update_dr_offline_payments_setup("""increments the numeric columns with given value of the filtered values"""
_inc: dr_offline_payments_setup_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_offline_payments_setup_set_input, """filter the rows which have to be updated"""
where: dr_offline_payments_setup_bool_exp! ): dr_offline_payments_setup_mutation_response
  """
  update single row of the table: "dr_offline_payments_setup"
  """
 update_dr_offline_payments_setup_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_offline_payments_setup_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_offline_payments_setup_set_input, pk_columns: dr_offline_payments_setup_pk_columns_input! ): dr_offline_payments_setup
  """
  update multiples rows of table: "dr_offline_payments_setup"
  """
 update_dr_offline_payments_setup_many("""updates to execute, in order"""
updates: [dr_offline_payments_setup_updates! ]! ): [dr_offline_payments_setup_mutation_response]
  """
  update data of the table: "dr_order_payment_type"
  """
 update_dr_order_payment_type("""sets the columns of the filtered rows to the given values"""
_set: dr_order_payment_type_set_input, """filter the rows which have to be updated"""
where: dr_order_payment_type_bool_exp! ): dr_order_payment_type_mutation_response
  """
  update single row of the table: "dr_order_payment_type"
  """
 update_dr_order_payment_type_by_pk("""sets the columns of the filtered rows to the given values"""
_set: dr_order_payment_type_set_input, pk_columns: dr_order_payment_type_pk_columns_input! ): dr_order_payment_type
  """
  update multiples rows of table: "dr_order_payment_type"
  """
 update_dr_order_payment_type_many("""updates to execute, in order"""
updates: [dr_order_payment_type_updates! ]! ): [dr_order_payment_type_mutation_response]
  """
  update data of the table: "dr_orders"
  """
 update_dr_orders("""increments the numeric columns with given value of the filtered values"""
_inc: dr_orders_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_orders_set_input, """filter the rows which have to be updated"""
where: dr_orders_bool_exp! ): dr_orders_mutation_response
  """
  update single row of the table: "dr_orders"
  """
 update_dr_orders_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_orders_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_orders_set_input, pk_columns: dr_orders_pk_columns_input! ): dr_orders
  """
  update multiples rows of table: "dr_orders"
  """
 update_dr_orders_many("""updates to execute, in order"""
updates: [dr_orders_updates! ]! ): [dr_orders_mutation_response]
  """
  update data of the table: "dr_paypal_setup"
  """
 update_dr_paypal_setup("""increments the numeric columns with given value of the filtered values"""
_inc: dr_paypal_setup_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_paypal_setup_set_input, """filter the rows which have to be updated"""
where: dr_paypal_setup_bool_exp! ): dr_paypal_setup_mutation_response
  """
  update single row of the table: "dr_paypal_setup"
  """
 update_dr_paypal_setup_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_paypal_setup_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_paypal_setup_set_input, pk_columns: dr_paypal_setup_pk_columns_input! ): dr_paypal_setup
  """
  update multiples rows of table: "dr_paypal_setup"
  """
 update_dr_paypal_setup_many("""updates to execute, in order"""
updates: [dr_paypal_setup_updates! ]! ): [dr_paypal_setup_mutation_response]
  """
  update data of the table: "dr_question_dependencies"
  """
 update_dr_question_dependencies("""sets the columns of the filtered rows to the given values"""
_set: dr_question_dependencies_set_input, """filter the rows which have to be updated"""
where: dr_question_dependencies_bool_exp! ): dr_question_dependencies_mutation_response
  """
  update single row of the table: "dr_question_dependencies"
  """
 update_dr_question_dependencies_by_pk("""sets the columns of the filtered rows to the given values"""
_set: dr_question_dependencies_set_input, pk_columns: dr_question_dependencies_pk_columns_input! ): dr_question_dependencies
  """
  update multiples rows of table: "dr_question_dependencies"
  """
 update_dr_question_dependencies_many("""updates to execute, in order"""
updates: [dr_question_dependencies_updates! ]! ): [dr_question_dependencies_mutation_response]
  """
  update data of the table: "dr_question_options"
  """
 update_dr_question_options("""increments the numeric columns with given value of the filtered values"""
_inc: dr_question_options_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_question_options_set_input, """filter the rows which have to be updated"""
where: dr_question_options_bool_exp! ): dr_question_options_mutation_response
  """
  update single row of the table: "dr_question_options"
  """
 update_dr_question_options_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_question_options_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_question_options_set_input, pk_columns: dr_question_options_pk_columns_input! ): dr_question_options
  """
  update multiples rows of table: "dr_question_options"
  """
 update_dr_question_options_many("""updates to execute, in order"""
updates: [dr_question_options_updates! ]! ): [dr_question_options_mutation_response]
  """
  update data of the table: "dr_question_types"
  """
 update_dr_question_types("""sets the columns of the filtered rows to the given values"""
_set: dr_question_types_set_input, """filter the rows which have to be updated"""
where: dr_question_types_bool_exp! ): dr_question_types_mutation_response
  """
  update single row of the table: "dr_question_types"
  """
 update_dr_question_types_by_pk("""sets the columns of the filtered rows to the given values"""
_set: dr_question_types_set_input, pk_columns: dr_question_types_pk_columns_input! ): dr_question_types
  """
  update multiples rows of table: "dr_question_types"
  """
 update_dr_question_types_many("""updates to execute, in order"""
updates: [dr_question_types_updates! ]! ): [dr_question_types_mutation_response]
  """
  update data of the table: "dr_questions"
  """
 update_dr_questions("""increments the numeric columns with given value of the filtered values"""
_inc: dr_questions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_questions_set_input, """filter the rows which have to be updated"""
where: dr_questions_bool_exp! ): dr_questions_mutation_response
  """
  update single row of the table: "dr_questions"
  """
 update_dr_questions_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_questions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_questions_set_input, pk_columns: dr_questions_pk_columns_input! ): dr_questions
  """
  update multiples rows of table: "dr_questions"
  """
 update_dr_questions_many("""updates to execute, in order"""
updates: [dr_questions_updates! ]! ): [dr_questions_mutation_response]
  """
  update data of the table: "dr_service_fee_charges"
  """
 update_dr_service_fee_charges("""increments the numeric columns with given value of the filtered values"""
_inc: dr_service_fee_charges_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_service_fee_charges_set_input, """filter the rows which have to be updated"""
where: dr_service_fee_charges_bool_exp! ): dr_service_fee_charges_mutation_response
  """
  update single row of the table: "dr_service_fee_charges"
  """
 update_dr_service_fee_charges_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_service_fee_charges_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_service_fee_charges_set_input, pk_columns: dr_service_fee_charges_pk_columns_input! ): dr_service_fee_charges
  """
  update multiples rows of table: "dr_service_fee_charges"
  """
 update_dr_service_fee_charges_many("""updates to execute, in order"""
updates: [dr_service_fee_charges_updates! ]! ): [dr_service_fee_charges_mutation_response]
  """
  update data of the table: "dr_stripe_delayed_payments_customer"
  """
 update_dr_stripe_delayed_payments_customer("""increments the numeric columns with given value of the filtered values"""
_inc: dr_stripe_delayed_payments_customer_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_stripe_delayed_payments_customer_set_input, """filter the rows which have to be updated"""
where: dr_stripe_delayed_payments_customer_bool_exp! ): dr_stripe_delayed_payments_customer_mutation_response
  """
  update single row of the table: "dr_stripe_delayed_payments_customer"
  """
 update_dr_stripe_delayed_payments_customer_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_stripe_delayed_payments_customer_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_stripe_delayed_payments_customer_set_input, pk_columns: dr_stripe_delayed_payments_customer_pk_columns_input! ): dr_stripe_delayed_payments_customer
  """
  update multiples rows of table: "dr_stripe_delayed_payments_customer"
  """
 update_dr_stripe_delayed_payments_customer_many("""updates to execute, in order"""
updates: [dr_stripe_delayed_payments_customer_updates! ]! ): [dr_stripe_delayed_payments_customer_mutation_response]
  """
  update data of the table: "dr_stripe_webhooks"
  """
 update_dr_stripe_webhooks("""increments the numeric columns with given value of the filtered values"""
_inc: dr_stripe_webhooks_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_stripe_webhooks_set_input, """filter the rows which have to be updated"""
where: dr_stripe_webhooks_bool_exp! ): dr_stripe_webhooks_mutation_response
  """
  update single row of the table: "dr_stripe_webhooks"
  """
 update_dr_stripe_webhooks_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_stripe_webhooks_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_stripe_webhooks_set_input, pk_columns: dr_stripe_webhooks_pk_columns_input! ): dr_stripe_webhooks
  """
  update multiples rows of table: "dr_stripe_webhooks"
  """
 update_dr_stripe_webhooks_many("""updates to execute, in order"""
updates: [dr_stripe_webhooks_updates! ]! ): [dr_stripe_webhooks_mutation_response]
  """
  update data of the table: "dr_tax_rules"
  """
 update_dr_tax_rules("""increments the numeric columns with given value of the filtered values"""
_inc: dr_tax_rules_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_tax_rules_set_input, """filter the rows which have to be updated"""
where: dr_tax_rules_bool_exp! ): dr_tax_rules_mutation_response
  """
  update single row of the table: "dr_tax_rules"
  """
 update_dr_tax_rules_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_tax_rules_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_tax_rules_set_input, pk_columns: dr_tax_rules_pk_columns_input! ): dr_tax_rules
  """
  update multiples rows of table: "dr_tax_rules"
  """
 update_dr_tax_rules_many("""updates to execute, in order"""
updates: [dr_tax_rules_updates! ]! ): [dr_tax_rules_mutation_response]
  """
  update data of the table: "dr_ticket_addons"
  """
 update_dr_ticket_addons("""sets the columns of the filtered rows to the given values"""
_set: dr_ticket_addons_set_input, """filter the rows which have to be updated"""
where: dr_ticket_addons_bool_exp! ): dr_ticket_addons_mutation_response
  """
  update single row of the table: "dr_ticket_addons"
  """
 update_dr_ticket_addons_by_pk("""sets the columns of the filtered rows to the given values"""
_set: dr_ticket_addons_set_input, pk_columns: dr_ticket_addons_pk_columns_input! ): dr_ticket_addons
  """
  update multiples rows of table: "dr_ticket_addons"
  """
 update_dr_ticket_addons_many("""updates to execute, in order"""
updates: [dr_ticket_addons_updates! ]! ): [dr_ticket_addons_mutation_response]
  """
  update data of the table: "dr_ticket_coupons"
  """
 update_dr_ticket_coupons("""sets the columns of the filtered rows to the given values"""
_set: dr_ticket_coupons_set_input, """filter the rows which have to be updated"""
where: dr_ticket_coupons_bool_exp! ): dr_ticket_coupons_mutation_response
  """
  update single row of the table: "dr_ticket_coupons"
  """
 update_dr_ticket_coupons_by_pk("""sets the columns of the filtered rows to the given values"""
_set: dr_ticket_coupons_set_input, pk_columns: dr_ticket_coupons_pk_columns_input! ): dr_ticket_coupons
  """
  update multiples rows of table: "dr_ticket_coupons"
  """
 update_dr_ticket_coupons_many("""updates to execute, in order"""
updates: [dr_ticket_coupons_updates! ]! ): [dr_ticket_coupons_mutation_response]
  """
  update data of the table: "dr_ticket_groups"
  """
 update_dr_ticket_groups("""increments the numeric columns with given value of the filtered values"""
_inc: dr_ticket_groups_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_ticket_groups_set_input, """filter the rows which have to be updated"""
where: dr_ticket_groups_bool_exp! ): dr_ticket_groups_mutation_response
  """
  update single row of the table: "dr_ticket_groups"
  """
 update_dr_ticket_groups_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_ticket_groups_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_ticket_groups_set_input, pk_columns: dr_ticket_groups_pk_columns_input! ): dr_ticket_groups
  """
  update multiples rows of table: "dr_ticket_groups"
  """
 update_dr_ticket_groups_many("""updates to execute, in order"""
updates: [dr_ticket_groups_updates! ]! ): [dr_ticket_groups_mutation_response]
  """
  update data of the table: "dr_ticket_groups_ungrouped_order"
  """
 update_dr_ticket_groups_ungrouped_order("""increments the numeric columns with given value of the filtered values"""
_inc: dr_ticket_groups_ungrouped_order_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_ticket_groups_ungrouped_order_set_input, """filter the rows which have to be updated"""
where: dr_ticket_groups_ungrouped_order_bool_exp! ): dr_ticket_groups_ungrouped_order_mutation_response
  """
  update single row of the table: "dr_ticket_groups_ungrouped_order"
  """
 update_dr_ticket_groups_ungrouped_order_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_ticket_groups_ungrouped_order_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_ticket_groups_ungrouped_order_set_input, pk_columns: dr_ticket_groups_ungrouped_order_pk_columns_input! ): dr_ticket_groups_ungrouped_order
  """
  update multiples rows of table: "dr_ticket_groups_ungrouped_order"
  """
 update_dr_ticket_groups_ungrouped_order_many("""updates to execute, in order"""
updates: [dr_ticket_groups_ungrouped_order_updates! ]! ): [dr_ticket_groups_ungrouped_order_mutation_response]
  """
  update data of the table: "dr_ticket_tax_rules"
  """
 update_dr_ticket_tax_rules("""sets the columns of the filtered rows to the given values"""
_set: dr_ticket_tax_rules_set_input, """filter the rows which have to be updated"""
where: dr_ticket_tax_rules_bool_exp! ): dr_ticket_tax_rules_mutation_response
  """
  update single row of the table: "dr_ticket_tax_rules"
  """
 update_dr_ticket_tax_rules_by_pk("""sets the columns of the filtered rows to the given values"""
_set: dr_ticket_tax_rules_set_input, pk_columns: dr_ticket_tax_rules_pk_columns_input! ): dr_ticket_tax_rules
  """
  update multiples rows of table: "dr_ticket_tax_rules"
  """
 update_dr_ticket_tax_rules_many("""updates to execute, in order"""
updates: [dr_ticket_tax_rules_updates! ]! ): [dr_ticket_tax_rules_mutation_response]
  """
  update data of the table: "dr_tickets"
  """
 update_dr_tickets("""increments the numeric columns with given value of the filtered values"""
_inc: dr_tickets_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_tickets_set_input, """filter the rows which have to be updated"""
where: dr_tickets_bool_exp! ): dr_tickets_mutation_response
  """
  update single row of the table: "dr_tickets"
  """
 update_dr_tickets_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_tickets_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_tickets_set_input, pk_columns: dr_tickets_pk_columns_input! ): dr_tickets
  """
  update multiples rows of table: "dr_tickets"
  """
 update_dr_tickets_many("""updates to execute, in order"""
updates: [dr_tickets_updates! ]! ): [dr_tickets_mutation_response]
  """
  update data of the table: "dr_tickets_view"
  """
 update_dr_tickets_view("""increments the numeric columns with given value of the filtered values"""
_inc: dr_tickets_view_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_tickets_view_set_input, """filter the rows which have to be updated"""
where: dr_tickets_view_bool_exp! ): dr_tickets_view_mutation_response
  """
  update multiples rows of table: "dr_tickets_view"
  """
 update_dr_tickets_view_many("""updates to execute, in order"""
updates: [dr_tickets_view_updates! ]! ): [dr_tickets_view_mutation_response]
  """
  update data of the table: "dr_transaction_types"
  """
 update_dr_transaction_types("""sets the columns of the filtered rows to the given values"""
_set: dr_transaction_types_set_input, """filter the rows which have to be updated"""
where: dr_transaction_types_bool_exp! ): dr_transaction_types_mutation_response
  """
  update single row of the table: "dr_transaction_types"
  """
 update_dr_transaction_types_by_pk("""sets the columns of the filtered rows to the given values"""
_set: dr_transaction_types_set_input, pk_columns: dr_transaction_types_pk_columns_input! ): dr_transaction_types
  """
  update multiples rows of table: "dr_transaction_types"
  """
 update_dr_transaction_types_many("""updates to execute, in order"""
updates: [dr_transaction_types_updates! ]! ): [dr_transaction_types_mutation_response]
  """
  update data of the table: "dr_transactions"
  """
 update_dr_transactions("""increments the numeric columns with given value of the filtered values"""
_inc: dr_transactions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_transactions_set_input, """filter the rows which have to be updated"""
where: dr_transactions_bool_exp! ): dr_transactions_mutation_response
  """
  update single row of the table: "dr_transactions"
  """
 update_dr_transactions_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_transactions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_transactions_set_input, pk_columns: dr_transactions_pk_columns_input! ): dr_transactions
  """
  update multiples rows of table: "dr_transactions"
  """
 update_dr_transactions_many("""updates to execute, in order"""
updates: [dr_transactions_updates! ]! ): [dr_transactions_mutation_response]
  """
  update data of the table: "dr_vat_address"
  """
 update_dr_vat_address("""increments the numeric columns with given value of the filtered values"""
_inc: dr_vat_address_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_vat_address_set_input, """filter the rows which have to be updated"""
where: dr_vat_address_bool_exp! ): dr_vat_address_mutation_response
  """
  update single row of the table: "dr_vat_address"
  """
 update_dr_vat_address_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: dr_vat_address_inc_input, """sets the columns of the filtered rows to the given values"""
_set: dr_vat_address_set_input, pk_columns: dr_vat_address_pk_columns_input! ): dr_vat_address
  """
  update multiples rows of table: "dr_vat_address"
  """
 update_dr_vat_address_many("""updates to execute, in order"""
updates: [dr_vat_address_updates! ]! ): [dr_vat_address_mutation_response]
  """
  update data of the table: "errors"
  """
 update_errors("""append existing jsonb value of filtered columns with new jsonb value"""
_append: errors_append_input, """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
_delete_at_path: errors_delete_at_path_input, """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
_delete_elem: errors_delete_elem_input, """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
_delete_key: errors_delete_key_input, """increments the numeric columns with given value of the filtered values"""
_inc: errors_inc_input, """prepend existing jsonb value of filtered columns with new jsonb value"""
_prepend: errors_prepend_input, """sets the columns of the filtered rows to the given values"""
_set: errors_set_input, """filter the rows which have to be updated"""
where: errors_bool_exp! ): errors_mutation_response
  """
  update single row of the table: "errors"
  """
 update_errors_by_pk("""append existing jsonb value of filtered columns with new jsonb value"""
_append: errors_append_input, """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
_delete_at_path: errors_delete_at_path_input, """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
_delete_elem: errors_delete_elem_input, """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
_delete_key: errors_delete_key_input, """increments the numeric columns with given value of the filtered values"""
_inc: errors_inc_input, """prepend existing jsonb value of filtered columns with new jsonb value"""
_prepend: errors_prepend_input, """sets the columns of the filtered rows to the given values"""
_set: errors_set_input, pk_columns: errors_pk_columns_input! ): errors
  """
  update multiples rows of table: "errors"
  """
 update_errors_many("""updates to execute, in order"""
updates: [errors_updates! ]! ): [errors_mutation_response]
  """
  update data of the table: "event_acceptance_types"
  """
 update_event_acceptance_types("""increments the numeric columns with given value of the filtered values"""
_inc: event_acceptance_types_inc_input, """sets the columns of the filtered rows to the given values"""
_set: event_acceptance_types_set_input, """filter the rows which have to be updated"""
where: event_acceptance_types_bool_exp! ): event_acceptance_types_mutation_response
  """
  update single row of the table: "event_acceptance_types"
  """
 update_event_acceptance_types_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: event_acceptance_types_inc_input, """sets the columns of the filtered rows to the given values"""
_set: event_acceptance_types_set_input, pk_columns: event_acceptance_types_pk_columns_input! ): event_acceptance_types
  """
  update multiples rows of table: "event_acceptance_types"
  """
 update_event_acceptance_types_many("""updates to execute, in order"""
updates: [event_acceptance_types_updates! ]! ): [event_acceptance_types_mutation_response]
  """
  update data of the table: "event_emails"
  """
 update_event_emails("""increments the numeric columns with given value of the filtered values"""
_inc: event_emails_inc_input, """sets the columns of the filtered rows to the given values"""
_set: event_emails_set_input, """filter the rows which have to be updated"""
where: event_emails_bool_exp! ): event_emails_mutation_response
  """
  update single row of the table: "event_emails"
  """
 update_event_emails_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: event_emails_inc_input, """sets the columns of the filtered rows to the given values"""
_set: event_emails_set_input, pk_columns: event_emails_pk_columns_input! ): event_emails
  """
  update multiples rows of table: "event_emails"
  """
 update_event_emails_many("""updates to execute, in order"""
updates: [event_emails_updates! ]! ): [event_emails_mutation_response]
  """
  update data of the table: "event_payments"
  """
 update_event_payments("""increments the numeric columns with given value of the filtered values"""
_inc: event_payments_inc_input, """sets the columns of the filtered rows to the given values"""
_set: event_payments_set_input, """filter the rows which have to be updated"""
where: event_payments_bool_exp! ): event_payments_mutation_response
  """
  update single row of the table: "event_payments"
  """
 update_event_payments_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: event_payments_inc_input, """sets the columns of the filtered rows to the given values"""
_set: event_payments_set_input, pk_columns: event_payments_pk_columns_input! ): event_payments
  """
  update multiples rows of table: "event_payments"
  """
 update_event_payments_many("""updates to execute, in order"""
updates: [event_payments_updates! ]! ): [event_payments_mutation_response]
  """
  update data of the table: "event_program_menu_sponsors"
  """
 update_event_program_menu_sponsors("""increments the numeric columns with given value of the filtered values"""
_inc: event_program_menu_sponsors_inc_input, """sets the columns of the filtered rows to the given values"""
_set: event_program_menu_sponsors_set_input, """filter the rows which have to be updated"""
where: event_program_menu_sponsors_bool_exp! ): event_program_menu_sponsors_mutation_response
  """
  update multiples rows of table: "event_program_menu_sponsors"
  """
 update_event_program_menu_sponsors_many("""updates to execute, in order"""
updates: [event_program_menu_sponsors_updates! ]! ): [event_program_menu_sponsors_mutation_response]
  """
  update data of the table: "event_suspicions"
  """
 update_event_suspicions("""increments the numeric columns with given value of the filtered values"""
_inc: event_suspicions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: event_suspicions_set_input, """filter the rows which have to be updated"""
where: event_suspicions_bool_exp! ): event_suspicions_mutation_response
  """
  update single row of the table: "event_suspicions"
  """
 update_event_suspicions_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: event_suspicions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: event_suspicions_set_input, pk_columns: event_suspicions_pk_columns_input! ): event_suspicions
  """
  update multiples rows of table: "event_suspicions"
  """
 update_event_suspicions_many("""updates to execute, in order"""
updates: [event_suspicions_updates! ]! ): [event_suspicions_mutation_response]
  """
  update data of the table: "events_with_archived"
  """
 update_events("""append existing jsonb value of filtered columns with new jsonb value"""
_append: events_append_input, """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
_delete_at_path: events_delete_at_path_input, """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
_delete_elem: events_delete_elem_input, """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
_delete_key: events_delete_key_input, """increments the numeric columns with given value of the filtered values"""
_inc: events_inc_input, """prepend existing jsonb value of filtered columns with new jsonb value"""
_prepend: events_prepend_input, """sets the columns of the filtered rows to the given values"""
_set: events_set_input, """filter the rows which have to be updated"""
where: events_bool_exp! ): events_mutation_response
  """
  update single row of the table: "events_with_archived"
  """
 update_events_by_pk("""append existing jsonb value of filtered columns with new jsonb value"""
_append: events_append_input, """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
_delete_at_path: events_delete_at_path_input, """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
_delete_elem: events_delete_elem_input, """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
_delete_key: events_delete_key_input, """increments the numeric columns with given value of the filtered values"""
_inc: events_inc_input, """prepend existing jsonb value of filtered columns with new jsonb value"""
_prepend: events_prepend_input, """sets the columns of the filtered rows to the given values"""
_set: events_set_input, pk_columns: events_pk_columns_input! ): events
  """
  update multiples rows of table: "events_with_archived"
  """
 update_events_many("""updates to execute, in order"""
updates: [events_updates! ]! ): [events_mutation_response]
  """
  update data of the table: "events_permissions"
  """
 update_events_permissions("""increments the numeric columns with given value of the filtered values"""
_inc: events_permissions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: events_permissions_set_input, """filter the rows which have to be updated"""
where: events_permissions_bool_exp! ): events_permissions_mutation_response
  """
  update multiples rows of table: "events_permissions"
  """
 update_events_permissions_many("""updates to execute, in order"""
updates: [events_permissions_updates! ]! ): [events_permissions_mutation_response]
  """
  update data of the table: "events_verified_sender_emails"
  """
 update_events_verified_sender_emails("""increments the numeric columns with given value of the filtered values"""
_inc: events_verified_sender_emails_inc_input, """sets the columns of the filtered rows to the given values"""
_set: events_verified_sender_emails_set_input, """filter the rows which have to be updated"""
where: events_verified_sender_emails_bool_exp! ): events_verified_sender_emails_mutation_response
  """
  update single row of the table: "events_verified_sender_emails"
  """
 update_events_verified_sender_emails_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: events_verified_sender_emails_inc_input, """sets the columns of the filtered rows to the given values"""
_set: events_verified_sender_emails_set_input, pk_columns: events_verified_sender_emails_pk_columns_input! ): events_verified_sender_emails
  """
  update multiples rows of table: "events_verified_sender_emails"
  """
 update_events_verified_sender_emails_many("""updates to execute, in order"""
updates: [events_verified_sender_emails_updates! ]! ): [events_verified_sender_emails_mutation_response]
  """
  update data of the table: "exhibitor_contact_statuses"
  """
 update_exhibitor_contact_statuses("""sets the columns of the filtered rows to the given values"""
_set: exhibitor_contact_statuses_set_input, """filter the rows which have to be updated"""
where: exhibitor_contact_statuses_bool_exp! ): exhibitor_contact_statuses_mutation_response
  """
  update single row of the table: "exhibitor_contact_statuses"
  """
 update_exhibitor_contact_statuses_by_pk("""sets the columns of the filtered rows to the given values"""
_set: exhibitor_contact_statuses_set_input, pk_columns: exhibitor_contact_statuses_pk_columns_input! ): exhibitor_contact_statuses
  """
  update multiples rows of table: "exhibitor_contact_statuses"
  """
 update_exhibitor_contact_statuses_many("""updates to execute, in order"""
updates: [exhibitor_contact_statuses_updates! ]! ): [exhibitor_contact_statuses_mutation_response]
  """
  update data of the table: "exhibitor_contacts"
  """
 update_exhibitor_contacts("""sets the columns of the filtered rows to the given values"""
_set: exhibitor_contacts_set_input, """filter the rows which have to be updated"""
where: exhibitor_contacts_bool_exp! ): exhibitor_contacts_mutation_response
  """
  update single row of the table: "exhibitor_contacts"
  """
 update_exhibitor_contacts_by_pk("""sets the columns of the filtered rows to the given values"""
_set: exhibitor_contacts_set_input, pk_columns: exhibitor_contacts_pk_columns_input! ): exhibitor_contacts
  """
  update multiples rows of table: "exhibitor_contacts"
  """
 update_exhibitor_contacts_many("""updates to execute, in order"""
updates: [exhibitor_contacts_updates! ]! ): [exhibitor_contacts_mutation_response]
  """
  update data of the table: "exhibitor_page_views"
  """
 update_exhibitor_page_views("""increments the numeric columns with given value of the filtered values"""
_inc: exhibitor_page_views_inc_input, """sets the columns of the filtered rows to the given values"""
_set: exhibitor_page_views_set_input, """filter the rows which have to be updated"""
where: exhibitor_page_views_bool_exp! ): exhibitor_page_views_mutation_response
  """
  update single row of the table: "exhibitor_page_views"
  """
 update_exhibitor_page_views_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: exhibitor_page_views_inc_input, """sets the columns of the filtered rows to the given values"""
_set: exhibitor_page_views_set_input, pk_columns: exhibitor_page_views_pk_columns_input! ): exhibitor_page_views
  """
  update multiples rows of table: "exhibitor_page_views"
  """
 update_exhibitor_page_views_many("""updates to execute, in order"""
updates: [exhibitor_page_views_updates! ]! ): [exhibitor_page_views_mutation_response]
  """
  update data of the table: "exhibitor_representatives"
  """
 update_exhibitor_representatives("""sets the columns of the filtered rows to the given values"""
_set: exhibitor_representatives_set_input, """filter the rows which have to be updated"""
where: exhibitor_representatives_bool_exp! ): exhibitor_representatives_mutation_response
  """
  update single row of the table: "exhibitor_representatives"
  """
 update_exhibitor_representatives_by_pk("""sets the columns of the filtered rows to the given values"""
_set: exhibitor_representatives_set_input, pk_columns: exhibitor_representatives_pk_columns_input! ): exhibitor_representatives
  """
  update multiples rows of table: "exhibitor_representatives"
  """
 update_exhibitor_representatives_many("""updates to execute, in order"""
updates: [exhibitor_representatives_updates! ]! ): [exhibitor_representatives_mutation_response]
  """
  update data of the table: "exhibitor_resources"
  """
 update_exhibitor_resources("""increments the numeric columns with given value of the filtered values"""
_inc: exhibitor_resources_inc_input, """sets the columns of the filtered rows to the given values"""
_set: exhibitor_resources_set_input, """filter the rows which have to be updated"""
where: exhibitor_resources_bool_exp! ): exhibitor_resources_mutation_response
  """
  update single row of the table: "exhibitor_resources"
  """
 update_exhibitor_resources_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: exhibitor_resources_inc_input, """sets the columns of the filtered rows to the given values"""
_set: exhibitor_resources_set_input, pk_columns: exhibitor_resources_pk_columns_input! ): exhibitor_resources
  """
  update multiples rows of table: "exhibitor_resources"
  """
 update_exhibitor_resources_many("""updates to execute, in order"""
updates: [exhibitor_resources_updates! ]! ): [exhibitor_resources_mutation_response]
  """
  update data of the table: "exhibitor_sizes"
  """
 update_exhibitor_sizes("""sets the columns of the filtered rows to the given values"""
_set: exhibitor_sizes_set_input, """filter the rows which have to be updated"""
where: exhibitor_sizes_bool_exp! ): exhibitor_sizes_mutation_response
  """
  update single row of the table: "exhibitor_sizes"
  """
 update_exhibitor_sizes_by_pk("""sets the columns of the filtered rows to the given values"""
_set: exhibitor_sizes_set_input, pk_columns: exhibitor_sizes_pk_columns_input! ): exhibitor_sizes
  """
  update multiples rows of table: "exhibitor_sizes"
  """
 update_exhibitor_sizes_many("""updates to execute, in order"""
updates: [exhibitor_sizes_updates! ]! ): [exhibitor_sizes_mutation_response]
  """
  update data of the table: "exhibitor_social_clicks"
  """
 update_exhibitor_social_clicks("""increments the numeric columns with given value of the filtered values"""
_inc: exhibitor_social_clicks_inc_input, """sets the columns of the filtered rows to the given values"""
_set: exhibitor_social_clicks_set_input, """filter the rows which have to be updated"""
where: exhibitor_social_clicks_bool_exp! ): exhibitor_social_clicks_mutation_response
  """
  update single row of the table: "exhibitor_social_clicks"
  """
 update_exhibitor_social_clicks_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: exhibitor_social_clicks_inc_input, """sets the columns of the filtered rows to the given values"""
_set: exhibitor_social_clicks_set_input, pk_columns: exhibitor_social_clicks_pk_columns_input! ): exhibitor_social_clicks
  """
  update multiples rows of table: "exhibitor_social_clicks"
  """
 update_exhibitor_social_clicks_many("""updates to execute, in order"""
updates: [exhibitor_social_clicks_updates! ]! ): [exhibitor_social_clicks_mutation_response]
  """
  update data of the table: "exhibitor_statuses"
  """
 update_exhibitor_statuses("""sets the columns of the filtered rows to the given values"""
_set: exhibitor_statuses_set_input, """filter the rows which have to be updated"""
where: exhibitor_statuses_bool_exp! ): exhibitor_statuses_mutation_response
  """
  update single row of the table: "exhibitor_statuses"
  """
 update_exhibitor_statuses_by_pk("""sets the columns of the filtered rows to the given values"""
_set: exhibitor_statuses_set_input, pk_columns: exhibitor_statuses_pk_columns_input! ): exhibitor_statuses
  """
  update multiples rows of table: "exhibitor_statuses"
  """
 update_exhibitor_statuses_many("""updates to execute, in order"""
updates: [exhibitor_statuses_updates! ]! ): [exhibitor_statuses_mutation_response]
  """
  update data of the table: "exhibitor_tags"
  """
 update_exhibitor_tags("""increments the numeric columns with given value of the filtered values"""
_inc: exhibitor_tags_inc_input, """sets the columns of the filtered rows to the given values"""
_set: exhibitor_tags_set_input, """filter the rows which have to be updated"""
where: exhibitor_tags_bool_exp! ): exhibitor_tags_mutation_response
  """
  update single row of the table: "exhibitor_tags"
  """
 update_exhibitor_tags_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: exhibitor_tags_inc_input, """sets the columns of the filtered rows to the given values"""
_set: exhibitor_tags_set_input, pk_columns: exhibitor_tags_pk_columns_input! ): exhibitor_tags
  """
  update multiples rows of table: "exhibitor_tags"
  """
 update_exhibitor_tags_many("""updates to execute, in order"""
updates: [exhibitor_tags_updates! ]! ): [exhibitor_tags_mutation_response]
  """
  update data of the table: "exhibitors"
  """
 update_exhibitors("""increments the numeric columns with given value of the filtered values"""
_inc: exhibitors_inc_input, """sets the columns of the filtered rows to the given values"""
_set: exhibitors_set_input, """filter the rows which have to be updated"""
where: exhibitors_bool_exp! ): exhibitors_mutation_response
  """
  update single row of the table: "exhibitors"
  """
 update_exhibitors_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: exhibitors_inc_input, """sets the columns of the filtered rows to the given values"""
_set: exhibitors_set_input, pk_columns: exhibitors_pk_columns_input! ): exhibitors
  """
  update multiples rows of table: "exhibitors"
  """
 update_exhibitors_many("""updates to execute, in order"""
updates: [exhibitors_updates! ]! ): [exhibitors_mutation_response]
  """
  update data of the table: "exhibitors_tags"
  """
 update_exhibitors_tags("""sets the columns of the filtered rows to the given values"""
_set: exhibitors_tags_set_input, """filter the rows which have to be updated"""
where: exhibitors_tags_bool_exp! ): exhibitors_tags_mutation_response
  """
  update single row of the table: "exhibitors_tags"
  """
 update_exhibitors_tags_by_pk("""sets the columns of the filtered rows to the given values"""
_set: exhibitors_tags_set_input, pk_columns: exhibitors_tags_pk_columns_input! ): exhibitors_tags
  """
  update multiples rows of table: "exhibitors_tags"
  """
 update_exhibitors_tags_many("""updates to execute, in order"""
updates: [exhibitors_tags_updates! ]! ): [exhibitors_tags_mutation_response]
  """
  update data of the table: "export_progresses"
  """
 update_export_progresses("""increments the numeric columns with given value of the filtered values"""
_inc: export_progresses_inc_input, """sets the columns of the filtered rows to the given values"""
_set: export_progresses_set_input, """filter the rows which have to be updated"""
where: export_progresses_bool_exp! ): export_progresses_mutation_response
  """
  update single row of the table: "export_progresses"
  """
 update_export_progresses_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: export_progresses_inc_input, """sets the columns of the filtered rows to the given values"""
_set: export_progresses_set_input, pk_columns: export_progresses_pk_columns_input! ): export_progresses
  """
  update multiples rows of table: "export_progresses"
  """
 update_export_progresses_many("""updates to execute, in order"""
updates: [export_progresses_updates! ]! ): [export_progresses_mutation_response]
  """
  update data of the table: "gql_api_keys"
  """
 update_gql_api_keys("""increments the numeric columns with given value of the filtered values"""
_inc: gql_api_keys_inc_input, """sets the columns of the filtered rows to the given values"""
_set: gql_api_keys_set_input, """filter the rows which have to be updated"""
where: gql_api_keys_bool_exp! ): gql_api_keys_mutation_response
  """
  update single row of the table: "gql_api_keys"
  """
 update_gql_api_keys_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: gql_api_keys_inc_input, """sets the columns of the filtered rows to the given values"""
_set: gql_api_keys_set_input, pk_columns: gql_api_keys_pk_columns_input! ): gql_api_keys
  """
  update multiples rows of table: "gql_api_keys"
  """
 update_gql_api_keys_many("""updates to execute, in order"""
updates: [gql_api_keys_updates! ]! ): [gql_api_keys_mutation_response]
  """
  update data of the table: "notifications"
  """
 update_notifications("""increments the numeric columns with given value of the filtered values"""
_inc: notifications_inc_input, """sets the columns of the filtered rows to the given values"""
_set: notifications_set_input, """filter the rows which have to be updated"""
where: notifications_bool_exp! ): notifications_mutation_response
  """
  update single row of the table: "notifications"
  """
 update_notifications_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: notifications_inc_input, """sets the columns of the filtered rows to the given values"""
_set: notifications_set_input, pk_columns: notifications_pk_columns_input! ): notifications
  """
  update multiples rows of table: "notifications"
  """
 update_notifications_many("""updates to execute, in order"""
updates: [notifications_updates! ]! ): [notifications_mutation_response]
  """
  update data of the table: "notifications_users"
  """
 update_notifications_users("""increments the numeric columns with given value of the filtered values"""
_inc: notifications_users_inc_input, """sets the columns of the filtered rows to the given values"""
_set: notifications_users_set_input, """filter the rows which have to be updated"""
where: notifications_users_bool_exp! ): notifications_users_mutation_response
  """
  update single row of the table: "notifications_users"
  """
 update_notifications_users_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: notifications_users_inc_input, """sets the columns of the filtered rows to the given values"""
_set: notifications_users_set_input, pk_columns: notifications_users_pk_columns_input! ): notifications_users
  """
  update multiples rows of table: "notifications_users"
  """
 update_notifications_users_many("""updates to execute, in order"""
updates: [notifications_users_updates! ]! ): [notifications_users_mutation_response]
  """
  update data of the table: "oa_db_env"
  """
 update_oa_db_env("""sets the columns of the filtered rows to the given values"""
_set: oa_db_env_set_input, """filter the rows which have to be updated"""
where: oa_db_env_bool_exp! ): oa_db_env_mutation_response
  """
  update single row of the table: "oa_db_env"
  """
 update_oa_db_env_by_pk("""sets the columns of the filtered rows to the given values"""
_set: oa_db_env_set_input, pk_columns: oa_db_env_pk_columns_input! ): oa_db_env
  """
  update multiples rows of table: "oa_db_env"
  """
 update_oa_db_env_many("""updates to execute, in order"""
updates: [oa_db_env_updates! ]! ): [oa_db_env_mutation_response]
  """
  update data of the table: "oauth_codes"
  """
 update_oauth_codes("""increments the numeric columns with given value of the filtered values"""
_inc: oauth_codes_inc_input, """sets the columns of the filtered rows to the given values"""
_set: oauth_codes_set_input, """filter the rows which have to be updated"""
where: oauth_codes_bool_exp! ): oauth_codes_mutation_response
  """
  update single row of the table: "oauth_codes"
  """
 update_oauth_codes_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: oauth_codes_inc_input, """sets the columns of the filtered rows to the given values"""
_set: oauth_codes_set_input, pk_columns: oauth_codes_pk_columns_input! ): oauth_codes
  """
  update multiples rows of table: "oauth_codes"
  """
 update_oauth_codes_many("""updates to execute, in order"""
updates: [oauth_codes_updates! ]! ): [oauth_codes_mutation_response]
  """
  update data of the table: "program_attachments"
  """
 update_program_attachments("""increments the numeric columns with given value of the filtered values"""
_inc: program_attachments_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_attachments_set_input, """filter the rows which have to be updated"""
where: program_attachments_bool_exp! ): program_attachments_mutation_response
  """
  update single row of the table: "program_attachments"
  """
 update_program_attachments_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: program_attachments_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_attachments_set_input, pk_columns: program_attachments_pk_columns_input! ): program_attachments
  """
  update multiples rows of table: "program_attachments"
  """
 update_program_attachments_many("""updates to execute, in order"""
updates: [program_attachments_updates! ]! ): [program_attachments_mutation_response]
  """
  update data of the table: "program_chairs"
  """
 update_program_chairs("""increments the numeric columns with given value of the filtered values"""
_inc: program_chairs_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_chairs_set_input, """filter the rows which have to be updated"""
where: program_chairs_bool_exp! ): program_chairs_mutation_response
  """
  update single row of the table: "program_chairs"
  """
 update_program_chairs_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: program_chairs_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_chairs_set_input, pk_columns: program_chairs_pk_columns_input! ): program_chairs
  """
  update multiples rows of table: "program_chairs"
  """
 update_program_chairs_many("""updates to execute, in order"""
updates: [program_chairs_updates! ]! ): [program_chairs_mutation_response]
  """
  update data of the table: "program_columns"
  """
 update_program_columns("""increments the numeric columns with given value of the filtered values"""
_inc: program_columns_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_columns_set_input, """filter the rows which have to be updated"""
where: program_columns_bool_exp! ): program_columns_mutation_response
  """
  update single row of the table: "program_columns"
  """
 update_program_columns_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: program_columns_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_columns_set_input, pk_columns: program_columns_pk_columns_input! ): program_columns
  """
  update multiples rows of table: "program_columns"
  """
 update_program_columns_many("""updates to execute, in order"""
updates: [program_columns_updates! ]! ): [program_columns_mutation_response]
  """
  update data of the table: "program_columns_zoom_users"
  """
 update_program_columns_zoom_users("""increments the numeric columns with given value of the filtered values"""
_inc: program_columns_zoom_users_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_columns_zoom_users_set_input, """filter the rows which have to be updated"""
where: program_columns_zoom_users_bool_exp! ): program_columns_zoom_users_mutation_response
  """
  update single row of the table: "program_columns_zoom_users"
  """
 update_program_columns_zoom_users_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: program_columns_zoom_users_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_columns_zoom_users_set_input, pk_columns: program_columns_zoom_users_pk_columns_input! ): program_columns_zoom_users
  """
  update multiples rows of table: "program_columns_zoom_users"
  """
 update_program_columns_zoom_users_many("""updates to execute, in order"""
updates: [program_columns_zoom_users_updates! ]! ): [program_columns_zoom_users_mutation_response]
  """
  update data of the table: "program_dates"
  """
 update_program_dates("""increments the numeric columns with given value of the filtered values"""
_inc: program_dates_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_dates_set_input, """filter the rows which have to be updated"""
where: program_dates_bool_exp! ): program_dates_mutation_response
  """
  update single row of the table: "program_dates"
  """
 update_program_dates_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: program_dates_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_dates_set_input, pk_columns: program_dates_pk_columns_input! ): program_dates
  """
  update multiples rows of table: "program_dates"
  """
 update_program_dates_many("""updates to execute, in order"""
updates: [program_dates_updates! ]! ): [program_dates_mutation_response]
  """
  update data of the table: "program_downloads"
  """
 update_program_downloads("""increments the numeric columns with given value of the filtered values"""
_inc: program_downloads_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_downloads_set_input, """filter the rows which have to be updated"""
where: program_downloads_bool_exp! ): program_downloads_mutation_response
  """
  update single row of the table: "program_downloads"
  """
 update_program_downloads_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: program_downloads_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_downloads_set_input, pk_columns: program_downloads_pk_columns_input! ): program_downloads
  """
  update multiples rows of table: "program_downloads"
  """
 update_program_downloads_many("""updates to execute, in order"""
updates: [program_downloads_updates! ]! ): [program_downloads_mutation_response]
  """
  update data of the table: "program_info"
  """
 update_program_info("""increments the numeric columns with given value of the filtered values"""
_inc: program_info_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_info_set_input, """filter the rows which have to be updated"""
where: program_info_bool_exp! ): program_info_mutation_response
  """
  update single row of the table: "program_info"
  """
 update_program_info_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: program_info_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_info_set_input, pk_columns: program_info_pk_columns_input! ): program_info
  """
  update multiples rows of table: "program_info"
  """
 update_program_info_many("""updates to execute, in order"""
updates: [program_info_updates! ]! ): [program_info_mutation_response]
  """
  update data of the table: "program_information"
  """
 update_program_information("""increments the numeric columns with given value of the filtered values"""
_inc: program_information_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_information_set_input, """filter the rows which have to be updated"""
where: program_information_bool_exp! ): program_information_mutation_response
  """
  update single row of the table: "program_information"
  """
 update_program_information_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: program_information_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_information_set_input, pk_columns: program_information_pk_columns_input! ): program_information
  """
  update multiples rows of table: "program_information"
  """
 update_program_information_many("""updates to execute, in order"""
updates: [program_information_updates! ]! ): [program_information_mutation_response]
  """
  update data of the table: "program_locations"
  """
 update_program_locations("""increments the numeric columns with given value of the filtered values"""
_inc: program_locations_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_locations_set_input, """filter the rows which have to be updated"""
where: program_locations_bool_exp! ): program_locations_mutation_response
  """
  update single row of the table: "program_locations"
  """
 update_program_locations_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: program_locations_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_locations_set_input, pk_columns: program_locations_pk_columns_input! ): program_locations
  """
  update multiples rows of table: "program_locations"
  """
 update_program_locations_many("""updates to execute, in order"""
updates: [program_locations_updates! ]! ): [program_locations_mutation_response]
  """
  update data of the table: "program_session_attachments"
  """
 update_program_session_activities("""increments the numeric columns with given value of the filtered values"""
_inc: program_session_activities_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_session_activities_set_input, """filter the rows which have to be updated"""
where: program_session_activities_bool_exp! ): program_session_activities_mutation_response
  """
  update multiples rows of table: "program_session_attachments"
  """
 update_program_session_activities_many("""updates to execute, in order"""
updates: [program_session_activities_updates! ]! ): [program_session_activities_mutation_response]
  """
  update data of the table: "program_session_categories"
  """
 update_program_session_categories("""increments the numeric columns with given value of the filtered values"""
_inc: program_session_categories_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_session_categories_set_input, """filter the rows which have to be updated"""
where: program_session_categories_bool_exp! ): program_session_categories_mutation_response
  """
  update single row of the table: "program_session_categories"
  """
 update_program_session_categories_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: program_session_categories_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_session_categories_set_input, pk_columns: program_session_categories_pk_columns_input! ): program_session_categories
  """
  update multiples rows of table: "program_session_categories"
  """
 update_program_session_categories_many("""updates to execute, in order"""
updates: [program_session_categories_updates! ]! ): [program_session_categories_mutation_response]
  """
  update data of the table: "program_session_category_type"
  """
 update_program_session_category_type("""increments the numeric columns with given value of the filtered values"""
_inc: program_session_category_type_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_session_category_type_set_input, """filter the rows which have to be updated"""
where: program_session_category_type_bool_exp! ): program_session_category_type_mutation_response
  """
  update single row of the table: "program_session_category_type"
  """
 update_program_session_category_type_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: program_session_category_type_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_session_category_type_set_input, pk_columns: program_session_category_type_pk_columns_input! ): program_session_category_type
  """
  update multiples rows of table: "program_session_category_type"
  """
 update_program_session_category_type_many("""updates to execute, in order"""
updates: [program_session_category_type_updates! ]! ): [program_session_category_type_mutation_response]
  """
  update data of the table: "program_session_sponsors"
  """
 update_program_session_sponsors("""increments the numeric columns with given value of the filtered values"""
_inc: program_session_sponsors_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_session_sponsors_set_input, """filter the rows which have to be updated"""
where: program_session_sponsors_bool_exp! ): program_session_sponsors_mutation_response
  """
  update multiples rows of table: "program_session_sponsors"
  """
 update_program_session_sponsors_many("""updates to execute, in order"""
updates: [program_session_sponsors_updates! ]! ): [program_session_sponsors_mutation_response]
  """
  update data of the table: "program_session_zoom_meetings"
  """
 update_program_session_zoom_meetings("""increments the numeric columns with given value of the filtered values"""
_inc: program_session_zoom_meetings_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_session_zoom_meetings_set_input, """filter the rows which have to be updated"""
where: program_session_zoom_meetings_bool_exp! ): program_session_zoom_meetings_mutation_response
  """
  update single row of the table: "program_session_zoom_meetings"
  """
 update_program_session_zoom_meetings_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: program_session_zoom_meetings_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_session_zoom_meetings_set_input, pk_columns: program_session_zoom_meetings_pk_columns_input! ): program_session_zoom_meetings
  """
  update multiples rows of table: "program_session_zoom_meetings"
  """
 update_program_session_zoom_meetings_many("""updates to execute, in order"""
updates: [program_session_zoom_meetings_updates! ]! ): [program_session_zoom_meetings_mutation_response]
  """
  update data of the table: "program_sessions"
  """
 update_program_sessions("""increments the numeric columns with given value of the filtered values"""
_inc: program_sessions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_sessions_set_input, """filter the rows which have to be updated"""
where: program_sessions_bool_exp! ): program_sessions_mutation_response
  """
  update single row of the table: "program_sessions"
  """
 update_program_sessions_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: program_sessions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_sessions_set_input, pk_columns: program_sessions_pk_columns_input! ): program_sessions
  """
  update data of the table: "program_sessions_categories"
  """
 update_program_sessions_categories("""increments the numeric columns with given value of the filtered values"""
_inc: program_sessions_categories_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_sessions_categories_set_input, """filter the rows which have to be updated"""
where: program_sessions_categories_bool_exp! ): program_sessions_categories_mutation_response
  """
  update single row of the table: "program_sessions_categories"
  """
 update_program_sessions_categories_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: program_sessions_categories_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_sessions_categories_set_input, pk_columns: program_sessions_categories_pk_columns_input! ): program_sessions_categories
  """
  update multiples rows of table: "program_sessions_categories"
  """
 update_program_sessions_categories_many("""updates to execute, in order"""
updates: [program_sessions_categories_updates! ]! ): [program_sessions_categories_mutation_response]
  """
  update data of the table: "program_sessions_chairs"
  """
 update_program_sessions_chairs("""increments the numeric columns with given value of the filtered values"""
_inc: program_sessions_chairs_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_sessions_chairs_set_input, """filter the rows which have to be updated"""
where: program_sessions_chairs_bool_exp! ): program_sessions_chairs_mutation_response
  """
  update single row of the table: "program_sessions_chairs"
  """
 update_program_sessions_chairs_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: program_sessions_chairs_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_sessions_chairs_set_input, pk_columns: program_sessions_chairs_pk_columns_input! ): program_sessions_chairs
  """
  update multiples rows of table: "program_sessions_chairs"
  """
 update_program_sessions_chairs_many("""updates to execute, in order"""
updates: [program_sessions_chairs_updates! ]! ): [program_sessions_chairs_mutation_response]
  """
  update data of the table: "program_sessions_comments"
  """
 update_program_sessions_comments("""increments the numeric columns with given value of the filtered values"""
_inc: program_sessions_comments_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_sessions_comments_set_input, """filter the rows which have to be updated"""
where: program_sessions_comments_bool_exp! ): program_sessions_comments_mutation_response
  """
  update single row of the table: "program_sessions_comments"
  """
 update_program_sessions_comments_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: program_sessions_comments_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_sessions_comments_set_input, pk_columns: program_sessions_comments_pk_columns_input! ): program_sessions_comments
  """
  update multiples rows of table: "program_sessions_comments"
  """
 update_program_sessions_comments_many("""updates to execute, in order"""
updates: [program_sessions_comments_updates! ]! ): [program_sessions_comments_mutation_response]
  """
  update multiples rows of table: "program_sessions"
  """
 update_program_sessions_many("""updates to execute, in order"""
updates: [program_sessions_updates! ]! ): [program_sessions_mutation_response]
  """
  update data of the table: "program_sessions_program_columns"
  """
 update_program_sessions_program_columns("""increments the numeric columns with given value of the filtered values"""
_inc: program_sessions_program_columns_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_sessions_program_columns_set_input, """filter the rows which have to be updated"""
where: program_sessions_program_columns_bool_exp! ): program_sessions_program_columns_mutation_response
  """
  update multiples rows of table: "program_sessions_program_columns"
  """
 update_program_sessions_program_columns_many("""updates to execute, in order"""
updates: [program_sessions_program_columns_updates! ]! ): [program_sessions_program_columns_mutation_response]
  """
  update data of the table: "program_sessions_submissions"
  """
 update_program_sessions_submissions("""increments the numeric columns with given value of the filtered values"""
_inc: program_sessions_submissions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_sessions_submissions_set_input, """filter the rows which have to be updated"""
where: program_sessions_submissions_bool_exp! ): program_sessions_submissions_mutation_response
  """
  update multiples rows of table: "program_sessions_submissions"
  """
 update_program_sessions_submissions_many("""updates to execute, in order"""
updates: [program_sessions_submissions_updates! ]! ): [program_sessions_submissions_mutation_response]
  """
  update data of the table: "program_sessions_symposia"
  """
 update_program_sessions_symposia("""increments the numeric columns with given value of the filtered values"""
_inc: program_sessions_symposia_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_sessions_symposia_set_input, """filter the rows which have to be updated"""
where: program_sessions_symposia_bool_exp! ): program_sessions_symposia_mutation_response
  """
  update multiples rows of table: "program_sessions_symposia"
  """
 update_program_sessions_symposia_many("""updates to execute, in order"""
updates: [program_sessions_symposia_updates! ]! ): [program_sessions_symposia_mutation_response]
  """
  update data of the table: "program_sponsors"
  """
 update_program_sponsors("""increments the numeric columns with given value of the filtered values"""
_inc: program_sponsors_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_sponsors_set_input, """filter the rows which have to be updated"""
where: program_sponsors_bool_exp! ): program_sponsors_mutation_response
  """
  update single row of the table: "program_sponsors"
  """
 update_program_sponsors_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: program_sponsors_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_sponsors_set_input, pk_columns: program_sponsors_pk_columns_input! ): program_sponsors
  """
  update multiples rows of table: "program_sponsors"
  """
 update_program_sponsors_many("""updates to execute, in order"""
updates: [program_sponsors_updates! ]! ): [program_sponsors_mutation_response]
  """
  update data of the table: "program_submissions_comments"
  """
 update_program_submissions_comments("""increments the numeric columns with given value of the filtered values"""
_inc: program_submissions_comments_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_submissions_comments_set_input, """filter the rows which have to be updated"""
where: program_submissions_comments_bool_exp! ): program_submissions_comments_mutation_response
  """
  update single row of the table: "program_submissions_comments"
  """
 update_program_submissions_comments_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: program_submissions_comments_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_submissions_comments_set_input, pk_columns: program_submissions_comments_pk_columns_input! ): program_submissions_comments
  """
  update multiples rows of table: "program_submissions_comments"
  """
 update_program_submissions_comments_many("""updates to execute, in order"""
updates: [program_submissions_comments_updates! ]! ): [program_submissions_comments_mutation_response]
  """
  update data of the table: "program_symposium_comments"
  """
 update_program_symposium_comments("""increments the numeric columns with given value of the filtered values"""
_inc: program_symposium_comments_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_symposium_comments_set_input, """filter the rows which have to be updated"""
where: program_symposium_comments_bool_exp! ): program_symposium_comments_mutation_response
  """
  update single row of the table: "program_symposium_comments"
  """
 update_program_symposium_comments_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: program_symposium_comments_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_symposium_comments_set_input, pk_columns: program_symposium_comments_pk_columns_input! ): program_symposium_comments
  """
  update multiples rows of table: "program_symposium_comments"
  """
 update_program_symposium_comments_many("""updates to execute, in order"""
updates: [program_symposium_comments_updates! ]! ): [program_symposium_comments_mutation_response]
  """
  update data of the table: "program_tabs"
  """
 update_program_tabs("""increments the numeric columns with given value of the filtered values"""
_inc: program_tabs_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_tabs_set_input, """filter the rows which have to be updated"""
where: program_tabs_bool_exp! ): program_tabs_mutation_response
  """
  update multiples rows of table: "program_tabs"
  """
 update_program_tabs_many("""updates to execute, in order"""
updates: [program_tabs_updates! ]! ): [program_tabs_mutation_response]
  """
  update data of the table: "program_tracks"
  """
 update_program_tracks("""increments the numeric columns with given value of the filtered values"""
_inc: program_tracks_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_tracks_set_input, """filter the rows which have to be updated"""
where: program_tracks_bool_exp! ): program_tracks_mutation_response
  """
  update single row of the table: "program_tracks"
  """
 update_program_tracks_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: program_tracks_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_tracks_set_input, pk_columns: program_tracks_pk_columns_input! ): program_tracks
  """
  update multiples rows of table: "program_tracks"
  """
 update_program_tracks_many("""updates to execute, in order"""
updates: [program_tracks_updates! ]! ): [program_tracks_mutation_response]
  """
  update data of the table: "program_types"
  """
 update_program_types("""increments the numeric columns with given value of the filtered values"""
_inc: program_types_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_types_set_input, """filter the rows which have to be updated"""
where: program_types_bool_exp! ): program_types_mutation_response
  """
  update single row of the table: "program_types"
  """
 update_program_types_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: program_types_inc_input, """sets the columns of the filtered rows to the given values"""
_set: program_types_set_input, pk_columns: program_types_pk_columns_input! ): program_types
  """
  update multiples rows of table: "program_types"
  """
 update_program_types_many("""updates to execute, in order"""
updates: [program_types_updates! ]! ): [program_types_mutation_response]
  """
  update data of the table: "question_response_versions"
  """
 update_question_response_versions("""increments the numeric columns with given value of the filtered values"""
_inc: question_response_versions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: question_response_versions_set_input, """filter the rows which have to be updated"""
where: question_response_versions_bool_exp! ): question_response_versions_mutation_response
  """
  update single row of the table: "question_response_versions"
  """
 update_question_response_versions_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: question_response_versions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: question_response_versions_set_input, pk_columns: question_response_versions_pk_columns_input! ): question_response_versions
  """
  update multiples rows of table: "question_response_versions"
  """
 update_question_response_versions_many("""updates to execute, in order"""
updates: [question_response_versions_updates! ]! ): [question_response_versions_mutation_response]
  """
  update data of the table: "question_responses"
  """
 update_question_responses("""increments the numeric columns with given value of the filtered values"""
_inc: question_responses_inc_input, """sets the columns of the filtered rows to the given values"""
_set: question_responses_set_input, """filter the rows which have to be updated"""
where: question_responses_bool_exp! ): question_responses_mutation_response
  """
  update single row of the table: "question_responses"
  """
 update_question_responses_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: question_responses_inc_input, """sets the columns of the filtered rows to the given values"""
_set: question_responses_set_input, pk_columns: question_responses_pk_columns_input! ): question_responses
  """
  update multiples rows of table: "question_responses"
  """
 update_question_responses_many("""updates to execute, in order"""
updates: [question_responses_updates! ]! ): [question_responses_mutation_response]
  """
  update data of the table: "question_responses_view"
  """
 update_question_responses_view("""increments the numeric columns with given value of the filtered values"""
_inc: question_responses_view_inc_input, """sets the columns of the filtered rows to the given values"""
_set: question_responses_view_set_input, """filter the rows which have to be updated"""
where: question_responses_view_bool_exp! ): question_responses_view_mutation_response
  """
  update multiples rows of table: "question_responses_view"
  """
 update_question_responses_view_many("""updates to execute, in order"""
updates: [question_responses_view_updates! ]! ): [question_responses_view_mutation_response]
  """
  update data of the table: "questions"
  """
 update_questions("""increments the numeric columns with given value of the filtered values"""
_inc: questions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: questions_set_input, """filter the rows which have to be updated"""
where: questions_bool_exp! ): questions_mutation_response
  """
  update single row of the table: "questions"
  """
 update_questions_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: questions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: questions_set_input, pk_columns: questions_pk_columns_input! ): questions
  """
  update multiples rows of table: "questions"
  """
 update_questions_many("""updates to execute, in order"""
updates: [questions_updates! ]! ): [questions_mutation_response]
  """
  update data of the table: "questions_stage_options"
  """
 update_questions_stage_options("""increments the numeric columns with given value of the filtered values"""
_inc: questions_stage_options_inc_input, """sets the columns of the filtered rows to the given values"""
_set: questions_stage_options_set_input, """filter the rows which have to be updated"""
where: questions_stage_options_bool_exp! ): questions_stage_options_mutation_response
  """
  update single row of the table: "questions_stage_options"
  """
 update_questions_stage_options_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: questions_stage_options_inc_input, """sets the columns of the filtered rows to the given values"""
_set: questions_stage_options_set_input, pk_columns: questions_stage_options_pk_columns_input! ): questions_stage_options
  """
  update multiples rows of table: "questions_stage_options"
  """
 update_questions_stage_options_many("""updates to execute, in order"""
updates: [questions_stage_options_updates! ]! ): [questions_stage_options_mutation_response]
  """
  update data of the table: "questions_stage_options_view"
  """
 update_questions_stage_options_view("""increments the numeric columns with given value of the filtered values"""
_inc: questions_stage_options_view_inc_input, """sets the columns of the filtered rows to the given values"""
_set: questions_stage_options_view_set_input, """filter the rows which have to be updated"""
where: questions_stage_options_view_bool_exp! ): questions_stage_options_view_mutation_response
  """
  update multiples rows of table: "questions_stage_options_view"
  """
 update_questions_stage_options_view_many("""updates to execute, in order"""
updates: [questions_stage_options_view_updates! ]! ): [questions_stage_options_view_mutation_response]
  """
  update data of the table: "questions_view"
  """
 update_questions_view("""increments the numeric columns with given value of the filtered values"""
_inc: questions_view_inc_input, """sets the columns of the filtered rows to the given values"""
_set: questions_view_set_input, """filter the rows which have to be updated"""
where: questions_view_bool_exp! ): questions_view_mutation_response
  """
  update multiples rows of table: "questions_view"
  """
 update_questions_view_many("""updates to execute, in order"""
updates: [questions_view_updates! ]! ): [questions_view_mutation_response]
  """
  update data of the table: "ratings"
  """
 update_ratings("""increments the numeric columns with given value of the filtered values"""
_inc: ratings_inc_input, """sets the columns of the filtered rows to the given values"""
_set: ratings_set_input, """filter the rows which have to be updated"""
where: ratings_bool_exp! ): ratings_mutation_response
  """
  update single row of the table: "ratings"
  """
 update_ratings_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: ratings_inc_input, """sets the columns of the filtered rows to the given values"""
_set: ratings_set_input, pk_columns: ratings_pk_columns_input! ): ratings
  """
  update multiples rows of table: "ratings"
  """
 update_ratings_many("""updates to execute, in order"""
updates: [ratings_updates! ]! ): [ratings_mutation_response]
  """
  update data of the table: "read_by_user_program_comments"
  """
 update_read_by_user_program_comments("""increments the numeric columns with given value of the filtered values"""
_inc: read_by_user_program_comments_inc_input, """sets the columns of the filtered rows to the given values"""
_set: read_by_user_program_comments_set_input, """filter the rows which have to be updated"""
where: read_by_user_program_comments_bool_exp! ): read_by_user_program_comments_mutation_response
  """
  update single row of the table: "read_by_user_program_comments"
  """
 update_read_by_user_program_comments_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: read_by_user_program_comments_inc_input, """sets the columns of the filtered rows to the given values"""
_set: read_by_user_program_comments_set_input, pk_columns: read_by_user_program_comments_pk_columns_input! ): read_by_user_program_comments
  """
  update multiples rows of table: "read_by_user_program_comments"
  """
 update_read_by_user_program_comments_many("""updates to execute, in order"""
updates: [read_by_user_program_comments_updates! ]! ): [read_by_user_program_comments_mutation_response]
  """
  update data of the table: "revenues"
  """
 update_revenues("""increments the numeric columns with given value of the filtered values"""
_inc: revenues_inc_input, """sets the columns of the filtered rows to the given values"""
_set: revenues_set_input, """filter the rows which have to be updated"""
where: revenues_bool_exp! ): revenues_mutation_response
  """
  update single row of the table: "revenues"
  """
 update_revenues_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: revenues_inc_input, """sets the columns of the filtered rows to the given values"""
_set: revenues_set_input, pk_columns: revenues_pk_columns_input! ): revenues
  """
  update multiples rows of table: "revenues"
  """
 update_revenues_many("""updates to execute, in order"""
updates: [revenues_updates! ]! ): [revenues_mutation_response]
  """
  update data of the table: "review_dates"
  """
 update_review_dates("""increments the numeric columns with given value of the filtered values"""
_inc: review_dates_inc_input, """sets the columns of the filtered rows to the given values"""
_set: review_dates_set_input, """filter the rows which have to be updated"""
where: review_dates_bool_exp! ): review_dates_mutation_response
  """
  update single row of the table: "review_dates"
  """
 update_review_dates_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: review_dates_inc_input, """sets the columns of the filtered rows to the given values"""
_set: review_dates_set_input, pk_columns: review_dates_pk_columns_input! ): review_dates
  """
  update multiples rows of table: "review_dates"
  """
 update_review_dates_many("""updates to execute, in order"""
updates: [review_dates_updates! ]! ): [review_dates_mutation_response]
  """
  update data of the table: "reviewer_admin_notes"
  """
 update_reviewer_admin_notes("""increments the numeric columns with given value of the filtered values"""
_inc: reviewer_admin_notes_inc_input, """sets the columns of the filtered rows to the given values"""
_set: reviewer_admin_notes_set_input, """filter the rows which have to be updated"""
where: reviewer_admin_notes_bool_exp! ): reviewer_admin_notes_mutation_response
  """
  update multiples rows of table: "reviewer_admin_notes"
  """
 update_reviewer_admin_notes_many("""updates to execute, in order"""
updates: [reviewer_admin_notes_updates! ]! ): [reviewer_admin_notes_mutation_response]
  """
  update data of the table: "reviewer_categories"
  """
 update_reviewer_categories("""increments the numeric columns with given value of the filtered values"""
_inc: reviewer_categories_inc_input, """sets the columns of the filtered rows to the given values"""
_set: reviewer_categories_set_input, """filter the rows which have to be updated"""
where: reviewer_categories_bool_exp! ): reviewer_categories_mutation_response
  """
  update multiples rows of table: "reviewer_categories"
  """
 update_reviewer_categories_many("""updates to execute, in order"""
updates: [reviewer_categories_updates! ]! ): [reviewer_categories_mutation_response]
  """
  update data of the table: "reviewer_inline_comments"
  """
 update_reviewer_inline_comments("""increments the numeric columns with given value of the filtered values"""
_inc: reviewer_inline_comments_inc_input, """sets the columns of the filtered rows to the given values"""
_set: reviewer_inline_comments_set_input, """filter the rows which have to be updated"""
where: reviewer_inline_comments_bool_exp! ): reviewer_inline_comments_mutation_response
  """
  update single row of the table: "reviewer_inline_comments"
  """
 update_reviewer_inline_comments_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: reviewer_inline_comments_inc_input, """sets the columns of the filtered rows to the given values"""
_set: reviewer_inline_comments_set_input, pk_columns: reviewer_inline_comments_pk_columns_input! ): reviewer_inline_comments
  """
  update multiples rows of table: "reviewer_inline_comments"
  """
 update_reviewer_inline_comments_many("""updates to execute, in order"""
updates: [reviewer_inline_comments_updates! ]! ): [reviewer_inline_comments_mutation_response]
  """
  update data of the table: "reviewer_question_responses"
  """
 update_reviewer_question_responses("""increments the numeric columns with given value of the filtered values"""
_inc: reviewer_question_responses_inc_input, """sets the columns of the filtered rows to the given values"""
_set: reviewer_question_responses_set_input, """filter the rows which have to be updated"""
where: reviewer_question_responses_bool_exp! ): reviewer_question_responses_mutation_response
  """
  update single row of the table: "reviewer_question_responses"
  """
 update_reviewer_question_responses_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: reviewer_question_responses_inc_input, """sets the columns of the filtered rows to the given values"""
_set: reviewer_question_responses_set_input, pk_columns: reviewer_question_responses_pk_columns_input! ): reviewer_question_responses
  """
  update multiples rows of table: "reviewer_question_responses"
  """
 update_reviewer_question_responses_many("""updates to execute, in order"""
updates: [reviewer_question_responses_updates! ]! ): [reviewer_question_responses_mutation_response]
  """
  update data of the table: "reviewer_questions"
  """
 update_reviewer_questions("""increments the numeric columns with given value of the filtered values"""
_inc: reviewer_questions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: reviewer_questions_set_input, """filter the rows which have to be updated"""
where: reviewer_questions_bool_exp! ): reviewer_questions_mutation_response
  """
  update single row of the table: "reviewer_questions"
  """
 update_reviewer_questions_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: reviewer_questions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: reviewer_questions_set_input, pk_columns: reviewer_questions_pk_columns_input! ): reviewer_questions
  """
  update multiples rows of table: "reviewer_questions"
  """
 update_reviewer_questions_many("""updates to execute, in order"""
updates: [reviewer_questions_updates! ]! ): [reviewer_questions_mutation_response]
  """
  update data of the table: "reviews"
  """
 update_reviews("""increments the numeric columns with given value of the filtered values"""
_inc: reviews_inc_input, """sets the columns of the filtered rows to the given values"""
_set: reviews_set_input, """filter the rows which have to be updated"""
where: reviews_bool_exp! ): reviews_mutation_response
  """
  update single row of the table: "reviews"
  """
 update_reviews_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: reviews_inc_input, """sets the columns of the filtered rows to the given values"""
_set: reviews_set_input, pk_columns: reviews_pk_columns_input! ): reviews
  """
  update multiples rows of table: "reviews"
  """
 update_reviews_many("""updates to execute, in order"""
updates: [reviews_updates! ]! ): [reviews_mutation_response]
  """
  update data of the table: "search_authors"
  """
 update_search_authors("""increments the numeric columns with given value of the filtered values"""
_inc: search_authors_inc_input, """sets the columns of the filtered rows to the given values"""
_set: search_authors_set_input, """filter the rows which have to be updated"""
where: search_authors_bool_exp! ): search_authors_mutation_response
  """
  update multiples rows of table: "search_authors"
  """
 update_search_authors_many("""updates to execute, in order"""
updates: [search_authors_updates! ]! ): [search_authors_mutation_response]
  """
  update data of the table: "search_chairs"
  """
 update_search_chairs("""increments the numeric columns with given value of the filtered values"""
_inc: search_chairs_inc_input, """sets the columns of the filtered rows to the given values"""
_set: search_chairs_set_input, """filter the rows which have to be updated"""
where: search_chairs_bool_exp! ): search_chairs_mutation_response
  """
  update multiples rows of table: "search_chairs"
  """
 update_search_chairs_many("""updates to execute, in order"""
updates: [search_chairs_updates! ]! ): [search_chairs_mutation_response]
  """
  update data of the table: "search_program_sessions"
  """
 update_search_program_sessions("""increments the numeric columns with given value of the filtered values"""
_inc: search_program_sessions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: search_program_sessions_set_input, """filter the rows which have to be updated"""
where: search_program_sessions_bool_exp! ): search_program_sessions_mutation_response
  """
  update multiples rows of table: "search_program_sessions"
  """
 update_search_program_sessions_many("""updates to execute, in order"""
updates: [search_program_sessions_updates! ]! ): [search_program_sessions_mutation_response]
  """
  update data of the table: "search_question_responses"
  """
 update_search_question_responses("""increments the numeric columns with given value of the filtered values"""
_inc: search_question_responses_inc_input, """sets the columns of the filtered rows to the given values"""
_set: search_question_responses_set_input, """filter the rows which have to be updated"""
where: search_question_responses_bool_exp! ): search_question_responses_mutation_response
  """
  update multiples rows of table: "search_question_responses"
  """
 update_search_question_responses_many("""updates to execute, in order"""
updates: [search_question_responses_updates! ]! ): [search_question_responses_mutation_response]
  """
  update data of the table: "search_symposium_question_responses"
  """
 update_search_symposium_question_responses("""increments the numeric columns with given value of the filtered values"""
_inc: search_symposium_question_responses_inc_input, """sets the columns of the filtered rows to the given values"""
_set: search_symposium_question_responses_set_input, """filter the rows which have to be updated"""
where: search_symposium_question_responses_bool_exp! ): search_symposium_question_responses_mutation_response
  """
  update multiples rows of table: "search_symposium_question_responses"
  """
 update_search_symposium_question_responses_many("""updates to execute, in order"""
updates: [search_symposium_question_responses_updates! ]! ): [search_symposium_question_responses_mutation_response]
  """
  update data of the table: "session_chair_affiliations"
  """
 update_session_chair_affiliations("""increments the numeric columns with given value of the filtered values"""
_inc: session_chair_affiliations_inc_input, """sets the columns of the filtered rows to the given values"""
_set: session_chair_affiliations_set_input, """filter the rows which have to be updated"""
where: session_chair_affiliations_bool_exp! ): session_chair_affiliations_mutation_response
  """
  update single row of the table: "session_chair_affiliations"
  """
 update_session_chair_affiliations_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: session_chair_affiliations_inc_input, """sets the columns of the filtered rows to the given values"""
_set: session_chair_affiliations_set_input, pk_columns: session_chair_affiliations_pk_columns_input! ): session_chair_affiliations
  """
  update multiples rows of table: "session_chair_affiliations"
  """
 update_session_chair_affiliations_many("""updates to execute, in order"""
updates: [session_chair_affiliations_updates! ]! ): [session_chair_affiliations_mutation_response]
  """
  update data of the table: "session_chair_fields"
  """
 update_session_chair_fields("""increments the numeric columns with given value of the filtered values"""
_inc: session_chair_fields_inc_input, """sets the columns of the filtered rows to the given values"""
_set: session_chair_fields_set_input, """filter the rows which have to be updated"""
where: session_chair_fields_bool_exp! ): session_chair_fields_mutation_response
  """
  update single row of the table: "session_chair_fields"
  """
 update_session_chair_fields_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: session_chair_fields_inc_input, """sets the columns of the filtered rows to the given values"""
_set: session_chair_fields_set_input, pk_columns: session_chair_fields_pk_columns_input! ): session_chair_fields
  """
  update multiples rows of table: "session_chair_fields"
  """
 update_session_chair_fields_many("""updates to execute, in order"""
updates: [session_chair_fields_updates! ]! ): [session_chair_fields_mutation_response]
  """
  update data of the table: "session_chair_responses"
  """
 update_session_chair_responses("""increments the numeric columns with given value of the filtered values"""
_inc: session_chair_responses_inc_input, """sets the columns of the filtered rows to the given values"""
_set: session_chair_responses_set_input, """filter the rows which have to be updated"""
where: session_chair_responses_bool_exp! ): session_chair_responses_mutation_response
  """
  update single row of the table: "session_chair_responses"
  """
 update_session_chair_responses_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: session_chair_responses_inc_input, """sets the columns of the filtered rows to the given values"""
_set: session_chair_responses_set_input, pk_columns: session_chair_responses_pk_columns_input! ): session_chair_responses
  """
  update multiples rows of table: "session_chair_responses"
  """
 update_session_chair_responses_many("""updates to execute, in order"""
updates: [session_chair_responses_updates! ]! ): [session_chair_responses_mutation_response]
  """
  update data of the table: "session_chairs"
  """
 update_session_chairs("""increments the numeric columns with given value of the filtered values"""
_inc: session_chairs_inc_input, """sets the columns of the filtered rows to the given values"""
_set: session_chairs_set_input, """filter the rows which have to be updated"""
where: session_chairs_bool_exp! ): session_chairs_mutation_response
  """
  update single row of the table: "session_chairs"
  """
 update_session_chairs_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: session_chairs_inc_input, """sets the columns of the filtered rows to the given values"""
_set: session_chairs_set_input, pk_columns: session_chairs_pk_columns_input! ): session_chairs
  """
  update multiples rows of table: "session_chairs"
  """
 update_session_chairs_many("""updates to execute, in order"""
updates: [session_chairs_updates! ]! ): [session_chairs_mutation_response]
  """
  update data of the table: "session_links"
  """
 update_session_links("""increments the numeric columns with given value of the filtered values"""
_inc: session_links_inc_input, """sets the columns of the filtered rows to the given values"""
_set: session_links_set_input, """filter the rows which have to be updated"""
where: session_links_bool_exp! ): session_links_mutation_response
  """
  update multiples rows of table: "session_links"
  """
 update_session_links_many("""updates to execute, in order"""
updates: [session_links_updates! ]! ): [session_links_mutation_response]
  """
  update data of the table: "sessions"
  """
 update_sessions("""increments the numeric columns with given value of the filtered values"""
_inc: sessions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: sessions_set_input, """filter the rows which have to be updated"""
where: sessions_bool_exp! ): sessions_mutation_response
  """
  update multiples rows of table: "sessions"
  """
 update_sessions_many("""updates to execute, in order"""
updates: [sessions_updates! ]! ): [sessions_mutation_response]
  """
  update data of the table: "software_updates"
  """
 update_software_updates("""increments the numeric columns with given value of the filtered values"""
_inc: software_updates_inc_input, """sets the columns of the filtered rows to the given values"""
_set: software_updates_set_input, """filter the rows which have to be updated"""
where: software_updates_bool_exp! ): software_updates_mutation_response
  """
  update single row of the table: "software_updates"
  """
 update_software_updates_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: software_updates_inc_input, """sets the columns of the filtered rows to the given values"""
_set: software_updates_set_input, pk_columns: software_updates_pk_columns_input! ): software_updates
  """
  update multiples rows of table: "software_updates"
  """
 update_software_updates_many("""updates to execute, in order"""
updates: [software_updates_updates! ]! ): [software_updates_mutation_response]
  """
  update data of the table: "stages"
  """
 update_stages("""increments the numeric columns with given value of the filtered values"""
_inc: stages_inc_input, """sets the columns of the filtered rows to the given values"""
_set: stages_set_input, """filter the rows which have to be updated"""
where: stages_bool_exp! ): stages_mutation_response
  """
  update single row of the table: "stages"
  """
 update_stages_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: stages_inc_input, """sets the columns of the filtered rows to the given values"""
_set: stages_set_input, pk_columns: stages_pk_columns_input! ): stages
  """
  update data of the table: "stages_event_acceptance_types"
  """
 update_stages_event_acceptance_types("""increments the numeric columns with given value of the filtered values"""
_inc: stages_event_acceptance_types_inc_input, """sets the columns of the filtered rows to the given values"""
_set: stages_event_acceptance_types_set_input, """filter the rows which have to be updated"""
where: stages_event_acceptance_types_bool_exp! ): stages_event_acceptance_types_mutation_response
  """
  update single row of the table: "stages_event_acceptance_types"
  """
 update_stages_event_acceptance_types_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: stages_event_acceptance_types_inc_input, """sets the columns of the filtered rows to the given values"""
_set: stages_event_acceptance_types_set_input, pk_columns: stages_event_acceptance_types_pk_columns_input! ): stages_event_acceptance_types
  """
  update multiples rows of table: "stages_event_acceptance_types"
  """
 update_stages_event_acceptance_types_many("""updates to execute, in order"""
updates: [stages_event_acceptance_types_updates! ]! ): [stages_event_acceptance_types_mutation_response]
  """
  update multiples rows of table: "stages"
  """
 update_stages_many("""updates to execute, in order"""
updates: [stages_updates! ]! ): [stages_mutation_response]
  """
  update data of the table: "stages_view"
  """
 update_stages_view("""increments the numeric columns with given value of the filtered values"""
_inc: stages_view_inc_input, """sets the columns of the filtered rows to the given values"""
_set: stages_view_set_input, """filter the rows which have to be updated"""
where: stages_view_bool_exp! ): stages_view_mutation_response
  """
  update multiples rows of table: "stages_view"
  """
 update_stages_view_many("""updates to execute, in order"""
updates: [stages_view_updates! ]! ): [stages_view_mutation_response]
  """
  update data of the table: "submission_acceptance_types"
  """
 update_submission_acceptance_types("""increments the numeric columns with given value of the filtered values"""
_inc: submission_acceptance_types_inc_input, """sets the columns of the filtered rows to the given values"""
_set: submission_acceptance_types_set_input, """filter the rows which have to be updated"""
where: submission_acceptance_types_bool_exp! ): submission_acceptance_types_mutation_response
  """
  update multiples rows of table: "submission_acceptance_types"
  """
 update_submission_acceptance_types_many("""updates to execute, in order"""
updates: [submission_acceptance_types_updates! ]! ): [submission_acceptance_types_mutation_response]
  """
  update data of the table: "submission_owner_log"
  """
 update_submission_owner_log("""increments the numeric columns with given value of the filtered values"""
_inc: submission_owner_log_inc_input, """sets the columns of the filtered rows to the given values"""
_set: submission_owner_log_set_input, """filter the rows which have to be updated"""
where: submission_owner_log_bool_exp! ): submission_owner_log_mutation_response
  """
  update single row of the table: "submission_owner_log"
  """
 update_submission_owner_log_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: submission_owner_log_inc_input, """sets the columns of the filtered rows to the given values"""
_set: submission_owner_log_set_input, pk_columns: submission_owner_log_pk_columns_input! ): submission_owner_log
  """
  update multiples rows of table: "submission_owner_log"
  """
 update_submission_owner_log_many("""updates to execute, in order"""
updates: [submission_owner_log_updates! ]! ): [submission_owner_log_mutation_response]
  """
  update data of the table: "submissions_with_archived"
  """
 update_submissions("""increments the numeric columns with given value of the filtered values"""
_inc: submissions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: submissions_set_input, """filter the rows which have to be updated"""
where: submissions_bool_exp! ): submissions_mutation_response
  """
  update single row of the table: "submissions_with_archived"
  """
 update_submissions_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: submissions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: submissions_set_input, pk_columns: submissions_pk_columns_input! ): submissions
  """
  update multiples rows of table: "submissions_with_archived"
  """
 update_submissions_many("""updates to execute, in order"""
updates: [submissions_updates! ]! ): [submissions_mutation_response]
  """
  update data of the table: "symposia_with_archived"
  """
 update_symposia("""increments the numeric columns with given value of the filtered values"""
_inc: symposia_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposia_set_input, """filter the rows which have to be updated"""
where: symposia_bool_exp! ): symposia_mutation_response
  """
  update data of the table: "symposia_acceptance_types"
  """
 update_symposia_acceptance_types("""increments the numeric columns with given value of the filtered values"""
_inc: symposia_acceptance_types_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposia_acceptance_types_set_input, """filter the rows which have to be updated"""
where: symposia_acceptance_types_bool_exp! ): symposia_acceptance_types_mutation_response
  """
  update single row of the table: "symposia_acceptance_types"
  """
 update_symposia_acceptance_types_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: symposia_acceptance_types_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposia_acceptance_types_set_input, pk_columns: symposia_acceptance_types_pk_columns_input! ): symposia_acceptance_types
  """
  update multiples rows of table: "symposia_acceptance_types"
  """
 update_symposia_acceptance_types_many("""updates to execute, in order"""
updates: [symposia_acceptance_types_updates! ]! ): [symposia_acceptance_types_mutation_response]
  """
  update single row of the table: "symposia_with_archived"
  """
 update_symposia_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: symposia_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposia_set_input, pk_columns: symposia_pk_columns_input! ): symposia
  """
  update multiples rows of table: "symposia_with_archived"
  """
 update_symposia_many("""updates to execute, in order"""
updates: [symposia_updates! ]! ): [symposia_mutation_response]
  """
  update data of the table: "symposium_affiliations"
  """
 update_symposium_affiliations("""increments the numeric columns with given value of the filtered values"""
_inc: symposium_affiliations_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposium_affiliations_set_input, """filter the rows which have to be updated"""
where: symposium_affiliations_bool_exp! ): symposium_affiliations_mutation_response
  """
  update single row of the table: "symposium_affiliations"
  """
 update_symposium_affiliations_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: symposium_affiliations_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposium_affiliations_set_input, pk_columns: symposium_affiliations_pk_columns_input! ): symposium_affiliations
  """
  update multiples rows of table: "symposium_affiliations"
  """
 update_symposium_affiliations_many("""updates to execute, in order"""
updates: [symposium_affiliations_updates! ]! ): [symposium_affiliations_mutation_response]
  """
  update data of the table: "symposium_person_field_responses"
  """
 update_symposium_person_field_responses("""increments the numeric columns with given value of the filtered values"""
_inc: symposium_person_field_responses_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposium_person_field_responses_set_input, """filter the rows which have to be updated"""
where: symposium_person_field_responses_bool_exp! ): symposium_person_field_responses_mutation_response
  """
  update single row of the table: "symposium_person_field_responses"
  """
 update_symposium_person_field_responses_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: symposium_person_field_responses_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposium_person_field_responses_set_input, pk_columns: symposium_person_field_responses_pk_columns_input! ): symposium_person_field_responses
  """
  update multiples rows of table: "symposium_person_field_responses"
  """
 update_symposium_person_field_responses_many("""updates to execute, in order"""
updates: [symposium_person_field_responses_updates! ]! ): [symposium_person_field_responses_mutation_response]
  """
  update data of the table: "symposium_person_fields"
  """
 update_symposium_person_fields("""increments the numeric columns with given value of the filtered values"""
_inc: symposium_person_fields_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposium_person_fields_set_input, """filter the rows which have to be updated"""
where: symposium_person_fields_bool_exp! ): symposium_person_fields_mutation_response
  """
  update single row of the table: "symposium_person_fields"
  """
 update_symposium_person_fields_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: symposium_person_fields_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposium_person_fields_set_input, pk_columns: symposium_person_fields_pk_columns_input! ): symposium_person_fields
  """
  update multiples rows of table: "symposium_person_fields"
  """
 update_symposium_person_fields_many("""updates to execute, in order"""
updates: [symposium_person_fields_updates! ]! ): [symposium_person_fields_mutation_response]
  """
  update data of the table: "symposium_persons"
  """
 update_symposium_persons("""increments the numeric columns with given value of the filtered values"""
_inc: symposium_persons_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposium_persons_set_input, """filter the rows which have to be updated"""
where: symposium_persons_bool_exp! ): symposium_persons_mutation_response
  """
  update single row of the table: "symposium_persons"
  """
 update_symposium_persons_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: symposium_persons_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposium_persons_set_input, pk_columns: symposium_persons_pk_columns_input! ): symposium_persons
  """
  update multiples rows of table: "symposium_persons"
  """
 update_symposium_persons_many("""updates to execute, in order"""
updates: [symposium_persons_updates! ]! ): [symposium_persons_mutation_response]
  """
  update data of the table: "symposium_question_responses"
  """
 update_symposium_question_responses("""increments the numeric columns with given value of the filtered values"""
_inc: symposium_question_responses_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposium_question_responses_set_input, """filter the rows which have to be updated"""
where: symposium_question_responses_bool_exp! ): symposium_question_responses_mutation_response
  """
  update single row of the table: "symposium_question_responses"
  """
 update_symposium_question_responses_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: symposium_question_responses_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposium_question_responses_set_input, pk_columns: symposium_question_responses_pk_columns_input! ): symposium_question_responses
  """
  update multiples rows of table: "symposium_question_responses"
  """
 update_symposium_question_responses_many("""updates to execute, in order"""
updates: [symposium_question_responses_updates! ]! ): [symposium_question_responses_mutation_response]
  """
  update data of the table: "symposium_questions"
  """
 update_symposium_questions("""increments the numeric columns with given value of the filtered values"""
_inc: symposium_questions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposium_questions_set_input, """filter the rows which have to be updated"""
where: symposium_questions_bool_exp! ): symposium_questions_mutation_response
  """
  update single row of the table: "symposium_questions"
  """
 update_symposium_questions_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: symposium_questions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposium_questions_set_input, pk_columns: symposium_questions_pk_columns_input! ): symposium_questions
  """
  update multiples rows of table: "symposium_questions"
  """
 update_symposium_questions_many("""updates to execute, in order"""
updates: [symposium_questions_updates! ]! ): [symposium_questions_mutation_response]
  """
  update data of the table: "symposium_review_question_responses"
  """
 update_symposium_review_question_responses("""increments the numeric columns with given value of the filtered values"""
_inc: symposium_review_question_responses_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposium_review_question_responses_set_input, """filter the rows which have to be updated"""
where: symposium_review_question_responses_bool_exp! ): symposium_review_question_responses_mutation_response
  """
  update single row of the table: "symposium_review_question_responses"
  """
 update_symposium_review_question_responses_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: symposium_review_question_responses_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposium_review_question_responses_set_input, pk_columns: symposium_review_question_responses_pk_columns_input! ): symposium_review_question_responses
  """
  update multiples rows of table: "symposium_review_question_responses"
  """
 update_symposium_review_question_responses_many("""updates to execute, in order"""
updates: [symposium_review_question_responses_updates! ]! ): [symposium_review_question_responses_mutation_response]
  """
  update data of the table: "symposium_review_questions"
  """
 update_symposium_review_questions("""increments the numeric columns with given value of the filtered values"""
_inc: symposium_review_questions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposium_review_questions_set_input, """filter the rows which have to be updated"""
where: symposium_review_questions_bool_exp! ): symposium_review_questions_mutation_response
  """
  update single row of the table: "symposium_review_questions"
  """
 update_symposium_review_questions_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: symposium_review_questions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposium_review_questions_set_input, pk_columns: symposium_review_questions_pk_columns_input! ): symposium_review_questions
  """
  update multiples rows of table: "symposium_review_questions"
  """
 update_symposium_review_questions_many("""updates to execute, in order"""
updates: [symposium_review_questions_updates! ]! ): [symposium_review_questions_mutation_response]
  """
  update data of the table: "symposium_reviews"
  """
 update_symposium_reviews("""increments the numeric columns with given value of the filtered values"""
_inc: symposium_reviews_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposium_reviews_set_input, """filter the rows which have to be updated"""
where: symposium_reviews_bool_exp! ): symposium_reviews_mutation_response
  """
  update single row of the table: "symposium_reviews"
  """
 update_symposium_reviews_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: symposium_reviews_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposium_reviews_set_input, pk_columns: symposium_reviews_pk_columns_input! ): symposium_reviews
  """
  update multiples rows of table: "symposium_reviews"
  """
 update_symposium_reviews_many("""updates to execute, in order"""
updates: [symposium_reviews_updates! ]! ): [symposium_reviews_mutation_response]
  """
  update data of the table: "symposium_submission_session_times"
  """
 update_symposium_submission_session_times("""increments the numeric columns with given value of the filtered values"""
_inc: symposium_submission_session_times_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposium_submission_session_times_set_input, """filter the rows which have to be updated"""
where: symposium_submission_session_times_bool_exp! ): symposium_submission_session_times_mutation_response
  """
  update single row of the table: "symposium_submission_session_times"
  """
 update_symposium_submission_session_times_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: symposium_submission_session_times_inc_input, """sets the columns of the filtered rows to the given values"""
_set: symposium_submission_session_times_set_input, pk_columns: symposium_submission_session_times_pk_columns_input! ): symposium_submission_session_times
  """
  update multiples rows of table: "symposium_submission_session_times"
  """
 update_symposium_submission_session_times_many("""updates to execute, in order"""
updates: [symposium_submission_session_times_updates! ]! ): [symposium_submission_session_times_mutation_response]
  """
  update data of the table: "table_email_attachments"
  """
 update_table_email_attachments("""sets the columns of the filtered rows to the given values"""
_set: table_email_attachments_set_input, """filter the rows which have to be updated"""
where: table_email_attachments_bool_exp! ): table_email_attachments_mutation_response
  """
  update single row of the table: "table_email_attachments"
  """
 update_table_email_attachments_by_pk("""sets the columns of the filtered rows to the given values"""
_set: table_email_attachments_set_input, pk_columns: table_email_attachments_pk_columns_input! ): table_email_attachments
  """
  update multiples rows of table: "table_email_attachments"
  """
 update_table_email_attachments_many("""updates to execute, in order"""
updates: [table_email_attachments_updates! ]! ): [table_email_attachments_mutation_response]
  """
  update data of the table: "table_email_filters"
  """
 update_table_email_filters("""sets the columns of the filtered rows to the given values"""
_set: table_email_filters_set_input, """filter the rows which have to be updated"""
where: table_email_filters_bool_exp! ): table_email_filters_mutation_response
  """
  update single row of the table: "table_email_filters"
  """
 update_table_email_filters_by_pk("""sets the columns of the filtered rows to the given values"""
_set: table_email_filters_set_input, pk_columns: table_email_filters_pk_columns_input! ): table_email_filters
  """
  update multiples rows of table: "table_email_filters"
  """
 update_table_email_filters_many("""updates to execute, in order"""
updates: [table_email_filters_updates! ]! ): [table_email_filters_mutation_response]
  """
  update data of the table: "table_email_merge_field_defaults"
  """
 update_table_email_merge_field_defaults("""sets the columns of the filtered rows to the given values"""
_set: table_email_merge_field_defaults_set_input, """filter the rows which have to be updated"""
where: table_email_merge_field_defaults_bool_exp! ): table_email_merge_field_defaults_mutation_response
  """
  update single row of the table: "table_email_merge_field_defaults"
  """
 update_table_email_merge_field_defaults_by_pk("""sets the columns of the filtered rows to the given values"""
_set: table_email_merge_field_defaults_set_input, pk_columns: table_email_merge_field_defaults_pk_columns_input! ): table_email_merge_field_defaults
  """
  update multiples rows of table: "table_email_merge_field_defaults"
  """
 update_table_email_merge_field_defaults_many("""updates to execute, in order"""
updates: [table_email_merge_field_defaults_updates! ]! ): [table_email_merge_field_defaults_mutation_response]
  """
  update data of the table: "table_email_recipient_groups"
  """
 update_table_email_recipient_groups("""sets the columns of the filtered rows to the given values"""
_set: table_email_recipient_groups_set_input, """filter the rows which have to be updated"""
where: table_email_recipient_groups_bool_exp! ): table_email_recipient_groups_mutation_response
  """
  update single row of the table: "table_email_recipient_groups"
  """
 update_table_email_recipient_groups_by_pk("""sets the columns of the filtered rows to the given values"""
_set: table_email_recipient_groups_set_input, pk_columns: table_email_recipient_groups_pk_columns_input! ): table_email_recipient_groups
  """
  update multiples rows of table: "table_email_recipient_groups"
  """
 update_table_email_recipient_groups_many("""updates to execute, in order"""
updates: [table_email_recipient_groups_updates! ]! ): [table_email_recipient_groups_mutation_response]
  """
  update data of the table: "table_email_templates"
  """
 update_table_email_templates("""increments the numeric columns with given value of the filtered values"""
_inc: table_email_templates_inc_input, """sets the columns of the filtered rows to the given values"""
_set: table_email_templates_set_input, """filter the rows which have to be updated"""
where: table_email_templates_bool_exp! ): table_email_templates_mutation_response
  """
  update single row of the table: "table_email_templates"
  """
 update_table_email_templates_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: table_email_templates_inc_input, """sets the columns of the filtered rows to the given values"""
_set: table_email_templates_set_input, pk_columns: table_email_templates_pk_columns_input! ): table_email_templates
  """
  update multiples rows of table: "table_email_templates"
  """
 update_table_email_templates_many("""updates to execute, in order"""
updates: [table_email_templates_updates! ]! ): [table_email_templates_mutation_response]
  """
  update data of the table: "track_review_auto_assigns"
  """
 update_track_review_auto_assigns("""increments the numeric columns with given value of the filtered values"""
_inc: track_review_auto_assigns_inc_input, """sets the columns of the filtered rows to the given values"""
_set: track_review_auto_assigns_set_input, """filter the rows which have to be updated"""
where: track_review_auto_assigns_bool_exp! ): track_review_auto_assigns_mutation_response
  """
  update single row of the table: "track_review_auto_assigns"
  """
 update_track_review_auto_assigns_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: track_review_auto_assigns_inc_input, """sets the columns of the filtered rows to the given values"""
_set: track_review_auto_assigns_set_input, pk_columns: track_review_auto_assigns_pk_columns_input! ): track_review_auto_assigns
  """
  update multiples rows of table: "track_review_auto_assigns"
  """
 update_track_review_auto_assigns_many("""updates to execute, in order"""
updates: [track_review_auto_assigns_updates! ]! ): [track_review_auto_assigns_mutation_response]
  """
  update data of the table: "user_asked_for_ratings"
  """
 update_user_asked_for_ratings("""increments the numeric columns with given value of the filtered values"""
_inc: user_asked_for_ratings_inc_input, """sets the columns of the filtered rows to the given values"""
_set: user_asked_for_ratings_set_input, """filter the rows which have to be updated"""
where: user_asked_for_ratings_bool_exp! ): user_asked_for_ratings_mutation_response
  """
  update single row of the table: "user_asked_for_ratings"
  """
 update_user_asked_for_ratings_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: user_asked_for_ratings_inc_input, """sets the columns of the filtered rows to the given values"""
_set: user_asked_for_ratings_set_input, pk_columns: user_asked_for_ratings_pk_columns_input! ): user_asked_for_ratings
  """
  update multiples rows of table: "user_asked_for_ratings"
  """
 update_user_asked_for_ratings_many("""updates to execute, in order"""
updates: [user_asked_for_ratings_updates! ]! ): [user_asked_for_ratings_mutation_response]
  """
  update data of the table: "user_emails"
  """
 update_user_emails("""increments the numeric columns with given value of the filtered values"""
_inc: user_emails_inc_input, """sets the columns of the filtered rows to the given values"""
_set: user_emails_set_input, """filter the rows which have to be updated"""
where: user_emails_bool_exp! ): user_emails_mutation_response
  """
  update multiples rows of table: "user_emails"
  """
 update_user_emails_many("""updates to execute, in order"""
updates: [user_emails_updates! ]! ): [user_emails_mutation_response]
  """
  update data of the table: "user_view"
  """
 update_user_view("""increments the numeric columns with given value of the filtered values"""
_inc: user_view_inc_input, """sets the columns of the filtered rows to the given values"""
_set: user_view_set_input, """filter the rows which have to be updated"""
where: user_view_bool_exp! ): user_view_mutation_response
  """
  update multiples rows of table: "user_view"
  """
 update_user_view_many("""updates to execute, in order"""
updates: [user_view_updates! ]! ): [user_view_mutation_response]
  """
  update data of the table: "users"
  """
 update_users("""increments the numeric columns with given value of the filtered values"""
_inc: users_inc_input, """sets the columns of the filtered rows to the given values"""
_set: users_set_input, """filter the rows which have to be updated"""
where: users_bool_exp! ): users_mutation_response
  """
  update single row of the table: "users"
  """
 update_users_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: users_inc_input, """sets the columns of the filtered rows to the given values"""
_set: users_set_input, pk_columns: users_pk_columns_input! ): users
  """
  update multiples rows of table: "users"
  """
 update_users_many("""updates to execute, in order"""
updates: [users_updates! ]! ): [users_mutation_response]
  """
  update data of the table: "verified_sender_emails"
  """
 update_verified_sender_emails("""increments the numeric columns with given value of the filtered values"""
_inc: verified_sender_emails_inc_input, """sets the columns of the filtered rows to the given values"""
_set: verified_sender_emails_set_input, """filter the rows which have to be updated"""
where: verified_sender_emails_bool_exp! ): verified_sender_emails_mutation_response
  """
  update single row of the table: "verified_sender_emails"
  """
 update_verified_sender_emails_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: verified_sender_emails_inc_input, """sets the columns of the filtered rows to the given values"""
_set: verified_sender_emails_set_input, pk_columns: verified_sender_emails_pk_columns_input! ): verified_sender_emails
  """
  update multiples rows of table: "verified_sender_emails"
  """
 update_verified_sender_emails_many("""updates to execute, in order"""
updates: [verified_sender_emails_updates! ]! ): [verified_sender_emails_mutation_response]
  """
  update data of the table: "virtual_conference_announcement_button_clicks"
  """
 update_virtual_conference_announcement_button_clicks("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_announcement_button_clicks_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_announcement_button_clicks_set_input, """filter the rows which have to be updated"""
where: virtual_conference_announcement_button_clicks_bool_exp! ): virtual_conference_announcement_button_clicks_mutation_response
  """
  update single row of the table: "virtual_conference_announcement_button_clicks"
  """
 update_virtual_conference_announcement_button_clicks_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_announcement_button_clicks_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_announcement_button_clicks_set_input, pk_columns: virtual_conference_announcement_button_clicks_pk_columns_input! ): virtual_conference_announcement_button_clicks
  """
  update multiples rows of table: "virtual_conference_announcement_button_clicks"
  """
 update_virtual_conference_announcement_button_clicks_many("""updates to execute, in order"""
updates: [virtual_conference_announcement_button_clicks_updates! ]! ): [virtual_conference_announcement_button_clicks_mutation_response]
  """
  update data of the table: "virtual_conference_announcement_dismissals"
  """
 update_virtual_conference_announcement_dismissals("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_announcement_dismissals_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_announcement_dismissals_set_input, """filter the rows which have to be updated"""
where: virtual_conference_announcement_dismissals_bool_exp! ): virtual_conference_announcement_dismissals_mutation_response
  """
  update single row of the table: "virtual_conference_announcement_dismissals"
  """
 update_virtual_conference_announcement_dismissals_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_announcement_dismissals_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_announcement_dismissals_set_input, pk_columns: virtual_conference_announcement_dismissals_pk_columns_input! ): virtual_conference_announcement_dismissals
  """
  update multiples rows of table: "virtual_conference_announcement_dismissals"
  """
 update_virtual_conference_announcement_dismissals_many("""updates to execute, in order"""
updates: [virtual_conference_announcement_dismissals_updates! ]! ): [virtual_conference_announcement_dismissals_mutation_response]
  """
  update data of the table: "virtual_conference_announcement_views"
  """
 update_virtual_conference_announcement_views("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_announcement_views_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_announcement_views_set_input, """filter the rows which have to be updated"""
where: virtual_conference_announcement_views_bool_exp! ): virtual_conference_announcement_views_mutation_response
  """
  update single row of the table: "virtual_conference_announcement_views"
  """
 update_virtual_conference_announcement_views_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_announcement_views_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_announcement_views_set_input, pk_columns: virtual_conference_announcement_views_pk_columns_input! ): virtual_conference_announcement_views
  """
  update multiples rows of table: "virtual_conference_announcement_views"
  """
 update_virtual_conference_announcement_views_many("""updates to execute, in order"""
updates: [virtual_conference_announcement_views_updates! ]! ): [virtual_conference_announcement_views_mutation_response]
  """
  update data of the table: "virtual_conference_announcements"
  """
 update_virtual_conference_announcements("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_announcements_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_announcements_set_input, """filter the rows which have to be updated"""
where: virtual_conference_announcements_bool_exp! ): virtual_conference_announcements_mutation_response
  """
  update single row of the table: "virtual_conference_announcements"
  """
 update_virtual_conference_announcements_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_announcements_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_announcements_set_input, pk_columns: virtual_conference_announcements_pk_columns_input! ): virtual_conference_announcements
  """
  update multiples rows of table: "virtual_conference_announcements"
  """
 update_virtual_conference_announcements_many("""updates to execute, in order"""
updates: [virtual_conference_announcements_updates! ]! ): [virtual_conference_announcements_mutation_response]
  """
  update data of the table: "virtual_conference_chat_group_invitations"
  """
 update_virtual_conference_chat_group_invitations("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_chat_group_invitations_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_chat_group_invitations_set_input, """filter the rows which have to be updated"""
where: virtual_conference_chat_group_invitations_bool_exp! ): virtual_conference_chat_group_invitations_mutation_response
  """
  update single row of the table: "virtual_conference_chat_group_invitations"
  """
 update_virtual_conference_chat_group_invitations_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_chat_group_invitations_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_chat_group_invitations_set_input, pk_columns: virtual_conference_chat_group_invitations_pk_columns_input! ): virtual_conference_chat_group_invitations
  """
  update multiples rows of table: "virtual_conference_chat_group_invitations"
  """
 update_virtual_conference_chat_group_invitations_many("""updates to execute, in order"""
updates: [virtual_conference_chat_group_invitations_updates! ]! ): [virtual_conference_chat_group_invitations_mutation_response]
  """
  update data of the table: "virtual_conference_chat_group_reports"
  """
 update_virtual_conference_chat_group_reports("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_chat_group_reports_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_chat_group_reports_set_input, """filter the rows which have to be updated"""
where: virtual_conference_chat_group_reports_bool_exp! ): virtual_conference_chat_group_reports_mutation_response
  """
  update single row of the table: "virtual_conference_chat_group_reports"
  """
 update_virtual_conference_chat_group_reports_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_chat_group_reports_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_chat_group_reports_set_input, pk_columns: virtual_conference_chat_group_reports_pk_columns_input! ): virtual_conference_chat_group_reports
  """
  update multiples rows of table: "virtual_conference_chat_group_reports"
  """
 update_virtual_conference_chat_group_reports_many("""updates to execute, in order"""
updates: [virtual_conference_chat_group_reports_updates! ]! ): [virtual_conference_chat_group_reports_mutation_response]
  """
  update data of the table: "virtual_conference_chat_group_reports_read_by"
  """
 update_virtual_conference_chat_group_reports_read_by("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_chat_group_reports_read_by_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_chat_group_reports_read_by_set_input, """filter the rows which have to be updated"""
where: virtual_conference_chat_group_reports_read_by_bool_exp! ): virtual_conference_chat_group_reports_read_by_mutation_response
  """
  update single row of the table: "virtual_conference_chat_group_reports_read_by"
  """
 update_virtual_conference_chat_group_reports_read_by_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_chat_group_reports_read_by_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_chat_group_reports_read_by_set_input, pk_columns: virtual_conference_chat_group_reports_read_by_pk_columns_input! ): virtual_conference_chat_group_reports_read_by
  """
  update multiples rows of table: "virtual_conference_chat_group_reports_read_by"
  """
 update_virtual_conference_chat_group_reports_read_by_many("""updates to execute, in order"""
updates: [virtual_conference_chat_group_reports_read_by_updates! ]! ): [virtual_conference_chat_group_reports_read_by_mutation_response]
  """
  update data of the table: "virtual_conference_chat_groups"
  """
 update_virtual_conference_chat_groups("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_chat_groups_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_chat_groups_set_input, """filter the rows which have to be updated"""
where: virtual_conference_chat_groups_bool_exp! ): virtual_conference_chat_groups_mutation_response
  """
  update single row of the table: "virtual_conference_chat_groups"
  """
 update_virtual_conference_chat_groups_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_chat_groups_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_chat_groups_set_input, pk_columns: virtual_conference_chat_groups_pk_columns_input! ): virtual_conference_chat_groups
  """
  update multiples rows of table: "virtual_conference_chat_groups"
  """
 update_virtual_conference_chat_groups_many("""updates to execute, in order"""
updates: [virtual_conference_chat_groups_updates! ]! ): [virtual_conference_chat_groups_mutation_response]
  """
  update data of the table: "virtual_conference_cron_job_last_rans"
  """
 update_virtual_conference_cron_job_last_rans("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_cron_job_last_rans_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_cron_job_last_rans_set_input, """filter the rows which have to be updated"""
where: virtual_conference_cron_job_last_rans_bool_exp! ): virtual_conference_cron_job_last_rans_mutation_response
  """
  update single row of the table: "virtual_conference_cron_job_last_rans"
  """
 update_virtual_conference_cron_job_last_rans_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_cron_job_last_rans_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_cron_job_last_rans_set_input, pk_columns: virtual_conference_cron_job_last_rans_pk_columns_input! ): virtual_conference_cron_job_last_rans
  """
  update multiples rows of table: "virtual_conference_cron_job_last_rans"
  """
 update_virtual_conference_cron_job_last_rans_many("""updates to execute, in order"""
updates: [virtual_conference_cron_job_last_rans_updates! ]! ): [virtual_conference_cron_job_last_rans_mutation_response]
  """
  update data of the table: "virtual_conference_direct_chat_blocks"
  """
 update_virtual_conference_direct_chat_blocks("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_direct_chat_blocks_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_direct_chat_blocks_set_input, """filter the rows which have to be updated"""
where: virtual_conference_direct_chat_blocks_bool_exp! ): virtual_conference_direct_chat_blocks_mutation_response
  """
  update single row of the table: "virtual_conference_direct_chat_blocks"
  """
 update_virtual_conference_direct_chat_blocks_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_direct_chat_blocks_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_direct_chat_blocks_set_input, pk_columns: virtual_conference_direct_chat_blocks_pk_columns_input! ): virtual_conference_direct_chat_blocks
  """
  update multiples rows of table: "virtual_conference_direct_chat_blocks"
  """
 update_virtual_conference_direct_chat_blocks_many("""updates to execute, in order"""
updates: [virtual_conference_direct_chat_blocks_updates! ]! ): [virtual_conference_direct_chat_blocks_mutation_response]
  """
  update data of the table: "virtual_conference_direct_messages"
  """
 update_virtual_conference_direct_messages("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_direct_messages_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_direct_messages_set_input, """filter the rows which have to be updated"""
where: virtual_conference_direct_messages_bool_exp! ): virtual_conference_direct_messages_mutation_response
  """
  update single row of the table: "virtual_conference_direct_messages"
  """
 update_virtual_conference_direct_messages_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_direct_messages_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_direct_messages_set_input, pk_columns: virtual_conference_direct_messages_pk_columns_input! ): virtual_conference_direct_messages
  """
  update multiples rows of table: "virtual_conference_direct_messages"
  """
 update_virtual_conference_direct_messages_many("""updates to execute, in order"""
updates: [virtual_conference_direct_messages_updates! ]! ): [virtual_conference_direct_messages_mutation_response]
  """
  update data of the table: "virtual_conference_direct_video_calls"
  """
 update_virtual_conference_direct_video_calls("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_direct_video_calls_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_direct_video_calls_set_input, """filter the rows which have to be updated"""
where: virtual_conference_direct_video_calls_bool_exp! ): virtual_conference_direct_video_calls_mutation_response
  """
  update single row of the table: "virtual_conference_direct_video_calls"
  """
 update_virtual_conference_direct_video_calls_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_direct_video_calls_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_direct_video_calls_set_input, pk_columns: virtual_conference_direct_video_calls_pk_columns_input! ): virtual_conference_direct_video_calls
  """
  update multiples rows of table: "virtual_conference_direct_video_calls"
  """
 update_virtual_conference_direct_video_calls_many("""updates to execute, in order"""
updates: [virtual_conference_direct_video_calls_updates! ]! ): [virtual_conference_direct_video_calls_mutation_response]
  """
  update data of the table: "virtual_conference_email_notification_speeds"
  """
 update_virtual_conference_email_notification_speeds("""sets the columns of the filtered rows to the given values"""
_set: virtual_conference_email_notification_speeds_set_input, """filter the rows which have to be updated"""
where: virtual_conference_email_notification_speeds_bool_exp! ): virtual_conference_email_notification_speeds_mutation_response
  """
  update single row of the table: "virtual_conference_email_notification_speeds"
  """
 update_virtual_conference_email_notification_speeds_by_pk("""sets the columns of the filtered rows to the given values"""
_set: virtual_conference_email_notification_speeds_set_input, pk_columns: virtual_conference_email_notification_speeds_pk_columns_input! ): virtual_conference_email_notification_speeds
  """
  update multiples rows of table: "virtual_conference_email_notification_speeds"
  """
 update_virtual_conference_email_notification_speeds_many("""updates to execute, in order"""
updates: [virtual_conference_email_notification_speeds_updates! ]! ): [virtual_conference_email_notification_speeds_mutation_response]
  """
  update data of the table: "virtual_conference_event_chat_blocks"
  """
 update_virtual_conference_event_chat_blocks("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_event_chat_blocks_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_event_chat_blocks_set_input, """filter the rows which have to be updated"""
where: virtual_conference_event_chat_blocks_bool_exp! ): virtual_conference_event_chat_blocks_mutation_response
  """
  update single row of the table: "virtual_conference_event_chat_blocks"
  """
 update_virtual_conference_event_chat_blocks_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_event_chat_blocks_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_event_chat_blocks_set_input, pk_columns: virtual_conference_event_chat_blocks_pk_columns_input! ): virtual_conference_event_chat_blocks
  """
  update multiples rows of table: "virtual_conference_event_chat_blocks"
  """
 update_virtual_conference_event_chat_blocks_many("""updates to execute, in order"""
updates: [virtual_conference_event_chat_blocks_updates! ]! ): [virtual_conference_event_chat_blocks_mutation_response]
  """
  update data of the table: "virtual_conference_event_interests"
  """
 update_virtual_conference_event_interests("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_event_interests_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_event_interests_set_input, """filter the rows which have to be updated"""
where: virtual_conference_event_interests_bool_exp! ): virtual_conference_event_interests_mutation_response
  """
  update single row of the table: "virtual_conference_event_interests"
  """
 update_virtual_conference_event_interests_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_event_interests_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_event_interests_set_input, pk_columns: virtual_conference_event_interests_pk_columns_input! ): virtual_conference_event_interests
  """
  update multiples rows of table: "virtual_conference_event_interests"
  """
 update_virtual_conference_event_interests_many("""updates to execute, in order"""
updates: [virtual_conference_event_interests_updates! ]! ): [virtual_conference_event_interests_mutation_response]
  """
  update data of the table: "virtual_conference_event_messages"
  """
 update_virtual_conference_event_messages("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_event_messages_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_event_messages_set_input, """filter the rows which have to be updated"""
where: virtual_conference_event_messages_bool_exp! ): virtual_conference_event_messages_mutation_response
  """
  update single row of the table: "virtual_conference_event_messages"
  """
 update_virtual_conference_event_messages_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_event_messages_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_event_messages_set_input, pk_columns: virtual_conference_event_messages_pk_columns_input! ): virtual_conference_event_messages
  """
  update data of the table: "virtual_conference_event_messages_last_read"
  """
 update_virtual_conference_event_messages_last_read("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_event_messages_last_read_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_event_messages_last_read_set_input, """filter the rows which have to be updated"""
where: virtual_conference_event_messages_last_read_bool_exp! ): virtual_conference_event_messages_last_read_mutation_response
  """
  update single row of the table: "virtual_conference_event_messages_last_read"
  """
 update_virtual_conference_event_messages_last_read_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_event_messages_last_read_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_event_messages_last_read_set_input, pk_columns: virtual_conference_event_messages_last_read_pk_columns_input! ): virtual_conference_event_messages_last_read
  """
  update multiples rows of table: "virtual_conference_event_messages_last_read"
  """
 update_virtual_conference_event_messages_last_read_many("""updates to execute, in order"""
updates: [virtual_conference_event_messages_last_read_updates! ]! ): [virtual_conference_event_messages_last_read_mutation_response]
  """
  update multiples rows of table: "virtual_conference_event_messages"
  """
 update_virtual_conference_event_messages_many("""updates to execute, in order"""
updates: [virtual_conference_event_messages_updates! ]! ): [virtual_conference_event_messages_mutation_response]
  """
  update data of the table: "virtual_conference_group_chat_message_reads"
  """
 update_virtual_conference_group_chat_message_reads("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_group_chat_message_reads_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_group_chat_message_reads_set_input, """filter the rows which have to be updated"""
where: virtual_conference_group_chat_message_reads_bool_exp! ): virtual_conference_group_chat_message_reads_mutation_response
  """
  update single row of the table: "virtual_conference_group_chat_message_reads"
  """
 update_virtual_conference_group_chat_message_reads_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_group_chat_message_reads_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_group_chat_message_reads_set_input, pk_columns: virtual_conference_group_chat_message_reads_pk_columns_input! ): virtual_conference_group_chat_message_reads
  """
  update multiples rows of table: "virtual_conference_group_chat_message_reads"
  """
 update_virtual_conference_group_chat_message_reads_many("""updates to execute, in order"""
updates: [virtual_conference_group_chat_message_reads_updates! ]! ): [virtual_conference_group_chat_message_reads_mutation_response]
  """
  update data of the table: "virtual_conference_group_chat_messages"
  """
 update_virtual_conference_group_chat_messages("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_group_chat_messages_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_group_chat_messages_set_input, """filter the rows which have to be updated"""
where: virtual_conference_group_chat_messages_bool_exp! ): virtual_conference_group_chat_messages_mutation_response
  """
  update single row of the table: "virtual_conference_group_chat_messages"
  """
 update_virtual_conference_group_chat_messages_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_group_chat_messages_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_group_chat_messages_set_input, pk_columns: virtual_conference_group_chat_messages_pk_columns_input! ): virtual_conference_group_chat_messages
  """
  update multiples rows of table: "virtual_conference_group_chat_messages"
  """
 update_virtual_conference_group_chat_messages_many("""updates to execute, in order"""
updates: [virtual_conference_group_chat_messages_updates! ]! ): [virtual_conference_group_chat_messages_mutation_response]
  """
  update data of the table: "virtual_conference_group_video_call_dismissals"
  """
 update_virtual_conference_group_video_call_dismissals("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_group_video_call_dismissals_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_group_video_call_dismissals_set_input, """filter the rows which have to be updated"""
where: virtual_conference_group_video_call_dismissals_bool_exp! ): virtual_conference_group_video_call_dismissals_mutation_response
  """
  update single row of the table: "virtual_conference_group_video_call_dismissals"
  """
 update_virtual_conference_group_video_call_dismissals_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_group_video_call_dismissals_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_group_video_call_dismissals_set_input, pk_columns: virtual_conference_group_video_call_dismissals_pk_columns_input! ): virtual_conference_group_video_call_dismissals
  """
  update multiples rows of table: "virtual_conference_group_video_call_dismissals"
  """
 update_virtual_conference_group_video_call_dismissals_many("""updates to execute, in order"""
updates: [virtual_conference_group_video_call_dismissals_updates! ]! ): [virtual_conference_group_video_call_dismissals_mutation_response]
  """
  update data of the table: "virtual_conference_group_video_call_durations"
  """
 update_virtual_conference_group_video_call_durations("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_group_video_call_durations_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_group_video_call_durations_set_input, """filter the rows which have to be updated"""
where: virtual_conference_group_video_call_durations_bool_exp! ): virtual_conference_group_video_call_durations_mutation_response
  """
  update single row of the table: "virtual_conference_group_video_call_durations"
  """
 update_virtual_conference_group_video_call_durations_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_group_video_call_durations_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_group_video_call_durations_set_input, pk_columns: virtual_conference_group_video_call_durations_pk_columns_input! ): virtual_conference_group_video_call_durations
  """
  update multiples rows of table: "virtual_conference_group_video_call_durations"
  """
 update_virtual_conference_group_video_call_durations_many("""updates to execute, in order"""
updates: [virtual_conference_group_video_call_durations_updates! ]! ): [virtual_conference_group_video_call_durations_mutation_response]
  """
  update data of the table: "virtual_conference_group_video_call_joins"
  """
 update_virtual_conference_group_video_call_joins("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_group_video_call_joins_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_group_video_call_joins_set_input, """filter the rows which have to be updated"""
where: virtual_conference_group_video_call_joins_bool_exp! ): virtual_conference_group_video_call_joins_mutation_response
  """
  update single row of the table: "virtual_conference_group_video_call_joins"
  """
 update_virtual_conference_group_video_call_joins_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_group_video_call_joins_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_group_video_call_joins_set_input, pk_columns: virtual_conference_group_video_call_joins_pk_columns_input! ): virtual_conference_group_video_call_joins
  """
  update multiples rows of table: "virtual_conference_group_video_call_joins"
  """
 update_virtual_conference_group_video_call_joins_many("""updates to execute, in order"""
updates: [virtual_conference_group_video_call_joins_updates! ]! ): [virtual_conference_group_video_call_joins_mutation_response]
  """
  update data of the table: "virtual_conference_group_video_call_notification_dismissals"
  """
 update_virtual_conference_group_video_call_notification_dismissals("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_group_video_call_notification_dismissals_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_group_video_call_notification_dismissals_set_input, """filter the rows which have to be updated"""
where: virtual_conference_group_video_call_notification_dismissals_bool_exp! ): virtual_conference_group_video_call_notification_dismissals_mutation_response
  """
  update single row of the table: "virtual_conference_group_video_call_notification_dismissals"
  """
 update_virtual_conference_group_video_call_notification_dismissals_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_group_video_call_notification_dismissals_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_group_video_call_notification_dismissals_set_input, pk_columns: virtual_conference_group_video_call_notification_dismissals_pk_columns_input! ): virtual_conference_group_video_call_notification_dismissals
  """
  update multiples rows of table: "virtual_conference_group_video_call_notification_dismissals"
  """
 update_virtual_conference_group_video_call_notification_dismissals_many("""updates to execute, in order"""
updates: [virtual_conference_group_video_call_notification_dismissals_updates! ]! ): [virtual_conference_group_video_call_notification_dismissals_mutation_response]
  """
  update data of the table: "virtual_conference_name_badge"
  """
 update_virtual_conference_name_badge("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_name_badge_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_name_badge_set_input, """filter the rows which have to be updated"""
where: virtual_conference_name_badge_bool_exp! ): virtual_conference_name_badge_mutation_response
  """
  update single row of the table: "virtual_conference_name_badge"
  """
 update_virtual_conference_name_badge_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_name_badge_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_name_badge_set_input, pk_columns: virtual_conference_name_badge_pk_columns_input! ): virtual_conference_name_badge
  """
  update multiples rows of table: "virtual_conference_name_badge"
  """
 update_virtual_conference_name_badge_many("""updates to execute, in order"""
updates: [virtual_conference_name_badge_updates! ]! ): [virtual_conference_name_badge_mutation_response]
  """
  update data of the table: "virtual_conference_notification_preferences"
  """
 update_virtual_conference_notification_preferences("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_notification_preferences_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_notification_preferences_set_input, """filter the rows which have to be updated"""
where: virtual_conference_notification_preferences_bool_exp! ): virtual_conference_notification_preferences_mutation_response
  """
  update single row of the table: "virtual_conference_notification_preferences"
  """
 update_virtual_conference_notification_preferences_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_notification_preferences_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_notification_preferences_set_input, pk_columns: virtual_conference_notification_preferences_pk_columns_input! ): virtual_conference_notification_preferences
  """
  update multiples rows of table: "virtual_conference_notification_preferences"
  """
 update_virtual_conference_notification_preferences_many("""updates to execute, in order"""
updates: [virtual_conference_notification_preferences_updates! ]! ): [virtual_conference_notification_preferences_mutation_response]
  """
  update data of the table: "virtual_conference_page_views"
  """
 update_virtual_conference_page_views("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_page_views_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_page_views_set_input, """filter the rows which have to be updated"""
where: virtual_conference_page_views_bool_exp! ): virtual_conference_page_views_mutation_response
  """
  update single row of the table: "virtual_conference_page_views"
  """
 update_virtual_conference_page_views_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_page_views_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_page_views_set_input, pk_columns: virtual_conference_page_views_pk_columns_input! ): virtual_conference_page_views
  """
  update multiples rows of table: "virtual_conference_page_views"
  """
 update_virtual_conference_page_views_many("""updates to execute, in order"""
updates: [virtual_conference_page_views_updates! ]! ): [virtual_conference_page_views_mutation_response]
  """
  update data of the table: "virtual_conference_poster_views"
  """
 update_virtual_conference_poster_views("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_poster_views_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_poster_views_set_input, """filter the rows which have to be updated"""
where: virtual_conference_poster_views_bool_exp! ): virtual_conference_poster_views_mutation_response
  """
  update single row of the table: "virtual_conference_poster_views"
  """
 update_virtual_conference_poster_views_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_poster_views_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_poster_views_set_input, pk_columns: virtual_conference_poster_views_pk_columns_input! ): virtual_conference_poster_views
  """
  update multiples rows of table: "virtual_conference_poster_views"
  """
 update_virtual_conference_poster_views_many("""updates to execute, in order"""
updates: [virtual_conference_poster_views_updates! ]! ): [virtual_conference_poster_views_mutation_response]
  """
  update data of the table: "virtual_conference_requests"
  """
 update_virtual_conference_requests("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_requests_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_requests_set_input, """filter the rows which have to be updated"""
where: virtual_conference_requests_bool_exp! ): virtual_conference_requests_mutation_response
  """
  update single row of the table: "virtual_conference_requests"
  """
 update_virtual_conference_requests_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_requests_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_requests_set_input, pk_columns: virtual_conference_requests_pk_columns_input! ): virtual_conference_requests
  """
  update multiples rows of table: "virtual_conference_requests"
  """
 update_virtual_conference_requests_many("""updates to execute, in order"""
updates: [virtual_conference_requests_updates! ]! ): [virtual_conference_requests_mutation_response]
  """
  update data of the table: "virtual_conference_saved_badges"
  """
 update_virtual_conference_saved_badges("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_saved_badges_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_saved_badges_set_input, """filter the rows which have to be updated"""
where: virtual_conference_saved_badges_bool_exp! ): virtual_conference_saved_badges_mutation_response
  """
  update single row of the table: "virtual_conference_saved_badges"
  """
 update_virtual_conference_saved_badges_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_saved_badges_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_saved_badges_set_input, pk_columns: virtual_conference_saved_badges_pk_columns_input! ): virtual_conference_saved_badges
  """
  update multiples rows of table: "virtual_conference_saved_badges"
  """
 update_virtual_conference_saved_badges_many("""updates to execute, in order"""
updates: [virtual_conference_saved_badges_updates! ]! ): [virtual_conference_saved_badges_mutation_response]
  """
  update data of the table: "virtual_conference_session_bookmarks"
  """
 update_virtual_conference_session_bookmarks("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_session_bookmarks_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_session_bookmarks_set_input, """filter the rows which have to be updated"""
where: virtual_conference_session_bookmarks_bool_exp! ): virtual_conference_session_bookmarks_mutation_response
  """
  update single row of the table: "virtual_conference_session_bookmarks"
  """
 update_virtual_conference_session_bookmarks_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_session_bookmarks_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_session_bookmarks_set_input, pk_columns: virtual_conference_session_bookmarks_pk_columns_input! ): virtual_conference_session_bookmarks
  """
  update multiples rows of table: "virtual_conference_session_bookmarks"
  """
 update_virtual_conference_session_bookmarks_many("""updates to execute, in order"""
updates: [virtual_conference_session_bookmarks_updates! ]! ): [virtual_conference_session_bookmarks_mutation_response]
  """
  update data of the table: "virtual_conference_session_views"
  """
 update_virtual_conference_session_views("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_session_views_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_session_views_set_input, """filter the rows which have to be updated"""
where: virtual_conference_session_views_bool_exp! ): virtual_conference_session_views_mutation_response
  """
  update single row of the table: "virtual_conference_session_views"
  """
 update_virtual_conference_session_views_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_session_views_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_session_views_set_input, pk_columns: virtual_conference_session_views_pk_columns_input! ): virtual_conference_session_views
  """
  update multiples rows of table: "virtual_conference_session_views"
  """
 update_virtual_conference_session_views_many("""updates to execute, in order"""
updates: [virtual_conference_session_views_updates! ]! ): [virtual_conference_session_views_mutation_response]
  """
  update data of the table: "virtual_conference_sessions"
  """
 update_virtual_conference_sessions("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_sessions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_sessions_set_input, """filter the rows which have to be updated"""
where: virtual_conference_sessions_bool_exp! ): virtual_conference_sessions_mutation_response
  """
  update single row of the table: "virtual_conference_sessions"
  """
 update_virtual_conference_sessions_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_sessions_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_sessions_set_input, pk_columns: virtual_conference_sessions_pk_columns_input! ): virtual_conference_sessions
  """
  update multiples rows of table: "virtual_conference_sessions"
  """
 update_virtual_conference_sessions_many("""updates to execute, in order"""
updates: [virtual_conference_sessions_updates! ]! ): [virtual_conference_sessions_mutation_response]
  """
  update data of the table: "virtual_conference_submission_bookmarks"
  """
 update_virtual_conference_submission_bookmarks("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_submission_bookmarks_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_submission_bookmarks_set_input, """filter the rows which have to be updated"""
where: virtual_conference_submission_bookmarks_bool_exp! ): virtual_conference_submission_bookmarks_mutation_response
  """
  update single row of the table: "virtual_conference_submission_bookmarks"
  """
 update_virtual_conference_submission_bookmarks_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_submission_bookmarks_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_submission_bookmarks_set_input, pk_columns: virtual_conference_submission_bookmarks_pk_columns_input! ): virtual_conference_submission_bookmarks
  """
  update multiples rows of table: "virtual_conference_submission_bookmarks"
  """
 update_virtual_conference_submission_bookmarks_many("""updates to execute, in order"""
updates: [virtual_conference_submission_bookmarks_updates! ]! ): [virtual_conference_submission_bookmarks_mutation_response]
  """
  update data of the table: "virtual_conference_submission_views"
  """
 update_virtual_conference_submission_views("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_submission_views_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_submission_views_set_input, """filter the rows which have to be updated"""
where: virtual_conference_submission_views_bool_exp! ): virtual_conference_submission_views_mutation_response
  """
  update single row of the table: "virtual_conference_submission_views"
  """
 update_virtual_conference_submission_views_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_submission_views_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_submission_views_set_input, pk_columns: virtual_conference_submission_views_pk_columns_input! ): virtual_conference_submission_views
  """
  update multiples rows of table: "virtual_conference_submission_views"
  """
 update_virtual_conference_submission_views_many("""updates to execute, in order"""
updates: [virtual_conference_submission_views_updates! ]! ): [virtual_conference_submission_views_mutation_response]
  """
  update data of the table: "virtual_conference_symposium_views"
  """
 update_virtual_conference_symposium_views("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_symposium_views_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_symposium_views_set_input, """filter the rows which have to be updated"""
where: virtual_conference_symposium_views_bool_exp! ): virtual_conference_symposium_views_mutation_response
  """
  update single row of the table: "virtual_conference_symposium_views"
  """
 update_virtual_conference_symposium_views_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_symposium_views_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_symposium_views_set_input, pk_columns: virtual_conference_symposium_views_pk_columns_input! ): virtual_conference_symposium_views
  """
  update multiples rows of table: "virtual_conference_symposium_views"
  """
 update_virtual_conference_symposium_views_many("""updates to execute, in order"""
updates: [virtual_conference_symposium_views_updates! ]! ): [virtual_conference_symposium_views_mutation_response]
  """
  update data of the table: "virtual_conference_user_heartbeats"
  """
 update_virtual_conference_user_heartbeats("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_user_heartbeats_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_user_heartbeats_set_input, """filter the rows which have to be updated"""
where: virtual_conference_user_heartbeats_bool_exp! ): virtual_conference_user_heartbeats_mutation_response
  """
  update single row of the table: "virtual_conference_user_heartbeats"
  """
 update_virtual_conference_user_heartbeats_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_user_heartbeats_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_user_heartbeats_set_input, pk_columns: virtual_conference_user_heartbeats_pk_columns_input! ): virtual_conference_user_heartbeats
  """
  update multiples rows of table: "virtual_conference_user_heartbeats"
  """
 update_virtual_conference_user_heartbeats_many("""updates to execute, in order"""
updates: [virtual_conference_user_heartbeats_updates! ]! ): [virtual_conference_user_heartbeats_mutation_response]
  """
  update data of the table: "virtual_conference_user_interests"
  """
 update_virtual_conference_user_interests("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_user_interests_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_user_interests_set_input, """filter the rows which have to be updated"""
where: virtual_conference_user_interests_bool_exp! ): virtual_conference_user_interests_mutation_response
  """
  update single row of the table: "virtual_conference_user_interests"
  """
 update_virtual_conference_user_interests_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_user_interests_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_user_interests_set_input, pk_columns: virtual_conference_user_interests_pk_columns_input! ): virtual_conference_user_interests
  """
  update multiples rows of table: "virtual_conference_user_interests"
  """
 update_virtual_conference_user_interests_many("""updates to execute, in order"""
updates: [virtual_conference_user_interests_updates! ]! ): [virtual_conference_user_interests_mutation_response]
  """
  update data of the table: "virtual_conference_user_notifications_last_emailed"
  """
 update_virtual_conference_user_notifications_last_emailed("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_user_notifications_last_emailed_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_user_notifications_last_emailed_set_input, """filter the rows which have to be updated"""
where: virtual_conference_user_notifications_last_emailed_bool_exp! ): virtual_conference_user_notifications_last_emailed_mutation_response
  """
  update single row of the table: "virtual_conference_user_notifications_last_emailed"
  """
 update_virtual_conference_user_notifications_last_emailed_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_user_notifications_last_emailed_inc_input, """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_user_notifications_last_emailed_set_input, pk_columns: virtual_conference_user_notifications_last_emailed_pk_columns_input! ): virtual_conference_user_notifications_last_emailed
  """
  update multiples rows of table: "virtual_conference_user_notifications_last_emailed"
  """
 update_virtual_conference_user_notifications_last_emailed_many("""updates to execute, in order"""
updates: [virtual_conference_user_notifications_last_emailed_updates! ]! ): [virtual_conference_user_notifications_last_emailed_mutation_response]
  """
  update data of the table: "walkthrough_metrics"
  """
 update_walkthrough_metrics("""increments the numeric columns with given value of the filtered values"""
_inc: walkthrough_metrics_inc_input, """sets the columns of the filtered rows to the given values"""
_set: walkthrough_metrics_set_input, """filter the rows which have to be updated"""
where: walkthrough_metrics_bool_exp! ): walkthrough_metrics_mutation_response
  """
  update single row of the table: "walkthrough_metrics"
  """
 update_walkthrough_metrics_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: walkthrough_metrics_inc_input, """sets the columns of the filtered rows to the given values"""
_set: walkthrough_metrics_set_input, pk_columns: walkthrough_metrics_pk_columns_input! ): walkthrough_metrics
  """
  update multiples rows of table: "walkthrough_metrics"
  """
 update_walkthrough_metrics_many("""updates to execute, in order"""
updates: [walkthrough_metrics_updates! ]! ): [walkthrough_metrics_mutation_response]
  """
  update data of the table: "zoom_users_cache"
  """
 update_zoom_users_cache("""increments the numeric columns with given value of the filtered values"""
_inc: zoom_users_cache_inc_input, """sets the columns of the filtered rows to the given values"""
_set: zoom_users_cache_set_input, """filter the rows which have to be updated"""
where: zoom_users_cache_bool_exp! ): zoom_users_cache_mutation_response
  """
  update single row of the table: "zoom_users_cache"
  """
 update_zoom_users_cache_by_pk("""increments the numeric columns with given value of the filtered values"""
_inc: zoom_users_cache_inc_input, """sets the columns of the filtered rows to the given values"""
_set: zoom_users_cache_set_input, pk_columns: zoom_users_cache_pk_columns_input! ): zoom_users_cache
  """
  update multiples rows of table: "zoom_users_cache"
  """
 update_zoom_users_cache_many("""updates to execute, in order"""
updates: [zoom_users_cache_updates! ]! ): [zoom_users_cache_mutation_response]
}

scalar notification_type 

"""
Boolean expression to compare columns of type "notification_type". All fields are combined with logical 'AND'.
"""
input notification_type_comparison_exp {
  _eq: notification_type
  _gt: notification_type
  _gte: notification_type
  _in: [notification_type! ]
  _is_null: Boolean
  _lt: notification_type
  _lte: notification_type
  _neq: notification_type
  _nin: [notification_type! ]
}

"""
columns and relationships of "notifications"
"""
type notifications {
   date: timestamp! 
   details_body: String
   details_title: String
   event_id: Int
   instigator_user_id: Int
   link: String
   message: String! 
   notification_id: Int! 
   notification_type: notification_type! 
  """An array relationship"""
 notifications_users("""distinct select on columns"""
distinct_on: [notifications_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [notifications_users_order_by! ], """filter the rows returned"""
where: notifications_users_bool_exp): [notifications_users! ]! 
  """An aggregate relationship"""
 notifications_users_aggregate("""distinct select on columns"""
distinct_on: [notifications_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [notifications_users_order_by! ], """filter the rows returned"""
where: notifications_users_bool_exp): notifications_users_aggregate! 
   show_after_read: Boolean! 
   title: String
   unique_id: String
   user_type: user_type! 
}

"""
aggregated selection of "notifications"
"""
type notifications_aggregate {
   aggregate: notifications_aggregate_fields
   nodes: [notifications! ]! 
}

"""
aggregate fields of "notifications"
"""
type notifications_aggregate_fields {
   avg: notifications_avg_fields
   count(columns: [notifications_select_column! ], distinct: Boolean): Int! 
   max: notifications_max_fields
   min: notifications_min_fields
   stddev: notifications_stddev_fields
   stddev_pop: notifications_stddev_pop_fields
   stddev_samp: notifications_stddev_samp_fields
   sum: notifications_sum_fields
   var_pop: notifications_var_pop_fields
   var_samp: notifications_var_samp_fields
   variance: notifications_variance_fields
}

"""aggregate avg on columns"""
type notifications_avg_fields {
   event_id: Float
   instigator_user_id: Float
   notification_id: Float
}

"""
Boolean expression to filter rows from the table "notifications". All fields are combined with a logical 'AND'.
"""
input notifications_bool_exp {
  _and: [notifications_bool_exp! ]
  _not: notifications_bool_exp
  _or: [notifications_bool_exp! ]
  date: timestamp_comparison_exp
  details_body: String_comparison_exp
  details_title: String_comparison_exp
  event_id: Int_comparison_exp
  instigator_user_id: Int_comparison_exp
  link: String_comparison_exp
  message: String_comparison_exp
  notification_id: Int_comparison_exp
  notification_type: notification_type_comparison_exp
  notifications_users: notifications_users_bool_exp
  notifications_users_aggregate: notifications_users_aggregate_bool_exp
  show_after_read: Boolean_comparison_exp
  title: String_comparison_exp
  unique_id: String_comparison_exp
  user_type: user_type_comparison_exp
}

"""
unique or primary key constraints on table "notifications"
"""
enum notifications_constraint {
  """
  unique or primary key constraint on columns "notification_id"
  """
notifications_pkey
}

"""
input type for incrementing numeric columns in table "notifications"
"""
input notifications_inc_input {
  event_id: Int
  instigator_user_id: Int
  notification_id: Int
}

"""
input type for inserting data into table "notifications"
"""
input notifications_insert_input {
  date: timestamp! 
  details_body: String
  details_title: String
  event_id: Int
  instigator_user_id: Int
  link: String
  message: String! 
  notification_id: Int! 
  notification_type: notification_type! 
  notifications_users: notifications_users_arr_rel_insert_input
  show_after_read: Boolean! 
  title: String
  unique_id: String
  user_type: user_type! 
}

"""aggregate max on columns"""
type notifications_max_fields {
   date: timestamp
   details_body: String
   details_title: String
   event_id: Int
   instigator_user_id: Int
   link: String
   message: String
   notification_id: Int
   notification_type: notification_type
   title: String
   unique_id: String
   user_type: user_type
}

"""aggregate min on columns"""
type notifications_min_fields {
   date: timestamp
   details_body: String
   details_title: String
   event_id: Int
   instigator_user_id: Int
   link: String
   message: String
   notification_id: Int
   notification_type: notification_type
   title: String
   unique_id: String
   user_type: user_type
}

"""
response of any mutation on the table "notifications"
"""
type notifications_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [notifications! ]! 
}

"""
input type for inserting object relation for remote table "notifications"
"""
input notifications_obj_rel_insert_input {
  data: notifications_insert_input! 
  """upsert condition"""
on_conflict: notifications_on_conflict
}

"""
on_conflict condition type for table "notifications"
"""
input notifications_on_conflict {
  constraint: notifications_constraint! 
  update_columns: [notifications_update_column! ]! 
  where: notifications_bool_exp
}

"""Ordering options when selecting data from "notifications"."""
input notifications_order_by {
  date: order_by
  details_body: order_by
  details_title: order_by
  event_id: order_by
  instigator_user_id: order_by
  link: order_by
  message: order_by
  notification_id: order_by
  notification_type: order_by
  notifications_users_aggregate: notifications_users_aggregate_order_by
  show_after_read: order_by
  title: order_by
  unique_id: order_by
  user_type: order_by
}

"""primary key columns input for table: notifications"""
input notifications_pk_columns_input {
  notification_id: Int! 
}

"""
select columns of table "notifications"
"""
enum notifications_select_column {
  """column name"""
date
  """column name"""
details_body
  """column name"""
details_title
  """column name"""
event_id
  """column name"""
instigator_user_id
  """column name"""
link
  """column name"""
message
  """column name"""
notification_id
  """column name"""
notification_type
  """column name"""
show_after_read
  """column name"""
title
  """column name"""
unique_id
  """column name"""
user_type
}

"""
input type for updating data in table "notifications"
"""
input notifications_set_input {
  date: timestamp
  details_body: String
  details_title: String
  event_id: Int
  instigator_user_id: Int
  link: String
  message: String
  notification_id: Int
  notification_type: notification_type
  show_after_read: Boolean
  title: String
  unique_id: String
  user_type: user_type
}

"""aggregate stddev on columns"""
type notifications_stddev_fields {
   event_id: Float
   instigator_user_id: Float
   notification_id: Float
}

"""aggregate stddev_pop on columns"""
type notifications_stddev_pop_fields {
   event_id: Float
   instigator_user_id: Float
   notification_id: Float
}

"""aggregate stddev_samp on columns"""
type notifications_stddev_samp_fields {
   event_id: Float
   instigator_user_id: Float
   notification_id: Float
}

"""
Streaming cursor of the table "notifications"
"""
input notifications_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: notifications_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input notifications_stream_cursor_value_input {
  date: timestamp
  details_body: String
  details_title: String
  event_id: Int
  instigator_user_id: Int
  link: String
  message: String
  notification_id: Int
  notification_type: notification_type
  show_after_read: Boolean
  title: String
  unique_id: String
  user_type: user_type
}

"""aggregate sum on columns"""
type notifications_sum_fields {
   event_id: Int
   instigator_user_id: Int
   notification_id: Int
}

"""
update columns of table "notifications"
"""
enum notifications_update_column {
  """column name"""
date
  """column name"""
details_body
  """column name"""
details_title
  """column name"""
event_id
  """column name"""
instigator_user_id
  """column name"""
link
  """column name"""
message
  """column name"""
notification_id
  """column name"""
notification_type
  """column name"""
show_after_read
  """column name"""
title
  """column name"""
unique_id
  """column name"""
user_type
}

input notifications_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: notifications_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: notifications_set_input
  where: notifications_bool_exp! 
}

"""
columns and relationships of "notifications_users"
"""
type notifications_users {
   date_read_to: timestamp
   id: Int! 
  """An object relationship"""
 notification: notifications! 
   notification_id: Int! 
   read: Boolean! 
   user_id: Int! 
}

"""
aggregated selection of "notifications_users"
"""
type notifications_users_aggregate {
   aggregate: notifications_users_aggregate_fields
   nodes: [notifications_users! ]! 
}

input notifications_users_aggregate_bool_exp {
  bool_and: notifications_users_aggregate_bool_exp_bool_and
  bool_or: notifications_users_aggregate_bool_exp_bool_or
  count: notifications_users_aggregate_bool_exp_count
}

input notifications_users_aggregate_bool_exp_bool_and {
  arguments: notifications_users_select_column_notifications_users_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: notifications_users_bool_exp
  predicate: Boolean_comparison_exp! 
}

input notifications_users_aggregate_bool_exp_bool_or {
  arguments: notifications_users_select_column_notifications_users_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: notifications_users_bool_exp
  predicate: Boolean_comparison_exp! 
}

input notifications_users_aggregate_bool_exp_count {
  arguments: [notifications_users_select_column! ]
  distinct: Boolean
  filter: notifications_users_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "notifications_users"
"""
type notifications_users_aggregate_fields {
   avg: notifications_users_avg_fields
   count(columns: [notifications_users_select_column! ], distinct: Boolean): Int! 
   max: notifications_users_max_fields
   min: notifications_users_min_fields
   stddev: notifications_users_stddev_fields
   stddev_pop: notifications_users_stddev_pop_fields
   stddev_samp: notifications_users_stddev_samp_fields
   sum: notifications_users_sum_fields
   var_pop: notifications_users_var_pop_fields
   var_samp: notifications_users_var_samp_fields
   variance: notifications_users_variance_fields
}

"""
order by aggregate values of table "notifications_users"
"""
input notifications_users_aggregate_order_by {
  avg: notifications_users_avg_order_by
  count: order_by
  max: notifications_users_max_order_by
  min: notifications_users_min_order_by
  stddev: notifications_users_stddev_order_by
  stddev_pop: notifications_users_stddev_pop_order_by
  stddev_samp: notifications_users_stddev_samp_order_by
  sum: notifications_users_sum_order_by
  var_pop: notifications_users_var_pop_order_by
  var_samp: notifications_users_var_samp_order_by
  variance: notifications_users_variance_order_by
}

"""
input type for inserting array relation for remote table "notifications_users"
"""
input notifications_users_arr_rel_insert_input {
  data: [notifications_users_insert_input! ]! 
  """upsert condition"""
on_conflict: notifications_users_on_conflict
}

"""aggregate avg on columns"""
type notifications_users_avg_fields {
   id: Float
   notification_id: Float
   user_id: Float
}

"""
order by avg() on columns of table "notifications_users"
"""
input notifications_users_avg_order_by {
  id: order_by
  notification_id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "notifications_users". All fields are combined with a logical 'AND'.
"""
input notifications_users_bool_exp {
  _and: [notifications_users_bool_exp! ]
  _not: notifications_users_bool_exp
  _or: [notifications_users_bool_exp! ]
  date_read_to: timestamp_comparison_exp
  id: Int_comparison_exp
  notification: notifications_bool_exp
  notification_id: Int_comparison_exp
  read: Boolean_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "notifications_users"
"""
enum notifications_users_constraint {
  """
  unique or primary key constraint on columns "user_id", "notification_id"
  """
notification_user_unique
  """
  unique or primary key constraint on columns "id"
  """
notifications_users_pkey
}

"""
input type for incrementing numeric columns in table "notifications_users"
"""
input notifications_users_inc_input {
  id: Int
  notification_id: Int
  user_id: Int
}

"""
input type for inserting data into table "notifications_users"
"""
input notifications_users_insert_input {
  date_read_to: timestamp
  id: Int! 
  notification: notifications_obj_rel_insert_input
  notification_id: Int! 
  read: Boolean! 
  user_id: Int! 
}

"""aggregate max on columns"""
type notifications_users_max_fields {
   date_read_to: timestamp
   id: Int
   notification_id: Int
   user_id: Int
}

"""
order by max() on columns of table "notifications_users"
"""
input notifications_users_max_order_by {
  date_read_to: order_by
  id: order_by
  notification_id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type notifications_users_min_fields {
   date_read_to: timestamp
   id: Int
   notification_id: Int
   user_id: Int
}

"""
order by min() on columns of table "notifications_users"
"""
input notifications_users_min_order_by {
  date_read_to: order_by
  id: order_by
  notification_id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "notifications_users"
"""
type notifications_users_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [notifications_users! ]! 
}

"""
on_conflict condition type for table "notifications_users"
"""
input notifications_users_on_conflict {
  constraint: notifications_users_constraint! 
  update_columns: [notifications_users_update_column! ]! 
  where: notifications_users_bool_exp
}

"""Ordering options when selecting data from "notifications_users"."""
input notifications_users_order_by {
  date_read_to: order_by
  id: order_by
  notification: notifications_order_by
  notification_id: order_by
  read: order_by
  user_id: order_by
}

"""primary key columns input for table: notifications_users"""
input notifications_users_pk_columns_input {
  id: Int! 
}

"""
select columns of table "notifications_users"
"""
enum notifications_users_select_column {
  """column name"""
date_read_to
  """column name"""
id
  """column name"""
notification_id
  """column name"""
read
  """column name"""
user_id
}

"""
select "notifications_users_aggregate_bool_exp_bool_and_arguments_columns" columns of table "notifications_users"
"""
enum notifications_users_select_column_notifications_users_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
read
}

"""
select "notifications_users_aggregate_bool_exp_bool_or_arguments_columns" columns of table "notifications_users"
"""
enum notifications_users_select_column_notifications_users_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
read
}

"""
input type for updating data in table "notifications_users"
"""
input notifications_users_set_input {
  date_read_to: timestamp
  id: Int
  notification_id: Int
  read: Boolean
  user_id: Int
}

"""aggregate stddev on columns"""
type notifications_users_stddev_fields {
   id: Float
   notification_id: Float
   user_id: Float
}

"""
order by stddev() on columns of table "notifications_users"
"""
input notifications_users_stddev_order_by {
  id: order_by
  notification_id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type notifications_users_stddev_pop_fields {
   id: Float
   notification_id: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "notifications_users"
"""
input notifications_users_stddev_pop_order_by {
  id: order_by
  notification_id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type notifications_users_stddev_samp_fields {
   id: Float
   notification_id: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "notifications_users"
"""
input notifications_users_stddev_samp_order_by {
  id: order_by
  notification_id: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "notifications_users"
"""
input notifications_users_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: notifications_users_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input notifications_users_stream_cursor_value_input {
  date_read_to: timestamp
  id: Int
  notification_id: Int
  read: Boolean
  user_id: Int
}

"""aggregate sum on columns"""
type notifications_users_sum_fields {
   id: Int
   notification_id: Int
   user_id: Int
}

"""
order by sum() on columns of table "notifications_users"
"""
input notifications_users_sum_order_by {
  id: order_by
  notification_id: order_by
  user_id: order_by
}

"""
update columns of table "notifications_users"
"""
enum notifications_users_update_column {
  """column name"""
date_read_to
  """column name"""
id
  """column name"""
notification_id
  """column name"""
read
  """column name"""
user_id
}

input notifications_users_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: notifications_users_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: notifications_users_set_input
  where: notifications_users_bool_exp! 
}

"""aggregate var_pop on columns"""
type notifications_users_var_pop_fields {
   id: Float
   notification_id: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "notifications_users"
"""
input notifications_users_var_pop_order_by {
  id: order_by
  notification_id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type notifications_users_var_samp_fields {
   id: Float
   notification_id: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "notifications_users"
"""
input notifications_users_var_samp_order_by {
  id: order_by
  notification_id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type notifications_users_variance_fields {
   id: Float
   notification_id: Float
   user_id: Float
}

"""
order by variance() on columns of table "notifications_users"
"""
input notifications_users_variance_order_by {
  id: order_by
  notification_id: order_by
  user_id: order_by
}

"""aggregate var_pop on columns"""
type notifications_var_pop_fields {
   event_id: Float
   instigator_user_id: Float
   notification_id: Float
}

"""aggregate var_samp on columns"""
type notifications_var_samp_fields {
   event_id: Float
   instigator_user_id: Float
   notification_id: Float
}

"""aggregate variance on columns"""
type notifications_variance_fields {
   event_id: Float
   instigator_user_id: Float
   notification_id: Float
}

scalar numeric 

"""
Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'.
"""
input numeric_comparison_exp {
  _eq: numeric
  _gt: numeric
  _gte: numeric
  _in: [numeric! ]
  _is_null: Boolean
  _lt: numeric
  _lte: numeric
  _neq: numeric
  _nin: [numeric! ]
}

"""
This tracks database config based on different environments such as local, prod, staging etc. 
"""
type oa_db_env {
   key: String! 
   value: String! 
}

"""
aggregated selection of "oa_db_env"
"""
type oa_db_env_aggregate {
   aggregate: oa_db_env_aggregate_fields
   nodes: [oa_db_env! ]! 
}

"""
aggregate fields of "oa_db_env"
"""
type oa_db_env_aggregate_fields {
   count(columns: [oa_db_env_select_column! ], distinct: Boolean): Int! 
   max: oa_db_env_max_fields
   min: oa_db_env_min_fields
}

"""
Boolean expression to filter rows from the table "oa_db_env". All fields are combined with a logical 'AND'.
"""
input oa_db_env_bool_exp {
  _and: [oa_db_env_bool_exp! ]
  _not: oa_db_env_bool_exp
  _or: [oa_db_env_bool_exp! ]
  key: String_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "oa_db_env"
"""
enum oa_db_env_constraint {
  """
  unique or primary key constraint on columns "key"
  """
oa_db_env_pkey
}

"""
input type for inserting data into table "oa_db_env"
"""
input oa_db_env_insert_input {
  key: String! 
  value: String! 
}

"""aggregate max on columns"""
type oa_db_env_max_fields {
   key: String
   value: String
}

"""aggregate min on columns"""
type oa_db_env_min_fields {
   key: String
   value: String
}

"""
response of any mutation on the table "oa_db_env"
"""
type oa_db_env_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [oa_db_env! ]! 
}

"""
on_conflict condition type for table "oa_db_env"
"""
input oa_db_env_on_conflict {
  constraint: oa_db_env_constraint! 
  update_columns: [oa_db_env_update_column! ]! 
  where: oa_db_env_bool_exp
}

"""Ordering options when selecting data from "oa_db_env"."""
input oa_db_env_order_by {
  key: order_by
  value: order_by
}

"""primary key columns input for table: oa_db_env"""
input oa_db_env_pk_columns_input {
  key: String! 
}

"""
select columns of table "oa_db_env"
"""
enum oa_db_env_select_column {
  """column name"""
key
  """column name"""
value
}

"""
input type for updating data in table "oa_db_env"
"""
input oa_db_env_set_input {
  key: String
  value: String
}

"""
Streaming cursor of the table "oa_db_env"
"""
input oa_db_env_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: oa_db_env_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input oa_db_env_stream_cursor_value_input {
  key: String
  value: String
}

"""
update columns of table "oa_db_env"
"""
enum oa_db_env_update_column {
  """column name"""
key
  """column name"""
value
}

input oa_db_env_updates {
  """sets the columns of the filtered rows to the given values"""
_set: oa_db_env_set_input
  where: oa_db_env_bool_exp! 
}

"""
columns and relationships of "oauth_codes"
"""
type oauth_codes {
   created_at: timestamptz! 
   id: uuid! 
   token: String! 
   user_id: Int! 
}

"""
aggregated selection of "oauth_codes"
"""
type oauth_codes_aggregate {
   aggregate: oauth_codes_aggregate_fields
   nodes: [oauth_codes! ]! 
}

"""
aggregate fields of "oauth_codes"
"""
type oauth_codes_aggregate_fields {
   avg: oauth_codes_avg_fields
   count(columns: [oauth_codes_select_column! ], distinct: Boolean): Int! 
   max: oauth_codes_max_fields
   min: oauth_codes_min_fields
   stddev: oauth_codes_stddev_fields
   stddev_pop: oauth_codes_stddev_pop_fields
   stddev_samp: oauth_codes_stddev_samp_fields
   sum: oauth_codes_sum_fields
   var_pop: oauth_codes_var_pop_fields
   var_samp: oauth_codes_var_samp_fields
   variance: oauth_codes_variance_fields
}

"""aggregate avg on columns"""
type oauth_codes_avg_fields {
   user_id: Float
}

"""
Boolean expression to filter rows from the table "oauth_codes". All fields are combined with a logical 'AND'.
"""
input oauth_codes_bool_exp {
  _and: [oauth_codes_bool_exp! ]
  _not: oauth_codes_bool_exp
  _or: [oauth_codes_bool_exp! ]
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  token: String_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "oauth_codes"
"""
enum oauth_codes_constraint {
  """
  unique or primary key constraint on columns "id"
  """
oauth_codes_pkey
}

"""
input type for incrementing numeric columns in table "oauth_codes"
"""
input oauth_codes_inc_input {
  user_id: Int
}

"""
input type for inserting data into table "oauth_codes"
"""
input oauth_codes_insert_input {
  created_at: timestamptz! 
  id: uuid! 
  token: String! 
  user_id: Int! 
}

"""aggregate max on columns"""
type oauth_codes_max_fields {
   created_at: timestamptz
   id: uuid
   token: String
   user_id: Int
}

"""aggregate min on columns"""
type oauth_codes_min_fields {
   created_at: timestamptz
   id: uuid
   token: String
   user_id: Int
}

"""
response of any mutation on the table "oauth_codes"
"""
type oauth_codes_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [oauth_codes! ]! 
}

"""
on_conflict condition type for table "oauth_codes"
"""
input oauth_codes_on_conflict {
  constraint: oauth_codes_constraint! 
  update_columns: [oauth_codes_update_column! ]! 
  where: oauth_codes_bool_exp
}

"""Ordering options when selecting data from "oauth_codes"."""
input oauth_codes_order_by {
  created_at: order_by
  id: order_by
  token: order_by
  user_id: order_by
}

"""primary key columns input for table: oauth_codes"""
input oauth_codes_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "oauth_codes"
"""
enum oauth_codes_select_column {
  """column name"""
created_at
  """column name"""
id
  """column name"""
token
  """column name"""
user_id
}

"""
input type for updating data in table "oauth_codes"
"""
input oauth_codes_set_input {
  created_at: timestamptz
  id: uuid
  token: String
  user_id: Int
}

"""aggregate stddev on columns"""
type oauth_codes_stddev_fields {
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type oauth_codes_stddev_pop_fields {
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type oauth_codes_stddev_samp_fields {
   user_id: Float
}

"""
Streaming cursor of the table "oauth_codes"
"""
input oauth_codes_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: oauth_codes_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input oauth_codes_stream_cursor_value_input {
  created_at: timestamptz
  id: uuid
  token: String
  user_id: Int
}

"""aggregate sum on columns"""
type oauth_codes_sum_fields {
   user_id: Int
}

"""
update columns of table "oauth_codes"
"""
enum oauth_codes_update_column {
  """column name"""
created_at
  """column name"""
id
  """column name"""
token
  """column name"""
user_id
}

input oauth_codes_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: oauth_codes_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: oauth_codes_set_input
  where: oauth_codes_bool_exp! 
}

"""aggregate var_pop on columns"""
type oauth_codes_var_pop_fields {
   user_id: Float
}

"""aggregate var_samp on columns"""
type oauth_codes_var_samp_fields {
   user_id: Float
}

"""aggregate variance on columns"""
type oauth_codes_variance_fields {
   user_id: Float
}

"""column ordering options"""
enum order_by {
  """in ascending order, nulls last"""
asc
  """in ascending order, nulls first"""
asc_nulls_first
  """in ascending order, nulls last"""
asc_nulls_last
  """in descending order, nulls first"""
desc
  """in descending order, nulls first"""
desc_nulls_first
  """in descending order, nulls last"""
desc_nulls_last
}

"""
columns and relationships of "orderable_posters_submissions"
"""
type orderable_posters_submissions {
   category: String
   event_id: Int
   program_code: String
   serial_number: Int
  """An object relationship"""
 submission: submissions
  """An array relationship"""
 submission_comments("""distinct select on columns"""
distinct_on: [program_submissions_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_submissions_comments_order_by! ], """filter the rows returned"""
where: program_submissions_comments_bool_exp): [program_submissions_comments! ]! 
  """An aggregate relationship"""
 submission_comments_aggregate("""distinct select on columns"""
distinct_on: [program_submissions_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_submissions_comments_order_by! ], """filter the rows returned"""
where: program_submissions_comments_bool_exp): program_submissions_comments_aggregate! 
   submission_id: Int
  """An array relationship"""
 submission_views("""distinct select on columns"""
distinct_on: [virtual_conference_submission_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_submission_views_order_by! ], """filter the rows returned"""
where: virtual_conference_submission_views_bool_exp): [virtual_conference_submission_views! ]! 
  """An aggregate relationship"""
 submission_views_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_submission_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_submission_views_order_by! ], """filter the rows returned"""
where: virtual_conference_submission_views_bool_exp): virtual_conference_submission_views_aggregate! 
   title: String
   title_no_tags: String
}

"""
aggregated selection of "orderable_posters_submissions"
"""
type orderable_posters_submissions_aggregate {
   aggregate: orderable_posters_submissions_aggregate_fields
   nodes: [orderable_posters_submissions! ]! 
}

input orderable_posters_submissions_aggregate_bool_exp {
  count: orderable_posters_submissions_aggregate_bool_exp_count
}

input orderable_posters_submissions_aggregate_bool_exp_count {
  arguments: [orderable_posters_submissions_select_column! ]
  distinct: Boolean
  filter: orderable_posters_submissions_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "orderable_posters_submissions"
"""
type orderable_posters_submissions_aggregate_fields {
   avg: orderable_posters_submissions_avg_fields
   count(columns: [orderable_posters_submissions_select_column! ], distinct: Boolean): Int! 
   max: orderable_posters_submissions_max_fields
   min: orderable_posters_submissions_min_fields
   stddev: orderable_posters_submissions_stddev_fields
   stddev_pop: orderable_posters_submissions_stddev_pop_fields
   stddev_samp: orderable_posters_submissions_stddev_samp_fields
   sum: orderable_posters_submissions_sum_fields
   var_pop: orderable_posters_submissions_var_pop_fields
   var_samp: orderable_posters_submissions_var_samp_fields
   variance: orderable_posters_submissions_variance_fields
}

"""
order by aggregate values of table "orderable_posters_submissions"
"""
input orderable_posters_submissions_aggregate_order_by {
  avg: orderable_posters_submissions_avg_order_by
  count: order_by
  max: orderable_posters_submissions_max_order_by
  min: orderable_posters_submissions_min_order_by
  stddev: orderable_posters_submissions_stddev_order_by
  stddev_pop: orderable_posters_submissions_stddev_pop_order_by
  stddev_samp: orderable_posters_submissions_stddev_samp_order_by
  sum: orderable_posters_submissions_sum_order_by
  var_pop: orderable_posters_submissions_var_pop_order_by
  var_samp: orderable_posters_submissions_var_samp_order_by
  variance: orderable_posters_submissions_variance_order_by
}

"""
input type for inserting array relation for remote table "orderable_posters_submissions"
"""
input orderable_posters_submissions_arr_rel_insert_input {
  data: [orderable_posters_submissions_insert_input! ]! 
}

"""aggregate avg on columns"""
type orderable_posters_submissions_avg_fields {
   event_id: Float
   serial_number: Float
   submission_id: Float
}

"""
order by avg() on columns of table "orderable_posters_submissions"
"""
input orderable_posters_submissions_avg_order_by {
  event_id: order_by
  serial_number: order_by
  submission_id: order_by
}

"""
Boolean expression to filter rows from the table "orderable_posters_submissions". All fields are combined with a logical 'AND'.
"""
input orderable_posters_submissions_bool_exp {
  _and: [orderable_posters_submissions_bool_exp! ]
  _not: orderable_posters_submissions_bool_exp
  _or: [orderable_posters_submissions_bool_exp! ]
  category: String_comparison_exp
  event_id: Int_comparison_exp
  program_code: String_comparison_exp
  serial_number: Int_comparison_exp
  submission: submissions_bool_exp
  submission_comments: program_submissions_comments_bool_exp
  submission_comments_aggregate: program_submissions_comments_aggregate_bool_exp
  submission_id: Int_comparison_exp
  submission_views: virtual_conference_submission_views_bool_exp
  submission_views_aggregate: virtual_conference_submission_views_aggregate_bool_exp
  title: String_comparison_exp
  title_no_tags: String_comparison_exp
}

"""
input type for inserting data into table "orderable_posters_submissions"
"""
input orderable_posters_submissions_insert_input {
  category: String
  event_id: Int
  program_code: String
  serial_number: Int
  submission: submissions_obj_rel_insert_input
  submission_comments: program_submissions_comments_arr_rel_insert_input
  submission_id: Int
  submission_views: virtual_conference_submission_views_arr_rel_insert_input
  title: String
  title_no_tags: String
}

"""aggregate max on columns"""
type orderable_posters_submissions_max_fields {
   category: String
   event_id: Int
   program_code: String
   serial_number: Int
   submission_id: Int
   title: String
   title_no_tags: String
}

"""
order by max() on columns of table "orderable_posters_submissions"
"""
input orderable_posters_submissions_max_order_by {
  category: order_by
  event_id: order_by
  program_code: order_by
  serial_number: order_by
  submission_id: order_by
  title: order_by
  title_no_tags: order_by
}

"""aggregate min on columns"""
type orderable_posters_submissions_min_fields {
   category: String
   event_id: Int
   program_code: String
   serial_number: Int
   submission_id: Int
   title: String
   title_no_tags: String
}

"""
order by min() on columns of table "orderable_posters_submissions"
"""
input orderable_posters_submissions_min_order_by {
  category: order_by
  event_id: order_by
  program_code: order_by
  serial_number: order_by
  submission_id: order_by
  title: order_by
  title_no_tags: order_by
}

"""
Ordering options when selecting data from "orderable_posters_submissions".
"""
input orderable_posters_submissions_order_by {
  category: order_by
  event_id: order_by
  program_code: order_by
  serial_number: order_by
  submission: submissions_order_by
  submission_comments_aggregate: program_submissions_comments_aggregate_order_by
  submission_id: order_by
  submission_views_aggregate: virtual_conference_submission_views_aggregate_order_by
  title: order_by
  title_no_tags: order_by
}

"""
select columns of table "orderable_posters_submissions"
"""
enum orderable_posters_submissions_select_column {
  """column name"""
category
  """column name"""
event_id
  """column name"""
program_code
  """column name"""
serial_number
  """column name"""
submission_id
  """column name"""
title
  """column name"""
title_no_tags
}

"""aggregate stddev on columns"""
type orderable_posters_submissions_stddev_fields {
   event_id: Float
   serial_number: Float
   submission_id: Float
}

"""
order by stddev() on columns of table "orderable_posters_submissions"
"""
input orderable_posters_submissions_stddev_order_by {
  event_id: order_by
  serial_number: order_by
  submission_id: order_by
}

"""aggregate stddev_pop on columns"""
type orderable_posters_submissions_stddev_pop_fields {
   event_id: Float
   serial_number: Float
   submission_id: Float
}

"""
order by stddev_pop() on columns of table "orderable_posters_submissions"
"""
input orderable_posters_submissions_stddev_pop_order_by {
  event_id: order_by
  serial_number: order_by
  submission_id: order_by
}

"""aggregate stddev_samp on columns"""
type orderable_posters_submissions_stddev_samp_fields {
   event_id: Float
   serial_number: Float
   submission_id: Float
}

"""
order by stddev_samp() on columns of table "orderable_posters_submissions"
"""
input orderable_posters_submissions_stddev_samp_order_by {
  event_id: order_by
  serial_number: order_by
  submission_id: order_by
}

"""
Streaming cursor of the table "orderable_posters_submissions"
"""
input orderable_posters_submissions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: orderable_posters_submissions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input orderable_posters_submissions_stream_cursor_value_input {
  category: String
  event_id: Int
  program_code: String
  serial_number: Int
  submission_id: Int
  title: String
  title_no_tags: String
}

"""aggregate sum on columns"""
type orderable_posters_submissions_sum_fields {
   event_id: Int
   serial_number: Int
   submission_id: Int
}

"""
order by sum() on columns of table "orderable_posters_submissions"
"""
input orderable_posters_submissions_sum_order_by {
  event_id: order_by
  serial_number: order_by
  submission_id: order_by
}

"""aggregate var_pop on columns"""
type orderable_posters_submissions_var_pop_fields {
   event_id: Float
   serial_number: Float
   submission_id: Float
}

"""
order by var_pop() on columns of table "orderable_posters_submissions"
"""
input orderable_posters_submissions_var_pop_order_by {
  event_id: order_by
  serial_number: order_by
  submission_id: order_by
}

"""aggregate var_samp on columns"""
type orderable_posters_submissions_var_samp_fields {
   event_id: Float
   serial_number: Float
   submission_id: Float
}

"""
order by var_samp() on columns of table "orderable_posters_submissions"
"""
input orderable_posters_submissions_var_samp_order_by {
  event_id: order_by
  serial_number: order_by
  submission_id: order_by
}

"""aggregate variance on columns"""
type orderable_posters_submissions_variance_fields {
   event_id: Float
   serial_number: Float
   submission_id: Float
}

"""
order by variance() on columns of table "orderable_posters_submissions"
"""
input orderable_posters_submissions_variance_order_by {
  event_id: order_by
  serial_number: order_by
  submission_id: order_by
}

"""
columns and relationships of "ordered_people_by_last_name"
"""
type ordered_people_by_last_name {
   affiliations: String
   author_ids: _int4
   event_id: Int
   first_name: String
   last_name: String
   name: String
   poster_author_ids: _int4
   presenting_at_least_one: Boolean
   role: _text
   session_chair_ids: _int4
   symposium_chair_ids: _int4
   symposium_discussant_ids: _int4
}

"""
aggregated selection of "ordered_people_by_last_name"
"""
type ordered_people_by_last_name_aggregate {
   aggregate: ordered_people_by_last_name_aggregate_fields
   nodes: [ordered_people_by_last_name! ]! 
}

"""
aggregate fields of "ordered_people_by_last_name"
"""
type ordered_people_by_last_name_aggregate_fields {
   avg: ordered_people_by_last_name_avg_fields
   count(columns: [ordered_people_by_last_name_select_column! ], distinct: Boolean): Int! 
   max: ordered_people_by_last_name_max_fields
   min: ordered_people_by_last_name_min_fields
   stddev: ordered_people_by_last_name_stddev_fields
   stddev_pop: ordered_people_by_last_name_stddev_pop_fields
   stddev_samp: ordered_people_by_last_name_stddev_samp_fields
   sum: ordered_people_by_last_name_sum_fields
   var_pop: ordered_people_by_last_name_var_pop_fields
   var_samp: ordered_people_by_last_name_var_samp_fields
   variance: ordered_people_by_last_name_variance_fields
}

"""aggregate avg on columns"""
type ordered_people_by_last_name_avg_fields {
   event_id: Float
}

"""
Boolean expression to filter rows from the table "ordered_people_by_last_name". All fields are combined with a logical 'AND'.
"""
input ordered_people_by_last_name_bool_exp {
  _and: [ordered_people_by_last_name_bool_exp! ]
  _not: ordered_people_by_last_name_bool_exp
  _or: [ordered_people_by_last_name_bool_exp! ]
  affiliations: String_comparison_exp
  author_ids: _int4_comparison_exp
  event_id: Int_comparison_exp
  first_name: String_comparison_exp
  last_name: String_comparison_exp
  name: String_comparison_exp
  poster_author_ids: _int4_comparison_exp
  presenting_at_least_one: Boolean_comparison_exp
  role: _text_comparison_exp
  session_chair_ids: _int4_comparison_exp
  symposium_chair_ids: _int4_comparison_exp
  symposium_discussant_ids: _int4_comparison_exp
}

"""aggregate max on columns"""
type ordered_people_by_last_name_max_fields {
   affiliations: String
   event_id: Int
   first_name: String
   last_name: String
   name: String
}

"""aggregate min on columns"""
type ordered_people_by_last_name_min_fields {
   affiliations: String
   event_id: Int
   first_name: String
   last_name: String
   name: String
}

"""
Ordering options when selecting data from "ordered_people_by_last_name".
"""
input ordered_people_by_last_name_order_by {
  affiliations: order_by
  author_ids: order_by
  event_id: order_by
  first_name: order_by
  last_name: order_by
  name: order_by
  poster_author_ids: order_by
  presenting_at_least_one: order_by
  role: order_by
  session_chair_ids: order_by
  symposium_chair_ids: order_by
  symposium_discussant_ids: order_by
}

"""
select columns of table "ordered_people_by_last_name"
"""
enum ordered_people_by_last_name_select_column {
  """column name"""
affiliations
  """column name"""
author_ids
  """column name"""
event_id
  """column name"""
first_name
  """column name"""
last_name
  """column name"""
name
  """column name"""
poster_author_ids
  """column name"""
presenting_at_least_one
  """column name"""
role
  """column name"""
session_chair_ids
  """column name"""
symposium_chair_ids
  """column name"""
symposium_discussant_ids
}

"""aggregate stddev on columns"""
type ordered_people_by_last_name_stddev_fields {
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type ordered_people_by_last_name_stddev_pop_fields {
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type ordered_people_by_last_name_stddev_samp_fields {
   event_id: Float
}

"""
Streaming cursor of the table "ordered_people_by_last_name"
"""
input ordered_people_by_last_name_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: ordered_people_by_last_name_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input ordered_people_by_last_name_stream_cursor_value_input {
  affiliations: String
  author_ids: _int4
  event_id: Int
  first_name: String
  last_name: String
  name: String
  poster_author_ids: _int4
  presenting_at_least_one: Boolean
  role: _text
  session_chair_ids: _int4
  symposium_chair_ids: _int4
  symposium_discussant_ids: _int4
}

"""aggregate sum on columns"""
type ordered_people_by_last_name_sum_fields {
   event_id: Int
}

"""aggregate var_pop on columns"""
type ordered_people_by_last_name_var_pop_fields {
   event_id: Float
}

"""aggregate var_samp on columns"""
type ordered_people_by_last_name_var_samp_fields {
   event_id: Float
}

"""aggregate variance on columns"""
type ordered_people_by_last_name_variance_fields {
   event_id: Float
}

"""
columns and relationships of "ordered_poster_authors"
"""
type ordered_poster_authors {
   author_ids: _int4
   event_id: Int
   first_name: String
   last_name: String
   name: String
   presenting_at_least_one: Boolean
}

"""
aggregated selection of "ordered_poster_authors"
"""
type ordered_poster_authors_aggregate {
   aggregate: ordered_poster_authors_aggregate_fields
   nodes: [ordered_poster_authors! ]! 
}

"""
aggregate fields of "ordered_poster_authors"
"""
type ordered_poster_authors_aggregate_fields {
   avg: ordered_poster_authors_avg_fields
   count(columns: [ordered_poster_authors_select_column! ], distinct: Boolean): Int! 
   max: ordered_poster_authors_max_fields
   min: ordered_poster_authors_min_fields
   stddev: ordered_poster_authors_stddev_fields
   stddev_pop: ordered_poster_authors_stddev_pop_fields
   stddev_samp: ordered_poster_authors_stddev_samp_fields
   sum: ordered_poster_authors_sum_fields
   var_pop: ordered_poster_authors_var_pop_fields
   var_samp: ordered_poster_authors_var_samp_fields
   variance: ordered_poster_authors_variance_fields
}

"""aggregate avg on columns"""
type ordered_poster_authors_avg_fields {
   event_id: Float
}

"""
Boolean expression to filter rows from the table "ordered_poster_authors". All fields are combined with a logical 'AND'.
"""
input ordered_poster_authors_bool_exp {
  _and: [ordered_poster_authors_bool_exp! ]
  _not: ordered_poster_authors_bool_exp
  _or: [ordered_poster_authors_bool_exp! ]
  author_ids: _int4_comparison_exp
  event_id: Int_comparison_exp
  first_name: String_comparison_exp
  last_name: String_comparison_exp
  name: String_comparison_exp
  presenting_at_least_one: Boolean_comparison_exp
}

"""aggregate max on columns"""
type ordered_poster_authors_max_fields {
   event_id: Int
   first_name: String
   last_name: String
   name: String
}

"""aggregate min on columns"""
type ordered_poster_authors_min_fields {
   event_id: Int
   first_name: String
   last_name: String
   name: String
}

"""Ordering options when selecting data from "ordered_poster_authors"."""
input ordered_poster_authors_order_by {
  author_ids: order_by
  event_id: order_by
  first_name: order_by
  last_name: order_by
  name: order_by
  presenting_at_least_one: order_by
}

"""
select columns of table "ordered_poster_authors"
"""
enum ordered_poster_authors_select_column {
  """column name"""
author_ids
  """column name"""
event_id
  """column name"""
first_name
  """column name"""
last_name
  """column name"""
name
  """column name"""
presenting_at_least_one
}

"""aggregate stddev on columns"""
type ordered_poster_authors_stddev_fields {
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type ordered_poster_authors_stddev_pop_fields {
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type ordered_poster_authors_stddev_samp_fields {
   event_id: Float
}

"""
Streaming cursor of the table "ordered_poster_authors"
"""
input ordered_poster_authors_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: ordered_poster_authors_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input ordered_poster_authors_stream_cursor_value_input {
  author_ids: _int4
  event_id: Int
  first_name: String
  last_name: String
  name: String
  presenting_at_least_one: Boolean
}

"""aggregate sum on columns"""
type ordered_poster_authors_sum_fields {
   event_id: Int
}

"""aggregate var_pop on columns"""
type ordered_poster_authors_var_pop_fields {
   event_id: Float
}

"""aggregate var_samp on columns"""
type ordered_poster_authors_var_samp_fields {
   event_id: Float
}

"""aggregate variance on columns"""
type ordered_poster_authors_variance_fields {
   event_id: Float
}

"""
columns and relationships of "ordered_program_authors"
"""
type ordered_program_authors {
   author_ids: _int4
   event_id: Int
   first_name: String
   last_name: String
   name: String
   presenting_at_least_one: Boolean
}

"""
aggregated selection of "ordered_program_authors"
"""
type ordered_program_authors_aggregate {
   aggregate: ordered_program_authors_aggregate_fields
   nodes: [ordered_program_authors! ]! 
}

"""
aggregate fields of "ordered_program_authors"
"""
type ordered_program_authors_aggregate_fields {
   avg: ordered_program_authors_avg_fields
   count(columns: [ordered_program_authors_select_column! ], distinct: Boolean): Int! 
   max: ordered_program_authors_max_fields
   min: ordered_program_authors_min_fields
   stddev: ordered_program_authors_stddev_fields
   stddev_pop: ordered_program_authors_stddev_pop_fields
   stddev_samp: ordered_program_authors_stddev_samp_fields
   sum: ordered_program_authors_sum_fields
   var_pop: ordered_program_authors_var_pop_fields
   var_samp: ordered_program_authors_var_samp_fields
   variance: ordered_program_authors_variance_fields
}

"""aggregate avg on columns"""
type ordered_program_authors_avg_fields {
   event_id: Float
}

"""
Boolean expression to filter rows from the table "ordered_program_authors". All fields are combined with a logical 'AND'.
"""
input ordered_program_authors_bool_exp {
  _and: [ordered_program_authors_bool_exp! ]
  _not: ordered_program_authors_bool_exp
  _or: [ordered_program_authors_bool_exp! ]
  author_ids: _int4_comparison_exp
  event_id: Int_comparison_exp
  first_name: String_comparison_exp
  last_name: String_comparison_exp
  name: String_comparison_exp
  presenting_at_least_one: Boolean_comparison_exp
}

"""aggregate max on columns"""
type ordered_program_authors_max_fields {
   event_id: Int
   first_name: String
   last_name: String
   name: String
}

"""aggregate min on columns"""
type ordered_program_authors_min_fields {
   event_id: Int
   first_name: String
   last_name: String
   name: String
}

"""Ordering options when selecting data from "ordered_program_authors"."""
input ordered_program_authors_order_by {
  author_ids: order_by
  event_id: order_by
  first_name: order_by
  last_name: order_by
  name: order_by
  presenting_at_least_one: order_by
}

"""
select columns of table "ordered_program_authors"
"""
enum ordered_program_authors_select_column {
  """column name"""
author_ids
  """column name"""
event_id
  """column name"""
first_name
  """column name"""
last_name
  """column name"""
name
  """column name"""
presenting_at_least_one
}

"""aggregate stddev on columns"""
type ordered_program_authors_stddev_fields {
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type ordered_program_authors_stddev_pop_fields {
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type ordered_program_authors_stddev_samp_fields {
   event_id: Float
}

"""
Streaming cursor of the table "ordered_program_authors"
"""
input ordered_program_authors_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: ordered_program_authors_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input ordered_program_authors_stream_cursor_value_input {
  author_ids: _int4
  event_id: Int
  first_name: String
  last_name: String
  name: String
  presenting_at_least_one: Boolean
}

"""aggregate sum on columns"""
type ordered_program_authors_sum_fields {
   event_id: Int
}

"""aggregate var_pop on columns"""
type ordered_program_authors_var_pop_fields {
   event_id: Float
}

"""aggregate var_samp on columns"""
type ordered_program_authors_var_samp_fields {
   event_id: Float
}

"""aggregate variance on columns"""
type ordered_program_authors_variance_fields {
   event_id: Float
}

"""
columns and relationships of "ordered_program_chairs"
"""
type ordered_program_chairs {
   chair_ids: _int4
   event_id: Int
   first_name: String
   last_name: String
   name: String
   title: String
}

"""
aggregated selection of "ordered_program_chairs"
"""
type ordered_program_chairs_aggregate {
   aggregate: ordered_program_chairs_aggregate_fields
   nodes: [ordered_program_chairs! ]! 
}

"""
aggregate fields of "ordered_program_chairs"
"""
type ordered_program_chairs_aggregate_fields {
   avg: ordered_program_chairs_avg_fields
   count(columns: [ordered_program_chairs_select_column! ], distinct: Boolean): Int! 
   max: ordered_program_chairs_max_fields
   min: ordered_program_chairs_min_fields
   stddev: ordered_program_chairs_stddev_fields
   stddev_pop: ordered_program_chairs_stddev_pop_fields
   stddev_samp: ordered_program_chairs_stddev_samp_fields
   sum: ordered_program_chairs_sum_fields
   var_pop: ordered_program_chairs_var_pop_fields
   var_samp: ordered_program_chairs_var_samp_fields
   variance: ordered_program_chairs_variance_fields
}

"""aggregate avg on columns"""
type ordered_program_chairs_avg_fields {
   event_id: Float
}

"""
Boolean expression to filter rows from the table "ordered_program_chairs". All fields are combined with a logical 'AND'.
"""
input ordered_program_chairs_bool_exp {
  _and: [ordered_program_chairs_bool_exp! ]
  _not: ordered_program_chairs_bool_exp
  _or: [ordered_program_chairs_bool_exp! ]
  chair_ids: _int4_comparison_exp
  event_id: Int_comparison_exp
  first_name: String_comparison_exp
  last_name: String_comparison_exp
  name: String_comparison_exp
  title: String_comparison_exp
}

"""aggregate max on columns"""
type ordered_program_chairs_max_fields {
   event_id: Int
   first_name: String
   last_name: String
   name: String
   title: String
}

"""aggregate min on columns"""
type ordered_program_chairs_min_fields {
   event_id: Int
   first_name: String
   last_name: String
   name: String
   title: String
}

"""Ordering options when selecting data from "ordered_program_chairs"."""
input ordered_program_chairs_order_by {
  chair_ids: order_by
  event_id: order_by
  first_name: order_by
  last_name: order_by
  name: order_by
  title: order_by
}

"""
select columns of table "ordered_program_chairs"
"""
enum ordered_program_chairs_select_column {
  """column name"""
chair_ids
  """column name"""
event_id
  """column name"""
first_name
  """column name"""
last_name
  """column name"""
name
  """column name"""
title
}

"""aggregate stddev on columns"""
type ordered_program_chairs_stddev_fields {
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type ordered_program_chairs_stddev_pop_fields {
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type ordered_program_chairs_stddev_samp_fields {
   event_id: Float
}

"""
Streaming cursor of the table "ordered_program_chairs"
"""
input ordered_program_chairs_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: ordered_program_chairs_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input ordered_program_chairs_stream_cursor_value_input {
  chair_ids: _int4
  event_id: Int
  first_name: String
  last_name: String
  name: String
  title: String
}

"""aggregate sum on columns"""
type ordered_program_chairs_sum_fields {
   event_id: Int
}

"""aggregate var_pop on columns"""
type ordered_program_chairs_var_pop_fields {
   event_id: Float
}

"""aggregate var_samp on columns"""
type ordered_program_chairs_var_samp_fields {
   event_id: Float
}

"""aggregate variance on columns"""
type ordered_program_chairs_variance_fields {
   event_id: Float
}

"""
columns and relationships of "ordered_program_submissions_by_category"
"""
type ordered_program_submissions_by_category {
   category: String
   event_id: Int
   submission_ids: _int4
}

"""
aggregated selection of "ordered_program_submissions_by_category"
"""
type ordered_program_submissions_by_category_aggregate {
   aggregate: ordered_program_submissions_by_category_aggregate_fields
   nodes: [ordered_program_submissions_by_category! ]! 
}

"""
aggregate fields of "ordered_program_submissions_by_category"
"""
type ordered_program_submissions_by_category_aggregate_fields {
   avg: ordered_program_submissions_by_category_avg_fields
   count(columns: [ordered_program_submissions_by_category_select_column! ], distinct: Boolean): Int! 
   max: ordered_program_submissions_by_category_max_fields
   min: ordered_program_submissions_by_category_min_fields
   stddev: ordered_program_submissions_by_category_stddev_fields
   stddev_pop: ordered_program_submissions_by_category_stddev_pop_fields
   stddev_samp: ordered_program_submissions_by_category_stddev_samp_fields
   sum: ordered_program_submissions_by_category_sum_fields
   var_pop: ordered_program_submissions_by_category_var_pop_fields
   var_samp: ordered_program_submissions_by_category_var_samp_fields
   variance: ordered_program_submissions_by_category_variance_fields
}

"""aggregate avg on columns"""
type ordered_program_submissions_by_category_avg_fields {
   event_id: Float
}

"""
Boolean expression to filter rows from the table "ordered_program_submissions_by_category". All fields are combined with a logical 'AND'.
"""
input ordered_program_submissions_by_category_bool_exp {
  _and: [ordered_program_submissions_by_category_bool_exp! ]
  _not: ordered_program_submissions_by_category_bool_exp
  _or: [ordered_program_submissions_by_category_bool_exp! ]
  category: String_comparison_exp
  event_id: Int_comparison_exp
  submission_ids: _int4_comparison_exp
}

"""aggregate max on columns"""
type ordered_program_submissions_by_category_max_fields {
   category: String
   event_id: Int
}

"""aggregate min on columns"""
type ordered_program_submissions_by_category_min_fields {
   category: String
   event_id: Int
}

"""
Ordering options when selecting data from "ordered_program_submissions_by_category".
"""
input ordered_program_submissions_by_category_order_by {
  category: order_by
  event_id: order_by
  submission_ids: order_by
}

"""
select columns of table "ordered_program_submissions_by_category"
"""
enum ordered_program_submissions_by_category_select_column {
  """column name"""
category
  """column name"""
event_id
  """column name"""
submission_ids
}

"""aggregate stddev on columns"""
type ordered_program_submissions_by_category_stddev_fields {
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type ordered_program_submissions_by_category_stddev_pop_fields {
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type ordered_program_submissions_by_category_stddev_samp_fields {
   event_id: Float
}

"""
Streaming cursor of the table "ordered_program_submissions_by_category"
"""
input ordered_program_submissions_by_category_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: ordered_program_submissions_by_category_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input ordered_program_submissions_by_category_stream_cursor_value_input {
  category: String
  event_id: Int
  submission_ids: _int4
}

"""aggregate sum on columns"""
type ordered_program_submissions_by_category_sum_fields {
   event_id: Int
}

"""aggregate var_pop on columns"""
type ordered_program_submissions_by_category_var_pop_fields {
   event_id: Float
}

"""aggregate var_samp on columns"""
type ordered_program_submissions_by_category_var_samp_fields {
   event_id: Float
}

"""aggregate variance on columns"""
type ordered_program_submissions_by_category_variance_fields {
   event_id: Float
}

"""
columns and relationships of "ordered_program_submissions_by_title"
"""
type ordered_program_submissions_by_title {
   accepted_submission: Boolean
  """An array relationship"""
 bookmarks("""distinct select on columns"""
distinct_on: [virtual_conference_submission_bookmarks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_submission_bookmarks_order_by! ], """filter the rows returned"""
where: virtual_conference_submission_bookmarks_bool_exp): [virtual_conference_submission_bookmarks! ]! 
  """An aggregate relationship"""
 bookmarks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_submission_bookmarks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_submission_bookmarks_order_by! ], """filter the rows returned"""
where: virtual_conference_submission_bookmarks_bool_exp): virtual_conference_submission_bookmarks_aggregate! 
   event_id: Int
   in_poster_gallery: Boolean
   in_titles_listing: Boolean
   program_code: String
   serial_number: Int
  """An object relationship"""
 submission: submissions
   submission_id: Int
   title: String
   title_no_tags: String
  """An array relationship"""
 views("""distinct select on columns"""
distinct_on: [virtual_conference_submission_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_submission_views_order_by! ], """filter the rows returned"""
where: virtual_conference_submission_views_bool_exp): [virtual_conference_submission_views! ]! 
  """An aggregate relationship"""
 views_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_submission_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_submission_views_order_by! ], """filter the rows returned"""
where: virtual_conference_submission_views_bool_exp): virtual_conference_submission_views_aggregate! 
}

"""
aggregated selection of "ordered_program_submissions_by_title"
"""
type ordered_program_submissions_by_title_aggregate {
   aggregate: ordered_program_submissions_by_title_aggregate_fields
   nodes: [ordered_program_submissions_by_title! ]! 
}

input ordered_program_submissions_by_title_aggregate_bool_exp {
  bool_and: ordered_program_submissions_by_title_aggregate_bool_exp_bool_and
  bool_or: ordered_program_submissions_by_title_aggregate_bool_exp_bool_or
  count: ordered_program_submissions_by_title_aggregate_bool_exp_count
}

input ordered_program_submissions_by_title_aggregate_bool_exp_bool_and {
  arguments: ordered_program_submissions_by_title_select_column_ordered_program_submissions_by_title_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: ordered_program_submissions_by_title_bool_exp
  predicate: Boolean_comparison_exp! 
}

input ordered_program_submissions_by_title_aggregate_bool_exp_bool_or {
  arguments: ordered_program_submissions_by_title_select_column_ordered_program_submissions_by_title_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: ordered_program_submissions_by_title_bool_exp
  predicate: Boolean_comparison_exp! 
}

input ordered_program_submissions_by_title_aggregate_bool_exp_count {
  arguments: [ordered_program_submissions_by_title_select_column! ]
  distinct: Boolean
  filter: ordered_program_submissions_by_title_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "ordered_program_submissions_by_title"
"""
type ordered_program_submissions_by_title_aggregate_fields {
   avg: ordered_program_submissions_by_title_avg_fields
   count(columns: [ordered_program_submissions_by_title_select_column! ], distinct: Boolean): Int! 
   max: ordered_program_submissions_by_title_max_fields
   min: ordered_program_submissions_by_title_min_fields
   stddev: ordered_program_submissions_by_title_stddev_fields
   stddev_pop: ordered_program_submissions_by_title_stddev_pop_fields
   stddev_samp: ordered_program_submissions_by_title_stddev_samp_fields
   sum: ordered_program_submissions_by_title_sum_fields
   var_pop: ordered_program_submissions_by_title_var_pop_fields
   var_samp: ordered_program_submissions_by_title_var_samp_fields
   variance: ordered_program_submissions_by_title_variance_fields
}

"""
order by aggregate values of table "ordered_program_submissions_by_title"
"""
input ordered_program_submissions_by_title_aggregate_order_by {
  avg: ordered_program_submissions_by_title_avg_order_by
  count: order_by
  max: ordered_program_submissions_by_title_max_order_by
  min: ordered_program_submissions_by_title_min_order_by
  stddev: ordered_program_submissions_by_title_stddev_order_by
  stddev_pop: ordered_program_submissions_by_title_stddev_pop_order_by
  stddev_samp: ordered_program_submissions_by_title_stddev_samp_order_by
  sum: ordered_program_submissions_by_title_sum_order_by
  var_pop: ordered_program_submissions_by_title_var_pop_order_by
  var_samp: ordered_program_submissions_by_title_var_samp_order_by
  variance: ordered_program_submissions_by_title_variance_order_by
}

"""
input type for inserting array relation for remote table "ordered_program_submissions_by_title"
"""
input ordered_program_submissions_by_title_arr_rel_insert_input {
  data: [ordered_program_submissions_by_title_insert_input! ]! 
}

"""aggregate avg on columns"""
type ordered_program_submissions_by_title_avg_fields {
   event_id: Float
   serial_number: Float
   submission_id: Float
}

"""
order by avg() on columns of table "ordered_program_submissions_by_title"
"""
input ordered_program_submissions_by_title_avg_order_by {
  event_id: order_by
  serial_number: order_by
  submission_id: order_by
}

"""
Boolean expression to filter rows from the table "ordered_program_submissions_by_title". All fields are combined with a logical 'AND'.
"""
input ordered_program_submissions_by_title_bool_exp {
  _and: [ordered_program_submissions_by_title_bool_exp! ]
  _not: ordered_program_submissions_by_title_bool_exp
  _or: [ordered_program_submissions_by_title_bool_exp! ]
  accepted_submission: Boolean_comparison_exp
  bookmarks: virtual_conference_submission_bookmarks_bool_exp
  bookmarks_aggregate: virtual_conference_submission_bookmarks_aggregate_bool_exp
  event_id: Int_comparison_exp
  in_poster_gallery: Boolean_comparison_exp
  in_titles_listing: Boolean_comparison_exp
  program_code: String_comparison_exp
  serial_number: Int_comparison_exp
  submission: submissions_bool_exp
  submission_id: Int_comparison_exp
  title: String_comparison_exp
  title_no_tags: String_comparison_exp
  views: virtual_conference_submission_views_bool_exp
  views_aggregate: virtual_conference_submission_views_aggregate_bool_exp
}

"""
input type for inserting data into table "ordered_program_submissions_by_title"
"""
input ordered_program_submissions_by_title_insert_input {
  accepted_submission: Boolean
  bookmarks: virtual_conference_submission_bookmarks_arr_rel_insert_input
  event_id: Int
  in_poster_gallery: Boolean
  in_titles_listing: Boolean
  program_code: String
  serial_number: Int
  submission: submissions_obj_rel_insert_input
  submission_id: Int
  title: String
  title_no_tags: String
  views: virtual_conference_submission_views_arr_rel_insert_input
}

"""aggregate max on columns"""
type ordered_program_submissions_by_title_max_fields {
   event_id: Int
   program_code: String
   serial_number: Int
   submission_id: Int
   title: String
   title_no_tags: String
}

"""
order by max() on columns of table "ordered_program_submissions_by_title"
"""
input ordered_program_submissions_by_title_max_order_by {
  event_id: order_by
  program_code: order_by
  serial_number: order_by
  submission_id: order_by
  title: order_by
  title_no_tags: order_by
}

"""aggregate min on columns"""
type ordered_program_submissions_by_title_min_fields {
   event_id: Int
   program_code: String
   serial_number: Int
   submission_id: Int
   title: String
   title_no_tags: String
}

"""
order by min() on columns of table "ordered_program_submissions_by_title"
"""
input ordered_program_submissions_by_title_min_order_by {
  event_id: order_by
  program_code: order_by
  serial_number: order_by
  submission_id: order_by
  title: order_by
  title_no_tags: order_by
}

"""
Ordering options when selecting data from "ordered_program_submissions_by_title".
"""
input ordered_program_submissions_by_title_order_by {
  accepted_submission: order_by
  bookmarks_aggregate: virtual_conference_submission_bookmarks_aggregate_order_by
  event_id: order_by
  in_poster_gallery: order_by
  in_titles_listing: order_by
  program_code: order_by
  serial_number: order_by
  submission: submissions_order_by
  submission_id: order_by
  title: order_by
  title_no_tags: order_by
  views_aggregate: virtual_conference_submission_views_aggregate_order_by
}

"""
select columns of table "ordered_program_submissions_by_title"
"""
enum ordered_program_submissions_by_title_select_column {
  """column name"""
accepted_submission
  """column name"""
event_id
  """column name"""
in_poster_gallery
  """column name"""
in_titles_listing
  """column name"""
program_code
  """column name"""
serial_number
  """column name"""
submission_id
  """column name"""
title
  """column name"""
title_no_tags
}

"""
select "ordered_program_submissions_by_title_aggregate_bool_exp_bool_and_arguments_columns" columns of table "ordered_program_submissions_by_title"
"""
enum ordered_program_submissions_by_title_select_column_ordered_program_submissions_by_title_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
accepted_submission
  """column name"""
in_poster_gallery
  """column name"""
in_titles_listing
}

"""
select "ordered_program_submissions_by_title_aggregate_bool_exp_bool_or_arguments_columns" columns of table "ordered_program_submissions_by_title"
"""
enum ordered_program_submissions_by_title_select_column_ordered_program_submissions_by_title_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
accepted_submission
  """column name"""
in_poster_gallery
  """column name"""
in_titles_listing
}

"""aggregate stddev on columns"""
type ordered_program_submissions_by_title_stddev_fields {
   event_id: Float
   serial_number: Float
   submission_id: Float
}

"""
order by stddev() on columns of table "ordered_program_submissions_by_title"
"""
input ordered_program_submissions_by_title_stddev_order_by {
  event_id: order_by
  serial_number: order_by
  submission_id: order_by
}

"""aggregate stddev_pop on columns"""
type ordered_program_submissions_by_title_stddev_pop_fields {
   event_id: Float
   serial_number: Float
   submission_id: Float
}

"""
order by stddev_pop() on columns of table "ordered_program_submissions_by_title"
"""
input ordered_program_submissions_by_title_stddev_pop_order_by {
  event_id: order_by
  serial_number: order_by
  submission_id: order_by
}

"""aggregate stddev_samp on columns"""
type ordered_program_submissions_by_title_stddev_samp_fields {
   event_id: Float
   serial_number: Float
   submission_id: Float
}

"""
order by stddev_samp() on columns of table "ordered_program_submissions_by_title"
"""
input ordered_program_submissions_by_title_stddev_samp_order_by {
  event_id: order_by
  serial_number: order_by
  submission_id: order_by
}

"""
Streaming cursor of the table "ordered_program_submissions_by_title"
"""
input ordered_program_submissions_by_title_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: ordered_program_submissions_by_title_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input ordered_program_submissions_by_title_stream_cursor_value_input {
  accepted_submission: Boolean
  event_id: Int
  in_poster_gallery: Boolean
  in_titles_listing: Boolean
  program_code: String
  serial_number: Int
  submission_id: Int
  title: String
  title_no_tags: String
}

"""aggregate sum on columns"""
type ordered_program_submissions_by_title_sum_fields {
   event_id: Int
   serial_number: Int
   submission_id: Int
}

"""
order by sum() on columns of table "ordered_program_submissions_by_title"
"""
input ordered_program_submissions_by_title_sum_order_by {
  event_id: order_by
  serial_number: order_by
  submission_id: order_by
}

"""aggregate var_pop on columns"""
type ordered_program_submissions_by_title_var_pop_fields {
   event_id: Float
   serial_number: Float
   submission_id: Float
}

"""
order by var_pop() on columns of table "ordered_program_submissions_by_title"
"""
input ordered_program_submissions_by_title_var_pop_order_by {
  event_id: order_by
  serial_number: order_by
  submission_id: order_by
}

"""aggregate var_samp on columns"""
type ordered_program_submissions_by_title_var_samp_fields {
   event_id: Float
   serial_number: Float
   submission_id: Float
}

"""
order by var_samp() on columns of table "ordered_program_submissions_by_title"
"""
input ordered_program_submissions_by_title_var_samp_order_by {
  event_id: order_by
  serial_number: order_by
  submission_id: order_by
}

"""aggregate variance on columns"""
type ordered_program_submissions_by_title_variance_fields {
   event_id: Float
   serial_number: Float
   submission_id: Float
}

"""
order by variance() on columns of table "ordered_program_submissions_by_title"
"""
input ordered_program_submissions_by_title_variance_order_by {
  event_id: order_by
  serial_number: order_by
  submission_id: order_by
}

"""
columns and relationships of "ordered_program_symposia_by_title"
"""
type ordered_program_symposia_by_title {
   event_id: Int
   program_code: String
   serial_number: Int
  """An object relationship"""
 symposium: symposia
   symposium_id: Int
   title: String
   title_no_tags: String
  """An array relationship"""
 views("""distinct select on columns"""
distinct_on: [virtual_conference_symposium_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_symposium_views_order_by! ], """filter the rows returned"""
where: virtual_conference_symposium_views_bool_exp): [virtual_conference_symposium_views! ]! 
  """An aggregate relationship"""
 views_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_symposium_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_symposium_views_order_by! ], """filter the rows returned"""
where: virtual_conference_symposium_views_bool_exp): virtual_conference_symposium_views_aggregate! 
}

"""
aggregated selection of "ordered_program_symposia_by_title"
"""
type ordered_program_symposia_by_title_aggregate {
   aggregate: ordered_program_symposia_by_title_aggregate_fields
   nodes: [ordered_program_symposia_by_title! ]! 
}

input ordered_program_symposia_by_title_aggregate_bool_exp {
  count: ordered_program_symposia_by_title_aggregate_bool_exp_count
}

input ordered_program_symposia_by_title_aggregate_bool_exp_count {
  arguments: [ordered_program_symposia_by_title_select_column! ]
  distinct: Boolean
  filter: ordered_program_symposia_by_title_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "ordered_program_symposia_by_title"
"""
type ordered_program_symposia_by_title_aggregate_fields {
   avg: ordered_program_symposia_by_title_avg_fields
   count(columns: [ordered_program_symposia_by_title_select_column! ], distinct: Boolean): Int! 
   max: ordered_program_symposia_by_title_max_fields
   min: ordered_program_symposia_by_title_min_fields
   stddev: ordered_program_symposia_by_title_stddev_fields
   stddev_pop: ordered_program_symposia_by_title_stddev_pop_fields
   stddev_samp: ordered_program_symposia_by_title_stddev_samp_fields
   sum: ordered_program_symposia_by_title_sum_fields
   var_pop: ordered_program_symposia_by_title_var_pop_fields
   var_samp: ordered_program_symposia_by_title_var_samp_fields
   variance: ordered_program_symposia_by_title_variance_fields
}

"""
order by aggregate values of table "ordered_program_symposia_by_title"
"""
input ordered_program_symposia_by_title_aggregate_order_by {
  avg: ordered_program_symposia_by_title_avg_order_by
  count: order_by
  max: ordered_program_symposia_by_title_max_order_by
  min: ordered_program_symposia_by_title_min_order_by
  stddev: ordered_program_symposia_by_title_stddev_order_by
  stddev_pop: ordered_program_symposia_by_title_stddev_pop_order_by
  stddev_samp: ordered_program_symposia_by_title_stddev_samp_order_by
  sum: ordered_program_symposia_by_title_sum_order_by
  var_pop: ordered_program_symposia_by_title_var_pop_order_by
  var_samp: ordered_program_symposia_by_title_var_samp_order_by
  variance: ordered_program_symposia_by_title_variance_order_by
}

"""
input type for inserting array relation for remote table "ordered_program_symposia_by_title"
"""
input ordered_program_symposia_by_title_arr_rel_insert_input {
  data: [ordered_program_symposia_by_title_insert_input! ]! 
}

"""aggregate avg on columns"""
type ordered_program_symposia_by_title_avg_fields {
   event_id: Float
   serial_number: Float
   symposium_id: Float
}

"""
order by avg() on columns of table "ordered_program_symposia_by_title"
"""
input ordered_program_symposia_by_title_avg_order_by {
  event_id: order_by
  serial_number: order_by
  symposium_id: order_by
}

"""
Boolean expression to filter rows from the table "ordered_program_symposia_by_title". All fields are combined with a logical 'AND'.
"""
input ordered_program_symposia_by_title_bool_exp {
  _and: [ordered_program_symposia_by_title_bool_exp! ]
  _not: ordered_program_symposia_by_title_bool_exp
  _or: [ordered_program_symposia_by_title_bool_exp! ]
  event_id: Int_comparison_exp
  program_code: String_comparison_exp
  serial_number: Int_comparison_exp
  symposium: symposia_bool_exp
  symposium_id: Int_comparison_exp
  title: String_comparison_exp
  title_no_tags: String_comparison_exp
  views: virtual_conference_symposium_views_bool_exp
  views_aggregate: virtual_conference_symposium_views_aggregate_bool_exp
}

"""
input type for inserting data into table "ordered_program_symposia_by_title"
"""
input ordered_program_symposia_by_title_insert_input {
  event_id: Int
  program_code: String
  serial_number: Int
  symposium: symposia_obj_rel_insert_input
  symposium_id: Int
  title: String
  title_no_tags: String
  views: virtual_conference_symposium_views_arr_rel_insert_input
}

"""aggregate max on columns"""
type ordered_program_symposia_by_title_max_fields {
   event_id: Int
   program_code: String
   serial_number: Int
   symposium_id: Int
   title: String
   title_no_tags: String
}

"""
order by max() on columns of table "ordered_program_symposia_by_title"
"""
input ordered_program_symposia_by_title_max_order_by {
  event_id: order_by
  program_code: order_by
  serial_number: order_by
  symposium_id: order_by
  title: order_by
  title_no_tags: order_by
}

"""aggregate min on columns"""
type ordered_program_symposia_by_title_min_fields {
   event_id: Int
   program_code: String
   serial_number: Int
   symposium_id: Int
   title: String
   title_no_tags: String
}

"""
order by min() on columns of table "ordered_program_symposia_by_title"
"""
input ordered_program_symposia_by_title_min_order_by {
  event_id: order_by
  program_code: order_by
  serial_number: order_by
  symposium_id: order_by
  title: order_by
  title_no_tags: order_by
}

"""
Ordering options when selecting data from "ordered_program_symposia_by_title".
"""
input ordered_program_symposia_by_title_order_by {
  event_id: order_by
  program_code: order_by
  serial_number: order_by
  symposium: symposia_order_by
  symposium_id: order_by
  title: order_by
  title_no_tags: order_by
  views_aggregate: virtual_conference_symposium_views_aggregate_order_by
}

"""
select columns of table "ordered_program_symposia_by_title"
"""
enum ordered_program_symposia_by_title_select_column {
  """column name"""
event_id
  """column name"""
program_code
  """column name"""
serial_number
  """column name"""
symposium_id
  """column name"""
title
  """column name"""
title_no_tags
}

"""aggregate stddev on columns"""
type ordered_program_symposia_by_title_stddev_fields {
   event_id: Float
   serial_number: Float
   symposium_id: Float
}

"""
order by stddev() on columns of table "ordered_program_symposia_by_title"
"""
input ordered_program_symposia_by_title_stddev_order_by {
  event_id: order_by
  serial_number: order_by
  symposium_id: order_by
}

"""aggregate stddev_pop on columns"""
type ordered_program_symposia_by_title_stddev_pop_fields {
   event_id: Float
   serial_number: Float
   symposium_id: Float
}

"""
order by stddev_pop() on columns of table "ordered_program_symposia_by_title"
"""
input ordered_program_symposia_by_title_stddev_pop_order_by {
  event_id: order_by
  serial_number: order_by
  symposium_id: order_by
}

"""aggregate stddev_samp on columns"""
type ordered_program_symposia_by_title_stddev_samp_fields {
   event_id: Float
   serial_number: Float
   symposium_id: Float
}

"""
order by stddev_samp() on columns of table "ordered_program_symposia_by_title"
"""
input ordered_program_symposia_by_title_stddev_samp_order_by {
  event_id: order_by
  serial_number: order_by
  symposium_id: order_by
}

"""
Streaming cursor of the table "ordered_program_symposia_by_title"
"""
input ordered_program_symposia_by_title_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: ordered_program_symposia_by_title_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input ordered_program_symposia_by_title_stream_cursor_value_input {
  event_id: Int
  program_code: String
  serial_number: Int
  symposium_id: Int
  title: String
  title_no_tags: String
}

"""aggregate sum on columns"""
type ordered_program_symposia_by_title_sum_fields {
   event_id: Int
   serial_number: Int
   symposium_id: Int
}

"""
order by sum() on columns of table "ordered_program_symposia_by_title"
"""
input ordered_program_symposia_by_title_sum_order_by {
  event_id: order_by
  serial_number: order_by
  symposium_id: order_by
}

"""aggregate var_pop on columns"""
type ordered_program_symposia_by_title_var_pop_fields {
   event_id: Float
   serial_number: Float
   symposium_id: Float
}

"""
order by var_pop() on columns of table "ordered_program_symposia_by_title"
"""
input ordered_program_symposia_by_title_var_pop_order_by {
  event_id: order_by
  serial_number: order_by
  symposium_id: order_by
}

"""aggregate var_samp on columns"""
type ordered_program_symposia_by_title_var_samp_fields {
   event_id: Float
   serial_number: Float
   symposium_id: Float
}

"""
order by var_samp() on columns of table "ordered_program_symposia_by_title"
"""
input ordered_program_symposia_by_title_var_samp_order_by {
  event_id: order_by
  serial_number: order_by
  symposium_id: order_by
}

"""aggregate variance on columns"""
type ordered_program_symposia_by_title_variance_fields {
   event_id: Float
   serial_number: Float
   symposium_id: Float
}

"""
order by variance() on columns of table "ordered_program_symposia_by_title"
"""
input ordered_program_symposia_by_title_variance_order_by {
  event_id: order_by
  serial_number: order_by
  symposium_id: order_by
}

"""
columns and relationships of "ordered_program_symposium_people"
"""
type ordered_program_symposium_people {
   event_id: Int
   first_name: String
   last_name: String
   name: String
   role: symposium_role
   symposium_ids: _int4
}

"""
aggregated selection of "ordered_program_symposium_people"
"""
type ordered_program_symposium_people_aggregate {
   aggregate: ordered_program_symposium_people_aggregate_fields
   nodes: [ordered_program_symposium_people! ]! 
}

"""
aggregate fields of "ordered_program_symposium_people"
"""
type ordered_program_symposium_people_aggregate_fields {
   avg: ordered_program_symposium_people_avg_fields
   count(columns: [ordered_program_symposium_people_select_column! ], distinct: Boolean): Int! 
   max: ordered_program_symposium_people_max_fields
   min: ordered_program_symposium_people_min_fields
   stddev: ordered_program_symposium_people_stddev_fields
   stddev_pop: ordered_program_symposium_people_stddev_pop_fields
   stddev_samp: ordered_program_symposium_people_stddev_samp_fields
   sum: ordered_program_symposium_people_sum_fields
   var_pop: ordered_program_symposium_people_var_pop_fields
   var_samp: ordered_program_symposium_people_var_samp_fields
   variance: ordered_program_symposium_people_variance_fields
}

"""aggregate avg on columns"""
type ordered_program_symposium_people_avg_fields {
   event_id: Float
}

"""
Boolean expression to filter rows from the table "ordered_program_symposium_people". All fields are combined with a logical 'AND'.
"""
input ordered_program_symposium_people_bool_exp {
  _and: [ordered_program_symposium_people_bool_exp! ]
  _not: ordered_program_symposium_people_bool_exp
  _or: [ordered_program_symposium_people_bool_exp! ]
  event_id: Int_comparison_exp
  first_name: String_comparison_exp
  last_name: String_comparison_exp
  name: String_comparison_exp
  role: symposium_role_comparison_exp
  symposium_ids: _int4_comparison_exp
}

"""aggregate max on columns"""
type ordered_program_symposium_people_max_fields {
   event_id: Int
   first_name: String
   last_name: String
   name: String
   role: symposium_role
}

"""aggregate min on columns"""
type ordered_program_symposium_people_min_fields {
   event_id: Int
   first_name: String
   last_name: String
   name: String
   role: symposium_role
}

"""
Ordering options when selecting data from "ordered_program_symposium_people".
"""
input ordered_program_symposium_people_order_by {
  event_id: order_by
  first_name: order_by
  last_name: order_by
  name: order_by
  role: order_by
  symposium_ids: order_by
}

"""
select columns of table "ordered_program_symposium_people"
"""
enum ordered_program_symposium_people_select_column {
  """column name"""
event_id
  """column name"""
first_name
  """column name"""
last_name
  """column name"""
name
  """column name"""
role
  """column name"""
symposium_ids
}

"""aggregate stddev on columns"""
type ordered_program_symposium_people_stddev_fields {
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type ordered_program_symposium_people_stddev_pop_fields {
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type ordered_program_symposium_people_stddev_samp_fields {
   event_id: Float
}

"""
Streaming cursor of the table "ordered_program_symposium_people"
"""
input ordered_program_symposium_people_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: ordered_program_symposium_people_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input ordered_program_symposium_people_stream_cursor_value_input {
  event_id: Int
  first_name: String
  last_name: String
  name: String
  role: symposium_role
  symposium_ids: _int4
}

"""aggregate sum on columns"""
type ordered_program_symposium_people_sum_fields {
   event_id: Int
}

"""aggregate var_pop on columns"""
type ordered_program_symposium_people_var_pop_fields {
   event_id: Float
}

"""aggregate var_samp on columns"""
type ordered_program_symposium_people_var_samp_fields {
   event_id: Float
}

"""aggregate variance on columns"""
type ordered_program_symposium_people_variance_fields {
   event_id: Float
}

"""
columns and relationships of "ordered_session_chairs"
"""
type ordered_session_chairs {
   chair_id: Int
   event_id: Int
   first_name: String
   last_name: String
   name: String
   session_ids: _int4
   title: String
}

"""
aggregated selection of "ordered_session_chairs"
"""
type ordered_session_chairs_aggregate {
   aggregate: ordered_session_chairs_aggregate_fields
   nodes: [ordered_session_chairs! ]! 
}

"""
aggregate fields of "ordered_session_chairs"
"""
type ordered_session_chairs_aggregate_fields {
   avg: ordered_session_chairs_avg_fields
   count(columns: [ordered_session_chairs_select_column! ], distinct: Boolean): Int! 
   max: ordered_session_chairs_max_fields
   min: ordered_session_chairs_min_fields
   stddev: ordered_session_chairs_stddev_fields
   stddev_pop: ordered_session_chairs_stddev_pop_fields
   stddev_samp: ordered_session_chairs_stddev_samp_fields
   sum: ordered_session_chairs_sum_fields
   var_pop: ordered_session_chairs_var_pop_fields
   var_samp: ordered_session_chairs_var_samp_fields
   variance: ordered_session_chairs_variance_fields
}

"""aggregate avg on columns"""
type ordered_session_chairs_avg_fields {
   chair_id: Float
   event_id: Float
}

"""
Boolean expression to filter rows from the table "ordered_session_chairs". All fields are combined with a logical 'AND'.
"""
input ordered_session_chairs_bool_exp {
  _and: [ordered_session_chairs_bool_exp! ]
  _not: ordered_session_chairs_bool_exp
  _or: [ordered_session_chairs_bool_exp! ]
  chair_id: Int_comparison_exp
  event_id: Int_comparison_exp
  first_name: String_comparison_exp
  last_name: String_comparison_exp
  name: String_comparison_exp
  session_ids: _int4_comparison_exp
  title: String_comparison_exp
}

"""aggregate max on columns"""
type ordered_session_chairs_max_fields {
   chair_id: Int
   event_id: Int
   first_name: String
   last_name: String
   name: String
   title: String
}

"""aggregate min on columns"""
type ordered_session_chairs_min_fields {
   chair_id: Int
   event_id: Int
   first_name: String
   last_name: String
   name: String
   title: String
}

"""Ordering options when selecting data from "ordered_session_chairs"."""
input ordered_session_chairs_order_by {
  chair_id: order_by
  event_id: order_by
  first_name: order_by
  last_name: order_by
  name: order_by
  session_ids: order_by
  title: order_by
}

"""
select columns of table "ordered_session_chairs"
"""
enum ordered_session_chairs_select_column {
  """column name"""
chair_id
  """column name"""
event_id
  """column name"""
first_name
  """column name"""
last_name
  """column name"""
name
  """column name"""
session_ids
  """column name"""
title
}

"""aggregate stddev on columns"""
type ordered_session_chairs_stddev_fields {
   chair_id: Float
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type ordered_session_chairs_stddev_pop_fields {
   chair_id: Float
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type ordered_session_chairs_stddev_samp_fields {
   chair_id: Float
   event_id: Float
}

"""
Streaming cursor of the table "ordered_session_chairs"
"""
input ordered_session_chairs_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: ordered_session_chairs_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input ordered_session_chairs_stream_cursor_value_input {
  chair_id: Int
  event_id: Int
  first_name: String
  last_name: String
  name: String
  session_ids: _int4
  title: String
}

"""aggregate sum on columns"""
type ordered_session_chairs_sum_fields {
   chair_id: Int
   event_id: Int
}

"""aggregate var_pop on columns"""
type ordered_session_chairs_var_pop_fields {
   chair_id: Float
   event_id: Float
}

"""aggregate var_samp on columns"""
type ordered_session_chairs_var_samp_fields {
   chair_id: Float
   event_id: Float
}

"""aggregate variance on columns"""
type ordered_session_chairs_variance_fields {
   chair_id: Float
   event_id: Float
}

scalar payment_methods 

"""
Boolean expression to compare columns of type "payment_methods". All fields are combined with logical 'AND'.
"""
input payment_methods_comparison_exp {
  _eq: payment_methods
  _gt: payment_methods
  _gte: payment_methods
  _in: [payment_methods! ]
  _is_null: Boolean
  _lt: payment_methods
  _lte: payment_methods
  _neq: payment_methods
  _nin: [payment_methods! ]
}

scalar paypal_payment_currency 

"""
Boolean expression to compare columns of type "paypal_payment_currency". All fields are combined with logical 'AND'.
"""
input paypal_payment_currency_comparison_exp {
  _eq: paypal_payment_currency
  _gt: paypal_payment_currency
  _gte: paypal_payment_currency
  _in: [paypal_payment_currency! ]
  _is_null: Boolean
  _lt: paypal_payment_currency
  _lte: paypal_payment_currency
  _neq: paypal_payment_currency
  _nin: [paypal_payment_currency! ]
}

"""
columns and relationships of "presenter_emails"
"""
type presenter_emails {
   author_id: Int
   email: String
   event_id: Int
   submission_id: Int
}

"""
aggregated selection of "presenter_emails"
"""
type presenter_emails_aggregate {
   aggregate: presenter_emails_aggregate_fields
   nodes: [presenter_emails! ]! 
}

input presenter_emails_aggregate_bool_exp {
  count: presenter_emails_aggregate_bool_exp_count
}

input presenter_emails_aggregate_bool_exp_count {
  arguments: [presenter_emails_select_column! ]
  distinct: Boolean
  filter: presenter_emails_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "presenter_emails"
"""
type presenter_emails_aggregate_fields {
   avg: presenter_emails_avg_fields
   count(columns: [presenter_emails_select_column! ], distinct: Boolean): Int! 
   max: presenter_emails_max_fields
   min: presenter_emails_min_fields
   stddev: presenter_emails_stddev_fields
   stddev_pop: presenter_emails_stddev_pop_fields
   stddev_samp: presenter_emails_stddev_samp_fields
   sum: presenter_emails_sum_fields
   var_pop: presenter_emails_var_pop_fields
   var_samp: presenter_emails_var_samp_fields
   variance: presenter_emails_variance_fields
}

"""
order by aggregate values of table "presenter_emails"
"""
input presenter_emails_aggregate_order_by {
  avg: presenter_emails_avg_order_by
  count: order_by
  max: presenter_emails_max_order_by
  min: presenter_emails_min_order_by
  stddev: presenter_emails_stddev_order_by
  stddev_pop: presenter_emails_stddev_pop_order_by
  stddev_samp: presenter_emails_stddev_samp_order_by
  sum: presenter_emails_sum_order_by
  var_pop: presenter_emails_var_pop_order_by
  var_samp: presenter_emails_var_samp_order_by
  variance: presenter_emails_variance_order_by
}

"""
input type for inserting array relation for remote table "presenter_emails"
"""
input presenter_emails_arr_rel_insert_input {
  data: [presenter_emails_insert_input! ]! 
}

"""aggregate avg on columns"""
type presenter_emails_avg_fields {
   author_id: Float
   event_id: Float
   submission_id: Float
}

"""
order by avg() on columns of table "presenter_emails"
"""
input presenter_emails_avg_order_by {
  author_id: order_by
  event_id: order_by
  submission_id: order_by
}

"""
Boolean expression to filter rows from the table "presenter_emails". All fields are combined with a logical 'AND'.
"""
input presenter_emails_bool_exp {
  _and: [presenter_emails_bool_exp! ]
  _not: presenter_emails_bool_exp
  _or: [presenter_emails_bool_exp! ]
  author_id: Int_comparison_exp
  email: String_comparison_exp
  event_id: Int_comparison_exp
  submission_id: Int_comparison_exp
}

"""
input type for inserting data into table "presenter_emails"
"""
input presenter_emails_insert_input {
  author_id: Int
  email: String
  event_id: Int
  submission_id: Int
}

"""aggregate max on columns"""
type presenter_emails_max_fields {
   author_id: Int
   email: String
   event_id: Int
   submission_id: Int
}

"""
order by max() on columns of table "presenter_emails"
"""
input presenter_emails_max_order_by {
  author_id: order_by
  email: order_by
  event_id: order_by
  submission_id: order_by
}

"""aggregate min on columns"""
type presenter_emails_min_fields {
   author_id: Int
   email: String
   event_id: Int
   submission_id: Int
}

"""
order by min() on columns of table "presenter_emails"
"""
input presenter_emails_min_order_by {
  author_id: order_by
  email: order_by
  event_id: order_by
  submission_id: order_by
}

"""Ordering options when selecting data from "presenter_emails"."""
input presenter_emails_order_by {
  author_id: order_by
  email: order_by
  event_id: order_by
  submission_id: order_by
}

"""
select columns of table "presenter_emails"
"""
enum presenter_emails_select_column {
  """column name"""
author_id
  """column name"""
email
  """column name"""
event_id
  """column name"""
submission_id
}

"""aggregate stddev on columns"""
type presenter_emails_stddev_fields {
   author_id: Float
   event_id: Float
   submission_id: Float
}

"""
order by stddev() on columns of table "presenter_emails"
"""
input presenter_emails_stddev_order_by {
  author_id: order_by
  event_id: order_by
  submission_id: order_by
}

"""aggregate stddev_pop on columns"""
type presenter_emails_stddev_pop_fields {
   author_id: Float
   event_id: Float
   submission_id: Float
}

"""
order by stddev_pop() on columns of table "presenter_emails"
"""
input presenter_emails_stddev_pop_order_by {
  author_id: order_by
  event_id: order_by
  submission_id: order_by
}

"""aggregate stddev_samp on columns"""
type presenter_emails_stddev_samp_fields {
   author_id: Float
   event_id: Float
   submission_id: Float
}

"""
order by stddev_samp() on columns of table "presenter_emails"
"""
input presenter_emails_stddev_samp_order_by {
  author_id: order_by
  event_id: order_by
  submission_id: order_by
}

"""
Streaming cursor of the table "presenter_emails"
"""
input presenter_emails_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: presenter_emails_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input presenter_emails_stream_cursor_value_input {
  author_id: Int
  email: String
  event_id: Int
  submission_id: Int
}

"""aggregate sum on columns"""
type presenter_emails_sum_fields {
   author_id: Int
   event_id: Int
   submission_id: Int
}

"""
order by sum() on columns of table "presenter_emails"
"""
input presenter_emails_sum_order_by {
  author_id: order_by
  event_id: order_by
  submission_id: order_by
}

"""aggregate var_pop on columns"""
type presenter_emails_var_pop_fields {
   author_id: Float
   event_id: Float
   submission_id: Float
}

"""
order by var_pop() on columns of table "presenter_emails"
"""
input presenter_emails_var_pop_order_by {
  author_id: order_by
  event_id: order_by
  submission_id: order_by
}

"""aggregate var_samp on columns"""
type presenter_emails_var_samp_fields {
   author_id: Float
   event_id: Float
   submission_id: Float
}

"""
order by var_samp() on columns of table "presenter_emails"
"""
input presenter_emails_var_samp_order_by {
  author_id: order_by
  event_id: order_by
  submission_id: order_by
}

"""aggregate variance on columns"""
type presenter_emails_variance_fields {
   author_id: Float
   event_id: Float
   submission_id: Float
}

"""
order by variance() on columns of table "presenter_emails"
"""
input presenter_emails_variance_order_by {
  author_id: order_by
  event_id: order_by
  submission_id: order_by
}

scalar price_package 

"""
Boolean expression to compare columns of type "price_package". All fields are combined with logical 'AND'.
"""
input price_package_comparison_exp {
  _eq: price_package
  _gt: price_package
  _gte: price_package
  _in: [price_package! ]
  _is_null: Boolean
  _lt: price_package
  _lte: price_package
  _neq: price_package
  _nin: [price_package! ]
}

"""
columns and relationships of "program_attachments"
"""
type program_attachments {
   description: String
  """An object relationship"""
 event: events! 
   event_id: Int! 
   id: Int! 
   program_attachment_serial: Int! 
   program_code: String
   title: String! 
}

"""
aggregated selection of "program_attachments"
"""
type program_attachments_aggregate {
   aggregate: program_attachments_aggregate_fields
   nodes: [program_attachments! ]! 
}

"""
aggregate fields of "program_attachments"
"""
type program_attachments_aggregate_fields {
   avg: program_attachments_avg_fields
   count(columns: [program_attachments_select_column! ], distinct: Boolean): Int! 
   max: program_attachments_max_fields
   min: program_attachments_min_fields
   stddev: program_attachments_stddev_fields
   stddev_pop: program_attachments_stddev_pop_fields
   stddev_samp: program_attachments_stddev_samp_fields
   sum: program_attachments_sum_fields
   var_pop: program_attachments_var_pop_fields
   var_samp: program_attachments_var_samp_fields
   variance: program_attachments_variance_fields
}

"""aggregate avg on columns"""
type program_attachments_avg_fields {
   event_id: Float
   id: Float
   program_attachment_serial: Float
}

"""
Boolean expression to filter rows from the table "program_attachments". All fields are combined with a logical 'AND'.
"""
input program_attachments_bool_exp {
  _and: [program_attachments_bool_exp! ]
  _not: program_attachments_bool_exp
  _or: [program_attachments_bool_exp! ]
  description: String_comparison_exp
  event: events_bool_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  program_attachment_serial: Int_comparison_exp
  program_code: String_comparison_exp
  title: String_comparison_exp
}

"""
unique or primary key constraints on table "program_attachments"
"""
enum program_attachments_constraint {
  """
  unique or primary key constraint on columns "program_attachment_id"
  """
program_attachments_pkey
}

"""
input type for incrementing numeric columns in table "program_attachments"
"""
input program_attachments_inc_input {
  event_id: Int
  id: Int
  program_attachment_serial: Int
}

"""
input type for inserting data into table "program_attachments"
"""
input program_attachments_insert_input {
  description: String
  event: events_obj_rel_insert_input
  event_id: Int! 
  id: Int
  program_attachment_serial: Int! 
  program_code: String
  title: String! 
}

"""aggregate max on columns"""
type program_attachments_max_fields {
   description: String
   event_id: Int
   id: Int
   program_attachment_serial: Int
   program_code: String
   title: String
}

"""aggregate min on columns"""
type program_attachments_min_fields {
   description: String
   event_id: Int
   id: Int
   program_attachment_serial: Int
   program_code: String
   title: String
}

"""
response of any mutation on the table "program_attachments"
"""
type program_attachments_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_attachments! ]! 
}

"""
input type for inserting object relation for remote table "program_attachments"
"""
input program_attachments_obj_rel_insert_input {
  data: program_attachments_insert_input! 
  """upsert condition"""
on_conflict: program_attachments_on_conflict
}

"""
on_conflict condition type for table "program_attachments"
"""
input program_attachments_on_conflict {
  constraint: program_attachments_constraint! 
  update_columns: [program_attachments_update_column! ]! 
  where: program_attachments_bool_exp
}

"""Ordering options when selecting data from "program_attachments"."""
input program_attachments_order_by {
  description: order_by
  event: events_order_by
  event_id: order_by
  id: order_by
  program_attachment_serial: order_by
  program_code: order_by
  title: order_by
}

"""primary key columns input for table: program_attachments"""
input program_attachments_pk_columns_input {
  id: Int! 
}

"""
select columns of table "program_attachments"
"""
enum program_attachments_select_column {
  """column name"""
description
  """column name"""
event_id
  """column name"""
id
  """column name"""
program_attachment_serial
  """column name"""
program_code
  """column name"""
title
}

"""
input type for updating data in table "program_attachments"
"""
input program_attachments_set_input {
  description: String
  event_id: Int
  id: Int
  program_attachment_serial: Int
  program_code: String
  title: String
}

"""aggregate stddev on columns"""
type program_attachments_stddev_fields {
   event_id: Float
   id: Float
   program_attachment_serial: Float
}

"""aggregate stddev_pop on columns"""
type program_attachments_stddev_pop_fields {
   event_id: Float
   id: Float
   program_attachment_serial: Float
}

"""aggregate stddev_samp on columns"""
type program_attachments_stddev_samp_fields {
   event_id: Float
   id: Float
   program_attachment_serial: Float
}

"""
Streaming cursor of the table "program_attachments"
"""
input program_attachments_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_attachments_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_attachments_stream_cursor_value_input {
  description: String
  event_id: Int
  id: Int
  program_attachment_serial: Int
  program_code: String
  title: String
}

"""aggregate sum on columns"""
type program_attachments_sum_fields {
   event_id: Int
   id: Int
   program_attachment_serial: Int
}

"""
update columns of table "program_attachments"
"""
enum program_attachments_update_column {
  """column name"""
description
  """column name"""
event_id
  """column name"""
id
  """column name"""
program_attachment_serial
  """column name"""
program_code
  """column name"""
title
}

input program_attachments_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_attachments_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_attachments_set_input
  where: program_attachments_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_attachments_var_pop_fields {
   event_id: Float
   id: Float
   program_attachment_serial: Float
}

"""aggregate var_samp on columns"""
type program_attachments_var_samp_fields {
   event_id: Float
   id: Float
   program_attachment_serial: Float
}

"""aggregate variance on columns"""
type program_attachments_variance_fields {
   event_id: Float
   id: Float
   program_attachment_serial: Float
}

"""
columns and relationships of "program_chairs"
"""
type program_chairs {
  """An object relationship"""
 event: events! 
   event_id: Int! 
   first_name: String! 
   last_name: String! 
   name: String! 
   program_chair_id: Int! 
   title: String! 
}

"""
aggregated selection of "program_chairs"
"""
type program_chairs_aggregate {
   aggregate: program_chairs_aggregate_fields
   nodes: [program_chairs! ]! 
}

"""
aggregate fields of "program_chairs"
"""
type program_chairs_aggregate_fields {
   avg: program_chairs_avg_fields
   count(columns: [program_chairs_select_column! ], distinct: Boolean): Int! 
   max: program_chairs_max_fields
   min: program_chairs_min_fields
   stddev: program_chairs_stddev_fields
   stddev_pop: program_chairs_stddev_pop_fields
   stddev_samp: program_chairs_stddev_samp_fields
   sum: program_chairs_sum_fields
   var_pop: program_chairs_var_pop_fields
   var_samp: program_chairs_var_samp_fields
   variance: program_chairs_variance_fields
}

"""aggregate avg on columns"""
type program_chairs_avg_fields {
   event_id: Float
   program_chair_id: Float
}

"""
Boolean expression to filter rows from the table "program_chairs". All fields are combined with a logical 'AND'.
"""
input program_chairs_bool_exp {
  _and: [program_chairs_bool_exp! ]
  _not: program_chairs_bool_exp
  _or: [program_chairs_bool_exp! ]
  event: events_bool_exp
  event_id: Int_comparison_exp
  first_name: String_comparison_exp
  last_name: String_comparison_exp
  name: String_comparison_exp
  program_chair_id: Int_comparison_exp
  title: String_comparison_exp
}

"""
unique or primary key constraints on table "program_chairs"
"""
enum program_chairs_constraint {
  """
  unique or primary key constraint on columns "program_chair_id"
  """
program_chairs_pkey
}

"""
input type for incrementing numeric columns in table "program_chairs"
"""
input program_chairs_inc_input {
  event_id: Int
  program_chair_id: Int
}

"""
input type for inserting data into table "program_chairs"
"""
input program_chairs_insert_input {
  event: events_obj_rel_insert_input
  event_id: Int! 
  first_name: String! 
  last_name: String! 
  name: String! 
  program_chair_id: Int! 
  title: String! 
}

"""aggregate max on columns"""
type program_chairs_max_fields {
   event_id: Int
   first_name: String
   last_name: String
   name: String
   program_chair_id: Int
   title: String
}

"""aggregate min on columns"""
type program_chairs_min_fields {
   event_id: Int
   first_name: String
   last_name: String
   name: String
   program_chair_id: Int
   title: String
}

"""
response of any mutation on the table "program_chairs"
"""
type program_chairs_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_chairs! ]! 
}

"""
on_conflict condition type for table "program_chairs"
"""
input program_chairs_on_conflict {
  constraint: program_chairs_constraint! 
  update_columns: [program_chairs_update_column! ]! 
  where: program_chairs_bool_exp
}

"""Ordering options when selecting data from "program_chairs"."""
input program_chairs_order_by {
  event: events_order_by
  event_id: order_by
  first_name: order_by
  last_name: order_by
  name: order_by
  program_chair_id: order_by
  title: order_by
}

"""primary key columns input for table: program_chairs"""
input program_chairs_pk_columns_input {
  program_chair_id: Int! 
}

"""
select columns of table "program_chairs"
"""
enum program_chairs_select_column {
  """column name"""
event_id
  """column name"""
first_name
  """column name"""
last_name
  """column name"""
name
  """column name"""
program_chair_id
  """column name"""
title
}

"""
input type for updating data in table "program_chairs"
"""
input program_chairs_set_input {
  event_id: Int
  first_name: String
  last_name: String
  name: String
  program_chair_id: Int
  title: String
}

"""aggregate stddev on columns"""
type program_chairs_stddev_fields {
   event_id: Float
   program_chair_id: Float
}

"""aggregate stddev_pop on columns"""
type program_chairs_stddev_pop_fields {
   event_id: Float
   program_chair_id: Float
}

"""aggregate stddev_samp on columns"""
type program_chairs_stddev_samp_fields {
   event_id: Float
   program_chair_id: Float
}

"""
Streaming cursor of the table "program_chairs"
"""
input program_chairs_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_chairs_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_chairs_stream_cursor_value_input {
  event_id: Int
  first_name: String
  last_name: String
  name: String
  program_chair_id: Int
  title: String
}

"""aggregate sum on columns"""
type program_chairs_sum_fields {
   event_id: Int
   program_chair_id: Int
}

"""
update columns of table "program_chairs"
"""
enum program_chairs_update_column {
  """column name"""
event_id
  """column name"""
first_name
  """column name"""
last_name
  """column name"""
name
  """column name"""
program_chair_id
  """column name"""
title
}

input program_chairs_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_chairs_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_chairs_set_input
  where: program_chairs_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_chairs_var_pop_fields {
   event_id: Float
   program_chair_id: Float
}

"""aggregate var_samp on columns"""
type program_chairs_var_samp_fields {
   event_id: Float
   program_chair_id: Float
}

"""aggregate variance on columns"""
type program_chairs_variance_fields {
   event_id: Float
   program_chair_id: Float
}

"""
columns and relationships of "program_columns"
"""
type program_columns {
   display_order: Int! 
  """An object relationship"""
 event: events! 
   event_id: Int! 
   id: Int! 
   name: String! 
}

"""
aggregated selection of "program_columns"
"""
type program_columns_aggregate {
   aggregate: program_columns_aggregate_fields
   nodes: [program_columns! ]! 
}

"""
aggregate fields of "program_columns"
"""
type program_columns_aggregate_fields {
   avg: program_columns_avg_fields
   count(columns: [program_columns_select_column! ], distinct: Boolean): Int! 
   max: program_columns_max_fields
   min: program_columns_min_fields
   stddev: program_columns_stddev_fields
   stddev_pop: program_columns_stddev_pop_fields
   stddev_samp: program_columns_stddev_samp_fields
   sum: program_columns_sum_fields
   var_pop: program_columns_var_pop_fields
   var_samp: program_columns_var_samp_fields
   variance: program_columns_variance_fields
}

"""aggregate avg on columns"""
type program_columns_avg_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""
Boolean expression to filter rows from the table "program_columns". All fields are combined with a logical 'AND'.
"""
input program_columns_bool_exp {
  _and: [program_columns_bool_exp! ]
  _not: program_columns_bool_exp
  _or: [program_columns_bool_exp! ]
  display_order: Int_comparison_exp
  event: events_bool_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
}

"""
unique or primary key constraints on table "program_columns"
"""
enum program_columns_constraint {
  """
  unique or primary key constraint on columns "program_column_id"
  """
program_columns_pkey
}

"""
input type for incrementing numeric columns in table "program_columns"
"""
input program_columns_inc_input {
  display_order: Int
  event_id: Int
  id: Int
}

"""
input type for inserting data into table "program_columns"
"""
input program_columns_insert_input {
  display_order: Int! 
  event: events_obj_rel_insert_input
  event_id: Int! 
  id: Int
  name: String! 
}

"""aggregate max on columns"""
type program_columns_max_fields {
   display_order: Int
   event_id: Int
   id: Int
   name: String
}

"""aggregate min on columns"""
type program_columns_min_fields {
   display_order: Int
   event_id: Int
   id: Int
   name: String
}

"""
response of any mutation on the table "program_columns"
"""
type program_columns_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_columns! ]! 
}

"""
input type for inserting object relation for remote table "program_columns"
"""
input program_columns_obj_rel_insert_input {
  data: program_columns_insert_input! 
  """upsert condition"""
on_conflict: program_columns_on_conflict
}

"""
on_conflict condition type for table "program_columns"
"""
input program_columns_on_conflict {
  constraint: program_columns_constraint! 
  update_columns: [program_columns_update_column! ]! 
  where: program_columns_bool_exp
}

"""Ordering options when selecting data from "program_columns"."""
input program_columns_order_by {
  display_order: order_by
  event: events_order_by
  event_id: order_by
  id: order_by
  name: order_by
}

"""primary key columns input for table: program_columns"""
input program_columns_pk_columns_input {
  id: Int! 
}

"""
select columns of table "program_columns"
"""
enum program_columns_select_column {
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
id
  """column name"""
name
}

"""
input type for updating data in table "program_columns"
"""
input program_columns_set_input {
  display_order: Int
  event_id: Int
  id: Int
  name: String
}

"""aggregate stddev on columns"""
type program_columns_stddev_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""aggregate stddev_pop on columns"""
type program_columns_stddev_pop_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""aggregate stddev_samp on columns"""
type program_columns_stddev_samp_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""
Streaming cursor of the table "program_columns"
"""
input program_columns_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_columns_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_columns_stream_cursor_value_input {
  display_order: Int
  event_id: Int
  id: Int
  name: String
}

"""aggregate sum on columns"""
type program_columns_sum_fields {
   display_order: Int
   event_id: Int
   id: Int
}

"""
update columns of table "program_columns"
"""
enum program_columns_update_column {
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
id
  """column name"""
name
}

input program_columns_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_columns_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_columns_set_input
  where: program_columns_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_columns_var_pop_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""aggregate var_samp on columns"""
type program_columns_var_samp_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""aggregate variance on columns"""
type program_columns_variance_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""
columns and relationships of "program_columns_zoom_users"
"""
type program_columns_zoom_users {
   event_id: Int! 
   id: Int! 
   program_column_id: Int! 
   zoom_user_id: String! 
}

"""
aggregated selection of "program_columns_zoom_users"
"""
type program_columns_zoom_users_aggregate {
   aggregate: program_columns_zoom_users_aggregate_fields
   nodes: [program_columns_zoom_users! ]! 
}

"""
aggregate fields of "program_columns_zoom_users"
"""
type program_columns_zoom_users_aggregate_fields {
   avg: program_columns_zoom_users_avg_fields
   count(columns: [program_columns_zoom_users_select_column! ], distinct: Boolean): Int! 
   max: program_columns_zoom_users_max_fields
   min: program_columns_zoom_users_min_fields
   stddev: program_columns_zoom_users_stddev_fields
   stddev_pop: program_columns_zoom_users_stddev_pop_fields
   stddev_samp: program_columns_zoom_users_stddev_samp_fields
   sum: program_columns_zoom_users_sum_fields
   var_pop: program_columns_zoom_users_var_pop_fields
   var_samp: program_columns_zoom_users_var_samp_fields
   variance: program_columns_zoom_users_variance_fields
}

"""aggregate avg on columns"""
type program_columns_zoom_users_avg_fields {
   event_id: Float
   id: Float
   program_column_id: Float
}

"""
Boolean expression to filter rows from the table "program_columns_zoom_users". All fields are combined with a logical 'AND'.
"""
input program_columns_zoom_users_bool_exp {
  _and: [program_columns_zoom_users_bool_exp! ]
  _not: program_columns_zoom_users_bool_exp
  _or: [program_columns_zoom_users_bool_exp! ]
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  program_column_id: Int_comparison_exp
  zoom_user_id: String_comparison_exp
}

"""
unique or primary key constraints on table "program_columns_zoom_users"
"""
enum program_columns_zoom_users_constraint {
  """
  unique or primary key constraint on columns "id"
  """
program_columns_zoom_users_pkey
  """
  unique or primary key constraint on columns "event_id", "zoom_user_id"
  """
program_columns_zoom_users_zoom_user_id_event_id_key
}

"""
input type for incrementing numeric columns in table "program_columns_zoom_users"
"""
input program_columns_zoom_users_inc_input {
  event_id: Int
  id: Int
  program_column_id: Int
}

"""
input type for inserting data into table "program_columns_zoom_users"
"""
input program_columns_zoom_users_insert_input {
  event_id: Int! 
  id: Int! 
  program_column_id: Int! 
  zoom_user_id: String! 
}

"""aggregate max on columns"""
type program_columns_zoom_users_max_fields {
   event_id: Int
   id: Int
   program_column_id: Int
   zoom_user_id: String
}

"""aggregate min on columns"""
type program_columns_zoom_users_min_fields {
   event_id: Int
   id: Int
   program_column_id: Int
   zoom_user_id: String
}

"""
response of any mutation on the table "program_columns_zoom_users"
"""
type program_columns_zoom_users_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_columns_zoom_users! ]! 
}

"""
on_conflict condition type for table "program_columns_zoom_users"
"""
input program_columns_zoom_users_on_conflict {
  constraint: program_columns_zoom_users_constraint! 
  update_columns: [program_columns_zoom_users_update_column! ]! 
  where: program_columns_zoom_users_bool_exp
}

"""
Ordering options when selecting data from "program_columns_zoom_users".
"""
input program_columns_zoom_users_order_by {
  event_id: order_by
  id: order_by
  program_column_id: order_by
  zoom_user_id: order_by
}

"""primary key columns input for table: program_columns_zoom_users"""
input program_columns_zoom_users_pk_columns_input {
  id: Int! 
}

"""
select columns of table "program_columns_zoom_users"
"""
enum program_columns_zoom_users_select_column {
  """column name"""
event_id
  """column name"""
id
  """column name"""
program_column_id
  """column name"""
zoom_user_id
}

"""
input type for updating data in table "program_columns_zoom_users"
"""
input program_columns_zoom_users_set_input {
  event_id: Int
  id: Int
  program_column_id: Int
  zoom_user_id: String
}

"""aggregate stddev on columns"""
type program_columns_zoom_users_stddev_fields {
   event_id: Float
   id: Float
   program_column_id: Float
}

"""aggregate stddev_pop on columns"""
type program_columns_zoom_users_stddev_pop_fields {
   event_id: Float
   id: Float
   program_column_id: Float
}

"""aggregate stddev_samp on columns"""
type program_columns_zoom_users_stddev_samp_fields {
   event_id: Float
   id: Float
   program_column_id: Float
}

"""
Streaming cursor of the table "program_columns_zoom_users"
"""
input program_columns_zoom_users_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_columns_zoom_users_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_columns_zoom_users_stream_cursor_value_input {
  event_id: Int
  id: Int
  program_column_id: Int
  zoom_user_id: String
}

"""aggregate sum on columns"""
type program_columns_zoom_users_sum_fields {
   event_id: Int
   id: Int
   program_column_id: Int
}

"""
update columns of table "program_columns_zoom_users"
"""
enum program_columns_zoom_users_update_column {
  """column name"""
event_id
  """column name"""
id
  """column name"""
program_column_id
  """column name"""
zoom_user_id
}

input program_columns_zoom_users_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_columns_zoom_users_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_columns_zoom_users_set_input
  where: program_columns_zoom_users_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_columns_zoom_users_var_pop_fields {
   event_id: Float
   id: Float
   program_column_id: Float
}

"""aggregate var_samp on columns"""
type program_columns_zoom_users_var_samp_fields {
   event_id: Float
   id: Float
   program_column_id: Float
}

"""aggregate variance on columns"""
type program_columns_zoom_users_variance_fields {
   event_id: Float
   id: Float
   program_column_id: Float
}

scalar program_comment_status 

"""
Boolean expression to compare columns of type "program_comment_status". All fields are combined with logical 'AND'.
"""
input program_comment_status_comparison_exp {
  _eq: program_comment_status
  _gt: program_comment_status
  _gte: program_comment_status
  _in: [program_comment_status! ]
  _is_null: Boolean
  _lt: program_comment_status
  _lte: program_comment_status
  _neq: program_comment_status
  _nin: [program_comment_status! ]
}

"""
columns and relationships of "program_dates"
"""
type program_dates {
  """An object relationship"""
 event: events! 
   event_id: Int! 
   id: Int! 
   program_date: date! 
  """An array relationship"""
 program_sessions("""distinct select on columns"""
distinct_on: [program_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_order_by! ], """filter the rows returned"""
where: program_sessions_bool_exp): [program_sessions! ]! 
  """An aggregate relationship"""
 program_sessions_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_order_by! ], """filter the rows returned"""
where: program_sessions_bool_exp): program_sessions_aggregate! 
}

"""
aggregated selection of "program_dates"
"""
type program_dates_aggregate {
   aggregate: program_dates_aggregate_fields
   nodes: [program_dates! ]! 
}

input program_dates_aggregate_bool_exp {
  count: program_dates_aggregate_bool_exp_count
}

input program_dates_aggregate_bool_exp_count {
  arguments: [program_dates_select_column! ]
  distinct: Boolean
  filter: program_dates_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "program_dates"
"""
type program_dates_aggregate_fields {
   avg: program_dates_avg_fields
   count(columns: [program_dates_select_column! ], distinct: Boolean): Int! 
   max: program_dates_max_fields
   min: program_dates_min_fields
   stddev: program_dates_stddev_fields
   stddev_pop: program_dates_stddev_pop_fields
   stddev_samp: program_dates_stddev_samp_fields
   sum: program_dates_sum_fields
   var_pop: program_dates_var_pop_fields
   var_samp: program_dates_var_samp_fields
   variance: program_dates_variance_fields
}

"""
order by aggregate values of table "program_dates"
"""
input program_dates_aggregate_order_by {
  avg: program_dates_avg_order_by
  count: order_by
  max: program_dates_max_order_by
  min: program_dates_min_order_by
  stddev: program_dates_stddev_order_by
  stddev_pop: program_dates_stddev_pop_order_by
  stddev_samp: program_dates_stddev_samp_order_by
  sum: program_dates_sum_order_by
  var_pop: program_dates_var_pop_order_by
  var_samp: program_dates_var_samp_order_by
  variance: program_dates_variance_order_by
}

"""
input type for inserting array relation for remote table "program_dates"
"""
input program_dates_arr_rel_insert_input {
  data: [program_dates_insert_input! ]! 
  """upsert condition"""
on_conflict: program_dates_on_conflict
}

"""aggregate avg on columns"""
type program_dates_avg_fields {
   event_id: Float
   id: Float
}

"""
order by avg() on columns of table "program_dates"
"""
input program_dates_avg_order_by {
  event_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "program_dates". All fields are combined with a logical 'AND'.
"""
input program_dates_bool_exp {
  _and: [program_dates_bool_exp! ]
  _not: program_dates_bool_exp
  _or: [program_dates_bool_exp! ]
  event: events_bool_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  program_date: date_comparison_exp
  program_sessions: program_sessions_bool_exp
  program_sessions_aggregate: program_sessions_aggregate_bool_exp
}

"""
unique or primary key constraints on table "program_dates"
"""
enum program_dates_constraint {
  """
  unique or primary key constraint on columns "program_date_id"
  """
program_dates_pkey
}

"""
input type for incrementing numeric columns in table "program_dates"
"""
input program_dates_inc_input {
  event_id: Int
  id: Int
}

"""
input type for inserting data into table "program_dates"
"""
input program_dates_insert_input {
  event: events_obj_rel_insert_input
  event_id: Int! 
  id: Int
  program_date: date! 
  program_sessions: program_sessions_arr_rel_insert_input
}

"""aggregate max on columns"""
type program_dates_max_fields {
   event_id: Int
   id: Int
   program_date: date
}

"""
order by max() on columns of table "program_dates"
"""
input program_dates_max_order_by {
  event_id: order_by
  id: order_by
  program_date: order_by
}

"""aggregate min on columns"""
type program_dates_min_fields {
   event_id: Int
   id: Int
   program_date: date
}

"""
order by min() on columns of table "program_dates"
"""
input program_dates_min_order_by {
  event_id: order_by
  id: order_by
  program_date: order_by
}

"""
response of any mutation on the table "program_dates"
"""
type program_dates_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_dates! ]! 
}

"""
input type for inserting object relation for remote table "program_dates"
"""
input program_dates_obj_rel_insert_input {
  data: program_dates_insert_input! 
  """upsert condition"""
on_conflict: program_dates_on_conflict
}

"""
on_conflict condition type for table "program_dates"
"""
input program_dates_on_conflict {
  constraint: program_dates_constraint! 
  update_columns: [program_dates_update_column! ]! 
  where: program_dates_bool_exp
}

"""Ordering options when selecting data from "program_dates"."""
input program_dates_order_by {
  event: events_order_by
  event_id: order_by
  id: order_by
  program_date: order_by
  program_sessions_aggregate: program_sessions_aggregate_order_by
}

"""primary key columns input for table: program_dates"""
input program_dates_pk_columns_input {
  id: Int! 
}

"""
select columns of table "program_dates"
"""
enum program_dates_select_column {
  """column name"""
event_id
  """column name"""
id
  """column name"""
program_date
}

"""
input type for updating data in table "program_dates"
"""
input program_dates_set_input {
  event_id: Int
  id: Int
  program_date: date
}

"""aggregate stddev on columns"""
type program_dates_stddev_fields {
   event_id: Float
   id: Float
}

"""
order by stddev() on columns of table "program_dates"
"""
input program_dates_stddev_order_by {
  event_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type program_dates_stddev_pop_fields {
   event_id: Float
   id: Float
}

"""
order by stddev_pop() on columns of table "program_dates"
"""
input program_dates_stddev_pop_order_by {
  event_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type program_dates_stddev_samp_fields {
   event_id: Float
   id: Float
}

"""
order by stddev_samp() on columns of table "program_dates"
"""
input program_dates_stddev_samp_order_by {
  event_id: order_by
  id: order_by
}

"""
Streaming cursor of the table "program_dates"
"""
input program_dates_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_dates_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_dates_stream_cursor_value_input {
  event_id: Int
  id: Int
  program_date: date
}

"""aggregate sum on columns"""
type program_dates_sum_fields {
   event_id: Int
   id: Int
}

"""
order by sum() on columns of table "program_dates"
"""
input program_dates_sum_order_by {
  event_id: order_by
  id: order_by
}

"""
update columns of table "program_dates"
"""
enum program_dates_update_column {
  """column name"""
event_id
  """column name"""
id
  """column name"""
program_date
}

input program_dates_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_dates_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_dates_set_input
  where: program_dates_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_dates_var_pop_fields {
   event_id: Float
   id: Float
}

"""
order by var_pop() on columns of table "program_dates"
"""
input program_dates_var_pop_order_by {
  event_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type program_dates_var_samp_fields {
   event_id: Float
   id: Float
}

"""
order by var_samp() on columns of table "program_dates"
"""
input program_dates_var_samp_order_by {
  event_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type program_dates_variance_fields {
   event_id: Float
   id: Float
}

"""
order by variance() on columns of table "program_dates"
"""
input program_dates_variance_order_by {
  event_id: order_by
  id: order_by
}

"""
columns and relationships of "program_downloads"
"""
type program_downloads {
   display_order: Int! 
   event_id: Int! 
   file_name: String! 
   link: String! 
   link_text: String! 
   program_download_id: Int! 
}

"""
aggregated selection of "program_downloads"
"""
type program_downloads_aggregate {
   aggregate: program_downloads_aggregate_fields
   nodes: [program_downloads! ]! 
}

"""
aggregate fields of "program_downloads"
"""
type program_downloads_aggregate_fields {
   avg: program_downloads_avg_fields
   count(columns: [program_downloads_select_column! ], distinct: Boolean): Int! 
   max: program_downloads_max_fields
   min: program_downloads_min_fields
   stddev: program_downloads_stddev_fields
   stddev_pop: program_downloads_stddev_pop_fields
   stddev_samp: program_downloads_stddev_samp_fields
   sum: program_downloads_sum_fields
   var_pop: program_downloads_var_pop_fields
   var_samp: program_downloads_var_samp_fields
   variance: program_downloads_variance_fields
}

"""aggregate avg on columns"""
type program_downloads_avg_fields {
   display_order: Float
   event_id: Float
   program_download_id: Float
}

"""
Boolean expression to filter rows from the table "program_downloads". All fields are combined with a logical 'AND'.
"""
input program_downloads_bool_exp {
  _and: [program_downloads_bool_exp! ]
  _not: program_downloads_bool_exp
  _or: [program_downloads_bool_exp! ]
  display_order: Int_comparison_exp
  event_id: Int_comparison_exp
  file_name: String_comparison_exp
  link: String_comparison_exp
  link_text: String_comparison_exp
  program_download_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "program_downloads"
"""
enum program_downloads_constraint {
  """
  unique or primary key constraint on columns "program_download_id"
  """
program_downloads_pkey
}

"""
input type for incrementing numeric columns in table "program_downloads"
"""
input program_downloads_inc_input {
  display_order: Int
  event_id: Int
  program_download_id: Int
}

"""
input type for inserting data into table "program_downloads"
"""
input program_downloads_insert_input {
  display_order: Int! 
  event_id: Int! 
  file_name: String! 
  link: String! 
  link_text: String! 
  program_download_id: Int! 
}

"""aggregate max on columns"""
type program_downloads_max_fields {
   display_order: Int
   event_id: Int
   file_name: String
   link: String
   link_text: String
   program_download_id: Int
}

"""aggregate min on columns"""
type program_downloads_min_fields {
   display_order: Int
   event_id: Int
   file_name: String
   link: String
   link_text: String
   program_download_id: Int
}

"""
response of any mutation on the table "program_downloads"
"""
type program_downloads_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_downloads! ]! 
}

"""
on_conflict condition type for table "program_downloads"
"""
input program_downloads_on_conflict {
  constraint: program_downloads_constraint! 
  update_columns: [program_downloads_update_column! ]! 
  where: program_downloads_bool_exp
}

"""Ordering options when selecting data from "program_downloads"."""
input program_downloads_order_by {
  display_order: order_by
  event_id: order_by
  file_name: order_by
  link: order_by
  link_text: order_by
  program_download_id: order_by
}

"""primary key columns input for table: program_downloads"""
input program_downloads_pk_columns_input {
  program_download_id: Int! 
}

"""
select columns of table "program_downloads"
"""
enum program_downloads_select_column {
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
file_name
  """column name"""
link
  """column name"""
link_text
  """column name"""
program_download_id
}

"""
input type for updating data in table "program_downloads"
"""
input program_downloads_set_input {
  display_order: Int
  event_id: Int
  file_name: String
  link: String
  link_text: String
  program_download_id: Int
}

"""aggregate stddev on columns"""
type program_downloads_stddev_fields {
   display_order: Float
   event_id: Float
   program_download_id: Float
}

"""aggregate stddev_pop on columns"""
type program_downloads_stddev_pop_fields {
   display_order: Float
   event_id: Float
   program_download_id: Float
}

"""aggregate stddev_samp on columns"""
type program_downloads_stddev_samp_fields {
   display_order: Float
   event_id: Float
   program_download_id: Float
}

"""
Streaming cursor of the table "program_downloads"
"""
input program_downloads_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_downloads_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_downloads_stream_cursor_value_input {
  display_order: Int
  event_id: Int
  file_name: String
  link: String
  link_text: String
  program_download_id: Int
}

"""aggregate sum on columns"""
type program_downloads_sum_fields {
   display_order: Int
   event_id: Int
   program_download_id: Int
}

"""
update columns of table "program_downloads"
"""
enum program_downloads_update_column {
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
file_name
  """column name"""
link
  """column name"""
link_text
  """column name"""
program_download_id
}

input program_downloads_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_downloads_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_downloads_set_input
  where: program_downloads_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_downloads_var_pop_fields {
   display_order: Float
   event_id: Float
   program_download_id: Float
}

"""aggregate var_samp on columns"""
type program_downloads_var_samp_fields {
   display_order: Float
   event_id: Float
   program_download_id: Float
}

"""aggregate variance on columns"""
type program_downloads_variance_fields {
   display_order: Float
   event_id: Float
   program_download_id: Float
}

"""
columns and relationships of "program_info"
"""
type program_info {
   content: String! 
   display_order: Int! 
   event_id: Int! 
   is_secondary: Boolean! 
   program_info_id: Int! 
   title: String! 
}

"""
aggregated selection of "program_info"
"""
type program_info_aggregate {
   aggregate: program_info_aggregate_fields
   nodes: [program_info! ]! 
}

"""
aggregate fields of "program_info"
"""
type program_info_aggregate_fields {
   avg: program_info_avg_fields
   count(columns: [program_info_select_column! ], distinct: Boolean): Int! 
   max: program_info_max_fields
   min: program_info_min_fields
   stddev: program_info_stddev_fields
   stddev_pop: program_info_stddev_pop_fields
   stddev_samp: program_info_stddev_samp_fields
   sum: program_info_sum_fields
   var_pop: program_info_var_pop_fields
   var_samp: program_info_var_samp_fields
   variance: program_info_variance_fields
}

"""aggregate avg on columns"""
type program_info_avg_fields {
   display_order: Float
   event_id: Float
   program_info_id: Float
}

"""
Boolean expression to filter rows from the table "program_info". All fields are combined with a logical 'AND'.
"""
input program_info_bool_exp {
  _and: [program_info_bool_exp! ]
  _not: program_info_bool_exp
  _or: [program_info_bool_exp! ]
  content: String_comparison_exp
  display_order: Int_comparison_exp
  event_id: Int_comparison_exp
  is_secondary: Boolean_comparison_exp
  program_info_id: Int_comparison_exp
  title: String_comparison_exp
}

"""
unique or primary key constraints on table "program_info"
"""
enum program_info_constraint {
  """
  unique or primary key constraint on columns "program_info_id"
  """
program_info_pkey
}

"""
input type for incrementing numeric columns in table "program_info"
"""
input program_info_inc_input {
  display_order: Int
  event_id: Int
  program_info_id: Int
}

"""
input type for inserting data into table "program_info"
"""
input program_info_insert_input {
  content: String! 
  display_order: Int! 
  event_id: Int! 
  is_secondary: Boolean! 
  program_info_id: Int! 
  title: String! 
}

"""aggregate max on columns"""
type program_info_max_fields {
   content: String
   display_order: Int
   event_id: Int
   program_info_id: Int
   title: String
}

"""aggregate min on columns"""
type program_info_min_fields {
   content: String
   display_order: Int
   event_id: Int
   program_info_id: Int
   title: String
}

"""
response of any mutation on the table "program_info"
"""
type program_info_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_info! ]! 
}

"""
on_conflict condition type for table "program_info"
"""
input program_info_on_conflict {
  constraint: program_info_constraint! 
  update_columns: [program_info_update_column! ]! 
  where: program_info_bool_exp
}

"""Ordering options when selecting data from "program_info"."""
input program_info_order_by {
  content: order_by
  display_order: order_by
  event_id: order_by
  is_secondary: order_by
  program_info_id: order_by
  title: order_by
}

"""primary key columns input for table: program_info"""
input program_info_pk_columns_input {
  program_info_id: Int! 
}

"""
select columns of table "program_info"
"""
enum program_info_select_column {
  """column name"""
content
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
is_secondary
  """column name"""
program_info_id
  """column name"""
title
}

"""
input type for updating data in table "program_info"
"""
input program_info_set_input {
  content: String
  display_order: Int
  event_id: Int
  is_secondary: Boolean
  program_info_id: Int
  title: String
}

"""aggregate stddev on columns"""
type program_info_stddev_fields {
   display_order: Float
   event_id: Float
   program_info_id: Float
}

"""aggregate stddev_pop on columns"""
type program_info_stddev_pop_fields {
   display_order: Float
   event_id: Float
   program_info_id: Float
}

"""aggregate stddev_samp on columns"""
type program_info_stddev_samp_fields {
   display_order: Float
   event_id: Float
   program_info_id: Float
}

"""
Streaming cursor of the table "program_info"
"""
input program_info_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_info_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_info_stream_cursor_value_input {
  content: String
  display_order: Int
  event_id: Int
  is_secondary: Boolean
  program_info_id: Int
  title: String
}

"""aggregate sum on columns"""
type program_info_sum_fields {
   display_order: Int
   event_id: Int
   program_info_id: Int
}

"""
update columns of table "program_info"
"""
enum program_info_update_column {
  """column name"""
content
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
is_secondary
  """column name"""
program_info_id
  """column name"""
title
}

input program_info_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_info_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_info_set_input
  where: program_info_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_info_var_pop_fields {
   display_order: Float
   event_id: Float
   program_info_id: Float
}

"""aggregate var_samp on columns"""
type program_info_var_samp_fields {
   display_order: Float
   event_id: Float
   program_info_id: Float
}

"""aggregate variance on columns"""
type program_info_variance_fields {
   display_order: Float
   event_id: Float
   program_info_id: Float
}

"""
columns and relationships of "program_information"
"""
type program_information {
   description: String! 
   display_order: Int! 
   event_id: Int! 
   file_link: String! 
   file_name: String! 
   program_information_id: Int! 
   title: String! 
}

"""
aggregated selection of "program_information"
"""
type program_information_aggregate {
   aggregate: program_information_aggregate_fields
   nodes: [program_information! ]! 
}

"""
aggregate fields of "program_information"
"""
type program_information_aggregate_fields {
   avg: program_information_avg_fields
   count(columns: [program_information_select_column! ], distinct: Boolean): Int! 
   max: program_information_max_fields
   min: program_information_min_fields
   stddev: program_information_stddev_fields
   stddev_pop: program_information_stddev_pop_fields
   stddev_samp: program_information_stddev_samp_fields
   sum: program_information_sum_fields
   var_pop: program_information_var_pop_fields
   var_samp: program_information_var_samp_fields
   variance: program_information_variance_fields
}

"""aggregate avg on columns"""
type program_information_avg_fields {
   display_order: Float
   event_id: Float
   program_information_id: Float
}

"""
Boolean expression to filter rows from the table "program_information". All fields are combined with a logical 'AND'.
"""
input program_information_bool_exp {
  _and: [program_information_bool_exp! ]
  _not: program_information_bool_exp
  _or: [program_information_bool_exp! ]
  description: String_comparison_exp
  display_order: Int_comparison_exp
  event_id: Int_comparison_exp
  file_link: String_comparison_exp
  file_name: String_comparison_exp
  program_information_id: Int_comparison_exp
  title: String_comparison_exp
}

"""
unique or primary key constraints on table "program_information"
"""
enum program_information_constraint {
  """
  unique or primary key constraint on columns "program_information_id"
  """
program_information_pkey
}

"""
input type for incrementing numeric columns in table "program_information"
"""
input program_information_inc_input {
  display_order: Int
  event_id: Int
  program_information_id: Int
}

"""
input type for inserting data into table "program_information"
"""
input program_information_insert_input {
  description: String! 
  display_order: Int! 
  event_id: Int! 
  file_link: String! 
  file_name: String! 
  program_information_id: Int! 
  title: String! 
}

"""aggregate max on columns"""
type program_information_max_fields {
   description: String
   display_order: Int
   event_id: Int
   file_link: String
   file_name: String
   program_information_id: Int
   title: String
}

"""aggregate min on columns"""
type program_information_min_fields {
   description: String
   display_order: Int
   event_id: Int
   file_link: String
   file_name: String
   program_information_id: Int
   title: String
}

"""
response of any mutation on the table "program_information"
"""
type program_information_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_information! ]! 
}

"""
on_conflict condition type for table "program_information"
"""
input program_information_on_conflict {
  constraint: program_information_constraint! 
  update_columns: [program_information_update_column! ]! 
  where: program_information_bool_exp
}

"""Ordering options when selecting data from "program_information"."""
input program_information_order_by {
  description: order_by
  display_order: order_by
  event_id: order_by
  file_link: order_by
  file_name: order_by
  program_information_id: order_by
  title: order_by
}

"""primary key columns input for table: program_information"""
input program_information_pk_columns_input {
  program_information_id: Int! 
}

"""
select columns of table "program_information"
"""
enum program_information_select_column {
  """column name"""
description
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
file_link
  """column name"""
file_name
  """column name"""
program_information_id
  """column name"""
title
}

"""
input type for updating data in table "program_information"
"""
input program_information_set_input {
  description: String
  display_order: Int
  event_id: Int
  file_link: String
  file_name: String
  program_information_id: Int
  title: String
}

"""aggregate stddev on columns"""
type program_information_stddev_fields {
   display_order: Float
   event_id: Float
   program_information_id: Float
}

"""aggregate stddev_pop on columns"""
type program_information_stddev_pop_fields {
   display_order: Float
   event_id: Float
   program_information_id: Float
}

"""aggregate stddev_samp on columns"""
type program_information_stddev_samp_fields {
   display_order: Float
   event_id: Float
   program_information_id: Float
}

"""
Streaming cursor of the table "program_information"
"""
input program_information_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_information_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_information_stream_cursor_value_input {
  description: String
  display_order: Int
  event_id: Int
  file_link: String
  file_name: String
  program_information_id: Int
  title: String
}

"""aggregate sum on columns"""
type program_information_sum_fields {
   display_order: Int
   event_id: Int
   program_information_id: Int
}

"""
update columns of table "program_information"
"""
enum program_information_update_column {
  """column name"""
description
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
file_link
  """column name"""
file_name
  """column name"""
program_information_id
  """column name"""
title
}

input program_information_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_information_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_information_set_input
  where: program_information_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_information_var_pop_fields {
   display_order: Float
   event_id: Float
   program_information_id: Float
}

"""aggregate var_samp on columns"""
type program_information_var_samp_fields {
   display_order: Float
   event_id: Float
   program_information_id: Float
}

"""aggregate variance on columns"""
type program_information_variance_fields {
   display_order: Float
   event_id: Float
   program_information_id: Float
}

"""
columns and relationships of "program_locations"
"""
type program_locations {
  """An object relationship"""
 event: events
   event_id: Int! 
   name: String! 
   program_location_id: Int! 
}

"""
aggregated selection of "program_locations"
"""
type program_locations_aggregate {
   aggregate: program_locations_aggregate_fields
   nodes: [program_locations! ]! 
}

"""
aggregate fields of "program_locations"
"""
type program_locations_aggregate_fields {
   avg: program_locations_avg_fields
   count(columns: [program_locations_select_column! ], distinct: Boolean): Int! 
   max: program_locations_max_fields
   min: program_locations_min_fields
   stddev: program_locations_stddev_fields
   stddev_pop: program_locations_stddev_pop_fields
   stddev_samp: program_locations_stddev_samp_fields
   sum: program_locations_sum_fields
   var_pop: program_locations_var_pop_fields
   var_samp: program_locations_var_samp_fields
   variance: program_locations_variance_fields
}

"""aggregate avg on columns"""
type program_locations_avg_fields {
   event_id: Float
   program_location_id: Float
}

"""
Boolean expression to filter rows from the table "program_locations". All fields are combined with a logical 'AND'.
"""
input program_locations_bool_exp {
  _and: [program_locations_bool_exp! ]
  _not: program_locations_bool_exp
  _or: [program_locations_bool_exp! ]
  event: events_bool_exp
  event_id: Int_comparison_exp
  name: String_comparison_exp
  program_location_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "program_locations"
"""
enum program_locations_constraint {
  """
  unique or primary key constraint on columns "program_location_id"
  """
program_locations_pkey
}

"""
input type for incrementing numeric columns in table "program_locations"
"""
input program_locations_inc_input {
  event_id: Int
  program_location_id: Int
}

"""
input type for inserting data into table "program_locations"
"""
input program_locations_insert_input {
  event: events_obj_rel_insert_input
  event_id: Int! 
  name: String! 
  program_location_id: Int! 
}

"""aggregate max on columns"""
type program_locations_max_fields {
   event_id: Int
   name: String
   program_location_id: Int
}

"""aggregate min on columns"""
type program_locations_min_fields {
   event_id: Int
   name: String
   program_location_id: Int
}

"""
response of any mutation on the table "program_locations"
"""
type program_locations_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_locations! ]! 
}

"""
input type for inserting object relation for remote table "program_locations"
"""
input program_locations_obj_rel_insert_input {
  data: program_locations_insert_input! 
  """upsert condition"""
on_conflict: program_locations_on_conflict
}

"""
on_conflict condition type for table "program_locations"
"""
input program_locations_on_conflict {
  constraint: program_locations_constraint! 
  update_columns: [program_locations_update_column! ]! 
  where: program_locations_bool_exp
}

"""Ordering options when selecting data from "program_locations"."""
input program_locations_order_by {
  event: events_order_by
  event_id: order_by
  name: order_by
  program_location_id: order_by
}

"""primary key columns input for table: program_locations"""
input program_locations_pk_columns_input {
  program_location_id: Int! 
}

"""
select columns of table "program_locations"
"""
enum program_locations_select_column {
  """column name"""
event_id
  """column name"""
name
  """column name"""
program_location_id
}

"""
input type for updating data in table "program_locations"
"""
input program_locations_set_input {
  event_id: Int
  name: String
  program_location_id: Int
}

"""aggregate stddev on columns"""
type program_locations_stddev_fields {
   event_id: Float
   program_location_id: Float
}

"""aggregate stddev_pop on columns"""
type program_locations_stddev_pop_fields {
   event_id: Float
   program_location_id: Float
}

"""aggregate stddev_samp on columns"""
type program_locations_stddev_samp_fields {
   event_id: Float
   program_location_id: Float
}

"""
Streaming cursor of the table "program_locations"
"""
input program_locations_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_locations_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_locations_stream_cursor_value_input {
  event_id: Int
  name: String
  program_location_id: Int
}

"""aggregate sum on columns"""
type program_locations_sum_fields {
   event_id: Int
   program_location_id: Int
}

"""
update columns of table "program_locations"
"""
enum program_locations_update_column {
  """column name"""
event_id
  """column name"""
name
  """column name"""
program_location_id
}

input program_locations_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_locations_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_locations_set_input
  where: program_locations_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_locations_var_pop_fields {
   event_id: Float
   program_location_id: Float
}

"""aggregate var_samp on columns"""
type program_locations_var_samp_fields {
   event_id: Float
   program_location_id: Float
}

"""aggregate variance on columns"""
type program_locations_variance_fields {
   event_id: Float
   program_location_id: Float
}

"""
columns and relationships of "program_session_attachments"
"""
type program_session_activities {
   display_order: Int! 
   end_time: time
  """An object relationship"""
 program_attachment: program_attachments! 
   program_attachment_id: Int! 
   program_session_id: Int! 
   start_time: time
}

"""
aggregated selection of "program_session_attachments"
"""
type program_session_activities_aggregate {
   aggregate: program_session_activities_aggregate_fields
   nodes: [program_session_activities! ]! 
}

input program_session_activities_aggregate_bool_exp {
  count: program_session_activities_aggregate_bool_exp_count
}

input program_session_activities_aggregate_bool_exp_count {
  arguments: [program_session_activities_select_column! ]
  distinct: Boolean
  filter: program_session_activities_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "program_session_attachments"
"""
type program_session_activities_aggregate_fields {
   avg: program_session_activities_avg_fields
   count(columns: [program_session_activities_select_column! ], distinct: Boolean): Int! 
   max: program_session_activities_max_fields
   min: program_session_activities_min_fields
   stddev: program_session_activities_stddev_fields
   stddev_pop: program_session_activities_stddev_pop_fields
   stddev_samp: program_session_activities_stddev_samp_fields
   sum: program_session_activities_sum_fields
   var_pop: program_session_activities_var_pop_fields
   var_samp: program_session_activities_var_samp_fields
   variance: program_session_activities_variance_fields
}

"""
order by aggregate values of table "program_session_attachments"
"""
input program_session_activities_aggregate_order_by {
  avg: program_session_activities_avg_order_by
  count: order_by
  max: program_session_activities_max_order_by
  min: program_session_activities_min_order_by
  stddev: program_session_activities_stddev_order_by
  stddev_pop: program_session_activities_stddev_pop_order_by
  stddev_samp: program_session_activities_stddev_samp_order_by
  sum: program_session_activities_sum_order_by
  var_pop: program_session_activities_var_pop_order_by
  var_samp: program_session_activities_var_samp_order_by
  variance: program_session_activities_variance_order_by
}

"""
input type for inserting array relation for remote table "program_session_attachments"
"""
input program_session_activities_arr_rel_insert_input {
  data: [program_session_activities_insert_input! ]! 
}

"""aggregate avg on columns"""
type program_session_activities_avg_fields {
   display_order: Float
   program_attachment_id: Float
   program_session_id: Float
}

"""
order by avg() on columns of table "program_session_attachments"
"""
input program_session_activities_avg_order_by {
  display_order: order_by
  program_attachment_id: order_by
  program_session_id: order_by
}

"""
Boolean expression to filter rows from the table "program_session_attachments". All fields are combined with a logical 'AND'.
"""
input program_session_activities_bool_exp {
  _and: [program_session_activities_bool_exp! ]
  _not: program_session_activities_bool_exp
  _or: [program_session_activities_bool_exp! ]
  display_order: Int_comparison_exp
  end_time: time_comparison_exp
  program_attachment: program_attachments_bool_exp
  program_attachment_id: Int_comparison_exp
  program_session_id: Int_comparison_exp
  start_time: time_comparison_exp
}

"""
input type for incrementing numeric columns in table "program_session_attachments"
"""
input program_session_activities_inc_input {
  display_order: Int
  program_attachment_id: Int
  program_session_id: Int
}

"""
input type for inserting data into table "program_session_attachments"
"""
input program_session_activities_insert_input {
  display_order: Int! 
  end_time: time
  program_attachment: program_attachments_obj_rel_insert_input
  program_attachment_id: Int! 
  program_session_id: Int! 
  start_time: time
}

"""aggregate max on columns"""
type program_session_activities_max_fields {
   display_order: Int
   program_attachment_id: Int
   program_session_id: Int
}

"""
order by max() on columns of table "program_session_attachments"
"""
input program_session_activities_max_order_by {
  display_order: order_by
  program_attachment_id: order_by
  program_session_id: order_by
}

"""aggregate min on columns"""
type program_session_activities_min_fields {
   display_order: Int
   program_attachment_id: Int
   program_session_id: Int
}

"""
order by min() on columns of table "program_session_attachments"
"""
input program_session_activities_min_order_by {
  display_order: order_by
  program_attachment_id: order_by
  program_session_id: order_by
}

"""
response of any mutation on the table "program_session_attachments"
"""
type program_session_activities_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_session_activities! ]! 
}

"""
Ordering options when selecting data from "program_session_attachments".
"""
input program_session_activities_order_by {
  display_order: order_by
  end_time: order_by
  program_attachment: program_attachments_order_by
  program_attachment_id: order_by
  program_session_id: order_by
  start_time: order_by
}

"""
select columns of table "program_session_attachments"
"""
enum program_session_activities_select_column {
  """column name"""
display_order
  """column name"""
end_time
  """column name"""
program_attachment_id
  """column name"""
program_session_id
  """column name"""
start_time
}

"""
input type for updating data in table "program_session_attachments"
"""
input program_session_activities_set_input {
  display_order: Int
  end_time: time
  program_attachment_id: Int
  program_session_id: Int
  start_time: time
}

"""aggregate stddev on columns"""
type program_session_activities_stddev_fields {
   display_order: Float
   program_attachment_id: Float
   program_session_id: Float
}

"""
order by stddev() on columns of table "program_session_attachments"
"""
input program_session_activities_stddev_order_by {
  display_order: order_by
  program_attachment_id: order_by
  program_session_id: order_by
}

"""aggregate stddev_pop on columns"""
type program_session_activities_stddev_pop_fields {
   display_order: Float
   program_attachment_id: Float
   program_session_id: Float
}

"""
order by stddev_pop() on columns of table "program_session_attachments"
"""
input program_session_activities_stddev_pop_order_by {
  display_order: order_by
  program_attachment_id: order_by
  program_session_id: order_by
}

"""aggregate stddev_samp on columns"""
type program_session_activities_stddev_samp_fields {
   display_order: Float
   program_attachment_id: Float
   program_session_id: Float
}

"""
order by stddev_samp() on columns of table "program_session_attachments"
"""
input program_session_activities_stddev_samp_order_by {
  display_order: order_by
  program_attachment_id: order_by
  program_session_id: order_by
}

"""
Streaming cursor of the table "program_session_activities"
"""
input program_session_activities_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_session_activities_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_session_activities_stream_cursor_value_input {
  display_order: Int
  end_time: time
  program_attachment_id: Int
  program_session_id: Int
  start_time: time
}

"""aggregate sum on columns"""
type program_session_activities_sum_fields {
   display_order: Int
   program_attachment_id: Int
   program_session_id: Int
}

"""
order by sum() on columns of table "program_session_attachments"
"""
input program_session_activities_sum_order_by {
  display_order: order_by
  program_attachment_id: order_by
  program_session_id: order_by
}

input program_session_activities_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_session_activities_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_session_activities_set_input
  where: program_session_activities_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_session_activities_var_pop_fields {
   display_order: Float
   program_attachment_id: Float
   program_session_id: Float
}

"""
order by var_pop() on columns of table "program_session_attachments"
"""
input program_session_activities_var_pop_order_by {
  display_order: order_by
  program_attachment_id: order_by
  program_session_id: order_by
}

"""aggregate var_samp on columns"""
type program_session_activities_var_samp_fields {
   display_order: Float
   program_attachment_id: Float
   program_session_id: Float
}

"""
order by var_samp() on columns of table "program_session_attachments"
"""
input program_session_activities_var_samp_order_by {
  display_order: order_by
  program_attachment_id: order_by
  program_session_id: order_by
}

"""aggregate variance on columns"""
type program_session_activities_variance_fields {
   display_order: Float
   program_attachment_id: Float
   program_session_id: Float
}

"""
order by variance() on columns of table "program_session_attachments"
"""
input program_session_activities_variance_order_by {
  display_order: order_by
  program_attachment_id: order_by
  program_session_id: order_by
}

"""
columns and relationships of "program_session_categories"
"""
type program_session_categories {
  """An object relationship"""
 category_type: program_session_category_type! 
   created_at: timestamptz! 
   created_by: Int
   display_order: Int! 
   id: Int! 
   name: String! 
   program_session_category_type_id: Int! 
  """An array relationship"""
 sessions("""distinct select on columns"""
distinct_on: [program_sessions_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_categories_order_by! ], """filter the rows returned"""
where: program_sessions_categories_bool_exp): [program_sessions_categories! ]! 
  """An aggregate relationship"""
 sessions_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_categories_order_by! ], """filter the rows returned"""
where: program_sessions_categories_bool_exp): program_sessions_categories_aggregate! 
   updated_at: timestamptz! 
   updated_by: Int
}

"""
aggregated selection of "program_session_categories"
"""
type program_session_categories_aggregate {
   aggregate: program_session_categories_aggregate_fields
   nodes: [program_session_categories! ]! 
}

input program_session_categories_aggregate_bool_exp {
  count: program_session_categories_aggregate_bool_exp_count
}

input program_session_categories_aggregate_bool_exp_count {
  arguments: [program_session_categories_select_column! ]
  distinct: Boolean
  filter: program_session_categories_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "program_session_categories"
"""
type program_session_categories_aggregate_fields {
   avg: program_session_categories_avg_fields
   count(columns: [program_session_categories_select_column! ], distinct: Boolean): Int! 
   max: program_session_categories_max_fields
   min: program_session_categories_min_fields
   stddev: program_session_categories_stddev_fields
   stddev_pop: program_session_categories_stddev_pop_fields
   stddev_samp: program_session_categories_stddev_samp_fields
   sum: program_session_categories_sum_fields
   var_pop: program_session_categories_var_pop_fields
   var_samp: program_session_categories_var_samp_fields
   variance: program_session_categories_variance_fields
}

"""
order by aggregate values of table "program_session_categories"
"""
input program_session_categories_aggregate_order_by {
  avg: program_session_categories_avg_order_by
  count: order_by
  max: program_session_categories_max_order_by
  min: program_session_categories_min_order_by
  stddev: program_session_categories_stddev_order_by
  stddev_pop: program_session_categories_stddev_pop_order_by
  stddev_samp: program_session_categories_stddev_samp_order_by
  sum: program_session_categories_sum_order_by
  var_pop: program_session_categories_var_pop_order_by
  var_samp: program_session_categories_var_samp_order_by
  variance: program_session_categories_variance_order_by
}

"""
input type for inserting array relation for remote table "program_session_categories"
"""
input program_session_categories_arr_rel_insert_input {
  data: [program_session_categories_insert_input! ]! 
  """upsert condition"""
on_conflict: program_session_categories_on_conflict
}

"""aggregate avg on columns"""
type program_session_categories_avg_fields {
   created_by: Float
   display_order: Float
   id: Float
   program_session_category_type_id: Float
   updated_by: Float
}

"""
order by avg() on columns of table "program_session_categories"
"""
input program_session_categories_avg_order_by {
  created_by: order_by
  display_order: order_by
  id: order_by
  program_session_category_type_id: order_by
  updated_by: order_by
}

"""
Boolean expression to filter rows from the table "program_session_categories". All fields are combined with a logical 'AND'.
"""
input program_session_categories_bool_exp {
  _and: [program_session_categories_bool_exp! ]
  _not: program_session_categories_bool_exp
  _or: [program_session_categories_bool_exp! ]
  category_type: program_session_category_type_bool_exp
  created_at: timestamptz_comparison_exp
  created_by: Int_comparison_exp
  display_order: Int_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  program_session_category_type_id: Int_comparison_exp
  sessions: program_sessions_categories_bool_exp
  sessions_aggregate: program_sessions_categories_aggregate_bool_exp
  updated_at: timestamptz_comparison_exp
  updated_by: Int_comparison_exp
}

"""
unique or primary key constraints on table "program_session_categories"
"""
enum program_session_categories_constraint {
  """
  unique or primary key constraint on columns "id"
  """
program_session_categories_pkey
}

"""
input type for incrementing numeric columns in table "program_session_categories"
"""
input program_session_categories_inc_input {
  created_by: Int
  display_order: Int
  id: Int
  program_session_category_type_id: Int
  updated_by: Int
}

"""
input type for inserting data into table "program_session_categories"
"""
input program_session_categories_insert_input {
  category_type: program_session_category_type_obj_rel_insert_input
  created_at: timestamptz! 
  created_by: Int
  display_order: Int! 
  id: Int! 
  name: String! 
  program_session_category_type_id: Int! 
  sessions: program_sessions_categories_arr_rel_insert_input
  updated_at: timestamptz! 
  updated_by: Int
}

"""aggregate max on columns"""
type program_session_categories_max_fields {
   created_at: timestamptz
   created_by: Int
   display_order: Int
   id: Int
   name: String
   program_session_category_type_id: Int
   updated_at: timestamptz
   updated_by: Int
}

"""
order by max() on columns of table "program_session_categories"
"""
input program_session_categories_max_order_by {
  created_at: order_by
  created_by: order_by
  display_order: order_by
  id: order_by
  name: order_by
  program_session_category_type_id: order_by
  updated_at: order_by
  updated_by: order_by
}

"""aggregate min on columns"""
type program_session_categories_min_fields {
   created_at: timestamptz
   created_by: Int
   display_order: Int
   id: Int
   name: String
   program_session_category_type_id: Int
   updated_at: timestamptz
   updated_by: Int
}

"""
order by min() on columns of table "program_session_categories"
"""
input program_session_categories_min_order_by {
  created_at: order_by
  created_by: order_by
  display_order: order_by
  id: order_by
  name: order_by
  program_session_category_type_id: order_by
  updated_at: order_by
  updated_by: order_by
}

"""
response of any mutation on the table "program_session_categories"
"""
type program_session_categories_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_session_categories! ]! 
}

"""
input type for inserting object relation for remote table "program_session_categories"
"""
input program_session_categories_obj_rel_insert_input {
  data: program_session_categories_insert_input! 
  """upsert condition"""
on_conflict: program_session_categories_on_conflict
}

"""
on_conflict condition type for table "program_session_categories"
"""
input program_session_categories_on_conflict {
  constraint: program_session_categories_constraint! 
  update_columns: [program_session_categories_update_column! ]! 
  where: program_session_categories_bool_exp
}

"""
Ordering options when selecting data from "program_session_categories".
"""
input program_session_categories_order_by {
  category_type: program_session_category_type_order_by
  created_at: order_by
  created_by: order_by
  display_order: order_by
  id: order_by
  name: order_by
  program_session_category_type_id: order_by
  sessions_aggregate: program_sessions_categories_aggregate_order_by
  updated_at: order_by
  updated_by: order_by
}

"""primary key columns input for table: program_session_categories"""
input program_session_categories_pk_columns_input {
  id: Int! 
}

"""
select columns of table "program_session_categories"
"""
enum program_session_categories_select_column {
  """column name"""
created_at
  """column name"""
created_by
  """column name"""
display_order
  """column name"""
id
  """column name"""
name
  """column name"""
program_session_category_type_id
  """column name"""
updated_at
  """column name"""
updated_by
}

"""
input type for updating data in table "program_session_categories"
"""
input program_session_categories_set_input {
  created_at: timestamptz
  created_by: Int
  display_order: Int
  id: Int
  name: String
  program_session_category_type_id: Int
  updated_at: timestamptz
  updated_by: Int
}

"""aggregate stddev on columns"""
type program_session_categories_stddev_fields {
   created_by: Float
   display_order: Float
   id: Float
   program_session_category_type_id: Float
   updated_by: Float
}

"""
order by stddev() on columns of table "program_session_categories"
"""
input program_session_categories_stddev_order_by {
  created_by: order_by
  display_order: order_by
  id: order_by
  program_session_category_type_id: order_by
  updated_by: order_by
}

"""aggregate stddev_pop on columns"""
type program_session_categories_stddev_pop_fields {
   created_by: Float
   display_order: Float
   id: Float
   program_session_category_type_id: Float
   updated_by: Float
}

"""
order by stddev_pop() on columns of table "program_session_categories"
"""
input program_session_categories_stddev_pop_order_by {
  created_by: order_by
  display_order: order_by
  id: order_by
  program_session_category_type_id: order_by
  updated_by: order_by
}

"""aggregate stddev_samp on columns"""
type program_session_categories_stddev_samp_fields {
   created_by: Float
   display_order: Float
   id: Float
   program_session_category_type_id: Float
   updated_by: Float
}

"""
order by stddev_samp() on columns of table "program_session_categories"
"""
input program_session_categories_stddev_samp_order_by {
  created_by: order_by
  display_order: order_by
  id: order_by
  program_session_category_type_id: order_by
  updated_by: order_by
}

"""
Streaming cursor of the table "program_session_categories"
"""
input program_session_categories_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_session_categories_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_session_categories_stream_cursor_value_input {
  created_at: timestamptz
  created_by: Int
  display_order: Int
  id: Int
  name: String
  program_session_category_type_id: Int
  updated_at: timestamptz
  updated_by: Int
}

"""aggregate sum on columns"""
type program_session_categories_sum_fields {
   created_by: Int
   display_order: Int
   id: Int
   program_session_category_type_id: Int
   updated_by: Int
}

"""
order by sum() on columns of table "program_session_categories"
"""
input program_session_categories_sum_order_by {
  created_by: order_by
  display_order: order_by
  id: order_by
  program_session_category_type_id: order_by
  updated_by: order_by
}

"""
update columns of table "program_session_categories"
"""
enum program_session_categories_update_column {
  """column name"""
created_at
  """column name"""
created_by
  """column name"""
display_order
  """column name"""
id
  """column name"""
name
  """column name"""
program_session_category_type_id
  """column name"""
updated_at
  """column name"""
updated_by
}

input program_session_categories_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_session_categories_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_session_categories_set_input
  where: program_session_categories_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_session_categories_var_pop_fields {
   created_by: Float
   display_order: Float
   id: Float
   program_session_category_type_id: Float
   updated_by: Float
}

"""
order by var_pop() on columns of table "program_session_categories"
"""
input program_session_categories_var_pop_order_by {
  created_by: order_by
  display_order: order_by
  id: order_by
  program_session_category_type_id: order_by
  updated_by: order_by
}

"""aggregate var_samp on columns"""
type program_session_categories_var_samp_fields {
   created_by: Float
   display_order: Float
   id: Float
   program_session_category_type_id: Float
   updated_by: Float
}

"""
order by var_samp() on columns of table "program_session_categories"
"""
input program_session_categories_var_samp_order_by {
  created_by: order_by
  display_order: order_by
  id: order_by
  program_session_category_type_id: order_by
  updated_by: order_by
}

"""aggregate variance on columns"""
type program_session_categories_variance_fields {
   created_by: Float
   display_order: Float
   id: Float
   program_session_category_type_id: Float
   updated_by: Float
}

"""
order by variance() on columns of table "program_session_categories"
"""
input program_session_categories_variance_order_by {
  created_by: order_by
  display_order: order_by
  id: order_by
  program_session_category_type_id: order_by
  updated_by: order_by
}

"""
columns and relationships of "program_session_category_type"
"""
type program_session_category_type {
  """An array relationship"""
 categories("""distinct select on columns"""
distinct_on: [program_session_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_categories_order_by! ], """filter the rows returned"""
where: program_session_categories_bool_exp): [program_session_categories! ]! 
  """An aggregate relationship"""
 categories_aggregate("""distinct select on columns"""
distinct_on: [program_session_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_categories_order_by! ], """filter the rows returned"""
where: program_session_categories_bool_exp): program_session_categories_aggregate! 
   created_at: timestamptz! 
   created_by: Int
   event_id: Int! 
   id: Int! 
   name: String! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "program_session_category_type"
"""
type program_session_category_type_aggregate {
   aggregate: program_session_category_type_aggregate_fields
   nodes: [program_session_category_type! ]! 
}

"""
aggregate fields of "program_session_category_type"
"""
type program_session_category_type_aggregate_fields {
   avg: program_session_category_type_avg_fields
   count(columns: [program_session_category_type_select_column! ], distinct: Boolean): Int! 
   max: program_session_category_type_max_fields
   min: program_session_category_type_min_fields
   stddev: program_session_category_type_stddev_fields
   stddev_pop: program_session_category_type_stddev_pop_fields
   stddev_samp: program_session_category_type_stddev_samp_fields
   sum: program_session_category_type_sum_fields
   var_pop: program_session_category_type_var_pop_fields
   var_samp: program_session_category_type_var_samp_fields
   variance: program_session_category_type_variance_fields
}

"""aggregate avg on columns"""
type program_session_category_type_avg_fields {
   created_by: Float
   event_id: Float
   id: Float
}

"""
Boolean expression to filter rows from the table "program_session_category_type". All fields are combined with a logical 'AND'.
"""
input program_session_category_type_bool_exp {
  _and: [program_session_category_type_bool_exp! ]
  _not: program_session_category_type_bool_exp
  _or: [program_session_category_type_bool_exp! ]
  categories: program_session_categories_bool_exp
  categories_aggregate: program_session_categories_aggregate_bool_exp
  created_at: timestamptz_comparison_exp
  created_by: Int_comparison_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "program_session_category_type"
"""
enum program_session_category_type_constraint {
  """
  unique or primary key constraint on columns "id"
  """
program_session_category_type_pkey
}

"""
input type for incrementing numeric columns in table "program_session_category_type"
"""
input program_session_category_type_inc_input {
  created_by: Int
  event_id: Int
  id: Int
}

"""
input type for inserting data into table "program_session_category_type"
"""
input program_session_category_type_insert_input {
  categories: program_session_categories_arr_rel_insert_input
  created_at: timestamptz! 
  created_by: Int
  event_id: Int! 
  id: Int! 
  name: String! 
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type program_session_category_type_max_fields {
   created_at: timestamptz
   created_by: Int
   event_id: Int
   id: Int
   name: String
   updated_at: timestamptz
}

"""aggregate min on columns"""
type program_session_category_type_min_fields {
   created_at: timestamptz
   created_by: Int
   event_id: Int
   id: Int
   name: String
   updated_at: timestamptz
}

"""
response of any mutation on the table "program_session_category_type"
"""
type program_session_category_type_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_session_category_type! ]! 
}

"""
input type for inserting object relation for remote table "program_session_category_type"
"""
input program_session_category_type_obj_rel_insert_input {
  data: program_session_category_type_insert_input! 
  """upsert condition"""
on_conflict: program_session_category_type_on_conflict
}

"""
on_conflict condition type for table "program_session_category_type"
"""
input program_session_category_type_on_conflict {
  constraint: program_session_category_type_constraint! 
  update_columns: [program_session_category_type_update_column! ]! 
  where: program_session_category_type_bool_exp
}

"""
Ordering options when selecting data from "program_session_category_type".
"""
input program_session_category_type_order_by {
  categories_aggregate: program_session_categories_aggregate_order_by
  created_at: order_by
  created_by: order_by
  event_id: order_by
  id: order_by
  name: order_by
  updated_at: order_by
}

"""primary key columns input for table: program_session_category_type"""
input program_session_category_type_pk_columns_input {
  id: Int! 
}

"""
select columns of table "program_session_category_type"
"""
enum program_session_category_type_select_column {
  """column name"""
created_at
  """column name"""
created_by
  """column name"""
event_id
  """column name"""
id
  """column name"""
name
  """column name"""
updated_at
}

"""
input type for updating data in table "program_session_category_type"
"""
input program_session_category_type_set_input {
  created_at: timestamptz
  created_by: Int
  event_id: Int
  id: Int
  name: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type program_session_category_type_stddev_fields {
   created_by: Float
   event_id: Float
   id: Float
}

"""aggregate stddev_pop on columns"""
type program_session_category_type_stddev_pop_fields {
   created_by: Float
   event_id: Float
   id: Float
}

"""aggregate stddev_samp on columns"""
type program_session_category_type_stddev_samp_fields {
   created_by: Float
   event_id: Float
   id: Float
}

"""
Streaming cursor of the table "program_session_category_type"
"""
input program_session_category_type_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_session_category_type_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_session_category_type_stream_cursor_value_input {
  created_at: timestamptz
  created_by: Int
  event_id: Int
  id: Int
  name: String
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type program_session_category_type_sum_fields {
   created_by: Int
   event_id: Int
   id: Int
}

"""
update columns of table "program_session_category_type"
"""
enum program_session_category_type_update_column {
  """column name"""
created_at
  """column name"""
created_by
  """column name"""
event_id
  """column name"""
id
  """column name"""
name
  """column name"""
updated_at
}

input program_session_category_type_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_session_category_type_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_session_category_type_set_input
  where: program_session_category_type_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_session_category_type_var_pop_fields {
   created_by: Float
   event_id: Float
   id: Float
}

"""aggregate var_samp on columns"""
type program_session_category_type_var_samp_fields {
   created_by: Float
   event_id: Float
   id: Float
}

"""aggregate variance on columns"""
type program_session_category_type_variance_fields {
   created_by: Float
   event_id: Float
   id: Float
}

"""
columns and relationships of "program_session_sponsors"
"""
type program_session_sponsors {
   event_id: Int! 
   program_session_id: Int! 
   program_sponsor_id: Int! 
  """An object relationship"""
 sponsor: program_sponsors! 
}

"""
aggregated selection of "program_session_sponsors"
"""
type program_session_sponsors_aggregate {
   aggregate: program_session_sponsors_aggregate_fields
   nodes: [program_session_sponsors! ]! 
}

input program_session_sponsors_aggregate_bool_exp {
  count: program_session_sponsors_aggregate_bool_exp_count
}

input program_session_sponsors_aggregate_bool_exp_count {
  arguments: [program_session_sponsors_select_column! ]
  distinct: Boolean
  filter: program_session_sponsors_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "program_session_sponsors"
"""
type program_session_sponsors_aggregate_fields {
   avg: program_session_sponsors_avg_fields
   count(columns: [program_session_sponsors_select_column! ], distinct: Boolean): Int! 
   max: program_session_sponsors_max_fields
   min: program_session_sponsors_min_fields
   stddev: program_session_sponsors_stddev_fields
   stddev_pop: program_session_sponsors_stddev_pop_fields
   stddev_samp: program_session_sponsors_stddev_samp_fields
   sum: program_session_sponsors_sum_fields
   var_pop: program_session_sponsors_var_pop_fields
   var_samp: program_session_sponsors_var_samp_fields
   variance: program_session_sponsors_variance_fields
}

"""
order by aggregate values of table "program_session_sponsors"
"""
input program_session_sponsors_aggregate_order_by {
  avg: program_session_sponsors_avg_order_by
  count: order_by
  max: program_session_sponsors_max_order_by
  min: program_session_sponsors_min_order_by
  stddev: program_session_sponsors_stddev_order_by
  stddev_pop: program_session_sponsors_stddev_pop_order_by
  stddev_samp: program_session_sponsors_stddev_samp_order_by
  sum: program_session_sponsors_sum_order_by
  var_pop: program_session_sponsors_var_pop_order_by
  var_samp: program_session_sponsors_var_samp_order_by
  variance: program_session_sponsors_variance_order_by
}

"""
input type for inserting array relation for remote table "program_session_sponsors"
"""
input program_session_sponsors_arr_rel_insert_input {
  data: [program_session_sponsors_insert_input! ]! 
}

"""aggregate avg on columns"""
type program_session_sponsors_avg_fields {
   event_id: Float
   program_session_id: Float
   program_sponsor_id: Float
}

"""
order by avg() on columns of table "program_session_sponsors"
"""
input program_session_sponsors_avg_order_by {
  event_id: order_by
  program_session_id: order_by
  program_sponsor_id: order_by
}

"""
Boolean expression to filter rows from the table "program_session_sponsors". All fields are combined with a logical 'AND'.
"""
input program_session_sponsors_bool_exp {
  _and: [program_session_sponsors_bool_exp! ]
  _not: program_session_sponsors_bool_exp
  _or: [program_session_sponsors_bool_exp! ]
  event_id: Int_comparison_exp
  program_session_id: Int_comparison_exp
  program_sponsor_id: Int_comparison_exp
  sponsor: program_sponsors_bool_exp
}

"""
input type for incrementing numeric columns in table "program_session_sponsors"
"""
input program_session_sponsors_inc_input {
  event_id: Int
  program_session_id: Int
  program_sponsor_id: Int
}

"""
input type for inserting data into table "program_session_sponsors"
"""
input program_session_sponsors_insert_input {
  event_id: Int! 
  program_session_id: Int! 
  program_sponsor_id: Int! 
  sponsor: program_sponsors_obj_rel_insert_input
}

"""aggregate max on columns"""
type program_session_sponsors_max_fields {
   event_id: Int
   program_session_id: Int
   program_sponsor_id: Int
}

"""
order by max() on columns of table "program_session_sponsors"
"""
input program_session_sponsors_max_order_by {
  event_id: order_by
  program_session_id: order_by
  program_sponsor_id: order_by
}

"""aggregate min on columns"""
type program_session_sponsors_min_fields {
   event_id: Int
   program_session_id: Int
   program_sponsor_id: Int
}

"""
order by min() on columns of table "program_session_sponsors"
"""
input program_session_sponsors_min_order_by {
  event_id: order_by
  program_session_id: order_by
  program_sponsor_id: order_by
}

"""
response of any mutation on the table "program_session_sponsors"
"""
type program_session_sponsors_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_session_sponsors! ]! 
}

"""Ordering options when selecting data from "program_session_sponsors"."""
input program_session_sponsors_order_by {
  event_id: order_by
  program_session_id: order_by
  program_sponsor_id: order_by
  sponsor: program_sponsors_order_by
}

"""
select columns of table "program_session_sponsors"
"""
enum program_session_sponsors_select_column {
  """column name"""
event_id
  """column name"""
program_session_id
  """column name"""
program_sponsor_id
}

"""
input type for updating data in table "program_session_sponsors"
"""
input program_session_sponsors_set_input {
  event_id: Int
  program_session_id: Int
  program_sponsor_id: Int
}

"""aggregate stddev on columns"""
type program_session_sponsors_stddev_fields {
   event_id: Float
   program_session_id: Float
   program_sponsor_id: Float
}

"""
order by stddev() on columns of table "program_session_sponsors"
"""
input program_session_sponsors_stddev_order_by {
  event_id: order_by
  program_session_id: order_by
  program_sponsor_id: order_by
}

"""aggregate stddev_pop on columns"""
type program_session_sponsors_stddev_pop_fields {
   event_id: Float
   program_session_id: Float
   program_sponsor_id: Float
}

"""
order by stddev_pop() on columns of table "program_session_sponsors"
"""
input program_session_sponsors_stddev_pop_order_by {
  event_id: order_by
  program_session_id: order_by
  program_sponsor_id: order_by
}

"""aggregate stddev_samp on columns"""
type program_session_sponsors_stddev_samp_fields {
   event_id: Float
   program_session_id: Float
   program_sponsor_id: Float
}

"""
order by stddev_samp() on columns of table "program_session_sponsors"
"""
input program_session_sponsors_stddev_samp_order_by {
  event_id: order_by
  program_session_id: order_by
  program_sponsor_id: order_by
}

"""
Streaming cursor of the table "program_session_sponsors"
"""
input program_session_sponsors_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_session_sponsors_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_session_sponsors_stream_cursor_value_input {
  event_id: Int
  program_session_id: Int
  program_sponsor_id: Int
}

"""aggregate sum on columns"""
type program_session_sponsors_sum_fields {
   event_id: Int
   program_session_id: Int
   program_sponsor_id: Int
}

"""
order by sum() on columns of table "program_session_sponsors"
"""
input program_session_sponsors_sum_order_by {
  event_id: order_by
  program_session_id: order_by
  program_sponsor_id: order_by
}

input program_session_sponsors_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_session_sponsors_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_session_sponsors_set_input
  where: program_session_sponsors_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_session_sponsors_var_pop_fields {
   event_id: Float
   program_session_id: Float
   program_sponsor_id: Float
}

"""
order by var_pop() on columns of table "program_session_sponsors"
"""
input program_session_sponsors_var_pop_order_by {
  event_id: order_by
  program_session_id: order_by
  program_sponsor_id: order_by
}

"""aggregate var_samp on columns"""
type program_session_sponsors_var_samp_fields {
   event_id: Float
   program_session_id: Float
   program_sponsor_id: Float
}

"""
order by var_samp() on columns of table "program_session_sponsors"
"""
input program_session_sponsors_var_samp_order_by {
  event_id: order_by
  program_session_id: order_by
  program_sponsor_id: order_by
}

"""aggregate variance on columns"""
type program_session_sponsors_variance_fields {
   event_id: Float
   program_session_id: Float
   program_sponsor_id: Float
}

"""
order by variance() on columns of table "program_session_sponsors"
"""
input program_session_sponsors_variance_order_by {
  event_id: order_by
  program_session_id: order_by
  program_sponsor_id: order_by
}

"""
columns and relationships of "program_session_zoom_meetings"
"""
type program_session_zoom_meetings {
   created_by: Int
   end_time: timestamp! 
   event_id: Int! 
   id: Int! 
   join_link: String! 
   program_session_id: Int! 
   start_time: timestamp! 
   zoom_meeting_id: String! 
   zoom_user_email: String! 
   zoom_user_id: String! 
}

"""
aggregated selection of "program_session_zoom_meetings"
"""
type program_session_zoom_meetings_aggregate {
   aggregate: program_session_zoom_meetings_aggregate_fields
   nodes: [program_session_zoom_meetings! ]! 
}

input program_session_zoom_meetings_aggregate_bool_exp {
  count: program_session_zoom_meetings_aggregate_bool_exp_count
}

input program_session_zoom_meetings_aggregate_bool_exp_count {
  arguments: [program_session_zoom_meetings_select_column! ]
  distinct: Boolean
  filter: program_session_zoom_meetings_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "program_session_zoom_meetings"
"""
type program_session_zoom_meetings_aggregate_fields {
   avg: program_session_zoom_meetings_avg_fields
   count(columns: [program_session_zoom_meetings_select_column! ], distinct: Boolean): Int! 
   max: program_session_zoom_meetings_max_fields
   min: program_session_zoom_meetings_min_fields
   stddev: program_session_zoom_meetings_stddev_fields
   stddev_pop: program_session_zoom_meetings_stddev_pop_fields
   stddev_samp: program_session_zoom_meetings_stddev_samp_fields
   sum: program_session_zoom_meetings_sum_fields
   var_pop: program_session_zoom_meetings_var_pop_fields
   var_samp: program_session_zoom_meetings_var_samp_fields
   variance: program_session_zoom_meetings_variance_fields
}

"""
order by aggregate values of table "program_session_zoom_meetings"
"""
input program_session_zoom_meetings_aggregate_order_by {
  avg: program_session_zoom_meetings_avg_order_by
  count: order_by
  max: program_session_zoom_meetings_max_order_by
  min: program_session_zoom_meetings_min_order_by
  stddev: program_session_zoom_meetings_stddev_order_by
  stddev_pop: program_session_zoom_meetings_stddev_pop_order_by
  stddev_samp: program_session_zoom_meetings_stddev_samp_order_by
  sum: program_session_zoom_meetings_sum_order_by
  var_pop: program_session_zoom_meetings_var_pop_order_by
  var_samp: program_session_zoom_meetings_var_samp_order_by
  variance: program_session_zoom_meetings_variance_order_by
}

"""
input type for inserting array relation for remote table "program_session_zoom_meetings"
"""
input program_session_zoom_meetings_arr_rel_insert_input {
  data: [program_session_zoom_meetings_insert_input! ]! 
  """upsert condition"""
on_conflict: program_session_zoom_meetings_on_conflict
}

"""aggregate avg on columns"""
type program_session_zoom_meetings_avg_fields {
   created_by: Float
   event_id: Float
   id: Float
   program_session_id: Float
}

"""
order by avg() on columns of table "program_session_zoom_meetings"
"""
input program_session_zoom_meetings_avg_order_by {
  created_by: order_by
  event_id: order_by
  id: order_by
  program_session_id: order_by
}

"""
Boolean expression to filter rows from the table "program_session_zoom_meetings". All fields are combined with a logical 'AND'.
"""
input program_session_zoom_meetings_bool_exp {
  _and: [program_session_zoom_meetings_bool_exp! ]
  _not: program_session_zoom_meetings_bool_exp
  _or: [program_session_zoom_meetings_bool_exp! ]
  created_by: Int_comparison_exp
  end_time: timestamp_comparison_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  join_link: String_comparison_exp
  program_session_id: Int_comparison_exp
  start_time: timestamp_comparison_exp
  zoom_meeting_id: String_comparison_exp
  zoom_user_email: String_comparison_exp
  zoom_user_id: String_comparison_exp
}

"""
unique or primary key constraints on table "program_session_zoom_meetings"
"""
enum program_session_zoom_meetings_constraint {
  """
  unique or primary key constraint on columns "id"
  """
program_session_zoom_meetings_pkey
  """
  unique or primary key constraint on columns "program_session_id"
  """
program_session_zoom_meetings_program_session_id_key
}

"""
input type for incrementing numeric columns in table "program_session_zoom_meetings"
"""
input program_session_zoom_meetings_inc_input {
  created_by: Int
  event_id: Int
  id: Int
  program_session_id: Int
}

"""
input type for inserting data into table "program_session_zoom_meetings"
"""
input program_session_zoom_meetings_insert_input {
  created_by: Int
  end_time: timestamp! 
  event_id: Int! 
  id: Int! 
  join_link: String! 
  program_session_id: Int! 
  start_time: timestamp! 
  zoom_meeting_id: String! 
  zoom_user_email: String! 
  zoom_user_id: String! 
}

"""aggregate max on columns"""
type program_session_zoom_meetings_max_fields {
   created_by: Int
   end_time: timestamp
   event_id: Int
   id: Int
   join_link: String
   program_session_id: Int
   start_time: timestamp
   zoom_meeting_id: String
   zoom_user_email: String
   zoom_user_id: String
}

"""
order by max() on columns of table "program_session_zoom_meetings"
"""
input program_session_zoom_meetings_max_order_by {
  created_by: order_by
  end_time: order_by
  event_id: order_by
  id: order_by
  join_link: order_by
  program_session_id: order_by
  start_time: order_by
  zoom_meeting_id: order_by
  zoom_user_email: order_by
  zoom_user_id: order_by
}

"""aggregate min on columns"""
type program_session_zoom_meetings_min_fields {
   created_by: Int
   end_time: timestamp
   event_id: Int
   id: Int
   join_link: String
   program_session_id: Int
   start_time: timestamp
   zoom_meeting_id: String
   zoom_user_email: String
   zoom_user_id: String
}

"""
order by min() on columns of table "program_session_zoom_meetings"
"""
input program_session_zoom_meetings_min_order_by {
  created_by: order_by
  end_time: order_by
  event_id: order_by
  id: order_by
  join_link: order_by
  program_session_id: order_by
  start_time: order_by
  zoom_meeting_id: order_by
  zoom_user_email: order_by
  zoom_user_id: order_by
}

"""
response of any mutation on the table "program_session_zoom_meetings"
"""
type program_session_zoom_meetings_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_session_zoom_meetings! ]! 
}

"""
on_conflict condition type for table "program_session_zoom_meetings"
"""
input program_session_zoom_meetings_on_conflict {
  constraint: program_session_zoom_meetings_constraint! 
  update_columns: [program_session_zoom_meetings_update_column! ]! 
  where: program_session_zoom_meetings_bool_exp
}

"""
Ordering options when selecting data from "program_session_zoom_meetings".
"""
input program_session_zoom_meetings_order_by {
  created_by: order_by
  end_time: order_by
  event_id: order_by
  id: order_by
  join_link: order_by
  program_session_id: order_by
  start_time: order_by
  zoom_meeting_id: order_by
  zoom_user_email: order_by
  zoom_user_id: order_by
}

"""primary key columns input for table: program_session_zoom_meetings"""
input program_session_zoom_meetings_pk_columns_input {
  id: Int! 
}

"""
select columns of table "program_session_zoom_meetings"
"""
enum program_session_zoom_meetings_select_column {
  """column name"""
created_by
  """column name"""
end_time
  """column name"""
event_id
  """column name"""
id
  """column name"""
join_link
  """column name"""
program_session_id
  """column name"""
start_time
  """column name"""
zoom_meeting_id
  """column name"""
zoom_user_email
  """column name"""
zoom_user_id
}

"""
input type for updating data in table "program_session_zoom_meetings"
"""
input program_session_zoom_meetings_set_input {
  created_by: Int
  end_time: timestamp
  event_id: Int
  id: Int
  join_link: String
  program_session_id: Int
  start_time: timestamp
  zoom_meeting_id: String
  zoom_user_email: String
  zoom_user_id: String
}

"""aggregate stddev on columns"""
type program_session_zoom_meetings_stddev_fields {
   created_by: Float
   event_id: Float
   id: Float
   program_session_id: Float
}

"""
order by stddev() on columns of table "program_session_zoom_meetings"
"""
input program_session_zoom_meetings_stddev_order_by {
  created_by: order_by
  event_id: order_by
  id: order_by
  program_session_id: order_by
}

"""aggregate stddev_pop on columns"""
type program_session_zoom_meetings_stddev_pop_fields {
   created_by: Float
   event_id: Float
   id: Float
   program_session_id: Float
}

"""
order by stddev_pop() on columns of table "program_session_zoom_meetings"
"""
input program_session_zoom_meetings_stddev_pop_order_by {
  created_by: order_by
  event_id: order_by
  id: order_by
  program_session_id: order_by
}

"""aggregate stddev_samp on columns"""
type program_session_zoom_meetings_stddev_samp_fields {
   created_by: Float
   event_id: Float
   id: Float
   program_session_id: Float
}

"""
order by stddev_samp() on columns of table "program_session_zoom_meetings"
"""
input program_session_zoom_meetings_stddev_samp_order_by {
  created_by: order_by
  event_id: order_by
  id: order_by
  program_session_id: order_by
}

"""
Streaming cursor of the table "program_session_zoom_meetings"
"""
input program_session_zoom_meetings_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_session_zoom_meetings_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_session_zoom_meetings_stream_cursor_value_input {
  created_by: Int
  end_time: timestamp
  event_id: Int
  id: Int
  join_link: String
  program_session_id: Int
  start_time: timestamp
  zoom_meeting_id: String
  zoom_user_email: String
  zoom_user_id: String
}

"""aggregate sum on columns"""
type program_session_zoom_meetings_sum_fields {
   created_by: Int
   event_id: Int
   id: Int
   program_session_id: Int
}

"""
order by sum() on columns of table "program_session_zoom_meetings"
"""
input program_session_zoom_meetings_sum_order_by {
  created_by: order_by
  event_id: order_by
  id: order_by
  program_session_id: order_by
}

"""
update columns of table "program_session_zoom_meetings"
"""
enum program_session_zoom_meetings_update_column {
  """column name"""
created_by
  """column name"""
end_time
  """column name"""
event_id
  """column name"""
id
  """column name"""
join_link
  """column name"""
program_session_id
  """column name"""
start_time
  """column name"""
zoom_meeting_id
  """column name"""
zoom_user_email
  """column name"""
zoom_user_id
}

input program_session_zoom_meetings_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_session_zoom_meetings_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_session_zoom_meetings_set_input
  where: program_session_zoom_meetings_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_session_zoom_meetings_var_pop_fields {
   created_by: Float
   event_id: Float
   id: Float
   program_session_id: Float
}

"""
order by var_pop() on columns of table "program_session_zoom_meetings"
"""
input program_session_zoom_meetings_var_pop_order_by {
  created_by: order_by
  event_id: order_by
  id: order_by
  program_session_id: order_by
}

"""aggregate var_samp on columns"""
type program_session_zoom_meetings_var_samp_fields {
   created_by: Float
   event_id: Float
   id: Float
   program_session_id: Float
}

"""
order by var_samp() on columns of table "program_session_zoom_meetings"
"""
input program_session_zoom_meetings_var_samp_order_by {
  created_by: order_by
  event_id: order_by
  id: order_by
  program_session_id: order_by
}

"""aggregate variance on columns"""
type program_session_zoom_meetings_variance_fields {
   created_by: Float
   event_id: Float
   id: Float
   program_session_id: Float
}

"""
order by variance() on columns of table "program_session_zoom_meetings"
"""
input program_session_zoom_meetings_variance_order_by {
  created_by: order_by
  event_id: order_by
  id: order_by
  program_session_id: order_by
}

"""
columns and relationships of "program_sessions"
"""
type program_sessions {
  """An array relationship"""
 activities("""distinct select on columns"""
distinct_on: [program_session_activities_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_activities_order_by! ], """filter the rows returned"""
where: program_session_activities_bool_exp): [program_session_activities! ]! 
  """An aggregate relationship"""
 activities_aggregate("""distinct select on columns"""
distinct_on: [program_session_activities_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_activities_order_by! ], """filter the rows returned"""
where: program_session_activities_bool_exp): program_session_activities_aggregate! 
   admin_notes: String
  """An array relationship"""
 author_fields("""distinct select on columns"""
distinct_on: [author_fields_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_fields_order_by! ], """filter the rows returned"""
where: author_fields_bool_exp): [author_fields! ]! 
  """An aggregate relationship"""
 author_fields_aggregate("""distinct select on columns"""
distinct_on: [author_fields_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_fields_order_by! ], """filter the rows returned"""
where: author_fields_bool_exp): author_fields_aggregate! 
  """An array relationship"""
 authors("""distinct select on columns"""
distinct_on: [program_sessions_authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_authors_order_by! ], """filter the rows returned"""
where: program_sessions_authors_bool_exp): [program_sessions_authors! ]! 
  """An aggregate relationship"""
 authors_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_authors_order_by! ], """filter the rows returned"""
where: program_sessions_authors_bool_exp): program_sessions_authors_aggregate! 
  """An array relationship"""
 bookmarks("""distinct select on columns"""
distinct_on: [virtual_conference_session_bookmarks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_session_bookmarks_order_by! ], """filter the rows returned"""
where: virtual_conference_session_bookmarks_bool_exp): [virtual_conference_session_bookmarks! ]! 
  """An aggregate relationship"""
 bookmarks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_session_bookmarks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_session_bookmarks_order_by! ], """filter the rows returned"""
where: virtual_conference_session_bookmarks_bool_exp): virtual_conference_session_bookmarks_aggregate! 
  """An array relationship"""
 categories("""distinct select on columns"""
distinct_on: [program_sessions_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_categories_order_by! ], """filter the rows returned"""
where: program_sessions_categories_bool_exp): [program_sessions_categories! ]! 
  """An aggregate relationship"""
 categories_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_categories_order_by! ], """filter the rows returned"""
where: program_sessions_categories_bool_exp): program_sessions_categories_aggregate! 
   colour: String
   column_width: Int! 
   description: String
   end_time: time! 
  """An object relationship"""
 event: events! 
   event_id: Int! 
   id: Int! 
   name: String! 
  """An object relationship"""
 program_date: program_dates! 
   program_date_id: Int! 
  """An object relationship"""
 program_location: program_locations
   program_location_id: Int
  """An array relationship"""
 program_sessions_chairs("""distinct select on columns"""
distinct_on: [program_sessions_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_chairs_order_by! ], """filter the rows returned"""
where: program_sessions_chairs_bool_exp): [program_sessions_chairs! ]! 
  """An aggregate relationship"""
 program_sessions_chairs_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_chairs_order_by! ], """filter the rows returned"""
where: program_sessions_chairs_bool_exp): program_sessions_chairs_aggregate! 
  """An array relationship"""
 program_sessions_program_columns("""distinct select on columns"""
distinct_on: [program_sessions_program_columns_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_program_columns_order_by! ], """filter the rows returned"""
where: program_sessions_program_columns_bool_exp): [program_sessions_program_columns! ]! 
  """An aggregate relationship"""
 program_sessions_program_columns_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_program_columns_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_program_columns_order_by! ], """filter the rows returned"""
where: program_sessions_program_columns_bool_exp): program_sessions_program_columns_aggregate! 
  """An array relationship"""
 program_sessions_submissions("""distinct select on columns"""
distinct_on: [program_sessions_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_submissions_order_by! ], """filter the rows returned"""
where: program_sessions_submissions_bool_exp): [program_sessions_submissions! ]! 
  """An aggregate relationship"""
 program_sessions_submissions_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_submissions_order_by! ], """filter the rows returned"""
where: program_sessions_submissions_bool_exp): program_sessions_submissions_aggregate! 
  """An array relationship"""
 program_sessions_symposia("""distinct select on columns"""
distinct_on: [program_sessions_symposia_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_symposia_order_by! ], """filter the rows returned"""
where: program_sessions_symposia_bool_exp): [program_sessions_symposia! ]! 
  """An aggregate relationship"""
 program_sessions_symposia_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_symposia_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_symposia_order_by! ], """filter the rows returned"""
where: program_sessions_symposia_bool_exp): program_sessions_symposia_aggregate! 
  """An object relationship"""
 program_track: program_tracks
   program_track_id: Int
  """An object relationship"""
 program_type: program_types
   program_type_id: Int
   program_video_label: String
   program_video_link: String
  """An array relationship"""
 sponsors("""distinct select on columns"""
distinct_on: [program_session_sponsors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_sponsors_order_by! ], """filter the rows returned"""
where: program_session_sponsors_bool_exp): [program_session_sponsors! ]! 
  """An aggregate relationship"""
 sponsors_aggregate("""distinct select on columns"""
distinct_on: [program_session_sponsors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_sponsors_order_by! ], """filter the rows returned"""
where: program_session_sponsors_bool_exp): program_session_sponsors_aggregate! 
   start_time: time! 
   use_track_colour: Boolean! 
   use_type_colour: Boolean! 
  """An array relationship"""
 video_link("""distinct select on columns"""
distinct_on: [session_links_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_links_order_by! ], """filter the rows returned"""
where: session_links_bool_exp): [session_links! ]! 
  """An aggregate relationship"""
 video_link_aggregate("""distinct select on columns"""
distinct_on: [session_links_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_links_order_by! ], """filter the rows returned"""
where: session_links_bool_exp): session_links_aggregate! 
  """An array relationship"""
 views("""distinct select on columns"""
distinct_on: [virtual_conference_session_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_session_views_order_by! ], """filter the rows returned"""
where: virtual_conference_session_views_bool_exp): [virtual_conference_session_views! ]! 
  """An aggregate relationship"""
 views_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_session_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_session_views_order_by! ], """filter the rows returned"""
where: virtual_conference_session_views_bool_exp): virtual_conference_session_views_aggregate! 
  """An array relationship"""
 zoom_session("""distinct select on columns"""
distinct_on: [program_session_zoom_meetings_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_zoom_meetings_order_by! ], """filter the rows returned"""
where: program_session_zoom_meetings_bool_exp): [program_session_zoom_meetings! ]! 
  """An aggregate relationship"""
 zoom_session_aggregate("""distinct select on columns"""
distinct_on: [program_session_zoom_meetings_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_zoom_meetings_order_by! ], """filter the rows returned"""
where: program_session_zoom_meetings_bool_exp): program_session_zoom_meetings_aggregate! 
}

"""
aggregated selection of "program_sessions"
"""
type program_sessions_aggregate {
   aggregate: program_sessions_aggregate_fields
   nodes: [program_sessions! ]! 
}

input program_sessions_aggregate_bool_exp {
  bool_and: program_sessions_aggregate_bool_exp_bool_and
  bool_or: program_sessions_aggregate_bool_exp_bool_or
  count: program_sessions_aggregate_bool_exp_count
}

input program_sessions_aggregate_bool_exp_bool_and {
  arguments: program_sessions_select_column_program_sessions_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: program_sessions_bool_exp
  predicate: Boolean_comparison_exp! 
}

input program_sessions_aggregate_bool_exp_bool_or {
  arguments: program_sessions_select_column_program_sessions_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: program_sessions_bool_exp
  predicate: Boolean_comparison_exp! 
}

input program_sessions_aggregate_bool_exp_count {
  arguments: [program_sessions_select_column! ]
  distinct: Boolean
  filter: program_sessions_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "program_sessions"
"""
type program_sessions_aggregate_fields {
   avg: program_sessions_avg_fields
   count(columns: [program_sessions_select_column! ], distinct: Boolean): Int! 
   max: program_sessions_max_fields
   min: program_sessions_min_fields
   stddev: program_sessions_stddev_fields
   stddev_pop: program_sessions_stddev_pop_fields
   stddev_samp: program_sessions_stddev_samp_fields
   sum: program_sessions_sum_fields
   var_pop: program_sessions_var_pop_fields
   var_samp: program_sessions_var_samp_fields
   variance: program_sessions_variance_fields
}

"""
order by aggregate values of table "program_sessions"
"""
input program_sessions_aggregate_order_by {
  avg: program_sessions_avg_order_by
  count: order_by
  max: program_sessions_max_order_by
  min: program_sessions_min_order_by
  stddev: program_sessions_stddev_order_by
  stddev_pop: program_sessions_stddev_pop_order_by
  stddev_samp: program_sessions_stddev_samp_order_by
  sum: program_sessions_sum_order_by
  var_pop: program_sessions_var_pop_order_by
  var_samp: program_sessions_var_samp_order_by
  variance: program_sessions_variance_order_by
}

"""
input type for inserting array relation for remote table "program_sessions"
"""
input program_sessions_arr_rel_insert_input {
  data: [program_sessions_insert_input! ]! 
  """upsert condition"""
on_conflict: program_sessions_on_conflict
}

"""
columns and relationships of "program_sessions_authors"
"""
type program_sessions_authors {
  """An object relationship"""
 author: authors
   author_id: Int
  """An object relationship"""
 program_session: program_sessions
   program_session_id: Int
}

"""
aggregated selection of "program_sessions_authors"
"""
type program_sessions_authors_aggregate {
   aggregate: program_sessions_authors_aggregate_fields
   nodes: [program_sessions_authors! ]! 
}

input program_sessions_authors_aggregate_bool_exp {
  count: program_sessions_authors_aggregate_bool_exp_count
}

input program_sessions_authors_aggregate_bool_exp_count {
  arguments: [program_sessions_authors_select_column! ]
  distinct: Boolean
  filter: program_sessions_authors_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "program_sessions_authors"
"""
type program_sessions_authors_aggregate_fields {
   avg: program_sessions_authors_avg_fields
   count(columns: [program_sessions_authors_select_column! ], distinct: Boolean): Int! 
   max: program_sessions_authors_max_fields
   min: program_sessions_authors_min_fields
   stddev: program_sessions_authors_stddev_fields
   stddev_pop: program_sessions_authors_stddev_pop_fields
   stddev_samp: program_sessions_authors_stddev_samp_fields
   sum: program_sessions_authors_sum_fields
   var_pop: program_sessions_authors_var_pop_fields
   var_samp: program_sessions_authors_var_samp_fields
   variance: program_sessions_authors_variance_fields
}

"""
order by aggregate values of table "program_sessions_authors"
"""
input program_sessions_authors_aggregate_order_by {
  avg: program_sessions_authors_avg_order_by
  count: order_by
  max: program_sessions_authors_max_order_by
  min: program_sessions_authors_min_order_by
  stddev: program_sessions_authors_stddev_order_by
  stddev_pop: program_sessions_authors_stddev_pop_order_by
  stddev_samp: program_sessions_authors_stddev_samp_order_by
  sum: program_sessions_authors_sum_order_by
  var_pop: program_sessions_authors_var_pop_order_by
  var_samp: program_sessions_authors_var_samp_order_by
  variance: program_sessions_authors_variance_order_by
}

"""
input type for inserting array relation for remote table "program_sessions_authors"
"""
input program_sessions_authors_arr_rel_insert_input {
  data: [program_sessions_authors_insert_input! ]! 
}

"""aggregate avg on columns"""
type program_sessions_authors_avg_fields {
   author_id: Float
   program_session_id: Float
}

"""
order by avg() on columns of table "program_sessions_authors"
"""
input program_sessions_authors_avg_order_by {
  author_id: order_by
  program_session_id: order_by
}

"""
Boolean expression to filter rows from the table "program_sessions_authors". All fields are combined with a logical 'AND'.
"""
input program_sessions_authors_bool_exp {
  _and: [program_sessions_authors_bool_exp! ]
  _not: program_sessions_authors_bool_exp
  _or: [program_sessions_authors_bool_exp! ]
  author: authors_bool_exp
  author_id: Int_comparison_exp
  program_session: program_sessions_bool_exp
  program_session_id: Int_comparison_exp
}

"""
input type for inserting data into table "program_sessions_authors"
"""
input program_sessions_authors_insert_input {
  author: authors_obj_rel_insert_input
  author_id: Int
  program_session: program_sessions_obj_rel_insert_input
  program_session_id: Int
}

"""aggregate max on columns"""
type program_sessions_authors_max_fields {
   author_id: Int
   program_session_id: Int
}

"""
order by max() on columns of table "program_sessions_authors"
"""
input program_sessions_authors_max_order_by {
  author_id: order_by
  program_session_id: order_by
}

"""aggregate min on columns"""
type program_sessions_authors_min_fields {
   author_id: Int
   program_session_id: Int
}

"""
order by min() on columns of table "program_sessions_authors"
"""
input program_sessions_authors_min_order_by {
  author_id: order_by
  program_session_id: order_by
}

"""Ordering options when selecting data from "program_sessions_authors"."""
input program_sessions_authors_order_by {
  author: authors_order_by
  author_id: order_by
  program_session: program_sessions_order_by
  program_session_id: order_by
}

"""
select columns of table "program_sessions_authors"
"""
enum program_sessions_authors_select_column {
  """column name"""
author_id
  """column name"""
program_session_id
}

"""aggregate stddev on columns"""
type program_sessions_authors_stddev_fields {
   author_id: Float
   program_session_id: Float
}

"""
order by stddev() on columns of table "program_sessions_authors"
"""
input program_sessions_authors_stddev_order_by {
  author_id: order_by
  program_session_id: order_by
}

"""aggregate stddev_pop on columns"""
type program_sessions_authors_stddev_pop_fields {
   author_id: Float
   program_session_id: Float
}

"""
order by stddev_pop() on columns of table "program_sessions_authors"
"""
input program_sessions_authors_stddev_pop_order_by {
  author_id: order_by
  program_session_id: order_by
}

"""aggregate stddev_samp on columns"""
type program_sessions_authors_stddev_samp_fields {
   author_id: Float
   program_session_id: Float
}

"""
order by stddev_samp() on columns of table "program_sessions_authors"
"""
input program_sessions_authors_stddev_samp_order_by {
  author_id: order_by
  program_session_id: order_by
}

"""
Streaming cursor of the table "program_sessions_authors"
"""
input program_sessions_authors_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_sessions_authors_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_sessions_authors_stream_cursor_value_input {
  author_id: Int
  program_session_id: Int
}

"""aggregate sum on columns"""
type program_sessions_authors_sum_fields {
   author_id: Int
   program_session_id: Int
}

"""
order by sum() on columns of table "program_sessions_authors"
"""
input program_sessions_authors_sum_order_by {
  author_id: order_by
  program_session_id: order_by
}

"""aggregate var_pop on columns"""
type program_sessions_authors_var_pop_fields {
   author_id: Float
   program_session_id: Float
}

"""
order by var_pop() on columns of table "program_sessions_authors"
"""
input program_sessions_authors_var_pop_order_by {
  author_id: order_by
  program_session_id: order_by
}

"""aggregate var_samp on columns"""
type program_sessions_authors_var_samp_fields {
   author_id: Float
   program_session_id: Float
}

"""
order by var_samp() on columns of table "program_sessions_authors"
"""
input program_sessions_authors_var_samp_order_by {
  author_id: order_by
  program_session_id: order_by
}

"""aggregate variance on columns"""
type program_sessions_authors_variance_fields {
   author_id: Float
   program_session_id: Float
}

"""
order by variance() on columns of table "program_sessions_authors"
"""
input program_sessions_authors_variance_order_by {
  author_id: order_by
  program_session_id: order_by
}

"""aggregate avg on columns"""
type program_sessions_avg_fields {
   column_width: Float
   event_id: Float
   id: Float
   program_date_id: Float
   program_location_id: Float
   program_track_id: Float
   program_type_id: Float
}

"""
order by avg() on columns of table "program_sessions"
"""
input program_sessions_avg_order_by {
  column_width: order_by
  event_id: order_by
  id: order_by
  program_date_id: order_by
  program_location_id: order_by
  program_track_id: order_by
  program_type_id: order_by
}

"""
Boolean expression to filter rows from the table "program_sessions". All fields are combined with a logical 'AND'.
"""
input program_sessions_bool_exp {
  _and: [program_sessions_bool_exp! ]
  _not: program_sessions_bool_exp
  _or: [program_sessions_bool_exp! ]
  activities: program_session_activities_bool_exp
  activities_aggregate: program_session_activities_aggregate_bool_exp
  admin_notes: String_comparison_exp
  author_fields: author_fields_bool_exp
  author_fields_aggregate: author_fields_aggregate_bool_exp
  authors: program_sessions_authors_bool_exp
  authors_aggregate: program_sessions_authors_aggregate_bool_exp
  bookmarks: virtual_conference_session_bookmarks_bool_exp
  bookmarks_aggregate: virtual_conference_session_bookmarks_aggregate_bool_exp
  categories: program_sessions_categories_bool_exp
  categories_aggregate: program_sessions_categories_aggregate_bool_exp
  colour: String_comparison_exp
  column_width: Int_comparison_exp
  description: String_comparison_exp
  end_time: time_comparison_exp
  event: events_bool_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  program_date: program_dates_bool_exp
  program_date_id: Int_comparison_exp
  program_location: program_locations_bool_exp
  program_location_id: Int_comparison_exp
  program_sessions_chairs: program_sessions_chairs_bool_exp
  program_sessions_chairs_aggregate: program_sessions_chairs_aggregate_bool_exp
  program_sessions_program_columns: program_sessions_program_columns_bool_exp
  program_sessions_program_columns_aggregate: program_sessions_program_columns_aggregate_bool_exp
  program_sessions_submissions: program_sessions_submissions_bool_exp
  program_sessions_submissions_aggregate: program_sessions_submissions_aggregate_bool_exp
  program_sessions_symposia: program_sessions_symposia_bool_exp
  program_sessions_symposia_aggregate: program_sessions_symposia_aggregate_bool_exp
  program_track: program_tracks_bool_exp
  program_track_id: Int_comparison_exp
  program_type: program_types_bool_exp
  program_type_id: Int_comparison_exp
  program_video_label: String_comparison_exp
  program_video_link: String_comparison_exp
  sponsors: program_session_sponsors_bool_exp
  sponsors_aggregate: program_session_sponsors_aggregate_bool_exp
  start_time: time_comparison_exp
  use_track_colour: Boolean_comparison_exp
  use_type_colour: Boolean_comparison_exp
  video_link: session_links_bool_exp
  video_link_aggregate: session_links_aggregate_bool_exp
  views: virtual_conference_session_views_bool_exp
  views_aggregate: virtual_conference_session_views_aggregate_bool_exp
  zoom_session: program_session_zoom_meetings_bool_exp
  zoom_session_aggregate: program_session_zoom_meetings_aggregate_bool_exp
}

"""
columns and relationships of "program_sessions_categories"
"""
type program_sessions_categories {
  """An object relationship"""
 category: program_session_categories! 
   created_at: timestamptz! 
   created_by: Int
   id: Int! 
   program_session_category_id: Int! 
   program_session_id: Int! 
  """An object relationship"""
 session: program_sessions! 
   updated_at: timestamptz! 
   updated_by: Int
}

"""
aggregated selection of "program_sessions_categories"
"""
type program_sessions_categories_aggregate {
   aggregate: program_sessions_categories_aggregate_fields
   nodes: [program_sessions_categories! ]! 
}

input program_sessions_categories_aggregate_bool_exp {
  count: program_sessions_categories_aggregate_bool_exp_count
}

input program_sessions_categories_aggregate_bool_exp_count {
  arguments: [program_sessions_categories_select_column! ]
  distinct: Boolean
  filter: program_sessions_categories_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "program_sessions_categories"
"""
type program_sessions_categories_aggregate_fields {
   avg: program_sessions_categories_avg_fields
   count(columns: [program_sessions_categories_select_column! ], distinct: Boolean): Int! 
   max: program_sessions_categories_max_fields
   min: program_sessions_categories_min_fields
   stddev: program_sessions_categories_stddev_fields
   stddev_pop: program_sessions_categories_stddev_pop_fields
   stddev_samp: program_sessions_categories_stddev_samp_fields
   sum: program_sessions_categories_sum_fields
   var_pop: program_sessions_categories_var_pop_fields
   var_samp: program_sessions_categories_var_samp_fields
   variance: program_sessions_categories_variance_fields
}

"""
order by aggregate values of table "program_sessions_categories"
"""
input program_sessions_categories_aggregate_order_by {
  avg: program_sessions_categories_avg_order_by
  count: order_by
  max: program_sessions_categories_max_order_by
  min: program_sessions_categories_min_order_by
  stddev: program_sessions_categories_stddev_order_by
  stddev_pop: program_sessions_categories_stddev_pop_order_by
  stddev_samp: program_sessions_categories_stddev_samp_order_by
  sum: program_sessions_categories_sum_order_by
  var_pop: program_sessions_categories_var_pop_order_by
  var_samp: program_sessions_categories_var_samp_order_by
  variance: program_sessions_categories_variance_order_by
}

"""
input type for inserting array relation for remote table "program_sessions_categories"
"""
input program_sessions_categories_arr_rel_insert_input {
  data: [program_sessions_categories_insert_input! ]! 
  """upsert condition"""
on_conflict: program_sessions_categories_on_conflict
}

"""aggregate avg on columns"""
type program_sessions_categories_avg_fields {
   created_by: Float
   id: Float
   program_session_category_id: Float
   program_session_id: Float
   updated_by: Float
}

"""
order by avg() on columns of table "program_sessions_categories"
"""
input program_sessions_categories_avg_order_by {
  created_by: order_by
  id: order_by
  program_session_category_id: order_by
  program_session_id: order_by
  updated_by: order_by
}

"""
Boolean expression to filter rows from the table "program_sessions_categories". All fields are combined with a logical 'AND'.
"""
input program_sessions_categories_bool_exp {
  _and: [program_sessions_categories_bool_exp! ]
  _not: program_sessions_categories_bool_exp
  _or: [program_sessions_categories_bool_exp! ]
  category: program_session_categories_bool_exp
  created_at: timestamptz_comparison_exp
  created_by: Int_comparison_exp
  id: Int_comparison_exp
  program_session_category_id: Int_comparison_exp
  program_session_id: Int_comparison_exp
  session: program_sessions_bool_exp
  updated_at: timestamptz_comparison_exp
  updated_by: Int_comparison_exp
}

"""
unique or primary key constraints on table "program_sessions_categories"
"""
enum program_sessions_categories_constraint {
  """
  unique or primary key constraint on columns "id"
  """
program_sessions_categories_pkey
  """
  unique or primary key constraint on columns "program_session_id", "program_session_category_id"
  """
program_sessions_categories_program_session_id_program_sess_key
}

"""
input type for incrementing numeric columns in table "program_sessions_categories"
"""
input program_sessions_categories_inc_input {
  created_by: Int
  id: Int
  program_session_category_id: Int
  program_session_id: Int
  updated_by: Int
}

"""
input type for inserting data into table "program_sessions_categories"
"""
input program_sessions_categories_insert_input {
  category: program_session_categories_obj_rel_insert_input
  created_at: timestamptz! 
  created_by: Int
  id: Int! 
  program_session_category_id: Int! 
  program_session_id: Int! 
  session: program_sessions_obj_rel_insert_input
  updated_at: timestamptz! 
  updated_by: Int
}

"""aggregate max on columns"""
type program_sessions_categories_max_fields {
   created_at: timestamptz
   created_by: Int
   id: Int
   program_session_category_id: Int
   program_session_id: Int
   updated_at: timestamptz
   updated_by: Int
}

"""
order by max() on columns of table "program_sessions_categories"
"""
input program_sessions_categories_max_order_by {
  created_at: order_by
  created_by: order_by
  id: order_by
  program_session_category_id: order_by
  program_session_id: order_by
  updated_at: order_by
  updated_by: order_by
}

"""aggregate min on columns"""
type program_sessions_categories_min_fields {
   created_at: timestamptz
   created_by: Int
   id: Int
   program_session_category_id: Int
   program_session_id: Int
   updated_at: timestamptz
   updated_by: Int
}

"""
order by min() on columns of table "program_sessions_categories"
"""
input program_sessions_categories_min_order_by {
  created_at: order_by
  created_by: order_by
  id: order_by
  program_session_category_id: order_by
  program_session_id: order_by
  updated_at: order_by
  updated_by: order_by
}

"""
response of any mutation on the table "program_sessions_categories"
"""
type program_sessions_categories_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_sessions_categories! ]! 
}

"""
on_conflict condition type for table "program_sessions_categories"
"""
input program_sessions_categories_on_conflict {
  constraint: program_sessions_categories_constraint! 
  update_columns: [program_sessions_categories_update_column! ]! 
  where: program_sessions_categories_bool_exp
}

"""
Ordering options when selecting data from "program_sessions_categories".
"""
input program_sessions_categories_order_by {
  category: program_session_categories_order_by
  created_at: order_by
  created_by: order_by
  id: order_by
  program_session_category_id: order_by
  program_session_id: order_by
  session: program_sessions_order_by
  updated_at: order_by
  updated_by: order_by
}

"""primary key columns input for table: program_sessions_categories"""
input program_sessions_categories_pk_columns_input {
  id: Int! 
}

"""
select columns of table "program_sessions_categories"
"""
enum program_sessions_categories_select_column {
  """column name"""
created_at
  """column name"""
created_by
  """column name"""
id
  """column name"""
program_session_category_id
  """column name"""
program_session_id
  """column name"""
updated_at
  """column name"""
updated_by
}

"""
input type for updating data in table "program_sessions_categories"
"""
input program_sessions_categories_set_input {
  created_at: timestamptz
  created_by: Int
  id: Int
  program_session_category_id: Int
  program_session_id: Int
  updated_at: timestamptz
  updated_by: Int
}

"""aggregate stddev on columns"""
type program_sessions_categories_stddev_fields {
   created_by: Float
   id: Float
   program_session_category_id: Float
   program_session_id: Float
   updated_by: Float
}

"""
order by stddev() on columns of table "program_sessions_categories"
"""
input program_sessions_categories_stddev_order_by {
  created_by: order_by
  id: order_by
  program_session_category_id: order_by
  program_session_id: order_by
  updated_by: order_by
}

"""aggregate stddev_pop on columns"""
type program_sessions_categories_stddev_pop_fields {
   created_by: Float
   id: Float
   program_session_category_id: Float
   program_session_id: Float
   updated_by: Float
}

"""
order by stddev_pop() on columns of table "program_sessions_categories"
"""
input program_sessions_categories_stddev_pop_order_by {
  created_by: order_by
  id: order_by
  program_session_category_id: order_by
  program_session_id: order_by
  updated_by: order_by
}

"""aggregate stddev_samp on columns"""
type program_sessions_categories_stddev_samp_fields {
   created_by: Float
   id: Float
   program_session_category_id: Float
   program_session_id: Float
   updated_by: Float
}

"""
order by stddev_samp() on columns of table "program_sessions_categories"
"""
input program_sessions_categories_stddev_samp_order_by {
  created_by: order_by
  id: order_by
  program_session_category_id: order_by
  program_session_id: order_by
  updated_by: order_by
}

"""
Streaming cursor of the table "program_sessions_categories"
"""
input program_sessions_categories_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_sessions_categories_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_sessions_categories_stream_cursor_value_input {
  created_at: timestamptz
  created_by: Int
  id: Int
  program_session_category_id: Int
  program_session_id: Int
  updated_at: timestamptz
  updated_by: Int
}

"""aggregate sum on columns"""
type program_sessions_categories_sum_fields {
   created_by: Int
   id: Int
   program_session_category_id: Int
   program_session_id: Int
   updated_by: Int
}

"""
order by sum() on columns of table "program_sessions_categories"
"""
input program_sessions_categories_sum_order_by {
  created_by: order_by
  id: order_by
  program_session_category_id: order_by
  program_session_id: order_by
  updated_by: order_by
}

"""
update columns of table "program_sessions_categories"
"""
enum program_sessions_categories_update_column {
  """column name"""
created_at
  """column name"""
created_by
  """column name"""
id
  """column name"""
program_session_category_id
  """column name"""
program_session_id
  """column name"""
updated_at
  """column name"""
updated_by
}

input program_sessions_categories_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_sessions_categories_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_sessions_categories_set_input
  where: program_sessions_categories_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_sessions_categories_var_pop_fields {
   created_by: Float
   id: Float
   program_session_category_id: Float
   program_session_id: Float
   updated_by: Float
}

"""
order by var_pop() on columns of table "program_sessions_categories"
"""
input program_sessions_categories_var_pop_order_by {
  created_by: order_by
  id: order_by
  program_session_category_id: order_by
  program_session_id: order_by
  updated_by: order_by
}

"""aggregate var_samp on columns"""
type program_sessions_categories_var_samp_fields {
   created_by: Float
   id: Float
   program_session_category_id: Float
   program_session_id: Float
   updated_by: Float
}

"""
order by var_samp() on columns of table "program_sessions_categories"
"""
input program_sessions_categories_var_samp_order_by {
  created_by: order_by
  id: order_by
  program_session_category_id: order_by
  program_session_id: order_by
  updated_by: order_by
}

"""aggregate variance on columns"""
type program_sessions_categories_variance_fields {
   created_by: Float
   id: Float
   program_session_category_id: Float
   program_session_id: Float
   updated_by: Float
}

"""
order by variance() on columns of table "program_sessions_categories"
"""
input program_sessions_categories_variance_order_by {
  created_by: order_by
  id: order_by
  program_session_category_id: order_by
  program_session_id: order_by
  updated_by: order_by
}

"""
columns and relationships of "program_sessions_chairs"
"""
type program_sessions_chairs {
   id: Int! 
  """An object relationship"""
 program_session: program_sessions! 
   program_session_id: Int! 
  """An object relationship"""
 session_chair: session_chairs! 
   session_chair_id: Int! 
}

"""
aggregated selection of "program_sessions_chairs"
"""
type program_sessions_chairs_aggregate {
   aggregate: program_sessions_chairs_aggregate_fields
   nodes: [program_sessions_chairs! ]! 
}

input program_sessions_chairs_aggregate_bool_exp {
  count: program_sessions_chairs_aggregate_bool_exp_count
}

input program_sessions_chairs_aggregate_bool_exp_count {
  arguments: [program_sessions_chairs_select_column! ]
  distinct: Boolean
  filter: program_sessions_chairs_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "program_sessions_chairs"
"""
type program_sessions_chairs_aggregate_fields {
   avg: program_sessions_chairs_avg_fields
   count(columns: [program_sessions_chairs_select_column! ], distinct: Boolean): Int! 
   max: program_sessions_chairs_max_fields
   min: program_sessions_chairs_min_fields
   stddev: program_sessions_chairs_stddev_fields
   stddev_pop: program_sessions_chairs_stddev_pop_fields
   stddev_samp: program_sessions_chairs_stddev_samp_fields
   sum: program_sessions_chairs_sum_fields
   var_pop: program_sessions_chairs_var_pop_fields
   var_samp: program_sessions_chairs_var_samp_fields
   variance: program_sessions_chairs_variance_fields
}

"""
order by aggregate values of table "program_sessions_chairs"
"""
input program_sessions_chairs_aggregate_order_by {
  avg: program_sessions_chairs_avg_order_by
  count: order_by
  max: program_sessions_chairs_max_order_by
  min: program_sessions_chairs_min_order_by
  stddev: program_sessions_chairs_stddev_order_by
  stddev_pop: program_sessions_chairs_stddev_pop_order_by
  stddev_samp: program_sessions_chairs_stddev_samp_order_by
  sum: program_sessions_chairs_sum_order_by
  var_pop: program_sessions_chairs_var_pop_order_by
  var_samp: program_sessions_chairs_var_samp_order_by
  variance: program_sessions_chairs_variance_order_by
}

"""
input type for inserting array relation for remote table "program_sessions_chairs"
"""
input program_sessions_chairs_arr_rel_insert_input {
  data: [program_sessions_chairs_insert_input! ]! 
  """upsert condition"""
on_conflict: program_sessions_chairs_on_conflict
}

"""aggregate avg on columns"""
type program_sessions_chairs_avg_fields {
   id: Float
   program_session_id: Float
   session_chair_id: Float
}

"""
order by avg() on columns of table "program_sessions_chairs"
"""
input program_sessions_chairs_avg_order_by {
  id: order_by
  program_session_id: order_by
  session_chair_id: order_by
}

"""
Boolean expression to filter rows from the table "program_sessions_chairs". All fields are combined with a logical 'AND'.
"""
input program_sessions_chairs_bool_exp {
  _and: [program_sessions_chairs_bool_exp! ]
  _not: program_sessions_chairs_bool_exp
  _or: [program_sessions_chairs_bool_exp! ]
  id: Int_comparison_exp
  program_session: program_sessions_bool_exp
  program_session_id: Int_comparison_exp
  session_chair: session_chairs_bool_exp
  session_chair_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "program_sessions_chairs"
"""
enum program_sessions_chairs_constraint {
  """
  unique or primary key constraint on columns "id"
  """
program_sessions_chairs_pkey
}

"""
input type for incrementing numeric columns in table "program_sessions_chairs"
"""
input program_sessions_chairs_inc_input {
  id: Int
  program_session_id: Int
  session_chair_id: Int
}

"""
input type for inserting data into table "program_sessions_chairs"
"""
input program_sessions_chairs_insert_input {
  id: Int! 
  program_session: program_sessions_obj_rel_insert_input
  program_session_id: Int! 
  session_chair: session_chairs_obj_rel_insert_input
  session_chair_id: Int! 
}

"""aggregate max on columns"""
type program_sessions_chairs_max_fields {
   id: Int
   program_session_id: Int
   session_chair_id: Int
}

"""
order by max() on columns of table "program_sessions_chairs"
"""
input program_sessions_chairs_max_order_by {
  id: order_by
  program_session_id: order_by
  session_chair_id: order_by
}

"""aggregate min on columns"""
type program_sessions_chairs_min_fields {
   id: Int
   program_session_id: Int
   session_chair_id: Int
}

"""
order by min() on columns of table "program_sessions_chairs"
"""
input program_sessions_chairs_min_order_by {
  id: order_by
  program_session_id: order_by
  session_chair_id: order_by
}

"""
response of any mutation on the table "program_sessions_chairs"
"""
type program_sessions_chairs_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_sessions_chairs! ]! 
}

"""
on_conflict condition type for table "program_sessions_chairs"
"""
input program_sessions_chairs_on_conflict {
  constraint: program_sessions_chairs_constraint! 
  update_columns: [program_sessions_chairs_update_column! ]! 
  where: program_sessions_chairs_bool_exp
}

"""Ordering options when selecting data from "program_sessions_chairs"."""
input program_sessions_chairs_order_by {
  id: order_by
  program_session: program_sessions_order_by
  program_session_id: order_by
  session_chair: session_chairs_order_by
  session_chair_id: order_by
}

"""primary key columns input for table: program_sessions_chairs"""
input program_sessions_chairs_pk_columns_input {
  id: Int! 
}

"""
select columns of table "program_sessions_chairs"
"""
enum program_sessions_chairs_select_column {
  """column name"""
id
  """column name"""
program_session_id
  """column name"""
session_chair_id
}

"""
input type for updating data in table "program_sessions_chairs"
"""
input program_sessions_chairs_set_input {
  id: Int
  program_session_id: Int
  session_chair_id: Int
}

"""aggregate stddev on columns"""
type program_sessions_chairs_stddev_fields {
   id: Float
   program_session_id: Float
   session_chair_id: Float
}

"""
order by stddev() on columns of table "program_sessions_chairs"
"""
input program_sessions_chairs_stddev_order_by {
  id: order_by
  program_session_id: order_by
  session_chair_id: order_by
}

"""aggregate stddev_pop on columns"""
type program_sessions_chairs_stddev_pop_fields {
   id: Float
   program_session_id: Float
   session_chair_id: Float
}

"""
order by stddev_pop() on columns of table "program_sessions_chairs"
"""
input program_sessions_chairs_stddev_pop_order_by {
  id: order_by
  program_session_id: order_by
  session_chair_id: order_by
}

"""aggregate stddev_samp on columns"""
type program_sessions_chairs_stddev_samp_fields {
   id: Float
   program_session_id: Float
   session_chair_id: Float
}

"""
order by stddev_samp() on columns of table "program_sessions_chairs"
"""
input program_sessions_chairs_stddev_samp_order_by {
  id: order_by
  program_session_id: order_by
  session_chair_id: order_by
}

"""
Streaming cursor of the table "program_sessions_chairs"
"""
input program_sessions_chairs_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_sessions_chairs_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_sessions_chairs_stream_cursor_value_input {
  id: Int
  program_session_id: Int
  session_chair_id: Int
}

"""aggregate sum on columns"""
type program_sessions_chairs_sum_fields {
   id: Int
   program_session_id: Int
   session_chair_id: Int
}

"""
order by sum() on columns of table "program_sessions_chairs"
"""
input program_sessions_chairs_sum_order_by {
  id: order_by
  program_session_id: order_by
  session_chair_id: order_by
}

"""
update columns of table "program_sessions_chairs"
"""
enum program_sessions_chairs_update_column {
  """column name"""
id
  """column name"""
program_session_id
  """column name"""
session_chair_id
}

input program_sessions_chairs_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_sessions_chairs_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_sessions_chairs_set_input
  where: program_sessions_chairs_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_sessions_chairs_var_pop_fields {
   id: Float
   program_session_id: Float
   session_chair_id: Float
}

"""
order by var_pop() on columns of table "program_sessions_chairs"
"""
input program_sessions_chairs_var_pop_order_by {
  id: order_by
  program_session_id: order_by
  session_chair_id: order_by
}

"""aggregate var_samp on columns"""
type program_sessions_chairs_var_samp_fields {
   id: Float
   program_session_id: Float
   session_chair_id: Float
}

"""
order by var_samp() on columns of table "program_sessions_chairs"
"""
input program_sessions_chairs_var_samp_order_by {
  id: order_by
  program_session_id: order_by
  session_chair_id: order_by
}

"""aggregate variance on columns"""
type program_sessions_chairs_variance_fields {
   id: Float
   program_session_id: Float
   session_chair_id: Float
}

"""
order by variance() on columns of table "program_sessions_chairs"
"""
input program_sessions_chairs_variance_order_by {
  id: order_by
  program_session_id: order_by
  session_chair_id: order_by
}

"""
columns and relationships of "program_sessions_comments"
"""
type program_sessions_comments {
   approved: Boolean
  """An object relationship"""
 badge: virtual_conference_name_badge
   comment: String! 
  """An array relationship"""
 comments_on_same_session("""distinct select on columns"""
distinct_on: [program_sessions_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_comments_order_by! ], """filter the rows returned"""
where: program_sessions_comments_bool_exp): [program_sessions_comments! ]! 
  """An aggregate relationship"""
 comments_on_same_session_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_comments_order_by! ], """filter the rows returned"""
where: program_sessions_comments_bool_exp): program_sessions_comments_aggregate! 
   created_at: timestamp! 
   event_id: Int! 
   hide: Boolean! 
   program_session_id: Int! 
  """An array relationship"""
 read_by_user("""distinct select on columns"""
distinct_on: [read_by_user_program_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [read_by_user_program_comments_order_by! ], """filter the rows returned"""
where: read_by_user_program_comments_bool_exp): [read_by_user_program_comments! ]! 
  """An aggregate relationship"""
 read_by_user_aggregate("""distinct select on columns"""
distinct_on: [read_by_user_program_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [read_by_user_program_comments_order_by! ], """filter the rows returned"""
where: read_by_user_program_comments_bool_exp): read_by_user_program_comments_aggregate! 
   reason_reported: _text
  """An array relationship"""
 replies("""distinct select on columns"""
distinct_on: [program_sessions_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_comments_order_by! ], """filter the rows returned"""
where: program_sessions_comments_bool_exp): [program_sessions_comments! ]! 
  """An aggregate relationship"""
 replies_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_comments_order_by! ], """filter the rows returned"""
where: program_sessions_comments_bool_exp): program_sessions_comments_aggregate! 
   reply_to: Int
  """An object relationship"""
 replying_to: program_sessions_comments
  """An object relationship"""
 session: program_sessions! 
   session_comment_id: Int! 
   timestamp: bigint! 
  """An object relationship"""
 user: users! 
   user_id: Int! 
}

"""
aggregated selection of "program_sessions_comments"
"""
type program_sessions_comments_aggregate {
   aggregate: program_sessions_comments_aggregate_fields
   nodes: [program_sessions_comments! ]! 
}

input program_sessions_comments_aggregate_bool_exp {
  bool_and: program_sessions_comments_aggregate_bool_exp_bool_and
  bool_or: program_sessions_comments_aggregate_bool_exp_bool_or
  count: program_sessions_comments_aggregate_bool_exp_count
}

input program_sessions_comments_aggregate_bool_exp_bool_and {
  arguments: program_sessions_comments_select_column_program_sessions_comments_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: program_sessions_comments_bool_exp
  predicate: Boolean_comparison_exp! 
}

input program_sessions_comments_aggregate_bool_exp_bool_or {
  arguments: program_sessions_comments_select_column_program_sessions_comments_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: program_sessions_comments_bool_exp
  predicate: Boolean_comparison_exp! 
}

input program_sessions_comments_aggregate_bool_exp_count {
  arguments: [program_sessions_comments_select_column! ]
  distinct: Boolean
  filter: program_sessions_comments_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "program_sessions_comments"
"""
type program_sessions_comments_aggregate_fields {
   avg: program_sessions_comments_avg_fields
   count(columns: [program_sessions_comments_select_column! ], distinct: Boolean): Int! 
   max: program_sessions_comments_max_fields
   min: program_sessions_comments_min_fields
   stddev: program_sessions_comments_stddev_fields
   stddev_pop: program_sessions_comments_stddev_pop_fields
   stddev_samp: program_sessions_comments_stddev_samp_fields
   sum: program_sessions_comments_sum_fields
   var_pop: program_sessions_comments_var_pop_fields
   var_samp: program_sessions_comments_var_samp_fields
   variance: program_sessions_comments_variance_fields
}

"""
order by aggregate values of table "program_sessions_comments"
"""
input program_sessions_comments_aggregate_order_by {
  avg: program_sessions_comments_avg_order_by
  count: order_by
  max: program_sessions_comments_max_order_by
  min: program_sessions_comments_min_order_by
  stddev: program_sessions_comments_stddev_order_by
  stddev_pop: program_sessions_comments_stddev_pop_order_by
  stddev_samp: program_sessions_comments_stddev_samp_order_by
  sum: program_sessions_comments_sum_order_by
  var_pop: program_sessions_comments_var_pop_order_by
  var_samp: program_sessions_comments_var_samp_order_by
  variance: program_sessions_comments_variance_order_by
}

"""
input type for inserting array relation for remote table "program_sessions_comments"
"""
input program_sessions_comments_arr_rel_insert_input {
  data: [program_sessions_comments_insert_input! ]! 
  """upsert condition"""
on_conflict: program_sessions_comments_on_conflict
}

"""aggregate avg on columns"""
type program_sessions_comments_avg_fields {
   event_id: Float
   program_session_id: Float
   reply_to: Float
   session_comment_id: Float
   timestamp: Float
   user_id: Float
}

"""
order by avg() on columns of table "program_sessions_comments"
"""
input program_sessions_comments_avg_order_by {
  event_id: order_by
  program_session_id: order_by
  reply_to: order_by
  session_comment_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "program_sessions_comments". All fields are combined with a logical 'AND'.
"""
input program_sessions_comments_bool_exp {
  _and: [program_sessions_comments_bool_exp! ]
  _not: program_sessions_comments_bool_exp
  _or: [program_sessions_comments_bool_exp! ]
  approved: Boolean_comparison_exp
  badge: virtual_conference_name_badge_bool_exp
  comment: String_comparison_exp
  comments_on_same_session: program_sessions_comments_bool_exp
  comments_on_same_session_aggregate: program_sessions_comments_aggregate_bool_exp
  created_at: timestamp_comparison_exp
  event_id: Int_comparison_exp
  hide: Boolean_comparison_exp
  program_session_id: Int_comparison_exp
  read_by_user: read_by_user_program_comments_bool_exp
  read_by_user_aggregate: read_by_user_program_comments_aggregate_bool_exp
  reason_reported: _text_comparison_exp
  replies: program_sessions_comments_bool_exp
  replies_aggregate: program_sessions_comments_aggregate_bool_exp
  reply_to: Int_comparison_exp
  replying_to: program_sessions_comments_bool_exp
  session: program_sessions_bool_exp
  session_comment_id: Int_comparison_exp
  timestamp: bigint_comparison_exp
  user: users_bool_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "program_sessions_comments"
"""
enum program_sessions_comments_constraint {
  """
  unique or primary key constraint on columns "session_comment_id"
  """
program_sessions_comments_pkey
}

"""
input type for incrementing numeric columns in table "program_sessions_comments"
"""
input program_sessions_comments_inc_input {
  event_id: Int
  program_session_id: Int
  reply_to: Int
  session_comment_id: Int
  timestamp: bigint
  user_id: Int
}

"""
input type for inserting data into table "program_sessions_comments"
"""
input program_sessions_comments_insert_input {
  approved: Boolean
  badge: virtual_conference_name_badge_obj_rel_insert_input
  comment: String! 
  comments_on_same_session: program_sessions_comments_arr_rel_insert_input
  created_at: timestamp! 
  event_id: Int! 
  hide: Boolean! 
  program_session_id: Int! 
  read_by_user: read_by_user_program_comments_arr_rel_insert_input
  reason_reported: _text
  replies: program_sessions_comments_arr_rel_insert_input
  reply_to: Int
  replying_to: program_sessions_comments_obj_rel_insert_input
  session: program_sessions_obj_rel_insert_input
  session_comment_id: Int! 
  timestamp: bigint! 
  user: users_obj_rel_insert_input
  user_id: Int! 
}

"""aggregate max on columns"""
type program_sessions_comments_max_fields {
   comment: String
   created_at: timestamp
   event_id: Int
   program_session_id: Int
   reply_to: Int
   session_comment_id: Int
   timestamp: bigint
   user_id: Int
}

"""
order by max() on columns of table "program_sessions_comments"
"""
input program_sessions_comments_max_order_by {
  comment: order_by
  created_at: order_by
  event_id: order_by
  program_session_id: order_by
  reply_to: order_by
  session_comment_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type program_sessions_comments_min_fields {
   comment: String
   created_at: timestamp
   event_id: Int
   program_session_id: Int
   reply_to: Int
   session_comment_id: Int
   timestamp: bigint
   user_id: Int
}

"""
order by min() on columns of table "program_sessions_comments"
"""
input program_sessions_comments_min_order_by {
  comment: order_by
  created_at: order_by
  event_id: order_by
  program_session_id: order_by
  reply_to: order_by
  session_comment_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""
response of any mutation on the table "program_sessions_comments"
"""
type program_sessions_comments_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_sessions_comments! ]! 
}

"""
input type for inserting object relation for remote table "program_sessions_comments"
"""
input program_sessions_comments_obj_rel_insert_input {
  data: program_sessions_comments_insert_input! 
  """upsert condition"""
on_conflict: program_sessions_comments_on_conflict
}

"""
on_conflict condition type for table "program_sessions_comments"
"""
input program_sessions_comments_on_conflict {
  constraint: program_sessions_comments_constraint! 
  update_columns: [program_sessions_comments_update_column! ]! 
  where: program_sessions_comments_bool_exp
}

"""Ordering options when selecting data from "program_sessions_comments"."""
input program_sessions_comments_order_by {
  approved: order_by
  badge: virtual_conference_name_badge_order_by
  comment: order_by
  comments_on_same_session_aggregate: program_sessions_comments_aggregate_order_by
  created_at: order_by
  event_id: order_by
  hide: order_by
  program_session_id: order_by
  read_by_user_aggregate: read_by_user_program_comments_aggregate_order_by
  reason_reported: order_by
  replies_aggregate: program_sessions_comments_aggregate_order_by
  reply_to: order_by
  replying_to: program_sessions_comments_order_by
  session: program_sessions_order_by
  session_comment_id: order_by
  timestamp: order_by
  user: users_order_by
  user_id: order_by
}

"""primary key columns input for table: program_sessions_comments"""
input program_sessions_comments_pk_columns_input {
  session_comment_id: Int! 
}

"""
select columns of table "program_sessions_comments"
"""
enum program_sessions_comments_select_column {
  """column name"""
approved
  """column name"""
comment
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
hide
  """column name"""
program_session_id
  """column name"""
reason_reported
  """column name"""
reply_to
  """column name"""
session_comment_id
  """column name"""
timestamp
  """column name"""
user_id
}

"""
select "program_sessions_comments_aggregate_bool_exp_bool_and_arguments_columns" columns of table "program_sessions_comments"
"""
enum program_sessions_comments_select_column_program_sessions_comments_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
approved
  """column name"""
hide
}

"""
select "program_sessions_comments_aggregate_bool_exp_bool_or_arguments_columns" columns of table "program_sessions_comments"
"""
enum program_sessions_comments_select_column_program_sessions_comments_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
approved
  """column name"""
hide
}

"""
input type for updating data in table "program_sessions_comments"
"""
input program_sessions_comments_set_input {
  approved: Boolean
  comment: String
  created_at: timestamp
  event_id: Int
  hide: Boolean
  program_session_id: Int
  reason_reported: _text
  reply_to: Int
  session_comment_id: Int
  timestamp: bigint
  user_id: Int
}

"""aggregate stddev on columns"""
type program_sessions_comments_stddev_fields {
   event_id: Float
   program_session_id: Float
   reply_to: Float
   session_comment_id: Float
   timestamp: Float
   user_id: Float
}

"""
order by stddev() on columns of table "program_sessions_comments"
"""
input program_sessions_comments_stddev_order_by {
  event_id: order_by
  program_session_id: order_by
  reply_to: order_by
  session_comment_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type program_sessions_comments_stddev_pop_fields {
   event_id: Float
   program_session_id: Float
   reply_to: Float
   session_comment_id: Float
   timestamp: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "program_sessions_comments"
"""
input program_sessions_comments_stddev_pop_order_by {
  event_id: order_by
  program_session_id: order_by
  reply_to: order_by
  session_comment_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type program_sessions_comments_stddev_samp_fields {
   event_id: Float
   program_session_id: Float
   reply_to: Float
   session_comment_id: Float
   timestamp: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "program_sessions_comments"
"""
input program_sessions_comments_stddev_samp_order_by {
  event_id: order_by
  program_session_id: order_by
  reply_to: order_by
  session_comment_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "program_sessions_comments"
"""
input program_sessions_comments_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_sessions_comments_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_sessions_comments_stream_cursor_value_input {
  approved: Boolean
  comment: String
  created_at: timestamp
  event_id: Int
  hide: Boolean
  program_session_id: Int
  reason_reported: _text
  reply_to: Int
  session_comment_id: Int
  timestamp: bigint
  user_id: Int
}

"""aggregate sum on columns"""
type program_sessions_comments_sum_fields {
   event_id: Int
   program_session_id: Int
   reply_to: Int
   session_comment_id: Int
   timestamp: bigint
   user_id: Int
}

"""
order by sum() on columns of table "program_sessions_comments"
"""
input program_sessions_comments_sum_order_by {
  event_id: order_by
  program_session_id: order_by
  reply_to: order_by
  session_comment_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""
update columns of table "program_sessions_comments"
"""
enum program_sessions_comments_update_column {
  """column name"""
approved
  """column name"""
comment
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
hide
  """column name"""
program_session_id
  """column name"""
reason_reported
  """column name"""
reply_to
  """column name"""
session_comment_id
  """column name"""
timestamp
  """column name"""
user_id
}

input program_sessions_comments_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_sessions_comments_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_sessions_comments_set_input
  where: program_sessions_comments_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_sessions_comments_var_pop_fields {
   event_id: Float
   program_session_id: Float
   reply_to: Float
   session_comment_id: Float
   timestamp: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "program_sessions_comments"
"""
input program_sessions_comments_var_pop_order_by {
  event_id: order_by
  program_session_id: order_by
  reply_to: order_by
  session_comment_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type program_sessions_comments_var_samp_fields {
   event_id: Float
   program_session_id: Float
   reply_to: Float
   session_comment_id: Float
   timestamp: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "program_sessions_comments"
"""
input program_sessions_comments_var_samp_order_by {
  event_id: order_by
  program_session_id: order_by
  reply_to: order_by
  session_comment_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type program_sessions_comments_variance_fields {
   event_id: Float
   program_session_id: Float
   reply_to: Float
   session_comment_id: Float
   timestamp: Float
   user_id: Float
}

"""
order by variance() on columns of table "program_sessions_comments"
"""
input program_sessions_comments_variance_order_by {
  event_id: order_by
  program_session_id: order_by
  reply_to: order_by
  session_comment_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""
unique or primary key constraints on table "program_sessions"
"""
enum program_sessions_constraint {
  """
  unique or primary key constraint on columns "program_session_id"
  """
program_sessions_pkey
}

"""
input type for incrementing numeric columns in table "program_sessions"
"""
input program_sessions_inc_input {
  column_width: Int
  event_id: Int
  id: Int
  program_date_id: Int
  program_location_id: Int
  program_track_id: Int
  program_type_id: Int
}

"""
input type for inserting data into table "program_sessions"
"""
input program_sessions_insert_input {
  activities: program_session_activities_arr_rel_insert_input
  admin_notes: String
  author_fields: author_fields_arr_rel_insert_input
  authors: program_sessions_authors_arr_rel_insert_input
  bookmarks: virtual_conference_session_bookmarks_arr_rel_insert_input
  categories: program_sessions_categories_arr_rel_insert_input
  colour: String
  column_width: Int! 
  description: String
  end_time: time! 
  event: events_obj_rel_insert_input
  event_id: Int! 
  id: Int
  name: String! 
  program_date: program_dates_obj_rel_insert_input
  program_date_id: Int! 
  program_location: program_locations_obj_rel_insert_input
  program_location_id: Int
  program_sessions_chairs: program_sessions_chairs_arr_rel_insert_input
  program_sessions_program_columns: program_sessions_program_columns_arr_rel_insert_input
  program_sessions_submissions: program_sessions_submissions_arr_rel_insert_input
  program_sessions_symposia: program_sessions_symposia_arr_rel_insert_input
  program_track: program_tracks_obj_rel_insert_input
  program_track_id: Int
  program_type: program_types_obj_rel_insert_input
  program_type_id: Int
  program_video_label: String
  program_video_link: String
  sponsors: program_session_sponsors_arr_rel_insert_input
  start_time: time! 
  use_track_colour: Boolean! 
  use_type_colour: Boolean! 
  video_link: session_links_arr_rel_insert_input
  views: virtual_conference_session_views_arr_rel_insert_input
  zoom_session: program_session_zoom_meetings_arr_rel_insert_input
}

"""aggregate max on columns"""
type program_sessions_max_fields {
   admin_notes: String
   colour: String
   column_width: Int
   description: String
   event_id: Int
   id: Int
   name: String
   program_date_id: Int
   program_location_id: Int
   program_track_id: Int
   program_type_id: Int
   program_video_label: String
   program_video_link: String
}

"""
order by max() on columns of table "program_sessions"
"""
input program_sessions_max_order_by {
  admin_notes: order_by
  colour: order_by
  column_width: order_by
  description: order_by
  event_id: order_by
  id: order_by
  name: order_by
  program_date_id: order_by
  program_location_id: order_by
  program_track_id: order_by
  program_type_id: order_by
  program_video_label: order_by
  program_video_link: order_by
}

"""aggregate min on columns"""
type program_sessions_min_fields {
   admin_notes: String
   colour: String
   column_width: Int
   description: String
   event_id: Int
   id: Int
   name: String
   program_date_id: Int
   program_location_id: Int
   program_track_id: Int
   program_type_id: Int
   program_video_label: String
   program_video_link: String
}

"""
order by min() on columns of table "program_sessions"
"""
input program_sessions_min_order_by {
  admin_notes: order_by
  colour: order_by
  column_width: order_by
  description: order_by
  event_id: order_by
  id: order_by
  name: order_by
  program_date_id: order_by
  program_location_id: order_by
  program_track_id: order_by
  program_type_id: order_by
  program_video_label: order_by
  program_video_link: order_by
}

"""
response of any mutation on the table "program_sessions"
"""
type program_sessions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_sessions! ]! 
}

"""
input type for inserting object relation for remote table "program_sessions"
"""
input program_sessions_obj_rel_insert_input {
  data: program_sessions_insert_input! 
  """upsert condition"""
on_conflict: program_sessions_on_conflict
}

"""
on_conflict condition type for table "program_sessions"
"""
input program_sessions_on_conflict {
  constraint: program_sessions_constraint! 
  update_columns: [program_sessions_update_column! ]! 
  where: program_sessions_bool_exp
}

"""Ordering options when selecting data from "program_sessions"."""
input program_sessions_order_by {
  activities_aggregate: program_session_activities_aggregate_order_by
  admin_notes: order_by
  author_fields_aggregate: author_fields_aggregate_order_by
  authors_aggregate: program_sessions_authors_aggregate_order_by
  bookmarks_aggregate: virtual_conference_session_bookmarks_aggregate_order_by
  categories_aggregate: program_sessions_categories_aggregate_order_by
  colour: order_by
  column_width: order_by
  description: order_by
  end_time: order_by
  event: events_order_by
  event_id: order_by
  id: order_by
  name: order_by
  program_date: program_dates_order_by
  program_date_id: order_by
  program_location: program_locations_order_by
  program_location_id: order_by
  program_sessions_chairs_aggregate: program_sessions_chairs_aggregate_order_by
  program_sessions_program_columns_aggregate: program_sessions_program_columns_aggregate_order_by
  program_sessions_submissions_aggregate: program_sessions_submissions_aggregate_order_by
  program_sessions_symposia_aggregate: program_sessions_symposia_aggregate_order_by
  program_track: program_tracks_order_by
  program_track_id: order_by
  program_type: program_types_order_by
  program_type_id: order_by
  program_video_label: order_by
  program_video_link: order_by
  sponsors_aggregate: program_session_sponsors_aggregate_order_by
  start_time: order_by
  use_track_colour: order_by
  use_type_colour: order_by
  video_link_aggregate: session_links_aggregate_order_by
  views_aggregate: virtual_conference_session_views_aggregate_order_by
  zoom_session_aggregate: program_session_zoom_meetings_aggregate_order_by
}

"""primary key columns input for table: program_sessions"""
input program_sessions_pk_columns_input {
  id: Int! 
}

"""
columns and relationships of "program_sessions_program_columns"
"""
type program_sessions_program_columns {
  """An object relationship"""
 program_column: program_columns! 
   program_column_id: Int! 
   program_session_id: Int! 
}

"""
aggregated selection of "program_sessions_program_columns"
"""
type program_sessions_program_columns_aggregate {
   aggregate: program_sessions_program_columns_aggregate_fields
   nodes: [program_sessions_program_columns! ]! 
}

input program_sessions_program_columns_aggregate_bool_exp {
  count: program_sessions_program_columns_aggregate_bool_exp_count
}

input program_sessions_program_columns_aggregate_bool_exp_count {
  arguments: [program_sessions_program_columns_select_column! ]
  distinct: Boolean
  filter: program_sessions_program_columns_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "program_sessions_program_columns"
"""
type program_sessions_program_columns_aggregate_fields {
   avg: program_sessions_program_columns_avg_fields
   count(columns: [program_sessions_program_columns_select_column! ], distinct: Boolean): Int! 
   max: program_sessions_program_columns_max_fields
   min: program_sessions_program_columns_min_fields
   stddev: program_sessions_program_columns_stddev_fields
   stddev_pop: program_sessions_program_columns_stddev_pop_fields
   stddev_samp: program_sessions_program_columns_stddev_samp_fields
   sum: program_sessions_program_columns_sum_fields
   var_pop: program_sessions_program_columns_var_pop_fields
   var_samp: program_sessions_program_columns_var_samp_fields
   variance: program_sessions_program_columns_variance_fields
}

"""
order by aggregate values of table "program_sessions_program_columns"
"""
input program_sessions_program_columns_aggregate_order_by {
  avg: program_sessions_program_columns_avg_order_by
  count: order_by
  max: program_sessions_program_columns_max_order_by
  min: program_sessions_program_columns_min_order_by
  stddev: program_sessions_program_columns_stddev_order_by
  stddev_pop: program_sessions_program_columns_stddev_pop_order_by
  stddev_samp: program_sessions_program_columns_stddev_samp_order_by
  sum: program_sessions_program_columns_sum_order_by
  var_pop: program_sessions_program_columns_var_pop_order_by
  var_samp: program_sessions_program_columns_var_samp_order_by
  variance: program_sessions_program_columns_variance_order_by
}

"""
input type for inserting array relation for remote table "program_sessions_program_columns"
"""
input program_sessions_program_columns_arr_rel_insert_input {
  data: [program_sessions_program_columns_insert_input! ]! 
}

"""aggregate avg on columns"""
type program_sessions_program_columns_avg_fields {
   program_column_id: Float
   program_session_id: Float
}

"""
order by avg() on columns of table "program_sessions_program_columns"
"""
input program_sessions_program_columns_avg_order_by {
  program_column_id: order_by
  program_session_id: order_by
}

"""
Boolean expression to filter rows from the table "program_sessions_program_columns". All fields are combined with a logical 'AND'.
"""
input program_sessions_program_columns_bool_exp {
  _and: [program_sessions_program_columns_bool_exp! ]
  _not: program_sessions_program_columns_bool_exp
  _or: [program_sessions_program_columns_bool_exp! ]
  program_column: program_columns_bool_exp
  program_column_id: Int_comparison_exp
  program_session_id: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "program_sessions_program_columns"
"""
input program_sessions_program_columns_inc_input {
  program_column_id: Int
  program_session_id: Int
}

"""
input type for inserting data into table "program_sessions_program_columns"
"""
input program_sessions_program_columns_insert_input {
  program_column: program_columns_obj_rel_insert_input
  program_column_id: Int! 
  program_session_id: Int! 
}

"""aggregate max on columns"""
type program_sessions_program_columns_max_fields {
   program_column_id: Int
   program_session_id: Int
}

"""
order by max() on columns of table "program_sessions_program_columns"
"""
input program_sessions_program_columns_max_order_by {
  program_column_id: order_by
  program_session_id: order_by
}

"""aggregate min on columns"""
type program_sessions_program_columns_min_fields {
   program_column_id: Int
   program_session_id: Int
}

"""
order by min() on columns of table "program_sessions_program_columns"
"""
input program_sessions_program_columns_min_order_by {
  program_column_id: order_by
  program_session_id: order_by
}

"""
response of any mutation on the table "program_sessions_program_columns"
"""
type program_sessions_program_columns_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_sessions_program_columns! ]! 
}

"""
Ordering options when selecting data from "program_sessions_program_columns".
"""
input program_sessions_program_columns_order_by {
  program_column: program_columns_order_by
  program_column_id: order_by
  program_session_id: order_by
}

"""
select columns of table "program_sessions_program_columns"
"""
enum program_sessions_program_columns_select_column {
  """column name"""
program_column_id
  """column name"""
program_session_id
}

"""
input type for updating data in table "program_sessions_program_columns"
"""
input program_sessions_program_columns_set_input {
  program_column_id: Int
  program_session_id: Int
}

"""aggregate stddev on columns"""
type program_sessions_program_columns_stddev_fields {
   program_column_id: Float
   program_session_id: Float
}

"""
order by stddev() on columns of table "program_sessions_program_columns"
"""
input program_sessions_program_columns_stddev_order_by {
  program_column_id: order_by
  program_session_id: order_by
}

"""aggregate stddev_pop on columns"""
type program_sessions_program_columns_stddev_pop_fields {
   program_column_id: Float
   program_session_id: Float
}

"""
order by stddev_pop() on columns of table "program_sessions_program_columns"
"""
input program_sessions_program_columns_stddev_pop_order_by {
  program_column_id: order_by
  program_session_id: order_by
}

"""aggregate stddev_samp on columns"""
type program_sessions_program_columns_stddev_samp_fields {
   program_column_id: Float
   program_session_id: Float
}

"""
order by stddev_samp() on columns of table "program_sessions_program_columns"
"""
input program_sessions_program_columns_stddev_samp_order_by {
  program_column_id: order_by
  program_session_id: order_by
}

"""
Streaming cursor of the table "program_sessions_program_columns"
"""
input program_sessions_program_columns_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_sessions_program_columns_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_sessions_program_columns_stream_cursor_value_input {
  program_column_id: Int
  program_session_id: Int
}

"""aggregate sum on columns"""
type program_sessions_program_columns_sum_fields {
   program_column_id: Int
   program_session_id: Int
}

"""
order by sum() on columns of table "program_sessions_program_columns"
"""
input program_sessions_program_columns_sum_order_by {
  program_column_id: order_by
  program_session_id: order_by
}

input program_sessions_program_columns_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_sessions_program_columns_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_sessions_program_columns_set_input
  where: program_sessions_program_columns_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_sessions_program_columns_var_pop_fields {
   program_column_id: Float
   program_session_id: Float
}

"""
order by var_pop() on columns of table "program_sessions_program_columns"
"""
input program_sessions_program_columns_var_pop_order_by {
  program_column_id: order_by
  program_session_id: order_by
}

"""aggregate var_samp on columns"""
type program_sessions_program_columns_var_samp_fields {
   program_column_id: Float
   program_session_id: Float
}

"""
order by var_samp() on columns of table "program_sessions_program_columns"
"""
input program_sessions_program_columns_var_samp_order_by {
  program_column_id: order_by
  program_session_id: order_by
}

"""aggregate variance on columns"""
type program_sessions_program_columns_variance_fields {
   program_column_id: Float
   program_session_id: Float
}

"""
order by variance() on columns of table "program_sessions_program_columns"
"""
input program_sessions_program_columns_variance_order_by {
  program_column_id: order_by
  program_session_id: order_by
}

"""
select columns of table "program_sessions"
"""
enum program_sessions_select_column {
  """column name"""
admin_notes
  """column name"""
colour
  """column name"""
column_width
  """column name"""
description
  """column name"""
end_time
  """column name"""
event_id
  """column name"""
id
  """column name"""
name
  """column name"""
program_date_id
  """column name"""
program_location_id
  """column name"""
program_track_id
  """column name"""
program_type_id
  """column name"""
program_video_label
  """column name"""
program_video_link
  """column name"""
start_time
  """column name"""
use_track_colour
  """column name"""
use_type_colour
}

"""
select "program_sessions_aggregate_bool_exp_bool_and_arguments_columns" columns of table "program_sessions"
"""
enum program_sessions_select_column_program_sessions_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
use_track_colour
  """column name"""
use_type_colour
}

"""
select "program_sessions_aggregate_bool_exp_bool_or_arguments_columns" columns of table "program_sessions"
"""
enum program_sessions_select_column_program_sessions_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
use_track_colour
  """column name"""
use_type_colour
}

"""
input type for updating data in table "program_sessions"
"""
input program_sessions_set_input {
  admin_notes: String
  colour: String
  column_width: Int
  description: String
  end_time: time
  event_id: Int
  id: Int
  name: String
  program_date_id: Int
  program_location_id: Int
  program_track_id: Int
  program_type_id: Int
  program_video_label: String
  program_video_link: String
  start_time: time
  use_track_colour: Boolean
  use_type_colour: Boolean
}

"""aggregate stddev on columns"""
type program_sessions_stddev_fields {
   column_width: Float
   event_id: Float
   id: Float
   program_date_id: Float
   program_location_id: Float
   program_track_id: Float
   program_type_id: Float
}

"""
order by stddev() on columns of table "program_sessions"
"""
input program_sessions_stddev_order_by {
  column_width: order_by
  event_id: order_by
  id: order_by
  program_date_id: order_by
  program_location_id: order_by
  program_track_id: order_by
  program_type_id: order_by
}

"""aggregate stddev_pop on columns"""
type program_sessions_stddev_pop_fields {
   column_width: Float
   event_id: Float
   id: Float
   program_date_id: Float
   program_location_id: Float
   program_track_id: Float
   program_type_id: Float
}

"""
order by stddev_pop() on columns of table "program_sessions"
"""
input program_sessions_stddev_pop_order_by {
  column_width: order_by
  event_id: order_by
  id: order_by
  program_date_id: order_by
  program_location_id: order_by
  program_track_id: order_by
  program_type_id: order_by
}

"""aggregate stddev_samp on columns"""
type program_sessions_stddev_samp_fields {
   column_width: Float
   event_id: Float
   id: Float
   program_date_id: Float
   program_location_id: Float
   program_track_id: Float
   program_type_id: Float
}

"""
order by stddev_samp() on columns of table "program_sessions"
"""
input program_sessions_stddev_samp_order_by {
  column_width: order_by
  event_id: order_by
  id: order_by
  program_date_id: order_by
  program_location_id: order_by
  program_track_id: order_by
  program_type_id: order_by
}

"""
Streaming cursor of the table "program_sessions"
"""
input program_sessions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_sessions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_sessions_stream_cursor_value_input {
  admin_notes: String
  colour: String
  column_width: Int
  description: String
  end_time: time
  event_id: Int
  id: Int
  name: String
  program_date_id: Int
  program_location_id: Int
  program_track_id: Int
  program_type_id: Int
  program_video_label: String
  program_video_link: String
  start_time: time
  use_track_colour: Boolean
  use_type_colour: Boolean
}

"""
columns and relationships of "program_sessions_submissions"
"""
type program_sessions_submissions {
   display_order: Int! 
   end_time: time
  """An object relationship"""
 program_session: program_sessions! 
   program_session_id: Int! 
   start_time: time
  """An object relationship"""
 submission: submissions! 
   submission_id: Int! 
}

"""
aggregated selection of "program_sessions_submissions"
"""
type program_sessions_submissions_aggregate {
   aggregate: program_sessions_submissions_aggregate_fields
   nodes: [program_sessions_submissions! ]! 
}

input program_sessions_submissions_aggregate_bool_exp {
  count: program_sessions_submissions_aggregate_bool_exp_count
}

input program_sessions_submissions_aggregate_bool_exp_count {
  arguments: [program_sessions_submissions_select_column! ]
  distinct: Boolean
  filter: program_sessions_submissions_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "program_sessions_submissions"
"""
type program_sessions_submissions_aggregate_fields {
   avg: program_sessions_submissions_avg_fields
   count(columns: [program_sessions_submissions_select_column! ], distinct: Boolean): Int! 
   max: program_sessions_submissions_max_fields
   min: program_sessions_submissions_min_fields
   stddev: program_sessions_submissions_stddev_fields
   stddev_pop: program_sessions_submissions_stddev_pop_fields
   stddev_samp: program_sessions_submissions_stddev_samp_fields
   sum: program_sessions_submissions_sum_fields
   var_pop: program_sessions_submissions_var_pop_fields
   var_samp: program_sessions_submissions_var_samp_fields
   variance: program_sessions_submissions_variance_fields
}

"""
order by aggregate values of table "program_sessions_submissions"
"""
input program_sessions_submissions_aggregate_order_by {
  avg: program_sessions_submissions_avg_order_by
  count: order_by
  max: program_sessions_submissions_max_order_by
  min: program_sessions_submissions_min_order_by
  stddev: program_sessions_submissions_stddev_order_by
  stddev_pop: program_sessions_submissions_stddev_pop_order_by
  stddev_samp: program_sessions_submissions_stddev_samp_order_by
  sum: program_sessions_submissions_sum_order_by
  var_pop: program_sessions_submissions_var_pop_order_by
  var_samp: program_sessions_submissions_var_samp_order_by
  variance: program_sessions_submissions_variance_order_by
}

"""
input type for inserting array relation for remote table "program_sessions_submissions"
"""
input program_sessions_submissions_arr_rel_insert_input {
  data: [program_sessions_submissions_insert_input! ]! 
}

"""aggregate avg on columns"""
type program_sessions_submissions_avg_fields {
   display_order: Float
   program_session_id: Float
   submission_id: Float
}

"""
order by avg() on columns of table "program_sessions_submissions"
"""
input program_sessions_submissions_avg_order_by {
  display_order: order_by
  program_session_id: order_by
  submission_id: order_by
}

"""
Boolean expression to filter rows from the table "program_sessions_submissions". All fields are combined with a logical 'AND'.
"""
input program_sessions_submissions_bool_exp {
  _and: [program_sessions_submissions_bool_exp! ]
  _not: program_sessions_submissions_bool_exp
  _or: [program_sessions_submissions_bool_exp! ]
  display_order: Int_comparison_exp
  end_time: time_comparison_exp
  program_session: program_sessions_bool_exp
  program_session_id: Int_comparison_exp
  start_time: time_comparison_exp
  submission: submissions_bool_exp
  submission_id: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "program_sessions_submissions"
"""
input program_sessions_submissions_inc_input {
  display_order: Int
  program_session_id: Int
  submission_id: Int
}

"""
input type for inserting data into table "program_sessions_submissions"
"""
input program_sessions_submissions_insert_input {
  display_order: Int! 
  end_time: time
  program_session: program_sessions_obj_rel_insert_input
  program_session_id: Int! 
  start_time: time
  submission: submissions_obj_rel_insert_input
  submission_id: Int! 
}

"""aggregate max on columns"""
type program_sessions_submissions_max_fields {
   display_order: Int
   program_session_id: Int
   submission_id: Int
}

"""
order by max() on columns of table "program_sessions_submissions"
"""
input program_sessions_submissions_max_order_by {
  display_order: order_by
  program_session_id: order_by
  submission_id: order_by
}

"""aggregate min on columns"""
type program_sessions_submissions_min_fields {
   display_order: Int
   program_session_id: Int
   submission_id: Int
}

"""
order by min() on columns of table "program_sessions_submissions"
"""
input program_sessions_submissions_min_order_by {
  display_order: order_by
  program_session_id: order_by
  submission_id: order_by
}

"""
response of any mutation on the table "program_sessions_submissions"
"""
type program_sessions_submissions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_sessions_submissions! ]! 
}

"""
Ordering options when selecting data from "program_sessions_submissions".
"""
input program_sessions_submissions_order_by {
  display_order: order_by
  end_time: order_by
  program_session: program_sessions_order_by
  program_session_id: order_by
  start_time: order_by
  submission: submissions_order_by
  submission_id: order_by
}

"""
select columns of table "program_sessions_submissions"
"""
enum program_sessions_submissions_select_column {
  """column name"""
display_order
  """column name"""
end_time
  """column name"""
program_session_id
  """column name"""
start_time
  """column name"""
submission_id
}

"""
input type for updating data in table "program_sessions_submissions"
"""
input program_sessions_submissions_set_input {
  display_order: Int
  end_time: time
  program_session_id: Int
  start_time: time
  submission_id: Int
}

"""aggregate stddev on columns"""
type program_sessions_submissions_stddev_fields {
   display_order: Float
   program_session_id: Float
   submission_id: Float
}

"""
order by stddev() on columns of table "program_sessions_submissions"
"""
input program_sessions_submissions_stddev_order_by {
  display_order: order_by
  program_session_id: order_by
  submission_id: order_by
}

"""aggregate stddev_pop on columns"""
type program_sessions_submissions_stddev_pop_fields {
   display_order: Float
   program_session_id: Float
   submission_id: Float
}

"""
order by stddev_pop() on columns of table "program_sessions_submissions"
"""
input program_sessions_submissions_stddev_pop_order_by {
  display_order: order_by
  program_session_id: order_by
  submission_id: order_by
}

"""aggregate stddev_samp on columns"""
type program_sessions_submissions_stddev_samp_fields {
   display_order: Float
   program_session_id: Float
   submission_id: Float
}

"""
order by stddev_samp() on columns of table "program_sessions_submissions"
"""
input program_sessions_submissions_stddev_samp_order_by {
  display_order: order_by
  program_session_id: order_by
  submission_id: order_by
}

"""
Streaming cursor of the table "program_sessions_submissions"
"""
input program_sessions_submissions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_sessions_submissions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_sessions_submissions_stream_cursor_value_input {
  display_order: Int
  end_time: time
  program_session_id: Int
  start_time: time
  submission_id: Int
}

"""aggregate sum on columns"""
type program_sessions_submissions_sum_fields {
   display_order: Int
   program_session_id: Int
   submission_id: Int
}

"""
order by sum() on columns of table "program_sessions_submissions"
"""
input program_sessions_submissions_sum_order_by {
  display_order: order_by
  program_session_id: order_by
  submission_id: order_by
}

input program_sessions_submissions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_sessions_submissions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_sessions_submissions_set_input
  where: program_sessions_submissions_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_sessions_submissions_var_pop_fields {
   display_order: Float
   program_session_id: Float
   submission_id: Float
}

"""
order by var_pop() on columns of table "program_sessions_submissions"
"""
input program_sessions_submissions_var_pop_order_by {
  display_order: order_by
  program_session_id: order_by
  submission_id: order_by
}

"""aggregate var_samp on columns"""
type program_sessions_submissions_var_samp_fields {
   display_order: Float
   program_session_id: Float
   submission_id: Float
}

"""
order by var_samp() on columns of table "program_sessions_submissions"
"""
input program_sessions_submissions_var_samp_order_by {
  display_order: order_by
  program_session_id: order_by
  submission_id: order_by
}

"""aggregate variance on columns"""
type program_sessions_submissions_variance_fields {
   display_order: Float
   program_session_id: Float
   submission_id: Float
}

"""
order by variance() on columns of table "program_sessions_submissions"
"""
input program_sessions_submissions_variance_order_by {
  display_order: order_by
  program_session_id: order_by
  submission_id: order_by
}

"""aggregate sum on columns"""
type program_sessions_sum_fields {
   column_width: Int
   event_id: Int
   id: Int
   program_date_id: Int
   program_location_id: Int
   program_track_id: Int
   program_type_id: Int
}

"""
order by sum() on columns of table "program_sessions"
"""
input program_sessions_sum_order_by {
  column_width: order_by
  event_id: order_by
  id: order_by
  program_date_id: order_by
  program_location_id: order_by
  program_track_id: order_by
  program_type_id: order_by
}

"""
columns and relationships of "program_sessions_symposia"
"""
type program_sessions_symposia {
   display_order: Int! 
   end_time: time
  """An object relationship"""
 program_session: program_sessions! 
   program_session_id: Int! 
   start_time: time
  """An object relationship"""
 symposium: symposia! 
   symposium_id: Int! 
}

"""
aggregated selection of "program_sessions_symposia"
"""
type program_sessions_symposia_aggregate {
   aggregate: program_sessions_symposia_aggregate_fields
   nodes: [program_sessions_symposia! ]! 
}

input program_sessions_symposia_aggregate_bool_exp {
  count: program_sessions_symposia_aggregate_bool_exp_count
}

input program_sessions_symposia_aggregate_bool_exp_count {
  arguments: [program_sessions_symposia_select_column! ]
  distinct: Boolean
  filter: program_sessions_symposia_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "program_sessions_symposia"
"""
type program_sessions_symposia_aggregate_fields {
   avg: program_sessions_symposia_avg_fields
   count(columns: [program_sessions_symposia_select_column! ], distinct: Boolean): Int! 
   max: program_sessions_symposia_max_fields
   min: program_sessions_symposia_min_fields
   stddev: program_sessions_symposia_stddev_fields
   stddev_pop: program_sessions_symposia_stddev_pop_fields
   stddev_samp: program_sessions_symposia_stddev_samp_fields
   sum: program_sessions_symposia_sum_fields
   var_pop: program_sessions_symposia_var_pop_fields
   var_samp: program_sessions_symposia_var_samp_fields
   variance: program_sessions_symposia_variance_fields
}

"""
order by aggregate values of table "program_sessions_symposia"
"""
input program_sessions_symposia_aggregate_order_by {
  avg: program_sessions_symposia_avg_order_by
  count: order_by
  max: program_sessions_symposia_max_order_by
  min: program_sessions_symposia_min_order_by
  stddev: program_sessions_symposia_stddev_order_by
  stddev_pop: program_sessions_symposia_stddev_pop_order_by
  stddev_samp: program_sessions_symposia_stddev_samp_order_by
  sum: program_sessions_symposia_sum_order_by
  var_pop: program_sessions_symposia_var_pop_order_by
  var_samp: program_sessions_symposia_var_samp_order_by
  variance: program_sessions_symposia_variance_order_by
}

"""
input type for inserting array relation for remote table "program_sessions_symposia"
"""
input program_sessions_symposia_arr_rel_insert_input {
  data: [program_sessions_symposia_insert_input! ]! 
}

"""aggregate avg on columns"""
type program_sessions_symposia_avg_fields {
   display_order: Float
   program_session_id: Float
   symposium_id: Float
}

"""
order by avg() on columns of table "program_sessions_symposia"
"""
input program_sessions_symposia_avg_order_by {
  display_order: order_by
  program_session_id: order_by
  symposium_id: order_by
}

"""
Boolean expression to filter rows from the table "program_sessions_symposia". All fields are combined with a logical 'AND'.
"""
input program_sessions_symposia_bool_exp {
  _and: [program_sessions_symposia_bool_exp! ]
  _not: program_sessions_symposia_bool_exp
  _or: [program_sessions_symposia_bool_exp! ]
  display_order: Int_comparison_exp
  end_time: time_comparison_exp
  program_session: program_sessions_bool_exp
  program_session_id: Int_comparison_exp
  start_time: time_comparison_exp
  symposium: symposia_bool_exp
  symposium_id: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "program_sessions_symposia"
"""
input program_sessions_symposia_inc_input {
  display_order: Int
  program_session_id: Int
  symposium_id: Int
}

"""
input type for inserting data into table "program_sessions_symposia"
"""
input program_sessions_symposia_insert_input {
  display_order: Int! 
  end_time: time
  program_session: program_sessions_obj_rel_insert_input
  program_session_id: Int! 
  start_time: time
  symposium: symposia_obj_rel_insert_input
  symposium_id: Int! 
}

"""aggregate max on columns"""
type program_sessions_symposia_max_fields {
   display_order: Int
   program_session_id: Int
   symposium_id: Int
}

"""
order by max() on columns of table "program_sessions_symposia"
"""
input program_sessions_symposia_max_order_by {
  display_order: order_by
  program_session_id: order_by
  symposium_id: order_by
}

"""aggregate min on columns"""
type program_sessions_symposia_min_fields {
   display_order: Int
   program_session_id: Int
   symposium_id: Int
}

"""
order by min() on columns of table "program_sessions_symposia"
"""
input program_sessions_symposia_min_order_by {
  display_order: order_by
  program_session_id: order_by
  symposium_id: order_by
}

"""
response of any mutation on the table "program_sessions_symposia"
"""
type program_sessions_symposia_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_sessions_symposia! ]! 
}

"""Ordering options when selecting data from "program_sessions_symposia"."""
input program_sessions_symposia_order_by {
  display_order: order_by
  end_time: order_by
  program_session: program_sessions_order_by
  program_session_id: order_by
  start_time: order_by
  symposium: symposia_order_by
  symposium_id: order_by
}

"""
select columns of table "program_sessions_symposia"
"""
enum program_sessions_symposia_select_column {
  """column name"""
display_order
  """column name"""
end_time
  """column name"""
program_session_id
  """column name"""
start_time
  """column name"""
symposium_id
}

"""
input type for updating data in table "program_sessions_symposia"
"""
input program_sessions_symposia_set_input {
  display_order: Int
  end_time: time
  program_session_id: Int
  start_time: time
  symposium_id: Int
}

"""aggregate stddev on columns"""
type program_sessions_symposia_stddev_fields {
   display_order: Float
   program_session_id: Float
   symposium_id: Float
}

"""
order by stddev() on columns of table "program_sessions_symposia"
"""
input program_sessions_symposia_stddev_order_by {
  display_order: order_by
  program_session_id: order_by
  symposium_id: order_by
}

"""aggregate stddev_pop on columns"""
type program_sessions_symposia_stddev_pop_fields {
   display_order: Float
   program_session_id: Float
   symposium_id: Float
}

"""
order by stddev_pop() on columns of table "program_sessions_symposia"
"""
input program_sessions_symposia_stddev_pop_order_by {
  display_order: order_by
  program_session_id: order_by
  symposium_id: order_by
}

"""aggregate stddev_samp on columns"""
type program_sessions_symposia_stddev_samp_fields {
   display_order: Float
   program_session_id: Float
   symposium_id: Float
}

"""
order by stddev_samp() on columns of table "program_sessions_symposia"
"""
input program_sessions_symposia_stddev_samp_order_by {
  display_order: order_by
  program_session_id: order_by
  symposium_id: order_by
}

"""
Streaming cursor of the table "program_sessions_symposia"
"""
input program_sessions_symposia_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_sessions_symposia_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_sessions_symposia_stream_cursor_value_input {
  display_order: Int
  end_time: time
  program_session_id: Int
  start_time: time
  symposium_id: Int
}

"""aggregate sum on columns"""
type program_sessions_symposia_sum_fields {
   display_order: Int
   program_session_id: Int
   symposium_id: Int
}

"""
order by sum() on columns of table "program_sessions_symposia"
"""
input program_sessions_symposia_sum_order_by {
  display_order: order_by
  program_session_id: order_by
  symposium_id: order_by
}

input program_sessions_symposia_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_sessions_symposia_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_sessions_symposia_set_input
  where: program_sessions_symposia_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_sessions_symposia_var_pop_fields {
   display_order: Float
   program_session_id: Float
   symposium_id: Float
}

"""
order by var_pop() on columns of table "program_sessions_symposia"
"""
input program_sessions_symposia_var_pop_order_by {
  display_order: order_by
  program_session_id: order_by
  symposium_id: order_by
}

"""aggregate var_samp on columns"""
type program_sessions_symposia_var_samp_fields {
   display_order: Float
   program_session_id: Float
   symposium_id: Float
}

"""
order by var_samp() on columns of table "program_sessions_symposia"
"""
input program_sessions_symposia_var_samp_order_by {
  display_order: order_by
  program_session_id: order_by
  symposium_id: order_by
}

"""aggregate variance on columns"""
type program_sessions_symposia_variance_fields {
   display_order: Float
   program_session_id: Float
   symposium_id: Float
}

"""
order by variance() on columns of table "program_sessions_symposia"
"""
input program_sessions_symposia_variance_order_by {
  display_order: order_by
  program_session_id: order_by
  symposium_id: order_by
}

"""
update columns of table "program_sessions"
"""
enum program_sessions_update_column {
  """column name"""
admin_notes
  """column name"""
colour
  """column name"""
column_width
  """column name"""
description
  """column name"""
end_time
  """column name"""
event_id
  """column name"""
id
  """column name"""
name
  """column name"""
program_date_id
  """column name"""
program_location_id
  """column name"""
program_track_id
  """column name"""
program_type_id
  """column name"""
program_video_label
  """column name"""
program_video_link
  """column name"""
start_time
  """column name"""
use_track_colour
  """column name"""
use_type_colour
}

input program_sessions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_sessions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_sessions_set_input
  where: program_sessions_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_sessions_var_pop_fields {
   column_width: Float
   event_id: Float
   id: Float
   program_date_id: Float
   program_location_id: Float
   program_track_id: Float
   program_type_id: Float
}

"""
order by var_pop() on columns of table "program_sessions"
"""
input program_sessions_var_pop_order_by {
  column_width: order_by
  event_id: order_by
  id: order_by
  program_date_id: order_by
  program_location_id: order_by
  program_track_id: order_by
  program_type_id: order_by
}

"""aggregate var_samp on columns"""
type program_sessions_var_samp_fields {
   column_width: Float
   event_id: Float
   id: Float
   program_date_id: Float
   program_location_id: Float
   program_track_id: Float
   program_type_id: Float
}

"""
order by var_samp() on columns of table "program_sessions"
"""
input program_sessions_var_samp_order_by {
  column_width: order_by
  event_id: order_by
  id: order_by
  program_date_id: order_by
  program_location_id: order_by
  program_track_id: order_by
  program_type_id: order_by
}

"""aggregate variance on columns"""
type program_sessions_variance_fields {
   column_width: Float
   event_id: Float
   id: Float
   program_date_id: Float
   program_location_id: Float
   program_track_id: Float
   program_type_id: Float
}

"""
order by variance() on columns of table "program_sessions"
"""
input program_sessions_variance_order_by {
  column_width: order_by
  event_id: order_by
  id: order_by
  program_date_id: order_by
  program_location_id: order_by
  program_track_id: order_by
  program_type_id: order_by
}

"""
columns and relationships of "program_sponsors"
"""
type program_sponsors {
   display_order: Int! 
   event_id: Int! 
  """An array relationship"""
 event_menu("""distinct select on columns"""
distinct_on: [event_program_menu_sponsors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_program_menu_sponsors_order_by! ], """filter the rows returned"""
where: event_program_menu_sponsors_bool_exp): [event_program_menu_sponsors! ]! 
  """An aggregate relationship"""
 event_menu_aggregate("""distinct select on columns"""
distinct_on: [event_program_menu_sponsors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_program_menu_sponsors_order_by! ], """filter the rows returned"""
where: event_program_menu_sponsors_bool_exp): event_program_menu_sponsors_aggregate! 
  """An array relationship"""
 exhibitor("""distinct select on columns"""
distinct_on: [exhibitors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitors_order_by! ], """filter the rows returned"""
where: exhibitors_bool_exp): [exhibitors! ]! 
  """An aggregate relationship"""
 exhibitor_aggregate("""distinct select on columns"""
distinct_on: [exhibitors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitors_order_by! ], """filter the rows returned"""
where: exhibitors_bool_exp): exhibitors_aggregate! 
   exhibitor_id: uuid
   id: Int! 
   image: String
   image_small: String
   link: String
   name: String! 
}

"""
aggregated selection of "program_sponsors"
"""
type program_sponsors_aggregate {
   aggregate: program_sponsors_aggregate_fields
   nodes: [program_sponsors! ]! 
}

"""
aggregate fields of "program_sponsors"
"""
type program_sponsors_aggregate_fields {
   avg: program_sponsors_avg_fields
   count(columns: [program_sponsors_select_column! ], distinct: Boolean): Int! 
   max: program_sponsors_max_fields
   min: program_sponsors_min_fields
   stddev: program_sponsors_stddev_fields
   stddev_pop: program_sponsors_stddev_pop_fields
   stddev_samp: program_sponsors_stddev_samp_fields
   sum: program_sponsors_sum_fields
   var_pop: program_sponsors_var_pop_fields
   var_samp: program_sponsors_var_samp_fields
   variance: program_sponsors_variance_fields
}

"""aggregate avg on columns"""
type program_sponsors_avg_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""
Boolean expression to filter rows from the table "program_sponsors". All fields are combined with a logical 'AND'.
"""
input program_sponsors_bool_exp {
  _and: [program_sponsors_bool_exp! ]
  _not: program_sponsors_bool_exp
  _or: [program_sponsors_bool_exp! ]
  display_order: Int_comparison_exp
  event_id: Int_comparison_exp
  event_menu: event_program_menu_sponsors_bool_exp
  event_menu_aggregate: event_program_menu_sponsors_aggregate_bool_exp
  exhibitor: exhibitors_bool_exp
  exhibitor_aggregate: exhibitors_aggregate_bool_exp
  exhibitor_id: uuid_comparison_exp
  id: Int_comparison_exp
  image: String_comparison_exp
  image_small: String_comparison_exp
  link: String_comparison_exp
  name: String_comparison_exp
}

"""
unique or primary key constraints on table "program_sponsors"
"""
enum program_sponsors_constraint {
  """
  unique or primary key constraint on columns "program_sponsor_id"
  """
program_sponsors_pkey
}

"""
input type for incrementing numeric columns in table "program_sponsors"
"""
input program_sponsors_inc_input {
  display_order: Int
  event_id: Int
  id: Int
}

"""
input type for inserting data into table "program_sponsors"
"""
input program_sponsors_insert_input {
  display_order: Int! 
  event_id: Int! 
  event_menu: event_program_menu_sponsors_arr_rel_insert_input
  exhibitor: exhibitors_arr_rel_insert_input
  exhibitor_id: uuid
  id: Int
  image: String
  image_small: String
  link: String
  name: String! 
}

"""aggregate max on columns"""
type program_sponsors_max_fields {
   display_order: Int
   event_id: Int
   exhibitor_id: uuid
   id: Int
   image: String
   image_small: String
   link: String
   name: String
}

"""aggregate min on columns"""
type program_sponsors_min_fields {
   display_order: Int
   event_id: Int
   exhibitor_id: uuid
   id: Int
   image: String
   image_small: String
   link: String
   name: String
}

"""
response of any mutation on the table "program_sponsors"
"""
type program_sponsors_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_sponsors! ]! 
}

"""
input type for inserting object relation for remote table "program_sponsors"
"""
input program_sponsors_obj_rel_insert_input {
  data: program_sponsors_insert_input! 
  """upsert condition"""
on_conflict: program_sponsors_on_conflict
}

"""
on_conflict condition type for table "program_sponsors"
"""
input program_sponsors_on_conflict {
  constraint: program_sponsors_constraint! 
  update_columns: [program_sponsors_update_column! ]! 
  where: program_sponsors_bool_exp
}

"""Ordering options when selecting data from "program_sponsors"."""
input program_sponsors_order_by {
  display_order: order_by
  event_id: order_by
  event_menu_aggregate: event_program_menu_sponsors_aggregate_order_by
  exhibitor_aggregate: exhibitors_aggregate_order_by
  exhibitor_id: order_by
  id: order_by
  image: order_by
  image_small: order_by
  link: order_by
  name: order_by
}

"""primary key columns input for table: program_sponsors"""
input program_sponsors_pk_columns_input {
  id: Int! 
}

"""
select columns of table "program_sponsors"
"""
enum program_sponsors_select_column {
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
exhibitor_id
  """column name"""
id
  """column name"""
image
  """column name"""
image_small
  """column name"""
link
  """column name"""
name
}

"""
input type for updating data in table "program_sponsors"
"""
input program_sponsors_set_input {
  display_order: Int
  event_id: Int
  exhibitor_id: uuid
  id: Int
  image: String
  image_small: String
  link: String
  name: String
}

"""aggregate stddev on columns"""
type program_sponsors_stddev_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""aggregate stddev_pop on columns"""
type program_sponsors_stddev_pop_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""aggregate stddev_samp on columns"""
type program_sponsors_stddev_samp_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""
Streaming cursor of the table "program_sponsors"
"""
input program_sponsors_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_sponsors_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_sponsors_stream_cursor_value_input {
  display_order: Int
  event_id: Int
  exhibitor_id: uuid
  id: Int
  image: String
  image_small: String
  link: String
  name: String
}

"""aggregate sum on columns"""
type program_sponsors_sum_fields {
   display_order: Int
   event_id: Int
   id: Int
}

"""
update columns of table "program_sponsors"
"""
enum program_sponsors_update_column {
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
exhibitor_id
  """column name"""
id
  """column name"""
image
  """column name"""
image_small
  """column name"""
link
  """column name"""
name
}

input program_sponsors_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_sponsors_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_sponsors_set_input
  where: program_sponsors_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_sponsors_var_pop_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""aggregate var_samp on columns"""
type program_sponsors_var_samp_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""aggregate variance on columns"""
type program_sponsors_variance_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""
columns and relationships of "program_submissions_comments"
"""
type program_submissions_comments {
   approved: Boolean
  """An object relationship"""
 badge: virtual_conference_name_badge
   comment: String! 
  """An array relationship"""
 comments_on_same_submission("""distinct select on columns"""
distinct_on: [program_submissions_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_submissions_comments_order_by! ], """filter the rows returned"""
where: program_submissions_comments_bool_exp): [program_submissions_comments! ]! 
  """An aggregate relationship"""
 comments_on_same_submission_aggregate("""distinct select on columns"""
distinct_on: [program_submissions_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_submissions_comments_order_by! ], """filter the rows returned"""
where: program_submissions_comments_bool_exp): program_submissions_comments_aggregate! 
   created_at: timestamp! 
   event_id: Int! 
   hide: Boolean! 
   id: Int! 
  """An array relationship"""
 read_by_user("""distinct select on columns"""
distinct_on: [read_by_user_program_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [read_by_user_program_comments_order_by! ], """filter the rows returned"""
where: read_by_user_program_comments_bool_exp): [read_by_user_program_comments! ]! 
  """An aggregate relationship"""
 read_by_user_aggregate("""distinct select on columns"""
distinct_on: [read_by_user_program_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [read_by_user_program_comments_order_by! ], """filter the rows returned"""
where: read_by_user_program_comments_bool_exp): read_by_user_program_comments_aggregate! 
   reason_reported: _text
  """An array relationship"""
 replies("""distinct select on columns"""
distinct_on: [program_submissions_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_submissions_comments_order_by! ], """filter the rows returned"""
where: program_submissions_comments_bool_exp): [program_submissions_comments! ]! 
  """An aggregate relationship"""
 replies_aggregate("""distinct select on columns"""
distinct_on: [program_submissions_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_submissions_comments_order_by! ], """filter the rows returned"""
where: program_submissions_comments_bool_exp): program_submissions_comments_aggregate! 
   reply_to: Int
  """An object relationship"""
 replying_to: program_submissions_comments
  """An object relationship"""
 submission: submissions! 
   submission_id: Int! 
   timestamp: bigint! 
  """An object relationship"""
 user: users! 
   user_id: Int! 
}

"""
aggregated selection of "program_submissions_comments"
"""
type program_submissions_comments_aggregate {
   aggregate: program_submissions_comments_aggregate_fields
   nodes: [program_submissions_comments! ]! 
}

input program_submissions_comments_aggregate_bool_exp {
  bool_and: program_submissions_comments_aggregate_bool_exp_bool_and
  bool_or: program_submissions_comments_aggregate_bool_exp_bool_or
  count: program_submissions_comments_aggregate_bool_exp_count
}

input program_submissions_comments_aggregate_bool_exp_bool_and {
  arguments: program_submissions_comments_select_column_program_submissions_comments_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: program_submissions_comments_bool_exp
  predicate: Boolean_comparison_exp! 
}

input program_submissions_comments_aggregate_bool_exp_bool_or {
  arguments: program_submissions_comments_select_column_program_submissions_comments_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: program_submissions_comments_bool_exp
  predicate: Boolean_comparison_exp! 
}

input program_submissions_comments_aggregate_bool_exp_count {
  arguments: [program_submissions_comments_select_column! ]
  distinct: Boolean
  filter: program_submissions_comments_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "program_submissions_comments"
"""
type program_submissions_comments_aggregate_fields {
   avg: program_submissions_comments_avg_fields
   count(columns: [program_submissions_comments_select_column! ], distinct: Boolean): Int! 
   max: program_submissions_comments_max_fields
   min: program_submissions_comments_min_fields
   stddev: program_submissions_comments_stddev_fields
   stddev_pop: program_submissions_comments_stddev_pop_fields
   stddev_samp: program_submissions_comments_stddev_samp_fields
   sum: program_submissions_comments_sum_fields
   var_pop: program_submissions_comments_var_pop_fields
   var_samp: program_submissions_comments_var_samp_fields
   variance: program_submissions_comments_variance_fields
}

"""
order by aggregate values of table "program_submissions_comments"
"""
input program_submissions_comments_aggregate_order_by {
  avg: program_submissions_comments_avg_order_by
  count: order_by
  max: program_submissions_comments_max_order_by
  min: program_submissions_comments_min_order_by
  stddev: program_submissions_comments_stddev_order_by
  stddev_pop: program_submissions_comments_stddev_pop_order_by
  stddev_samp: program_submissions_comments_stddev_samp_order_by
  sum: program_submissions_comments_sum_order_by
  var_pop: program_submissions_comments_var_pop_order_by
  var_samp: program_submissions_comments_var_samp_order_by
  variance: program_submissions_comments_variance_order_by
}

"""
input type for inserting array relation for remote table "program_submissions_comments"
"""
input program_submissions_comments_arr_rel_insert_input {
  data: [program_submissions_comments_insert_input! ]! 
  """upsert condition"""
on_conflict: program_submissions_comments_on_conflict
}

"""aggregate avg on columns"""
type program_submissions_comments_avg_fields {
   event_id: Float
   id: Float
   reply_to: Float
   submission_id: Float
   timestamp: Float
   user_id: Float
}

"""
order by avg() on columns of table "program_submissions_comments"
"""
input program_submissions_comments_avg_order_by {
  event_id: order_by
  id: order_by
  reply_to: order_by
  submission_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "program_submissions_comments". All fields are combined with a logical 'AND'.
"""
input program_submissions_comments_bool_exp {
  _and: [program_submissions_comments_bool_exp! ]
  _not: program_submissions_comments_bool_exp
  _or: [program_submissions_comments_bool_exp! ]
  approved: Boolean_comparison_exp
  badge: virtual_conference_name_badge_bool_exp
  comment: String_comparison_exp
  comments_on_same_submission: program_submissions_comments_bool_exp
  comments_on_same_submission_aggregate: program_submissions_comments_aggregate_bool_exp
  created_at: timestamp_comparison_exp
  event_id: Int_comparison_exp
  hide: Boolean_comparison_exp
  id: Int_comparison_exp
  read_by_user: read_by_user_program_comments_bool_exp
  read_by_user_aggregate: read_by_user_program_comments_aggregate_bool_exp
  reason_reported: _text_comparison_exp
  replies: program_submissions_comments_bool_exp
  replies_aggregate: program_submissions_comments_aggregate_bool_exp
  reply_to: Int_comparison_exp
  replying_to: program_submissions_comments_bool_exp
  submission: submissions_bool_exp
  submission_id: Int_comparison_exp
  timestamp: bigint_comparison_exp
  user: users_bool_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "program_submissions_comments"
"""
enum program_submissions_comments_constraint {
  """
  unique or primary key constraint on columns "program_submission_comment_id"
  """
program_submissions_comments_pkey
}

"""
input type for incrementing numeric columns in table "program_submissions_comments"
"""
input program_submissions_comments_inc_input {
  event_id: Int
  id: Int
  reply_to: Int
  submission_id: Int
  timestamp: bigint
  user_id: Int
}

"""
input type for inserting data into table "program_submissions_comments"
"""
input program_submissions_comments_insert_input {
  approved: Boolean
  badge: virtual_conference_name_badge_obj_rel_insert_input
  comment: String! 
  comments_on_same_submission: program_submissions_comments_arr_rel_insert_input
  created_at: timestamp! 
  event_id: Int! 
  hide: Boolean! 
  id: Int
  read_by_user: read_by_user_program_comments_arr_rel_insert_input
  reason_reported: _text
  replies: program_submissions_comments_arr_rel_insert_input
  reply_to: Int
  replying_to: program_submissions_comments_obj_rel_insert_input
  submission: submissions_obj_rel_insert_input
  submission_id: Int! 
  timestamp: bigint! 
  user: users_obj_rel_insert_input
  user_id: Int! 
}

"""aggregate max on columns"""
type program_submissions_comments_max_fields {
   comment: String
   created_at: timestamp
   event_id: Int
   id: Int
   reply_to: Int
   submission_id: Int
   timestamp: bigint
   user_id: Int
}

"""
order by max() on columns of table "program_submissions_comments"
"""
input program_submissions_comments_max_order_by {
  comment: order_by
  created_at: order_by
  event_id: order_by
  id: order_by
  reply_to: order_by
  submission_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type program_submissions_comments_min_fields {
   comment: String
   created_at: timestamp
   event_id: Int
   id: Int
   reply_to: Int
   submission_id: Int
   timestamp: bigint
   user_id: Int
}

"""
order by min() on columns of table "program_submissions_comments"
"""
input program_submissions_comments_min_order_by {
  comment: order_by
  created_at: order_by
  event_id: order_by
  id: order_by
  reply_to: order_by
  submission_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""
response of any mutation on the table "program_submissions_comments"
"""
type program_submissions_comments_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_submissions_comments! ]! 
}

"""
input type for inserting object relation for remote table "program_submissions_comments"
"""
input program_submissions_comments_obj_rel_insert_input {
  data: program_submissions_comments_insert_input! 
  """upsert condition"""
on_conflict: program_submissions_comments_on_conflict
}

"""
on_conflict condition type for table "program_submissions_comments"
"""
input program_submissions_comments_on_conflict {
  constraint: program_submissions_comments_constraint! 
  update_columns: [program_submissions_comments_update_column! ]! 
  where: program_submissions_comments_bool_exp
}

"""
Ordering options when selecting data from "program_submissions_comments".
"""
input program_submissions_comments_order_by {
  approved: order_by
  badge: virtual_conference_name_badge_order_by
  comment: order_by
  comments_on_same_submission_aggregate: program_submissions_comments_aggregate_order_by
  created_at: order_by
  event_id: order_by
  hide: order_by
  id: order_by
  read_by_user_aggregate: read_by_user_program_comments_aggregate_order_by
  reason_reported: order_by
  replies_aggregate: program_submissions_comments_aggregate_order_by
  reply_to: order_by
  replying_to: program_submissions_comments_order_by
  submission: submissions_order_by
  submission_id: order_by
  timestamp: order_by
  user: users_order_by
  user_id: order_by
}

"""primary key columns input for table: program_submissions_comments"""
input program_submissions_comments_pk_columns_input {
  id: Int! 
}

"""
select columns of table "program_submissions_comments"
"""
enum program_submissions_comments_select_column {
  """column name"""
approved
  """column name"""
comment
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
hide
  """column name"""
id
  """column name"""
reason_reported
  """column name"""
reply_to
  """column name"""
submission_id
  """column name"""
timestamp
  """column name"""
user_id
}

"""
select "program_submissions_comments_aggregate_bool_exp_bool_and_arguments_columns" columns of table "program_submissions_comments"
"""
enum program_submissions_comments_select_column_program_submissions_comments_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
approved
  """column name"""
hide
}

"""
select "program_submissions_comments_aggregate_bool_exp_bool_or_arguments_columns" columns of table "program_submissions_comments"
"""
enum program_submissions_comments_select_column_program_submissions_comments_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
approved
  """column name"""
hide
}

"""
input type for updating data in table "program_submissions_comments"
"""
input program_submissions_comments_set_input {
  approved: Boolean
  comment: String
  created_at: timestamp
  event_id: Int
  hide: Boolean
  id: Int
  reason_reported: _text
  reply_to: Int
  submission_id: Int
  timestamp: bigint
  user_id: Int
}

"""aggregate stddev on columns"""
type program_submissions_comments_stddev_fields {
   event_id: Float
   id: Float
   reply_to: Float
   submission_id: Float
   timestamp: Float
   user_id: Float
}

"""
order by stddev() on columns of table "program_submissions_comments"
"""
input program_submissions_comments_stddev_order_by {
  event_id: order_by
  id: order_by
  reply_to: order_by
  submission_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type program_submissions_comments_stddev_pop_fields {
   event_id: Float
   id: Float
   reply_to: Float
   submission_id: Float
   timestamp: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "program_submissions_comments"
"""
input program_submissions_comments_stddev_pop_order_by {
  event_id: order_by
  id: order_by
  reply_to: order_by
  submission_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type program_submissions_comments_stddev_samp_fields {
   event_id: Float
   id: Float
   reply_to: Float
   submission_id: Float
   timestamp: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "program_submissions_comments"
"""
input program_submissions_comments_stddev_samp_order_by {
  event_id: order_by
  id: order_by
  reply_to: order_by
  submission_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "program_submissions_comments"
"""
input program_submissions_comments_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_submissions_comments_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_submissions_comments_stream_cursor_value_input {
  approved: Boolean
  comment: String
  created_at: timestamp
  event_id: Int
  hide: Boolean
  id: Int
  reason_reported: _text
  reply_to: Int
  submission_id: Int
  timestamp: bigint
  user_id: Int
}

"""aggregate sum on columns"""
type program_submissions_comments_sum_fields {
   event_id: Int
   id: Int
   reply_to: Int
   submission_id: Int
   timestamp: bigint
   user_id: Int
}

"""
order by sum() on columns of table "program_submissions_comments"
"""
input program_submissions_comments_sum_order_by {
  event_id: order_by
  id: order_by
  reply_to: order_by
  submission_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""
update columns of table "program_submissions_comments"
"""
enum program_submissions_comments_update_column {
  """column name"""
approved
  """column name"""
comment
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
hide
  """column name"""
id
  """column name"""
reason_reported
  """column name"""
reply_to
  """column name"""
submission_id
  """column name"""
timestamp
  """column name"""
user_id
}

input program_submissions_comments_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_submissions_comments_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_submissions_comments_set_input
  where: program_submissions_comments_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_submissions_comments_var_pop_fields {
   event_id: Float
   id: Float
   reply_to: Float
   submission_id: Float
   timestamp: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "program_submissions_comments"
"""
input program_submissions_comments_var_pop_order_by {
  event_id: order_by
  id: order_by
  reply_to: order_by
  submission_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type program_submissions_comments_var_samp_fields {
   event_id: Float
   id: Float
   reply_to: Float
   submission_id: Float
   timestamp: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "program_submissions_comments"
"""
input program_submissions_comments_var_samp_order_by {
  event_id: order_by
  id: order_by
  reply_to: order_by
  submission_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type program_submissions_comments_variance_fields {
   event_id: Float
   id: Float
   reply_to: Float
   submission_id: Float
   timestamp: Float
   user_id: Float
}

"""
order by variance() on columns of table "program_submissions_comments"
"""
input program_submissions_comments_variance_order_by {
  event_id: order_by
  id: order_by
  reply_to: order_by
  submission_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""
columns and relationships of "program_symposium_comments"
"""
type program_symposium_comments {
   approved: Boolean
  """An object relationship"""
 badge: virtual_conference_name_badge
   comment: String! 
  """An array relationship"""
 comments_on_same_symposium("""distinct select on columns"""
distinct_on: [program_symposium_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_symposium_comments_order_by! ], """filter the rows returned"""
where: program_symposium_comments_bool_exp): [program_symposium_comments! ]! 
  """An aggregate relationship"""
 comments_on_same_symposium_aggregate("""distinct select on columns"""
distinct_on: [program_symposium_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_symposium_comments_order_by! ], """filter the rows returned"""
where: program_symposium_comments_bool_exp): program_symposium_comments_aggregate! 
   created_at: timestamp! 
   event_id: Int! 
   hide: Boolean! 
   program_symposium_comment_id: Int! 
  """An array relationship"""
 read_by_user("""distinct select on columns"""
distinct_on: [read_by_user_program_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [read_by_user_program_comments_order_by! ], """filter the rows returned"""
where: read_by_user_program_comments_bool_exp): [read_by_user_program_comments! ]! 
  """An aggregate relationship"""
 read_by_user_aggregate("""distinct select on columns"""
distinct_on: [read_by_user_program_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [read_by_user_program_comments_order_by! ], """filter the rows returned"""
where: read_by_user_program_comments_bool_exp): read_by_user_program_comments_aggregate! 
   reason_reported: _text
  """An array relationship"""
 replies("""distinct select on columns"""
distinct_on: [program_symposium_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_symposium_comments_order_by! ], """filter the rows returned"""
where: program_symposium_comments_bool_exp): [program_symposium_comments! ]! 
  """An aggregate relationship"""
 replies_aggregate("""distinct select on columns"""
distinct_on: [program_symposium_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_symposium_comments_order_by! ], """filter the rows returned"""
where: program_symposium_comments_bool_exp): program_symposium_comments_aggregate! 
   reply_to: Int
  """An object relationship"""
 replying_to: program_symposium_comments
  """An object relationship"""
 symposium: symposia! 
   symposium_id: Int! 
   timestamp: bigint! 
  """An object relationship"""
 user: users! 
   user_id: Int! 
}

"""
aggregated selection of "program_symposium_comments"
"""
type program_symposium_comments_aggregate {
   aggregate: program_symposium_comments_aggregate_fields
   nodes: [program_symposium_comments! ]! 
}

input program_symposium_comments_aggregate_bool_exp {
  bool_and: program_symposium_comments_aggregate_bool_exp_bool_and
  bool_or: program_symposium_comments_aggregate_bool_exp_bool_or
  count: program_symposium_comments_aggregate_bool_exp_count
}

input program_symposium_comments_aggregate_bool_exp_bool_and {
  arguments: program_symposium_comments_select_column_program_symposium_comments_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: program_symposium_comments_bool_exp
  predicate: Boolean_comparison_exp! 
}

input program_symposium_comments_aggregate_bool_exp_bool_or {
  arguments: program_symposium_comments_select_column_program_symposium_comments_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: program_symposium_comments_bool_exp
  predicate: Boolean_comparison_exp! 
}

input program_symposium_comments_aggregate_bool_exp_count {
  arguments: [program_symposium_comments_select_column! ]
  distinct: Boolean
  filter: program_symposium_comments_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "program_symposium_comments"
"""
type program_symposium_comments_aggregate_fields {
   avg: program_symposium_comments_avg_fields
   count(columns: [program_symposium_comments_select_column! ], distinct: Boolean): Int! 
   max: program_symposium_comments_max_fields
   min: program_symposium_comments_min_fields
   stddev: program_symposium_comments_stddev_fields
   stddev_pop: program_symposium_comments_stddev_pop_fields
   stddev_samp: program_symposium_comments_stddev_samp_fields
   sum: program_symposium_comments_sum_fields
   var_pop: program_symposium_comments_var_pop_fields
   var_samp: program_symposium_comments_var_samp_fields
   variance: program_symposium_comments_variance_fields
}

"""
order by aggregate values of table "program_symposium_comments"
"""
input program_symposium_comments_aggregate_order_by {
  avg: program_symposium_comments_avg_order_by
  count: order_by
  max: program_symposium_comments_max_order_by
  min: program_symposium_comments_min_order_by
  stddev: program_symposium_comments_stddev_order_by
  stddev_pop: program_symposium_comments_stddev_pop_order_by
  stddev_samp: program_symposium_comments_stddev_samp_order_by
  sum: program_symposium_comments_sum_order_by
  var_pop: program_symposium_comments_var_pop_order_by
  var_samp: program_symposium_comments_var_samp_order_by
  variance: program_symposium_comments_variance_order_by
}

"""
input type for inserting array relation for remote table "program_symposium_comments"
"""
input program_symposium_comments_arr_rel_insert_input {
  data: [program_symposium_comments_insert_input! ]! 
  """upsert condition"""
on_conflict: program_symposium_comments_on_conflict
}

"""aggregate avg on columns"""
type program_symposium_comments_avg_fields {
   event_id: Float
   program_symposium_comment_id: Float
   reply_to: Float
   symposium_id: Float
   timestamp: Float
   user_id: Float
}

"""
order by avg() on columns of table "program_symposium_comments"
"""
input program_symposium_comments_avg_order_by {
  event_id: order_by
  program_symposium_comment_id: order_by
  reply_to: order_by
  symposium_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "program_symposium_comments". All fields are combined with a logical 'AND'.
"""
input program_symposium_comments_bool_exp {
  _and: [program_symposium_comments_bool_exp! ]
  _not: program_symposium_comments_bool_exp
  _or: [program_symposium_comments_bool_exp! ]
  approved: Boolean_comparison_exp
  badge: virtual_conference_name_badge_bool_exp
  comment: String_comparison_exp
  comments_on_same_symposium: program_symposium_comments_bool_exp
  comments_on_same_symposium_aggregate: program_symposium_comments_aggregate_bool_exp
  created_at: timestamp_comparison_exp
  event_id: Int_comparison_exp
  hide: Boolean_comparison_exp
  program_symposium_comment_id: Int_comparison_exp
  read_by_user: read_by_user_program_comments_bool_exp
  read_by_user_aggregate: read_by_user_program_comments_aggregate_bool_exp
  reason_reported: _text_comparison_exp
  replies: program_symposium_comments_bool_exp
  replies_aggregate: program_symposium_comments_aggregate_bool_exp
  reply_to: Int_comparison_exp
  replying_to: program_symposium_comments_bool_exp
  symposium: symposia_bool_exp
  symposium_id: Int_comparison_exp
  timestamp: bigint_comparison_exp
  user: users_bool_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "program_symposium_comments"
"""
enum program_symposium_comments_constraint {
  """
  unique or primary key constraint on columns "program_symposium_comment_id"
  """
program_symposium_comments_pkey
}

"""
input type for incrementing numeric columns in table "program_symposium_comments"
"""
input program_symposium_comments_inc_input {
  event_id: Int
  program_symposium_comment_id: Int
  reply_to: Int
  symposium_id: Int
  timestamp: bigint
  user_id: Int
}

"""
input type for inserting data into table "program_symposium_comments"
"""
input program_symposium_comments_insert_input {
  approved: Boolean
  badge: virtual_conference_name_badge_obj_rel_insert_input
  comment: String! 
  comments_on_same_symposium: program_symposium_comments_arr_rel_insert_input
  created_at: timestamp! 
  event_id: Int! 
  hide: Boolean! 
  program_symposium_comment_id: Int! 
  read_by_user: read_by_user_program_comments_arr_rel_insert_input
  reason_reported: _text
  replies: program_symposium_comments_arr_rel_insert_input
  reply_to: Int
  replying_to: program_symposium_comments_obj_rel_insert_input
  symposium: symposia_obj_rel_insert_input
  symposium_id: Int! 
  timestamp: bigint! 
  user: users_obj_rel_insert_input
  user_id: Int! 
}

"""aggregate max on columns"""
type program_symposium_comments_max_fields {
   comment: String
   created_at: timestamp
   event_id: Int
   program_symposium_comment_id: Int
   reply_to: Int
   symposium_id: Int
   timestamp: bigint
   user_id: Int
}

"""
order by max() on columns of table "program_symposium_comments"
"""
input program_symposium_comments_max_order_by {
  comment: order_by
  created_at: order_by
  event_id: order_by
  program_symposium_comment_id: order_by
  reply_to: order_by
  symposium_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type program_symposium_comments_min_fields {
   comment: String
   created_at: timestamp
   event_id: Int
   program_symposium_comment_id: Int
   reply_to: Int
   symposium_id: Int
   timestamp: bigint
   user_id: Int
}

"""
order by min() on columns of table "program_symposium_comments"
"""
input program_symposium_comments_min_order_by {
  comment: order_by
  created_at: order_by
  event_id: order_by
  program_symposium_comment_id: order_by
  reply_to: order_by
  symposium_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""
response of any mutation on the table "program_symposium_comments"
"""
type program_symposium_comments_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_symposium_comments! ]! 
}

"""
input type for inserting object relation for remote table "program_symposium_comments"
"""
input program_symposium_comments_obj_rel_insert_input {
  data: program_symposium_comments_insert_input! 
  """upsert condition"""
on_conflict: program_symposium_comments_on_conflict
}

"""
on_conflict condition type for table "program_symposium_comments"
"""
input program_symposium_comments_on_conflict {
  constraint: program_symposium_comments_constraint! 
  update_columns: [program_symposium_comments_update_column! ]! 
  where: program_symposium_comments_bool_exp
}

"""
Ordering options when selecting data from "program_symposium_comments".
"""
input program_symposium_comments_order_by {
  approved: order_by
  badge: virtual_conference_name_badge_order_by
  comment: order_by
  comments_on_same_symposium_aggregate: program_symposium_comments_aggregate_order_by
  created_at: order_by
  event_id: order_by
  hide: order_by
  program_symposium_comment_id: order_by
  read_by_user_aggregate: read_by_user_program_comments_aggregate_order_by
  reason_reported: order_by
  replies_aggregate: program_symposium_comments_aggregate_order_by
  reply_to: order_by
  replying_to: program_symposium_comments_order_by
  symposium: symposia_order_by
  symposium_id: order_by
  timestamp: order_by
  user: users_order_by
  user_id: order_by
}

"""primary key columns input for table: program_symposium_comments"""
input program_symposium_comments_pk_columns_input {
  program_symposium_comment_id: Int! 
}

"""
select columns of table "program_symposium_comments"
"""
enum program_symposium_comments_select_column {
  """column name"""
approved
  """column name"""
comment
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
hide
  """column name"""
program_symposium_comment_id
  """column name"""
reason_reported
  """column name"""
reply_to
  """column name"""
symposium_id
  """column name"""
timestamp
  """column name"""
user_id
}

"""
select "program_symposium_comments_aggregate_bool_exp_bool_and_arguments_columns" columns of table "program_symposium_comments"
"""
enum program_symposium_comments_select_column_program_symposium_comments_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
approved
  """column name"""
hide
}

"""
select "program_symposium_comments_aggregate_bool_exp_bool_or_arguments_columns" columns of table "program_symposium_comments"
"""
enum program_symposium_comments_select_column_program_symposium_comments_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
approved
  """column name"""
hide
}

"""
input type for updating data in table "program_symposium_comments"
"""
input program_symposium_comments_set_input {
  approved: Boolean
  comment: String
  created_at: timestamp
  event_id: Int
  hide: Boolean
  program_symposium_comment_id: Int
  reason_reported: _text
  reply_to: Int
  symposium_id: Int
  timestamp: bigint
  user_id: Int
}

"""aggregate stddev on columns"""
type program_symposium_comments_stddev_fields {
   event_id: Float
   program_symposium_comment_id: Float
   reply_to: Float
   symposium_id: Float
   timestamp: Float
   user_id: Float
}

"""
order by stddev() on columns of table "program_symposium_comments"
"""
input program_symposium_comments_stddev_order_by {
  event_id: order_by
  program_symposium_comment_id: order_by
  reply_to: order_by
  symposium_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type program_symposium_comments_stddev_pop_fields {
   event_id: Float
   program_symposium_comment_id: Float
   reply_to: Float
   symposium_id: Float
   timestamp: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "program_symposium_comments"
"""
input program_symposium_comments_stddev_pop_order_by {
  event_id: order_by
  program_symposium_comment_id: order_by
  reply_to: order_by
  symposium_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type program_symposium_comments_stddev_samp_fields {
   event_id: Float
   program_symposium_comment_id: Float
   reply_to: Float
   symposium_id: Float
   timestamp: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "program_symposium_comments"
"""
input program_symposium_comments_stddev_samp_order_by {
  event_id: order_by
  program_symposium_comment_id: order_by
  reply_to: order_by
  symposium_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "program_symposium_comments"
"""
input program_symposium_comments_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_symposium_comments_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_symposium_comments_stream_cursor_value_input {
  approved: Boolean
  comment: String
  created_at: timestamp
  event_id: Int
  hide: Boolean
  program_symposium_comment_id: Int
  reason_reported: _text
  reply_to: Int
  symposium_id: Int
  timestamp: bigint
  user_id: Int
}

"""aggregate sum on columns"""
type program_symposium_comments_sum_fields {
   event_id: Int
   program_symposium_comment_id: Int
   reply_to: Int
   symposium_id: Int
   timestamp: bigint
   user_id: Int
}

"""
order by sum() on columns of table "program_symposium_comments"
"""
input program_symposium_comments_sum_order_by {
  event_id: order_by
  program_symposium_comment_id: order_by
  reply_to: order_by
  symposium_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""
update columns of table "program_symposium_comments"
"""
enum program_symposium_comments_update_column {
  """column name"""
approved
  """column name"""
comment
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
hide
  """column name"""
program_symposium_comment_id
  """column name"""
reason_reported
  """column name"""
reply_to
  """column name"""
symposium_id
  """column name"""
timestamp
  """column name"""
user_id
}

input program_symposium_comments_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_symposium_comments_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_symposium_comments_set_input
  where: program_symposium_comments_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_symposium_comments_var_pop_fields {
   event_id: Float
   program_symposium_comment_id: Float
   reply_to: Float
   symposium_id: Float
   timestamp: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "program_symposium_comments"
"""
input program_symposium_comments_var_pop_order_by {
  event_id: order_by
  program_symposium_comment_id: order_by
  reply_to: order_by
  symposium_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type program_symposium_comments_var_samp_fields {
   event_id: Float
   program_symposium_comment_id: Float
   reply_to: Float
   symposium_id: Float
   timestamp: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "program_symposium_comments"
"""
input program_symposium_comments_var_samp_order_by {
  event_id: order_by
  program_symposium_comment_id: order_by
  reply_to: order_by
  symposium_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type program_symposium_comments_variance_fields {
   event_id: Float
   program_symposium_comment_id: Float
   reply_to: Float
   symposium_id: Float
   timestamp: Float
   user_id: Float
}

"""
order by variance() on columns of table "program_symposium_comments"
"""
input program_symposium_comments_variance_order_by {
  event_id: order_by
  program_symposium_comment_id: order_by
  reply_to: order_by
  symposium_id: order_by
  timestamp: order_by
  user_id: order_by
}

"""
columns and relationships of "program_tabs"
"""
type program_tabs {
   attendees: String
   attendees_order: Int! 
   attendees_visibility: Boolean
   authors: String
   authors_order: Int! 
   authors_visibility: Boolean
   chairs: String
   chairs_order: Int! 
   chairs_visibility: Boolean
   discussants: String
   discussants_order: Int! 
   discussants_visibility: Boolean
   event_id: Int! 
   information: String
   information_order: Int! 
   information_visibility: Boolean
   people: String
   people_order: Int! 
   people_visibility: Boolean
   poster_gallery: String
   poster_gallery_order: Int! 
   poster_gallery_visibility: Boolean
   presenters: String
   presenters_order: Int! 
   presenters_visibility: Boolean
   program: String
   program_codes: String
   program_codes_order: Int! 
   program_codes_visibility: Boolean
   program_order: Int! 
   program_visibility: Boolean
   secondary_information: String
   secondary_information_order: Int! 
   secondary_information_visibility: Boolean
   session_types: String
   session_types_order: Int! 
   session_types_visibility: Boolean
   symposia: String
   symposia_order: Int! 
   symposia_visibility: Boolean
   titles: String
   titles_order: Int! 
   titles_visibility: Boolean
   topics: String
   topics_order: Int! 
   topics_visibility: Boolean
   tracks: String
   tracks_order: Int! 
   tracks_visibility: Boolean
}

"""
aggregated selection of "program_tabs"
"""
type program_tabs_aggregate {
   aggregate: program_tabs_aggregate_fields
   nodes: [program_tabs! ]! 
}

"""
aggregate fields of "program_tabs"
"""
type program_tabs_aggregate_fields {
   avg: program_tabs_avg_fields
   count(columns: [program_tabs_select_column! ], distinct: Boolean): Int! 
   max: program_tabs_max_fields
   min: program_tabs_min_fields
   stddev: program_tabs_stddev_fields
   stddev_pop: program_tabs_stddev_pop_fields
   stddev_samp: program_tabs_stddev_samp_fields
   sum: program_tabs_sum_fields
   var_pop: program_tabs_var_pop_fields
   var_samp: program_tabs_var_samp_fields
   variance: program_tabs_variance_fields
}

"""aggregate avg on columns"""
type program_tabs_avg_fields {
   attendees_order: Float
   authors_order: Float
   chairs_order: Float
   discussants_order: Float
   event_id: Float
   information_order: Float
   people_order: Float
   poster_gallery_order: Float
   presenters_order: Float
   program_codes_order: Float
   program_order: Float
   secondary_information_order: Float
   session_types_order: Float
   symposia_order: Float
   titles_order: Float
   topics_order: Float
   tracks_order: Float
}

"""
Boolean expression to filter rows from the table "program_tabs". All fields are combined with a logical 'AND'.
"""
input program_tabs_bool_exp {
  _and: [program_tabs_bool_exp! ]
  _not: program_tabs_bool_exp
  _or: [program_tabs_bool_exp! ]
  attendees: String_comparison_exp
  attendees_order: Int_comparison_exp
  attendees_visibility: Boolean_comparison_exp
  authors: String_comparison_exp
  authors_order: Int_comparison_exp
  authors_visibility: Boolean_comparison_exp
  chairs: String_comparison_exp
  chairs_order: Int_comparison_exp
  chairs_visibility: Boolean_comparison_exp
  discussants: String_comparison_exp
  discussants_order: Int_comparison_exp
  discussants_visibility: Boolean_comparison_exp
  event_id: Int_comparison_exp
  information: String_comparison_exp
  information_order: Int_comparison_exp
  information_visibility: Boolean_comparison_exp
  people: String_comparison_exp
  people_order: Int_comparison_exp
  people_visibility: Boolean_comparison_exp
  poster_gallery: String_comparison_exp
  poster_gallery_order: Int_comparison_exp
  poster_gallery_visibility: Boolean_comparison_exp
  presenters: String_comparison_exp
  presenters_order: Int_comparison_exp
  presenters_visibility: Boolean_comparison_exp
  program: String_comparison_exp
  program_codes: String_comparison_exp
  program_codes_order: Int_comparison_exp
  program_codes_visibility: Boolean_comparison_exp
  program_order: Int_comparison_exp
  program_visibility: Boolean_comparison_exp
  secondary_information: String_comparison_exp
  secondary_information_order: Int_comparison_exp
  secondary_information_visibility: Boolean_comparison_exp
  session_types: String_comparison_exp
  session_types_order: Int_comparison_exp
  session_types_visibility: Boolean_comparison_exp
  symposia: String_comparison_exp
  symposia_order: Int_comparison_exp
  symposia_visibility: Boolean_comparison_exp
  titles: String_comparison_exp
  titles_order: Int_comparison_exp
  titles_visibility: Boolean_comparison_exp
  topics: String_comparison_exp
  topics_order: Int_comparison_exp
  topics_visibility: Boolean_comparison_exp
  tracks: String_comparison_exp
  tracks_order: Int_comparison_exp
  tracks_visibility: Boolean_comparison_exp
}

"""
unique or primary key constraints on table "program_tabs"
"""
enum program_tabs_constraint {
  """
  unique or primary key constraint on columns "event_id"
  """
program_tabs_event_id_key
}

"""
input type for incrementing numeric columns in table "program_tabs"
"""
input program_tabs_inc_input {
  attendees_order: Int
  authors_order: Int
  chairs_order: Int
  discussants_order: Int
  event_id: Int
  information_order: Int
  people_order: Int
  poster_gallery_order: Int
  presenters_order: Int
  program_codes_order: Int
  program_order: Int
  secondary_information_order: Int
  session_types_order: Int
  symposia_order: Int
  titles_order: Int
  topics_order: Int
  tracks_order: Int
}

"""
input type for inserting data into table "program_tabs"
"""
input program_tabs_insert_input {
  attendees: String! 
  attendees_order: Int! 
  attendees_visibility: Boolean! 
  authors: String
  authors_order: Int! 
  authors_visibility: Boolean
  chairs: String
  chairs_order: Int! 
  chairs_visibility: Boolean
  discussants: String
  discussants_order: Int! 
  discussants_visibility: Boolean
  event_id: Int! 
  information: String
  information_order: Int! 
  information_visibility: Boolean
  people: String! 
  people_order: Int! 
  people_visibility: Boolean! 
  poster_gallery: String! 
  poster_gallery_order: Int! 
  poster_gallery_visibility: Boolean! 
  presenters: String
  presenters_order: Int! 
  presenters_visibility: Boolean
  program: String
  program_codes: String
  program_codes_order: Int! 
  program_codes_visibility: Boolean
  program_order: Int! 
  program_visibility: Boolean
  secondary_information: String
  secondary_information_order: Int! 
  secondary_information_visibility: Boolean
  session_types: String
  session_types_order: Int! 
  session_types_visibility: Boolean
  symposia: String
  symposia_order: Int! 
  symposia_visibility: Boolean
  titles: String
  titles_order: Int! 
  titles_visibility: Boolean
  topics: String
  topics_order: Int! 
  topics_visibility: Boolean
  tracks: String
  tracks_order: Int! 
  tracks_visibility: Boolean
}

"""aggregate max on columns"""
type program_tabs_max_fields {
   attendees: String
   attendees_order: Int
   authors: String
   authors_order: Int
   chairs: String
   chairs_order: Int
   discussants: String
   discussants_order: Int
   event_id: Int
   information: String
   information_order: Int
   people: String
   people_order: Int
   poster_gallery: String
   poster_gallery_order: Int
   presenters: String
   presenters_order: Int
   program: String
   program_codes: String
   program_codes_order: Int
   program_order: Int
   secondary_information: String
   secondary_information_order: Int
   session_types: String
   session_types_order: Int
   symposia: String
   symposia_order: Int
   titles: String
   titles_order: Int
   topics: String
   topics_order: Int
   tracks: String
   tracks_order: Int
}

"""aggregate min on columns"""
type program_tabs_min_fields {
   attendees: String
   attendees_order: Int
   authors: String
   authors_order: Int
   chairs: String
   chairs_order: Int
   discussants: String
   discussants_order: Int
   event_id: Int
   information: String
   information_order: Int
   people: String
   people_order: Int
   poster_gallery: String
   poster_gallery_order: Int
   presenters: String
   presenters_order: Int
   program: String
   program_codes: String
   program_codes_order: Int
   program_order: Int
   secondary_information: String
   secondary_information_order: Int
   session_types: String
   session_types_order: Int
   symposia: String
   symposia_order: Int
   titles: String
   titles_order: Int
   topics: String
   topics_order: Int
   tracks: String
   tracks_order: Int
}

"""
response of any mutation on the table "program_tabs"
"""
type program_tabs_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_tabs! ]! 
}

"""
on_conflict condition type for table "program_tabs"
"""
input program_tabs_on_conflict {
  constraint: program_tabs_constraint! 
  update_columns: [program_tabs_update_column! ]! 
  where: program_tabs_bool_exp
}

"""Ordering options when selecting data from "program_tabs"."""
input program_tabs_order_by {
  attendees: order_by
  attendees_order: order_by
  attendees_visibility: order_by
  authors: order_by
  authors_order: order_by
  authors_visibility: order_by
  chairs: order_by
  chairs_order: order_by
  chairs_visibility: order_by
  discussants: order_by
  discussants_order: order_by
  discussants_visibility: order_by
  event_id: order_by
  information: order_by
  information_order: order_by
  information_visibility: order_by
  people: order_by
  people_order: order_by
  people_visibility: order_by
  poster_gallery: order_by
  poster_gallery_order: order_by
  poster_gallery_visibility: order_by
  presenters: order_by
  presenters_order: order_by
  presenters_visibility: order_by
  program: order_by
  program_codes: order_by
  program_codes_order: order_by
  program_codes_visibility: order_by
  program_order: order_by
  program_visibility: order_by
  secondary_information: order_by
  secondary_information_order: order_by
  secondary_information_visibility: order_by
  session_types: order_by
  session_types_order: order_by
  session_types_visibility: order_by
  symposia: order_by
  symposia_order: order_by
  symposia_visibility: order_by
  titles: order_by
  titles_order: order_by
  titles_visibility: order_by
  topics: order_by
  topics_order: order_by
  topics_visibility: order_by
  tracks: order_by
  tracks_order: order_by
  tracks_visibility: order_by
}

"""
select columns of table "program_tabs"
"""
enum program_tabs_select_column {
  """column name"""
attendees
  """column name"""
attendees_order
  """column name"""
attendees_visibility
  """column name"""
authors
  """column name"""
authors_order
  """column name"""
authors_visibility
  """column name"""
chairs
  """column name"""
chairs_order
  """column name"""
chairs_visibility
  """column name"""
discussants
  """column name"""
discussants_order
  """column name"""
discussants_visibility
  """column name"""
event_id
  """column name"""
information
  """column name"""
information_order
  """column name"""
information_visibility
  """column name"""
people
  """column name"""
people_order
  """column name"""
people_visibility
  """column name"""
poster_gallery
  """column name"""
poster_gallery_order
  """column name"""
poster_gallery_visibility
  """column name"""
presenters
  """column name"""
presenters_order
  """column name"""
presenters_visibility
  """column name"""
program
  """column name"""
program_codes
  """column name"""
program_codes_order
  """column name"""
program_codes_visibility
  """column name"""
program_order
  """column name"""
program_visibility
  """column name"""
secondary_information
  """column name"""
secondary_information_order
  """column name"""
secondary_information_visibility
  """column name"""
session_types
  """column name"""
session_types_order
  """column name"""
session_types_visibility
  """column name"""
symposia
  """column name"""
symposia_order
  """column name"""
symposia_visibility
  """column name"""
titles
  """column name"""
titles_order
  """column name"""
titles_visibility
  """column name"""
topics
  """column name"""
topics_order
  """column name"""
topics_visibility
  """column name"""
tracks
  """column name"""
tracks_order
  """column name"""
tracks_visibility
}

"""
input type for updating data in table "program_tabs"
"""
input program_tabs_set_input {
  attendees: String
  attendees_order: Int
  attendees_visibility: Boolean
  authors: String
  authors_order: Int
  authors_visibility: Boolean
  chairs: String
  chairs_order: Int
  chairs_visibility: Boolean
  discussants: String
  discussants_order: Int
  discussants_visibility: Boolean
  event_id: Int
  information: String
  information_order: Int
  information_visibility: Boolean
  people: String
  people_order: Int
  people_visibility: Boolean
  poster_gallery: String
  poster_gallery_order: Int
  poster_gallery_visibility: Boolean
  presenters: String
  presenters_order: Int
  presenters_visibility: Boolean
  program: String
  program_codes: String
  program_codes_order: Int
  program_codes_visibility: Boolean
  program_order: Int
  program_visibility: Boolean
  secondary_information: String
  secondary_information_order: Int
  secondary_information_visibility: Boolean
  session_types: String
  session_types_order: Int
  session_types_visibility: Boolean
  symposia: String
  symposia_order: Int
  symposia_visibility: Boolean
  titles: String
  titles_order: Int
  titles_visibility: Boolean
  topics: String
  topics_order: Int
  topics_visibility: Boolean
  tracks: String
  tracks_order: Int
  tracks_visibility: Boolean
}

"""aggregate stddev on columns"""
type program_tabs_stddev_fields {
   attendees_order: Float
   authors_order: Float
   chairs_order: Float
   discussants_order: Float
   event_id: Float
   information_order: Float
   people_order: Float
   poster_gallery_order: Float
   presenters_order: Float
   program_codes_order: Float
   program_order: Float
   secondary_information_order: Float
   session_types_order: Float
   symposia_order: Float
   titles_order: Float
   topics_order: Float
   tracks_order: Float
}

"""aggregate stddev_pop on columns"""
type program_tabs_stddev_pop_fields {
   attendees_order: Float
   authors_order: Float
   chairs_order: Float
   discussants_order: Float
   event_id: Float
   information_order: Float
   people_order: Float
   poster_gallery_order: Float
   presenters_order: Float
   program_codes_order: Float
   program_order: Float
   secondary_information_order: Float
   session_types_order: Float
   symposia_order: Float
   titles_order: Float
   topics_order: Float
   tracks_order: Float
}

"""aggregate stddev_samp on columns"""
type program_tabs_stddev_samp_fields {
   attendees_order: Float
   authors_order: Float
   chairs_order: Float
   discussants_order: Float
   event_id: Float
   information_order: Float
   people_order: Float
   poster_gallery_order: Float
   presenters_order: Float
   program_codes_order: Float
   program_order: Float
   secondary_information_order: Float
   session_types_order: Float
   symposia_order: Float
   titles_order: Float
   topics_order: Float
   tracks_order: Float
}

"""
Streaming cursor of the table "program_tabs"
"""
input program_tabs_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_tabs_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_tabs_stream_cursor_value_input {
  attendees: String
  attendees_order: Int
  attendees_visibility: Boolean
  authors: String
  authors_order: Int
  authors_visibility: Boolean
  chairs: String
  chairs_order: Int
  chairs_visibility: Boolean
  discussants: String
  discussants_order: Int
  discussants_visibility: Boolean
  event_id: Int
  information: String
  information_order: Int
  information_visibility: Boolean
  people: String
  people_order: Int
  people_visibility: Boolean
  poster_gallery: String
  poster_gallery_order: Int
  poster_gallery_visibility: Boolean
  presenters: String
  presenters_order: Int
  presenters_visibility: Boolean
  program: String
  program_codes: String
  program_codes_order: Int
  program_codes_visibility: Boolean
  program_order: Int
  program_visibility: Boolean
  secondary_information: String
  secondary_information_order: Int
  secondary_information_visibility: Boolean
  session_types: String
  session_types_order: Int
  session_types_visibility: Boolean
  symposia: String
  symposia_order: Int
  symposia_visibility: Boolean
  titles: String
  titles_order: Int
  titles_visibility: Boolean
  topics: String
  topics_order: Int
  topics_visibility: Boolean
  tracks: String
  tracks_order: Int
  tracks_visibility: Boolean
}

"""aggregate sum on columns"""
type program_tabs_sum_fields {
   attendees_order: Int
   authors_order: Int
   chairs_order: Int
   discussants_order: Int
   event_id: Int
   information_order: Int
   people_order: Int
   poster_gallery_order: Int
   presenters_order: Int
   program_codes_order: Int
   program_order: Int
   secondary_information_order: Int
   session_types_order: Int
   symposia_order: Int
   titles_order: Int
   topics_order: Int
   tracks_order: Int
}

"""
update columns of table "program_tabs"
"""
enum program_tabs_update_column {
  """column name"""
attendees
  """column name"""
attendees_order
  """column name"""
attendees_visibility
  """column name"""
authors
  """column name"""
authors_order
  """column name"""
authors_visibility
  """column name"""
chairs
  """column name"""
chairs_order
  """column name"""
chairs_visibility
  """column name"""
discussants
  """column name"""
discussants_order
  """column name"""
discussants_visibility
  """column name"""
event_id
  """column name"""
information
  """column name"""
information_order
  """column name"""
information_visibility
  """column name"""
people
  """column name"""
people_order
  """column name"""
people_visibility
  """column name"""
poster_gallery
  """column name"""
poster_gallery_order
  """column name"""
poster_gallery_visibility
  """column name"""
presenters
  """column name"""
presenters_order
  """column name"""
presenters_visibility
  """column name"""
program
  """column name"""
program_codes
  """column name"""
program_codes_order
  """column name"""
program_codes_visibility
  """column name"""
program_order
  """column name"""
program_visibility
  """column name"""
secondary_information
  """column name"""
secondary_information_order
  """column name"""
secondary_information_visibility
  """column name"""
session_types
  """column name"""
session_types_order
  """column name"""
session_types_visibility
  """column name"""
symposia
  """column name"""
symposia_order
  """column name"""
symposia_visibility
  """column name"""
titles
  """column name"""
titles_order
  """column name"""
titles_visibility
  """column name"""
topics
  """column name"""
topics_order
  """column name"""
topics_visibility
  """column name"""
tracks
  """column name"""
tracks_order
  """column name"""
tracks_visibility
}

input program_tabs_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_tabs_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_tabs_set_input
  where: program_tabs_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_tabs_var_pop_fields {
   attendees_order: Float
   authors_order: Float
   chairs_order: Float
   discussants_order: Float
   event_id: Float
   information_order: Float
   people_order: Float
   poster_gallery_order: Float
   presenters_order: Float
   program_codes_order: Float
   program_order: Float
   secondary_information_order: Float
   session_types_order: Float
   symposia_order: Float
   titles_order: Float
   topics_order: Float
   tracks_order: Float
}

"""aggregate var_samp on columns"""
type program_tabs_var_samp_fields {
   attendees_order: Float
   authors_order: Float
   chairs_order: Float
   discussants_order: Float
   event_id: Float
   information_order: Float
   people_order: Float
   poster_gallery_order: Float
   presenters_order: Float
   program_codes_order: Float
   program_order: Float
   secondary_information_order: Float
   session_types_order: Float
   symposia_order: Float
   titles_order: Float
   topics_order: Float
   tracks_order: Float
}

"""aggregate variance on columns"""
type program_tabs_variance_fields {
   attendees_order: Float
   authors_order: Float
   chairs_order: Float
   discussants_order: Float
   event_id: Float
   information_order: Float
   people_order: Float
   poster_gallery_order: Float
   presenters_order: Float
   program_codes_order: Float
   program_order: Float
   secondary_information_order: Float
   session_types_order: Float
   symposia_order: Float
   titles_order: Float
   topics_order: Float
   tracks_order: Float
}

"""
columns and relationships of "program_tracks"
"""
type program_tracks {
   colour: String
  """An object relationship"""
 event: events
   event_id: Int! 
   name: String! 
  """An array relationship"""
 program_sessions("""distinct select on columns"""
distinct_on: [program_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_order_by! ], """filter the rows returned"""
where: program_sessions_bool_exp): [program_sessions! ]! 
  """An aggregate relationship"""
 program_sessions_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_order_by! ], """filter the rows returned"""
where: program_sessions_bool_exp): program_sessions_aggregate! 
   program_track_id: Int! 
}

"""
aggregated selection of "program_tracks"
"""
type program_tracks_aggregate {
   aggregate: program_tracks_aggregate_fields
   nodes: [program_tracks! ]! 
}

"""
aggregate fields of "program_tracks"
"""
type program_tracks_aggregate_fields {
   avg: program_tracks_avg_fields
   count(columns: [program_tracks_select_column! ], distinct: Boolean): Int! 
   max: program_tracks_max_fields
   min: program_tracks_min_fields
   stddev: program_tracks_stddev_fields
   stddev_pop: program_tracks_stddev_pop_fields
   stddev_samp: program_tracks_stddev_samp_fields
   sum: program_tracks_sum_fields
   var_pop: program_tracks_var_pop_fields
   var_samp: program_tracks_var_samp_fields
   variance: program_tracks_variance_fields
}

"""aggregate avg on columns"""
type program_tracks_avg_fields {
   event_id: Float
   program_track_id: Float
}

"""
Boolean expression to filter rows from the table "program_tracks". All fields are combined with a logical 'AND'.
"""
input program_tracks_bool_exp {
  _and: [program_tracks_bool_exp! ]
  _not: program_tracks_bool_exp
  _or: [program_tracks_bool_exp! ]
  colour: String_comparison_exp
  event: events_bool_exp
  event_id: Int_comparison_exp
  name: String_comparison_exp
  program_sessions: program_sessions_bool_exp
  program_sessions_aggregate: program_sessions_aggregate_bool_exp
  program_track_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "program_tracks"
"""
enum program_tracks_constraint {
  """
  unique or primary key constraint on columns "program_track_id"
  """
program_tracks_pkey
}

"""
input type for incrementing numeric columns in table "program_tracks"
"""
input program_tracks_inc_input {
  event_id: Int
  program_track_id: Int
}

"""
input type for inserting data into table "program_tracks"
"""
input program_tracks_insert_input {
  colour: String
  event: events_obj_rel_insert_input
  event_id: Int! 
  name: String! 
  program_sessions: program_sessions_arr_rel_insert_input
  program_track_id: Int! 
}

"""aggregate max on columns"""
type program_tracks_max_fields {
   colour: String
   event_id: Int
   name: String
   program_track_id: Int
}

"""aggregate min on columns"""
type program_tracks_min_fields {
   colour: String
   event_id: Int
   name: String
   program_track_id: Int
}

"""
response of any mutation on the table "program_tracks"
"""
type program_tracks_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_tracks! ]! 
}

"""
input type for inserting object relation for remote table "program_tracks"
"""
input program_tracks_obj_rel_insert_input {
  data: program_tracks_insert_input! 
  """upsert condition"""
on_conflict: program_tracks_on_conflict
}

"""
on_conflict condition type for table "program_tracks"
"""
input program_tracks_on_conflict {
  constraint: program_tracks_constraint! 
  update_columns: [program_tracks_update_column! ]! 
  where: program_tracks_bool_exp
}

"""Ordering options when selecting data from "program_tracks"."""
input program_tracks_order_by {
  colour: order_by
  event: events_order_by
  event_id: order_by
  name: order_by
  program_sessions_aggregate: program_sessions_aggregate_order_by
  program_track_id: order_by
}

"""primary key columns input for table: program_tracks"""
input program_tracks_pk_columns_input {
  program_track_id: Int! 
}

"""
select columns of table "program_tracks"
"""
enum program_tracks_select_column {
  """column name"""
colour
  """column name"""
event_id
  """column name"""
name
  """column name"""
program_track_id
}

"""
input type for updating data in table "program_tracks"
"""
input program_tracks_set_input {
  colour: String
  event_id: Int
  name: String
  program_track_id: Int
}

"""aggregate stddev on columns"""
type program_tracks_stddev_fields {
   event_id: Float
   program_track_id: Float
}

"""aggregate stddev_pop on columns"""
type program_tracks_stddev_pop_fields {
   event_id: Float
   program_track_id: Float
}

"""aggregate stddev_samp on columns"""
type program_tracks_stddev_samp_fields {
   event_id: Float
   program_track_id: Float
}

"""
Streaming cursor of the table "program_tracks"
"""
input program_tracks_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_tracks_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_tracks_stream_cursor_value_input {
  colour: String
  event_id: Int
  name: String
  program_track_id: Int
}

"""aggregate sum on columns"""
type program_tracks_sum_fields {
   event_id: Int
   program_track_id: Int
}

"""
update columns of table "program_tracks"
"""
enum program_tracks_update_column {
  """column name"""
colour
  """column name"""
event_id
  """column name"""
name
  """column name"""
program_track_id
}

input program_tracks_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_tracks_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_tracks_set_input
  where: program_tracks_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_tracks_var_pop_fields {
   event_id: Float
   program_track_id: Float
}

"""aggregate var_samp on columns"""
type program_tracks_var_samp_fields {
   event_id: Float
   program_track_id: Float
}

"""aggregate variance on columns"""
type program_tracks_variance_fields {
   event_id: Float
   program_track_id: Float
}

scalar program_type 

"""
Boolean expression to compare columns of type "program_type". All fields are combined with logical 'AND'.
"""
input program_type_comparison_exp {
  _eq: program_type
  _gt: program_type
  _gte: program_type
  _in: [program_type! ]
  _is_null: Boolean
  _lt: program_type
  _lte: program_type
  _neq: program_type
  _nin: [program_type! ]
}

"""
columns and relationships of "program_types"
"""
type program_types {
   colour: String
  """An object relationship"""
 event: events
   event_id: Int! 
   name: String! 
  """An array relationship"""
 program_sessions("""distinct select on columns"""
distinct_on: [program_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_order_by! ], """filter the rows returned"""
where: program_sessions_bool_exp): [program_sessions! ]! 
  """An aggregate relationship"""
 program_sessions_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_order_by! ], """filter the rows returned"""
where: program_sessions_bool_exp): program_sessions_aggregate! 
   program_type_id: Int! 
}

"""
aggregated selection of "program_types"
"""
type program_types_aggregate {
   aggregate: program_types_aggregate_fields
   nodes: [program_types! ]! 
}

"""
aggregate fields of "program_types"
"""
type program_types_aggregate_fields {
   avg: program_types_avg_fields
   count(columns: [program_types_select_column! ], distinct: Boolean): Int! 
   max: program_types_max_fields
   min: program_types_min_fields
   stddev: program_types_stddev_fields
   stddev_pop: program_types_stddev_pop_fields
   stddev_samp: program_types_stddev_samp_fields
   sum: program_types_sum_fields
   var_pop: program_types_var_pop_fields
   var_samp: program_types_var_samp_fields
   variance: program_types_variance_fields
}

"""aggregate avg on columns"""
type program_types_avg_fields {
   event_id: Float
   program_type_id: Float
}

"""
Boolean expression to filter rows from the table "program_types". All fields are combined with a logical 'AND'.
"""
input program_types_bool_exp {
  _and: [program_types_bool_exp! ]
  _not: program_types_bool_exp
  _or: [program_types_bool_exp! ]
  colour: String_comparison_exp
  event: events_bool_exp
  event_id: Int_comparison_exp
  name: String_comparison_exp
  program_sessions: program_sessions_bool_exp
  program_sessions_aggregate: program_sessions_aggregate_bool_exp
  program_type_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "program_types"
"""
enum program_types_constraint {
  """
  unique or primary key constraint on columns "program_type_id"
  """
program_types_pkey
}

"""
input type for incrementing numeric columns in table "program_types"
"""
input program_types_inc_input {
  event_id: Int
  program_type_id: Int
}

"""
input type for inserting data into table "program_types"
"""
input program_types_insert_input {
  colour: String
  event: events_obj_rel_insert_input
  event_id: Int! 
  name: String! 
  program_sessions: program_sessions_arr_rel_insert_input
  program_type_id: Int! 
}

"""aggregate max on columns"""
type program_types_max_fields {
   colour: String
   event_id: Int
   name: String
   program_type_id: Int
}

"""aggregate min on columns"""
type program_types_min_fields {
   colour: String
   event_id: Int
   name: String
   program_type_id: Int
}

"""
response of any mutation on the table "program_types"
"""
type program_types_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [program_types! ]! 
}

"""
input type for inserting object relation for remote table "program_types"
"""
input program_types_obj_rel_insert_input {
  data: program_types_insert_input! 
  """upsert condition"""
on_conflict: program_types_on_conflict
}

"""
on_conflict condition type for table "program_types"
"""
input program_types_on_conflict {
  constraint: program_types_constraint! 
  update_columns: [program_types_update_column! ]! 
  where: program_types_bool_exp
}

"""Ordering options when selecting data from "program_types"."""
input program_types_order_by {
  colour: order_by
  event: events_order_by
  event_id: order_by
  name: order_by
  program_sessions_aggregate: program_sessions_aggregate_order_by
  program_type_id: order_by
}

"""primary key columns input for table: program_types"""
input program_types_pk_columns_input {
  program_type_id: Int! 
}

"""
select columns of table "program_types"
"""
enum program_types_select_column {
  """column name"""
colour
  """column name"""
event_id
  """column name"""
name
  """column name"""
program_type_id
}

"""
input type for updating data in table "program_types"
"""
input program_types_set_input {
  colour: String
  event_id: Int
  name: String
  program_type_id: Int
}

"""aggregate stddev on columns"""
type program_types_stddev_fields {
   event_id: Float
   program_type_id: Float
}

"""aggregate stddev_pop on columns"""
type program_types_stddev_pop_fields {
   event_id: Float
   program_type_id: Float
}

"""aggregate stddev_samp on columns"""
type program_types_stddev_samp_fields {
   event_id: Float
   program_type_id: Float
}

"""
Streaming cursor of the table "program_types"
"""
input program_types_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: program_types_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input program_types_stream_cursor_value_input {
  colour: String
  event_id: Int
  name: String
  program_type_id: Int
}

"""aggregate sum on columns"""
type program_types_sum_fields {
   event_id: Int
   program_type_id: Int
}

"""
update columns of table "program_types"
"""
enum program_types_update_column {
  """column name"""
colour
  """column name"""
event_id
  """column name"""
name
  """column name"""
program_type_id
}

input program_types_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: program_types_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: program_types_set_input
  where: program_types_bool_exp! 
}

"""aggregate var_pop on columns"""
type program_types_var_pop_fields {
   event_id: Float
   program_type_id: Float
}

"""aggregate var_samp on columns"""
type program_types_var_samp_fields {
   event_id: Float
   program_type_id: Float
}

"""aggregate variance on columns"""
type program_types_variance_fields {
   event_id: Float
   program_type_id: Float
}

type query_root {
  """
  fetch data from the table: "accepted_submissions"
  """
 accepted_submissions("""distinct select on columns"""
distinct_on: [accepted_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [accepted_submissions_order_by! ], """filter the rows returned"""
where: accepted_submissions_bool_exp): [accepted_submissions! ]! 
  """
  fetch aggregated fields from the table: "accepted_submissions"
  """
 accepted_submissions_aggregate("""distinct select on columns"""
distinct_on: [accepted_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [accepted_submissions_order_by! ], """filter the rows returned"""
where: accepted_submissions_bool_exp): accepted_submissions_aggregate! 
  """
  fetch data from the table: "affiliation_versions"
  """
 affiliation_versions("""distinct select on columns"""
distinct_on: [affiliation_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [affiliation_versions_order_by! ], """filter the rows returned"""
where: affiliation_versions_bool_exp): [affiliation_versions! ]! 
  """
  fetch aggregated fields from the table: "affiliation_versions"
  """
 affiliation_versions_aggregate("""distinct select on columns"""
distinct_on: [affiliation_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [affiliation_versions_order_by! ], """filter the rows returned"""
where: affiliation_versions_bool_exp): affiliation_versions_aggregate! 
  """
  fetch data from the table: "affiliation_versions" using primary key columns
  """
 affiliation_versions_by_pk(id: bigint! ): affiliation_versions
  """An array relationship"""
 affiliations("""distinct select on columns"""
distinct_on: [affiliations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [affiliations_order_by! ], """filter the rows returned"""
where: affiliations_bool_exp): [affiliations! ]! 
  """An aggregate relationship"""
 affiliations_aggregate("""distinct select on columns"""
distinct_on: [affiliations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [affiliations_order_by! ], """filter the rows returned"""
where: affiliations_bool_exp): affiliations_aggregate! 
  """fetch data from the table: "affiliations" using primary key columns"""
 affiliations_by_pk(id: Int! ): affiliations
  """An array relationship"""
 affiliations_without_hidden_responses("""distinct select on columns"""
distinct_on: [affiliations_without_hidden_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [affiliations_without_hidden_responses_order_by! ], """filter the rows returned"""
where: affiliations_without_hidden_responses_bool_exp): [affiliations_without_hidden_responses! ]! 
  """An aggregate relationship"""
 affiliations_without_hidden_responses_aggregate("""distinct select on columns"""
distinct_on: [affiliations_without_hidden_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [affiliations_without_hidden_responses_order_by! ], """filter the rows returned"""
where: affiliations_without_hidden_responses_bool_exp): affiliations_without_hidden_responses_aggregate! 
  """
  fetch data from the table: "all_event_categories"
  """
 all_event_categories("""distinct select on columns"""
distinct_on: [all_event_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [all_event_categories_order_by! ], """filter the rows returned"""
where: all_event_categories_bool_exp): [all_event_categories! ]! 
  """
  fetch aggregated fields from the table: "all_event_categories"
  """
 all_event_categories_aggregate("""distinct select on columns"""
distinct_on: [all_event_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [all_event_categories_order_by! ], """filter the rows returned"""
where: all_event_categories_bool_exp): all_event_categories_aggregate! 
  """
  fetch data from the table: "allowed_submitters"
  """
 allowed_submitters("""distinct select on columns"""
distinct_on: [allowed_submitters_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [allowed_submitters_order_by! ], """filter the rows returned"""
where: allowed_submitters_bool_exp): [allowed_submitters! ]! 
  """
  fetch aggregated fields from the table: "allowed_submitters"
  """
 allowed_submitters_aggregate("""distinct select on columns"""
distinct_on: [allowed_submitters_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [allowed_submitters_order_by! ], """filter the rows returned"""
where: allowed_submitters_bool_exp): allowed_submitters_aggregate! 
  """
  fetch data from the table: "allowed_submitters" using primary key columns
  """
 allowed_submitters_by_pk(id: Int! ): allowed_submitters
  """
  fetch data from the table: "api_keys"
  """
 api_keys("""distinct select on columns"""
distinct_on: [api_keys_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [api_keys_order_by! ], """filter the rows returned"""
where: api_keys_bool_exp): [api_keys! ]! 
  """
  fetch aggregated fields from the table: "api_keys"
  """
 api_keys_aggregate("""distinct select on columns"""
distinct_on: [api_keys_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [api_keys_order_by! ], """filter the rows returned"""
where: api_keys_bool_exp): api_keys_aggregate! 
  """
  fetch data from the table: "author_field_response_versions"
  """
 author_field_response_versions("""distinct select on columns"""
distinct_on: [author_field_response_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_field_response_versions_order_by! ], """filter the rows returned"""
where: author_field_response_versions_bool_exp): [author_field_response_versions! ]! 
  """
  fetch aggregated fields from the table: "author_field_response_versions"
  """
 author_field_response_versions_aggregate("""distinct select on columns"""
distinct_on: [author_field_response_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_field_response_versions_order_by! ], """filter the rows returned"""
where: author_field_response_versions_bool_exp): author_field_response_versions_aggregate! 
  """
  fetch data from the table: "author_field_response_versions" using primary key columns
  """
 author_field_response_versions_by_pk(id: bigint! ): author_field_response_versions
  """
  fetch data from the table: "author_field_responses"
  """
 author_field_responses("""distinct select on columns"""
distinct_on: [author_field_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_field_responses_order_by! ], """filter the rows returned"""
where: author_field_responses_bool_exp): [author_field_responses! ]! 
  """
  fetch aggregated fields from the table: "author_field_responses"
  """
 author_field_responses_aggregate("""distinct select on columns"""
distinct_on: [author_field_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_field_responses_order_by! ], """filter the rows returned"""
where: author_field_responses_bool_exp): author_field_responses_aggregate! 
  """
  fetch data from the table: "author_field_responses" using primary key columns
  """
 author_field_responses_by_pk(id: Int! ): author_field_responses
  """An array relationship"""
 author_fields("""distinct select on columns"""
distinct_on: [author_fields_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_fields_order_by! ], """filter the rows returned"""
where: author_fields_bool_exp): [author_fields! ]! 
  """An aggregate relationship"""
 author_fields_aggregate("""distinct select on columns"""
distinct_on: [author_fields_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_fields_order_by! ], """filter the rows returned"""
where: author_fields_bool_exp): author_fields_aggregate! 
  """fetch data from the table: "author_fields" using primary key columns"""
 author_fields_by_pk(id: Int! ): author_fields
  """
  fetch data from the table: "author_users"
  """
 author_users("""distinct select on columns"""
distinct_on: [author_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_users_order_by! ], """filter the rows returned"""
where: author_users_bool_exp): [author_users! ]! 
  """
  fetch aggregated fields from the table: "author_users"
  """
 author_users_aggregate("""distinct select on columns"""
distinct_on: [author_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_users_order_by! ], """filter the rows returned"""
where: author_users_bool_exp): author_users_aggregate! 
  """An array relationship"""
 author_versions("""distinct select on columns"""
distinct_on: [author_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_versions_order_by! ], """filter the rows returned"""
where: author_versions_bool_exp): [author_versions! ]! 
  """An aggregate relationship"""
 author_versions_aggregate("""distinct select on columns"""
distinct_on: [author_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_versions_order_by! ], """filter the rows returned"""
where: author_versions_bool_exp): author_versions_aggregate! 
  """fetch data from the table: "author_versions" using primary key columns"""
 author_versions_by_pk(id: bigint! ): author_versions
  """An array relationship"""
 authors("""distinct select on columns"""
distinct_on: [authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [authors_order_by! ], """filter the rows returned"""
where: authors_bool_exp): [authors! ]! 
  """An aggregate relationship"""
 authors_aggregate("""distinct select on columns"""
distinct_on: [authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [authors_order_by! ], """filter the rows returned"""
where: authors_bool_exp): authors_aggregate! 
  """fetch data from the table: "authors" using primary key columns"""
 authors_by_pk(id: Int! ): authors
  """An array relationship"""
 authors_last_updated("""distinct select on columns"""
distinct_on: [authors_last_updated_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [authors_last_updated_order_by! ], """filter the rows returned"""
where: authors_last_updated_bool_exp): [authors_last_updated! ]! 
  """An aggregate relationship"""
 authors_last_updated_aggregate("""distinct select on columns"""
distinct_on: [authors_last_updated_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [authors_last_updated_order_by! ], """filter the rows returned"""
where: authors_last_updated_bool_exp): authors_last_updated_aggregate! 
  """
  fetch data from the table: "browser_errors"
  """
 browser_errors("""distinct select on columns"""
distinct_on: [browser_errors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [browser_errors_order_by! ], """filter the rows returned"""
where: browser_errors_bool_exp): [browser_errors! ]! 
  """
  fetch aggregated fields from the table: "browser_errors"
  """
 browser_errors_aggregate("""distinct select on columns"""
distinct_on: [browser_errors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [browser_errors_order_by! ], """filter the rows returned"""
where: browser_errors_bool_exp): browser_errors_aggregate! 
  """fetch data from the table: "browser_errors" using primary key columns"""
 browser_errors_by_pk(id: Int! ): browser_errors
  """
  fetch data from the table: "categories"
  """
 categories("""distinct select on columns"""
distinct_on: [categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [categories_order_by! ], """filter the rows returned"""
where: categories_bool_exp): [categories! ]! 
  """
  fetch aggregated fields from the table: "categories"
  """
 categories_aggregate("""distinct select on columns"""
distinct_on: [categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [categories_order_by! ], """filter the rows returned"""
where: categories_bool_exp): categories_aggregate! 
  """
  fetch data from the table: "clients"
  """
 clients("""distinct select on columns"""
distinct_on: [clients_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [clients_order_by! ], """filter the rows returned"""
where: clients_bool_exp): [clients! ]! 
  """
  fetch aggregated fields from the table: "clients"
  """
 clients_aggregate("""distinct select on columns"""
distinct_on: [clients_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [clients_order_by! ], """filter the rows returned"""
where: clients_bool_exp): clients_aggregate! 
  """fetch data from the table: "clients" using primary key columns"""
 clients_by_pk("""A unique identifier for each client"""
client_id: Int! ): clients
  """An array relationship"""
 clients_permissions("""distinct select on columns"""
distinct_on: [clients_permissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [clients_permissions_order_by! ], """filter the rows returned"""
where: clients_permissions_bool_exp): [clients_permissions! ]! 
  """An aggregate relationship"""
 clients_permissions_aggregate("""distinct select on columns"""
distinct_on: [clients_permissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [clients_permissions_order_by! ], """filter the rows returned"""
where: clients_permissions_bool_exp): clients_permissions_aggregate! 
  """
  fetch data from the table: "combined_word_limits"
  """
 combined_word_limits("""distinct select on columns"""
distinct_on: [combined_word_limits_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [combined_word_limits_order_by! ], """filter the rows returned"""
where: combined_word_limits_bool_exp): [combined_word_limits! ]! 
  """
  fetch aggregated fields from the table: "combined_word_limits"
  """
 combined_word_limits_aggregate("""distinct select on columns"""
distinct_on: [combined_word_limits_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [combined_word_limits_order_by! ], """filter the rows returned"""
where: combined_word_limits_bool_exp): combined_word_limits_aggregate! 
  """
  fetch data from the table: "combined_word_limits" using primary key columns
  """
 combined_word_limits_by_pk(combined_word_limit_id: Int! ): combined_word_limits
  """
  fetch data from the table: "custom_logs"
  """
 custom_logs("""distinct select on columns"""
distinct_on: [custom_logs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [custom_logs_order_by! ], """filter the rows returned"""
where: custom_logs_bool_exp): [custom_logs! ]! 
  """
  fetch aggregated fields from the table: "custom_logs"
  """
 custom_logs_aggregate("""distinct select on columns"""
distinct_on: [custom_logs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [custom_logs_order_by! ], """filter the rows returned"""
where: custom_logs_bool_exp): custom_logs_aggregate! 
  """fetch data from the table: "custom_logs" using primary key columns"""
 custom_logs_by_pk(custom_log_id: Int! ): custom_logs
  """An array relationship"""
 decision_question_responses("""distinct select on columns"""
distinct_on: [decision_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [decision_question_responses_order_by! ], """filter the rows returned"""
where: decision_question_responses_bool_exp): [decision_question_responses! ]! 
  """An aggregate relationship"""
 decision_question_responses_aggregate("""distinct select on columns"""
distinct_on: [decision_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [decision_question_responses_order_by! ], """filter the rows returned"""
where: decision_question_responses_bool_exp): decision_question_responses_aggregate! 
  """
  fetch data from the table: "decision_question_responses" using primary key columns
  """
 decision_question_responses_by_pk(decision_question_response_id: Int! ): decision_question_responses
  """An array relationship"""
 decision_questions("""distinct select on columns"""
distinct_on: [decision_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [decision_questions_order_by! ], """filter the rows returned"""
where: decision_questions_bool_exp): [decision_questions! ]! 
  """An aggregate relationship"""
 decision_questions_aggregate("""distinct select on columns"""
distinct_on: [decision_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [decision_questions_order_by! ], """filter the rows returned"""
where: decision_questions_bool_exp): decision_questions_aggregate! 
  """
  fetch data from the table: "decision_questions" using primary key columns
  """
 decision_questions_by_pk(decision_question_id: Int! ): decision_questions
  """An array relationship"""
 decisions("""distinct select on columns"""
distinct_on: [decisions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [decisions_order_by! ], """filter the rows returned"""
where: decisions_bool_exp): [decisions! ]! 
  """An aggregate relationship"""
 decisions_aggregate("""distinct select on columns"""
distinct_on: [decisions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [decisions_order_by! ], """filter the rows returned"""
where: decisions_bool_exp): decisions_aggregate! 
  """fetch data from the table: "decisions" using primary key columns"""
 decisions_by_pk(decision_id: Int! ): decisions
  """
  fetch data from the table: "default_questions"
  """
 default_questions("""distinct select on columns"""
distinct_on: [default_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [default_questions_order_by! ], """filter the rows returned"""
where: default_questions_bool_exp): [default_questions! ]! 
  """
  fetch aggregated fields from the table: "default_questions"
  """
 default_questions_aggregate("""distinct select on columns"""
distinct_on: [default_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [default_questions_order_by! ], """filter the rows returned"""
where: default_questions_bool_exp): default_questions_aggregate! 
  """
  fetch data from the table: "default_questions" using primary key columns
  """
 default_questions_by_pk(question_id: Int! ): default_questions
  """An array relationship"""
 delreg_question_responses("""distinct select on columns"""
distinct_on: [delreg_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_question_responses_order_by! ], """filter the rows returned"""
where: delreg_question_responses_bool_exp): [delreg_question_responses! ]! 
  """An aggregate relationship"""
 delreg_question_responses_aggregate("""distinct select on columns"""
distinct_on: [delreg_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_question_responses_order_by! ], """filter the rows returned"""
where: delreg_question_responses_bool_exp): delreg_question_responses_aggregate! 
  """
  fetch data from the table: "delreg_question_responses" using primary key columns
  """
 delreg_question_responses_by_pk(id: Int! ): delreg_question_responses
  """
  fetch data from the table: "delreg_question_responses_multi"
  """
 delreg_question_responses_multi("""distinct select on columns"""
distinct_on: [delreg_question_responses_multi_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_question_responses_multi_order_by! ], """filter the rows returned"""
where: delreg_question_responses_multi_bool_exp): [delreg_question_responses_multi! ]! 
  """
  fetch aggregated fields from the table: "delreg_question_responses_multi"
  """
 delreg_question_responses_multi_aggregate("""distinct select on columns"""
distinct_on: [delreg_question_responses_multi_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_question_responses_multi_order_by! ], """filter the rows returned"""
where: delreg_question_responses_multi_bool_exp): delreg_question_responses_multi_aggregate! 
  """
  fetch data from the table: "delreg_questions"
  """
 delreg_questions("""distinct select on columns"""
distinct_on: [delreg_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_questions_order_by! ], """filter the rows returned"""
where: delreg_questions_bool_exp): [delreg_questions! ]! 
  """
  fetch aggregated fields from the table: "delreg_questions"
  """
 delreg_questions_aggregate("""distinct select on columns"""
distinct_on: [delreg_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_questions_order_by! ], """filter the rows returned"""
where: delreg_questions_bool_exp): delreg_questions_aggregate! 
  """
  fetch data from the table: "delreg_questions" using primary key columns
  """
 delreg_questions_by_pk(id: Int! ): delreg_questions
  """An array relationship"""
 delreg_registrations("""distinct select on columns"""
distinct_on: [delreg_registrations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_registrations_order_by! ], """filter the rows returned"""
where: delreg_registrations_bool_exp): [delreg_registrations! ]! 
  """An aggregate relationship"""
 delreg_registrations_aggregate("""distinct select on columns"""
distinct_on: [delreg_registrations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_registrations_order_by! ], """filter the rows returned"""
where: delreg_registrations_bool_exp): delreg_registrations_aggregate! 
  """
  fetch data from the table: "delreg_registrations" using primary key columns
  """
 delreg_registrations_by_pk(id: Int! ): delreg_registrations
  """
  fetch data from the table: "delreg_ticket_headings"
  """
 delreg_ticket_headings("""distinct select on columns"""
distinct_on: [delreg_ticket_headings_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_ticket_headings_order_by! ], """filter the rows returned"""
where: delreg_ticket_headings_bool_exp): [delreg_ticket_headings! ]! 
  """
  fetch aggregated fields from the table: "delreg_ticket_headings"
  """
 delreg_ticket_headings_aggregate("""distinct select on columns"""
distinct_on: [delreg_ticket_headings_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_ticket_headings_order_by! ], """filter the rows returned"""
where: delreg_ticket_headings_bool_exp): delreg_ticket_headings_aggregate! 
  """
  fetch data from the table: "delreg_ticket_headings" using primary key columns
  """
 delreg_ticket_headings_by_pk(id: Int! ): delreg_ticket_headings
  """
  fetch data from the table: "delreg_tickets"
  """
 delreg_tickets("""distinct select on columns"""
distinct_on: [delreg_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_tickets_order_by! ], """filter the rows returned"""
where: delreg_tickets_bool_exp): [delreg_tickets! ]! 
  """
  fetch aggregated fields from the table: "delreg_tickets"
  """
 delreg_tickets_aggregate("""distinct select on columns"""
distinct_on: [delreg_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_tickets_order_by! ], """filter the rows returned"""
where: delreg_tickets_bool_exp): delreg_tickets_aggregate! 
  """fetch data from the table: "delreg_tickets" using primary key columns"""
 delreg_tickets_by_pk(id: Int! ): delreg_tickets
   dr_addon_coupons("""distinct select on columns"""
distinct_on: [dr_addon_coupons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_coupons_order_by! ], """filter the rows returned"""
where: dr_addon_coupons_bool_exp): [dr_addon_coupons! ]! 
   dr_addon_coupons_aggregate("""distinct select on columns"""
distinct_on: [dr_addon_coupons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_coupons_order_by! ], """filter the rows returned"""
where: dr_addon_coupons_bool_exp): dr_addon_coupons_aggregate! 
   dr_addon_coupons_by_pk(id: uuid! ): dr_addon_coupons
  """
  fetch data from the table: "dr_addon_coupons_view"
  """
 dr_addon_coupons_view("""distinct select on columns"""
distinct_on: [dr_addon_coupons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_coupons_view_order_by! ], """filter the rows returned"""
where: dr_addon_coupons_view_bool_exp): [dr_addon_coupons_view! ]! 
  """
  fetch aggregated fields from the table: "dr_addon_coupons_view"
  """
 dr_addon_coupons_view_aggregate("""distinct select on columns"""
distinct_on: [dr_addon_coupons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_coupons_view_order_by! ], """filter the rows returned"""
where: dr_addon_coupons_view_bool_exp): dr_addon_coupons_view_aggregate! 
  """
  fetch data from the table: "dr_addon_questions"
  """
 dr_addon_questions("""distinct select on columns"""
distinct_on: [dr_addon_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_questions_order_by! ], """filter the rows returned"""
where: dr_addon_questions_bool_exp): [dr_addon_questions! ]! 
  """
  fetch aggregated fields from the table: "dr_addon_questions"
  """
 dr_addon_questions_aggregate("""distinct select on columns"""
distinct_on: [dr_addon_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_questions_order_by! ], """filter the rows returned"""
where: dr_addon_questions_bool_exp): dr_addon_questions_aggregate! 
  """
  fetch data from the table: "dr_addon_questions" using primary key columns
  """
 dr_addon_questions_by_pk(id: uuid! ): dr_addon_questions
  """
  fetch data from the table: "dr_addon_tax_rules"
  """
 dr_addon_tax_rules("""distinct select on columns"""
distinct_on: [dr_addon_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_tax_rules_order_by! ], """filter the rows returned"""
where: dr_addon_tax_rules_bool_exp): [dr_addon_tax_rules! ]! 
  """
  fetch aggregated fields from the table: "dr_addon_tax_rules"
  """
 dr_addon_tax_rules_aggregate("""distinct select on columns"""
distinct_on: [dr_addon_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_tax_rules_order_by! ], """filter the rows returned"""
where: dr_addon_tax_rules_bool_exp): dr_addon_tax_rules_aggregate! 
  """
  fetch data from the table: "dr_addon_tax_rules" using primary key columns
  """
 dr_addon_tax_rules_by_pk(id: uuid! ): dr_addon_tax_rules
  """
  fetch data from the table: "dr_addon_tax_rules_view"
  """
 dr_addon_tax_rules_view("""distinct select on columns"""
distinct_on: [dr_addon_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_addon_tax_rules_view_bool_exp): [dr_addon_tax_rules_view! ]! 
  """
  fetch aggregated fields from the table: "dr_addon_tax_rules_view"
  """
 dr_addon_tax_rules_view_aggregate("""distinct select on columns"""
distinct_on: [dr_addon_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_addon_tax_rules_view_bool_exp): dr_addon_tax_rules_view_aggregate! 
  """
  fetch data from the table: "dr_addons"
  """
 dr_addons("""distinct select on columns"""
distinct_on: [dr_addons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addons_order_by! ], """filter the rows returned"""
where: dr_addons_bool_exp): [dr_addons! ]! 
  """
  fetch aggregated fields from the table: "dr_addons"
  """
 dr_addons_aggregate("""distinct select on columns"""
distinct_on: [dr_addons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addons_order_by! ], """filter the rows returned"""
where: dr_addons_bool_exp): dr_addons_aggregate! 
  """fetch data from the table: "dr_addons" using primary key columns"""
 dr_addons_by_pk(id: uuid! ): dr_addons
   dr_admin_tickets_and_addons: DrAdminTicketsAndAddons! 
  """
  fetch data from the table: "dr_analytics_event_types"
  """
 dr_analytics_event_types("""distinct select on columns"""
distinct_on: [dr_analytics_event_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_analytics_event_types_order_by! ], """filter the rows returned"""
where: dr_analytics_event_types_bool_exp): [dr_analytics_event_types! ]! 
  """
  fetch aggregated fields from the table: "dr_analytics_event_types"
  """
 dr_analytics_event_types_aggregate("""distinct select on columns"""
distinct_on: [dr_analytics_event_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_analytics_event_types_order_by! ], """filter the rows returned"""
where: dr_analytics_event_types_bool_exp): dr_analytics_event_types_aggregate! 
  """
  fetch data from the table: "dr_analytics_event_types" using primary key columns
  """
 dr_analytics_event_types_by_pk(value: String! ): dr_analytics_event_types
  """
  fetch data from the table: "dr_analytics_events"
  """
 dr_analytics_events("""distinct select on columns"""
distinct_on: [dr_analytics_events_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_analytics_events_order_by! ], """filter the rows returned"""
where: dr_analytics_events_bool_exp): [dr_analytics_events! ]! 
  """
  fetch aggregated fields from the table: "dr_analytics_events"
  """
 dr_analytics_events_aggregate("""distinct select on columns"""
distinct_on: [dr_analytics_events_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_analytics_events_order_by! ], """filter the rows returned"""
where: dr_analytics_events_bool_exp): dr_analytics_events_aggregate! 
  """
  fetch data from the table: "dr_analytics_events" using primary key columns
  """
 dr_analytics_events_by_pk(id: Int! ): dr_analytics_events
  """
  fetch data from the table: "dr_analytics_marketing_campaigns_view"
  """
 dr_analytics_marketing_campaigns_view("""distinct select on columns"""
distinct_on: [dr_analytics_marketing_campaigns_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_analytics_marketing_campaigns_view_order_by! ], """filter the rows returned"""
where: dr_analytics_marketing_campaigns_view_bool_exp): [dr_analytics_marketing_campaigns_view! ]! 
  """
  fetch aggregated fields from the table: "dr_analytics_marketing_campaigns_view"
  """
 dr_analytics_marketing_campaigns_view_aggregate("""distinct select on columns"""
distinct_on: [dr_analytics_marketing_campaigns_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_analytics_marketing_campaigns_view_order_by! ], """filter the rows returned"""
where: dr_analytics_marketing_campaigns_view_bool_exp): dr_analytics_marketing_campaigns_view_aggregate! 
  """
  fetch data from the table: "dr_analytics_view"
  """
 dr_analytics_view("""distinct select on columns"""
distinct_on: [dr_analytics_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_analytics_view_order_by! ], """filter the rows returned"""
where: dr_analytics_view_bool_exp): [dr_analytics_view! ]! 
  """
  fetch aggregated fields from the table: "dr_analytics_view"
  """
 dr_analytics_view_aggregate("""distinct select on columns"""
distinct_on: [dr_analytics_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_analytics_view_order_by! ], """filter the rows returned"""
where: dr_analytics_view_bool_exp): dr_analytics_view_aggregate! 
  """
  fetch data from the table: "dr_attendee_addon_count"
  """
 dr_attendee_addon_count("""distinct select on columns"""
distinct_on: [dr_attendee_addon_count_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addon_count_order_by! ], """filter the rows returned"""
where: dr_attendee_addon_count_bool_exp): [dr_attendee_addon_count! ]! 
  """
  fetch aggregated fields from the table: "dr_attendee_addon_count"
  """
 dr_attendee_addon_count_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_addon_count_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addon_count_order_by! ], """filter the rows returned"""
where: dr_attendee_addon_count_bool_exp): dr_attendee_addon_count_aggregate! 
  """
  fetch data from the table: "dr_attendee_addon_tax_rules"
  """
 dr_attendee_addon_tax_rules("""distinct select on columns"""
distinct_on: [dr_attendee_addon_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addon_tax_rules_order_by! ], """filter the rows returned"""
where: dr_attendee_addon_tax_rules_bool_exp): [dr_attendee_addon_tax_rules! ]! 
  """
  fetch aggregated fields from the table: "dr_attendee_addon_tax_rules"
  """
 dr_attendee_addon_tax_rules_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_addon_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addon_tax_rules_order_by! ], """filter the rows returned"""
where: dr_attendee_addon_tax_rules_bool_exp): dr_attendee_addon_tax_rules_aggregate! 
  """
  fetch data from the table: "dr_attendee_addon_tax_rules" using primary key columns
  """
 dr_attendee_addon_tax_rules_by_pk(id: uuid! ): dr_attendee_addon_tax_rules
  """
  fetch data from the table: "dr_attendee_addons"
  """
 dr_attendee_addons("""distinct select on columns"""
distinct_on: [dr_attendee_addons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addons_order_by! ], """filter the rows returned"""
where: dr_attendee_addons_bool_exp): [dr_attendee_addons! ]! 
  """
  fetch aggregated fields from the table: "dr_attendee_addons"
  """
 dr_attendee_addons_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_addons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addons_order_by! ], """filter the rows returned"""
where: dr_attendee_addons_bool_exp): dr_attendee_addons_aggregate! 
  """
  fetch data from the table: "dr_attendee_addons" using primary key columns
  """
 dr_attendee_addons_by_pk(id: uuid! ): dr_attendee_addons
  """
  fetch data from the table: "dr_attendee_question_response_options"
  """
 dr_attendee_question_response_options("""distinct select on columns"""
distinct_on: [dr_attendee_question_response_options_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_question_response_options_order_by! ], """filter the rows returned"""
where: dr_attendee_question_response_options_bool_exp): [dr_attendee_question_response_options! ]! 
  """
  fetch aggregated fields from the table: "dr_attendee_question_response_options"
  """
 dr_attendee_question_response_options_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_question_response_options_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_question_response_options_order_by! ], """filter the rows returned"""
where: dr_attendee_question_response_options_bool_exp): dr_attendee_question_response_options_aggregate! 
  """
  fetch data from the table: "dr_attendee_question_response_options" using primary key columns
  """
 dr_attendee_question_response_options_by_pk(id: uuid! ): dr_attendee_question_response_options
  """
  fetch data from the table: "dr_attendee_question_responses"
  """
 dr_attendee_question_responses("""distinct select on columns"""
distinct_on: [dr_attendee_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_question_responses_order_by! ], """filter the rows returned"""
where: dr_attendee_question_responses_bool_exp): [dr_attendee_question_responses! ]! 
  """
  fetch aggregated fields from the table: "dr_attendee_question_responses"
  """
 dr_attendee_question_responses_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_question_responses_order_by! ], """filter the rows returned"""
where: dr_attendee_question_responses_bool_exp): dr_attendee_question_responses_aggregate! 
  """
  fetch data from the table: "dr_attendee_question_responses" using primary key columns
  """
 dr_attendee_question_responses_by_pk(id: uuid! ): dr_attendee_question_responses
  """
  fetch data from the table: "dr_attendee_ticket_count"
  """
 dr_attendee_ticket_count("""distinct select on columns"""
distinct_on: [dr_attendee_ticket_count_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_ticket_count_order_by! ], """filter the rows returned"""
where: dr_attendee_ticket_count_bool_exp): [dr_attendee_ticket_count! ]! 
  """
  fetch aggregated fields from the table: "dr_attendee_ticket_count"
  """
 dr_attendee_ticket_count_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_ticket_count_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_ticket_count_order_by! ], """filter the rows returned"""
where: dr_attendee_ticket_count_bool_exp): dr_attendee_ticket_count_aggregate! 
  """
  fetch data from the table: "dr_attendee_ticket_tax_rules"
  """
 dr_attendee_ticket_tax_rules("""distinct select on columns"""
distinct_on: [dr_attendee_ticket_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_ticket_tax_rules_order_by! ], """filter the rows returned"""
where: dr_attendee_ticket_tax_rules_bool_exp): [dr_attendee_ticket_tax_rules! ]! 
  """
  fetch aggregated fields from the table: "dr_attendee_ticket_tax_rules"
  """
 dr_attendee_ticket_tax_rules_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_ticket_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_ticket_tax_rules_order_by! ], """filter the rows returned"""
where: dr_attendee_ticket_tax_rules_bool_exp): dr_attendee_ticket_tax_rules_aggregate! 
  """
  fetch data from the table: "dr_attendee_ticket_tax_rules" using primary key columns
  """
 dr_attendee_ticket_tax_rules_by_pk(id: uuid! ): dr_attendee_ticket_tax_rules
  """
  fetch data from the table: "dr_attendee_tickets"
  """
 dr_attendee_tickets("""distinct select on columns"""
distinct_on: [dr_attendee_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_tickets_order_by! ], """filter the rows returned"""
where: dr_attendee_tickets_bool_exp): [dr_attendee_tickets! ]! 
  """
  fetch aggregated fields from the table: "dr_attendee_tickets"
  """
 dr_attendee_tickets_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_tickets_order_by! ], """filter the rows returned"""
where: dr_attendee_tickets_bool_exp): dr_attendee_tickets_aggregate! 
  """
  fetch data from the table: "dr_attendee_tickets" using primary key columns
  """
 dr_attendee_tickets_by_pk(id: uuid! ): dr_attendee_tickets
  """An array relationship"""
 dr_attendees("""distinct select on columns"""
distinct_on: [dr_attendees_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendees_order_by! ], """filter the rows returned"""
where: dr_attendees_bool_exp): [dr_attendees! ]! 
  """An aggregate relationship"""
 dr_attendees_aggregate("""distinct select on columns"""
distinct_on: [dr_attendees_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendees_order_by! ], """filter the rows returned"""
where: dr_attendees_bool_exp): dr_attendees_aggregate! 
  """fetch data from the table: "dr_attendees" using primary key columns"""
 dr_attendees_by_pk(id: uuid! ): dr_attendees
   dr_authorize_payment_link(order_id: String! ): AuthorizeOutput! 
   dr_authorize_payment_link_open_access(order_id: String! ): AuthorizeOutput! 
  """
  fetch data from the table: "dr_authorize_webhooks"
  """
 dr_authorize_webhooks("""distinct select on columns"""
distinct_on: [dr_authorize_webhooks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_authorize_webhooks_order_by! ], """filter the rows returned"""
where: dr_authorize_webhooks_bool_exp): [dr_authorize_webhooks! ]! 
  """
  fetch aggregated fields from the table: "dr_authorize_webhooks"
  """
 dr_authorize_webhooks_aggregate("""distinct select on columns"""
distinct_on: [dr_authorize_webhooks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_authorize_webhooks_order_by! ], """filter the rows returned"""
where: dr_authorize_webhooks_bool_exp): dr_authorize_webhooks_aggregate! 
  """
  fetch data from the table: "dr_authorize_webhooks" using primary key columns
  """
 dr_authorize_webhooks_by_pk(id: uuid! ): dr_authorize_webhooks
   dr_coupon_check(coupon: String! ): DrCouponCheckOutput! 
  """
  fetch data from the table: "dr_coupon_discount_type"
  """
 dr_coupon_discount_type("""distinct select on columns"""
distinct_on: [dr_coupon_discount_type_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_coupon_discount_type_order_by! ], """filter the rows returned"""
where: dr_coupon_discount_type_bool_exp): [dr_coupon_discount_type! ]! 
  """
  fetch aggregated fields from the table: "dr_coupon_discount_type"
  """
 dr_coupon_discount_type_aggregate("""distinct select on columns"""
distinct_on: [dr_coupon_discount_type_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_coupon_discount_type_order_by! ], """filter the rows returned"""
where: dr_coupon_discount_type_bool_exp): dr_coupon_discount_type_aggregate! 
  """
  fetch data from the table: "dr_coupon_discount_type" using primary key columns
  """
 dr_coupon_discount_type_by_pk(value: String! ): dr_coupon_discount_type
  """
  fetch data from the table: "dr_coupons"
  """
 dr_coupons("""distinct select on columns"""
distinct_on: [dr_coupons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_coupons_order_by! ], """filter the rows returned"""
where: dr_coupons_bool_exp): [dr_coupons! ]! 
  """
  fetch aggregated fields from the table: "dr_coupons"
  """
 dr_coupons_aggregate("""distinct select on columns"""
distinct_on: [dr_coupons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_coupons_order_by! ], """filter the rows returned"""
where: dr_coupons_bool_exp): dr_coupons_aggregate! 
  """fetch data from the table: "dr_coupons" using primary key columns"""
 dr_coupons_by_pk(id: uuid! ): dr_coupons
  """
  fetch data from the table: "dr_currencies"
  """
 dr_currencies("""distinct select on columns"""
distinct_on: [dr_currencies_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_currencies_order_by! ], """filter the rows returned"""
where: dr_currencies_bool_exp): [dr_currencies! ]! 
  """
  fetch aggregated fields from the table: "dr_currencies"
  """
 dr_currencies_aggregate("""distinct select on columns"""
distinct_on: [dr_currencies_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_currencies_order_by! ], """filter the rows returned"""
where: dr_currencies_bool_exp): dr_currencies_aggregate! 
  """fetch data from the table: "dr_currencies" using primary key columns"""
 dr_currencies_by_pk(value: String! ): dr_currencies
  """
  fetch data from the table: "dr_event_details"
  """
 dr_event_details("""distinct select on columns"""
distinct_on: [dr_event_details_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_event_details_order_by! ], """filter the rows returned"""
where: dr_event_details_bool_exp): [dr_event_details! ]! 
  """
  fetch aggregated fields from the table: "dr_event_details"
  """
 dr_event_details_aggregate("""distinct select on columns"""
distinct_on: [dr_event_details_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_event_details_order_by! ], """filter the rows returned"""
where: dr_event_details_bool_exp): dr_event_details_aggregate! 
  """
  fetch data from the table: "dr_event_details" using primary key columns
  """
 dr_event_details_by_pk(id: uuid! ): dr_event_details
  """
  fetch data from the table: "dr_group_questions"
  """
 dr_group_questions("""distinct select on columns"""
distinct_on: [dr_group_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_group_questions_order_by! ], """filter the rows returned"""
where: dr_group_questions_bool_exp): [dr_group_questions! ]! 
  """
  fetch aggregated fields from the table: "dr_group_questions"
  """
 dr_group_questions_aggregate("""distinct select on columns"""
distinct_on: [dr_group_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_group_questions_order_by! ], """filter the rows returned"""
where: dr_group_questions_bool_exp): dr_group_questions_aggregate! 
  """
  fetch data from the table: "dr_group_questions" using primary key columns
  """
 dr_group_questions_by_pk(id: uuid! ): dr_group_questions
  """
  fetch data from the table: "dr_invoice_setup"
  """
 dr_invoice_setup("""distinct select on columns"""
distinct_on: [dr_invoice_setup_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_invoice_setup_order_by! ], """filter the rows returned"""
where: dr_invoice_setup_bool_exp): [dr_invoice_setup! ]! 
  """
  fetch aggregated fields from the table: "dr_invoice_setup"
  """
 dr_invoice_setup_aggregate("""distinct select on columns"""
distinct_on: [dr_invoice_setup_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_invoice_setup_order_by! ], """filter the rows returned"""
where: dr_invoice_setup_bool_exp): dr_invoice_setup_aggregate! 
  """
  fetch data from the table: "dr_invoice_setup" using primary key columns
  """
 dr_invoice_setup_by_pk(id: uuid! ): dr_invoice_setup
  """
  fetch data from the table: "dr_line_item_statuses"
  """
 dr_line_item_statuses("""distinct select on columns"""
distinct_on: [dr_line_item_statuses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_line_item_statuses_order_by! ], """filter the rows returned"""
where: dr_line_item_statuses_bool_exp): [dr_line_item_statuses! ]! 
  """
  fetch aggregated fields from the table: "dr_line_item_statuses"
  """
 dr_line_item_statuses_aggregate("""distinct select on columns"""
distinct_on: [dr_line_item_statuses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_line_item_statuses_order_by! ], """filter the rows returned"""
where: dr_line_item_statuses_bool_exp): dr_line_item_statuses_aggregate! 
  """
  fetch data from the table: "dr_line_item_statuses" using primary key columns
  """
 dr_line_item_statuses_by_pk(value: String! ): dr_line_item_statuses
  """
  fetch data from the table: "dr_marketing_campaigns"
  """
 dr_marketing_campaigns("""distinct select on columns"""
distinct_on: [dr_marketing_campaigns_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_marketing_campaigns_order_by! ], """filter the rows returned"""
where: dr_marketing_campaigns_bool_exp): [dr_marketing_campaigns! ]! 
  """
  fetch aggregated fields from the table: "dr_marketing_campaigns"
  """
 dr_marketing_campaigns_aggregate("""distinct select on columns"""
distinct_on: [dr_marketing_campaigns_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_marketing_campaigns_order_by! ], """filter the rows returned"""
where: dr_marketing_campaigns_bool_exp): dr_marketing_campaigns_aggregate! 
  """
  fetch data from the table: "dr_marketing_campaigns" using primary key columns
  """
 dr_marketing_campaigns_by_pk(id: uuid! ): dr_marketing_campaigns
  """
  fetch data from the table: "dr_offline_payments_setup"
  """
 dr_offline_payments_setup("""distinct select on columns"""
distinct_on: [dr_offline_payments_setup_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_offline_payments_setup_order_by! ], """filter the rows returned"""
where: dr_offline_payments_setup_bool_exp): [dr_offline_payments_setup! ]! 
  """
  fetch aggregated fields from the table: "dr_offline_payments_setup"
  """
 dr_offline_payments_setup_aggregate("""distinct select on columns"""
distinct_on: [dr_offline_payments_setup_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_offline_payments_setup_order_by! ], """filter the rows returned"""
where: dr_offline_payments_setup_bool_exp): dr_offline_payments_setup_aggregate! 
  """
  fetch data from the table: "dr_offline_payments_setup" using primary key columns
  """
 dr_offline_payments_setup_by_pk(id: uuid! ): dr_offline_payments_setup
   dr_order_data(order_id: String! ): DrOrderDataOutput! 
  """
  fetch data from the table: "dr_order_line_items_coupon_view"
  """
 dr_order_line_items_coupon_view("""distinct select on columns"""
distinct_on: [dr_order_line_items_coupon_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_line_items_coupon_view_order_by! ], """filter the rows returned"""
where: dr_order_line_items_coupon_view_bool_exp): [dr_order_line_items_coupon_view! ]! 
  """
  fetch aggregated fields from the table: "dr_order_line_items_coupon_view"
  """
 dr_order_line_items_coupon_view_aggregate("""distinct select on columns"""
distinct_on: [dr_order_line_items_coupon_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_line_items_coupon_view_order_by! ], """filter the rows returned"""
where: dr_order_line_items_coupon_view_bool_exp): dr_order_line_items_coupon_view_aggregate! 
  """
  fetch data from the table: "dr_order_line_items_tax_rules_view"
  """
 dr_order_line_items_tax_rules_view("""distinct select on columns"""
distinct_on: [dr_order_line_items_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_line_items_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_order_line_items_tax_rules_view_bool_exp): [dr_order_line_items_tax_rules_view! ]! 
  """
  fetch aggregated fields from the table: "dr_order_line_items_tax_rules_view"
  """
 dr_order_line_items_tax_rules_view_aggregate("""distinct select on columns"""
distinct_on: [dr_order_line_items_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_line_items_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_order_line_items_tax_rules_view_bool_exp): dr_order_line_items_tax_rules_view_aggregate! 
  """
  fetch data from the table: "dr_order_payment_type"
  """
 dr_order_payment_type("""distinct select on columns"""
distinct_on: [dr_order_payment_type_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_payment_type_order_by! ], """filter the rows returned"""
where: dr_order_payment_type_bool_exp): [dr_order_payment_type! ]! 
  """
  fetch aggregated fields from the table: "dr_order_payment_type"
  """
 dr_order_payment_type_aggregate("""distinct select on columns"""
distinct_on: [dr_order_payment_type_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_payment_type_order_by! ], """filter the rows returned"""
where: dr_order_payment_type_bool_exp): dr_order_payment_type_aggregate! 
  """
  fetch data from the table: "dr_order_payment_type" using primary key columns
  """
 dr_order_payment_type_by_pk(value: String! ): dr_order_payment_type
  """
  fetch data from the table: "dr_order_tax_rules_view"
  """
 dr_order_tax_rules_view("""distinct select on columns"""
distinct_on: [dr_order_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_order_tax_rules_view_bool_exp): [dr_order_tax_rules_view! ]! 
  """
  fetch aggregated fields from the table: "dr_order_tax_rules_view"
  """
 dr_order_tax_rules_view_aggregate("""distinct select on columns"""
distinct_on: [dr_order_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_order_tax_rules_view_bool_exp): dr_order_tax_rules_view_aggregate! 
  """
  fetch data from the table: "dr_orders"
  """
 dr_orders("""distinct select on columns"""
distinct_on: [dr_orders_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_orders_order_by! ], """filter the rows returned"""
where: dr_orders_bool_exp): [dr_orders! ]! 
  """
  fetch aggregated fields from the table: "dr_orders"
  """
 dr_orders_aggregate("""distinct select on columns"""
distinct_on: [dr_orders_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_orders_order_by! ], """filter the rows returned"""
where: dr_orders_bool_exp): dr_orders_aggregate! 
  """fetch data from the table: "dr_orders" using primary key columns"""
 dr_orders_by_pk(id: uuid! ): dr_orders
  """
  fetch data from the table: "dr_payment_type_fees_aggregate"
  """
 dr_payment_type_fees_aggregate("""distinct select on columns"""
distinct_on: [dr_payment_type_fees_aggregate_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_payment_type_fees_aggregate_order_by! ], """filter the rows returned"""
where: dr_payment_type_fees_aggregate_bool_exp): [dr_payment_type_fees_aggregate! ]! 
  """
  fetch aggregated fields from the table: "dr_payment_type_fees_aggregate"
  """
 dr_payment_type_fees_aggregate_aggregate("""distinct select on columns"""
distinct_on: [dr_payment_type_fees_aggregate_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_payment_type_fees_aggregate_order_by! ], """filter the rows returned"""
where: dr_payment_type_fees_aggregate_bool_exp): dr_payment_type_fees_aggregate_aggregate! 
  """
  fetch data from the table: "dr_paypal_setup"
  """
 dr_paypal_setup("""distinct select on columns"""
distinct_on: [dr_paypal_setup_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_paypal_setup_order_by! ], """filter the rows returned"""
where: dr_paypal_setup_bool_exp): [dr_paypal_setup! ]! 
  """
  fetch aggregated fields from the table: "dr_paypal_setup"
  """
 dr_paypal_setup_aggregate("""distinct select on columns"""
distinct_on: [dr_paypal_setup_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_paypal_setup_order_by! ], """filter the rows returned"""
where: dr_paypal_setup_bool_exp): dr_paypal_setup_aggregate! 
  """fetch data from the table: "dr_paypal_setup" using primary key columns"""
 dr_paypal_setup_by_pk(id: uuid! ): dr_paypal_setup
   dr_paypal_sign_up_link: DrPaypalSignUpLinkOutput! 
  """
  fetch data from the table: "dr_question_dependencies"
  """
 dr_question_dependencies("""distinct select on columns"""
distinct_on: [dr_question_dependencies_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_question_dependencies_order_by! ], """filter the rows returned"""
where: dr_question_dependencies_bool_exp): [dr_question_dependencies! ]! 
  """
  fetch aggregated fields from the table: "dr_question_dependencies"
  """
 dr_question_dependencies_aggregate("""distinct select on columns"""
distinct_on: [dr_question_dependencies_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_question_dependencies_order_by! ], """filter the rows returned"""
where: dr_question_dependencies_bool_exp): dr_question_dependencies_aggregate! 
  """
  fetch data from the table: "dr_question_dependencies" using primary key columns
  """
 dr_question_dependencies_by_pk(id: uuid! ): dr_question_dependencies
  """
  fetch data from the table: "dr_question_options"
  """
 dr_question_options("""distinct select on columns"""
distinct_on: [dr_question_options_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_question_options_order_by! ], """filter the rows returned"""
where: dr_question_options_bool_exp): [dr_question_options! ]! 
  """
  fetch aggregated fields from the table: "dr_question_options"
  """
 dr_question_options_aggregate("""distinct select on columns"""
distinct_on: [dr_question_options_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_question_options_order_by! ], """filter the rows returned"""
where: dr_question_options_bool_exp): dr_question_options_aggregate! 
  """
  fetch data from the table: "dr_question_options" using primary key columns
  """
 dr_question_options_by_pk(id: uuid! ): dr_question_options
  """
  fetch data from the table: "dr_question_types"
  """
 dr_question_types("""distinct select on columns"""
distinct_on: [dr_question_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_question_types_order_by! ], """filter the rows returned"""
where: dr_question_types_bool_exp): [dr_question_types! ]! 
  """
  fetch aggregated fields from the table: "dr_question_types"
  """
 dr_question_types_aggregate("""distinct select on columns"""
distinct_on: [dr_question_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_question_types_order_by! ], """filter the rows returned"""
where: dr_question_types_bool_exp): dr_question_types_aggregate! 
  """
  fetch data from the table: "dr_question_types" using primary key columns
  """
 dr_question_types_by_pk(value: String! ): dr_question_types
  """
  fetch data from the table: "dr_questions"
  """
 dr_questions("""distinct select on columns"""
distinct_on: [dr_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_questions_order_by! ], """filter the rows returned"""
where: dr_questions_bool_exp): [dr_questions! ]! 
  """
  fetch aggregated fields from the table: "dr_questions"
  """
 dr_questions_aggregate("""distinct select on columns"""
distinct_on: [dr_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_questions_order_by! ], """filter the rows returned"""
where: dr_questions_bool_exp): dr_questions_aggregate! 
  """fetch data from the table: "dr_questions" using primary key columns"""
 dr_questions_by_pk(id: uuid! ): dr_questions
  """
  fetch data from the table: "dr_service_fee_charges"
  """
 dr_service_fee_charges("""distinct select on columns"""
distinct_on: [dr_service_fee_charges_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_service_fee_charges_order_by! ], """filter the rows returned"""
where: dr_service_fee_charges_bool_exp): [dr_service_fee_charges! ]! 
  """
  fetch aggregated fields from the table: "dr_service_fee_charges"
  """
 dr_service_fee_charges_aggregate("""distinct select on columns"""
distinct_on: [dr_service_fee_charges_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_service_fee_charges_order_by! ], """filter the rows returned"""
where: dr_service_fee_charges_bool_exp): dr_service_fee_charges_aggregate! 
  """
  fetch data from the table: "dr_service_fee_charges" using primary key columns
  """
 dr_service_fee_charges_by_pk(id: uuid! ): dr_service_fee_charges
  """
  fetch data from the table: "dr_service_fees_grouped"
  """
 dr_service_fees_grouped("""distinct select on columns"""
distinct_on: [dr_service_fees_grouped_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_service_fees_grouped_order_by! ], """filter the rows returned"""
where: dr_service_fees_grouped_bool_exp): [dr_service_fees_grouped! ]! 
  """
  fetch aggregated fields from the table: "dr_service_fees_grouped"
  """
 dr_service_fees_grouped_aggregate("""distinct select on columns"""
distinct_on: [dr_service_fees_grouped_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_service_fees_grouped_order_by! ], """filter the rows returned"""
where: dr_service_fees_grouped_bool_exp): dr_service_fees_grouped_aggregate! 
   dr_stripe_delayed_payment_registration_link: StripeOutput! 
  """
  fetch data from the table: "dr_stripe_delayed_payments_customer"
  """
 dr_stripe_delayed_payments_customer("""distinct select on columns"""
distinct_on: [dr_stripe_delayed_payments_customer_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_stripe_delayed_payments_customer_order_by! ], """filter the rows returned"""
where: dr_stripe_delayed_payments_customer_bool_exp): [dr_stripe_delayed_payments_customer! ]! 
  """
  fetch aggregated fields from the table: "dr_stripe_delayed_payments_customer"
  """
 dr_stripe_delayed_payments_customer_aggregate("""distinct select on columns"""
distinct_on: [dr_stripe_delayed_payments_customer_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_stripe_delayed_payments_customer_order_by! ], """filter the rows returned"""
where: dr_stripe_delayed_payments_customer_bool_exp): dr_stripe_delayed_payments_customer_aggregate! 
  """
  fetch data from the table: "dr_stripe_delayed_payments_customer" using primary key columns
  """
 dr_stripe_delayed_payments_customer_by_pk(id: uuid! ): dr_stripe_delayed_payments_customer
   dr_stripe_payment_link(order_id: String! ): StripeOutput! 
   dr_stripe_payment_link_open_access(order_id: String! ): StripeOutput! 
  """
  fetch data from the table: "dr_stripe_webhooks"
  """
 dr_stripe_webhooks("""distinct select on columns"""
distinct_on: [dr_stripe_webhooks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_stripe_webhooks_order_by! ], """filter the rows returned"""
where: dr_stripe_webhooks_bool_exp): [dr_stripe_webhooks! ]! 
  """
  fetch aggregated fields from the table: "dr_stripe_webhooks"
  """
 dr_stripe_webhooks_aggregate("""distinct select on columns"""
distinct_on: [dr_stripe_webhooks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_stripe_webhooks_order_by! ], """filter the rows returned"""
where: dr_stripe_webhooks_bool_exp): dr_stripe_webhooks_aggregate! 
  """
  fetch data from the table: "dr_stripe_webhooks" using primary key columns
  """
 dr_stripe_webhooks_by_pk(id: uuid! ): dr_stripe_webhooks
  """
  fetch data from the table: "dr_tax_rules"
  """
 dr_tax_rules("""distinct select on columns"""
distinct_on: [dr_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_tax_rules_order_by! ], """filter the rows returned"""
where: dr_tax_rules_bool_exp): [dr_tax_rules! ]! 
  """
  fetch aggregated fields from the table: "dr_tax_rules"
  """
 dr_tax_rules_aggregate("""distinct select on columns"""
distinct_on: [dr_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_tax_rules_order_by! ], """filter the rows returned"""
where: dr_tax_rules_bool_exp): dr_tax_rules_aggregate! 
  """fetch data from the table: "dr_tax_rules" using primary key columns"""
 dr_tax_rules_by_pk(id: uuid! ): dr_tax_rules
  """
  fetch data from the table: "dr_ticket_addons"
  """
 dr_ticket_addons("""distinct select on columns"""
distinct_on: [dr_ticket_addons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_addons_order_by! ], """filter the rows returned"""
where: dr_ticket_addons_bool_exp): [dr_ticket_addons! ]! 
  """
  fetch aggregated fields from the table: "dr_ticket_addons"
  """
 dr_ticket_addons_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_addons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_addons_order_by! ], """filter the rows returned"""
where: dr_ticket_addons_bool_exp): dr_ticket_addons_aggregate! 
  """
  fetch data from the table: "dr_ticket_addons" using primary key columns
  """
 dr_ticket_addons_by_pk(id: uuid! ): dr_ticket_addons
  """
  fetch data from the table: "dr_ticket_addons_view"
  """
 dr_ticket_addons_view("""distinct select on columns"""
distinct_on: [dr_ticket_addons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_addons_view_order_by! ], """filter the rows returned"""
where: dr_ticket_addons_view_bool_exp): [dr_ticket_addons_view! ]! 
  """
  fetch aggregated fields from the table: "dr_ticket_addons_view"
  """
 dr_ticket_addons_view_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_addons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_addons_view_order_by! ], """filter the rows returned"""
where: dr_ticket_addons_view_bool_exp): dr_ticket_addons_view_aggregate! 
   dr_ticket_coupons("""distinct select on columns"""
distinct_on: [dr_ticket_coupons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_coupons_order_by! ], """filter the rows returned"""
where: dr_ticket_coupons_bool_exp): [dr_ticket_coupons! ]! 
   dr_ticket_coupons_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_coupons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_coupons_order_by! ], """filter the rows returned"""
where: dr_ticket_coupons_bool_exp): dr_ticket_coupons_aggregate! 
   dr_ticket_coupons_by_pk(id: uuid! ): dr_ticket_coupons
  """
  fetch data from the table: "dr_ticket_coupons_view"
  """
 dr_ticket_coupons_view("""distinct select on columns"""
distinct_on: [dr_ticket_coupons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_coupons_view_order_by! ], """filter the rows returned"""
where: dr_ticket_coupons_view_bool_exp): [dr_ticket_coupons_view! ]! 
  """
  fetch aggregated fields from the table: "dr_ticket_coupons_view"
  """
 dr_ticket_coupons_view_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_coupons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_coupons_view_order_by! ], """filter the rows returned"""
where: dr_ticket_coupons_view_bool_exp): dr_ticket_coupons_view_aggregate! 
  """
  fetch data from the table: "dr_ticket_groups"
  """
 dr_ticket_groups("""distinct select on columns"""
distinct_on: [dr_ticket_groups_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_groups_order_by! ], """filter the rows returned"""
where: dr_ticket_groups_bool_exp): [dr_ticket_groups! ]! 
  """
  fetch aggregated fields from the table: "dr_ticket_groups"
  """
 dr_ticket_groups_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_groups_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_groups_order_by! ], """filter the rows returned"""
where: dr_ticket_groups_bool_exp): dr_ticket_groups_aggregate! 
  """
  fetch data from the table: "dr_ticket_groups" using primary key columns
  """
 dr_ticket_groups_by_pk(id: Int! ): dr_ticket_groups
  """
  fetch data from the table: "dr_ticket_groups_ungrouped_order"
  """
 dr_ticket_groups_ungrouped_order("""distinct select on columns"""
distinct_on: [dr_ticket_groups_ungrouped_order_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_groups_ungrouped_order_order_by! ], """filter the rows returned"""
where: dr_ticket_groups_ungrouped_order_bool_exp): [dr_ticket_groups_ungrouped_order! ]! 
  """
  fetch aggregated fields from the table: "dr_ticket_groups_ungrouped_order"
  """
 dr_ticket_groups_ungrouped_order_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_groups_ungrouped_order_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_groups_ungrouped_order_order_by! ], """filter the rows returned"""
where: dr_ticket_groups_ungrouped_order_bool_exp): dr_ticket_groups_ungrouped_order_aggregate! 
  """
  fetch data from the table: "dr_ticket_groups_ungrouped_order" using primary key columns
  """
 dr_ticket_groups_ungrouped_order_by_pk(id: Int! ): dr_ticket_groups_ungrouped_order
  """
  fetch data from the table: "dr_ticket_tax_rules"
  """
 dr_ticket_tax_rules("""distinct select on columns"""
distinct_on: [dr_ticket_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_tax_rules_order_by! ], """filter the rows returned"""
where: dr_ticket_tax_rules_bool_exp): [dr_ticket_tax_rules! ]! 
  """
  fetch aggregated fields from the table: "dr_ticket_tax_rules"
  """
 dr_ticket_tax_rules_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_tax_rules_order_by! ], """filter the rows returned"""
where: dr_ticket_tax_rules_bool_exp): dr_ticket_tax_rules_aggregate! 
  """
  fetch data from the table: "dr_ticket_tax_rules" using primary key columns
  """
 dr_ticket_tax_rules_by_pk(id: uuid! ): dr_ticket_tax_rules
  """
  fetch data from the table: "dr_ticket_tax_rules_view"
  """
 dr_ticket_tax_rules_view("""distinct select on columns"""
distinct_on: [dr_ticket_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_ticket_tax_rules_view_bool_exp): [dr_ticket_tax_rules_view! ]! 
  """
  fetch aggregated fields from the table: "dr_ticket_tax_rules_view"
  """
 dr_ticket_tax_rules_view_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_ticket_tax_rules_view_bool_exp): dr_ticket_tax_rules_view_aggregate! 
  """
  fetch data from the table: "dr_tickets"
  """
 dr_tickets("""distinct select on columns"""
distinct_on: [dr_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_tickets_order_by! ], """filter the rows returned"""
where: dr_tickets_bool_exp): [dr_tickets! ]! 
  """
  fetch aggregated fields from the table: "dr_tickets"
  """
 dr_tickets_aggregate("""distinct select on columns"""
distinct_on: [dr_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_tickets_order_by! ], """filter the rows returned"""
where: dr_tickets_bool_exp): dr_tickets_aggregate! 
  """fetch data from the table: "dr_tickets" using primary key columns"""
 dr_tickets_by_pk(id: uuid! ): dr_tickets
  """
  fetch data from the table: "dr_tickets_view"
  """
 dr_tickets_view("""distinct select on columns"""
distinct_on: [dr_tickets_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_tickets_view_order_by! ], """filter the rows returned"""
where: dr_tickets_view_bool_exp): [dr_tickets_view! ]! 
  """
  fetch aggregated fields from the table: "dr_tickets_view"
  """
 dr_tickets_view_aggregate("""distinct select on columns"""
distinct_on: [dr_tickets_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_tickets_view_order_by! ], """filter the rows returned"""
where: dr_tickets_view_bool_exp): dr_tickets_view_aggregate! 
  """
  fetch data from the table: "dr_transaction_types"
  """
 dr_transaction_types("""distinct select on columns"""
distinct_on: [dr_transaction_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_transaction_types_order_by! ], """filter the rows returned"""
where: dr_transaction_types_bool_exp): [dr_transaction_types! ]! 
  """
  fetch aggregated fields from the table: "dr_transaction_types"
  """
 dr_transaction_types_aggregate("""distinct select on columns"""
distinct_on: [dr_transaction_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_transaction_types_order_by! ], """filter the rows returned"""
where: dr_transaction_types_bool_exp): dr_transaction_types_aggregate! 
  """
  fetch data from the table: "dr_transaction_types" using primary key columns
  """
 dr_transaction_types_by_pk(value: String! ): dr_transaction_types
  """
  fetch data from the table: "dr_transactions"
  """
 dr_transactions("""distinct select on columns"""
distinct_on: [dr_transactions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_transactions_order_by! ], """filter the rows returned"""
where: dr_transactions_bool_exp): [dr_transactions! ]! 
  """
  fetch aggregated fields from the table: "dr_transactions"
  """
 dr_transactions_aggregate("""distinct select on columns"""
distinct_on: [dr_transactions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_transactions_order_by! ], """filter the rows returned"""
where: dr_transactions_bool_exp): dr_transactions_aggregate! 
  """fetch data from the table: "dr_transactions" using primary key columns"""
 dr_transactions_by_pk(id: uuid! ): dr_transactions
  """
  fetch data from the table: "dr_vat_address"
  """
 dr_vat_address("""distinct select on columns"""
distinct_on: [dr_vat_address_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_vat_address_order_by! ], """filter the rows returned"""
where: dr_vat_address_bool_exp): [dr_vat_address! ]! 
  """
  fetch aggregated fields from the table: "dr_vat_address"
  """
 dr_vat_address_aggregate("""distinct select on columns"""
distinct_on: [dr_vat_address_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_vat_address_order_by! ], """filter the rows returned"""
where: dr_vat_address_bool_exp): dr_vat_address_aggregate! 
  """fetch data from the table: "dr_vat_address" using primary key columns"""
 dr_vat_address_by_pk(id: uuid! ): dr_vat_address
   email_attachment_direct_upload_url(file_name: String): String! 
   email_exists(email: String! ): EmailExistsOutput! 
  """
  fetch data from the table: "errors"
  """
 errors("""distinct select on columns"""
distinct_on: [errors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [errors_order_by! ], """filter the rows returned"""
where: errors_bool_exp): [errors! ]! 
  """
  fetch aggregated fields from the table: "errors"
  """
 errors_aggregate("""distinct select on columns"""
distinct_on: [errors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [errors_order_by! ], """filter the rows returned"""
where: errors_bool_exp): errors_aggregate! 
  """fetch data from the table: "errors" using primary key columns"""
 errors_by_pk(error_id: Int! ): errors
  """
  fetch data from the table: "event_acceptance_types"
  """
 event_acceptance_types("""distinct select on columns"""
distinct_on: [event_acceptance_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_acceptance_types_order_by! ], """filter the rows returned"""
where: event_acceptance_types_bool_exp): [event_acceptance_types! ]! 
  """
  fetch aggregated fields from the table: "event_acceptance_types"
  """
 event_acceptance_types_aggregate("""distinct select on columns"""
distinct_on: [event_acceptance_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_acceptance_types_order_by! ], """filter the rows returned"""
where: event_acceptance_types_bool_exp): event_acceptance_types_aggregate! 
  """
  fetch data from the table: "event_acceptance_types" using primary key columns
  """
 event_acceptance_types_by_pk(event_acceptance_type_id: Int! ): event_acceptance_types
  """
  fetch data from the table: "event_emails"
  """
 event_emails("""distinct select on columns"""
distinct_on: [event_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_emails_order_by! ], """filter the rows returned"""
where: event_emails_bool_exp): [event_emails! ]! 
  """
  fetch aggregated fields from the table: "event_emails"
  """
 event_emails_aggregate("""distinct select on columns"""
distinct_on: [event_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_emails_order_by! ], """filter the rows returned"""
where: event_emails_bool_exp): event_emails_aggregate! 
  """fetch data from the table: "event_emails" using primary key columns"""
 event_emails_by_pk(id: Int! ): event_emails
  """
  fetch data from the table: "event_payments"
  """
 event_payments("""distinct select on columns"""
distinct_on: [event_payments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_payments_order_by! ], """filter the rows returned"""
where: event_payments_bool_exp): [event_payments! ]! 
  """
  fetch aggregated fields from the table: "event_payments"
  """
 event_payments_aggregate("""distinct select on columns"""
distinct_on: [event_payments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_payments_order_by! ], """filter the rows returned"""
where: event_payments_bool_exp): event_payments_aggregate! 
  """fetch data from the table: "event_payments" using primary key columns"""
 event_payments_by_pk(id: Int! ): event_payments
  """
  fetch data from the table: "event_program_menu_sponsors"
  """
 event_program_menu_sponsors("""distinct select on columns"""
distinct_on: [event_program_menu_sponsors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_program_menu_sponsors_order_by! ], """filter the rows returned"""
where: event_program_menu_sponsors_bool_exp): [event_program_menu_sponsors! ]! 
  """
  fetch aggregated fields from the table: "event_program_menu_sponsors"
  """
 event_program_menu_sponsors_aggregate("""distinct select on columns"""
distinct_on: [event_program_menu_sponsors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_program_menu_sponsors_order_by! ], """filter the rows returned"""
where: event_program_menu_sponsors_bool_exp): event_program_menu_sponsors_aggregate! 
  """
  fetch data from the table: "event_suspicions"
  """
 event_suspicions("""distinct select on columns"""
distinct_on: [event_suspicions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_suspicions_order_by! ], """filter the rows returned"""
where: event_suspicions_bool_exp): [event_suspicions! ]! 
  """
  fetch aggregated fields from the table: "event_suspicions"
  """
 event_suspicions_aggregate("""distinct select on columns"""
distinct_on: [event_suspicions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_suspicions_order_by! ], """filter the rows returned"""
where: event_suspicions_bool_exp): event_suspicions_aggregate! 
  """
  fetch data from the table: "event_suspicions" using primary key columns
  """
 event_suspicions_by_pk(id: uuid! ): event_suspicions
  """An array relationship"""
 events("""distinct select on columns"""
distinct_on: [events_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [events_order_by! ], """filter the rows returned"""
where: events_bool_exp): [events! ]! 
  """An aggregate relationship"""
 events_aggregate("""distinct select on columns"""
distinct_on: [events_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [events_order_by! ], """filter the rows returned"""
where: events_bool_exp): events_aggregate! 
  """
  fetch data from the table: "events_with_archived" using primary key columns
  """
 events_by_pk("""A unique identifier for each event"""
id: Int! ): events
  """An array relationship"""
 events_permissions("""distinct select on columns"""
distinct_on: [events_permissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [events_permissions_order_by! ], """filter the rows returned"""
where: events_permissions_bool_exp): [events_permissions! ]! 
  """An aggregate relationship"""
 events_permissions_aggregate("""distinct select on columns"""
distinct_on: [events_permissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [events_permissions_order_by! ], """filter the rows returned"""
where: events_permissions_bool_exp): events_permissions_aggregate! 
  """
  fetch data from the table: "events_verified_sender_emails"
  """
 events_verified_sender_emails("""distinct select on columns"""
distinct_on: [events_verified_sender_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [events_verified_sender_emails_order_by! ], """filter the rows returned"""
where: events_verified_sender_emails_bool_exp): [events_verified_sender_emails! ]! 
  """
  fetch aggregated fields from the table: "events_verified_sender_emails"
  """
 events_verified_sender_emails_aggregate("""distinct select on columns"""
distinct_on: [events_verified_sender_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [events_verified_sender_emails_order_by! ], """filter the rows returned"""
where: events_verified_sender_emails_bool_exp): events_verified_sender_emails_aggregate! 
  """
  fetch data from the table: "events_verified_sender_emails" using primary key columns
  """
 events_verified_sender_emails_by_pk(id: uuid! ): events_verified_sender_emails
  """
  fetch data from the table: "exhibitor_contact_statuses"
  """
 exhibitor_contact_statuses("""distinct select on columns"""
distinct_on: [exhibitor_contact_statuses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_contact_statuses_order_by! ], """filter the rows returned"""
where: exhibitor_contact_statuses_bool_exp): [exhibitor_contact_statuses! ]! 
  """
  fetch aggregated fields from the table: "exhibitor_contact_statuses"
  """
 exhibitor_contact_statuses_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_contact_statuses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_contact_statuses_order_by! ], """filter the rows returned"""
where: exhibitor_contact_statuses_bool_exp): exhibitor_contact_statuses_aggregate! 
  """
  fetch data from the table: "exhibitor_contact_statuses" using primary key columns
  """
 exhibitor_contact_statuses_by_pk(value: String! ): exhibitor_contact_statuses
  """An array relationship"""
 exhibitor_contacts("""distinct select on columns"""
distinct_on: [exhibitor_contacts_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_contacts_order_by! ], """filter the rows returned"""
where: exhibitor_contacts_bool_exp): [exhibitor_contacts! ]! 
  """An aggregate relationship"""
 exhibitor_contacts_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_contacts_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_contacts_order_by! ], """filter the rows returned"""
where: exhibitor_contacts_bool_exp): exhibitor_contacts_aggregate! 
  """
  fetch data from the table: "exhibitor_contacts" using primary key columns
  """
 exhibitor_contacts_by_pk(id: uuid! ): exhibitor_contacts
  """An array relationship"""
 exhibitor_page_views("""distinct select on columns"""
distinct_on: [exhibitor_page_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_page_views_order_by! ], """filter the rows returned"""
where: exhibitor_page_views_bool_exp): [exhibitor_page_views! ]! 
  """An aggregate relationship"""
 exhibitor_page_views_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_page_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_page_views_order_by! ], """filter the rows returned"""
where: exhibitor_page_views_bool_exp): exhibitor_page_views_aggregate! 
  """
  fetch data from the table: "exhibitor_page_views" using primary key columns
  """
 exhibitor_page_views_by_pk(id: uuid! ): exhibitor_page_views
  """
  fetch data from the table: "exhibitor_representative_user_badge"
  """
 exhibitor_representative_user_badge("""distinct select on columns"""
distinct_on: [exhibitor_representative_user_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_representative_user_badge_order_by! ], """filter the rows returned"""
where: exhibitor_representative_user_badge_bool_exp): [exhibitor_representative_user_badge! ]! 
  """
  fetch aggregated fields from the table: "exhibitor_representative_user_badge"
  """
 exhibitor_representative_user_badge_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_representative_user_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_representative_user_badge_order_by! ], """filter the rows returned"""
where: exhibitor_representative_user_badge_bool_exp): exhibitor_representative_user_badge_aggregate! 
  """
  fetch data from the table: "exhibitor_representative_users"
  """
 exhibitor_representative_users("""distinct select on columns"""
distinct_on: [exhibitor_representative_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_representative_users_order_by! ], """filter the rows returned"""
where: exhibitor_representative_users_bool_exp): [exhibitor_representative_users! ]! 
  """
  fetch aggregated fields from the table: "exhibitor_representative_users"
  """
 exhibitor_representative_users_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_representative_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_representative_users_order_by! ], """filter the rows returned"""
where: exhibitor_representative_users_bool_exp): exhibitor_representative_users_aggregate! 
  """An array relationship"""
 exhibitor_representatives("""distinct select on columns"""
distinct_on: [exhibitor_representatives_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_representatives_order_by! ], """filter the rows returned"""
where: exhibitor_representatives_bool_exp): [exhibitor_representatives! ]! 
  """An aggregate relationship"""
 exhibitor_representatives_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_representatives_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_representatives_order_by! ], """filter the rows returned"""
where: exhibitor_representatives_bool_exp): exhibitor_representatives_aggregate! 
  """
  fetch data from the table: "exhibitor_representatives" using primary key columns
  """
 exhibitor_representatives_by_pk(id: uuid! ): exhibitor_representatives
  """An array relationship"""
 exhibitor_resources("""distinct select on columns"""
distinct_on: [exhibitor_resources_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_resources_order_by! ], """filter the rows returned"""
where: exhibitor_resources_bool_exp): [exhibitor_resources! ]! 
  """An aggregate relationship"""
 exhibitor_resources_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_resources_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_resources_order_by! ], """filter the rows returned"""
where: exhibitor_resources_bool_exp): exhibitor_resources_aggregate! 
  """
  fetch data from the table: "exhibitor_resources" using primary key columns
  """
 exhibitor_resources_by_pk(id: uuid! ): exhibitor_resources
  """
  fetch data from the table: "exhibitor_sizes"
  """
 exhibitor_sizes("""distinct select on columns"""
distinct_on: [exhibitor_sizes_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_sizes_order_by! ], """filter the rows returned"""
where: exhibitor_sizes_bool_exp): [exhibitor_sizes! ]! 
  """
  fetch aggregated fields from the table: "exhibitor_sizes"
  """
 exhibitor_sizes_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_sizes_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_sizes_order_by! ], """filter the rows returned"""
where: exhibitor_sizes_bool_exp): exhibitor_sizes_aggregate! 
  """fetch data from the table: "exhibitor_sizes" using primary key columns"""
 exhibitor_sizes_by_pk(value: String! ): exhibitor_sizes
  """
  fetch data from the table: "exhibitor_social_clicks"
  """
 exhibitor_social_clicks("""distinct select on columns"""
distinct_on: [exhibitor_social_clicks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_social_clicks_order_by! ], """filter the rows returned"""
where: exhibitor_social_clicks_bool_exp): [exhibitor_social_clicks! ]! 
  """
  fetch aggregated fields from the table: "exhibitor_social_clicks"
  """
 exhibitor_social_clicks_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_social_clicks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_social_clicks_order_by! ], """filter the rows returned"""
where: exhibitor_social_clicks_bool_exp): exhibitor_social_clicks_aggregate! 
  """
  fetch data from the table: "exhibitor_social_clicks" using primary key columns
  """
 exhibitor_social_clicks_by_pk(id: uuid! ): exhibitor_social_clicks
  """
  fetch data from the table: "exhibitor_statuses"
  """
 exhibitor_statuses("""distinct select on columns"""
distinct_on: [exhibitor_statuses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_statuses_order_by! ], """filter the rows returned"""
where: exhibitor_statuses_bool_exp): [exhibitor_statuses! ]! 
  """
  fetch aggregated fields from the table: "exhibitor_statuses"
  """
 exhibitor_statuses_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_statuses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_statuses_order_by! ], """filter the rows returned"""
where: exhibitor_statuses_bool_exp): exhibitor_statuses_aggregate! 
  """
  fetch data from the table: "exhibitor_statuses" using primary key columns
  """
 exhibitor_statuses_by_pk(value: String! ): exhibitor_statuses
  """
  fetch data from the table: "exhibitor_tags"
  """
 exhibitor_tags("""distinct select on columns"""
distinct_on: [exhibitor_tags_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_tags_order_by! ], """filter the rows returned"""
where: exhibitor_tags_bool_exp): [exhibitor_tags! ]! 
  """
  fetch aggregated fields from the table: "exhibitor_tags"
  """
 exhibitor_tags_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_tags_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_tags_order_by! ], """filter the rows returned"""
where: exhibitor_tags_bool_exp): exhibitor_tags_aggregate! 
  """fetch data from the table: "exhibitor_tags" using primary key columns"""
 exhibitor_tags_by_pk(id: uuid! ): exhibitor_tags
  """
  fetch data from the table: "exhibitor_users"
  """
 exhibitor_users("""distinct select on columns"""
distinct_on: [exhibitor_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_users_order_by! ], """filter the rows returned"""
where: exhibitor_users_bool_exp): [exhibitor_users! ]! 
  """
  fetch aggregated fields from the table: "exhibitor_users"
  """
 exhibitor_users_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_users_order_by! ], """filter the rows returned"""
where: exhibitor_users_bool_exp): exhibitor_users_aggregate! 
  """
  fetch data from the table: "exhibitors"
  """
 exhibitors("""distinct select on columns"""
distinct_on: [exhibitors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitors_order_by! ], """filter the rows returned"""
where: exhibitors_bool_exp): [exhibitors! ]! 
  """
  fetch aggregated fields from the table: "exhibitors"
  """
 exhibitors_aggregate("""distinct select on columns"""
distinct_on: [exhibitors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitors_order_by! ], """filter the rows returned"""
where: exhibitors_bool_exp): exhibitors_aggregate! 
  """fetch data from the table: "exhibitors" using primary key columns"""
 exhibitors_by_pk(id: uuid! ): exhibitors
  """An array relationship"""
 exhibitors_tags("""distinct select on columns"""
distinct_on: [exhibitors_tags_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitors_tags_order_by! ], """filter the rows returned"""
where: exhibitors_tags_bool_exp): [exhibitors_tags! ]! 
  """An aggregate relationship"""
 exhibitors_tags_aggregate("""distinct select on columns"""
distinct_on: [exhibitors_tags_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitors_tags_order_by! ], """filter the rows returned"""
where: exhibitors_tags_bool_exp): exhibitors_tags_aggregate! 
  """fetch data from the table: "exhibitors_tags" using primary key columns"""
 exhibitors_tags_by_pk(id: uuid! ): exhibitors_tags
  """
  fetch data from the table: "export_progresses"
  """
 export_progresses("""distinct select on columns"""
distinct_on: [export_progresses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [export_progresses_order_by! ], """filter the rows returned"""
where: export_progresses_bool_exp): [export_progresses! ]! 
  """
  fetch aggregated fields from the table: "export_progresses"
  """
 export_progresses_aggregate("""distinct select on columns"""
distinct_on: [export_progresses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [export_progresses_order_by! ], """filter the rows returned"""
where: export_progresses_bool_exp): export_progresses_aggregate! 
  """
  fetch data from the table: "export_progresses" using primary key columns
  """
 export_progresses_by_pk(id: uuid! ): export_progresses
  """
  fetch data from the table: "gql_api_keys"
  """
 gql_api_keys("""distinct select on columns"""
distinct_on: [gql_api_keys_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [gql_api_keys_order_by! ], """filter the rows returned"""
where: gql_api_keys_bool_exp): [gql_api_keys! ]! 
  """
  fetch aggregated fields from the table: "gql_api_keys"
  """
 gql_api_keys_aggregate("""distinct select on columns"""
distinct_on: [gql_api_keys_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [gql_api_keys_order_by! ], """filter the rows returned"""
where: gql_api_keys_bool_exp): gql_api_keys_aggregate! 
  """fetch data from the table: "gql_api_keys" using primary key columns"""
 gql_api_keys_by_pk(api_key: uuid! ): gql_api_keys
  """is_admin"""
 is_admin: IsAdminOutput! 
  """
  fetch data from the table: "notifications"
  """
 notifications("""distinct select on columns"""
distinct_on: [notifications_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [notifications_order_by! ], """filter the rows returned"""
where: notifications_bool_exp): [notifications! ]! 
  """
  fetch aggregated fields from the table: "notifications"
  """
 notifications_aggregate("""distinct select on columns"""
distinct_on: [notifications_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [notifications_order_by! ], """filter the rows returned"""
where: notifications_bool_exp): notifications_aggregate! 
  """fetch data from the table: "notifications" using primary key columns"""
 notifications_by_pk(notification_id: Int! ): notifications
  """An array relationship"""
 notifications_users("""distinct select on columns"""
distinct_on: [notifications_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [notifications_users_order_by! ], """filter the rows returned"""
where: notifications_users_bool_exp): [notifications_users! ]! 
  """An aggregate relationship"""
 notifications_users_aggregate("""distinct select on columns"""
distinct_on: [notifications_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [notifications_users_order_by! ], """filter the rows returned"""
where: notifications_users_bool_exp): notifications_users_aggregate! 
  """
  fetch data from the table: "notifications_users" using primary key columns
  """
 notifications_users_by_pk(id: Int! ): notifications_users
  """
  fetch data from the table: "oa_db_env"
  """
 oa_db_env("""distinct select on columns"""
distinct_on: [oa_db_env_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [oa_db_env_order_by! ], """filter the rows returned"""
where: oa_db_env_bool_exp): [oa_db_env! ]! 
  """
  fetch aggregated fields from the table: "oa_db_env"
  """
 oa_db_env_aggregate("""distinct select on columns"""
distinct_on: [oa_db_env_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [oa_db_env_order_by! ], """filter the rows returned"""
where: oa_db_env_bool_exp): oa_db_env_aggregate! 
  """fetch data from the table: "oa_db_env" using primary key columns"""
 oa_db_env_by_pk(key: String! ): oa_db_env
  """
  fetch data from the table: "oauth_codes"
  """
 oauth_codes("""distinct select on columns"""
distinct_on: [oauth_codes_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [oauth_codes_order_by! ], """filter the rows returned"""
where: oauth_codes_bool_exp): [oauth_codes! ]! 
  """
  fetch aggregated fields from the table: "oauth_codes"
  """
 oauth_codes_aggregate("""distinct select on columns"""
distinct_on: [oauth_codes_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [oauth_codes_order_by! ], """filter the rows returned"""
where: oauth_codes_bool_exp): oauth_codes_aggregate! 
  """fetch data from the table: "oauth_codes" using primary key columns"""
 oauth_codes_by_pk(id: uuid! ): oauth_codes
  """
  fetch data from the table: "orderable_posters_submissions"
  """
 orderable_posters_submissions("""distinct select on columns"""
distinct_on: [orderable_posters_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [orderable_posters_submissions_order_by! ], """filter the rows returned"""
where: orderable_posters_submissions_bool_exp): [orderable_posters_submissions! ]! 
  """
  fetch aggregated fields from the table: "orderable_posters_submissions"
  """
 orderable_posters_submissions_aggregate("""distinct select on columns"""
distinct_on: [orderable_posters_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [orderable_posters_submissions_order_by! ], """filter the rows returned"""
where: orderable_posters_submissions_bool_exp): orderable_posters_submissions_aggregate! 
  """
  fetch data from the table: "ordered_people_by_last_name"
  """
 ordered_people_by_last_name("""distinct select on columns"""
distinct_on: [ordered_people_by_last_name_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_people_by_last_name_order_by! ], """filter the rows returned"""
where: ordered_people_by_last_name_bool_exp): [ordered_people_by_last_name! ]! 
  """
  fetch aggregated fields from the table: "ordered_people_by_last_name"
  """
 ordered_people_by_last_name_aggregate("""distinct select on columns"""
distinct_on: [ordered_people_by_last_name_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_people_by_last_name_order_by! ], """filter the rows returned"""
where: ordered_people_by_last_name_bool_exp): ordered_people_by_last_name_aggregate! 
  """
  fetch data from the table: "ordered_poster_authors"
  """
 ordered_poster_authors("""distinct select on columns"""
distinct_on: [ordered_poster_authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_poster_authors_order_by! ], """filter the rows returned"""
where: ordered_poster_authors_bool_exp): [ordered_poster_authors! ]! 
  """
  fetch aggregated fields from the table: "ordered_poster_authors"
  """
 ordered_poster_authors_aggregate("""distinct select on columns"""
distinct_on: [ordered_poster_authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_poster_authors_order_by! ], """filter the rows returned"""
where: ordered_poster_authors_bool_exp): ordered_poster_authors_aggregate! 
  """
  fetch data from the table: "ordered_program_authors"
  """
 ordered_program_authors("""distinct select on columns"""
distinct_on: [ordered_program_authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_authors_order_by! ], """filter the rows returned"""
where: ordered_program_authors_bool_exp): [ordered_program_authors! ]! 
  """
  fetch aggregated fields from the table: "ordered_program_authors"
  """
 ordered_program_authors_aggregate("""distinct select on columns"""
distinct_on: [ordered_program_authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_authors_order_by! ], """filter the rows returned"""
where: ordered_program_authors_bool_exp): ordered_program_authors_aggregate! 
  """
  fetch data from the table: "ordered_program_chairs"
  """
 ordered_program_chairs("""distinct select on columns"""
distinct_on: [ordered_program_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_chairs_order_by! ], """filter the rows returned"""
where: ordered_program_chairs_bool_exp): [ordered_program_chairs! ]! 
  """
  fetch aggregated fields from the table: "ordered_program_chairs"
  """
 ordered_program_chairs_aggregate("""distinct select on columns"""
distinct_on: [ordered_program_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_chairs_order_by! ], """filter the rows returned"""
where: ordered_program_chairs_bool_exp): ordered_program_chairs_aggregate! 
  """
  fetch data from the table: "ordered_program_submissions_by_category"
  """
 ordered_program_submissions_by_category("""distinct select on columns"""
distinct_on: [ordered_program_submissions_by_category_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_submissions_by_category_order_by! ], """filter the rows returned"""
where: ordered_program_submissions_by_category_bool_exp): [ordered_program_submissions_by_category! ]! 
  """
  fetch aggregated fields from the table: "ordered_program_submissions_by_category"
  """
 ordered_program_submissions_by_category_aggregate("""distinct select on columns"""
distinct_on: [ordered_program_submissions_by_category_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_submissions_by_category_order_by! ], """filter the rows returned"""
where: ordered_program_submissions_by_category_bool_exp): ordered_program_submissions_by_category_aggregate! 
  """An array relationship"""
 ordered_program_submissions_by_title("""distinct select on columns"""
distinct_on: [ordered_program_submissions_by_title_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_submissions_by_title_order_by! ], """filter the rows returned"""
where: ordered_program_submissions_by_title_bool_exp): [ordered_program_submissions_by_title! ]! 
  """An aggregate relationship"""
 ordered_program_submissions_by_title_aggregate("""distinct select on columns"""
distinct_on: [ordered_program_submissions_by_title_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_submissions_by_title_order_by! ], """filter the rows returned"""
where: ordered_program_submissions_by_title_bool_exp): ordered_program_submissions_by_title_aggregate! 
  """
  fetch data from the table: "ordered_program_symposia_by_title"
  """
 ordered_program_symposia_by_title("""distinct select on columns"""
distinct_on: [ordered_program_symposia_by_title_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_symposia_by_title_order_by! ], """filter the rows returned"""
where: ordered_program_symposia_by_title_bool_exp): [ordered_program_symposia_by_title! ]! 
  """
  fetch aggregated fields from the table: "ordered_program_symposia_by_title"
  """
 ordered_program_symposia_by_title_aggregate("""distinct select on columns"""
distinct_on: [ordered_program_symposia_by_title_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_symposia_by_title_order_by! ], """filter the rows returned"""
where: ordered_program_symposia_by_title_bool_exp): ordered_program_symposia_by_title_aggregate! 
  """
  fetch data from the table: "ordered_program_symposium_people"
  """
 ordered_program_symposium_people("""distinct select on columns"""
distinct_on: [ordered_program_symposium_people_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_symposium_people_order_by! ], """filter the rows returned"""
where: ordered_program_symposium_people_bool_exp): [ordered_program_symposium_people! ]! 
  """
  fetch aggregated fields from the table: "ordered_program_symposium_people"
  """
 ordered_program_symposium_people_aggregate("""distinct select on columns"""
distinct_on: [ordered_program_symposium_people_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_symposium_people_order_by! ], """filter the rows returned"""
where: ordered_program_symposium_people_bool_exp): ordered_program_symposium_people_aggregate! 
  """
  fetch data from the table: "ordered_session_chairs"
  """
 ordered_session_chairs("""distinct select on columns"""
distinct_on: [ordered_session_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_session_chairs_order_by! ], """filter the rows returned"""
where: ordered_session_chairs_bool_exp): [ordered_session_chairs! ]! 
  """
  fetch aggregated fields from the table: "ordered_session_chairs"
  """
 ordered_session_chairs_aggregate("""distinct select on columns"""
distinct_on: [ordered_session_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_session_chairs_order_by! ], """filter the rows returned"""
where: ordered_session_chairs_bool_exp): ordered_session_chairs_aggregate! 
  """An array relationship"""
 presenter_emails("""distinct select on columns"""
distinct_on: [presenter_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [presenter_emails_order_by! ], """filter the rows returned"""
where: presenter_emails_bool_exp): [presenter_emails! ]! 
  """An aggregate relationship"""
 presenter_emails_aggregate("""distinct select on columns"""
distinct_on: [presenter_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [presenter_emails_order_by! ], """filter the rows returned"""
where: presenter_emails_bool_exp): presenter_emails_aggregate! 
  """
  fetch data from the table: "program_attachments"
  """
 program_attachments("""distinct select on columns"""
distinct_on: [program_attachments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_attachments_order_by! ], """filter the rows returned"""
where: program_attachments_bool_exp): [program_attachments! ]! 
  """
  fetch aggregated fields from the table: "program_attachments"
  """
 program_attachments_aggregate("""distinct select on columns"""
distinct_on: [program_attachments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_attachments_order_by! ], """filter the rows returned"""
where: program_attachments_bool_exp): program_attachments_aggregate! 
  """
  fetch data from the table: "program_attachments" using primary key columns
  """
 program_attachments_by_pk(id: Int! ): program_attachments
  """
  fetch data from the table: "program_chairs"
  """
 program_chairs("""distinct select on columns"""
distinct_on: [program_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_chairs_order_by! ], """filter the rows returned"""
where: program_chairs_bool_exp): [program_chairs! ]! 
  """
  fetch aggregated fields from the table: "program_chairs"
  """
 program_chairs_aggregate("""distinct select on columns"""
distinct_on: [program_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_chairs_order_by! ], """filter the rows returned"""
where: program_chairs_bool_exp): program_chairs_aggregate! 
  """fetch data from the table: "program_chairs" using primary key columns"""
 program_chairs_by_pk(program_chair_id: Int! ): program_chairs
  """
  fetch data from the table: "program_columns"
  """
 program_columns("""distinct select on columns"""
distinct_on: [program_columns_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_columns_order_by! ], """filter the rows returned"""
where: program_columns_bool_exp): [program_columns! ]! 
  """
  fetch aggregated fields from the table: "program_columns"
  """
 program_columns_aggregate("""distinct select on columns"""
distinct_on: [program_columns_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_columns_order_by! ], """filter the rows returned"""
where: program_columns_bool_exp): program_columns_aggregate! 
  """fetch data from the table: "program_columns" using primary key columns"""
 program_columns_by_pk(id: Int! ): program_columns
  """
  fetch data from the table: "program_columns_zoom_users"
  """
 program_columns_zoom_users("""distinct select on columns"""
distinct_on: [program_columns_zoom_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_columns_zoom_users_order_by! ], """filter the rows returned"""
where: program_columns_zoom_users_bool_exp): [program_columns_zoom_users! ]! 
  """
  fetch aggregated fields from the table: "program_columns_zoom_users"
  """
 program_columns_zoom_users_aggregate("""distinct select on columns"""
distinct_on: [program_columns_zoom_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_columns_zoom_users_order_by! ], """filter the rows returned"""
where: program_columns_zoom_users_bool_exp): program_columns_zoom_users_aggregate! 
  """
  fetch data from the table: "program_columns_zoom_users" using primary key columns
  """
 program_columns_zoom_users_by_pk(id: Int! ): program_columns_zoom_users
  """An array relationship"""
 program_dates("""distinct select on columns"""
distinct_on: [program_dates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_dates_order_by! ], """filter the rows returned"""
where: program_dates_bool_exp): [program_dates! ]! 
  """An aggregate relationship"""
 program_dates_aggregate("""distinct select on columns"""
distinct_on: [program_dates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_dates_order_by! ], """filter the rows returned"""
where: program_dates_bool_exp): program_dates_aggregate! 
  """fetch data from the table: "program_dates" using primary key columns"""
 program_dates_by_pk(id: Int! ): program_dates
  """
  fetch data from the table: "program_downloads"
  """
 program_downloads("""distinct select on columns"""
distinct_on: [program_downloads_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_downloads_order_by! ], """filter the rows returned"""
where: program_downloads_bool_exp): [program_downloads! ]! 
  """
  fetch aggregated fields from the table: "program_downloads"
  """
 program_downloads_aggregate("""distinct select on columns"""
distinct_on: [program_downloads_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_downloads_order_by! ], """filter the rows returned"""
where: program_downloads_bool_exp): program_downloads_aggregate! 
  """
  fetch data from the table: "program_downloads" using primary key columns
  """
 program_downloads_by_pk(program_download_id: Int! ): program_downloads
  """
  fetch data from the table: "program_info"
  """
 program_info("""distinct select on columns"""
distinct_on: [program_info_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_info_order_by! ], """filter the rows returned"""
where: program_info_bool_exp): [program_info! ]! 
  """
  fetch aggregated fields from the table: "program_info"
  """
 program_info_aggregate("""distinct select on columns"""
distinct_on: [program_info_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_info_order_by! ], """filter the rows returned"""
where: program_info_bool_exp): program_info_aggregate! 
  """fetch data from the table: "program_info" using primary key columns"""
 program_info_by_pk(program_info_id: Int! ): program_info
  """
  fetch data from the table: "program_information"
  """
 program_information("""distinct select on columns"""
distinct_on: [program_information_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_information_order_by! ], """filter the rows returned"""
where: program_information_bool_exp): [program_information! ]! 
  """
  fetch aggregated fields from the table: "program_information"
  """
 program_information_aggregate("""distinct select on columns"""
distinct_on: [program_information_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_information_order_by! ], """filter the rows returned"""
where: program_information_bool_exp): program_information_aggregate! 
  """
  fetch data from the table: "program_information" using primary key columns
  """
 program_information_by_pk(program_information_id: Int! ): program_information
  """
  fetch data from the table: "program_locations"
  """
 program_locations("""distinct select on columns"""
distinct_on: [program_locations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_locations_order_by! ], """filter the rows returned"""
where: program_locations_bool_exp): [program_locations! ]! 
  """
  fetch aggregated fields from the table: "program_locations"
  """
 program_locations_aggregate("""distinct select on columns"""
distinct_on: [program_locations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_locations_order_by! ], """filter the rows returned"""
where: program_locations_bool_exp): program_locations_aggregate! 
  """
  fetch data from the table: "program_locations" using primary key columns
  """
 program_locations_by_pk(program_location_id: Int! ): program_locations
  """
  fetch data from the table: "program_session_attachments"
  """
 program_session_activities("""distinct select on columns"""
distinct_on: [program_session_activities_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_activities_order_by! ], """filter the rows returned"""
where: program_session_activities_bool_exp): [program_session_activities! ]! 
  """
  fetch aggregated fields from the table: "program_session_attachments"
  """
 program_session_activities_aggregate("""distinct select on columns"""
distinct_on: [program_session_activities_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_activities_order_by! ], """filter the rows returned"""
where: program_session_activities_bool_exp): program_session_activities_aggregate! 
  """
  fetch data from the table: "program_session_categories"
  """
 program_session_categories("""distinct select on columns"""
distinct_on: [program_session_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_categories_order_by! ], """filter the rows returned"""
where: program_session_categories_bool_exp): [program_session_categories! ]! 
  """
  fetch aggregated fields from the table: "program_session_categories"
  """
 program_session_categories_aggregate("""distinct select on columns"""
distinct_on: [program_session_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_categories_order_by! ], """filter the rows returned"""
where: program_session_categories_bool_exp): program_session_categories_aggregate! 
  """
  fetch data from the table: "program_session_categories" using primary key columns
  """
 program_session_categories_by_pk(id: Int! ): program_session_categories
  """
  fetch data from the table: "program_session_category_type"
  """
 program_session_category_type("""distinct select on columns"""
distinct_on: [program_session_category_type_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_category_type_order_by! ], """filter the rows returned"""
where: program_session_category_type_bool_exp): [program_session_category_type! ]! 
  """
  fetch aggregated fields from the table: "program_session_category_type"
  """
 program_session_category_type_aggregate("""distinct select on columns"""
distinct_on: [program_session_category_type_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_category_type_order_by! ], """filter the rows returned"""
where: program_session_category_type_bool_exp): program_session_category_type_aggregate! 
  """
  fetch data from the table: "program_session_category_type" using primary key columns
  """
 program_session_category_type_by_pk(id: Int! ): program_session_category_type
  """
  fetch data from the table: "program_session_sponsors"
  """
 program_session_sponsors("""distinct select on columns"""
distinct_on: [program_session_sponsors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_sponsors_order_by! ], """filter the rows returned"""
where: program_session_sponsors_bool_exp): [program_session_sponsors! ]! 
  """
  fetch aggregated fields from the table: "program_session_sponsors"
  """
 program_session_sponsors_aggregate("""distinct select on columns"""
distinct_on: [program_session_sponsors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_sponsors_order_by! ], """filter the rows returned"""
where: program_session_sponsors_bool_exp): program_session_sponsors_aggregate! 
  """
  fetch data from the table: "program_session_zoom_meetings"
  """
 program_session_zoom_meetings("""distinct select on columns"""
distinct_on: [program_session_zoom_meetings_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_zoom_meetings_order_by! ], """filter the rows returned"""
where: program_session_zoom_meetings_bool_exp): [program_session_zoom_meetings! ]! 
  """
  fetch aggregated fields from the table: "program_session_zoom_meetings"
  """
 program_session_zoom_meetings_aggregate("""distinct select on columns"""
distinct_on: [program_session_zoom_meetings_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_zoom_meetings_order_by! ], """filter the rows returned"""
where: program_session_zoom_meetings_bool_exp): program_session_zoom_meetings_aggregate! 
  """
  fetch data from the table: "program_session_zoom_meetings" using primary key columns
  """
 program_session_zoom_meetings_by_pk(id: Int! ): program_session_zoom_meetings
  """An array relationship"""
 program_sessions("""distinct select on columns"""
distinct_on: [program_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_order_by! ], """filter the rows returned"""
where: program_sessions_bool_exp): [program_sessions! ]! 
  """An aggregate relationship"""
 program_sessions_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_order_by! ], """filter the rows returned"""
where: program_sessions_bool_exp): program_sessions_aggregate! 
  """
  fetch data from the table: "program_sessions_authors"
  """
 program_sessions_authors("""distinct select on columns"""
distinct_on: [program_sessions_authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_authors_order_by! ], """filter the rows returned"""
where: program_sessions_authors_bool_exp): [program_sessions_authors! ]! 
  """
  fetch aggregated fields from the table: "program_sessions_authors"
  """
 program_sessions_authors_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_authors_order_by! ], """filter the rows returned"""
where: program_sessions_authors_bool_exp): program_sessions_authors_aggregate! 
  """
  fetch data from the table: "program_sessions" using primary key columns
  """
 program_sessions_by_pk(id: Int! ): program_sessions
  """
  fetch data from the table: "program_sessions_categories"
  """
 program_sessions_categories("""distinct select on columns"""
distinct_on: [program_sessions_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_categories_order_by! ], """filter the rows returned"""
where: program_sessions_categories_bool_exp): [program_sessions_categories! ]! 
  """
  fetch aggregated fields from the table: "program_sessions_categories"
  """
 program_sessions_categories_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_categories_order_by! ], """filter the rows returned"""
where: program_sessions_categories_bool_exp): program_sessions_categories_aggregate! 
  """
  fetch data from the table: "program_sessions_categories" using primary key columns
  """
 program_sessions_categories_by_pk(id: Int! ): program_sessions_categories
  """An array relationship"""
 program_sessions_chairs("""distinct select on columns"""
distinct_on: [program_sessions_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_chairs_order_by! ], """filter the rows returned"""
where: program_sessions_chairs_bool_exp): [program_sessions_chairs! ]! 
  """An aggregate relationship"""
 program_sessions_chairs_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_chairs_order_by! ], """filter the rows returned"""
where: program_sessions_chairs_bool_exp): program_sessions_chairs_aggregate! 
  """
  fetch data from the table: "program_sessions_chairs" using primary key columns
  """
 program_sessions_chairs_by_pk(id: Int! ): program_sessions_chairs
  """An array relationship"""
 program_sessions_comments("""distinct select on columns"""
distinct_on: [program_sessions_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_comments_order_by! ], """filter the rows returned"""
where: program_sessions_comments_bool_exp): [program_sessions_comments! ]! 
  """An aggregate relationship"""
 program_sessions_comments_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_comments_order_by! ], """filter the rows returned"""
where: program_sessions_comments_bool_exp): program_sessions_comments_aggregate! 
  """
  fetch data from the table: "program_sessions_comments" using primary key columns
  """
 program_sessions_comments_by_pk(session_comment_id: Int! ): program_sessions_comments
  """An array relationship"""
 program_sessions_program_columns("""distinct select on columns"""
distinct_on: [program_sessions_program_columns_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_program_columns_order_by! ], """filter the rows returned"""
where: program_sessions_program_columns_bool_exp): [program_sessions_program_columns! ]! 
  """An aggregate relationship"""
 program_sessions_program_columns_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_program_columns_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_program_columns_order_by! ], """filter the rows returned"""
where: program_sessions_program_columns_bool_exp): program_sessions_program_columns_aggregate! 
  """An array relationship"""
 program_sessions_submissions("""distinct select on columns"""
distinct_on: [program_sessions_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_submissions_order_by! ], """filter the rows returned"""
where: program_sessions_submissions_bool_exp): [program_sessions_submissions! ]! 
  """An aggregate relationship"""
 program_sessions_submissions_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_submissions_order_by! ], """filter the rows returned"""
where: program_sessions_submissions_bool_exp): program_sessions_submissions_aggregate! 
  """An array relationship"""
 program_sessions_symposia("""distinct select on columns"""
distinct_on: [program_sessions_symposia_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_symposia_order_by! ], """filter the rows returned"""
where: program_sessions_symposia_bool_exp): [program_sessions_symposia! ]! 
  """An aggregate relationship"""
 program_sessions_symposia_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_symposia_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_symposia_order_by! ], """filter the rows returned"""
where: program_sessions_symposia_bool_exp): program_sessions_symposia_aggregate! 
  """
  fetch data from the table: "program_sponsors"
  """
 program_sponsors("""distinct select on columns"""
distinct_on: [program_sponsors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sponsors_order_by! ], """filter the rows returned"""
where: program_sponsors_bool_exp): [program_sponsors! ]! 
  """
  fetch aggregated fields from the table: "program_sponsors"
  """
 program_sponsors_aggregate("""distinct select on columns"""
distinct_on: [program_sponsors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sponsors_order_by! ], """filter the rows returned"""
where: program_sponsors_bool_exp): program_sponsors_aggregate! 
  """
  fetch data from the table: "program_sponsors" using primary key columns
  """
 program_sponsors_by_pk(id: Int! ): program_sponsors
  """An array relationship"""
 program_submissions_comments("""distinct select on columns"""
distinct_on: [program_submissions_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_submissions_comments_order_by! ], """filter the rows returned"""
where: program_submissions_comments_bool_exp): [program_submissions_comments! ]! 
  """An aggregate relationship"""
 program_submissions_comments_aggregate("""distinct select on columns"""
distinct_on: [program_submissions_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_submissions_comments_order_by! ], """filter the rows returned"""
where: program_submissions_comments_bool_exp): program_submissions_comments_aggregate! 
  """
  fetch data from the table: "program_submissions_comments" using primary key columns
  """
 program_submissions_comments_by_pk(id: Int! ): program_submissions_comments
  """An array relationship"""
 program_symposium_comments("""distinct select on columns"""
distinct_on: [program_symposium_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_symposium_comments_order_by! ], """filter the rows returned"""
where: program_symposium_comments_bool_exp): [program_symposium_comments! ]! 
  """An aggregate relationship"""
 program_symposium_comments_aggregate("""distinct select on columns"""
distinct_on: [program_symposium_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_symposium_comments_order_by! ], """filter the rows returned"""
where: program_symposium_comments_bool_exp): program_symposium_comments_aggregate! 
  """
  fetch data from the table: "program_symposium_comments" using primary key columns
  """
 program_symposium_comments_by_pk(program_symposium_comment_id: Int! ): program_symposium_comments
  """
  fetch data from the table: "program_tabs"
  """
 program_tabs("""distinct select on columns"""
distinct_on: [program_tabs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_tabs_order_by! ], """filter the rows returned"""
where: program_tabs_bool_exp): [program_tabs! ]! 
  """
  fetch aggregated fields from the table: "program_tabs"
  """
 program_tabs_aggregate("""distinct select on columns"""
distinct_on: [program_tabs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_tabs_order_by! ], """filter the rows returned"""
where: program_tabs_bool_exp): program_tabs_aggregate! 
  """
  fetch data from the table: "program_tracks"
  """
 program_tracks("""distinct select on columns"""
distinct_on: [program_tracks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_tracks_order_by! ], """filter the rows returned"""
where: program_tracks_bool_exp): [program_tracks! ]! 
  """
  fetch aggregated fields from the table: "program_tracks"
  """
 program_tracks_aggregate("""distinct select on columns"""
distinct_on: [program_tracks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_tracks_order_by! ], """filter the rows returned"""
where: program_tracks_bool_exp): program_tracks_aggregate! 
  """fetch data from the table: "program_tracks" using primary key columns"""
 program_tracks_by_pk(program_track_id: Int! ): program_tracks
  """
  fetch data from the table: "program_types"
  """
 program_types("""distinct select on columns"""
distinct_on: [program_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_types_order_by! ], """filter the rows returned"""
where: program_types_bool_exp): [program_types! ]! 
  """
  fetch aggregated fields from the table: "program_types"
  """
 program_types_aggregate("""distinct select on columns"""
distinct_on: [program_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_types_order_by! ], """filter the rows returned"""
where: program_types_bool_exp): program_types_aggregate! 
  """fetch data from the table: "program_types" using primary key columns"""
 program_types_by_pk(program_type_id: Int! ): program_types
  """
  fetch data from the table: "question_response_versions"
  """
 question_response_versions("""distinct select on columns"""
distinct_on: [question_response_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [question_response_versions_order_by! ], """filter the rows returned"""
where: question_response_versions_bool_exp): [question_response_versions! ]! 
  """
  fetch aggregated fields from the table: "question_response_versions"
  """
 question_response_versions_aggregate("""distinct select on columns"""
distinct_on: [question_response_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [question_response_versions_order_by! ], """filter the rows returned"""
where: question_response_versions_bool_exp): question_response_versions_aggregate! 
  """
  fetch data from the table: "question_response_versions" using primary key columns
  """
 question_response_versions_by_pk(id: bigint! ): question_response_versions
  """
  fetch data from the table: "question_responses"
  """
 question_responses("""distinct select on columns"""
distinct_on: [question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [question_responses_order_by! ], """filter the rows returned"""
where: question_responses_bool_exp): [question_responses! ]! 
  """
  fetch aggregated fields from the table: "question_responses"
  """
 question_responses_aggregate("""distinct select on columns"""
distinct_on: [question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [question_responses_order_by! ], """filter the rows returned"""
where: question_responses_bool_exp): question_responses_aggregate! 
  """
  fetch data from the table: "question_responses" using primary key columns
  """
 question_responses_by_pk(id: Int! ): question_responses
  """
  fetch data from the table: "question_responses_view"
  """
 question_responses_view("""distinct select on columns"""
distinct_on: [question_responses_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [question_responses_view_order_by! ], """filter the rows returned"""
where: question_responses_view_bool_exp): [question_responses_view! ]! 
  """
  fetch aggregated fields from the table: "question_responses_view"
  """
 question_responses_view_aggregate("""distinct select on columns"""
distinct_on: [question_responses_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [question_responses_view_order_by! ], """filter the rows returned"""
where: question_responses_view_bool_exp): question_responses_view_aggregate! 
  """An array relationship"""
 questions("""distinct select on columns"""
distinct_on: [questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_order_by! ], """filter the rows returned"""
where: questions_bool_exp): [questions! ]! 
  """An aggregate relationship"""
 questions_aggregate("""distinct select on columns"""
distinct_on: [questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_order_by! ], """filter the rows returned"""
where: questions_bool_exp): questions_aggregate! 
  """fetch data from the table: "questions" using primary key columns"""
 questions_by_pk(id: Int! ): questions
  """An array relationship"""
 questions_stage_options("""distinct select on columns"""
distinct_on: [questions_stage_options_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_stage_options_order_by! ], """filter the rows returned"""
where: questions_stage_options_bool_exp): [questions_stage_options! ]! 
  """An aggregate relationship"""
 questions_stage_options_aggregate("""distinct select on columns"""
distinct_on: [questions_stage_options_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_stage_options_order_by! ], """filter the rows returned"""
where: questions_stage_options_bool_exp): questions_stage_options_aggregate! 
  """
  fetch data from the table: "questions_stage_options" using primary key columns
  """
 questions_stage_options_by_pk(id: Int! ): questions_stage_options
  """
  fetch data from the table: "questions_stage_options_view"
  """
 questions_stage_options_view("""distinct select on columns"""
distinct_on: [questions_stage_options_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_stage_options_view_order_by! ], """filter the rows returned"""
where: questions_stage_options_view_bool_exp): [questions_stage_options_view! ]! 
  """
  fetch aggregated fields from the table: "questions_stage_options_view"
  """
 questions_stage_options_view_aggregate("""distinct select on columns"""
distinct_on: [questions_stage_options_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_stage_options_view_order_by! ], """filter the rows returned"""
where: questions_stage_options_view_bool_exp): questions_stage_options_view_aggregate! 
  """
  fetch data from the table: "questions_view"
  """
 questions_view("""distinct select on columns"""
distinct_on: [questions_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_view_order_by! ], """filter the rows returned"""
where: questions_view_bool_exp): [questions_view! ]! 
  """
  fetch aggregated fields from the table: "questions_view"
  """
 questions_view_aggregate("""distinct select on columns"""
distinct_on: [questions_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_view_order_by! ], """filter the rows returned"""
where: questions_view_bool_exp): questions_view_aggregate! 
  """
  fetch data from the table: "ratings"
  """
 ratings("""distinct select on columns"""
distinct_on: [ratings_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ratings_order_by! ], """filter the rows returned"""
where: ratings_bool_exp): [ratings! ]! 
  """
  fetch aggregated fields from the table: "ratings"
  """
 ratings_aggregate("""distinct select on columns"""
distinct_on: [ratings_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ratings_order_by! ], """filter the rows returned"""
where: ratings_bool_exp): ratings_aggregate! 
  """fetch data from the table: "ratings" using primary key columns"""
 ratings_by_pk(id: Int! ): ratings
  """
  fetch data from the table: "read_by_user_program_comments"
  """
 read_by_user_program_comments("""distinct select on columns"""
distinct_on: [read_by_user_program_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [read_by_user_program_comments_order_by! ], """filter the rows returned"""
where: read_by_user_program_comments_bool_exp): [read_by_user_program_comments! ]! 
  """
  fetch aggregated fields from the table: "read_by_user_program_comments"
  """
 read_by_user_program_comments_aggregate("""distinct select on columns"""
distinct_on: [read_by_user_program_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [read_by_user_program_comments_order_by! ], """filter the rows returned"""
where: read_by_user_program_comments_bool_exp): read_by_user_program_comments_aggregate! 
  """
  fetch data from the table: "read_by_user_program_comments" using primary key columns
  """
 read_by_user_program_comments_by_pk(id: Int! ): read_by_user_program_comments
  """
  fetch data from the table: "revenues"
  """
 revenues("""distinct select on columns"""
distinct_on: [revenues_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [revenues_order_by! ], """filter the rows returned"""
where: revenues_bool_exp): [revenues! ]! 
  """
  fetch aggregated fields from the table: "revenues"
  """
 revenues_aggregate("""distinct select on columns"""
distinct_on: [revenues_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [revenues_order_by! ], """filter the rows returned"""
where: revenues_bool_exp): revenues_aggregate! 
  """fetch data from the table: "revenues" using primary key columns"""
 revenues_by_pk(month: Int! , year: Int! ): revenues
  """An array relationship"""
 review_dates("""distinct select on columns"""
distinct_on: [review_dates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [review_dates_order_by! ], """filter the rows returned"""
where: review_dates_bool_exp): [review_dates! ]! 
  """An aggregate relationship"""
 review_dates_aggregate("""distinct select on columns"""
distinct_on: [review_dates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [review_dates_order_by! ], """filter the rows returned"""
where: review_dates_bool_exp): review_dates_aggregate! 
  """fetch data from the table: "review_dates" using primary key columns"""
 review_dates_by_pk(id: Int! ): review_dates
  """
  fetch data from the table: "reviewer_admin_notes"
  """
 reviewer_admin_notes("""distinct select on columns"""
distinct_on: [reviewer_admin_notes_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_admin_notes_order_by! ], """filter the rows returned"""
where: reviewer_admin_notes_bool_exp): [reviewer_admin_notes! ]! 
  """
  fetch aggregated fields from the table: "reviewer_admin_notes"
  """
 reviewer_admin_notes_aggregate("""distinct select on columns"""
distinct_on: [reviewer_admin_notes_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_admin_notes_order_by! ], """filter the rows returned"""
where: reviewer_admin_notes_bool_exp): reviewer_admin_notes_aggregate! 
  """An array relationship"""
 reviewer_categories("""distinct select on columns"""
distinct_on: [reviewer_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_categories_order_by! ], """filter the rows returned"""
where: reviewer_categories_bool_exp): [reviewer_categories! ]! 
  """An aggregate relationship"""
 reviewer_categories_aggregate("""distinct select on columns"""
distinct_on: [reviewer_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_categories_order_by! ], """filter the rows returned"""
where: reviewer_categories_bool_exp): reviewer_categories_aggregate! 
  """An array relationship"""
 reviewer_inline_comments("""distinct select on columns"""
distinct_on: [reviewer_inline_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_inline_comments_order_by! ], """filter the rows returned"""
where: reviewer_inline_comments_bool_exp): [reviewer_inline_comments! ]! 
  """An aggregate relationship"""
 reviewer_inline_comments_aggregate("""distinct select on columns"""
distinct_on: [reviewer_inline_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_inline_comments_order_by! ], """filter the rows returned"""
where: reviewer_inline_comments_bool_exp): reviewer_inline_comments_aggregate! 
  """
  fetch data from the table: "reviewer_inline_comments" using primary key columns
  """
 reviewer_inline_comments_by_pk(id: uuid! ): reviewer_inline_comments
  """An array relationship"""
 reviewer_question_responses("""distinct select on columns"""
distinct_on: [reviewer_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_question_responses_order_by! ], """filter the rows returned"""
where: reviewer_question_responses_bool_exp): [reviewer_question_responses! ]! 
  """An aggregate relationship"""
 reviewer_question_responses_aggregate("""distinct select on columns"""
distinct_on: [reviewer_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_question_responses_order_by! ], """filter the rows returned"""
where: reviewer_question_responses_bool_exp): reviewer_question_responses_aggregate! 
  """
  fetch data from the table: "reviewer_question_responses" using primary key columns
  """
 reviewer_question_responses_by_pk(id: Int! ): reviewer_question_responses
  """An array relationship"""
 reviewer_questions("""distinct select on columns"""
distinct_on: [reviewer_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_questions_order_by! ], """filter the rows returned"""
where: reviewer_questions_bool_exp): [reviewer_questions! ]! 
  """An aggregate relationship"""
 reviewer_questions_aggregate("""distinct select on columns"""
distinct_on: [reviewer_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_questions_order_by! ], """filter the rows returned"""
where: reviewer_questions_bool_exp): reviewer_questions_aggregate! 
  """
  fetch data from the table: "reviewer_questions" using primary key columns
  """
 reviewer_questions_by_pk(id: Int! ): reviewer_questions
  """An array relationship"""
 reviews("""distinct select on columns"""
distinct_on: [reviews_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviews_order_by! ], """filter the rows returned"""
where: reviews_bool_exp): [reviews! ]! 
  """An aggregate relationship"""
 reviews_aggregate("""distinct select on columns"""
distinct_on: [reviews_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviews_order_by! ], """filter the rows returned"""
where: reviews_bool_exp): reviews_aggregate! 
  """fetch data from the table: "reviews" using primary key columns"""
 reviews_by_pk(id: Int! ): reviews
  """
  fetch data from the table: "search_authors"
  """
 search_authors("""distinct select on columns"""
distinct_on: [search_authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_authors_order_by! ], """filter the rows returned"""
where: search_authors_bool_exp): [search_authors! ]! 
  """
  fetch aggregated fields from the table: "search_authors"
  """
 search_authors_aggregate("""distinct select on columns"""
distinct_on: [search_authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_authors_order_by! ], """filter the rows returned"""
where: search_authors_bool_exp): search_authors_aggregate! 
  """
  execute function "search_authors_fuzzy" which returns "search_authors"
  """
 search_authors_fuzzy("""
    input parameters for function "search_authors_fuzzy"
    """
args: search_authors_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_authors_order_by! ], """filter the rows returned"""
where: search_authors_bool_exp): [search_authors! ]! 
  """
  execute function "search_authors_fuzzy" and query aggregates on result of table type "search_authors"
  """
 search_authors_fuzzy_aggregate("""
    input parameters for function "search_authors_fuzzy_aggregate"
    """
args: search_authors_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_authors_order_by! ], """filter the rows returned"""
where: search_authors_bool_exp): search_authors_aggregate! 
  """
  fetch data from the table: "search_chairs"
  """
 search_chairs("""distinct select on columns"""
distinct_on: [search_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_chairs_order_by! ], """filter the rows returned"""
where: search_chairs_bool_exp): [search_chairs! ]! 
  """
  fetch aggregated fields from the table: "search_chairs"
  """
 search_chairs_aggregate("""distinct select on columns"""
distinct_on: [search_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_chairs_order_by! ], """filter the rows returned"""
where: search_chairs_bool_exp): search_chairs_aggregate! 
  """
  execute function "search_program_session_names_fuzzy" which returns "search_program_sessions"
  """
 search_program_session_names_fuzzy("""
    input parameters for function "search_program_session_names_fuzzy"
    """
args: search_program_session_names_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_program_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_program_sessions_order_by! ], """filter the rows returned"""
where: search_program_sessions_bool_exp): [search_program_sessions! ]! 
  """
  execute function "search_program_session_names_fuzzy" and query aggregates on result of table type "search_program_sessions"
  """
 search_program_session_names_fuzzy_aggregate("""
    input parameters for function "search_program_session_names_fuzzy_aggregate"
    """
args: search_program_session_names_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_program_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_program_sessions_order_by! ], """filter the rows returned"""
where: search_program_sessions_bool_exp): search_program_sessions_aggregate! 
  """
  fetch data from the table: "search_program_sessions"
  """
 search_program_sessions("""distinct select on columns"""
distinct_on: [search_program_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_program_sessions_order_by! ], """filter the rows returned"""
where: search_program_sessions_bool_exp): [search_program_sessions! ]! 
  """
  fetch aggregated fields from the table: "search_program_sessions"
  """
 search_program_sessions_aggregate("""distinct select on columns"""
distinct_on: [search_program_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_program_sessions_order_by! ], """filter the rows returned"""
where: search_program_sessions_bool_exp): search_program_sessions_aggregate! 
  """
  fetch data from the table: "search_question_responses"
  """
 search_question_responses("""distinct select on columns"""
distinct_on: [search_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_question_responses_order_by! ], """filter the rows returned"""
where: search_question_responses_bool_exp): [search_question_responses! ]! 
  """
  fetch aggregated fields from the table: "search_question_responses"
  """
 search_question_responses_aggregate("""distinct select on columns"""
distinct_on: [search_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_question_responses_order_by! ], """filter the rows returned"""
where: search_question_responses_bool_exp): search_question_responses_aggregate! 
  """
  execute function "search_session_chairs_fuzzy" which returns "search_chairs"
  """
 search_session_chairs_fuzzy("""
    input parameters for function "search_session_chairs_fuzzy"
    """
args: search_session_chairs_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_chairs_order_by! ], """filter the rows returned"""
where: search_chairs_bool_exp): [search_chairs! ]! 
  """
  execute function "search_session_chairs_fuzzy" and query aggregates on result of table type "search_chairs"
  """
 search_session_chairs_fuzzy_aggregate("""
    input parameters for function "search_session_chairs_fuzzy_aggregate"
    """
args: search_session_chairs_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_chairs_order_by! ], """filter the rows returned"""
where: search_chairs_bool_exp): search_chairs_aggregate! 
  """
  execute function "search_submission_titles_fuzzy" which returns "search_question_responses"
  """
 search_submission_titles_fuzzy("""
    input parameters for function "search_submission_titles_fuzzy"
    """
args: search_submission_titles_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_question_responses_order_by! ], """filter the rows returned"""
where: search_question_responses_bool_exp): [search_question_responses! ]! 
  """
  execute function "search_submission_titles_fuzzy" and query aggregates on result of table type "search_question_responses"
  """
 search_submission_titles_fuzzy_aggregate("""
    input parameters for function "search_submission_titles_fuzzy_aggregate"
    """
args: search_submission_titles_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_question_responses_order_by! ], """filter the rows returned"""
where: search_question_responses_bool_exp): search_question_responses_aggregate! 
  """
  fetch data from the table: "search_symposium_people"
  """
 search_symposium_people("""distinct select on columns"""
distinct_on: [search_symposium_people_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_symposium_people_order_by! ], """filter the rows returned"""
where: search_symposium_people_bool_exp): [search_symposium_people! ]! 
  """
  fetch aggregated fields from the table: "search_symposium_people"
  """
 search_symposium_people_aggregate("""distinct select on columns"""
distinct_on: [search_symposium_people_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_symposium_people_order_by! ], """filter the rows returned"""
where: search_symposium_people_bool_exp): search_symposium_people_aggregate! 
  """
  execute function "search_symposium_people_fuzzy" which returns "search_symposium_people"
  """
 search_symposium_people_fuzzy("""
    input parameters for function "search_symposium_people_fuzzy"
    """
args: search_symposium_people_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_symposium_people_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_symposium_people_order_by! ], """filter the rows returned"""
where: search_symposium_people_bool_exp): [search_symposium_people! ]! 
  """
  execute function "search_symposium_people_fuzzy" and query aggregates on result of table type "search_symposium_people"
  """
 search_symposium_people_fuzzy_aggregate("""
    input parameters for function "search_symposium_people_fuzzy_aggregate"
    """
args: search_symposium_people_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_symposium_people_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_symposium_people_order_by! ], """filter the rows returned"""
where: search_symposium_people_bool_exp): search_symposium_people_aggregate! 
  """
  fetch data from the table: "search_symposium_people_view"
  """
 search_symposium_people_view("""distinct select on columns"""
distinct_on: [search_symposium_people_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_symposium_people_view_order_by! ], """filter the rows returned"""
where: search_symposium_people_view_bool_exp): [search_symposium_people_view! ]! 
  """
  fetch aggregated fields from the table: "search_symposium_people_view"
  """
 search_symposium_people_view_aggregate("""distinct select on columns"""
distinct_on: [search_symposium_people_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_symposium_people_view_order_by! ], """filter the rows returned"""
where: search_symposium_people_view_bool_exp): search_symposium_people_view_aggregate! 
  """
  fetch data from the table: "search_symposium_question_responses"
  """
 search_symposium_question_responses("""distinct select on columns"""
distinct_on: [search_symposium_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_symposium_question_responses_order_by! ], """filter the rows returned"""
where: search_symposium_question_responses_bool_exp): [search_symposium_question_responses! ]! 
  """
  fetch aggregated fields from the table: "search_symposium_question_responses"
  """
 search_symposium_question_responses_aggregate("""distinct select on columns"""
distinct_on: [search_symposium_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_symposium_question_responses_order_by! ], """filter the rows returned"""
where: search_symposium_question_responses_bool_exp): search_symposium_question_responses_aggregate! 
  """
  execute function "search_symposium_titles_fuzzy" which returns "search_symposium_question_responses"
  """
 search_symposium_titles_fuzzy("""
    input parameters for function "search_symposium_titles_fuzzy"
    """
args: search_symposium_titles_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_symposium_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_symposium_question_responses_order_by! ], """filter the rows returned"""
where: search_symposium_question_responses_bool_exp): [search_symposium_question_responses! ]! 
  """
  execute function "search_symposium_titles_fuzzy" and query aggregates on result of table type "search_symposium_question_responses"
  """
 search_symposium_titles_fuzzy_aggregate("""
    input parameters for function "search_symposium_titles_fuzzy_aggregate"
    """
args: search_symposium_titles_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_symposium_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_symposium_question_responses_order_by! ], """filter the rows returned"""
where: search_symposium_question_responses_bool_exp): search_symposium_question_responses_aggregate! 
  """An array relationship"""
 session_chair_affiliations("""distinct select on columns"""
distinct_on: [session_chair_affiliations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chair_affiliations_order_by! ], """filter the rows returned"""
where: session_chair_affiliations_bool_exp): [session_chair_affiliations! ]! 
  """An aggregate relationship"""
 session_chair_affiliations_aggregate("""distinct select on columns"""
distinct_on: [session_chair_affiliations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chair_affiliations_order_by! ], """filter the rows returned"""
where: session_chair_affiliations_bool_exp): session_chair_affiliations_aggregate! 
  """
  fetch data from the table: "session_chair_affiliations" using primary key columns
  """
 session_chair_affiliations_by_pk(affiliation_id: Int! ): session_chair_affiliations
  """
  fetch data from the table: "session_chair_fields"
  """
 session_chair_fields("""distinct select on columns"""
distinct_on: [session_chair_fields_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chair_fields_order_by! ], """filter the rows returned"""
where: session_chair_fields_bool_exp): [session_chair_fields! ]! 
  """
  fetch aggregated fields from the table: "session_chair_fields"
  """
 session_chair_fields_aggregate("""distinct select on columns"""
distinct_on: [session_chair_fields_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chair_fields_order_by! ], """filter the rows returned"""
where: session_chair_fields_bool_exp): session_chair_fields_aggregate! 
  """
  fetch data from the table: "session_chair_fields" using primary key columns
  """
 session_chair_fields_by_pk(id: Int! ): session_chair_fields
  """An array relationship"""
 session_chair_responses("""distinct select on columns"""
distinct_on: [session_chair_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chair_responses_order_by! ], """filter the rows returned"""
where: session_chair_responses_bool_exp): [session_chair_responses! ]! 
  """An aggregate relationship"""
 session_chair_responses_aggregate("""distinct select on columns"""
distinct_on: [session_chair_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chair_responses_order_by! ], """filter the rows returned"""
where: session_chair_responses_bool_exp): session_chair_responses_aggregate! 
  """
  fetch data from the table: "session_chair_responses" using primary key columns
  """
 session_chair_responses_by_pk(id: Int! ): session_chair_responses
  """
  fetch data from the table: "session_chair_users"
  """
 session_chair_users("""distinct select on columns"""
distinct_on: [session_chair_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chair_users_order_by! ], """filter the rows returned"""
where: session_chair_users_bool_exp): [session_chair_users! ]! 
  """
  fetch aggregated fields from the table: "session_chair_users"
  """
 session_chair_users_aggregate("""distinct select on columns"""
distinct_on: [session_chair_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chair_users_order_by! ], """filter the rows returned"""
where: session_chair_users_bool_exp): session_chair_users_aggregate! 
  """An array relationship"""
 session_chairs("""distinct select on columns"""
distinct_on: [session_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chairs_order_by! ], """filter the rows returned"""
where: session_chairs_bool_exp): [session_chairs! ]! 
  """An aggregate relationship"""
 session_chairs_aggregate("""distinct select on columns"""
distinct_on: [session_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chairs_order_by! ], """filter the rows returned"""
where: session_chairs_bool_exp): session_chairs_aggregate! 
  """fetch data from the table: "session_chairs" using primary key columns"""
 session_chairs_by_pk(id: Int! ): session_chairs
  """
  fetch data from the table: "session_links"
  """
 session_links("""distinct select on columns"""
distinct_on: [session_links_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_links_order_by! ], """filter the rows returned"""
where: session_links_bool_exp): [session_links! ]! 
  """
  fetch aggregated fields from the table: "session_links"
  """
 session_links_aggregate("""distinct select on columns"""
distinct_on: [session_links_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_links_order_by! ], """filter the rows returned"""
where: session_links_bool_exp): session_links_aggregate! 
  """
  fetch data from the table: "sessions"
  """
 sessions("""distinct select on columns"""
distinct_on: [sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [sessions_order_by! ], """filter the rows returned"""
where: sessions_bool_exp): [sessions! ]! 
  """
  fetch aggregated fields from the table: "sessions"
  """
 sessions_aggregate("""distinct select on columns"""
distinct_on: [sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [sessions_order_by! ], """filter the rows returned"""
where: sessions_bool_exp): sessions_aggregate! 
  """
  fetch data from the table: "software_updates"
  """
 software_updates("""distinct select on columns"""
distinct_on: [software_updates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [software_updates_order_by! ], """filter the rows returned"""
where: software_updates_bool_exp): [software_updates! ]! 
  """
  fetch aggregated fields from the table: "software_updates"
  """
 software_updates_aggregate("""distinct select on columns"""
distinct_on: [software_updates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [software_updates_order_by! ], """filter the rows returned"""
where: software_updates_bool_exp): software_updates_aggregate! 
  """
  fetch data from the table: "software_updates" using primary key columns
  """
 software_updates_by_pk(software_update_id: Int! ): software_updates
  """An array relationship"""
 stages("""distinct select on columns"""
distinct_on: [stages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [stages_order_by! ], """filter the rows returned"""
where: stages_bool_exp): [stages! ]! 
  """An aggregate relationship"""
 stages_aggregate("""distinct select on columns"""
distinct_on: [stages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [stages_order_by! ], """filter the rows returned"""
where: stages_bool_exp): stages_aggregate! 
  """fetch data from the table: "stages" using primary key columns"""
 stages_by_pk(id: Int! ): stages
  """
  fetch data from the table: "stages_event_acceptance_types"
  """
 stages_event_acceptance_types("""distinct select on columns"""
distinct_on: [stages_event_acceptance_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [stages_event_acceptance_types_order_by! ], """filter the rows returned"""
where: stages_event_acceptance_types_bool_exp): [stages_event_acceptance_types! ]! 
  """
  fetch aggregated fields from the table: "stages_event_acceptance_types"
  """
 stages_event_acceptance_types_aggregate("""distinct select on columns"""
distinct_on: [stages_event_acceptance_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [stages_event_acceptance_types_order_by! ], """filter the rows returned"""
where: stages_event_acceptance_types_bool_exp): stages_event_acceptance_types_aggregate! 
  """
  fetch data from the table: "stages_event_acceptance_types" using primary key columns
  """
 stages_event_acceptance_types_by_pk(stages_event_acceptance_type_id: Int! ): stages_event_acceptance_types
  """
  fetch data from the table: "stages_view"
  """
 stages_view("""distinct select on columns"""
distinct_on: [stages_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [stages_view_order_by! ], """filter the rows returned"""
where: stages_view_bool_exp): [stages_view! ]! 
  """
  fetch aggregated fields from the table: "stages_view"
  """
 stages_view_aggregate("""distinct select on columns"""
distinct_on: [stages_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [stages_view_order_by! ], """filter the rows returned"""
where: stages_view_bool_exp): stages_view_aggregate! 
  """
  fetch data from the table: "submission_acceptance_types"
  """
 submission_acceptance_types("""distinct select on columns"""
distinct_on: [submission_acceptance_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_acceptance_types_order_by! ], """filter the rows returned"""
where: submission_acceptance_types_bool_exp): [submission_acceptance_types! ]! 
  """
  fetch aggregated fields from the table: "submission_acceptance_types"
  """
 submission_acceptance_types_aggregate("""distinct select on columns"""
distinct_on: [submission_acceptance_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_acceptance_types_order_by! ], """filter the rows returned"""
where: submission_acceptance_types_bool_exp): submission_acceptance_types_aggregate! 
  """
  fetch data from the table: "submission_categories"
  """
 submission_categories("""distinct select on columns"""
distinct_on: [submission_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_categories_order_by! ], """filter the rows returned"""
where: submission_categories_bool_exp): [submission_categories! ]! 
  """
  fetch aggregated fields from the table: "submission_categories"
  """
 submission_categories_aggregate("""distinct select on columns"""
distinct_on: [submission_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_categories_order_by! ], """filter the rows returned"""
where: submission_categories_bool_exp): submission_categories_aggregate! 
  """
  fetch data from the table: "submission_decisions"
  """
 submission_decisions("""distinct select on columns"""
distinct_on: [submission_decisions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_decisions_order_by! ], """filter the rows returned"""
where: submission_decisions_bool_exp): [submission_decisions! ]! 
  """
  fetch aggregated fields from the table: "submission_decisions"
  """
 submission_decisions_aggregate("""distinct select on columns"""
distinct_on: [submission_decisions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_decisions_order_by! ], """filter the rows returned"""
where: submission_decisions_bool_exp): submission_decisions_aggregate! 
  """
  fetch data from the table: "submission_ids_and_acceptance_types"
  """
 submission_ids_and_acceptance_types("""distinct select on columns"""
distinct_on: [submission_ids_and_acceptance_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_ids_and_acceptance_types_order_by! ], """filter the rows returned"""
where: submission_ids_and_acceptance_types_bool_exp): [submission_ids_and_acceptance_types! ]! 
  """
  fetch aggregated fields from the table: "submission_ids_and_acceptance_types"
  """
 submission_ids_and_acceptance_types_aggregate("""distinct select on columns"""
distinct_on: [submission_ids_and_acceptance_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_ids_and_acceptance_types_order_by! ], """filter the rows returned"""
where: submission_ids_and_acceptance_types_bool_exp): submission_ids_and_acceptance_types_aggregate! 
  """
  fetch data from the table: "submission_owner_log"
  """
 submission_owner_log("""distinct select on columns"""
distinct_on: [submission_owner_log_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_owner_log_order_by! ], """filter the rows returned"""
where: submission_owner_log_bool_exp): [submission_owner_log! ]! 
  """
  fetch aggregated fields from the table: "submission_owner_log"
  """
 submission_owner_log_aggregate("""distinct select on columns"""
distinct_on: [submission_owner_log_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_owner_log_order_by! ], """filter the rows returned"""
where: submission_owner_log_bool_exp): submission_owner_log_aggregate! 
  """
  fetch data from the table: "submission_owner_log" using primary key columns
  """
 submission_owner_log_by_pk(id: uuid! ): submission_owner_log
  """
  fetch data from the table: "submission_updates"
  """
 submission_updates("""distinct select on columns"""
distinct_on: [submission_updates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_updates_order_by! ], """filter the rows returned"""
where: submission_updates_bool_exp): [submission_updates! ]! 
  """
  fetch aggregated fields from the table: "submission_updates"
  """
 submission_updates_aggregate("""distinct select on columns"""
distinct_on: [submission_updates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_updates_order_by! ], """filter the rows returned"""
where: submission_updates_bool_exp): submission_updates_aggregate! 
  """An array relationship"""
 submissions("""distinct select on columns"""
distinct_on: [submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submissions_order_by! ], """filter the rows returned"""
where: submissions_bool_exp): [submissions! ]! 
  """An aggregate relationship"""
 submissions_aggregate("""distinct select on columns"""
distinct_on: [submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submissions_order_by! ], """filter the rows returned"""
where: submissions_bool_exp): submissions_aggregate! 
  """
  fetch data from the table: "submissions_with_archived" using primary key columns
  """
 submissions_by_pk("""A globally unique identifier for each submission"""
id: Int! ): submissions
  """An array relationship"""
 symposia("""distinct select on columns"""
distinct_on: [symposia_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposia_order_by! ], """filter the rows returned"""
where: symposia_bool_exp): [symposia! ]! 
  """
  fetch data from the table: "symposia_acceptance_types"
  """
 symposia_acceptance_types("""distinct select on columns"""
distinct_on: [symposia_acceptance_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposia_acceptance_types_order_by! ], """filter the rows returned"""
where: symposia_acceptance_types_bool_exp): [symposia_acceptance_types! ]! 
  """
  fetch aggregated fields from the table: "symposia_acceptance_types"
  """
 symposia_acceptance_types_aggregate("""distinct select on columns"""
distinct_on: [symposia_acceptance_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposia_acceptance_types_order_by! ], """filter the rows returned"""
where: symposia_acceptance_types_bool_exp): symposia_acceptance_types_aggregate! 
  """
  fetch data from the table: "symposia_acceptance_types" using primary key columns
  """
 symposia_acceptance_types_by_pk(symposium_acceptance_type_id: Int! ): symposia_acceptance_types
  """An aggregate relationship"""
 symposia_aggregate("""distinct select on columns"""
distinct_on: [symposia_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposia_order_by! ], """filter the rows returned"""
where: symposia_bool_exp): symposia_aggregate! 
  """
  fetch data from the table: "symposia_with_archived" using primary key columns
  """
 symposia_by_pk(id: Int! ): symposia
  """An array relationship"""
 symposium_affiliations("""distinct select on columns"""
distinct_on: [symposium_affiliations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_affiliations_order_by! ], """filter the rows returned"""
where: symposium_affiliations_bool_exp): [symposium_affiliations! ]! 
  """An aggregate relationship"""
 symposium_affiliations_aggregate("""distinct select on columns"""
distinct_on: [symposium_affiliations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_affiliations_order_by! ], """filter the rows returned"""
where: symposium_affiliations_bool_exp): symposium_affiliations_aggregate! 
  """
  fetch data from the table: "symposium_affiliations" using primary key columns
  """
 symposium_affiliations_by_pk(id: Int! ): symposium_affiliations
  """An array relationship"""
 symposium_person_field_responses("""distinct select on columns"""
distinct_on: [symposium_person_field_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_person_field_responses_order_by! ], """filter the rows returned"""
where: symposium_person_field_responses_bool_exp): [symposium_person_field_responses! ]! 
  """An aggregate relationship"""
 symposium_person_field_responses_aggregate("""distinct select on columns"""
distinct_on: [symposium_person_field_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_person_field_responses_order_by! ], """filter the rows returned"""
where: symposium_person_field_responses_bool_exp): symposium_person_field_responses_aggregate! 
  """
  fetch data from the table: "symposium_person_field_responses" using primary key columns
  """
 symposium_person_field_responses_by_pk(id: Int! ): symposium_person_field_responses
  """
  fetch data from the table: "symposium_person_fields"
  """
 symposium_person_fields("""distinct select on columns"""
distinct_on: [symposium_person_fields_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_person_fields_order_by! ], """filter the rows returned"""
where: symposium_person_fields_bool_exp): [symposium_person_fields! ]! 
  """
  fetch aggregated fields from the table: "symposium_person_fields"
  """
 symposium_person_fields_aggregate("""distinct select on columns"""
distinct_on: [symposium_person_fields_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_person_fields_order_by! ], """filter the rows returned"""
where: symposium_person_fields_bool_exp): symposium_person_fields_aggregate! 
  """
  fetch data from the table: "symposium_person_fields" using primary key columns
  """
 symposium_person_fields_by_pk(id: Int! ): symposium_person_fields
  """
  fetch data from the table: "symposium_person_users"
  """
 symposium_person_users("""distinct select on columns"""
distinct_on: [symposium_person_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_person_users_order_by! ], """filter the rows returned"""
where: symposium_person_users_bool_exp): [symposium_person_users! ]! 
  """
  fetch aggregated fields from the table: "symposium_person_users"
  """
 symposium_person_users_aggregate("""distinct select on columns"""
distinct_on: [symposium_person_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_person_users_order_by! ], """filter the rows returned"""
where: symposium_person_users_bool_exp): symposium_person_users_aggregate! 
  """An array relationship"""
 symposium_persons("""distinct select on columns"""
distinct_on: [symposium_persons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_persons_order_by! ], """filter the rows returned"""
where: symposium_persons_bool_exp): [symposium_persons! ]! 
  """An aggregate relationship"""
 symposium_persons_aggregate("""distinct select on columns"""
distinct_on: [symposium_persons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_persons_order_by! ], """filter the rows returned"""
where: symposium_persons_bool_exp): symposium_persons_aggregate! 
  """
  fetch data from the table: "symposium_persons" using primary key columns
  """
 symposium_persons_by_pk(id: Int! ): symposium_persons
  """An array relationship"""
 symposium_question_responses("""distinct select on columns"""
distinct_on: [symposium_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_question_responses_order_by! ], """filter the rows returned"""
where: symposium_question_responses_bool_exp): [symposium_question_responses! ]! 
  """An aggregate relationship"""
 symposium_question_responses_aggregate("""distinct select on columns"""
distinct_on: [symposium_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_question_responses_order_by! ], """filter the rows returned"""
where: symposium_question_responses_bool_exp): symposium_question_responses_aggregate! 
  """
  fetch data from the table: "symposium_question_responses" using primary key columns
  """
 symposium_question_responses_by_pk(id: Int! ): symposium_question_responses
  """
  fetch data from the table: "symposium_questions"
  """
 symposium_questions("""distinct select on columns"""
distinct_on: [symposium_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_questions_order_by! ], """filter the rows returned"""
where: symposium_questions_bool_exp): [symposium_questions! ]! 
  """
  fetch aggregated fields from the table: "symposium_questions"
  """
 symposium_questions_aggregate("""distinct select on columns"""
distinct_on: [symposium_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_questions_order_by! ], """filter the rows returned"""
where: symposium_questions_bool_exp): symposium_questions_aggregate! 
  """
  fetch data from the table: "symposium_questions" using primary key columns
  """
 symposium_questions_by_pk(symposium_question_id: Int! ): symposium_questions
  """
  fetch data from the table: "symposium_review_question_responses"
  """
 symposium_review_question_responses("""distinct select on columns"""
distinct_on: [symposium_review_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_review_question_responses_order_by! ], """filter the rows returned"""
where: symposium_review_question_responses_bool_exp): [symposium_review_question_responses! ]! 
  """
  fetch aggregated fields from the table: "symposium_review_question_responses"
  """
 symposium_review_question_responses_aggregate("""distinct select on columns"""
distinct_on: [symposium_review_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_review_question_responses_order_by! ], """filter the rows returned"""
where: symposium_review_question_responses_bool_exp): symposium_review_question_responses_aggregate! 
  """
  fetch data from the table: "symposium_review_question_responses" using primary key columns
  """
 symposium_review_question_responses_by_pk(symposium_review_question_response_id: Int! ): symposium_review_question_responses
  """
  fetch data from the table: "symposium_review_questions"
  """
 symposium_review_questions("""distinct select on columns"""
distinct_on: [symposium_review_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_review_questions_order_by! ], """filter the rows returned"""
where: symposium_review_questions_bool_exp): [symposium_review_questions! ]! 
  """
  fetch aggregated fields from the table: "symposium_review_questions"
  """
 symposium_review_questions_aggregate("""distinct select on columns"""
distinct_on: [symposium_review_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_review_questions_order_by! ], """filter the rows returned"""
where: symposium_review_questions_bool_exp): symposium_review_questions_aggregate! 
  """
  fetch data from the table: "symposium_review_questions" using primary key columns
  """
 symposium_review_questions_by_pk(symposium_review_question_id: Int! ): symposium_review_questions
  """
  fetch data from the table: "symposium_reviews"
  """
 symposium_reviews("""distinct select on columns"""
distinct_on: [symposium_reviews_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_reviews_order_by! ], """filter the rows returned"""
where: symposium_reviews_bool_exp): [symposium_reviews! ]! 
  """
  fetch aggregated fields from the table: "symposium_reviews"
  """
 symposium_reviews_aggregate("""distinct select on columns"""
distinct_on: [symposium_reviews_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_reviews_order_by! ], """filter the rows returned"""
where: symposium_reviews_bool_exp): symposium_reviews_aggregate! 
  """
  fetch data from the table: "symposium_reviews" using primary key columns
  """
 symposium_reviews_by_pk(symposium_review_id: Int! ): symposium_reviews
  """An array relationship"""
 symposium_submission_session_times("""distinct select on columns"""
distinct_on: [symposium_submission_session_times_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_submission_session_times_order_by! ], """filter the rows returned"""
where: symposium_submission_session_times_bool_exp): [symposium_submission_session_times! ]! 
  """An aggregate relationship"""
 symposium_submission_session_times_aggregate("""distinct select on columns"""
distinct_on: [symposium_submission_session_times_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_submission_session_times_order_by! ], """filter the rows returned"""
where: symposium_submission_session_times_bool_exp): symposium_submission_session_times_aggregate! 
  """
  fetch data from the table: "symposium_submission_session_times" using primary key columns
  """
 symposium_submission_session_times_by_pk(id: Int! ): symposium_submission_session_times
  """
  fetch data from the table: "table_email_attachments"
  """
 table_email_attachments("""distinct select on columns"""
distinct_on: [table_email_attachments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_attachments_order_by! ], """filter the rows returned"""
where: table_email_attachments_bool_exp): [table_email_attachments! ]! 
  """
  fetch aggregated fields from the table: "table_email_attachments"
  """
 table_email_attachments_aggregate("""distinct select on columns"""
distinct_on: [table_email_attachments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_attachments_order_by! ], """filter the rows returned"""
where: table_email_attachments_bool_exp): table_email_attachments_aggregate! 
  """
  fetch data from the table: "table_email_attachments" using primary key columns
  """
 table_email_attachments_by_pk(id: uuid! ): table_email_attachments
  """An array relationship"""
 table_email_filters("""distinct select on columns"""
distinct_on: [table_email_filters_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_filters_order_by! ], """filter the rows returned"""
where: table_email_filters_bool_exp): [table_email_filters! ]! 
  """An aggregate relationship"""
 table_email_filters_aggregate("""distinct select on columns"""
distinct_on: [table_email_filters_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_filters_order_by! ], """filter the rows returned"""
where: table_email_filters_bool_exp): table_email_filters_aggregate! 
  """
  fetch data from the table: "table_email_filters" using primary key columns
  """
 table_email_filters_by_pk(id: uuid! ): table_email_filters
  """
  fetch data from the table: "table_email_merge_field_defaults"
  """
 table_email_merge_field_defaults("""distinct select on columns"""
distinct_on: [table_email_merge_field_defaults_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_merge_field_defaults_order_by! ], """filter the rows returned"""
where: table_email_merge_field_defaults_bool_exp): [table_email_merge_field_defaults! ]! 
  """
  fetch aggregated fields from the table: "table_email_merge_field_defaults"
  """
 table_email_merge_field_defaults_aggregate("""distinct select on columns"""
distinct_on: [table_email_merge_field_defaults_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_merge_field_defaults_order_by! ], """filter the rows returned"""
where: table_email_merge_field_defaults_bool_exp): table_email_merge_field_defaults_aggregate! 
  """
  fetch data from the table: "table_email_merge_field_defaults" using primary key columns
  """
 table_email_merge_field_defaults_by_pk(id: uuid! ): table_email_merge_field_defaults
  """
  fetch data from the table: "table_email_recipient_groups"
  """
 table_email_recipient_groups("""distinct select on columns"""
distinct_on: [table_email_recipient_groups_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_recipient_groups_order_by! ], """filter the rows returned"""
where: table_email_recipient_groups_bool_exp): [table_email_recipient_groups! ]! 
  """
  fetch aggregated fields from the table: "table_email_recipient_groups"
  """
 table_email_recipient_groups_aggregate("""distinct select on columns"""
distinct_on: [table_email_recipient_groups_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_recipient_groups_order_by! ], """filter the rows returned"""
where: table_email_recipient_groups_bool_exp): table_email_recipient_groups_aggregate! 
  """
  fetch data from the table: "table_email_recipient_groups" using primary key columns
  """
 table_email_recipient_groups_by_pk(value: String! ): table_email_recipient_groups
  """
  fetch data from the table: "table_email_templates"
  """
 table_email_templates("""distinct select on columns"""
distinct_on: [table_email_templates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_templates_order_by! ], """filter the rows returned"""
where: table_email_templates_bool_exp): [table_email_templates! ]! 
  """
  fetch aggregated fields from the table: "table_email_templates"
  """
 table_email_templates_aggregate("""distinct select on columns"""
distinct_on: [table_email_templates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_templates_order_by! ], """filter the rows returned"""
where: table_email_templates_bool_exp): table_email_templates_aggregate! 
  """
  fetch data from the table: "table_email_templates" using primary key columns
  """
 table_email_templates_by_pk(id: uuid! ): table_email_templates
  """
  fetch data from the table: "title_responses"
  """
 title_responses("""distinct select on columns"""
distinct_on: [title_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [title_responses_order_by! ], """filter the rows returned"""
where: title_responses_bool_exp): [title_responses! ]! 
  """
  fetch aggregated fields from the table: "title_responses"
  """
 title_responses_aggregate("""distinct select on columns"""
distinct_on: [title_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [title_responses_order_by! ], """filter the rows returned"""
where: title_responses_bool_exp): title_responses_aggregate! 
  """
  fetch data from the table: "track_review_auto_assigns"
  """
 track_review_auto_assigns("""distinct select on columns"""
distinct_on: [track_review_auto_assigns_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [track_review_auto_assigns_order_by! ], """filter the rows returned"""
where: track_review_auto_assigns_bool_exp): [track_review_auto_assigns! ]! 
  """
  fetch aggregated fields from the table: "track_review_auto_assigns"
  """
 track_review_auto_assigns_aggregate("""distinct select on columns"""
distinct_on: [track_review_auto_assigns_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [track_review_auto_assigns_order_by! ], """filter the rows returned"""
where: track_review_auto_assigns_bool_exp): track_review_auto_assigns_aggregate! 
  """
  fetch data from the table: "track_review_auto_assigns" using primary key columns
  """
 track_review_auto_assigns_by_pk(id: uuid! ): track_review_auto_assigns
  """
  fetch data from the table: "user_asked_for_ratings"
  """
 user_asked_for_ratings("""distinct select on columns"""
distinct_on: [user_asked_for_ratings_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [user_asked_for_ratings_order_by! ], """filter the rows returned"""
where: user_asked_for_ratings_bool_exp): [user_asked_for_ratings! ]! 
  """
  fetch aggregated fields from the table: "user_asked_for_ratings"
  """
 user_asked_for_ratings_aggregate("""distinct select on columns"""
distinct_on: [user_asked_for_ratings_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [user_asked_for_ratings_order_by! ], """filter the rows returned"""
where: user_asked_for_ratings_bool_exp): user_asked_for_ratings_aggregate! 
  """
  fetch data from the table: "user_asked_for_ratings" using primary key columns
  """
 user_asked_for_ratings_by_pk(id: Int! ): user_asked_for_ratings
  """
  fetch data from the table: "user_emails"
  """
 user_emails("""distinct select on columns"""
distinct_on: [user_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [user_emails_order_by! ], """filter the rows returned"""
where: user_emails_bool_exp): [user_emails! ]! 
  """
  fetch aggregated fields from the table: "user_emails"
  """
 user_emails_aggregate("""distinct select on columns"""
distinct_on: [user_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [user_emails_order_by! ], """filter the rows returned"""
where: user_emails_bool_exp): user_emails_aggregate! 
  """
  fetch data from the table: "user_view"
  """
 user_view("""distinct select on columns"""
distinct_on: [user_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [user_view_order_by! ], """filter the rows returned"""
where: user_view_bool_exp): [user_view! ]! 
  """
  fetch aggregated fields from the table: "user_view"
  """
 user_view_aggregate("""distinct select on columns"""
distinct_on: [user_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [user_view_order_by! ], """filter the rows returned"""
where: user_view_bool_exp): user_view_aggregate! 
  """An array relationship"""
 users("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): [users! ]! 
  """An aggregate relationship"""
 users_aggregate("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): users_aggregate! 
  """fetch data from the table: "users" using primary key columns"""
 users_by_pk(id: Int! ): users
  """
  fetch data from the table: "verified_sender_emails"
  """
 verified_sender_emails("""distinct select on columns"""
distinct_on: [verified_sender_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [verified_sender_emails_order_by! ], """filter the rows returned"""
where: verified_sender_emails_bool_exp): [verified_sender_emails! ]! 
  """
  fetch aggregated fields from the table: "verified_sender_emails"
  """
 verified_sender_emails_aggregate("""distinct select on columns"""
distinct_on: [verified_sender_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [verified_sender_emails_order_by! ], """filter the rows returned"""
where: verified_sender_emails_bool_exp): verified_sender_emails_aggregate! 
  """
  fetch data from the table: "verified_sender_emails" using primary key columns
  """
 verified_sender_emails_by_pk(verified_sender_email_id: Int! ): verified_sender_emails
  """
  fetch data from the table: "virtual_conference_announcement_button_clicks"
  """
 virtual_conference_announcement_button_clicks("""distinct select on columns"""
distinct_on: [virtual_conference_announcement_button_clicks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_announcement_button_clicks_order_by! ], """filter the rows returned"""
where: virtual_conference_announcement_button_clicks_bool_exp): [virtual_conference_announcement_button_clicks! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_announcement_button_clicks"
  """
 virtual_conference_announcement_button_clicks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_announcement_button_clicks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_announcement_button_clicks_order_by! ], """filter the rows returned"""
where: virtual_conference_announcement_button_clicks_bool_exp): virtual_conference_announcement_button_clicks_aggregate! 
  """
  fetch data from the table: "virtual_conference_announcement_button_clicks" using primary key columns
  """
 virtual_conference_announcement_button_clicks_by_pk(id: uuid! ): virtual_conference_announcement_button_clicks
  """
  fetch data from the table: "virtual_conference_announcement_dismissals"
  """
 virtual_conference_announcement_dismissals("""distinct select on columns"""
distinct_on: [virtual_conference_announcement_dismissals_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_announcement_dismissals_order_by! ], """filter the rows returned"""
where: virtual_conference_announcement_dismissals_bool_exp): [virtual_conference_announcement_dismissals! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_announcement_dismissals"
  """
 virtual_conference_announcement_dismissals_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_announcement_dismissals_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_announcement_dismissals_order_by! ], """filter the rows returned"""
where: virtual_conference_announcement_dismissals_bool_exp): virtual_conference_announcement_dismissals_aggregate! 
  """
  fetch data from the table: "virtual_conference_announcement_dismissals" using primary key columns
  """
 virtual_conference_announcement_dismissals_by_pk(id: uuid! ): virtual_conference_announcement_dismissals
  """
  fetch data from the table: "virtual_conference_announcement_views"
  """
 virtual_conference_announcement_views("""distinct select on columns"""
distinct_on: [virtual_conference_announcement_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_announcement_views_order_by! ], """filter the rows returned"""
where: virtual_conference_announcement_views_bool_exp): [virtual_conference_announcement_views! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_announcement_views"
  """
 virtual_conference_announcement_views_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_announcement_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_announcement_views_order_by! ], """filter the rows returned"""
where: virtual_conference_announcement_views_bool_exp): virtual_conference_announcement_views_aggregate! 
  """
  fetch data from the table: "virtual_conference_announcement_views" using primary key columns
  """
 virtual_conference_announcement_views_by_pk(id: uuid! ): virtual_conference_announcement_views
  """
  fetch data from the table: "virtual_conference_announcements"
  """
 virtual_conference_announcements("""distinct select on columns"""
distinct_on: [virtual_conference_announcements_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_announcements_order_by! ], """filter the rows returned"""
where: virtual_conference_announcements_bool_exp): [virtual_conference_announcements! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_announcements"
  """
 virtual_conference_announcements_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_announcements_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_announcements_order_by! ], """filter the rows returned"""
where: virtual_conference_announcements_bool_exp): virtual_conference_announcements_aggregate! 
  """
  fetch data from the table: "virtual_conference_announcements" using primary key columns
  """
 virtual_conference_announcements_by_pk(id: uuid! ): virtual_conference_announcements
  """
  fetch data from the table: "virtual_conference_average_session_view_count"
  """
 virtual_conference_average_session_view_count("""distinct select on columns"""
distinct_on: [virtual_conference_average_session_view_count_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_average_session_view_count_order_by! ], """filter the rows returned"""
where: virtual_conference_average_session_view_count_bool_exp): [virtual_conference_average_session_view_count! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_average_session_view_count"
  """
 virtual_conference_average_session_view_count_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_average_session_view_count_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_average_session_view_count_order_by! ], """filter the rows returned"""
where: virtual_conference_average_session_view_count_bool_exp): virtual_conference_average_session_view_count_aggregate! 
  """
  fetch data from the table: "virtual_conference_chat_group_invitations"
  """
 virtual_conference_chat_group_invitations("""distinct select on columns"""
distinct_on: [virtual_conference_chat_group_invitations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_group_invitations_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_group_invitations_bool_exp): [virtual_conference_chat_group_invitations! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_chat_group_invitations"
  """
 virtual_conference_chat_group_invitations_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_chat_group_invitations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_group_invitations_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_group_invitations_bool_exp): virtual_conference_chat_group_invitations_aggregate! 
  """
  fetch data from the table: "virtual_conference_chat_group_invitations" using primary key columns
  """
 virtual_conference_chat_group_invitations_by_pk(id: Int! ): virtual_conference_chat_group_invitations
  """
  fetch data from the table: "virtual_conference_chat_group_reports"
  """
 virtual_conference_chat_group_reports("""distinct select on columns"""
distinct_on: [virtual_conference_chat_group_reports_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_group_reports_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_group_reports_bool_exp): [virtual_conference_chat_group_reports! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_chat_group_reports"
  """
 virtual_conference_chat_group_reports_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_chat_group_reports_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_group_reports_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_group_reports_bool_exp): virtual_conference_chat_group_reports_aggregate! 
  """
  fetch data from the table: "virtual_conference_chat_group_reports" using primary key columns
  """
 virtual_conference_chat_group_reports_by_pk(id: Int! ): virtual_conference_chat_group_reports
  """
  fetch data from the table: "virtual_conference_chat_group_reports_read_by"
  """
 virtual_conference_chat_group_reports_read_by("""distinct select on columns"""
distinct_on: [virtual_conference_chat_group_reports_read_by_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_group_reports_read_by_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_group_reports_read_by_bool_exp): [virtual_conference_chat_group_reports_read_by! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_chat_group_reports_read_by"
  """
 virtual_conference_chat_group_reports_read_by_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_chat_group_reports_read_by_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_group_reports_read_by_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_group_reports_read_by_bool_exp): virtual_conference_chat_group_reports_read_by_aggregate! 
  """
  fetch data from the table: "virtual_conference_chat_group_reports_read_by" using primary key columns
  """
 virtual_conference_chat_group_reports_read_by_by_pk(id: Int! ): virtual_conference_chat_group_reports_read_by
  """
  fetch data from the table: "virtual_conference_chat_groups"
  """
 virtual_conference_chat_groups("""distinct select on columns"""
distinct_on: [virtual_conference_chat_groups_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_groups_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_groups_bool_exp): [virtual_conference_chat_groups! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_chat_groups"
  """
 virtual_conference_chat_groups_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_chat_groups_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_groups_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_groups_bool_exp): virtual_conference_chat_groups_aggregate! 
  """
  fetch data from the table: "virtual_conference_chat_groups" using primary key columns
  """
 virtual_conference_chat_groups_by_pk(id: uuid! ): virtual_conference_chat_groups
  """
  fetch data from the table: "virtual_conference_cron_job_last_rans"
  """
 virtual_conference_cron_job_last_rans("""distinct select on columns"""
distinct_on: [virtual_conference_cron_job_last_rans_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_cron_job_last_rans_order_by! ], """filter the rows returned"""
where: virtual_conference_cron_job_last_rans_bool_exp): [virtual_conference_cron_job_last_rans! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_cron_job_last_rans"
  """
 virtual_conference_cron_job_last_rans_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_cron_job_last_rans_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_cron_job_last_rans_order_by! ], """filter the rows returned"""
where: virtual_conference_cron_job_last_rans_bool_exp): virtual_conference_cron_job_last_rans_aggregate! 
  """
  fetch data from the table: "virtual_conference_cron_job_last_rans" using primary key columns
  """
 virtual_conference_cron_job_last_rans_by_pk(id: Int! ): virtual_conference_cron_job_last_rans
  """
  fetch data from the table: "virtual_conference_direct_chat_blocks"
  """
 virtual_conference_direct_chat_blocks("""distinct select on columns"""
distinct_on: [virtual_conference_direct_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_chat_blocks_bool_exp): [virtual_conference_direct_chat_blocks! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_direct_chat_blocks"
  """
 virtual_conference_direct_chat_blocks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_direct_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_chat_blocks_bool_exp): virtual_conference_direct_chat_blocks_aggregate! 
  """
  fetch data from the table: "virtual_conference_direct_chat_blocks" using primary key columns
  """
 virtual_conference_direct_chat_blocks_by_pk(id: Int! ): virtual_conference_direct_chat_blocks
  """
  fetch data from the table: "virtual_conference_direct_messages"
  """
 virtual_conference_direct_messages("""distinct select on columns"""
distinct_on: [virtual_conference_direct_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_messages_bool_exp): [virtual_conference_direct_messages! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_direct_messages"
  """
 virtual_conference_direct_messages_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_direct_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_messages_bool_exp): virtual_conference_direct_messages_aggregate! 
  """
  fetch data from the table: "virtual_conference_direct_messages" using primary key columns
  """
 virtual_conference_direct_messages_by_pk(id: Int! ): virtual_conference_direct_messages
  """
  fetch data from the table: "virtual_conference_direct_video_calls"
  """
 virtual_conference_direct_video_calls("""distinct select on columns"""
distinct_on: [virtual_conference_direct_video_calls_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_video_calls_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_video_calls_bool_exp): [virtual_conference_direct_video_calls! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_direct_video_calls"
  """
 virtual_conference_direct_video_calls_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_direct_video_calls_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_video_calls_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_video_calls_bool_exp): virtual_conference_direct_video_calls_aggregate! 
  """
  fetch data from the table: "virtual_conference_direct_video_calls" using primary key columns
  """
 virtual_conference_direct_video_calls_by_pk(id: Int! ): virtual_conference_direct_video_calls
  """
  fetch data from the table: "virtual_conference_email_notification_speeds"
  """
 virtual_conference_email_notification_speeds("""distinct select on columns"""
distinct_on: [virtual_conference_email_notification_speeds_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_email_notification_speeds_order_by! ], """filter the rows returned"""
where: virtual_conference_email_notification_speeds_bool_exp): [virtual_conference_email_notification_speeds! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_email_notification_speeds"
  """
 virtual_conference_email_notification_speeds_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_email_notification_speeds_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_email_notification_speeds_order_by! ], """filter the rows returned"""
where: virtual_conference_email_notification_speeds_bool_exp): virtual_conference_email_notification_speeds_aggregate! 
  """
  fetch data from the table: "virtual_conference_email_notification_speeds" using primary key columns
  """
 virtual_conference_email_notification_speeds_by_pk(value: String! ): virtual_conference_email_notification_speeds
  """
  fetch data from the table: "virtual_conference_event_chat_blocks"
  """
 virtual_conference_event_chat_blocks("""distinct select on columns"""
distinct_on: [virtual_conference_event_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_event_chat_blocks_bool_exp): [virtual_conference_event_chat_blocks! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_event_chat_blocks"
  """
 virtual_conference_event_chat_blocks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_event_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_event_chat_blocks_bool_exp): virtual_conference_event_chat_blocks_aggregate! 
  """
  fetch data from the table: "virtual_conference_event_chat_blocks" using primary key columns
  """
 virtual_conference_event_chat_blocks_by_pk(id: Int! ): virtual_conference_event_chat_blocks
  """
  fetch data from the table: "virtual_conference_event_interests"
  """
 virtual_conference_event_interests("""distinct select on columns"""
distinct_on: [virtual_conference_event_interests_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_interests_order_by! ], """filter the rows returned"""
where: virtual_conference_event_interests_bool_exp): [virtual_conference_event_interests! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_event_interests"
  """
 virtual_conference_event_interests_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_event_interests_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_interests_order_by! ], """filter the rows returned"""
where: virtual_conference_event_interests_bool_exp): virtual_conference_event_interests_aggregate! 
  """
  fetch data from the table: "virtual_conference_event_interests" using primary key columns
  """
 virtual_conference_event_interests_by_pk(id: Int! ): virtual_conference_event_interests
  """An array relationship"""
 virtual_conference_event_messages("""distinct select on columns"""
distinct_on: [virtual_conference_event_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_event_messages_bool_exp): [virtual_conference_event_messages! ]! 
  """An aggregate relationship"""
 virtual_conference_event_messages_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_event_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_event_messages_bool_exp): virtual_conference_event_messages_aggregate! 
  """
  fetch data from the table: "virtual_conference_event_messages" using primary key columns
  """
 virtual_conference_event_messages_by_pk(id: Int! ): virtual_conference_event_messages
  """
  fetch data from the table: "virtual_conference_event_messages_last_read"
  """
 virtual_conference_event_messages_last_read("""distinct select on columns"""
distinct_on: [virtual_conference_event_messages_last_read_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_messages_last_read_order_by! ], """filter the rows returned"""
where: virtual_conference_event_messages_last_read_bool_exp): [virtual_conference_event_messages_last_read! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_event_messages_last_read"
  """
 virtual_conference_event_messages_last_read_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_event_messages_last_read_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_messages_last_read_order_by! ], """filter the rows returned"""
where: virtual_conference_event_messages_last_read_bool_exp): virtual_conference_event_messages_last_read_aggregate! 
  """
  fetch data from the table: "virtual_conference_event_messages_last_read" using primary key columns
  """
 virtual_conference_event_messages_last_read_by_pk(id: Int! ): virtual_conference_event_messages_last_read
  """
  fetch data from the table: "virtual_conference_group_chat_message_reads"
  """
 virtual_conference_group_chat_message_reads("""distinct select on columns"""
distinct_on: [virtual_conference_group_chat_message_reads_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_chat_message_reads_order_by! ], """filter the rows returned"""
where: virtual_conference_group_chat_message_reads_bool_exp): [virtual_conference_group_chat_message_reads! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_group_chat_message_reads"
  """
 virtual_conference_group_chat_message_reads_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_group_chat_message_reads_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_chat_message_reads_order_by! ], """filter the rows returned"""
where: virtual_conference_group_chat_message_reads_bool_exp): virtual_conference_group_chat_message_reads_aggregate! 
  """
  fetch data from the table: "virtual_conference_group_chat_message_reads" using primary key columns
  """
 virtual_conference_group_chat_message_reads_by_pk(id: Int! ): virtual_conference_group_chat_message_reads
  """
  fetch data from the table: "virtual_conference_group_chat_messages"
  """
 virtual_conference_group_chat_messages("""distinct select on columns"""
distinct_on: [virtual_conference_group_chat_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_chat_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_group_chat_messages_bool_exp): [virtual_conference_group_chat_messages! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_group_chat_messages"
  """
 virtual_conference_group_chat_messages_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_group_chat_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_chat_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_group_chat_messages_bool_exp): virtual_conference_group_chat_messages_aggregate! 
  """
  fetch data from the table: "virtual_conference_group_chat_messages" using primary key columns
  """
 virtual_conference_group_chat_messages_by_pk(id: Int! ): virtual_conference_group_chat_messages
  """
  fetch data from the table: "virtual_conference_group_video_call_dismissals"
  """
 virtual_conference_group_video_call_dismissals("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_dismissals_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_dismissals_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_dismissals_bool_exp): [virtual_conference_group_video_call_dismissals! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_group_video_call_dismissals"
  """
 virtual_conference_group_video_call_dismissals_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_dismissals_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_dismissals_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_dismissals_bool_exp): virtual_conference_group_video_call_dismissals_aggregate! 
  """
  fetch data from the table: "virtual_conference_group_video_call_dismissals" using primary key columns
  """
 virtual_conference_group_video_call_dismissals_by_pk(id: Int! ): virtual_conference_group_video_call_dismissals
  """
  fetch data from the table: "virtual_conference_group_video_call_durations"
  """
 virtual_conference_group_video_call_durations("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_durations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_durations_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_durations_bool_exp): [virtual_conference_group_video_call_durations! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_group_video_call_durations"
  """
 virtual_conference_group_video_call_durations_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_durations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_durations_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_durations_bool_exp): virtual_conference_group_video_call_durations_aggregate! 
  """
  fetch data from the table: "virtual_conference_group_video_call_durations" using primary key columns
  """
 virtual_conference_group_video_call_durations_by_pk(id: uuid! ): virtual_conference_group_video_call_durations
  """
  fetch data from the table: "virtual_conference_group_video_call_joins"
  """
 virtual_conference_group_video_call_joins("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_joins_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_joins_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_joins_bool_exp): [virtual_conference_group_video_call_joins! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_group_video_call_joins"
  """
 virtual_conference_group_video_call_joins_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_joins_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_joins_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_joins_bool_exp): virtual_conference_group_video_call_joins_aggregate! 
  """
  fetch data from the table: "virtual_conference_group_video_call_joins" using primary key columns
  """
 virtual_conference_group_video_call_joins_by_pk(id: Int! ): virtual_conference_group_video_call_joins
  """
  fetch data from the table: "virtual_conference_group_video_call_notification_dismissals"
  """
 virtual_conference_group_video_call_notification_dismissals("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_notification_dismissals_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_notification_dismissals_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_notification_dismissals_bool_exp): [virtual_conference_group_video_call_notification_dismissals! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_group_video_call_notification_dismissals"
  """
 virtual_conference_group_video_call_notification_dismissals_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_notification_dismissals_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_notification_dismissals_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_notification_dismissals_bool_exp): virtual_conference_group_video_call_notification_dismissals_aggregate! 
  """
  fetch data from the table: "virtual_conference_group_video_call_notification_dismissals" using primary key columns
  """
 virtual_conference_group_video_call_notification_dismissals_by_pk(id: Int! ): virtual_conference_group_video_call_notification_dismissals
  """
  fetch data from the table: "virtual_conference_name_badge"
  """
 virtual_conference_name_badge("""distinct select on columns"""
distinct_on: [virtual_conference_name_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_name_badge_order_by! ], """filter the rows returned"""
where: virtual_conference_name_badge_bool_exp): [virtual_conference_name_badge! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_name_badge"
  """
 virtual_conference_name_badge_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_name_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_name_badge_order_by! ], """filter the rows returned"""
where: virtual_conference_name_badge_bool_exp): virtual_conference_name_badge_aggregate! 
  """
  fetch data from the table: "virtual_conference_name_badge" using primary key columns
  """
 virtual_conference_name_badge_by_pk(id: Int! ): virtual_conference_name_badge
  """
  fetch data from the table: "virtual_conference_notification_preferences"
  """
 virtual_conference_notification_preferences("""distinct select on columns"""
distinct_on: [virtual_conference_notification_preferences_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_notification_preferences_order_by! ], """filter the rows returned"""
where: virtual_conference_notification_preferences_bool_exp): [virtual_conference_notification_preferences! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_notification_preferences"
  """
 virtual_conference_notification_preferences_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_notification_preferences_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_notification_preferences_order_by! ], """filter the rows returned"""
where: virtual_conference_notification_preferences_bool_exp): virtual_conference_notification_preferences_aggregate! 
  """
  fetch data from the table: "virtual_conference_notification_preferences" using primary key columns
  """
 virtual_conference_notification_preferences_by_pk(id: Int! ): virtual_conference_notification_preferences
  """
  fetch data from the table: "virtual_conference_page_views"
  """
 virtual_conference_page_views("""distinct select on columns"""
distinct_on: [virtual_conference_page_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_page_views_order_by! ], """filter the rows returned"""
where: virtual_conference_page_views_bool_exp): [virtual_conference_page_views! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_page_views"
  """
 virtual_conference_page_views_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_page_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_page_views_order_by! ], """filter the rows returned"""
where: virtual_conference_page_views_bool_exp): virtual_conference_page_views_aggregate! 
  """
  fetch data from the table: "virtual_conference_page_views" using primary key columns
  """
 virtual_conference_page_views_by_pk(id: uuid! ): virtual_conference_page_views
  """
  fetch data from the table: "virtual_conference_poster_views"
  """
 virtual_conference_poster_views("""distinct select on columns"""
distinct_on: [virtual_conference_poster_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_poster_views_order_by! ], """filter the rows returned"""
where: virtual_conference_poster_views_bool_exp): [virtual_conference_poster_views! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_poster_views"
  """
 virtual_conference_poster_views_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_poster_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_poster_views_order_by! ], """filter the rows returned"""
where: virtual_conference_poster_views_bool_exp): virtual_conference_poster_views_aggregate! 
  """
  fetch data from the table: "virtual_conference_poster_views" using primary key columns
  """
 virtual_conference_poster_views_by_pk(id: Int! ): virtual_conference_poster_views
  """
  fetch data from the table: "virtual_conference_requests"
  """
 virtual_conference_requests("""distinct select on columns"""
distinct_on: [virtual_conference_requests_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_requests_order_by! ], """filter the rows returned"""
where: virtual_conference_requests_bool_exp): [virtual_conference_requests! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_requests"
  """
 virtual_conference_requests_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_requests_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_requests_order_by! ], """filter the rows returned"""
where: virtual_conference_requests_bool_exp): virtual_conference_requests_aggregate! 
  """
  fetch data from the table: "virtual_conference_requests" using primary key columns
  """
 virtual_conference_requests_by_pk(id: Int! ): virtual_conference_requests
  """An array relationship"""
 virtual_conference_saved_badges("""distinct select on columns"""
distinct_on: [virtual_conference_saved_badges_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_saved_badges_order_by! ], """filter the rows returned"""
where: virtual_conference_saved_badges_bool_exp): [virtual_conference_saved_badges! ]! 
  """An aggregate relationship"""
 virtual_conference_saved_badges_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_saved_badges_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_saved_badges_order_by! ], """filter the rows returned"""
where: virtual_conference_saved_badges_bool_exp): virtual_conference_saved_badges_aggregate! 
  """
  fetch data from the table: "virtual_conference_saved_badges" using primary key columns
  """
 virtual_conference_saved_badges_by_pk(id: Int! ): virtual_conference_saved_badges
  """
  fetch data from the table: "virtual_conference_session_bookmarks"
  """
 virtual_conference_session_bookmarks("""distinct select on columns"""
distinct_on: [virtual_conference_session_bookmarks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_session_bookmarks_order_by! ], """filter the rows returned"""
where: virtual_conference_session_bookmarks_bool_exp): [virtual_conference_session_bookmarks! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_session_bookmarks"
  """
 virtual_conference_session_bookmarks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_session_bookmarks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_session_bookmarks_order_by! ], """filter the rows returned"""
where: virtual_conference_session_bookmarks_bool_exp): virtual_conference_session_bookmarks_aggregate! 
  """
  fetch data from the table: "virtual_conference_session_bookmarks" using primary key columns
  """
 virtual_conference_session_bookmarks_by_pk(id: Int! ): virtual_conference_session_bookmarks
  """
  fetch data from the table: "virtual_conference_session_views"
  """
 virtual_conference_session_views("""distinct select on columns"""
distinct_on: [virtual_conference_session_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_session_views_order_by! ], """filter the rows returned"""
where: virtual_conference_session_views_bool_exp): [virtual_conference_session_views! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_session_views"
  """
 virtual_conference_session_views_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_session_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_session_views_order_by! ], """filter the rows returned"""
where: virtual_conference_session_views_bool_exp): virtual_conference_session_views_aggregate! 
  """
  fetch data from the table: "virtual_conference_session_views" using primary key columns
  """
 virtual_conference_session_views_by_pk(id: Int! ): virtual_conference_session_views
  """
  fetch data from the table: "virtual_conference_sessions"
  """
 virtual_conference_sessions("""distinct select on columns"""
distinct_on: [virtual_conference_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_sessions_order_by! ], """filter the rows returned"""
where: virtual_conference_sessions_bool_exp): [virtual_conference_sessions! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_sessions"
  """
 virtual_conference_sessions_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_sessions_order_by! ], """filter the rows returned"""
where: virtual_conference_sessions_bool_exp): virtual_conference_sessions_aggregate! 
  """
  fetch data from the table: "virtual_conference_sessions" using primary key columns
  """
 virtual_conference_sessions_by_pk(id: uuid! ): virtual_conference_sessions
  """
  fetch data from the table: "virtual_conference_submission_bookmarks"
  """
 virtual_conference_submission_bookmarks("""distinct select on columns"""
distinct_on: [virtual_conference_submission_bookmarks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_submission_bookmarks_order_by! ], """filter the rows returned"""
where: virtual_conference_submission_bookmarks_bool_exp): [virtual_conference_submission_bookmarks! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_submission_bookmarks"
  """
 virtual_conference_submission_bookmarks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_submission_bookmarks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_submission_bookmarks_order_by! ], """filter the rows returned"""
where: virtual_conference_submission_bookmarks_bool_exp): virtual_conference_submission_bookmarks_aggregate! 
  """
  fetch data from the table: "virtual_conference_submission_bookmarks" using primary key columns
  """
 virtual_conference_submission_bookmarks_by_pk(id: uuid! ): virtual_conference_submission_bookmarks
  """
  fetch data from the table: "virtual_conference_submission_views"
  """
 virtual_conference_submission_views("""distinct select on columns"""
distinct_on: [virtual_conference_submission_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_submission_views_order_by! ], """filter the rows returned"""
where: virtual_conference_submission_views_bool_exp): [virtual_conference_submission_views! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_submission_views"
  """
 virtual_conference_submission_views_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_submission_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_submission_views_order_by! ], """filter the rows returned"""
where: virtual_conference_submission_views_bool_exp): virtual_conference_submission_views_aggregate! 
  """
  fetch data from the table: "virtual_conference_submission_views" using primary key columns
  """
 virtual_conference_submission_views_by_pk(id: Int! ): virtual_conference_submission_views
  """
  fetch data from the table: "virtual_conference_symposium_views"
  """
 virtual_conference_symposium_views("""distinct select on columns"""
distinct_on: [virtual_conference_symposium_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_symposium_views_order_by! ], """filter the rows returned"""
where: virtual_conference_symposium_views_bool_exp): [virtual_conference_symposium_views! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_symposium_views"
  """
 virtual_conference_symposium_views_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_symposium_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_symposium_views_order_by! ], """filter the rows returned"""
where: virtual_conference_symposium_views_bool_exp): virtual_conference_symposium_views_aggregate! 
  """
  fetch data from the table: "virtual_conference_symposium_views" using primary key columns
  """
 virtual_conference_symposium_views_by_pk(id: Int! ): virtual_conference_symposium_views
  """
  fetch data from the table: "virtual_conference_top_submission_category_views"
  """
 virtual_conference_top_submission_category_views("""distinct select on columns"""
distinct_on: [virtual_conference_top_submission_category_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_top_submission_category_views_order_by! ], """filter the rows returned"""
where: virtual_conference_top_submission_category_views_bool_exp): [virtual_conference_top_submission_category_views! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_top_submission_category_views"
  """
 virtual_conference_top_submission_category_views_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_top_submission_category_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_top_submission_category_views_order_by! ], """filter the rows returned"""
where: virtual_conference_top_submission_category_views_bool_exp): virtual_conference_top_submission_category_views_aggregate! 
  """
  fetch data from the table: "virtual_conference_top_ten_sessions_by_bookmarks"
  """
 virtual_conference_top_ten_sessions_by_bookmarks("""distinct select on columns"""
distinct_on: [virtual_conference_top_ten_sessions_by_bookmarks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_top_ten_sessions_by_bookmarks_order_by! ], """filter the rows returned"""
where: virtual_conference_top_ten_sessions_by_bookmarks_bool_exp): [virtual_conference_top_ten_sessions_by_bookmarks! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_top_ten_sessions_by_bookmarks"
  """
 virtual_conference_top_ten_sessions_by_bookmarks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_top_ten_sessions_by_bookmarks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_top_ten_sessions_by_bookmarks_order_by! ], """filter the rows returned"""
where: virtual_conference_top_ten_sessions_by_bookmarks_bool_exp): virtual_conference_top_ten_sessions_by_bookmarks_aggregate! 
  """
  fetch data from the table: "virtual_conference_top_ten_sessions_by_views"
  """
 virtual_conference_top_ten_sessions_by_views("""distinct select on columns"""
distinct_on: [virtual_conference_top_ten_sessions_by_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_top_ten_sessions_by_views_order_by! ], """filter the rows returned"""
where: virtual_conference_top_ten_sessions_by_views_bool_exp): [virtual_conference_top_ten_sessions_by_views! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_top_ten_sessions_by_views"
  """
 virtual_conference_top_ten_sessions_by_views_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_top_ten_sessions_by_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_top_ten_sessions_by_views_order_by! ], """filter the rows returned"""
where: virtual_conference_top_ten_sessions_by_views_bool_exp): virtual_conference_top_ten_sessions_by_views_aggregate! 
  """
  fetch data from the table: "virtual_conference_top_ten_submissions"
  """
 virtual_conference_top_ten_submissions("""distinct select on columns"""
distinct_on: [virtual_conference_top_ten_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_top_ten_submissions_order_by! ], """filter the rows returned"""
where: virtual_conference_top_ten_submissions_bool_exp): [virtual_conference_top_ten_submissions! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_top_ten_submissions"
  """
 virtual_conference_top_ten_submissions_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_top_ten_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_top_ten_submissions_order_by! ], """filter the rows returned"""
where: virtual_conference_top_ten_submissions_bool_exp): virtual_conference_top_ten_submissions_aggregate! 
  """
  fetch data from the table: "virtual_conference_top_ten_submissions_by_bookmarks"
  """
 virtual_conference_top_ten_submissions_by_bookmarks("""distinct select on columns"""
distinct_on: [virtual_conference_top_ten_submissions_by_bookmarks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_top_ten_submissions_by_bookmarks_order_by! ], """filter the rows returned"""
where: virtual_conference_top_ten_submissions_by_bookmarks_bool_exp): [virtual_conference_top_ten_submissions_by_bookmarks! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_top_ten_submissions_by_bookmarks"
  """
 virtual_conference_top_ten_submissions_by_bookmarks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_top_ten_submissions_by_bookmarks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_top_ten_submissions_by_bookmarks_order_by! ], """filter the rows returned"""
where: virtual_conference_top_ten_submissions_by_bookmarks_bool_exp): virtual_conference_top_ten_submissions_by_bookmarks_aggregate! 
  """
  fetch data from the table: "virtual_conference_user_heartbeats"
  """
 virtual_conference_user_heartbeats("""distinct select on columns"""
distinct_on: [virtual_conference_user_heartbeats_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_heartbeats_order_by! ], """filter the rows returned"""
where: virtual_conference_user_heartbeats_bool_exp): [virtual_conference_user_heartbeats! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_user_heartbeats"
  """
 virtual_conference_user_heartbeats_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_user_heartbeats_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_heartbeats_order_by! ], """filter the rows returned"""
where: virtual_conference_user_heartbeats_bool_exp): virtual_conference_user_heartbeats_aggregate! 
  """
  fetch data from the table: "virtual_conference_user_heartbeats" using primary key columns
  """
 virtual_conference_user_heartbeats_by_pk(id: Int! ): virtual_conference_user_heartbeats
  """An array relationship"""
 virtual_conference_user_interests("""distinct select on columns"""
distinct_on: [virtual_conference_user_interests_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_interests_order_by! ], """filter the rows returned"""
where: virtual_conference_user_interests_bool_exp): [virtual_conference_user_interests! ]! 
  """An aggregate relationship"""
 virtual_conference_user_interests_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_user_interests_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_interests_order_by! ], """filter the rows returned"""
where: virtual_conference_user_interests_bool_exp): virtual_conference_user_interests_aggregate! 
  """
  fetch data from the table: "virtual_conference_user_interests" using primary key columns
  """
 virtual_conference_user_interests_by_pk(id: Int! ): virtual_conference_user_interests
  """
  fetch data from the table: "virtual_conference_user_notifications_last_emailed"
  """
 virtual_conference_user_notifications_last_emailed("""distinct select on columns"""
distinct_on: [virtual_conference_user_notifications_last_emailed_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_notifications_last_emailed_order_by! ], """filter the rows returned"""
where: virtual_conference_user_notifications_last_emailed_bool_exp): [virtual_conference_user_notifications_last_emailed! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_user_notifications_last_emailed"
  """
 virtual_conference_user_notifications_last_emailed_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_user_notifications_last_emailed_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_notifications_last_emailed_order_by! ], """filter the rows returned"""
where: virtual_conference_user_notifications_last_emailed_bool_exp): virtual_conference_user_notifications_last_emailed_aggregate! 
  """
  fetch data from the table: "virtual_conference_user_notifications_last_emailed" using primary key columns
  """
 virtual_conference_user_notifications_last_emailed_by_pk(id: Int! ): virtual_conference_user_notifications_last_emailed
  """
  fetch data from the table: "walkthrough_metrics"
  """
 walkthrough_metrics("""distinct select on columns"""
distinct_on: [walkthrough_metrics_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [walkthrough_metrics_order_by! ], """filter the rows returned"""
where: walkthrough_metrics_bool_exp): [walkthrough_metrics! ]! 
  """
  fetch aggregated fields from the table: "walkthrough_metrics"
  """
 walkthrough_metrics_aggregate("""distinct select on columns"""
distinct_on: [walkthrough_metrics_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [walkthrough_metrics_order_by! ], """filter the rows returned"""
where: walkthrough_metrics_bool_exp): walkthrough_metrics_aggregate! 
  """
  fetch data from the table: "walkthrough_metrics" using primary key columns
  """
 walkthrough_metrics_by_pk(id: Int! ): walkthrough_metrics
  """
  fetch data from the table: "zoom_users_cache"
  """
 zoom_users_cache("""distinct select on columns"""
distinct_on: [zoom_users_cache_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [zoom_users_cache_order_by! ], """filter the rows returned"""
where: zoom_users_cache_bool_exp): [zoom_users_cache! ]! 
  """
  fetch aggregated fields from the table: "zoom_users_cache"
  """
 zoom_users_cache_aggregate("""distinct select on columns"""
distinct_on: [zoom_users_cache_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [zoom_users_cache_order_by! ], """filter the rows returned"""
where: zoom_users_cache_bool_exp): zoom_users_cache_aggregate! 
  """
  fetch data from the table: "zoom_users_cache" using primary key columns
  """
 zoom_users_cache_by_pk(id: Int! ): zoom_users_cache
}

scalar question_data_types 

"""
Boolean expression to compare columns of type "question_data_types". All fields are combined with logical 'AND'.
"""
input question_data_types_comparison_exp {
  _eq: question_data_types
  _gt: question_data_types
  _gte: question_data_types
  _in: [question_data_types! ]
  _is_null: Boolean
  _lt: question_data_types
  _lte: question_data_types
  _neq: question_data_types
  _nin: [question_data_types! ]
}

"""
columns and relationships of "question_response_versions"
"""
type question_response_versions {
   created_at: timestamptz! 
   gives_permission_to_appear_in_programme: Boolean! 
   id: bigint! 
   poster_image: String
   poster_image_height: Int
  """An object relationship"""
 question: questions! 
   question_id: Int! 
  """An object relationship"""
 submission: submissions! 
   submission_id: Int! 
   value: String! 
   word_count: Int
}

"""
aggregated selection of "question_response_versions"
"""
type question_response_versions_aggregate {
   aggregate: question_response_versions_aggregate_fields
   nodes: [question_response_versions! ]! 
}

input question_response_versions_aggregate_bool_exp {
  bool_and: question_response_versions_aggregate_bool_exp_bool_and
  bool_or: question_response_versions_aggregate_bool_exp_bool_or
  count: question_response_versions_aggregate_bool_exp_count
}

input question_response_versions_aggregate_bool_exp_bool_and {
  arguments: question_response_versions_select_column_question_response_versions_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: question_response_versions_bool_exp
  predicate: Boolean_comparison_exp! 
}

input question_response_versions_aggregate_bool_exp_bool_or {
  arguments: question_response_versions_select_column_question_response_versions_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: question_response_versions_bool_exp
  predicate: Boolean_comparison_exp! 
}

input question_response_versions_aggregate_bool_exp_count {
  arguments: [question_response_versions_select_column! ]
  distinct: Boolean
  filter: question_response_versions_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "question_response_versions"
"""
type question_response_versions_aggregate_fields {
   avg: question_response_versions_avg_fields
   count(columns: [question_response_versions_select_column! ], distinct: Boolean): Int! 
   max: question_response_versions_max_fields
   min: question_response_versions_min_fields
   stddev: question_response_versions_stddev_fields
   stddev_pop: question_response_versions_stddev_pop_fields
   stddev_samp: question_response_versions_stddev_samp_fields
   sum: question_response_versions_sum_fields
   var_pop: question_response_versions_var_pop_fields
   var_samp: question_response_versions_var_samp_fields
   variance: question_response_versions_variance_fields
}

"""
order by aggregate values of table "question_response_versions"
"""
input question_response_versions_aggregate_order_by {
  avg: question_response_versions_avg_order_by
  count: order_by
  max: question_response_versions_max_order_by
  min: question_response_versions_min_order_by
  stddev: question_response_versions_stddev_order_by
  stddev_pop: question_response_versions_stddev_pop_order_by
  stddev_samp: question_response_versions_stddev_samp_order_by
  sum: question_response_versions_sum_order_by
  var_pop: question_response_versions_var_pop_order_by
  var_samp: question_response_versions_var_samp_order_by
  variance: question_response_versions_variance_order_by
}

"""
input type for inserting array relation for remote table "question_response_versions"
"""
input question_response_versions_arr_rel_insert_input {
  data: [question_response_versions_insert_input! ]! 
  """upsert condition"""
on_conflict: question_response_versions_on_conflict
}

"""aggregate avg on columns"""
type question_response_versions_avg_fields {
   id: Float
   poster_image_height: Float
   question_id: Float
   submission_id: Float
   word_count: Float
}

"""
order by avg() on columns of table "question_response_versions"
"""
input question_response_versions_avg_order_by {
  id: order_by
  poster_image_height: order_by
  question_id: order_by
  submission_id: order_by
  word_count: order_by
}

"""
Boolean expression to filter rows from the table "question_response_versions". All fields are combined with a logical 'AND'.
"""
input question_response_versions_bool_exp {
  _and: [question_response_versions_bool_exp! ]
  _not: question_response_versions_bool_exp
  _or: [question_response_versions_bool_exp! ]
  created_at: timestamptz_comparison_exp
  gives_permission_to_appear_in_programme: Boolean_comparison_exp
  id: bigint_comparison_exp
  poster_image: String_comparison_exp
  poster_image_height: Int_comparison_exp
  question: questions_bool_exp
  question_id: Int_comparison_exp
  submission: submissions_bool_exp
  submission_id: Int_comparison_exp
  value: String_comparison_exp
  word_count: Int_comparison_exp
}

"""
unique or primary key constraints on table "question_response_versions"
"""
enum question_response_versions_constraint {
  """
  unique or primary key constraint on columns "id"
  """
question_response_versions_pkey
}

"""
input type for incrementing numeric columns in table "question_response_versions"
"""
input question_response_versions_inc_input {
  id: bigint
  poster_image_height: Int
  question_id: Int
  submission_id: Int
  word_count: Int
}

"""
input type for inserting data into table "question_response_versions"
"""
input question_response_versions_insert_input {
  created_at: timestamptz! 
  gives_permission_to_appear_in_programme: Boolean! 
  id: bigint! 
  poster_image: String
  poster_image_height: Int
  question: questions_obj_rel_insert_input
  question_id: Int! 
  submission: submissions_obj_rel_insert_input
  submission_id: Int! 
  value: String! 
  word_count: Int
}

"""aggregate max on columns"""
type question_response_versions_max_fields {
   created_at: timestamptz
   id: bigint
   poster_image: String
   poster_image_height: Int
   question_id: Int
   submission_id: Int
   value: String
   word_count: Int
}

"""
order by max() on columns of table "question_response_versions"
"""
input question_response_versions_max_order_by {
  created_at: order_by
  id: order_by
  poster_image: order_by
  poster_image_height: order_by
  question_id: order_by
  submission_id: order_by
  value: order_by
  word_count: order_by
}

"""aggregate min on columns"""
type question_response_versions_min_fields {
   created_at: timestamptz
   id: bigint
   poster_image: String
   poster_image_height: Int
   question_id: Int
   submission_id: Int
   value: String
   word_count: Int
}

"""
order by min() on columns of table "question_response_versions"
"""
input question_response_versions_min_order_by {
  created_at: order_by
  id: order_by
  poster_image: order_by
  poster_image_height: order_by
  question_id: order_by
  submission_id: order_by
  value: order_by
  word_count: order_by
}

"""
response of any mutation on the table "question_response_versions"
"""
type question_response_versions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [question_response_versions! ]! 
}

"""
on_conflict condition type for table "question_response_versions"
"""
input question_response_versions_on_conflict {
  constraint: question_response_versions_constraint! 
  update_columns: [question_response_versions_update_column! ]! 
  where: question_response_versions_bool_exp
}

"""
Ordering options when selecting data from "question_response_versions".
"""
input question_response_versions_order_by {
  created_at: order_by
  gives_permission_to_appear_in_programme: order_by
  id: order_by
  poster_image: order_by
  poster_image_height: order_by
  question: questions_order_by
  question_id: order_by
  submission: submissions_order_by
  submission_id: order_by
  value: order_by
  word_count: order_by
}

"""primary key columns input for table: question_response_versions"""
input question_response_versions_pk_columns_input {
  id: bigint! 
}

"""
select columns of table "question_response_versions"
"""
enum question_response_versions_select_column {
  """column name"""
created_at
  """column name"""
gives_permission_to_appear_in_programme
  """column name"""
id
  """column name"""
poster_image
  """column name"""
poster_image_height
  """column name"""
question_id
  """column name"""
submission_id
  """column name"""
value
  """column name"""
word_count
}

"""
select "question_response_versions_aggregate_bool_exp_bool_and_arguments_columns" columns of table "question_response_versions"
"""
enum question_response_versions_select_column_question_response_versions_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
gives_permission_to_appear_in_programme
}

"""
select "question_response_versions_aggregate_bool_exp_bool_or_arguments_columns" columns of table "question_response_versions"
"""
enum question_response_versions_select_column_question_response_versions_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
gives_permission_to_appear_in_programme
}

"""
input type for updating data in table "question_response_versions"
"""
input question_response_versions_set_input {
  created_at: timestamptz
  gives_permission_to_appear_in_programme: Boolean
  id: bigint
  poster_image: String
  poster_image_height: Int
  question_id: Int
  submission_id: Int
  value: String
  word_count: Int
}

"""aggregate stddev on columns"""
type question_response_versions_stddev_fields {
   id: Float
   poster_image_height: Float
   question_id: Float
   submission_id: Float
   word_count: Float
}

"""
order by stddev() on columns of table "question_response_versions"
"""
input question_response_versions_stddev_order_by {
  id: order_by
  poster_image_height: order_by
  question_id: order_by
  submission_id: order_by
  word_count: order_by
}

"""aggregate stddev_pop on columns"""
type question_response_versions_stddev_pop_fields {
   id: Float
   poster_image_height: Float
   question_id: Float
   submission_id: Float
   word_count: Float
}

"""
order by stddev_pop() on columns of table "question_response_versions"
"""
input question_response_versions_stddev_pop_order_by {
  id: order_by
  poster_image_height: order_by
  question_id: order_by
  submission_id: order_by
  word_count: order_by
}

"""aggregate stddev_samp on columns"""
type question_response_versions_stddev_samp_fields {
   id: Float
   poster_image_height: Float
   question_id: Float
   submission_id: Float
   word_count: Float
}

"""
order by stddev_samp() on columns of table "question_response_versions"
"""
input question_response_versions_stddev_samp_order_by {
  id: order_by
  poster_image_height: order_by
  question_id: order_by
  submission_id: order_by
  word_count: order_by
}

"""
Streaming cursor of the table "question_response_versions"
"""
input question_response_versions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: question_response_versions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input question_response_versions_stream_cursor_value_input {
  created_at: timestamptz
  gives_permission_to_appear_in_programme: Boolean
  id: bigint
  poster_image: String
  poster_image_height: Int
  question_id: Int
  submission_id: Int
  value: String
  word_count: Int
}

"""aggregate sum on columns"""
type question_response_versions_sum_fields {
   id: bigint
   poster_image_height: Int
   question_id: Int
   submission_id: Int
   word_count: Int
}

"""
order by sum() on columns of table "question_response_versions"
"""
input question_response_versions_sum_order_by {
  id: order_by
  poster_image_height: order_by
  question_id: order_by
  submission_id: order_by
  word_count: order_by
}

"""
update columns of table "question_response_versions"
"""
enum question_response_versions_update_column {
  """column name"""
created_at
  """column name"""
gives_permission_to_appear_in_programme
  """column name"""
id
  """column name"""
poster_image
  """column name"""
poster_image_height
  """column name"""
question_id
  """column name"""
submission_id
  """column name"""
value
  """column name"""
word_count
}

input question_response_versions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: question_response_versions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: question_response_versions_set_input
  where: question_response_versions_bool_exp! 
}

"""aggregate var_pop on columns"""
type question_response_versions_var_pop_fields {
   id: Float
   poster_image_height: Float
   question_id: Float
   submission_id: Float
   word_count: Float
}

"""
order by var_pop() on columns of table "question_response_versions"
"""
input question_response_versions_var_pop_order_by {
  id: order_by
  poster_image_height: order_by
  question_id: order_by
  submission_id: order_by
  word_count: order_by
}

"""aggregate var_samp on columns"""
type question_response_versions_var_samp_fields {
   id: Float
   poster_image_height: Float
   question_id: Float
   submission_id: Float
   word_count: Float
}

"""
order by var_samp() on columns of table "question_response_versions"
"""
input question_response_versions_var_samp_order_by {
  id: order_by
  poster_image_height: order_by
  question_id: order_by
  submission_id: order_by
  word_count: order_by
}

"""aggregate variance on columns"""
type question_response_versions_variance_fields {
   id: Float
   poster_image_height: Float
   question_id: Float
   submission_id: Float
   word_count: Float
}

"""
order by variance() on columns of table "question_response_versions"
"""
input question_response_versions_variance_order_by {
  id: order_by
  poster_image_height: order_by
  question_id: order_by
  submission_id: order_by
  word_count: order_by
}

"""
columns and relationships of "question_responses"
"""
type question_responses {
   gives_permission_to_appear_in_programme: Boolean! 
   id: Int! 
   pdf: Boolean
   poster_image: String
   poster_image_height: Int
  """An object relationship"""
 question: questions! 
   question_id: Int! 
  """An object relationship"""
 question_view: questions_view
  """An object relationship"""
 submission: submissions! 
   submission_id: Int! 
   value: String! 
   without_html: String
   word_count: smallint
}

"""
aggregated selection of "question_responses"
"""
type question_responses_aggregate {
   aggregate: question_responses_aggregate_fields
   nodes: [question_responses! ]! 
}

input question_responses_aggregate_bool_exp {
  bool_and: question_responses_aggregate_bool_exp_bool_and
  bool_or: question_responses_aggregate_bool_exp_bool_or
  count: question_responses_aggregate_bool_exp_count
}

input question_responses_aggregate_bool_exp_bool_and {
  arguments: question_responses_select_column_question_responses_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: question_responses_bool_exp
  predicate: Boolean_comparison_exp! 
}

input question_responses_aggregate_bool_exp_bool_or {
  arguments: question_responses_select_column_question_responses_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: question_responses_bool_exp
  predicate: Boolean_comparison_exp! 
}

input question_responses_aggregate_bool_exp_count {
  arguments: [question_responses_select_column! ]
  distinct: Boolean
  filter: question_responses_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "question_responses"
"""
type question_responses_aggregate_fields {
   avg: question_responses_avg_fields
   count(columns: [question_responses_select_column! ], distinct: Boolean): Int! 
   max: question_responses_max_fields
   min: question_responses_min_fields
   stddev: question_responses_stddev_fields
   stddev_pop: question_responses_stddev_pop_fields
   stddev_samp: question_responses_stddev_samp_fields
   sum: question_responses_sum_fields
   var_pop: question_responses_var_pop_fields
   var_samp: question_responses_var_samp_fields
   variance: question_responses_variance_fields
}

"""
order by aggregate values of table "question_responses"
"""
input question_responses_aggregate_order_by {
  avg: question_responses_avg_order_by
  count: order_by
  max: question_responses_max_order_by
  min: question_responses_min_order_by
  stddev: question_responses_stddev_order_by
  stddev_pop: question_responses_stddev_pop_order_by
  stddev_samp: question_responses_stddev_samp_order_by
  sum: question_responses_sum_order_by
  var_pop: question_responses_var_pop_order_by
  var_samp: question_responses_var_samp_order_by
  variance: question_responses_variance_order_by
}

"""
input type for inserting array relation for remote table "question_responses"
"""
input question_responses_arr_rel_insert_input {
  data: [question_responses_insert_input! ]! 
  """upsert condition"""
on_conflict: question_responses_on_conflict
}

"""aggregate avg on columns"""
type question_responses_avg_fields {
   id: Float
   poster_image_height: Float
   question_id: Float
   submission_id: Float
   word_count: Float
}

"""
order by avg() on columns of table "question_responses"
"""
input question_responses_avg_order_by {
  id: order_by
  poster_image_height: order_by
  question_id: order_by
  submission_id: order_by
  word_count: order_by
}

"""
Boolean expression to filter rows from the table "question_responses". All fields are combined with a logical 'AND'.
"""
input question_responses_bool_exp {
  _and: [question_responses_bool_exp! ]
  _not: question_responses_bool_exp
  _or: [question_responses_bool_exp! ]
  gives_permission_to_appear_in_programme: Boolean_comparison_exp
  id: Int_comparison_exp
  pdf: Boolean_comparison_exp
  poster_image: String_comparison_exp
  poster_image_height: Int_comparison_exp
  question: questions_bool_exp
  question_id: Int_comparison_exp
  question_view: questions_view_bool_exp
  submission: submissions_bool_exp
  submission_id: Int_comparison_exp
  value: String_comparison_exp
  without_html: String_comparison_exp
  word_count: smallint_comparison_exp
}

"""
unique or primary key constraints on table "question_responses"
"""
enum question_responses_constraint {
  """
  unique or primary key constraint on columns "question_response_id"
  """
question_responses_pkey
  """
  unique or primary key constraint on columns "submission_id", "question_id"
  """
question_responses_question_id_submission_id_idx
}

"""
input type for incrementing numeric columns in table "question_responses"
"""
input question_responses_inc_input {
  id: Int
  poster_image_height: Int
  question_id: Int
  submission_id: Int
  word_count: smallint
}

"""
input type for inserting data into table "question_responses"
"""
input question_responses_insert_input {
  gives_permission_to_appear_in_programme: Boolean! 
  id: Int
  pdf: Boolean
  poster_image: String
  poster_image_height: Int
  question: questions_obj_rel_insert_input
  question_id: Int! 
  question_view: questions_view_obj_rel_insert_input
  submission: submissions_obj_rel_insert_input
  submission_id: Int! 
  value: String! 
  without_html: String
  word_count: smallint
}

"""aggregate max on columns"""
type question_responses_max_fields {
   id: Int
   poster_image: String
   poster_image_height: Int
   question_id: Int
   submission_id: Int
   value: String
   without_html: String
   word_count: smallint
}

"""
order by max() on columns of table "question_responses"
"""
input question_responses_max_order_by {
  id: order_by
  poster_image: order_by
  poster_image_height: order_by
  question_id: order_by
  submission_id: order_by
  value: order_by
  without_html: order_by
  word_count: order_by
}

"""aggregate min on columns"""
type question_responses_min_fields {
   id: Int
   poster_image: String
   poster_image_height: Int
   question_id: Int
   submission_id: Int
   value: String
   without_html: String
   word_count: smallint
}

"""
order by min() on columns of table "question_responses"
"""
input question_responses_min_order_by {
  id: order_by
  poster_image: order_by
  poster_image_height: order_by
  question_id: order_by
  submission_id: order_by
  value: order_by
  without_html: order_by
  word_count: order_by
}

"""
response of any mutation on the table "question_responses"
"""
type question_responses_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [question_responses! ]! 
}

"""
on_conflict condition type for table "question_responses"
"""
input question_responses_on_conflict {
  constraint: question_responses_constraint! 
  update_columns: [question_responses_update_column! ]! 
  where: question_responses_bool_exp
}

"""Ordering options when selecting data from "question_responses"."""
input question_responses_order_by {
  gives_permission_to_appear_in_programme: order_by
  id: order_by
  pdf: order_by
  poster_image: order_by
  poster_image_height: order_by
  question: questions_order_by
  question_id: order_by
  question_view: questions_view_order_by
  submission: submissions_order_by
  submission_id: order_by
  value: order_by
  without_html: order_by
  word_count: order_by
}

"""primary key columns input for table: question_responses"""
input question_responses_pk_columns_input {
  id: Int! 
}

"""
select columns of table "question_responses"
"""
enum question_responses_select_column {
  """column name"""
gives_permission_to_appear_in_programme
  """column name"""
id
  """column name"""
pdf
  """column name"""
poster_image
  """column name"""
poster_image_height
  """column name"""
question_id
  """column name"""
submission_id
  """column name"""
value
  """column name"""
without_html
  """column name"""
word_count
}

"""
select "question_responses_aggregate_bool_exp_bool_and_arguments_columns" columns of table "question_responses"
"""
enum question_responses_select_column_question_responses_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
gives_permission_to_appear_in_programme
  """column name"""
pdf
}

"""
select "question_responses_aggregate_bool_exp_bool_or_arguments_columns" columns of table "question_responses"
"""
enum question_responses_select_column_question_responses_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
gives_permission_to_appear_in_programme
  """column name"""
pdf
}

"""
input type for updating data in table "question_responses"
"""
input question_responses_set_input {
  gives_permission_to_appear_in_programme: Boolean
  id: Int
  pdf: Boolean
  poster_image: String
  poster_image_height: Int
  question_id: Int
  submission_id: Int
  value: String
  without_html: String
  word_count: smallint
}

"""aggregate stddev on columns"""
type question_responses_stddev_fields {
   id: Float
   poster_image_height: Float
   question_id: Float
   submission_id: Float
   word_count: Float
}

"""
order by stddev() on columns of table "question_responses"
"""
input question_responses_stddev_order_by {
  id: order_by
  poster_image_height: order_by
  question_id: order_by
  submission_id: order_by
  word_count: order_by
}

"""aggregate stddev_pop on columns"""
type question_responses_stddev_pop_fields {
   id: Float
   poster_image_height: Float
   question_id: Float
   submission_id: Float
   word_count: Float
}

"""
order by stddev_pop() on columns of table "question_responses"
"""
input question_responses_stddev_pop_order_by {
  id: order_by
  poster_image_height: order_by
  question_id: order_by
  submission_id: order_by
  word_count: order_by
}

"""aggregate stddev_samp on columns"""
type question_responses_stddev_samp_fields {
   id: Float
   poster_image_height: Float
   question_id: Float
   submission_id: Float
   word_count: Float
}

"""
order by stddev_samp() on columns of table "question_responses"
"""
input question_responses_stddev_samp_order_by {
  id: order_by
  poster_image_height: order_by
  question_id: order_by
  submission_id: order_by
  word_count: order_by
}

"""
Streaming cursor of the table "question_responses"
"""
input question_responses_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: question_responses_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input question_responses_stream_cursor_value_input {
  gives_permission_to_appear_in_programme: Boolean
  id: Int
  pdf: Boolean
  poster_image: String
  poster_image_height: Int
  question_id: Int
  submission_id: Int
  value: String
  without_html: String
  word_count: smallint
}

"""aggregate sum on columns"""
type question_responses_sum_fields {
   id: Int
   poster_image_height: Int
   question_id: Int
   submission_id: Int
   word_count: smallint
}

"""
order by sum() on columns of table "question_responses"
"""
input question_responses_sum_order_by {
  id: order_by
  poster_image_height: order_by
  question_id: order_by
  submission_id: order_by
  word_count: order_by
}

"""
update columns of table "question_responses"
"""
enum question_responses_update_column {
  """column name"""
gives_permission_to_appear_in_programme
  """column name"""
id
  """column name"""
pdf
  """column name"""
poster_image
  """column name"""
poster_image_height
  """column name"""
question_id
  """column name"""
submission_id
  """column name"""
value
  """column name"""
without_html
  """column name"""
word_count
}

input question_responses_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: question_responses_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: question_responses_set_input
  where: question_responses_bool_exp! 
}

"""aggregate var_pop on columns"""
type question_responses_var_pop_fields {
   id: Float
   poster_image_height: Float
   question_id: Float
   submission_id: Float
   word_count: Float
}

"""
order by var_pop() on columns of table "question_responses"
"""
input question_responses_var_pop_order_by {
  id: order_by
  poster_image_height: order_by
  question_id: order_by
  submission_id: order_by
  word_count: order_by
}

"""aggregate var_samp on columns"""
type question_responses_var_samp_fields {
   id: Float
   poster_image_height: Float
   question_id: Float
   submission_id: Float
   word_count: Float
}

"""
order by var_samp() on columns of table "question_responses"
"""
input question_responses_var_samp_order_by {
  id: order_by
  poster_image_height: order_by
  question_id: order_by
  submission_id: order_by
  word_count: order_by
}

"""aggregate variance on columns"""
type question_responses_variance_fields {
   id: Float
   poster_image_height: Float
   question_id: Float
   submission_id: Float
   word_count: Float
}

"""
order by variance() on columns of table "question_responses"
"""
input question_responses_variance_order_by {
  id: order_by
  poster_image_height: order_by
  question_id: order_by
  submission_id: order_by
  word_count: order_by
}

"""
columns and relationships of "question_responses_view"
"""
type question_responses_view {
   gives_permission_to_appear_in_programme: Boolean
   poster_image: String
   poster_image_height: Int
  """An object relationship"""
 question: questions_view
   question_id: Int
   question_response_id: Int
  """An object relationship"""
 submission: submissions
   submission_id: Int
   value: String
   word_count: smallint
}

"""
aggregated selection of "question_responses_view"
"""
type question_responses_view_aggregate {
   aggregate: question_responses_view_aggregate_fields
   nodes: [question_responses_view! ]! 
}

input question_responses_view_aggregate_bool_exp {
  bool_and: question_responses_view_aggregate_bool_exp_bool_and
  bool_or: question_responses_view_aggregate_bool_exp_bool_or
  count: question_responses_view_aggregate_bool_exp_count
}

input question_responses_view_aggregate_bool_exp_bool_and {
  arguments: question_responses_view_select_column_question_responses_view_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: question_responses_view_bool_exp
  predicate: Boolean_comparison_exp! 
}

input question_responses_view_aggregate_bool_exp_bool_or {
  arguments: question_responses_view_select_column_question_responses_view_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: question_responses_view_bool_exp
  predicate: Boolean_comparison_exp! 
}

input question_responses_view_aggregate_bool_exp_count {
  arguments: [question_responses_view_select_column! ]
  distinct: Boolean
  filter: question_responses_view_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "question_responses_view"
"""
type question_responses_view_aggregate_fields {
   avg: question_responses_view_avg_fields
   count(columns: [question_responses_view_select_column! ], distinct: Boolean): Int! 
   max: question_responses_view_max_fields
   min: question_responses_view_min_fields
   stddev: question_responses_view_stddev_fields
   stddev_pop: question_responses_view_stddev_pop_fields
   stddev_samp: question_responses_view_stddev_samp_fields
   sum: question_responses_view_sum_fields
   var_pop: question_responses_view_var_pop_fields
   var_samp: question_responses_view_var_samp_fields
   variance: question_responses_view_variance_fields
}

"""
order by aggregate values of table "question_responses_view"
"""
input question_responses_view_aggregate_order_by {
  avg: question_responses_view_avg_order_by
  count: order_by
  max: question_responses_view_max_order_by
  min: question_responses_view_min_order_by
  stddev: question_responses_view_stddev_order_by
  stddev_pop: question_responses_view_stddev_pop_order_by
  stddev_samp: question_responses_view_stddev_samp_order_by
  sum: question_responses_view_sum_order_by
  var_pop: question_responses_view_var_pop_order_by
  var_samp: question_responses_view_var_samp_order_by
  variance: question_responses_view_variance_order_by
}

"""
input type for inserting array relation for remote table "question_responses_view"
"""
input question_responses_view_arr_rel_insert_input {
  data: [question_responses_view_insert_input! ]! 
}

"""aggregate avg on columns"""
type question_responses_view_avg_fields {
   poster_image_height: Float
   question_id: Float
   question_response_id: Float
   submission_id: Float
   word_count: Float
}

"""
order by avg() on columns of table "question_responses_view"
"""
input question_responses_view_avg_order_by {
  poster_image_height: order_by
  question_id: order_by
  question_response_id: order_by
  submission_id: order_by
  word_count: order_by
}

"""
Boolean expression to filter rows from the table "question_responses_view". All fields are combined with a logical 'AND'.
"""
input question_responses_view_bool_exp {
  _and: [question_responses_view_bool_exp! ]
  _not: question_responses_view_bool_exp
  _or: [question_responses_view_bool_exp! ]
  gives_permission_to_appear_in_programme: Boolean_comparison_exp
  poster_image: String_comparison_exp
  poster_image_height: Int_comparison_exp
  question: questions_view_bool_exp
  question_id: Int_comparison_exp
  question_response_id: Int_comparison_exp
  submission: submissions_bool_exp
  submission_id: Int_comparison_exp
  value: String_comparison_exp
  word_count: smallint_comparison_exp
}

"""
input type for incrementing numeric columns in table "question_responses_view"
"""
input question_responses_view_inc_input {
  poster_image_height: Int
  question_id: Int
  question_response_id: Int
  submission_id: Int
  word_count: smallint
}

"""
input type for inserting data into table "question_responses_view"
"""
input question_responses_view_insert_input {
  gives_permission_to_appear_in_programme: Boolean
  poster_image: String
  poster_image_height: Int
  question: questions_view_obj_rel_insert_input
  question_id: Int
  question_response_id: Int
  submission: submissions_obj_rel_insert_input
  submission_id: Int
  value: String
  word_count: smallint
}

"""aggregate max on columns"""
type question_responses_view_max_fields {
   poster_image: String
   poster_image_height: Int
   question_id: Int
   question_response_id: Int
   submission_id: Int
   value: String
   word_count: smallint
}

"""
order by max() on columns of table "question_responses_view"
"""
input question_responses_view_max_order_by {
  poster_image: order_by
  poster_image_height: order_by
  question_id: order_by
  question_response_id: order_by
  submission_id: order_by
  value: order_by
  word_count: order_by
}

"""aggregate min on columns"""
type question_responses_view_min_fields {
   poster_image: String
   poster_image_height: Int
   question_id: Int
   question_response_id: Int
   submission_id: Int
   value: String
   word_count: smallint
}

"""
order by min() on columns of table "question_responses_view"
"""
input question_responses_view_min_order_by {
  poster_image: order_by
  poster_image_height: order_by
  question_id: order_by
  question_response_id: order_by
  submission_id: order_by
  value: order_by
  word_count: order_by
}

"""
response of any mutation on the table "question_responses_view"
"""
type question_responses_view_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [question_responses_view! ]! 
}

"""Ordering options when selecting data from "question_responses_view"."""
input question_responses_view_order_by {
  gives_permission_to_appear_in_programme: order_by
  poster_image: order_by
  poster_image_height: order_by
  question: questions_view_order_by
  question_id: order_by
  question_response_id: order_by
  submission: submissions_order_by
  submission_id: order_by
  value: order_by
  word_count: order_by
}

"""
select columns of table "question_responses_view"
"""
enum question_responses_view_select_column {
  """column name"""
gives_permission_to_appear_in_programme
  """column name"""
poster_image
  """column name"""
poster_image_height
  """column name"""
question_id
  """column name"""
question_response_id
  """column name"""
submission_id
  """column name"""
value
  """column name"""
word_count
}

"""
select "question_responses_view_aggregate_bool_exp_bool_and_arguments_columns" columns of table "question_responses_view"
"""
enum question_responses_view_select_column_question_responses_view_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
gives_permission_to_appear_in_programme
}

"""
select "question_responses_view_aggregate_bool_exp_bool_or_arguments_columns" columns of table "question_responses_view"
"""
enum question_responses_view_select_column_question_responses_view_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
gives_permission_to_appear_in_programme
}

"""
input type for updating data in table "question_responses_view"
"""
input question_responses_view_set_input {
  gives_permission_to_appear_in_programme: Boolean
  poster_image: String
  poster_image_height: Int
  question_id: Int
  question_response_id: Int
  submission_id: Int
  value: String
  word_count: smallint
}

"""aggregate stddev on columns"""
type question_responses_view_stddev_fields {
   poster_image_height: Float
   question_id: Float
   question_response_id: Float
   submission_id: Float
   word_count: Float
}

"""
order by stddev() on columns of table "question_responses_view"
"""
input question_responses_view_stddev_order_by {
  poster_image_height: order_by
  question_id: order_by
  question_response_id: order_by
  submission_id: order_by
  word_count: order_by
}

"""aggregate stddev_pop on columns"""
type question_responses_view_stddev_pop_fields {
   poster_image_height: Float
   question_id: Float
   question_response_id: Float
   submission_id: Float
   word_count: Float
}

"""
order by stddev_pop() on columns of table "question_responses_view"
"""
input question_responses_view_stddev_pop_order_by {
  poster_image_height: order_by
  question_id: order_by
  question_response_id: order_by
  submission_id: order_by
  word_count: order_by
}

"""aggregate stddev_samp on columns"""
type question_responses_view_stddev_samp_fields {
   poster_image_height: Float
   question_id: Float
   question_response_id: Float
   submission_id: Float
   word_count: Float
}

"""
order by stddev_samp() on columns of table "question_responses_view"
"""
input question_responses_view_stddev_samp_order_by {
  poster_image_height: order_by
  question_id: order_by
  question_response_id: order_by
  submission_id: order_by
  word_count: order_by
}

"""
Streaming cursor of the table "question_responses_view"
"""
input question_responses_view_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: question_responses_view_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input question_responses_view_stream_cursor_value_input {
  gives_permission_to_appear_in_programme: Boolean
  poster_image: String
  poster_image_height: Int
  question_id: Int
  question_response_id: Int
  submission_id: Int
  value: String
  word_count: smallint
}

"""aggregate sum on columns"""
type question_responses_view_sum_fields {
   poster_image_height: Int
   question_id: Int
   question_response_id: Int
   submission_id: Int
   word_count: smallint
}

"""
order by sum() on columns of table "question_responses_view"
"""
input question_responses_view_sum_order_by {
  poster_image_height: order_by
  question_id: order_by
  question_response_id: order_by
  submission_id: order_by
  word_count: order_by
}

input question_responses_view_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: question_responses_view_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: question_responses_view_set_input
  where: question_responses_view_bool_exp! 
}

"""aggregate var_pop on columns"""
type question_responses_view_var_pop_fields {
   poster_image_height: Float
   question_id: Float
   question_response_id: Float
   submission_id: Float
   word_count: Float
}

"""
order by var_pop() on columns of table "question_responses_view"
"""
input question_responses_view_var_pop_order_by {
  poster_image_height: order_by
  question_id: order_by
  question_response_id: order_by
  submission_id: order_by
  word_count: order_by
}

"""aggregate var_samp on columns"""
type question_responses_view_var_samp_fields {
   poster_image_height: Float
   question_id: Float
   question_response_id: Float
   submission_id: Float
   word_count: Float
}

"""
order by var_samp() on columns of table "question_responses_view"
"""
input question_responses_view_var_samp_order_by {
  poster_image_height: order_by
  question_id: order_by
  question_response_id: order_by
  submission_id: order_by
  word_count: order_by
}

"""aggregate variance on columns"""
type question_responses_view_variance_fields {
   poster_image_height: Float
   question_id: Float
   question_response_id: Float
   submission_id: Float
   word_count: Float
}

"""
order by variance() on columns of table "question_responses_view"
"""
input question_responses_view_variance_order_by {
  poster_image_height: order_by
  question_id: order_by
  question_response_id: order_by
  submission_id: order_by
  word_count: order_by
}

scalar question_status 

"""
Boolean expression to compare columns of type "question_status". All fields are combined with logical 'AND'.
"""
input question_status_comparison_exp {
  _eq: question_status
  _gt: question_status
  _gte: question_status
  _in: [question_status! ]
  _is_null: Boolean
  _lt: question_status
  _lte: question_status
  _neq: question_status
  _nin: [question_status! ]
}

"""Questions for submitters. These make up the submission form"""
type questions {
   api_name: String
   archived: Boolean! 
   author_label: String! 
   character_limit: Int
   child_label: String
   city_label: String
   combined_word_limit_id: Int
   country_label: String
   created_at: timestamptz! 
   data_type: question_data_types
   depends_on: Int
   depends_on_option: String
   et_al_question_text: String
  """An object relationship"""
 event: events! 
   event_id: Int! 
   file_size_limit_mb: numeric
   file_types: _text! 
   has_canonical_affiliations_search: Boolean! 
   has_et_al_toggle: Boolean! 
   has_poster_download: Boolean! 
   has_secure_programme_permission_toggle: Boolean! 
   id: Int! 
   in_poster_gallery: Boolean! 
   in_programme: Boolean! 
   institution_label: String
   is_authors_affiliations: Boolean! 
   is_category: Boolean! 
   is_dependency_parent: Boolean! 
   is_poster_keywords: Boolean! 
   is_poster_link: Boolean! 
   is_poster_summary: Boolean! 
   is_poster_upload: Boolean! 
   is_title: Boolean! 
   mandatory_city: Boolean! 
   mandatory_country: Boolean! 
   mandatory_institution: Boolean! 
   mandatory_state: Boolean! 
   max_affiliations: Int
   max_authors: Int
   max_image_height: Int
   max_image_width: Int
   minimal_text_input: Boolean! 
   num_of_list_inputs: Int
   parent_label: String
   presenting_multiple: Boolean! 
   question_name: String
  """An array relationship"""
 questions_stage_options("""distinct select on columns"""
distinct_on: [questions_stage_options_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_stage_options_order_by! ], """filter the rows returned"""
where: questions_stage_options_bool_exp): [questions_stage_options! ]! 
  """An aggregate relationship"""
 questions_stage_options_aggregate("""distinct select on columns"""
distinct_on: [questions_stage_options_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_stage_options_order_by! ], """filter the rows returned"""
where: questions_stage_options_bool_exp): questions_stage_options_aggregate! 
   row_count: Int
   secure_programme_permission_question_text: String
   select_limit: Int
   show_city: Boolean! 
   show_country: Boolean! 
   show_institution: Boolean! 
   show_state: Boolean! 
   state_label: String
   tabular_columns: _text
   tabular_rows: _text
   time_stamp: bigint
   word_limit: Int
}

"""
aggregated selection of "questions"
"""
type questions_aggregate {
   aggregate: questions_aggregate_fields
   nodes: [questions! ]! 
}

input questions_aggregate_bool_exp {
  bool_and: questions_aggregate_bool_exp_bool_and
  bool_or: questions_aggregate_bool_exp_bool_or
  count: questions_aggregate_bool_exp_count
}

input questions_aggregate_bool_exp_bool_and {
  arguments: questions_select_column_questions_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: questions_bool_exp
  predicate: Boolean_comparison_exp! 
}

input questions_aggregate_bool_exp_bool_or {
  arguments: questions_select_column_questions_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: questions_bool_exp
  predicate: Boolean_comparison_exp! 
}

input questions_aggregate_bool_exp_count {
  arguments: [questions_select_column! ]
  distinct: Boolean
  filter: questions_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "questions"
"""
type questions_aggregate_fields {
   avg: questions_avg_fields
   count(columns: [questions_select_column! ], distinct: Boolean): Int! 
   max: questions_max_fields
   min: questions_min_fields
   stddev: questions_stddev_fields
   stddev_pop: questions_stddev_pop_fields
   stddev_samp: questions_stddev_samp_fields
   sum: questions_sum_fields
   var_pop: questions_var_pop_fields
   var_samp: questions_var_samp_fields
   variance: questions_variance_fields
}

"""
order by aggregate values of table "questions"
"""
input questions_aggregate_order_by {
  avg: questions_avg_order_by
  count: order_by
  max: questions_max_order_by
  min: questions_min_order_by
  stddev: questions_stddev_order_by
  stddev_pop: questions_stddev_pop_order_by
  stddev_samp: questions_stddev_samp_order_by
  sum: questions_sum_order_by
  var_pop: questions_var_pop_order_by
  var_samp: questions_var_samp_order_by
  variance: questions_variance_order_by
}

"""
input type for inserting array relation for remote table "questions"
"""
input questions_arr_rel_insert_input {
  data: [questions_insert_input! ]! 
  """upsert condition"""
on_conflict: questions_on_conflict
}

"""aggregate avg on columns"""
type questions_avg_fields {
   character_limit: Float
   combined_word_limit_id: Float
   depends_on: Float
   event_id: Float
   file_size_limit_mb: Float
   id: Float
   max_affiliations: Float
   max_authors: Float
   max_image_height: Float
   max_image_width: Float
   num_of_list_inputs: Float
   row_count: Float
   select_limit: Float
   time_stamp: Float
   word_limit: Float
}

"""
order by avg() on columns of table "questions"
"""
input questions_avg_order_by {
  character_limit: order_by
  combined_word_limit_id: order_by
  depends_on: order_by
  event_id: order_by
  file_size_limit_mb: order_by
  id: order_by
  max_affiliations: order_by
  max_authors: order_by
  max_image_height: order_by
  max_image_width: order_by
  num_of_list_inputs: order_by
  row_count: order_by
  select_limit: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""
Boolean expression to filter rows from the table "questions". All fields are combined with a logical 'AND'.
"""
input questions_bool_exp {
  _and: [questions_bool_exp! ]
  _not: questions_bool_exp
  _or: [questions_bool_exp! ]
  api_name: String_comparison_exp
  archived: Boolean_comparison_exp
  author_label: String_comparison_exp
  character_limit: Int_comparison_exp
  child_label: String_comparison_exp
  city_label: String_comparison_exp
  combined_word_limit_id: Int_comparison_exp
  country_label: String_comparison_exp
  created_at: timestamptz_comparison_exp
  data_type: question_data_types_comparison_exp
  depends_on: Int_comparison_exp
  depends_on_option: String_comparison_exp
  et_al_question_text: String_comparison_exp
  event: events_bool_exp
  event_id: Int_comparison_exp
  file_size_limit_mb: numeric_comparison_exp
  file_types: _text_comparison_exp
  has_canonical_affiliations_search: Boolean_comparison_exp
  has_et_al_toggle: Boolean_comparison_exp
  has_poster_download: Boolean_comparison_exp
  has_secure_programme_permission_toggle: Boolean_comparison_exp
  id: Int_comparison_exp
  in_poster_gallery: Boolean_comparison_exp
  in_programme: Boolean_comparison_exp
  institution_label: String_comparison_exp
  is_authors_affiliations: Boolean_comparison_exp
  is_category: Boolean_comparison_exp
  is_dependency_parent: Boolean_comparison_exp
  is_poster_keywords: Boolean_comparison_exp
  is_poster_link: Boolean_comparison_exp
  is_poster_summary: Boolean_comparison_exp
  is_poster_upload: Boolean_comparison_exp
  is_title: Boolean_comparison_exp
  mandatory_city: Boolean_comparison_exp
  mandatory_country: Boolean_comparison_exp
  mandatory_institution: Boolean_comparison_exp
  mandatory_state: Boolean_comparison_exp
  max_affiliations: Int_comparison_exp
  max_authors: Int_comparison_exp
  max_image_height: Int_comparison_exp
  max_image_width: Int_comparison_exp
  minimal_text_input: Boolean_comparison_exp
  num_of_list_inputs: Int_comparison_exp
  parent_label: String_comparison_exp
  presenting_multiple: Boolean_comparison_exp
  question_name: String_comparison_exp
  questions_stage_options: questions_stage_options_bool_exp
  questions_stage_options_aggregate: questions_stage_options_aggregate_bool_exp
  row_count: Int_comparison_exp
  secure_programme_permission_question_text: String_comparison_exp
  select_limit: Int_comparison_exp
  show_city: Boolean_comparison_exp
  show_country: Boolean_comparison_exp
  show_institution: Boolean_comparison_exp
  show_state: Boolean_comparison_exp
  state_label: String_comparison_exp
  tabular_columns: _text_comparison_exp
  tabular_rows: _text_comparison_exp
  time_stamp: bigint_comparison_exp
  word_limit: Int_comparison_exp
}

"""
unique or primary key constraints on table "questions"
"""
enum questions_constraint {
  """
  unique or primary key constraint on columns "question_id"
  """
questions_new_pkey
}

"""
input type for incrementing numeric columns in table "questions"
"""
input questions_inc_input {
  character_limit: Int
  combined_word_limit_id: Int
  depends_on: Int
  event_id: Int
  file_size_limit_mb: numeric
  id: Int
  max_affiliations: Int
  max_authors: Int
  max_image_height: Int
  max_image_width: Int
  num_of_list_inputs: Int
  row_count: Int
  select_limit: Int
  time_stamp: bigint
  word_limit: Int
}

"""
input type for inserting data into table "questions"
"""
input questions_insert_input {
  api_name: String
  archived: Boolean! 
  author_label: String! 
  character_limit: Int
  child_label: String
  city_label: String! 
  combined_word_limit_id: Int
  country_label: String! 
  created_at: timestamptz! 
  data_type: question_data_types! 
  depends_on: Int
  depends_on_option: String
  et_al_question_text: String! 
  event: events_obj_rel_insert_input
  event_id: Int! 
  file_size_limit_mb: numeric
  file_types: _text! 
  has_canonical_affiliations_search: Boolean! 
  has_et_al_toggle: Boolean! 
  has_poster_download: Boolean! 
  has_secure_programme_permission_toggle: Boolean! 
  id: Int
  in_poster_gallery: Boolean! 
  in_programme: Boolean! 
  institution_label: String! 
  is_authors_affiliations: Boolean! 
  is_category: Boolean! 
  is_dependency_parent: Boolean! 
  is_poster_keywords: Boolean! 
  is_poster_link: Boolean! 
  is_poster_summary: Boolean! 
  is_poster_upload: Boolean! 
  is_title: Boolean! 
  mandatory_city: Boolean! 
  mandatory_country: Boolean! 
  mandatory_institution: Boolean! 
  mandatory_state: Boolean! 
  max_affiliations: Int
  max_authors: Int
  max_image_height: Int
  max_image_width: Int
  minimal_text_input: Boolean! 
  num_of_list_inputs: Int
  parent_label: String
  presenting_multiple: Boolean! 
  question_name: String
  questions_stage_options: questions_stage_options_arr_rel_insert_input
  row_count: Int! 
  secure_programme_permission_question_text: String! 
  select_limit: Int
  show_city: Boolean! 
  show_country: Boolean! 
  show_institution: Boolean! 
  show_state: Boolean! 
  state_label: String! 
  tabular_columns: _text
  tabular_rows: _text
  time_stamp: bigint! 
  word_limit: Int
}

"""aggregate max on columns"""
type questions_max_fields {
   api_name: String
   author_label: String
   character_limit: Int
   child_label: String
   city_label: String
   combined_word_limit_id: Int
   country_label: String
   created_at: timestamptz
   data_type: question_data_types
   depends_on: Int
   depends_on_option: String
   et_al_question_text: String
   event_id: Int
   file_size_limit_mb: numeric
   id: Int
   institution_label: String
   max_affiliations: Int
   max_authors: Int
   max_image_height: Int
   max_image_width: Int
   num_of_list_inputs: Int
   parent_label: String
   question_name: String
   row_count: Int
   secure_programme_permission_question_text: String
   select_limit: Int
   state_label: String
   time_stamp: bigint
   word_limit: Int
}

"""
order by max() on columns of table "questions"
"""
input questions_max_order_by {
  api_name: order_by
  author_label: order_by
  character_limit: order_by
  child_label: order_by
  city_label: order_by
  combined_word_limit_id: order_by
  country_label: order_by
  created_at: order_by
  data_type: order_by
  depends_on: order_by
  depends_on_option: order_by
  et_al_question_text: order_by
  event_id: order_by
  file_size_limit_mb: order_by
  id: order_by
  institution_label: order_by
  max_affiliations: order_by
  max_authors: order_by
  max_image_height: order_by
  max_image_width: order_by
  num_of_list_inputs: order_by
  parent_label: order_by
  question_name: order_by
  row_count: order_by
  secure_programme_permission_question_text: order_by
  select_limit: order_by
  state_label: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""aggregate min on columns"""
type questions_min_fields {
   api_name: String
   author_label: String
   character_limit: Int
   child_label: String
   city_label: String
   combined_word_limit_id: Int
   country_label: String
   created_at: timestamptz
   data_type: question_data_types
   depends_on: Int
   depends_on_option: String
   et_al_question_text: String
   event_id: Int
   file_size_limit_mb: numeric
   id: Int
   institution_label: String
   max_affiliations: Int
   max_authors: Int
   max_image_height: Int
   max_image_width: Int
   num_of_list_inputs: Int
   parent_label: String
   question_name: String
   row_count: Int
   secure_programme_permission_question_text: String
   select_limit: Int
   state_label: String
   time_stamp: bigint
   word_limit: Int
}

"""
order by min() on columns of table "questions"
"""
input questions_min_order_by {
  api_name: order_by
  author_label: order_by
  character_limit: order_by
  child_label: order_by
  city_label: order_by
  combined_word_limit_id: order_by
  country_label: order_by
  created_at: order_by
  data_type: order_by
  depends_on: order_by
  depends_on_option: order_by
  et_al_question_text: order_by
  event_id: order_by
  file_size_limit_mb: order_by
  id: order_by
  institution_label: order_by
  max_affiliations: order_by
  max_authors: order_by
  max_image_height: order_by
  max_image_width: order_by
  num_of_list_inputs: order_by
  parent_label: order_by
  question_name: order_by
  row_count: order_by
  secure_programme_permission_question_text: order_by
  select_limit: order_by
  state_label: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""
response of any mutation on the table "questions"
"""
type questions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [questions! ]! 
}

"""
input type for inserting object relation for remote table "questions"
"""
input questions_obj_rel_insert_input {
  data: questions_insert_input! 
  """upsert condition"""
on_conflict: questions_on_conflict
}

"""
on_conflict condition type for table "questions"
"""
input questions_on_conflict {
  constraint: questions_constraint! 
  update_columns: [questions_update_column! ]! 
  where: questions_bool_exp
}

"""Ordering options when selecting data from "questions"."""
input questions_order_by {
  api_name: order_by
  archived: order_by
  author_label: order_by
  character_limit: order_by
  child_label: order_by
  city_label: order_by
  combined_word_limit_id: order_by
  country_label: order_by
  created_at: order_by
  data_type: order_by
  depends_on: order_by
  depends_on_option: order_by
  et_al_question_text: order_by
  event: events_order_by
  event_id: order_by
  file_size_limit_mb: order_by
  file_types: order_by
  has_canonical_affiliations_search: order_by
  has_et_al_toggle: order_by
  has_poster_download: order_by
  has_secure_programme_permission_toggle: order_by
  id: order_by
  in_poster_gallery: order_by
  in_programme: order_by
  institution_label: order_by
  is_authors_affiliations: order_by
  is_category: order_by
  is_dependency_parent: order_by
  is_poster_keywords: order_by
  is_poster_link: order_by
  is_poster_summary: order_by
  is_poster_upload: order_by
  is_title: order_by
  mandatory_city: order_by
  mandatory_country: order_by
  mandatory_institution: order_by
  mandatory_state: order_by
  max_affiliations: order_by
  max_authors: order_by
  max_image_height: order_by
  max_image_width: order_by
  minimal_text_input: order_by
  num_of_list_inputs: order_by
  parent_label: order_by
  presenting_multiple: order_by
  question_name: order_by
  questions_stage_options_aggregate: questions_stage_options_aggregate_order_by
  row_count: order_by
  secure_programme_permission_question_text: order_by
  select_limit: order_by
  show_city: order_by
  show_country: order_by
  show_institution: order_by
  show_state: order_by
  state_label: order_by
  tabular_columns: order_by
  tabular_rows: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""primary key columns input for table: questions"""
input questions_pk_columns_input {
  id: Int! 
}

"""
select columns of table "questions"
"""
enum questions_select_column {
  """column name"""
api_name
  """column name"""
archived
  """column name"""
author_label
  """column name"""
character_limit
  """column name"""
child_label
  """column name"""
city_label
  """column name"""
combined_word_limit_id
  """column name"""
country_label
  """column name"""
created_at
  """column name"""
data_type
  """column name"""
depends_on
  """column name"""
depends_on_option
  """column name"""
et_al_question_text
  """column name"""
event_id
  """column name"""
file_size_limit_mb
  """column name"""
file_types
  """column name"""
has_canonical_affiliations_search
  """column name"""
has_et_al_toggle
  """column name"""
has_poster_download
  """column name"""
has_secure_programme_permission_toggle
  """column name"""
id
  """column name"""
in_poster_gallery
  """column name"""
in_programme
  """column name"""
institution_label
  """column name"""
is_authors_affiliations
  """column name"""
is_category
  """column name"""
is_dependency_parent
  """column name"""
is_poster_keywords
  """column name"""
is_poster_link
  """column name"""
is_poster_summary
  """column name"""
is_poster_upload
  """column name"""
is_title
  """column name"""
mandatory_city
  """column name"""
mandatory_country
  """column name"""
mandatory_institution
  """column name"""
mandatory_state
  """column name"""
max_affiliations
  """column name"""
max_authors
  """column name"""
max_image_height
  """column name"""
max_image_width
  """column name"""
minimal_text_input
  """column name"""
num_of_list_inputs
  """column name"""
parent_label
  """column name"""
presenting_multiple
  """column name"""
question_name
  """column name"""
row_count
  """column name"""
secure_programme_permission_question_text
  """column name"""
select_limit
  """column name"""
show_city
  """column name"""
show_country
  """column name"""
show_institution
  """column name"""
show_state
  """column name"""
state_label
  """column name"""
tabular_columns
  """column name"""
tabular_rows
  """column name"""
time_stamp
  """column name"""
word_limit
}

"""
select "questions_aggregate_bool_exp_bool_and_arguments_columns" columns of table "questions"
"""
enum questions_select_column_questions_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
archived
  """column name"""
has_canonical_affiliations_search
  """column name"""
has_et_al_toggle
  """column name"""
has_poster_download
  """column name"""
has_secure_programme_permission_toggle
  """column name"""
in_poster_gallery
  """column name"""
in_programme
  """column name"""
is_authors_affiliations
  """column name"""
is_category
  """column name"""
is_dependency_parent
  """column name"""
is_poster_keywords
  """column name"""
is_poster_link
  """column name"""
is_poster_summary
  """column name"""
is_poster_upload
  """column name"""
is_title
  """column name"""
mandatory_city
  """column name"""
mandatory_country
  """column name"""
mandatory_institution
  """column name"""
mandatory_state
  """column name"""
minimal_text_input
  """column name"""
presenting_multiple
  """column name"""
show_city
  """column name"""
show_country
  """column name"""
show_institution
  """column name"""
show_state
}

"""
select "questions_aggregate_bool_exp_bool_or_arguments_columns" columns of table "questions"
"""
enum questions_select_column_questions_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
archived
  """column name"""
has_canonical_affiliations_search
  """column name"""
has_et_al_toggle
  """column name"""
has_poster_download
  """column name"""
has_secure_programme_permission_toggle
  """column name"""
in_poster_gallery
  """column name"""
in_programme
  """column name"""
is_authors_affiliations
  """column name"""
is_category
  """column name"""
is_dependency_parent
  """column name"""
is_poster_keywords
  """column name"""
is_poster_link
  """column name"""
is_poster_summary
  """column name"""
is_poster_upload
  """column name"""
is_title
  """column name"""
mandatory_city
  """column name"""
mandatory_country
  """column name"""
mandatory_institution
  """column name"""
mandatory_state
  """column name"""
minimal_text_input
  """column name"""
presenting_multiple
  """column name"""
show_city
  """column name"""
show_country
  """column name"""
show_institution
  """column name"""
show_state
}

"""
input type for updating data in table "questions"
"""
input questions_set_input {
  api_name: String
  archived: Boolean
  author_label: String
  character_limit: Int
  child_label: String
  city_label: String
  combined_word_limit_id: Int
  country_label: String
  created_at: timestamptz
  data_type: question_data_types
  depends_on: Int
  depends_on_option: String
  et_al_question_text: String
  event_id: Int
  file_size_limit_mb: numeric
  file_types: _text
  has_canonical_affiliations_search: Boolean
  has_et_al_toggle: Boolean
  has_poster_download: Boolean
  has_secure_programme_permission_toggle: Boolean
  id: Int
  in_poster_gallery: Boolean
  in_programme: Boolean
  institution_label: String
  is_authors_affiliations: Boolean
  is_category: Boolean
  is_dependency_parent: Boolean
  is_poster_keywords: Boolean
  is_poster_link: Boolean
  is_poster_summary: Boolean
  is_poster_upload: Boolean
  is_title: Boolean
  mandatory_city: Boolean
  mandatory_country: Boolean
  mandatory_institution: Boolean
  mandatory_state: Boolean
  max_affiliations: Int
  max_authors: Int
  max_image_height: Int
  max_image_width: Int
  minimal_text_input: Boolean
  num_of_list_inputs: Int
  parent_label: String
  presenting_multiple: Boolean
  question_name: String
  row_count: Int
  secure_programme_permission_question_text: String
  select_limit: Int
  show_city: Boolean
  show_country: Boolean
  show_institution: Boolean
  show_state: Boolean
  state_label: String
  tabular_columns: _text
  tabular_rows: _text
  time_stamp: bigint
  word_limit: Int
}

"""The fields of a question that are specific to a stage"""
type questions_stage_options {
   id: Int! 
   in_abstract_book: Boolean! 
   name_override: String
   options("""JSON select path"""
path: String): json
   options_to_hide: _text! 
   order_of_questions: Int
  """An object relationship"""
 question: questions! 
   question_description: String! 
   question_id: Int! 
   question_status: question_status! 
   show_committee: Boolean! 
   show_files_to_committee: Boolean! 
   show_in_program: Boolean! 
   show_reviewer: Boolean! 
  """An object relationship"""
 stage: stages! 
   stage_id: Int! 
}

"""
aggregated selection of "questions_stage_options"
"""
type questions_stage_options_aggregate {
   aggregate: questions_stage_options_aggregate_fields
   nodes: [questions_stage_options! ]! 
}

input questions_stage_options_aggregate_bool_exp {
  bool_and: questions_stage_options_aggregate_bool_exp_bool_and
  bool_or: questions_stage_options_aggregate_bool_exp_bool_or
  count: questions_stage_options_aggregate_bool_exp_count
}

input questions_stage_options_aggregate_bool_exp_bool_and {
  arguments: questions_stage_options_select_column_questions_stage_options_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: questions_stage_options_bool_exp
  predicate: Boolean_comparison_exp! 
}

input questions_stage_options_aggregate_bool_exp_bool_or {
  arguments: questions_stage_options_select_column_questions_stage_options_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: questions_stage_options_bool_exp
  predicate: Boolean_comparison_exp! 
}

input questions_stage_options_aggregate_bool_exp_count {
  arguments: [questions_stage_options_select_column! ]
  distinct: Boolean
  filter: questions_stage_options_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "questions_stage_options"
"""
type questions_stage_options_aggregate_fields {
   avg: questions_stage_options_avg_fields
   count(columns: [questions_stage_options_select_column! ], distinct: Boolean): Int! 
   max: questions_stage_options_max_fields
   min: questions_stage_options_min_fields
   stddev: questions_stage_options_stddev_fields
   stddev_pop: questions_stage_options_stddev_pop_fields
   stddev_samp: questions_stage_options_stddev_samp_fields
   sum: questions_stage_options_sum_fields
   var_pop: questions_stage_options_var_pop_fields
   var_samp: questions_stage_options_var_samp_fields
   variance: questions_stage_options_variance_fields
}

"""
order by aggregate values of table "questions_stage_options"
"""
input questions_stage_options_aggregate_order_by {
  avg: questions_stage_options_avg_order_by
  count: order_by
  max: questions_stage_options_max_order_by
  min: questions_stage_options_min_order_by
  stddev: questions_stage_options_stddev_order_by
  stddev_pop: questions_stage_options_stddev_pop_order_by
  stddev_samp: questions_stage_options_stddev_samp_order_by
  sum: questions_stage_options_sum_order_by
  var_pop: questions_stage_options_var_pop_order_by
  var_samp: questions_stage_options_var_samp_order_by
  variance: questions_stage_options_variance_order_by
}

"""
input type for inserting array relation for remote table "questions_stage_options"
"""
input questions_stage_options_arr_rel_insert_input {
  data: [questions_stage_options_insert_input! ]! 
  """upsert condition"""
on_conflict: questions_stage_options_on_conflict
}

"""aggregate avg on columns"""
type questions_stage_options_avg_fields {
   id: Float
   order_of_questions: Float
   question_id: Float
   stage_id: Float
}

"""
order by avg() on columns of table "questions_stage_options"
"""
input questions_stage_options_avg_order_by {
  id: order_by
  order_of_questions: order_by
  question_id: order_by
  stage_id: order_by
}

"""
Boolean expression to filter rows from the table "questions_stage_options". All fields are combined with a logical 'AND'.
"""
input questions_stage_options_bool_exp {
  _and: [questions_stage_options_bool_exp! ]
  _not: questions_stage_options_bool_exp
  _or: [questions_stage_options_bool_exp! ]
  id: Int_comparison_exp
  in_abstract_book: Boolean_comparison_exp
  name_override: String_comparison_exp
  options: json_comparison_exp
  options_to_hide: _text_comparison_exp
  order_of_questions: Int_comparison_exp
  question: questions_bool_exp
  question_description: String_comparison_exp
  question_id: Int_comparison_exp
  question_status: question_status_comparison_exp
  show_committee: Boolean_comparison_exp
  show_files_to_committee: Boolean_comparison_exp
  show_in_program: Boolean_comparison_exp
  show_reviewer: Boolean_comparison_exp
  stage: stages_bool_exp
  stage_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "questions_stage_options"
"""
enum questions_stage_options_constraint {
  """
  unique or primary key constraint on columns "question_stage_options_id"
  """
questions_stage_options_pkey
}

"""
input type for incrementing numeric columns in table "questions_stage_options"
"""
input questions_stage_options_inc_input {
  id: Int
  order_of_questions: Int
  question_id: Int
  stage_id: Int
}

"""
input type for inserting data into table "questions_stage_options"
"""
input questions_stage_options_insert_input {
  id: Int
  in_abstract_book: Boolean! 
  name_override: String
  options: json
  options_to_hide: _text! 
  order_of_questions: Int
  question: questions_obj_rel_insert_input
  question_description: String! 
  question_id: Int! 
  question_status: question_status! 
  show_committee: Boolean! 
  show_files_to_committee: Boolean! 
  show_in_program: Boolean! 
  show_reviewer: Boolean! 
  stage: stages_obj_rel_insert_input
  stage_id: Int! 
}

"""aggregate max on columns"""
type questions_stage_options_max_fields {
   id: Int
   name_override: String
   order_of_questions: Int
   question_description: String
   question_id: Int
   question_status: question_status
   stage_id: Int
}

"""
order by max() on columns of table "questions_stage_options"
"""
input questions_stage_options_max_order_by {
  id: order_by
  name_override: order_by
  order_of_questions: order_by
  question_description: order_by
  question_id: order_by
  question_status: order_by
  stage_id: order_by
}

"""aggregate min on columns"""
type questions_stage_options_min_fields {
   id: Int
   name_override: String
   order_of_questions: Int
   question_description: String
   question_id: Int
   question_status: question_status
   stage_id: Int
}

"""
order by min() on columns of table "questions_stage_options"
"""
input questions_stage_options_min_order_by {
  id: order_by
  name_override: order_by
  order_of_questions: order_by
  question_description: order_by
  question_id: order_by
  question_status: order_by
  stage_id: order_by
}

"""
response of any mutation on the table "questions_stage_options"
"""
type questions_stage_options_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [questions_stage_options! ]! 
}

"""
on_conflict condition type for table "questions_stage_options"
"""
input questions_stage_options_on_conflict {
  constraint: questions_stage_options_constraint! 
  update_columns: [questions_stage_options_update_column! ]! 
  where: questions_stage_options_bool_exp
}

"""Ordering options when selecting data from "questions_stage_options"."""
input questions_stage_options_order_by {
  id: order_by
  in_abstract_book: order_by
  name_override: order_by
  options: order_by
  options_to_hide: order_by
  order_of_questions: order_by
  question: questions_order_by
  question_description: order_by
  question_id: order_by
  question_status: order_by
  show_committee: order_by
  show_files_to_committee: order_by
  show_in_program: order_by
  show_reviewer: order_by
  stage: stages_order_by
  stage_id: order_by
}

"""primary key columns input for table: questions_stage_options"""
input questions_stage_options_pk_columns_input {
  id: Int! 
}

"""
select columns of table "questions_stage_options"
"""
enum questions_stage_options_select_column {
  """column name"""
id
  """column name"""
in_abstract_book
  """column name"""
name_override
  """column name"""
options
  """column name"""
options_to_hide
  """column name"""
order_of_questions
  """column name"""
question_description
  """column name"""
question_id
  """column name"""
question_status
  """column name"""
show_committee
  """column name"""
show_files_to_committee
  """column name"""
show_in_program
  """column name"""
show_reviewer
  """column name"""
stage_id
}

"""
select "questions_stage_options_aggregate_bool_exp_bool_and_arguments_columns" columns of table "questions_stage_options"
"""
enum questions_stage_options_select_column_questions_stage_options_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
in_abstract_book
  """column name"""
show_committee
  """column name"""
show_files_to_committee
  """column name"""
show_in_program
  """column name"""
show_reviewer
}

"""
select "questions_stage_options_aggregate_bool_exp_bool_or_arguments_columns" columns of table "questions_stage_options"
"""
enum questions_stage_options_select_column_questions_stage_options_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
in_abstract_book
  """column name"""
show_committee
  """column name"""
show_files_to_committee
  """column name"""
show_in_program
  """column name"""
show_reviewer
}

"""
input type for updating data in table "questions_stage_options"
"""
input questions_stage_options_set_input {
  id: Int
  in_abstract_book: Boolean
  name_override: String
  options: json
  options_to_hide: _text
  order_of_questions: Int
  question_description: String
  question_id: Int
  question_status: question_status
  show_committee: Boolean
  show_files_to_committee: Boolean
  show_in_program: Boolean
  show_reviewer: Boolean
  stage_id: Int
}

"""aggregate stddev on columns"""
type questions_stage_options_stddev_fields {
   id: Float
   order_of_questions: Float
   question_id: Float
   stage_id: Float
}

"""
order by stddev() on columns of table "questions_stage_options"
"""
input questions_stage_options_stddev_order_by {
  id: order_by
  order_of_questions: order_by
  question_id: order_by
  stage_id: order_by
}

"""aggregate stddev_pop on columns"""
type questions_stage_options_stddev_pop_fields {
   id: Float
   order_of_questions: Float
   question_id: Float
   stage_id: Float
}

"""
order by stddev_pop() on columns of table "questions_stage_options"
"""
input questions_stage_options_stddev_pop_order_by {
  id: order_by
  order_of_questions: order_by
  question_id: order_by
  stage_id: order_by
}

"""aggregate stddev_samp on columns"""
type questions_stage_options_stddev_samp_fields {
   id: Float
   order_of_questions: Float
   question_id: Float
   stage_id: Float
}

"""
order by stddev_samp() on columns of table "questions_stage_options"
"""
input questions_stage_options_stddev_samp_order_by {
  id: order_by
  order_of_questions: order_by
  question_id: order_by
  stage_id: order_by
}

"""
Streaming cursor of the table "questions_stage_options"
"""
input questions_stage_options_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: questions_stage_options_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input questions_stage_options_stream_cursor_value_input {
  id: Int
  in_abstract_book: Boolean
  name_override: String
  options: json
  options_to_hide: _text
  order_of_questions: Int
  question_description: String
  question_id: Int
  question_status: question_status
  show_committee: Boolean
  show_files_to_committee: Boolean
  show_in_program: Boolean
  show_reviewer: Boolean
  stage_id: Int
}

"""aggregate sum on columns"""
type questions_stage_options_sum_fields {
   id: Int
   order_of_questions: Int
   question_id: Int
   stage_id: Int
}

"""
order by sum() on columns of table "questions_stage_options"
"""
input questions_stage_options_sum_order_by {
  id: order_by
  order_of_questions: order_by
  question_id: order_by
  stage_id: order_by
}

"""
update columns of table "questions_stage_options"
"""
enum questions_stage_options_update_column {
  """column name"""
id
  """column name"""
in_abstract_book
  """column name"""
name_override
  """column name"""
options
  """column name"""
options_to_hide
  """column name"""
order_of_questions
  """column name"""
question_description
  """column name"""
question_id
  """column name"""
question_status
  """column name"""
show_committee
  """column name"""
show_files_to_committee
  """column name"""
show_in_program
  """column name"""
show_reviewer
  """column name"""
stage_id
}

input questions_stage_options_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: questions_stage_options_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: questions_stage_options_set_input
  where: questions_stage_options_bool_exp! 
}

"""aggregate var_pop on columns"""
type questions_stage_options_var_pop_fields {
   id: Float
   order_of_questions: Float
   question_id: Float
   stage_id: Float
}

"""
order by var_pop() on columns of table "questions_stage_options"
"""
input questions_stage_options_var_pop_order_by {
  id: order_by
  order_of_questions: order_by
  question_id: order_by
  stage_id: order_by
}

"""aggregate var_samp on columns"""
type questions_stage_options_var_samp_fields {
   id: Float
   order_of_questions: Float
   question_id: Float
   stage_id: Float
}

"""
order by var_samp() on columns of table "questions_stage_options"
"""
input questions_stage_options_var_samp_order_by {
  id: order_by
  order_of_questions: order_by
  question_id: order_by
  stage_id: order_by
}

"""aggregate variance on columns"""
type questions_stage_options_variance_fields {
   id: Float
   order_of_questions: Float
   question_id: Float
   stage_id: Float
}

"""
order by variance() on columns of table "questions_stage_options"
"""
input questions_stage_options_variance_order_by {
  id: order_by
  order_of_questions: order_by
  question_id: order_by
  stage_id: order_by
}

"""
columns and relationships of "questions_stage_options_view"
"""
type questions_stage_options_view {
   in_abstract_book: Boolean
   name_override: String
   options("""JSON select path"""
path: String): json
   options_to_hide: _text
   order_of_questions: Int
   question_description: String
   question_id: Int
   question_stage_options_id: Int
   question_status: question_status
   show_committee: Boolean
   show_files_to_committee: Boolean
   show_in_program: Boolean
   show_reviewer: Boolean
  """An object relationship"""
 stage: stages_view
   stage_id: Int
}

"""
aggregated selection of "questions_stage_options_view"
"""
type questions_stage_options_view_aggregate {
   aggregate: questions_stage_options_view_aggregate_fields
   nodes: [questions_stage_options_view! ]! 
}

input questions_stage_options_view_aggregate_bool_exp {
  bool_and: questions_stage_options_view_aggregate_bool_exp_bool_and
  bool_or: questions_stage_options_view_aggregate_bool_exp_bool_or
  count: questions_stage_options_view_aggregate_bool_exp_count
}

input questions_stage_options_view_aggregate_bool_exp_bool_and {
  arguments: questions_stage_options_view_select_column_questions_stage_options_view_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: questions_stage_options_view_bool_exp
  predicate: Boolean_comparison_exp! 
}

input questions_stage_options_view_aggregate_bool_exp_bool_or {
  arguments: questions_stage_options_view_select_column_questions_stage_options_view_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: questions_stage_options_view_bool_exp
  predicate: Boolean_comparison_exp! 
}

input questions_stage_options_view_aggregate_bool_exp_count {
  arguments: [questions_stage_options_view_select_column! ]
  distinct: Boolean
  filter: questions_stage_options_view_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "questions_stage_options_view"
"""
type questions_stage_options_view_aggregate_fields {
   avg: questions_stage_options_view_avg_fields
   count(columns: [questions_stage_options_view_select_column! ], distinct: Boolean): Int! 
   max: questions_stage_options_view_max_fields
   min: questions_stage_options_view_min_fields
   stddev: questions_stage_options_view_stddev_fields
   stddev_pop: questions_stage_options_view_stddev_pop_fields
   stddev_samp: questions_stage_options_view_stddev_samp_fields
   sum: questions_stage_options_view_sum_fields
   var_pop: questions_stage_options_view_var_pop_fields
   var_samp: questions_stage_options_view_var_samp_fields
   variance: questions_stage_options_view_variance_fields
}

"""
order by aggregate values of table "questions_stage_options_view"
"""
input questions_stage_options_view_aggregate_order_by {
  avg: questions_stage_options_view_avg_order_by
  count: order_by
  max: questions_stage_options_view_max_order_by
  min: questions_stage_options_view_min_order_by
  stddev: questions_stage_options_view_stddev_order_by
  stddev_pop: questions_stage_options_view_stddev_pop_order_by
  stddev_samp: questions_stage_options_view_stddev_samp_order_by
  sum: questions_stage_options_view_sum_order_by
  var_pop: questions_stage_options_view_var_pop_order_by
  var_samp: questions_stage_options_view_var_samp_order_by
  variance: questions_stage_options_view_variance_order_by
}

"""
input type for inserting array relation for remote table "questions_stage_options_view"
"""
input questions_stage_options_view_arr_rel_insert_input {
  data: [questions_stage_options_view_insert_input! ]! 
}

"""aggregate avg on columns"""
type questions_stage_options_view_avg_fields {
   order_of_questions: Float
   question_id: Float
   question_stage_options_id: Float
   stage_id: Float
}

"""
order by avg() on columns of table "questions_stage_options_view"
"""
input questions_stage_options_view_avg_order_by {
  order_of_questions: order_by
  question_id: order_by
  question_stage_options_id: order_by
  stage_id: order_by
}

"""
Boolean expression to filter rows from the table "questions_stage_options_view". All fields are combined with a logical 'AND'.
"""
input questions_stage_options_view_bool_exp {
  _and: [questions_stage_options_view_bool_exp! ]
  _not: questions_stage_options_view_bool_exp
  _or: [questions_stage_options_view_bool_exp! ]
  in_abstract_book: Boolean_comparison_exp
  name_override: String_comparison_exp
  options: json_comparison_exp
  options_to_hide: _text_comparison_exp
  order_of_questions: Int_comparison_exp
  question_description: String_comparison_exp
  question_id: Int_comparison_exp
  question_stage_options_id: Int_comparison_exp
  question_status: question_status_comparison_exp
  show_committee: Boolean_comparison_exp
  show_files_to_committee: Boolean_comparison_exp
  show_in_program: Boolean_comparison_exp
  show_reviewer: Boolean_comparison_exp
  stage: stages_view_bool_exp
  stage_id: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "questions_stage_options_view"
"""
input questions_stage_options_view_inc_input {
  order_of_questions: Int
  question_id: Int
  question_stage_options_id: Int
  stage_id: Int
}

"""
input type for inserting data into table "questions_stage_options_view"
"""
input questions_stage_options_view_insert_input {
  in_abstract_book: Boolean
  name_override: String
  options: json
  options_to_hide: _text
  order_of_questions: Int
  question_description: String
  question_id: Int
  question_stage_options_id: Int
  question_status: question_status
  show_committee: Boolean
  show_files_to_committee: Boolean
  show_in_program: Boolean
  show_reviewer: Boolean
  stage: stages_view_obj_rel_insert_input
  stage_id: Int
}

"""aggregate max on columns"""
type questions_stage_options_view_max_fields {
   name_override: String
   order_of_questions: Int
   question_description: String
   question_id: Int
   question_stage_options_id: Int
   question_status: question_status
   stage_id: Int
}

"""
order by max() on columns of table "questions_stage_options_view"
"""
input questions_stage_options_view_max_order_by {
  name_override: order_by
  order_of_questions: order_by
  question_description: order_by
  question_id: order_by
  question_stage_options_id: order_by
  question_status: order_by
  stage_id: order_by
}

"""aggregate min on columns"""
type questions_stage_options_view_min_fields {
   name_override: String
   order_of_questions: Int
   question_description: String
   question_id: Int
   question_stage_options_id: Int
   question_status: question_status
   stage_id: Int
}

"""
order by min() on columns of table "questions_stage_options_view"
"""
input questions_stage_options_view_min_order_by {
  name_override: order_by
  order_of_questions: order_by
  question_description: order_by
  question_id: order_by
  question_stage_options_id: order_by
  question_status: order_by
  stage_id: order_by
}

"""
response of any mutation on the table "questions_stage_options_view"
"""
type questions_stage_options_view_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [questions_stage_options_view! ]! 
}

"""
Ordering options when selecting data from "questions_stage_options_view".
"""
input questions_stage_options_view_order_by {
  in_abstract_book: order_by
  name_override: order_by
  options: order_by
  options_to_hide: order_by
  order_of_questions: order_by
  question_description: order_by
  question_id: order_by
  question_stage_options_id: order_by
  question_status: order_by
  show_committee: order_by
  show_files_to_committee: order_by
  show_in_program: order_by
  show_reviewer: order_by
  stage: stages_view_order_by
  stage_id: order_by
}

"""
select columns of table "questions_stage_options_view"
"""
enum questions_stage_options_view_select_column {
  """column name"""
in_abstract_book
  """column name"""
name_override
  """column name"""
options
  """column name"""
options_to_hide
  """column name"""
order_of_questions
  """column name"""
question_description
  """column name"""
question_id
  """column name"""
question_stage_options_id
  """column name"""
question_status
  """column name"""
show_committee
  """column name"""
show_files_to_committee
  """column name"""
show_in_program
  """column name"""
show_reviewer
  """column name"""
stage_id
}

"""
select "questions_stage_options_view_aggregate_bool_exp_bool_and_arguments_columns" columns of table "questions_stage_options_view"
"""
enum questions_stage_options_view_select_column_questions_stage_options_view_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
in_abstract_book
  """column name"""
show_committee
  """column name"""
show_files_to_committee
  """column name"""
show_in_program
  """column name"""
show_reviewer
}

"""
select "questions_stage_options_view_aggregate_bool_exp_bool_or_arguments_columns" columns of table "questions_stage_options_view"
"""
enum questions_stage_options_view_select_column_questions_stage_options_view_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
in_abstract_book
  """column name"""
show_committee
  """column name"""
show_files_to_committee
  """column name"""
show_in_program
  """column name"""
show_reviewer
}

"""
input type for updating data in table "questions_stage_options_view"
"""
input questions_stage_options_view_set_input {
  in_abstract_book: Boolean
  name_override: String
  options: json
  options_to_hide: _text
  order_of_questions: Int
  question_description: String
  question_id: Int
  question_stage_options_id: Int
  question_status: question_status
  show_committee: Boolean
  show_files_to_committee: Boolean
  show_in_program: Boolean
  show_reviewer: Boolean
  stage_id: Int
}

"""aggregate stddev on columns"""
type questions_stage_options_view_stddev_fields {
   order_of_questions: Float
   question_id: Float
   question_stage_options_id: Float
   stage_id: Float
}

"""
order by stddev() on columns of table "questions_stage_options_view"
"""
input questions_stage_options_view_stddev_order_by {
  order_of_questions: order_by
  question_id: order_by
  question_stage_options_id: order_by
  stage_id: order_by
}

"""aggregate stddev_pop on columns"""
type questions_stage_options_view_stddev_pop_fields {
   order_of_questions: Float
   question_id: Float
   question_stage_options_id: Float
   stage_id: Float
}

"""
order by stddev_pop() on columns of table "questions_stage_options_view"
"""
input questions_stage_options_view_stddev_pop_order_by {
  order_of_questions: order_by
  question_id: order_by
  question_stage_options_id: order_by
  stage_id: order_by
}

"""aggregate stddev_samp on columns"""
type questions_stage_options_view_stddev_samp_fields {
   order_of_questions: Float
   question_id: Float
   question_stage_options_id: Float
   stage_id: Float
}

"""
order by stddev_samp() on columns of table "questions_stage_options_view"
"""
input questions_stage_options_view_stddev_samp_order_by {
  order_of_questions: order_by
  question_id: order_by
  question_stage_options_id: order_by
  stage_id: order_by
}

"""
Streaming cursor of the table "questions_stage_options_view"
"""
input questions_stage_options_view_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: questions_stage_options_view_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input questions_stage_options_view_stream_cursor_value_input {
  in_abstract_book: Boolean
  name_override: String
  options: json
  options_to_hide: _text
  order_of_questions: Int
  question_description: String
  question_id: Int
  question_stage_options_id: Int
  question_status: question_status
  show_committee: Boolean
  show_files_to_committee: Boolean
  show_in_program: Boolean
  show_reviewer: Boolean
  stage_id: Int
}

"""aggregate sum on columns"""
type questions_stage_options_view_sum_fields {
   order_of_questions: Int
   question_id: Int
   question_stage_options_id: Int
   stage_id: Int
}

"""
order by sum() on columns of table "questions_stage_options_view"
"""
input questions_stage_options_view_sum_order_by {
  order_of_questions: order_by
  question_id: order_by
  question_stage_options_id: order_by
  stage_id: order_by
}

input questions_stage_options_view_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: questions_stage_options_view_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: questions_stage_options_view_set_input
  where: questions_stage_options_view_bool_exp! 
}

"""aggregate var_pop on columns"""
type questions_stage_options_view_var_pop_fields {
   order_of_questions: Float
   question_id: Float
   question_stage_options_id: Float
   stage_id: Float
}

"""
order by var_pop() on columns of table "questions_stage_options_view"
"""
input questions_stage_options_view_var_pop_order_by {
  order_of_questions: order_by
  question_id: order_by
  question_stage_options_id: order_by
  stage_id: order_by
}

"""aggregate var_samp on columns"""
type questions_stage_options_view_var_samp_fields {
   order_of_questions: Float
   question_id: Float
   question_stage_options_id: Float
   stage_id: Float
}

"""
order by var_samp() on columns of table "questions_stage_options_view"
"""
input questions_stage_options_view_var_samp_order_by {
  order_of_questions: order_by
  question_id: order_by
  question_stage_options_id: order_by
  stage_id: order_by
}

"""aggregate variance on columns"""
type questions_stage_options_view_variance_fields {
   order_of_questions: Float
   question_id: Float
   question_stage_options_id: Float
   stage_id: Float
}

"""
order by variance() on columns of table "questions_stage_options_view"
"""
input questions_stage_options_view_variance_order_by {
  order_of_questions: order_by
  question_id: order_by
  question_stage_options_id: order_by
  stage_id: order_by
}

"""aggregate stddev on columns"""
type questions_stddev_fields {
   character_limit: Float
   combined_word_limit_id: Float
   depends_on: Float
   event_id: Float
   file_size_limit_mb: Float
   id: Float
   max_affiliations: Float
   max_authors: Float
   max_image_height: Float
   max_image_width: Float
   num_of_list_inputs: Float
   row_count: Float
   select_limit: Float
   time_stamp: Float
   word_limit: Float
}

"""
order by stddev() on columns of table "questions"
"""
input questions_stddev_order_by {
  character_limit: order_by
  combined_word_limit_id: order_by
  depends_on: order_by
  event_id: order_by
  file_size_limit_mb: order_by
  id: order_by
  max_affiliations: order_by
  max_authors: order_by
  max_image_height: order_by
  max_image_width: order_by
  num_of_list_inputs: order_by
  row_count: order_by
  select_limit: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""aggregate stddev_pop on columns"""
type questions_stddev_pop_fields {
   character_limit: Float
   combined_word_limit_id: Float
   depends_on: Float
   event_id: Float
   file_size_limit_mb: Float
   id: Float
   max_affiliations: Float
   max_authors: Float
   max_image_height: Float
   max_image_width: Float
   num_of_list_inputs: Float
   row_count: Float
   select_limit: Float
   time_stamp: Float
   word_limit: Float
}

"""
order by stddev_pop() on columns of table "questions"
"""
input questions_stddev_pop_order_by {
  character_limit: order_by
  combined_word_limit_id: order_by
  depends_on: order_by
  event_id: order_by
  file_size_limit_mb: order_by
  id: order_by
  max_affiliations: order_by
  max_authors: order_by
  max_image_height: order_by
  max_image_width: order_by
  num_of_list_inputs: order_by
  row_count: order_by
  select_limit: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""aggregate stddev_samp on columns"""
type questions_stddev_samp_fields {
   character_limit: Float
   combined_word_limit_id: Float
   depends_on: Float
   event_id: Float
   file_size_limit_mb: Float
   id: Float
   max_affiliations: Float
   max_authors: Float
   max_image_height: Float
   max_image_width: Float
   num_of_list_inputs: Float
   row_count: Float
   select_limit: Float
   time_stamp: Float
   word_limit: Float
}

"""
order by stddev_samp() on columns of table "questions"
"""
input questions_stddev_samp_order_by {
  character_limit: order_by
  combined_word_limit_id: order_by
  depends_on: order_by
  event_id: order_by
  file_size_limit_mb: order_by
  id: order_by
  max_affiliations: order_by
  max_authors: order_by
  max_image_height: order_by
  max_image_width: order_by
  num_of_list_inputs: order_by
  row_count: order_by
  select_limit: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""
Streaming cursor of the table "questions"
"""
input questions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: questions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input questions_stream_cursor_value_input {
  api_name: String
  archived: Boolean
  author_label: String
  character_limit: Int
  child_label: String
  city_label: String
  combined_word_limit_id: Int
  country_label: String
  created_at: timestamptz
  data_type: question_data_types
  depends_on: Int
  depends_on_option: String
  et_al_question_text: String
  event_id: Int
  file_size_limit_mb: numeric
  file_types: _text
  has_canonical_affiliations_search: Boolean
  has_et_al_toggle: Boolean
  has_poster_download: Boolean
  has_secure_programme_permission_toggle: Boolean
  id: Int
  in_poster_gallery: Boolean
  in_programme: Boolean
  institution_label: String
  is_authors_affiliations: Boolean
  is_category: Boolean
  is_dependency_parent: Boolean
  is_poster_keywords: Boolean
  is_poster_link: Boolean
  is_poster_summary: Boolean
  is_poster_upload: Boolean
  is_title: Boolean
  mandatory_city: Boolean
  mandatory_country: Boolean
  mandatory_institution: Boolean
  mandatory_state: Boolean
  max_affiliations: Int
  max_authors: Int
  max_image_height: Int
  max_image_width: Int
  minimal_text_input: Boolean
  num_of_list_inputs: Int
  parent_label: String
  presenting_multiple: Boolean
  question_name: String
  row_count: Int
  secure_programme_permission_question_text: String
  select_limit: Int
  show_city: Boolean
  show_country: Boolean
  show_institution: Boolean
  show_state: Boolean
  state_label: String
  tabular_columns: _text
  tabular_rows: _text
  time_stamp: bigint
  word_limit: Int
}

"""aggregate sum on columns"""
type questions_sum_fields {
   character_limit: Int
   combined_word_limit_id: Int
   depends_on: Int
   event_id: Int
   file_size_limit_mb: numeric
   id: Int
   max_affiliations: Int
   max_authors: Int
   max_image_height: Int
   max_image_width: Int
   num_of_list_inputs: Int
   row_count: Int
   select_limit: Int
   time_stamp: bigint
   word_limit: Int
}

"""
order by sum() on columns of table "questions"
"""
input questions_sum_order_by {
  character_limit: order_by
  combined_word_limit_id: order_by
  depends_on: order_by
  event_id: order_by
  file_size_limit_mb: order_by
  id: order_by
  max_affiliations: order_by
  max_authors: order_by
  max_image_height: order_by
  max_image_width: order_by
  num_of_list_inputs: order_by
  row_count: order_by
  select_limit: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""
update columns of table "questions"
"""
enum questions_update_column {
  """column name"""
api_name
  """column name"""
archived
  """column name"""
author_label
  """column name"""
character_limit
  """column name"""
child_label
  """column name"""
city_label
  """column name"""
combined_word_limit_id
  """column name"""
country_label
  """column name"""
created_at
  """column name"""
data_type
  """column name"""
depends_on
  """column name"""
depends_on_option
  """column name"""
et_al_question_text
  """column name"""
event_id
  """column name"""
file_size_limit_mb
  """column name"""
file_types
  """column name"""
has_canonical_affiliations_search
  """column name"""
has_et_al_toggle
  """column name"""
has_poster_download
  """column name"""
has_secure_programme_permission_toggle
  """column name"""
id
  """column name"""
in_poster_gallery
  """column name"""
in_programme
  """column name"""
institution_label
  """column name"""
is_authors_affiliations
  """column name"""
is_category
  """column name"""
is_dependency_parent
  """column name"""
is_poster_keywords
  """column name"""
is_poster_link
  """column name"""
is_poster_summary
  """column name"""
is_poster_upload
  """column name"""
is_title
  """column name"""
mandatory_city
  """column name"""
mandatory_country
  """column name"""
mandatory_institution
  """column name"""
mandatory_state
  """column name"""
max_affiliations
  """column name"""
max_authors
  """column name"""
max_image_height
  """column name"""
max_image_width
  """column name"""
minimal_text_input
  """column name"""
num_of_list_inputs
  """column name"""
parent_label
  """column name"""
presenting_multiple
  """column name"""
question_name
  """column name"""
row_count
  """column name"""
secure_programme_permission_question_text
  """column name"""
select_limit
  """column name"""
show_city
  """column name"""
show_country
  """column name"""
show_institution
  """column name"""
show_state
  """column name"""
state_label
  """column name"""
tabular_columns
  """column name"""
tabular_rows
  """column name"""
time_stamp
  """column name"""
word_limit
}

input questions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: questions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: questions_set_input
  where: questions_bool_exp! 
}

"""aggregate var_pop on columns"""
type questions_var_pop_fields {
   character_limit: Float
   combined_word_limit_id: Float
   depends_on: Float
   event_id: Float
   file_size_limit_mb: Float
   id: Float
   max_affiliations: Float
   max_authors: Float
   max_image_height: Float
   max_image_width: Float
   num_of_list_inputs: Float
   row_count: Float
   select_limit: Float
   time_stamp: Float
   word_limit: Float
}

"""
order by var_pop() on columns of table "questions"
"""
input questions_var_pop_order_by {
  character_limit: order_by
  combined_word_limit_id: order_by
  depends_on: order_by
  event_id: order_by
  file_size_limit_mb: order_by
  id: order_by
  max_affiliations: order_by
  max_authors: order_by
  max_image_height: order_by
  max_image_width: order_by
  num_of_list_inputs: order_by
  row_count: order_by
  select_limit: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""aggregate var_samp on columns"""
type questions_var_samp_fields {
   character_limit: Float
   combined_word_limit_id: Float
   depends_on: Float
   event_id: Float
   file_size_limit_mb: Float
   id: Float
   max_affiliations: Float
   max_authors: Float
   max_image_height: Float
   max_image_width: Float
   num_of_list_inputs: Float
   row_count: Float
   select_limit: Float
   time_stamp: Float
   word_limit: Float
}

"""
order by var_samp() on columns of table "questions"
"""
input questions_var_samp_order_by {
  character_limit: order_by
  combined_word_limit_id: order_by
  depends_on: order_by
  event_id: order_by
  file_size_limit_mb: order_by
  id: order_by
  max_affiliations: order_by
  max_authors: order_by
  max_image_height: order_by
  max_image_width: order_by
  num_of_list_inputs: order_by
  row_count: order_by
  select_limit: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""aggregate variance on columns"""
type questions_variance_fields {
   character_limit: Float
   combined_word_limit_id: Float
   depends_on: Float
   event_id: Float
   file_size_limit_mb: Float
   id: Float
   max_affiliations: Float
   max_authors: Float
   max_image_height: Float
   max_image_width: Float
   num_of_list_inputs: Float
   row_count: Float
   select_limit: Float
   time_stamp: Float
   word_limit: Float
}

"""
order by variance() on columns of table "questions"
"""
input questions_variance_order_by {
  character_limit: order_by
  combined_word_limit_id: order_by
  depends_on: order_by
  event_id: order_by
  file_size_limit_mb: order_by
  id: order_by
  max_affiliations: order_by
  max_authors: order_by
  max_image_height: order_by
  max_image_width: order_by
  num_of_list_inputs: order_by
  row_count: order_by
  select_limit: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""
columns and relationships of "questions_view"
"""
type questions_view {
   api_name: String
   archived: Boolean
   author_label: String
   character_limit: Int
   child_label: String
   city_label: String
   combined_word_limit_id: Int
   country_label: String
   created_at: timestamptz
   data_type: question_data_types
   depends_on: Int
   depends_on_option: String
   et_al_question_text: String
   event_id: Int
   file_size_limit_mb: numeric
   file_types: _text
   has_canonical_affiliations_search: Boolean
   has_et_al_toggle: Boolean
   has_poster_download: Boolean
   has_secure_programme_permission_toggle: Boolean
   in_poster_gallery: Boolean
   in_programme: Boolean
   institution_label: String
   is_authors_affiliations: Boolean
   is_category: Boolean
   is_dependency_parent: Boolean
   is_poster_keywords: Boolean
   is_poster_link: Boolean
   is_poster_summary: Boolean
   is_poster_upload: Boolean
   is_title: Boolean
   mandatory_city: Boolean
   mandatory_country: Boolean
   mandatory_institution: Boolean
   mandatory_state: Boolean
   max_affiliations: Int
   max_authors: Int
   max_image_height: Int
   max_image_width: Int
   minimal_text_input: Boolean
   num_of_list_inputs: Int
   parent_label: String
   presenting_multiple: Boolean
   question_id: Int
   question_name: String
  """An array relationship"""
 question_stage_options("""distinct select on columns"""
distinct_on: [questions_stage_options_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_stage_options_view_order_by! ], """filter the rows returned"""
where: questions_stage_options_view_bool_exp): [questions_stage_options_view! ]! 
  """An aggregate relationship"""
 question_stage_options_aggregate("""distinct select on columns"""
distinct_on: [questions_stage_options_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_stage_options_view_order_by! ], """filter the rows returned"""
where: questions_stage_options_view_bool_exp): questions_stage_options_view_aggregate! 
   row_count: Int
   secure_programme_permission_question_text: String
   select_limit: Int
   show_city: Boolean
   show_country: Boolean
   show_institution: Boolean
   show_state: Boolean
   state_label: String
   tabular_columns: _text
   tabular_rows: _text
   time_stamp: bigint
   word_limit: Int
}

"""
aggregated selection of "questions_view"
"""
type questions_view_aggregate {
   aggregate: questions_view_aggregate_fields
   nodes: [questions_view! ]! 
}

"""
aggregate fields of "questions_view"
"""
type questions_view_aggregate_fields {
   avg: questions_view_avg_fields
   count(columns: [questions_view_select_column! ], distinct: Boolean): Int! 
   max: questions_view_max_fields
   min: questions_view_min_fields
   stddev: questions_view_stddev_fields
   stddev_pop: questions_view_stddev_pop_fields
   stddev_samp: questions_view_stddev_samp_fields
   sum: questions_view_sum_fields
   var_pop: questions_view_var_pop_fields
   var_samp: questions_view_var_samp_fields
   variance: questions_view_variance_fields
}

"""aggregate avg on columns"""
type questions_view_avg_fields {
   character_limit: Float
   combined_word_limit_id: Float
   depends_on: Float
   event_id: Float
   file_size_limit_mb: Float
   max_affiliations: Float
   max_authors: Float
   max_image_height: Float
   max_image_width: Float
   num_of_list_inputs: Float
   question_id: Float
   row_count: Float
   select_limit: Float
   time_stamp: Float
   word_limit: Float
}

"""
Boolean expression to filter rows from the table "questions_view". All fields are combined with a logical 'AND'.
"""
input questions_view_bool_exp {
  _and: [questions_view_bool_exp! ]
  _not: questions_view_bool_exp
  _or: [questions_view_bool_exp! ]
  api_name: String_comparison_exp
  archived: Boolean_comparison_exp
  author_label: String_comparison_exp
  character_limit: Int_comparison_exp
  child_label: String_comparison_exp
  city_label: String_comparison_exp
  combined_word_limit_id: Int_comparison_exp
  country_label: String_comparison_exp
  created_at: timestamptz_comparison_exp
  data_type: question_data_types_comparison_exp
  depends_on: Int_comparison_exp
  depends_on_option: String_comparison_exp
  et_al_question_text: String_comparison_exp
  event_id: Int_comparison_exp
  file_size_limit_mb: numeric_comparison_exp
  file_types: _text_comparison_exp
  has_canonical_affiliations_search: Boolean_comparison_exp
  has_et_al_toggle: Boolean_comparison_exp
  has_poster_download: Boolean_comparison_exp
  has_secure_programme_permission_toggle: Boolean_comparison_exp
  in_poster_gallery: Boolean_comparison_exp
  in_programme: Boolean_comparison_exp
  institution_label: String_comparison_exp
  is_authors_affiliations: Boolean_comparison_exp
  is_category: Boolean_comparison_exp
  is_dependency_parent: Boolean_comparison_exp
  is_poster_keywords: Boolean_comparison_exp
  is_poster_link: Boolean_comparison_exp
  is_poster_summary: Boolean_comparison_exp
  is_poster_upload: Boolean_comparison_exp
  is_title: Boolean_comparison_exp
  mandatory_city: Boolean_comparison_exp
  mandatory_country: Boolean_comparison_exp
  mandatory_institution: Boolean_comparison_exp
  mandatory_state: Boolean_comparison_exp
  max_affiliations: Int_comparison_exp
  max_authors: Int_comparison_exp
  max_image_height: Int_comparison_exp
  max_image_width: Int_comparison_exp
  minimal_text_input: Boolean_comparison_exp
  num_of_list_inputs: Int_comparison_exp
  parent_label: String_comparison_exp
  presenting_multiple: Boolean_comparison_exp
  question_id: Int_comparison_exp
  question_name: String_comparison_exp
  question_stage_options: questions_stage_options_view_bool_exp
  question_stage_options_aggregate: questions_stage_options_view_aggregate_bool_exp
  row_count: Int_comparison_exp
  secure_programme_permission_question_text: String_comparison_exp
  select_limit: Int_comparison_exp
  show_city: Boolean_comparison_exp
  show_country: Boolean_comparison_exp
  show_institution: Boolean_comparison_exp
  show_state: Boolean_comparison_exp
  state_label: String_comparison_exp
  tabular_columns: _text_comparison_exp
  tabular_rows: _text_comparison_exp
  time_stamp: bigint_comparison_exp
  word_limit: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "questions_view"
"""
input questions_view_inc_input {
  character_limit: Int
  combined_word_limit_id: Int
  depends_on: Int
  event_id: Int
  file_size_limit_mb: numeric
  max_affiliations: Int
  max_authors: Int
  max_image_height: Int
  max_image_width: Int
  num_of_list_inputs: Int
  question_id: Int
  row_count: Int
  select_limit: Int
  time_stamp: bigint
  word_limit: Int
}

"""
input type for inserting data into table "questions_view"
"""
input questions_view_insert_input {
  api_name: String
  archived: Boolean
  author_label: String
  character_limit: Int
  child_label: String
  city_label: String
  combined_word_limit_id: Int
  country_label: String
  created_at: timestamptz
  data_type: question_data_types
  depends_on: Int
  depends_on_option: String
  et_al_question_text: String
  event_id: Int
  file_size_limit_mb: numeric
  file_types: _text
  has_canonical_affiliations_search: Boolean
  has_et_al_toggle: Boolean
  has_poster_download: Boolean
  has_secure_programme_permission_toggle: Boolean
  in_poster_gallery: Boolean
  in_programme: Boolean
  institution_label: String
  is_authors_affiliations: Boolean
  is_category: Boolean
  is_dependency_parent: Boolean
  is_poster_keywords: Boolean
  is_poster_link: Boolean
  is_poster_summary: Boolean
  is_poster_upload: Boolean
  is_title: Boolean
  mandatory_city: Boolean
  mandatory_country: Boolean
  mandatory_institution: Boolean
  mandatory_state: Boolean
  max_affiliations: Int
  max_authors: Int
  max_image_height: Int
  max_image_width: Int
  minimal_text_input: Boolean
  num_of_list_inputs: Int
  parent_label: String
  presenting_multiple: Boolean
  question_id: Int
  question_name: String
  question_stage_options: questions_stage_options_view_arr_rel_insert_input
  row_count: Int
  secure_programme_permission_question_text: String
  select_limit: Int
  show_city: Boolean
  show_country: Boolean
  show_institution: Boolean
  show_state: Boolean
  state_label: String
  tabular_columns: _text
  tabular_rows: _text
  time_stamp: bigint
  word_limit: Int
}

"""aggregate max on columns"""
type questions_view_max_fields {
   api_name: String
   author_label: String
   character_limit: Int
   child_label: String
   city_label: String
   combined_word_limit_id: Int
   country_label: String
   created_at: timestamptz
   data_type: question_data_types
   depends_on: Int
   depends_on_option: String
   et_al_question_text: String
   event_id: Int
   file_size_limit_mb: numeric
   institution_label: String
   max_affiliations: Int
   max_authors: Int
   max_image_height: Int
   max_image_width: Int
   num_of_list_inputs: Int
   parent_label: String
   question_id: Int
   question_name: String
   row_count: Int
   secure_programme_permission_question_text: String
   select_limit: Int
   state_label: String
   time_stamp: bigint
   word_limit: Int
}

"""aggregate min on columns"""
type questions_view_min_fields {
   api_name: String
   author_label: String
   character_limit: Int
   child_label: String
   city_label: String
   combined_word_limit_id: Int
   country_label: String
   created_at: timestamptz
   data_type: question_data_types
   depends_on: Int
   depends_on_option: String
   et_al_question_text: String
   event_id: Int
   file_size_limit_mb: numeric
   institution_label: String
   max_affiliations: Int
   max_authors: Int
   max_image_height: Int
   max_image_width: Int
   num_of_list_inputs: Int
   parent_label: String
   question_id: Int
   question_name: String
   row_count: Int
   secure_programme_permission_question_text: String
   select_limit: Int
   state_label: String
   time_stamp: bigint
   word_limit: Int
}

"""
response of any mutation on the table "questions_view"
"""
type questions_view_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [questions_view! ]! 
}

"""
input type for inserting object relation for remote table "questions_view"
"""
input questions_view_obj_rel_insert_input {
  data: questions_view_insert_input! 
}

"""Ordering options when selecting data from "questions_view"."""
input questions_view_order_by {
  api_name: order_by
  archived: order_by
  author_label: order_by
  character_limit: order_by
  child_label: order_by
  city_label: order_by
  combined_word_limit_id: order_by
  country_label: order_by
  created_at: order_by
  data_type: order_by
  depends_on: order_by
  depends_on_option: order_by
  et_al_question_text: order_by
  event_id: order_by
  file_size_limit_mb: order_by
  file_types: order_by
  has_canonical_affiliations_search: order_by
  has_et_al_toggle: order_by
  has_poster_download: order_by
  has_secure_programme_permission_toggle: order_by
  in_poster_gallery: order_by
  in_programme: order_by
  institution_label: order_by
  is_authors_affiliations: order_by
  is_category: order_by
  is_dependency_parent: order_by
  is_poster_keywords: order_by
  is_poster_link: order_by
  is_poster_summary: order_by
  is_poster_upload: order_by
  is_title: order_by
  mandatory_city: order_by
  mandatory_country: order_by
  mandatory_institution: order_by
  mandatory_state: order_by
  max_affiliations: order_by
  max_authors: order_by
  max_image_height: order_by
  max_image_width: order_by
  minimal_text_input: order_by
  num_of_list_inputs: order_by
  parent_label: order_by
  presenting_multiple: order_by
  question_id: order_by
  question_name: order_by
  question_stage_options_aggregate: questions_stage_options_view_aggregate_order_by
  row_count: order_by
  secure_programme_permission_question_text: order_by
  select_limit: order_by
  show_city: order_by
  show_country: order_by
  show_institution: order_by
  show_state: order_by
  state_label: order_by
  tabular_columns: order_by
  tabular_rows: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""
select columns of table "questions_view"
"""
enum questions_view_select_column {
  """column name"""
api_name
  """column name"""
archived
  """column name"""
author_label
  """column name"""
character_limit
  """column name"""
child_label
  """column name"""
city_label
  """column name"""
combined_word_limit_id
  """column name"""
country_label
  """column name"""
created_at
  """column name"""
data_type
  """column name"""
depends_on
  """column name"""
depends_on_option
  """column name"""
et_al_question_text
  """column name"""
event_id
  """column name"""
file_size_limit_mb
  """column name"""
file_types
  """column name"""
has_canonical_affiliations_search
  """column name"""
has_et_al_toggle
  """column name"""
has_poster_download
  """column name"""
has_secure_programme_permission_toggle
  """column name"""
in_poster_gallery
  """column name"""
in_programme
  """column name"""
institution_label
  """column name"""
is_authors_affiliations
  """column name"""
is_category
  """column name"""
is_dependency_parent
  """column name"""
is_poster_keywords
  """column name"""
is_poster_link
  """column name"""
is_poster_summary
  """column name"""
is_poster_upload
  """column name"""
is_title
  """column name"""
mandatory_city
  """column name"""
mandatory_country
  """column name"""
mandatory_institution
  """column name"""
mandatory_state
  """column name"""
max_affiliations
  """column name"""
max_authors
  """column name"""
max_image_height
  """column name"""
max_image_width
  """column name"""
minimal_text_input
  """column name"""
num_of_list_inputs
  """column name"""
parent_label
  """column name"""
presenting_multiple
  """column name"""
question_id
  """column name"""
question_name
  """column name"""
row_count
  """column name"""
secure_programme_permission_question_text
  """column name"""
select_limit
  """column name"""
show_city
  """column name"""
show_country
  """column name"""
show_institution
  """column name"""
show_state
  """column name"""
state_label
  """column name"""
tabular_columns
  """column name"""
tabular_rows
  """column name"""
time_stamp
  """column name"""
word_limit
}

"""
input type for updating data in table "questions_view"
"""
input questions_view_set_input {
  api_name: String
  archived: Boolean
  author_label: String
  character_limit: Int
  child_label: String
  city_label: String
  combined_word_limit_id: Int
  country_label: String
  created_at: timestamptz
  data_type: question_data_types
  depends_on: Int
  depends_on_option: String
  et_al_question_text: String
  event_id: Int
  file_size_limit_mb: numeric
  file_types: _text
  has_canonical_affiliations_search: Boolean
  has_et_al_toggle: Boolean
  has_poster_download: Boolean
  has_secure_programme_permission_toggle: Boolean
  in_poster_gallery: Boolean
  in_programme: Boolean
  institution_label: String
  is_authors_affiliations: Boolean
  is_category: Boolean
  is_dependency_parent: Boolean
  is_poster_keywords: Boolean
  is_poster_link: Boolean
  is_poster_summary: Boolean
  is_poster_upload: Boolean
  is_title: Boolean
  mandatory_city: Boolean
  mandatory_country: Boolean
  mandatory_institution: Boolean
  mandatory_state: Boolean
  max_affiliations: Int
  max_authors: Int
  max_image_height: Int
  max_image_width: Int
  minimal_text_input: Boolean
  num_of_list_inputs: Int
  parent_label: String
  presenting_multiple: Boolean
  question_id: Int
  question_name: String
  row_count: Int
  secure_programme_permission_question_text: String
  select_limit: Int
  show_city: Boolean
  show_country: Boolean
  show_institution: Boolean
  show_state: Boolean
  state_label: String
  tabular_columns: _text
  tabular_rows: _text
  time_stamp: bigint
  word_limit: Int
}

"""aggregate stddev on columns"""
type questions_view_stddev_fields {
   character_limit: Float
   combined_word_limit_id: Float
   depends_on: Float
   event_id: Float
   file_size_limit_mb: Float
   max_affiliations: Float
   max_authors: Float
   max_image_height: Float
   max_image_width: Float
   num_of_list_inputs: Float
   question_id: Float
   row_count: Float
   select_limit: Float
   time_stamp: Float
   word_limit: Float
}

"""aggregate stddev_pop on columns"""
type questions_view_stddev_pop_fields {
   character_limit: Float
   combined_word_limit_id: Float
   depends_on: Float
   event_id: Float
   file_size_limit_mb: Float
   max_affiliations: Float
   max_authors: Float
   max_image_height: Float
   max_image_width: Float
   num_of_list_inputs: Float
   question_id: Float
   row_count: Float
   select_limit: Float
   time_stamp: Float
   word_limit: Float
}

"""aggregate stddev_samp on columns"""
type questions_view_stddev_samp_fields {
   character_limit: Float
   combined_word_limit_id: Float
   depends_on: Float
   event_id: Float
   file_size_limit_mb: Float
   max_affiliations: Float
   max_authors: Float
   max_image_height: Float
   max_image_width: Float
   num_of_list_inputs: Float
   question_id: Float
   row_count: Float
   select_limit: Float
   time_stamp: Float
   word_limit: Float
}

"""
Streaming cursor of the table "questions_view"
"""
input questions_view_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: questions_view_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input questions_view_stream_cursor_value_input {
  api_name: String
  archived: Boolean
  author_label: String
  character_limit: Int
  child_label: String
  city_label: String
  combined_word_limit_id: Int
  country_label: String
  created_at: timestamptz
  data_type: question_data_types
  depends_on: Int
  depends_on_option: String
  et_al_question_text: String
  event_id: Int
  file_size_limit_mb: numeric
  file_types: _text
  has_canonical_affiliations_search: Boolean
  has_et_al_toggle: Boolean
  has_poster_download: Boolean
  has_secure_programme_permission_toggle: Boolean
  in_poster_gallery: Boolean
  in_programme: Boolean
  institution_label: String
  is_authors_affiliations: Boolean
  is_category: Boolean
  is_dependency_parent: Boolean
  is_poster_keywords: Boolean
  is_poster_link: Boolean
  is_poster_summary: Boolean
  is_poster_upload: Boolean
  is_title: Boolean
  mandatory_city: Boolean
  mandatory_country: Boolean
  mandatory_institution: Boolean
  mandatory_state: Boolean
  max_affiliations: Int
  max_authors: Int
  max_image_height: Int
  max_image_width: Int
  minimal_text_input: Boolean
  num_of_list_inputs: Int
  parent_label: String
  presenting_multiple: Boolean
  question_id: Int
  question_name: String
  row_count: Int
  secure_programme_permission_question_text: String
  select_limit: Int
  show_city: Boolean
  show_country: Boolean
  show_institution: Boolean
  show_state: Boolean
  state_label: String
  tabular_columns: _text
  tabular_rows: _text
  time_stamp: bigint
  word_limit: Int
}

"""aggregate sum on columns"""
type questions_view_sum_fields {
   character_limit: Int
   combined_word_limit_id: Int
   depends_on: Int
   event_id: Int
   file_size_limit_mb: numeric
   max_affiliations: Int
   max_authors: Int
   max_image_height: Int
   max_image_width: Int
   num_of_list_inputs: Int
   question_id: Int
   row_count: Int
   select_limit: Int
   time_stamp: bigint
   word_limit: Int
}

input questions_view_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: questions_view_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: questions_view_set_input
  where: questions_view_bool_exp! 
}

"""aggregate var_pop on columns"""
type questions_view_var_pop_fields {
   character_limit: Float
   combined_word_limit_id: Float
   depends_on: Float
   event_id: Float
   file_size_limit_mb: Float
   max_affiliations: Float
   max_authors: Float
   max_image_height: Float
   max_image_width: Float
   num_of_list_inputs: Float
   question_id: Float
   row_count: Float
   select_limit: Float
   time_stamp: Float
   word_limit: Float
}

"""aggregate var_samp on columns"""
type questions_view_var_samp_fields {
   character_limit: Float
   combined_word_limit_id: Float
   depends_on: Float
   event_id: Float
   file_size_limit_mb: Float
   max_affiliations: Float
   max_authors: Float
   max_image_height: Float
   max_image_width: Float
   num_of_list_inputs: Float
   question_id: Float
   row_count: Float
   select_limit: Float
   time_stamp: Float
   word_limit: Float
}

"""aggregate variance on columns"""
type questions_view_variance_fields {
   character_limit: Float
   combined_word_limit_id: Float
   depends_on: Float
   event_id: Float
   file_size_limit_mb: Float
   max_affiliations: Float
   max_authors: Float
   max_image_height: Float
   max_image_width: Float
   num_of_list_inputs: Float
   question_id: Float
   row_count: Float
   select_limit: Float
   time_stamp: Float
   word_limit: Float
}

"""
columns and relationships of "ratings"
"""
type ratings {
   allows_follow_up: Boolean
   app: String
   contacted: Boolean! 
   created_at: timestamp! 
   event_id: Int
   feedback: String
   good: Boolean! 
   id: Int! 
   soaa_notes: String! 
   stars: Int
   url: String
  """An object relationship"""
 user: users! 
   user_agent: String
   user_id: Int! 
}

"""
aggregated selection of "ratings"
"""
type ratings_aggregate {
   aggregate: ratings_aggregate_fields
   nodes: [ratings! ]! 
}

"""
aggregate fields of "ratings"
"""
type ratings_aggregate_fields {
   avg: ratings_avg_fields
   count(columns: [ratings_select_column! ], distinct: Boolean): Int! 
   max: ratings_max_fields
   min: ratings_min_fields
   stddev: ratings_stddev_fields
   stddev_pop: ratings_stddev_pop_fields
   stddev_samp: ratings_stddev_samp_fields
   sum: ratings_sum_fields
   var_pop: ratings_var_pop_fields
   var_samp: ratings_var_samp_fields
   variance: ratings_variance_fields
}

"""aggregate avg on columns"""
type ratings_avg_fields {
   event_id: Float
   id: Float
   stars: Float
   user_id: Float
}

"""
Boolean expression to filter rows from the table "ratings". All fields are combined with a logical 'AND'.
"""
input ratings_bool_exp {
  _and: [ratings_bool_exp! ]
  _not: ratings_bool_exp
  _or: [ratings_bool_exp! ]
  allows_follow_up: Boolean_comparison_exp
  app: String_comparison_exp
  contacted: Boolean_comparison_exp
  created_at: timestamp_comparison_exp
  event_id: Int_comparison_exp
  feedback: String_comparison_exp
  good: Boolean_comparison_exp
  id: Int_comparison_exp
  soaa_notes: String_comparison_exp
  stars: Int_comparison_exp
  url: String_comparison_exp
  user: users_bool_exp
  user_agent: String_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "ratings"
"""
enum ratings_constraint {
  """
  unique or primary key constraint on columns "id"
  """
ratings_pkey
}

"""
input type for incrementing numeric columns in table "ratings"
"""
input ratings_inc_input {
  event_id: Int
  id: Int
  stars: Int
  user_id: Int
}

"""
input type for inserting data into table "ratings"
"""
input ratings_insert_input {
  allows_follow_up: Boolean
  app: String
  contacted: Boolean! 
  created_at: timestamp! 
  event_id: Int
  feedback: String
  good: Boolean! 
  id: Int! 
  soaa_notes: String! 
  stars: Int
  url: String
  user: users_obj_rel_insert_input
  user_agent: String
  user_id: Int! 
}

"""aggregate max on columns"""
type ratings_max_fields {
   app: String
   created_at: timestamp
   event_id: Int
   feedback: String
   id: Int
   soaa_notes: String
   stars: Int
   url: String
   user_agent: String
   user_id: Int
}

"""aggregate min on columns"""
type ratings_min_fields {
   app: String
   created_at: timestamp
   event_id: Int
   feedback: String
   id: Int
   soaa_notes: String
   stars: Int
   url: String
   user_agent: String
   user_id: Int
}

"""
response of any mutation on the table "ratings"
"""
type ratings_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [ratings! ]! 
}

"""
on_conflict condition type for table "ratings"
"""
input ratings_on_conflict {
  constraint: ratings_constraint! 
  update_columns: [ratings_update_column! ]! 
  where: ratings_bool_exp
}

"""Ordering options when selecting data from "ratings"."""
input ratings_order_by {
  allows_follow_up: order_by
  app: order_by
  contacted: order_by
  created_at: order_by
  event_id: order_by
  feedback: order_by
  good: order_by
  id: order_by
  soaa_notes: order_by
  stars: order_by
  url: order_by
  user: users_order_by
  user_agent: order_by
  user_id: order_by
}

"""primary key columns input for table: ratings"""
input ratings_pk_columns_input {
  id: Int! 
}

"""
select columns of table "ratings"
"""
enum ratings_select_column {
  """column name"""
allows_follow_up
  """column name"""
app
  """column name"""
contacted
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
feedback
  """column name"""
good
  """column name"""
id
  """column name"""
soaa_notes
  """column name"""
stars
  """column name"""
url
  """column name"""
user_agent
  """column name"""
user_id
}

"""
input type for updating data in table "ratings"
"""
input ratings_set_input {
  allows_follow_up: Boolean
  app: String
  contacted: Boolean
  created_at: timestamp
  event_id: Int
  feedback: String
  good: Boolean
  id: Int
  soaa_notes: String
  stars: Int
  url: String
  user_agent: String
  user_id: Int
}

"""aggregate stddev on columns"""
type ratings_stddev_fields {
   event_id: Float
   id: Float
   stars: Float
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type ratings_stddev_pop_fields {
   event_id: Float
   id: Float
   stars: Float
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type ratings_stddev_samp_fields {
   event_id: Float
   id: Float
   stars: Float
   user_id: Float
}

"""
Streaming cursor of the table "ratings"
"""
input ratings_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: ratings_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input ratings_stream_cursor_value_input {
  allows_follow_up: Boolean
  app: String
  contacted: Boolean
  created_at: timestamp
  event_id: Int
  feedback: String
  good: Boolean
  id: Int
  soaa_notes: String
  stars: Int
  url: String
  user_agent: String
  user_id: Int
}

"""aggregate sum on columns"""
type ratings_sum_fields {
   event_id: Int
   id: Int
   stars: Int
   user_id: Int
}

"""
update columns of table "ratings"
"""
enum ratings_update_column {
  """column name"""
allows_follow_up
  """column name"""
app
  """column name"""
contacted
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
feedback
  """column name"""
good
  """column name"""
id
  """column name"""
soaa_notes
  """column name"""
stars
  """column name"""
url
  """column name"""
user_agent
  """column name"""
user_id
}

input ratings_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: ratings_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: ratings_set_input
  where: ratings_bool_exp! 
}

"""aggregate var_pop on columns"""
type ratings_var_pop_fields {
   event_id: Float
   id: Float
   stars: Float
   user_id: Float
}

"""aggregate var_samp on columns"""
type ratings_var_samp_fields {
   event_id: Float
   id: Float
   stars: Float
   user_id: Float
}

"""aggregate variance on columns"""
type ratings_variance_fields {
   event_id: Float
   id: Float
   stars: Float
   user_id: Float
}

"""
columns and relationships of "read_by_user_program_comments"
"""
type read_by_user_program_comments {
   cleared: Boolean! 
   created_at: timestamptz! 
   id: Int! 
   opened: Boolean! 
  """An object relationship"""
 program_sessions_comment: program_sessions_comments
  """An object relationship"""
 program_submissions_comment: program_submissions_comments
  """An object relationship"""
 program_symposium_comment: program_symposium_comments
   session_comment_id: Int
   submission_comment_id: Int
   symposium_comment_id: Int
  """An object relationship"""
 user: users! 
   user_id: Int! 
}

"""
aggregated selection of "read_by_user_program_comments"
"""
type read_by_user_program_comments_aggregate {
   aggregate: read_by_user_program_comments_aggregate_fields
   nodes: [read_by_user_program_comments! ]! 
}

input read_by_user_program_comments_aggregate_bool_exp {
  bool_and: read_by_user_program_comments_aggregate_bool_exp_bool_and
  bool_or: read_by_user_program_comments_aggregate_bool_exp_bool_or
  count: read_by_user_program_comments_aggregate_bool_exp_count
}

input read_by_user_program_comments_aggregate_bool_exp_bool_and {
  arguments: read_by_user_program_comments_select_column_read_by_user_program_comments_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: read_by_user_program_comments_bool_exp
  predicate: Boolean_comparison_exp! 
}

input read_by_user_program_comments_aggregate_bool_exp_bool_or {
  arguments: read_by_user_program_comments_select_column_read_by_user_program_comments_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: read_by_user_program_comments_bool_exp
  predicate: Boolean_comparison_exp! 
}

input read_by_user_program_comments_aggregate_bool_exp_count {
  arguments: [read_by_user_program_comments_select_column! ]
  distinct: Boolean
  filter: read_by_user_program_comments_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "read_by_user_program_comments"
"""
type read_by_user_program_comments_aggregate_fields {
   avg: read_by_user_program_comments_avg_fields
   count(columns: [read_by_user_program_comments_select_column! ], distinct: Boolean): Int! 
   max: read_by_user_program_comments_max_fields
   min: read_by_user_program_comments_min_fields
   stddev: read_by_user_program_comments_stddev_fields
   stddev_pop: read_by_user_program_comments_stddev_pop_fields
   stddev_samp: read_by_user_program_comments_stddev_samp_fields
   sum: read_by_user_program_comments_sum_fields
   var_pop: read_by_user_program_comments_var_pop_fields
   var_samp: read_by_user_program_comments_var_samp_fields
   variance: read_by_user_program_comments_variance_fields
}

"""
order by aggregate values of table "read_by_user_program_comments"
"""
input read_by_user_program_comments_aggregate_order_by {
  avg: read_by_user_program_comments_avg_order_by
  count: order_by
  max: read_by_user_program_comments_max_order_by
  min: read_by_user_program_comments_min_order_by
  stddev: read_by_user_program_comments_stddev_order_by
  stddev_pop: read_by_user_program_comments_stddev_pop_order_by
  stddev_samp: read_by_user_program_comments_stddev_samp_order_by
  sum: read_by_user_program_comments_sum_order_by
  var_pop: read_by_user_program_comments_var_pop_order_by
  var_samp: read_by_user_program_comments_var_samp_order_by
  variance: read_by_user_program_comments_variance_order_by
}

"""
input type for inserting array relation for remote table "read_by_user_program_comments"
"""
input read_by_user_program_comments_arr_rel_insert_input {
  data: [read_by_user_program_comments_insert_input! ]! 
  """upsert condition"""
on_conflict: read_by_user_program_comments_on_conflict
}

"""aggregate avg on columns"""
type read_by_user_program_comments_avg_fields {
   id: Float
   session_comment_id: Float
   submission_comment_id: Float
   symposium_comment_id: Float
   user_id: Float
}

"""
order by avg() on columns of table "read_by_user_program_comments"
"""
input read_by_user_program_comments_avg_order_by {
  id: order_by
  session_comment_id: order_by
  submission_comment_id: order_by
  symposium_comment_id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "read_by_user_program_comments". All fields are combined with a logical 'AND'.
"""
input read_by_user_program_comments_bool_exp {
  _and: [read_by_user_program_comments_bool_exp! ]
  _not: read_by_user_program_comments_bool_exp
  _or: [read_by_user_program_comments_bool_exp! ]
  cleared: Boolean_comparison_exp
  created_at: timestamptz_comparison_exp
  id: Int_comparison_exp
  opened: Boolean_comparison_exp
  program_sessions_comment: program_sessions_comments_bool_exp
  program_submissions_comment: program_submissions_comments_bool_exp
  program_symposium_comment: program_symposium_comments_bool_exp
  session_comment_id: Int_comparison_exp
  submission_comment_id: Int_comparison_exp
  symposium_comment_id: Int_comparison_exp
  user: users_bool_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "read_by_user_program_comments"
"""
enum read_by_user_program_comments_constraint {
  """
  unique or primary key constraint on columns "id"
  """
read_by_user_program_comments_pkey
  """
  unique or primary key constraint on columns "user_id", "session_comment_id"
  """
read_by_user_program_comments_user_id_session_comment_id_key
  """
  unique or primary key constraint on columns "user_id", "submission_comment_id"
  """
read_by_user_program_comments_user_id_submission_comment_id_key
  """
  unique or primary key constraint on columns "symposium_comment_id", "user_id"
  """
read_by_user_program_comments_user_id_symposium_comment_id_key
}

"""
input type for incrementing numeric columns in table "read_by_user_program_comments"
"""
input read_by_user_program_comments_inc_input {
  id: Int
  session_comment_id: Int
  submission_comment_id: Int
  symposium_comment_id: Int
  user_id: Int
}

"""
input type for inserting data into table "read_by_user_program_comments"
"""
input read_by_user_program_comments_insert_input {
  cleared: Boolean! 
  created_at: timestamptz! 
  id: Int! 
  opened: Boolean! 
  program_sessions_comment: program_sessions_comments_obj_rel_insert_input
  program_submissions_comment: program_submissions_comments_obj_rel_insert_input
  program_symposium_comment: program_symposium_comments_obj_rel_insert_input
  session_comment_id: Int
  submission_comment_id: Int
  symposium_comment_id: Int
  user: users_obj_rel_insert_input
  user_id: Int! 
}

"""aggregate max on columns"""
type read_by_user_program_comments_max_fields {
   created_at: timestamptz
   id: Int
   session_comment_id: Int
   submission_comment_id: Int
   symposium_comment_id: Int
   user_id: Int
}

"""
order by max() on columns of table "read_by_user_program_comments"
"""
input read_by_user_program_comments_max_order_by {
  created_at: order_by
  id: order_by
  session_comment_id: order_by
  submission_comment_id: order_by
  symposium_comment_id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type read_by_user_program_comments_min_fields {
   created_at: timestamptz
   id: Int
   session_comment_id: Int
   submission_comment_id: Int
   symposium_comment_id: Int
   user_id: Int
}

"""
order by min() on columns of table "read_by_user_program_comments"
"""
input read_by_user_program_comments_min_order_by {
  created_at: order_by
  id: order_by
  session_comment_id: order_by
  submission_comment_id: order_by
  symposium_comment_id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "read_by_user_program_comments"
"""
type read_by_user_program_comments_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [read_by_user_program_comments! ]! 
}

"""
on_conflict condition type for table "read_by_user_program_comments"
"""
input read_by_user_program_comments_on_conflict {
  constraint: read_by_user_program_comments_constraint! 
  update_columns: [read_by_user_program_comments_update_column! ]! 
  where: read_by_user_program_comments_bool_exp
}

"""
Ordering options when selecting data from "read_by_user_program_comments".
"""
input read_by_user_program_comments_order_by {
  cleared: order_by
  created_at: order_by
  id: order_by
  opened: order_by
  program_sessions_comment: program_sessions_comments_order_by
  program_submissions_comment: program_submissions_comments_order_by
  program_symposium_comment: program_symposium_comments_order_by
  session_comment_id: order_by
  submission_comment_id: order_by
  symposium_comment_id: order_by
  user: users_order_by
  user_id: order_by
}

"""primary key columns input for table: read_by_user_program_comments"""
input read_by_user_program_comments_pk_columns_input {
  id: Int! 
}

"""
select columns of table "read_by_user_program_comments"
"""
enum read_by_user_program_comments_select_column {
  """column name"""
cleared
  """column name"""
created_at
  """column name"""
id
  """column name"""
opened
  """column name"""
session_comment_id
  """column name"""
submission_comment_id
  """column name"""
symposium_comment_id
  """column name"""
user_id
}

"""
select "read_by_user_program_comments_aggregate_bool_exp_bool_and_arguments_columns" columns of table "read_by_user_program_comments"
"""
enum read_by_user_program_comments_select_column_read_by_user_program_comments_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
cleared
  """column name"""
opened
}

"""
select "read_by_user_program_comments_aggregate_bool_exp_bool_or_arguments_columns" columns of table "read_by_user_program_comments"
"""
enum read_by_user_program_comments_select_column_read_by_user_program_comments_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
cleared
  """column name"""
opened
}

"""
input type for updating data in table "read_by_user_program_comments"
"""
input read_by_user_program_comments_set_input {
  cleared: Boolean
  created_at: timestamptz
  id: Int
  opened: Boolean
  session_comment_id: Int
  submission_comment_id: Int
  symposium_comment_id: Int
  user_id: Int
}

"""aggregate stddev on columns"""
type read_by_user_program_comments_stddev_fields {
   id: Float
   session_comment_id: Float
   submission_comment_id: Float
   symposium_comment_id: Float
   user_id: Float
}

"""
order by stddev() on columns of table "read_by_user_program_comments"
"""
input read_by_user_program_comments_stddev_order_by {
  id: order_by
  session_comment_id: order_by
  submission_comment_id: order_by
  symposium_comment_id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type read_by_user_program_comments_stddev_pop_fields {
   id: Float
   session_comment_id: Float
   submission_comment_id: Float
   symposium_comment_id: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "read_by_user_program_comments"
"""
input read_by_user_program_comments_stddev_pop_order_by {
  id: order_by
  session_comment_id: order_by
  submission_comment_id: order_by
  symposium_comment_id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type read_by_user_program_comments_stddev_samp_fields {
   id: Float
   session_comment_id: Float
   submission_comment_id: Float
   symposium_comment_id: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "read_by_user_program_comments"
"""
input read_by_user_program_comments_stddev_samp_order_by {
  id: order_by
  session_comment_id: order_by
  submission_comment_id: order_by
  symposium_comment_id: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "read_by_user_program_comments"
"""
input read_by_user_program_comments_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: read_by_user_program_comments_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input read_by_user_program_comments_stream_cursor_value_input {
  cleared: Boolean
  created_at: timestamptz
  id: Int
  opened: Boolean
  session_comment_id: Int
  submission_comment_id: Int
  symposium_comment_id: Int
  user_id: Int
}

"""aggregate sum on columns"""
type read_by_user_program_comments_sum_fields {
   id: Int
   session_comment_id: Int
   submission_comment_id: Int
   symposium_comment_id: Int
   user_id: Int
}

"""
order by sum() on columns of table "read_by_user_program_comments"
"""
input read_by_user_program_comments_sum_order_by {
  id: order_by
  session_comment_id: order_by
  submission_comment_id: order_by
  symposium_comment_id: order_by
  user_id: order_by
}

"""
update columns of table "read_by_user_program_comments"
"""
enum read_by_user_program_comments_update_column {
  """column name"""
cleared
  """column name"""
created_at
  """column name"""
id
  """column name"""
opened
  """column name"""
session_comment_id
  """column name"""
submission_comment_id
  """column name"""
symposium_comment_id
  """column name"""
user_id
}

input read_by_user_program_comments_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: read_by_user_program_comments_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: read_by_user_program_comments_set_input
  where: read_by_user_program_comments_bool_exp! 
}

"""aggregate var_pop on columns"""
type read_by_user_program_comments_var_pop_fields {
   id: Float
   session_comment_id: Float
   submission_comment_id: Float
   symposium_comment_id: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "read_by_user_program_comments"
"""
input read_by_user_program_comments_var_pop_order_by {
  id: order_by
  session_comment_id: order_by
  submission_comment_id: order_by
  symposium_comment_id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type read_by_user_program_comments_var_samp_fields {
   id: Float
   session_comment_id: Float
   submission_comment_id: Float
   symposium_comment_id: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "read_by_user_program_comments"
"""
input read_by_user_program_comments_var_samp_order_by {
  id: order_by
  session_comment_id: order_by
  submission_comment_id: order_by
  symposium_comment_id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type read_by_user_program_comments_variance_fields {
   id: Float
   session_comment_id: Float
   submission_comment_id: Float
   symposium_comment_id: Float
   user_id: Float
}

"""
order by variance() on columns of table "read_by_user_program_comments"
"""
input read_by_user_program_comments_variance_order_by {
  id: order_by
  session_comment_id: order_by
  submission_comment_id: order_by
  symposium_comment_id: order_by
  user_id: order_by
}

"""Total OA monthly revenue"""
type revenues {
   created_at: timestamptz! 
   month: Int! 
   revenue: numeric! 
   updated_at: timestamptz! 
   year: Int! 
}

"""
aggregated selection of "revenues"
"""
type revenues_aggregate {
   aggregate: revenues_aggregate_fields
   nodes: [revenues! ]! 
}

"""
aggregate fields of "revenues"
"""
type revenues_aggregate_fields {
   avg: revenues_avg_fields
   count(columns: [revenues_select_column! ], distinct: Boolean): Int! 
   max: revenues_max_fields
   min: revenues_min_fields
   stddev: revenues_stddev_fields
   stddev_pop: revenues_stddev_pop_fields
   stddev_samp: revenues_stddev_samp_fields
   sum: revenues_sum_fields
   var_pop: revenues_var_pop_fields
   var_samp: revenues_var_samp_fields
   variance: revenues_variance_fields
}

"""aggregate avg on columns"""
type revenues_avg_fields {
   month: Float
   revenue: Float
   year: Float
}

"""
Boolean expression to filter rows from the table "revenues". All fields are combined with a logical 'AND'.
"""
input revenues_bool_exp {
  _and: [revenues_bool_exp! ]
  _not: revenues_bool_exp
  _or: [revenues_bool_exp! ]
  created_at: timestamptz_comparison_exp
  month: Int_comparison_exp
  revenue: numeric_comparison_exp
  updated_at: timestamptz_comparison_exp
  year: Int_comparison_exp
}

"""
unique or primary key constraints on table "revenues"
"""
enum revenues_constraint {
  """
  unique or primary key constraint on columns "year", "month"
  """
revenues_pkey
}

"""
input type for incrementing numeric columns in table "revenues"
"""
input revenues_inc_input {
  month: Int
  revenue: numeric
  year: Int
}

"""
input type for inserting data into table "revenues"
"""
input revenues_insert_input {
  created_at: timestamptz! 
  month: Int! 
  revenue: numeric! 
  updated_at: timestamptz! 
  year: Int! 
}

"""aggregate max on columns"""
type revenues_max_fields {
   created_at: timestamptz
   month: Int
   revenue: numeric
   updated_at: timestamptz
   year: Int
}

"""aggregate min on columns"""
type revenues_min_fields {
   created_at: timestamptz
   month: Int
   revenue: numeric
   updated_at: timestamptz
   year: Int
}

"""
response of any mutation on the table "revenues"
"""
type revenues_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [revenues! ]! 
}

"""
on_conflict condition type for table "revenues"
"""
input revenues_on_conflict {
  constraint: revenues_constraint! 
  update_columns: [revenues_update_column! ]! 
  where: revenues_bool_exp
}

"""Ordering options when selecting data from "revenues"."""
input revenues_order_by {
  created_at: order_by
  month: order_by
  revenue: order_by
  updated_at: order_by
  year: order_by
}

"""primary key columns input for table: revenues"""
input revenues_pk_columns_input {
  month: Int! 
  year: Int! 
}

"""
select columns of table "revenues"
"""
enum revenues_select_column {
  """column name"""
created_at
  """column name"""
month
  """column name"""
revenue
  """column name"""
updated_at
  """column name"""
year
}

"""
input type for updating data in table "revenues"
"""
input revenues_set_input {
  created_at: timestamptz
  month: Int
  revenue: numeric
  updated_at: timestamptz
  year: Int
}

"""aggregate stddev on columns"""
type revenues_stddev_fields {
   month: Float
   revenue: Float
   year: Float
}

"""aggregate stddev_pop on columns"""
type revenues_stddev_pop_fields {
   month: Float
   revenue: Float
   year: Float
}

"""aggregate stddev_samp on columns"""
type revenues_stddev_samp_fields {
   month: Float
   revenue: Float
   year: Float
}

"""
Streaming cursor of the table "revenues"
"""
input revenues_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: revenues_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input revenues_stream_cursor_value_input {
  created_at: timestamptz
  month: Int
  revenue: numeric
  updated_at: timestamptz
  year: Int
}

"""aggregate sum on columns"""
type revenues_sum_fields {
   month: Int
   revenue: numeric
   year: Int
}

"""
update columns of table "revenues"
"""
enum revenues_update_column {
  """column name"""
created_at
  """column name"""
month
  """column name"""
revenue
  """column name"""
updated_at
  """column name"""
year
}

input revenues_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: revenues_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: revenues_set_input
  where: revenues_bool_exp! 
}

"""aggregate var_pop on columns"""
type revenues_var_pop_fields {
   month: Float
   revenue: Float
   year: Float
}

"""aggregate var_samp on columns"""
type revenues_var_samp_fields {
   month: Float
   revenue: Float
   year: Float
}

"""aggregate variance on columns"""
type revenues_variance_fields {
   month: Float
   revenue: Float
   year: Float
}

"""
columns and relationships of "review_dates"
"""
type review_dates {
   created_at: timestamptz! 
   id: Int! 
  """An object relationship"""
 review: reviews! 
   review_id: Int! 
}

"""
aggregated selection of "review_dates"
"""
type review_dates_aggregate {
   aggregate: review_dates_aggregate_fields
   nodes: [review_dates! ]! 
}

input review_dates_aggregate_bool_exp {
  count: review_dates_aggregate_bool_exp_count
}

input review_dates_aggregate_bool_exp_count {
  arguments: [review_dates_select_column! ]
  distinct: Boolean
  filter: review_dates_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "review_dates"
"""
type review_dates_aggregate_fields {
   avg: review_dates_avg_fields
   count(columns: [review_dates_select_column! ], distinct: Boolean): Int! 
   max: review_dates_max_fields
   min: review_dates_min_fields
   stddev: review_dates_stddev_fields
   stddev_pop: review_dates_stddev_pop_fields
   stddev_samp: review_dates_stddev_samp_fields
   sum: review_dates_sum_fields
   var_pop: review_dates_var_pop_fields
   var_samp: review_dates_var_samp_fields
   variance: review_dates_variance_fields
}

"""
order by aggregate values of table "review_dates"
"""
input review_dates_aggregate_order_by {
  avg: review_dates_avg_order_by
  count: order_by
  max: review_dates_max_order_by
  min: review_dates_min_order_by
  stddev: review_dates_stddev_order_by
  stddev_pop: review_dates_stddev_pop_order_by
  stddev_samp: review_dates_stddev_samp_order_by
  sum: review_dates_sum_order_by
  var_pop: review_dates_var_pop_order_by
  var_samp: review_dates_var_samp_order_by
  variance: review_dates_variance_order_by
}

"""
input type for inserting array relation for remote table "review_dates"
"""
input review_dates_arr_rel_insert_input {
  data: [review_dates_insert_input! ]! 
  """upsert condition"""
on_conflict: review_dates_on_conflict
}

"""aggregate avg on columns"""
type review_dates_avg_fields {
   id: Float
   review_id: Float
}

"""
order by avg() on columns of table "review_dates"
"""
input review_dates_avg_order_by {
  id: order_by
  review_id: order_by
}

"""
Boolean expression to filter rows from the table "review_dates". All fields are combined with a logical 'AND'.
"""
input review_dates_bool_exp {
  _and: [review_dates_bool_exp! ]
  _not: review_dates_bool_exp
  _or: [review_dates_bool_exp! ]
  created_at: timestamptz_comparison_exp
  id: Int_comparison_exp
  review: reviews_bool_exp
  review_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "review_dates"
"""
enum review_dates_constraint {
  """
  unique or primary key constraint on columns "id"
  """
review_dates_pkey
}

"""
input type for incrementing numeric columns in table "review_dates"
"""
input review_dates_inc_input {
  id: Int
  review_id: Int
}

"""
input type for inserting data into table "review_dates"
"""
input review_dates_insert_input {
  created_at: timestamptz! 
  id: Int! 
  review: reviews_obj_rel_insert_input
  review_id: Int! 
}

"""aggregate max on columns"""
type review_dates_max_fields {
   created_at: timestamptz
   id: Int
   review_id: Int
}

"""
order by max() on columns of table "review_dates"
"""
input review_dates_max_order_by {
  created_at: order_by
  id: order_by
  review_id: order_by
}

"""aggregate min on columns"""
type review_dates_min_fields {
   created_at: timestamptz
   id: Int
   review_id: Int
}

"""
order by min() on columns of table "review_dates"
"""
input review_dates_min_order_by {
  created_at: order_by
  id: order_by
  review_id: order_by
}

"""
response of any mutation on the table "review_dates"
"""
type review_dates_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [review_dates! ]! 
}

"""
on_conflict condition type for table "review_dates"
"""
input review_dates_on_conflict {
  constraint: review_dates_constraint! 
  update_columns: [review_dates_update_column! ]! 
  where: review_dates_bool_exp
}

"""Ordering options when selecting data from "review_dates"."""
input review_dates_order_by {
  created_at: order_by
  id: order_by
  review: reviews_order_by
  review_id: order_by
}

"""primary key columns input for table: review_dates"""
input review_dates_pk_columns_input {
  id: Int! 
}

"""
select columns of table "review_dates"
"""
enum review_dates_select_column {
  """column name"""
created_at
  """column name"""
id
  """column name"""
review_id
}

"""
input type for updating data in table "review_dates"
"""
input review_dates_set_input {
  created_at: timestamptz
  id: Int
  review_id: Int
}

"""aggregate stddev on columns"""
type review_dates_stddev_fields {
   id: Float
   review_id: Float
}

"""
order by stddev() on columns of table "review_dates"
"""
input review_dates_stddev_order_by {
  id: order_by
  review_id: order_by
}

"""aggregate stddev_pop on columns"""
type review_dates_stddev_pop_fields {
   id: Float
   review_id: Float
}

"""
order by stddev_pop() on columns of table "review_dates"
"""
input review_dates_stddev_pop_order_by {
  id: order_by
  review_id: order_by
}

"""aggregate stddev_samp on columns"""
type review_dates_stddev_samp_fields {
   id: Float
   review_id: Float
}

"""
order by stddev_samp() on columns of table "review_dates"
"""
input review_dates_stddev_samp_order_by {
  id: order_by
  review_id: order_by
}

"""
Streaming cursor of the table "review_dates"
"""
input review_dates_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: review_dates_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input review_dates_stream_cursor_value_input {
  created_at: timestamptz
  id: Int
  review_id: Int
}

"""aggregate sum on columns"""
type review_dates_sum_fields {
   id: Int
   review_id: Int
}

"""
order by sum() on columns of table "review_dates"
"""
input review_dates_sum_order_by {
  id: order_by
  review_id: order_by
}

"""
update columns of table "review_dates"
"""
enum review_dates_update_column {
  """column name"""
created_at
  """column name"""
id
  """column name"""
review_id
}

input review_dates_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: review_dates_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: review_dates_set_input
  where: review_dates_bool_exp! 
}

"""aggregate var_pop on columns"""
type review_dates_var_pop_fields {
   id: Float
   review_id: Float
}

"""
order by var_pop() on columns of table "review_dates"
"""
input review_dates_var_pop_order_by {
  id: order_by
  review_id: order_by
}

"""aggregate var_samp on columns"""
type review_dates_var_samp_fields {
   id: Float
   review_id: Float
}

"""
order by var_samp() on columns of table "review_dates"
"""
input review_dates_var_samp_order_by {
  id: order_by
  review_id: order_by
}

"""aggregate variance on columns"""
type review_dates_variance_fields {
   id: Float
   review_id: Float
}

"""
order by variance() on columns of table "review_dates"
"""
input review_dates_variance_order_by {
  id: order_by
  review_id: order_by
}

"""
columns and relationships of "reviewer_admin_notes"
"""
type reviewer_admin_notes {
   event_id: Int! 
   user_id: Int! 
   value: String! 
}

"""
aggregated selection of "reviewer_admin_notes"
"""
type reviewer_admin_notes_aggregate {
   aggregate: reviewer_admin_notes_aggregate_fields
   nodes: [reviewer_admin_notes! ]! 
}

"""
aggregate fields of "reviewer_admin_notes"
"""
type reviewer_admin_notes_aggregate_fields {
   avg: reviewer_admin_notes_avg_fields
   count(columns: [reviewer_admin_notes_select_column! ], distinct: Boolean): Int! 
   max: reviewer_admin_notes_max_fields
   min: reviewer_admin_notes_min_fields
   stddev: reviewer_admin_notes_stddev_fields
   stddev_pop: reviewer_admin_notes_stddev_pop_fields
   stddev_samp: reviewer_admin_notes_stddev_samp_fields
   sum: reviewer_admin_notes_sum_fields
   var_pop: reviewer_admin_notes_var_pop_fields
   var_samp: reviewer_admin_notes_var_samp_fields
   variance: reviewer_admin_notes_variance_fields
}

"""aggregate avg on columns"""
type reviewer_admin_notes_avg_fields {
   event_id: Float
   user_id: Float
}

"""
Boolean expression to filter rows from the table "reviewer_admin_notes". All fields are combined with a logical 'AND'.
"""
input reviewer_admin_notes_bool_exp {
  _and: [reviewer_admin_notes_bool_exp! ]
  _not: reviewer_admin_notes_bool_exp
  _or: [reviewer_admin_notes_bool_exp! ]
  event_id: Int_comparison_exp
  user_id: Int_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "reviewer_admin_notes"
"""
enum reviewer_admin_notes_constraint {
  """
  unique or primary key constraint on columns "event_id", "user_id"
  """
reviewer_admin_notes_user_id_event_id_key
}

"""
input type for incrementing numeric columns in table "reviewer_admin_notes"
"""
input reviewer_admin_notes_inc_input {
  event_id: Int
  user_id: Int
}

"""
input type for inserting data into table "reviewer_admin_notes"
"""
input reviewer_admin_notes_insert_input {
  event_id: Int! 
  user_id: Int! 
  value: String! 
}

"""aggregate max on columns"""
type reviewer_admin_notes_max_fields {
   event_id: Int
   user_id: Int
   value: String
}

"""aggregate min on columns"""
type reviewer_admin_notes_min_fields {
   event_id: Int
   user_id: Int
   value: String
}

"""
response of any mutation on the table "reviewer_admin_notes"
"""
type reviewer_admin_notes_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [reviewer_admin_notes! ]! 
}

"""
on_conflict condition type for table "reviewer_admin_notes"
"""
input reviewer_admin_notes_on_conflict {
  constraint: reviewer_admin_notes_constraint! 
  update_columns: [reviewer_admin_notes_update_column! ]! 
  where: reviewer_admin_notes_bool_exp
}

"""Ordering options when selecting data from "reviewer_admin_notes"."""
input reviewer_admin_notes_order_by {
  event_id: order_by
  user_id: order_by
  value: order_by
}

"""
select columns of table "reviewer_admin_notes"
"""
enum reviewer_admin_notes_select_column {
  """column name"""
event_id
  """column name"""
user_id
  """column name"""
value
}

"""
input type for updating data in table "reviewer_admin_notes"
"""
input reviewer_admin_notes_set_input {
  event_id: Int
  user_id: Int
  value: String
}

"""aggregate stddev on columns"""
type reviewer_admin_notes_stddev_fields {
   event_id: Float
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type reviewer_admin_notes_stddev_pop_fields {
   event_id: Float
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type reviewer_admin_notes_stddev_samp_fields {
   event_id: Float
   user_id: Float
}

"""
Streaming cursor of the table "reviewer_admin_notes"
"""
input reviewer_admin_notes_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: reviewer_admin_notes_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input reviewer_admin_notes_stream_cursor_value_input {
  event_id: Int
  user_id: Int
  value: String
}

"""aggregate sum on columns"""
type reviewer_admin_notes_sum_fields {
   event_id: Int
   user_id: Int
}

"""
update columns of table "reviewer_admin_notes"
"""
enum reviewer_admin_notes_update_column {
  """column name"""
event_id
  """column name"""
user_id
  """column name"""
value
}

input reviewer_admin_notes_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: reviewer_admin_notes_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: reviewer_admin_notes_set_input
  where: reviewer_admin_notes_bool_exp! 
}

"""aggregate var_pop on columns"""
type reviewer_admin_notes_var_pop_fields {
   event_id: Float
   user_id: Float
}

"""aggregate var_samp on columns"""
type reviewer_admin_notes_var_samp_fields {
   event_id: Float
   user_id: Float
}

"""aggregate variance on columns"""
type reviewer_admin_notes_variance_fields {
   event_id: Float
   user_id: Float
}

"""
columns and relationships of "reviewer_categories"
"""
type reviewer_categories {
  """An object relationship"""
 stage: stages
   stage_id: Int! 
   user_id: Int! 
   value: String! 
}

"""
aggregated selection of "reviewer_categories"
"""
type reviewer_categories_aggregate {
   aggregate: reviewer_categories_aggregate_fields
   nodes: [reviewer_categories! ]! 
}

input reviewer_categories_aggregate_bool_exp {
  count: reviewer_categories_aggregate_bool_exp_count
}

input reviewer_categories_aggregate_bool_exp_count {
  arguments: [reviewer_categories_select_column! ]
  distinct: Boolean
  filter: reviewer_categories_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "reviewer_categories"
"""
type reviewer_categories_aggregate_fields {
   avg: reviewer_categories_avg_fields
   count(columns: [reviewer_categories_select_column! ], distinct: Boolean): Int! 
   max: reviewer_categories_max_fields
   min: reviewer_categories_min_fields
   stddev: reviewer_categories_stddev_fields
   stddev_pop: reviewer_categories_stddev_pop_fields
   stddev_samp: reviewer_categories_stddev_samp_fields
   sum: reviewer_categories_sum_fields
   var_pop: reviewer_categories_var_pop_fields
   var_samp: reviewer_categories_var_samp_fields
   variance: reviewer_categories_variance_fields
}

"""
order by aggregate values of table "reviewer_categories"
"""
input reviewer_categories_aggregate_order_by {
  avg: reviewer_categories_avg_order_by
  count: order_by
  max: reviewer_categories_max_order_by
  min: reviewer_categories_min_order_by
  stddev: reviewer_categories_stddev_order_by
  stddev_pop: reviewer_categories_stddev_pop_order_by
  stddev_samp: reviewer_categories_stddev_samp_order_by
  sum: reviewer_categories_sum_order_by
  var_pop: reviewer_categories_var_pop_order_by
  var_samp: reviewer_categories_var_samp_order_by
  variance: reviewer_categories_variance_order_by
}

"""
input type for inserting array relation for remote table "reviewer_categories"
"""
input reviewer_categories_arr_rel_insert_input {
  data: [reviewer_categories_insert_input! ]! 
}

"""aggregate avg on columns"""
type reviewer_categories_avg_fields {
   stage_id: Float
   user_id: Float
}

"""
order by avg() on columns of table "reviewer_categories"
"""
input reviewer_categories_avg_order_by {
  stage_id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "reviewer_categories". All fields are combined with a logical 'AND'.
"""
input reviewer_categories_bool_exp {
  _and: [reviewer_categories_bool_exp! ]
  _not: reviewer_categories_bool_exp
  _or: [reviewer_categories_bool_exp! ]
  stage: stages_bool_exp
  stage_id: Int_comparison_exp
  user_id: Int_comparison_exp
  value: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "reviewer_categories"
"""
input reviewer_categories_inc_input {
  stage_id: Int
  user_id: Int
}

"""
input type for inserting data into table "reviewer_categories"
"""
input reviewer_categories_insert_input {
  stage: stages_obj_rel_insert_input
  stage_id: Int! 
  user_id: Int! 
  value: String! 
}

"""aggregate max on columns"""
type reviewer_categories_max_fields {
   stage_id: Int
   user_id: Int
   value: String
}

"""
order by max() on columns of table "reviewer_categories"
"""
input reviewer_categories_max_order_by {
  stage_id: order_by
  user_id: order_by
  value: order_by
}

"""aggregate min on columns"""
type reviewer_categories_min_fields {
   stage_id: Int
   user_id: Int
   value: String
}

"""
order by min() on columns of table "reviewer_categories"
"""
input reviewer_categories_min_order_by {
  stage_id: order_by
  user_id: order_by
  value: order_by
}

"""
response of any mutation on the table "reviewer_categories"
"""
type reviewer_categories_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [reviewer_categories! ]! 
}

"""Ordering options when selecting data from "reviewer_categories"."""
input reviewer_categories_order_by {
  stage: stages_order_by
  stage_id: order_by
  user_id: order_by
  value: order_by
}

"""
select columns of table "reviewer_categories"
"""
enum reviewer_categories_select_column {
  """column name"""
stage_id
  """column name"""
user_id
  """column name"""
value
}

"""
input type for updating data in table "reviewer_categories"
"""
input reviewer_categories_set_input {
  stage_id: Int
  user_id: Int
  value: String
}

"""aggregate stddev on columns"""
type reviewer_categories_stddev_fields {
   stage_id: Float
   user_id: Float
}

"""
order by stddev() on columns of table "reviewer_categories"
"""
input reviewer_categories_stddev_order_by {
  stage_id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type reviewer_categories_stddev_pop_fields {
   stage_id: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "reviewer_categories"
"""
input reviewer_categories_stddev_pop_order_by {
  stage_id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type reviewer_categories_stddev_samp_fields {
   stage_id: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "reviewer_categories"
"""
input reviewer_categories_stddev_samp_order_by {
  stage_id: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "reviewer_categories"
"""
input reviewer_categories_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: reviewer_categories_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input reviewer_categories_stream_cursor_value_input {
  stage_id: Int
  user_id: Int
  value: String
}

"""aggregate sum on columns"""
type reviewer_categories_sum_fields {
   stage_id: Int
   user_id: Int
}

"""
order by sum() on columns of table "reviewer_categories"
"""
input reviewer_categories_sum_order_by {
  stage_id: order_by
  user_id: order_by
}

input reviewer_categories_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: reviewer_categories_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: reviewer_categories_set_input
  where: reviewer_categories_bool_exp! 
}

"""aggregate var_pop on columns"""
type reviewer_categories_var_pop_fields {
   stage_id: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "reviewer_categories"
"""
input reviewer_categories_var_pop_order_by {
  stage_id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type reviewer_categories_var_samp_fields {
   stage_id: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "reviewer_categories"
"""
input reviewer_categories_var_samp_order_by {
  stage_id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type reviewer_categories_variance_fields {
   stage_id: Float
   user_id: Float
}

"""
order by variance() on columns of table "reviewer_categories"
"""
input reviewer_categories_variance_order_by {
  stage_id: order_by
  user_id: order_by
}

"""
columns and relationships of "reviewer_inline_comments"
"""
type reviewer_inline_comments {
   comment: String! 
   created_at: timestamptz! 
   highlighted_text: String! 
   id: uuid! 
  """An object relationship"""
 question: questions! 
   question_id: Int! 
  """An object relationship"""
 review: reviews! 
   review_id: Int! 
   serialised_highlight: String! 
}

"""
aggregated selection of "reviewer_inline_comments"
"""
type reviewer_inline_comments_aggregate {
   aggregate: reviewer_inline_comments_aggregate_fields
   nodes: [reviewer_inline_comments! ]! 
}

input reviewer_inline_comments_aggregate_bool_exp {
  count: reviewer_inline_comments_aggregate_bool_exp_count
}

input reviewer_inline_comments_aggregate_bool_exp_count {
  arguments: [reviewer_inline_comments_select_column! ]
  distinct: Boolean
  filter: reviewer_inline_comments_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "reviewer_inline_comments"
"""
type reviewer_inline_comments_aggregate_fields {
   avg: reviewer_inline_comments_avg_fields
   count(columns: [reviewer_inline_comments_select_column! ], distinct: Boolean): Int! 
   max: reviewer_inline_comments_max_fields
   min: reviewer_inline_comments_min_fields
   stddev: reviewer_inline_comments_stddev_fields
   stddev_pop: reviewer_inline_comments_stddev_pop_fields
   stddev_samp: reviewer_inline_comments_stddev_samp_fields
   sum: reviewer_inline_comments_sum_fields
   var_pop: reviewer_inline_comments_var_pop_fields
   var_samp: reviewer_inline_comments_var_samp_fields
   variance: reviewer_inline_comments_variance_fields
}

"""
order by aggregate values of table "reviewer_inline_comments"
"""
input reviewer_inline_comments_aggregate_order_by {
  avg: reviewer_inline_comments_avg_order_by
  count: order_by
  max: reviewer_inline_comments_max_order_by
  min: reviewer_inline_comments_min_order_by
  stddev: reviewer_inline_comments_stddev_order_by
  stddev_pop: reviewer_inline_comments_stddev_pop_order_by
  stddev_samp: reviewer_inline_comments_stddev_samp_order_by
  sum: reviewer_inline_comments_sum_order_by
  var_pop: reviewer_inline_comments_var_pop_order_by
  var_samp: reviewer_inline_comments_var_samp_order_by
  variance: reviewer_inline_comments_variance_order_by
}

"""
input type for inserting array relation for remote table "reviewer_inline_comments"
"""
input reviewer_inline_comments_arr_rel_insert_input {
  data: [reviewer_inline_comments_insert_input! ]! 
  """upsert condition"""
on_conflict: reviewer_inline_comments_on_conflict
}

"""aggregate avg on columns"""
type reviewer_inline_comments_avg_fields {
   question_id: Float
   review_id: Float
}

"""
order by avg() on columns of table "reviewer_inline_comments"
"""
input reviewer_inline_comments_avg_order_by {
  question_id: order_by
  review_id: order_by
}

"""
Boolean expression to filter rows from the table "reviewer_inline_comments". All fields are combined with a logical 'AND'.
"""
input reviewer_inline_comments_bool_exp {
  _and: [reviewer_inline_comments_bool_exp! ]
  _not: reviewer_inline_comments_bool_exp
  _or: [reviewer_inline_comments_bool_exp! ]
  comment: String_comparison_exp
  created_at: timestamptz_comparison_exp
  highlighted_text: String_comparison_exp
  id: uuid_comparison_exp
  question: questions_bool_exp
  question_id: Int_comparison_exp
  review: reviews_bool_exp
  review_id: Int_comparison_exp
  serialised_highlight: String_comparison_exp
}

"""
unique or primary key constraints on table "reviewer_inline_comments"
"""
enum reviewer_inline_comments_constraint {
  """
  unique or primary key constraint on columns "id"
  """
reviewer_inline_comments_pkey
}

"""
input type for incrementing numeric columns in table "reviewer_inline_comments"
"""
input reviewer_inline_comments_inc_input {
  question_id: Int
  review_id: Int
}

"""
input type for inserting data into table "reviewer_inline_comments"
"""
input reviewer_inline_comments_insert_input {
  comment: String! 
  created_at: timestamptz! 
  highlighted_text: String! 
  id: uuid! 
  question: questions_obj_rel_insert_input
  question_id: Int! 
  review: reviews_obj_rel_insert_input
  review_id: Int! 
  serialised_highlight: String! 
}

"""aggregate max on columns"""
type reviewer_inline_comments_max_fields {
   comment: String
   created_at: timestamptz
   highlighted_text: String
   id: uuid
   question_id: Int
   review_id: Int
   serialised_highlight: String
}

"""
order by max() on columns of table "reviewer_inline_comments"
"""
input reviewer_inline_comments_max_order_by {
  comment: order_by
  created_at: order_by
  highlighted_text: order_by
  id: order_by
  question_id: order_by
  review_id: order_by
  serialised_highlight: order_by
}

"""aggregate min on columns"""
type reviewer_inline_comments_min_fields {
   comment: String
   created_at: timestamptz
   highlighted_text: String
   id: uuid
   question_id: Int
   review_id: Int
   serialised_highlight: String
}

"""
order by min() on columns of table "reviewer_inline_comments"
"""
input reviewer_inline_comments_min_order_by {
  comment: order_by
  created_at: order_by
  highlighted_text: order_by
  id: order_by
  question_id: order_by
  review_id: order_by
  serialised_highlight: order_by
}

"""
response of any mutation on the table "reviewer_inline_comments"
"""
type reviewer_inline_comments_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [reviewer_inline_comments! ]! 
}

"""
on_conflict condition type for table "reviewer_inline_comments"
"""
input reviewer_inline_comments_on_conflict {
  constraint: reviewer_inline_comments_constraint! 
  update_columns: [reviewer_inline_comments_update_column! ]! 
  where: reviewer_inline_comments_bool_exp
}

"""Ordering options when selecting data from "reviewer_inline_comments"."""
input reviewer_inline_comments_order_by {
  comment: order_by
  created_at: order_by
  highlighted_text: order_by
  id: order_by
  question: questions_order_by
  question_id: order_by
  review: reviews_order_by
  review_id: order_by
  serialised_highlight: order_by
}

"""primary key columns input for table: reviewer_inline_comments"""
input reviewer_inline_comments_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "reviewer_inline_comments"
"""
enum reviewer_inline_comments_select_column {
  """column name"""
comment
  """column name"""
created_at
  """column name"""
highlighted_text
  """column name"""
id
  """column name"""
question_id
  """column name"""
review_id
  """column name"""
serialised_highlight
}

"""
input type for updating data in table "reviewer_inline_comments"
"""
input reviewer_inline_comments_set_input {
  comment: String
  created_at: timestamptz
  highlighted_text: String
  id: uuid
  question_id: Int
  review_id: Int
  serialised_highlight: String
}

"""aggregate stddev on columns"""
type reviewer_inline_comments_stddev_fields {
   question_id: Float
   review_id: Float
}

"""
order by stddev() on columns of table "reviewer_inline_comments"
"""
input reviewer_inline_comments_stddev_order_by {
  question_id: order_by
  review_id: order_by
}

"""aggregate stddev_pop on columns"""
type reviewer_inline_comments_stddev_pop_fields {
   question_id: Float
   review_id: Float
}

"""
order by stddev_pop() on columns of table "reviewer_inline_comments"
"""
input reviewer_inline_comments_stddev_pop_order_by {
  question_id: order_by
  review_id: order_by
}

"""aggregate stddev_samp on columns"""
type reviewer_inline_comments_stddev_samp_fields {
   question_id: Float
   review_id: Float
}

"""
order by stddev_samp() on columns of table "reviewer_inline_comments"
"""
input reviewer_inline_comments_stddev_samp_order_by {
  question_id: order_by
  review_id: order_by
}

"""
Streaming cursor of the table "reviewer_inline_comments"
"""
input reviewer_inline_comments_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: reviewer_inline_comments_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input reviewer_inline_comments_stream_cursor_value_input {
  comment: String
  created_at: timestamptz
  highlighted_text: String
  id: uuid
  question_id: Int
  review_id: Int
  serialised_highlight: String
}

"""aggregate sum on columns"""
type reviewer_inline_comments_sum_fields {
   question_id: Int
   review_id: Int
}

"""
order by sum() on columns of table "reviewer_inline_comments"
"""
input reviewer_inline_comments_sum_order_by {
  question_id: order_by
  review_id: order_by
}

"""
update columns of table "reviewer_inline_comments"
"""
enum reviewer_inline_comments_update_column {
  """column name"""
comment
  """column name"""
created_at
  """column name"""
highlighted_text
  """column name"""
id
  """column name"""
question_id
  """column name"""
review_id
  """column name"""
serialised_highlight
}

input reviewer_inline_comments_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: reviewer_inline_comments_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: reviewer_inline_comments_set_input
  where: reviewer_inline_comments_bool_exp! 
}

"""aggregate var_pop on columns"""
type reviewer_inline_comments_var_pop_fields {
   question_id: Float
   review_id: Float
}

"""
order by var_pop() on columns of table "reviewer_inline_comments"
"""
input reviewer_inline_comments_var_pop_order_by {
  question_id: order_by
  review_id: order_by
}

"""aggregate var_samp on columns"""
type reviewer_inline_comments_var_samp_fields {
   question_id: Float
   review_id: Float
}

"""
order by var_samp() on columns of table "reviewer_inline_comments"
"""
input reviewer_inline_comments_var_samp_order_by {
  question_id: order_by
  review_id: order_by
}

"""aggregate variance on columns"""
type reviewer_inline_comments_variance_fields {
   question_id: Float
   review_id: Float
}

"""
order by variance() on columns of table "reviewer_inline_comments"
"""
input reviewer_inline_comments_variance_order_by {
  question_id: order_by
  review_id: order_by
}

scalar reviewer_question_data_types 

"""
Boolean expression to compare columns of type "reviewer_question_data_types". All fields are combined with logical 'AND'.
"""
input reviewer_question_data_types_comparison_exp {
  _eq: reviewer_question_data_types
  _gt: reviewer_question_data_types
  _gte: reviewer_question_data_types
  _in: [reviewer_question_data_types! ]
  _is_null: Boolean
  _lt: reviewer_question_data_types
  _lte: reviewer_question_data_types
  _neq: reviewer_question_data_types
  _nin: [reviewer_question_data_types! ]
}

"""
columns and relationships of "reviewer_question_responses"
"""
type reviewer_question_responses {
   fe_epoch: bigint
   id: Int! 
  """An object relationship"""
 review: reviews! 
   review_id: Int! 
  """An object relationship"""
 reviewer_question: reviewer_questions! 
   reviewer_question_id: Int! 
   reviewer_question_response_id: Int
   reviewer_response: String
   time_stamp: bigint! 
}

"""
aggregated selection of "reviewer_question_responses"
"""
type reviewer_question_responses_aggregate {
   aggregate: reviewer_question_responses_aggregate_fields
   nodes: [reviewer_question_responses! ]! 
}

input reviewer_question_responses_aggregate_bool_exp {
  count: reviewer_question_responses_aggregate_bool_exp_count
}

input reviewer_question_responses_aggregate_bool_exp_count {
  arguments: [reviewer_question_responses_select_column! ]
  distinct: Boolean
  filter: reviewer_question_responses_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "reviewer_question_responses"
"""
type reviewer_question_responses_aggregate_fields {
   avg: reviewer_question_responses_avg_fields
   count(columns: [reviewer_question_responses_select_column! ], distinct: Boolean): Int! 
   max: reviewer_question_responses_max_fields
   min: reviewer_question_responses_min_fields
   stddev: reviewer_question_responses_stddev_fields
   stddev_pop: reviewer_question_responses_stddev_pop_fields
   stddev_samp: reviewer_question_responses_stddev_samp_fields
   sum: reviewer_question_responses_sum_fields
   var_pop: reviewer_question_responses_var_pop_fields
   var_samp: reviewer_question_responses_var_samp_fields
   variance: reviewer_question_responses_variance_fields
}

"""
order by aggregate values of table "reviewer_question_responses"
"""
input reviewer_question_responses_aggregate_order_by {
  avg: reviewer_question_responses_avg_order_by
  count: order_by
  max: reviewer_question_responses_max_order_by
  min: reviewer_question_responses_min_order_by
  stddev: reviewer_question_responses_stddev_order_by
  stddev_pop: reviewer_question_responses_stddev_pop_order_by
  stddev_samp: reviewer_question_responses_stddev_samp_order_by
  sum: reviewer_question_responses_sum_order_by
  var_pop: reviewer_question_responses_var_pop_order_by
  var_samp: reviewer_question_responses_var_samp_order_by
  variance: reviewer_question_responses_variance_order_by
}

"""
input type for inserting array relation for remote table "reviewer_question_responses"
"""
input reviewer_question_responses_arr_rel_insert_input {
  data: [reviewer_question_responses_insert_input! ]! 
  """upsert condition"""
on_conflict: reviewer_question_responses_on_conflict
}

"""aggregate avg on columns"""
type reviewer_question_responses_avg_fields {
   fe_epoch: Float
   id: Float
   review_id: Float
   reviewer_question_id: Float
   reviewer_question_response_id: Float
   time_stamp: Float
}

"""
order by avg() on columns of table "reviewer_question_responses"
"""
input reviewer_question_responses_avg_order_by {
  fe_epoch: order_by
  id: order_by
  review_id: order_by
  reviewer_question_id: order_by
  reviewer_question_response_id: order_by
  time_stamp: order_by
}

"""
Boolean expression to filter rows from the table "reviewer_question_responses". All fields are combined with a logical 'AND'.
"""
input reviewer_question_responses_bool_exp {
  _and: [reviewer_question_responses_bool_exp! ]
  _not: reviewer_question_responses_bool_exp
  _or: [reviewer_question_responses_bool_exp! ]
  fe_epoch: bigint_comparison_exp
  id: Int_comparison_exp
  review: reviews_bool_exp
  review_id: Int_comparison_exp
  reviewer_question: reviewer_questions_bool_exp
  reviewer_question_id: Int_comparison_exp
  reviewer_question_response_id: Int_comparison_exp
  reviewer_response: String_comparison_exp
  time_stamp: bigint_comparison_exp
}

"""
unique or primary key constraints on table "reviewer_question_responses"
"""
enum reviewer_question_responses_constraint {
  """
  unique or primary key constraint on columns "reviewer_question_response_id"
  """
reviewer_question_responses_pkey
  """
  unique or primary key constraint on columns "reviewer_question_id", "review_id"
  """
reviewer_question_responses_review_id_reviewer_question_id_key
}

"""
input type for incrementing numeric columns in table "reviewer_question_responses"
"""
input reviewer_question_responses_inc_input {
  fe_epoch: bigint
  id: Int
  review_id: Int
  reviewer_question_id: Int
  reviewer_question_response_id: Int
  time_stamp: bigint
}

"""
input type for inserting data into table "reviewer_question_responses"
"""
input reviewer_question_responses_insert_input {
  fe_epoch: bigint
  id: Int
  review: reviews_obj_rel_insert_input
  review_id: Int! 
  reviewer_question: reviewer_questions_obj_rel_insert_input
  reviewer_question_id: Int! 
  reviewer_question_response_id: Int! 
  reviewer_response: String
  time_stamp: bigint! 
}

"""aggregate max on columns"""
type reviewer_question_responses_max_fields {
   fe_epoch: bigint
   id: Int
   review_id: Int
   reviewer_question_id: Int
   reviewer_question_response_id: Int
   reviewer_response: String
   time_stamp: bigint
}

"""
order by max() on columns of table "reviewer_question_responses"
"""
input reviewer_question_responses_max_order_by {
  fe_epoch: order_by
  id: order_by
  review_id: order_by
  reviewer_question_id: order_by
  reviewer_question_response_id: order_by
  reviewer_response: order_by
  time_stamp: order_by
}

"""aggregate min on columns"""
type reviewer_question_responses_min_fields {
   fe_epoch: bigint
   id: Int
   review_id: Int
   reviewer_question_id: Int
   reviewer_question_response_id: Int
   reviewer_response: String
   time_stamp: bigint
}

"""
order by min() on columns of table "reviewer_question_responses"
"""
input reviewer_question_responses_min_order_by {
  fe_epoch: order_by
  id: order_by
  review_id: order_by
  reviewer_question_id: order_by
  reviewer_question_response_id: order_by
  reviewer_response: order_by
  time_stamp: order_by
}

"""
response of any mutation on the table "reviewer_question_responses"
"""
type reviewer_question_responses_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [reviewer_question_responses! ]! 
}

"""
on_conflict condition type for table "reviewer_question_responses"
"""
input reviewer_question_responses_on_conflict {
  constraint: reviewer_question_responses_constraint! 
  update_columns: [reviewer_question_responses_update_column! ]! 
  where: reviewer_question_responses_bool_exp
}

"""
Ordering options when selecting data from "reviewer_question_responses".
"""
input reviewer_question_responses_order_by {
  fe_epoch: order_by
  id: order_by
  review: reviews_order_by
  review_id: order_by
  reviewer_question: reviewer_questions_order_by
  reviewer_question_id: order_by
  reviewer_question_response_id: order_by
  reviewer_response: order_by
  time_stamp: order_by
}

"""primary key columns input for table: reviewer_question_responses"""
input reviewer_question_responses_pk_columns_input {
  id: Int! 
}

"""
select columns of table "reviewer_question_responses"
"""
enum reviewer_question_responses_select_column {
  """column name"""
fe_epoch
  """column name"""
id
  """column name"""
review_id
  """column name"""
reviewer_question_id
  """column name"""
reviewer_question_response_id
  """column name"""
reviewer_response
  """column name"""
time_stamp
}

"""
input type for updating data in table "reviewer_question_responses"
"""
input reviewer_question_responses_set_input {
  fe_epoch: bigint
  id: Int
  review_id: Int
  reviewer_question_id: Int
  reviewer_question_response_id: Int
  reviewer_response: String
  time_stamp: bigint
}

"""aggregate stddev on columns"""
type reviewer_question_responses_stddev_fields {
   fe_epoch: Float
   id: Float
   review_id: Float
   reviewer_question_id: Float
   reviewer_question_response_id: Float
   time_stamp: Float
}

"""
order by stddev() on columns of table "reviewer_question_responses"
"""
input reviewer_question_responses_stddev_order_by {
  fe_epoch: order_by
  id: order_by
  review_id: order_by
  reviewer_question_id: order_by
  reviewer_question_response_id: order_by
  time_stamp: order_by
}

"""aggregate stddev_pop on columns"""
type reviewer_question_responses_stddev_pop_fields {
   fe_epoch: Float
   id: Float
   review_id: Float
   reviewer_question_id: Float
   reviewer_question_response_id: Float
   time_stamp: Float
}

"""
order by stddev_pop() on columns of table "reviewer_question_responses"
"""
input reviewer_question_responses_stddev_pop_order_by {
  fe_epoch: order_by
  id: order_by
  review_id: order_by
  reviewer_question_id: order_by
  reviewer_question_response_id: order_by
  time_stamp: order_by
}

"""aggregate stddev_samp on columns"""
type reviewer_question_responses_stddev_samp_fields {
   fe_epoch: Float
   id: Float
   review_id: Float
   reviewer_question_id: Float
   reviewer_question_response_id: Float
   time_stamp: Float
}

"""
order by stddev_samp() on columns of table "reviewer_question_responses"
"""
input reviewer_question_responses_stddev_samp_order_by {
  fe_epoch: order_by
  id: order_by
  review_id: order_by
  reviewer_question_id: order_by
  reviewer_question_response_id: order_by
  time_stamp: order_by
}

"""
Streaming cursor of the table "reviewer_question_responses"
"""
input reviewer_question_responses_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: reviewer_question_responses_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input reviewer_question_responses_stream_cursor_value_input {
  fe_epoch: bigint
  id: Int
  review_id: Int
  reviewer_question_id: Int
  reviewer_question_response_id: Int
  reviewer_response: String
  time_stamp: bigint
}

"""aggregate sum on columns"""
type reviewer_question_responses_sum_fields {
   fe_epoch: bigint
   id: Int
   review_id: Int
   reviewer_question_id: Int
   reviewer_question_response_id: Int
   time_stamp: bigint
}

"""
order by sum() on columns of table "reviewer_question_responses"
"""
input reviewer_question_responses_sum_order_by {
  fe_epoch: order_by
  id: order_by
  review_id: order_by
  reviewer_question_id: order_by
  reviewer_question_response_id: order_by
  time_stamp: order_by
}

"""
update columns of table "reviewer_question_responses"
"""
enum reviewer_question_responses_update_column {
  """column name"""
fe_epoch
  """column name"""
id
  """column name"""
review_id
  """column name"""
reviewer_question_id
  """column name"""
reviewer_question_response_id
  """column name"""
reviewer_response
  """column name"""
time_stamp
}

input reviewer_question_responses_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: reviewer_question_responses_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: reviewer_question_responses_set_input
  where: reviewer_question_responses_bool_exp! 
}

"""aggregate var_pop on columns"""
type reviewer_question_responses_var_pop_fields {
   fe_epoch: Float
   id: Float
   review_id: Float
   reviewer_question_id: Float
   reviewer_question_response_id: Float
   time_stamp: Float
}

"""
order by var_pop() on columns of table "reviewer_question_responses"
"""
input reviewer_question_responses_var_pop_order_by {
  fe_epoch: order_by
  id: order_by
  review_id: order_by
  reviewer_question_id: order_by
  reviewer_question_response_id: order_by
  time_stamp: order_by
}

"""aggregate var_samp on columns"""
type reviewer_question_responses_var_samp_fields {
   fe_epoch: Float
   id: Float
   review_id: Float
   reviewer_question_id: Float
   reviewer_question_response_id: Float
   time_stamp: Float
}

"""
order by var_samp() on columns of table "reviewer_question_responses"
"""
input reviewer_question_responses_var_samp_order_by {
  fe_epoch: order_by
  id: order_by
  review_id: order_by
  reviewer_question_id: order_by
  reviewer_question_response_id: order_by
  time_stamp: order_by
}

"""aggregate variance on columns"""
type reviewer_question_responses_variance_fields {
   fe_epoch: Float
   id: Float
   review_id: Float
   reviewer_question_id: Float
   reviewer_question_response_id: Float
   time_stamp: Float
}

"""
order by variance() on columns of table "reviewer_question_responses"
"""
input reviewer_question_responses_variance_order_by {
  fe_epoch: order_by
  id: order_by
  review_id: order_by
  reviewer_question_id: order_by
  reviewer_question_response_id: order_by
  time_stamp: order_by
}

"""
columns and relationships of "reviewer_questions"
"""
type reviewer_questions {
   answer_required: Boolean! 
   archived: Boolean! 
   data_type: reviewer_question_data_types
   displayed_text_options: _text
   id: Int! 
   is_acceptance_type: Boolean! 
   is_comment: Boolean! 
   is_conflict: Boolean! 
   is_grade: Boolean! 
   options: _text
   order_of_questions: Int
   reviewer_question_description: String
   reviewer_question_id: Int
   reviewer_question_name: String
  """An array relationship"""
 reviewer_question_responses("""distinct select on columns"""
distinct_on: [reviewer_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_question_responses_order_by! ], """filter the rows returned"""
where: reviewer_question_responses_bool_exp): [reviewer_question_responses! ]! 
  """An aggregate relationship"""
 reviewer_question_responses_aggregate("""distinct select on columns"""
distinct_on: [reviewer_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_question_responses_order_by! ], """filter the rows returned"""
where: reviewer_question_responses_bool_exp): reviewer_question_responses_aggregate! 
   show_submitter: Boolean! 
  """An object relationship"""
 stage: stages! 
   stage_id: Int! 
   time_stamp: bigint
   word_limit: Int
}

"""
aggregated selection of "reviewer_questions"
"""
type reviewer_questions_aggregate {
   aggregate: reviewer_questions_aggregate_fields
   nodes: [reviewer_questions! ]! 
}

input reviewer_questions_aggregate_bool_exp {
  bool_and: reviewer_questions_aggregate_bool_exp_bool_and
  bool_or: reviewer_questions_aggregate_bool_exp_bool_or
  count: reviewer_questions_aggregate_bool_exp_count
}

input reviewer_questions_aggregate_bool_exp_bool_and {
  arguments: reviewer_questions_select_column_reviewer_questions_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: reviewer_questions_bool_exp
  predicate: Boolean_comparison_exp! 
}

input reviewer_questions_aggregate_bool_exp_bool_or {
  arguments: reviewer_questions_select_column_reviewer_questions_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: reviewer_questions_bool_exp
  predicate: Boolean_comparison_exp! 
}

input reviewer_questions_aggregate_bool_exp_count {
  arguments: [reviewer_questions_select_column! ]
  distinct: Boolean
  filter: reviewer_questions_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "reviewer_questions"
"""
type reviewer_questions_aggregate_fields {
   avg: reviewer_questions_avg_fields
   count(columns: [reviewer_questions_select_column! ], distinct: Boolean): Int! 
   max: reviewer_questions_max_fields
   min: reviewer_questions_min_fields
   stddev: reviewer_questions_stddev_fields
   stddev_pop: reviewer_questions_stddev_pop_fields
   stddev_samp: reviewer_questions_stddev_samp_fields
   sum: reviewer_questions_sum_fields
   var_pop: reviewer_questions_var_pop_fields
   var_samp: reviewer_questions_var_samp_fields
   variance: reviewer_questions_variance_fields
}

"""
order by aggregate values of table "reviewer_questions"
"""
input reviewer_questions_aggregate_order_by {
  avg: reviewer_questions_avg_order_by
  count: order_by
  max: reviewer_questions_max_order_by
  min: reviewer_questions_min_order_by
  stddev: reviewer_questions_stddev_order_by
  stddev_pop: reviewer_questions_stddev_pop_order_by
  stddev_samp: reviewer_questions_stddev_samp_order_by
  sum: reviewer_questions_sum_order_by
  var_pop: reviewer_questions_var_pop_order_by
  var_samp: reviewer_questions_var_samp_order_by
  variance: reviewer_questions_variance_order_by
}

"""
input type for inserting array relation for remote table "reviewer_questions"
"""
input reviewer_questions_arr_rel_insert_input {
  data: [reviewer_questions_insert_input! ]! 
  """upsert condition"""
on_conflict: reviewer_questions_on_conflict
}

"""aggregate avg on columns"""
type reviewer_questions_avg_fields {
   id: Float
   order_of_questions: Float
   reviewer_question_id: Float
   stage_id: Float
   time_stamp: Float
   word_limit: Float
}

"""
order by avg() on columns of table "reviewer_questions"
"""
input reviewer_questions_avg_order_by {
  id: order_by
  order_of_questions: order_by
  reviewer_question_id: order_by
  stage_id: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""
Boolean expression to filter rows from the table "reviewer_questions". All fields are combined with a logical 'AND'.
"""
input reviewer_questions_bool_exp {
  _and: [reviewer_questions_bool_exp! ]
  _not: reviewer_questions_bool_exp
  _or: [reviewer_questions_bool_exp! ]
  answer_required: Boolean_comparison_exp
  archived: Boolean_comparison_exp
  data_type: reviewer_question_data_types_comparison_exp
  displayed_text_options: _text_comparison_exp
  id: Int_comparison_exp
  is_acceptance_type: Boolean_comparison_exp
  is_comment: Boolean_comparison_exp
  is_conflict: Boolean_comparison_exp
  is_grade: Boolean_comparison_exp
  options: _text_comparison_exp
  order_of_questions: Int_comparison_exp
  reviewer_question_description: String_comparison_exp
  reviewer_question_id: Int_comparison_exp
  reviewer_question_name: String_comparison_exp
  reviewer_question_responses: reviewer_question_responses_bool_exp
  reviewer_question_responses_aggregate: reviewer_question_responses_aggregate_bool_exp
  show_submitter: Boolean_comparison_exp
  stage: stages_bool_exp
  stage_id: Int_comparison_exp
  time_stamp: bigint_comparison_exp
  word_limit: Int_comparison_exp
}

"""
unique or primary key constraints on table "reviewer_questions"
"""
enum reviewer_questions_constraint {
  """
  unique or primary key constraint on columns "reviewer_question_id"
  """
reviewer_questions_pkey
}

"""
input type for incrementing numeric columns in table "reviewer_questions"
"""
input reviewer_questions_inc_input {
  id: Int
  order_of_questions: Int
  reviewer_question_id: Int
  stage_id: Int
  time_stamp: bigint
  word_limit: Int
}

"""
input type for inserting data into table "reviewer_questions"
"""
input reviewer_questions_insert_input {
  answer_required: Boolean! 
  archived: Boolean! 
  data_type: reviewer_question_data_types
  displayed_text_options: _text
  id: Int
  is_acceptance_type: Boolean! 
  is_comment: Boolean! 
  is_conflict: Boolean! 
  is_grade: Boolean! 
  options: _text
  order_of_questions: Int
  reviewer_question_description: String
  reviewer_question_id: Int! 
  reviewer_question_name: String
  reviewer_question_responses: reviewer_question_responses_arr_rel_insert_input
  show_submitter: Boolean! 
  stage: stages_obj_rel_insert_input
  stage_id: Int! 
  time_stamp: bigint! 
  word_limit: Int
}

"""aggregate max on columns"""
type reviewer_questions_max_fields {
   data_type: reviewer_question_data_types
   id: Int
   order_of_questions: Int
   reviewer_question_description: String
   reviewer_question_id: Int
   reviewer_question_name: String
   stage_id: Int
   time_stamp: bigint
   word_limit: Int
}

"""
order by max() on columns of table "reviewer_questions"
"""
input reviewer_questions_max_order_by {
  data_type: order_by
  id: order_by
  order_of_questions: order_by
  reviewer_question_description: order_by
  reviewer_question_id: order_by
  reviewer_question_name: order_by
  stage_id: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""aggregate min on columns"""
type reviewer_questions_min_fields {
   data_type: reviewer_question_data_types
   id: Int
   order_of_questions: Int
   reviewer_question_description: String
   reviewer_question_id: Int
   reviewer_question_name: String
   stage_id: Int
   time_stamp: bigint
   word_limit: Int
}

"""
order by min() on columns of table "reviewer_questions"
"""
input reviewer_questions_min_order_by {
  data_type: order_by
  id: order_by
  order_of_questions: order_by
  reviewer_question_description: order_by
  reviewer_question_id: order_by
  reviewer_question_name: order_by
  stage_id: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""
response of any mutation on the table "reviewer_questions"
"""
type reviewer_questions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [reviewer_questions! ]! 
}

"""
input type for inserting object relation for remote table "reviewer_questions"
"""
input reviewer_questions_obj_rel_insert_input {
  data: reviewer_questions_insert_input! 
  """upsert condition"""
on_conflict: reviewer_questions_on_conflict
}

"""
on_conflict condition type for table "reviewer_questions"
"""
input reviewer_questions_on_conflict {
  constraint: reviewer_questions_constraint! 
  update_columns: [reviewer_questions_update_column! ]! 
  where: reviewer_questions_bool_exp
}

"""Ordering options when selecting data from "reviewer_questions"."""
input reviewer_questions_order_by {
  answer_required: order_by
  archived: order_by
  data_type: order_by
  displayed_text_options: order_by
  id: order_by
  is_acceptance_type: order_by
  is_comment: order_by
  is_conflict: order_by
  is_grade: order_by
  options: order_by
  order_of_questions: order_by
  reviewer_question_description: order_by
  reviewer_question_id: order_by
  reviewer_question_name: order_by
  reviewer_question_responses_aggregate: reviewer_question_responses_aggregate_order_by
  show_submitter: order_by
  stage: stages_order_by
  stage_id: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""primary key columns input for table: reviewer_questions"""
input reviewer_questions_pk_columns_input {
  id: Int! 
}

"""
select columns of table "reviewer_questions"
"""
enum reviewer_questions_select_column {
  """column name"""
answer_required
  """column name"""
archived
  """column name"""
data_type
  """column name"""
displayed_text_options
  """column name"""
id
  """column name"""
is_acceptance_type
  """column name"""
is_comment
  """column name"""
is_conflict
  """column name"""
is_grade
  """column name"""
options
  """column name"""
order_of_questions
  """column name"""
reviewer_question_description
  """column name"""
reviewer_question_id
  """column name"""
reviewer_question_name
  """column name"""
show_submitter
  """column name"""
stage_id
  """column name"""
time_stamp
  """column name"""
word_limit
}

"""
select "reviewer_questions_aggregate_bool_exp_bool_and_arguments_columns" columns of table "reviewer_questions"
"""
enum reviewer_questions_select_column_reviewer_questions_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
answer_required
  """column name"""
archived
  """column name"""
is_acceptance_type
  """column name"""
is_comment
  """column name"""
is_conflict
  """column name"""
is_grade
  """column name"""
show_submitter
}

"""
select "reviewer_questions_aggregate_bool_exp_bool_or_arguments_columns" columns of table "reviewer_questions"
"""
enum reviewer_questions_select_column_reviewer_questions_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
answer_required
  """column name"""
archived
  """column name"""
is_acceptance_type
  """column name"""
is_comment
  """column name"""
is_conflict
  """column name"""
is_grade
  """column name"""
show_submitter
}

"""
input type for updating data in table "reviewer_questions"
"""
input reviewer_questions_set_input {
  answer_required: Boolean
  archived: Boolean
  data_type: reviewer_question_data_types
  displayed_text_options: _text
  id: Int
  is_acceptance_type: Boolean
  is_comment: Boolean
  is_conflict: Boolean
  is_grade: Boolean
  options: _text
  order_of_questions: Int
  reviewer_question_description: String
  reviewer_question_id: Int
  reviewer_question_name: String
  show_submitter: Boolean
  stage_id: Int
  time_stamp: bigint
  word_limit: Int
}

"""aggregate stddev on columns"""
type reviewer_questions_stddev_fields {
   id: Float
   order_of_questions: Float
   reviewer_question_id: Float
   stage_id: Float
   time_stamp: Float
   word_limit: Float
}

"""
order by stddev() on columns of table "reviewer_questions"
"""
input reviewer_questions_stddev_order_by {
  id: order_by
  order_of_questions: order_by
  reviewer_question_id: order_by
  stage_id: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""aggregate stddev_pop on columns"""
type reviewer_questions_stddev_pop_fields {
   id: Float
   order_of_questions: Float
   reviewer_question_id: Float
   stage_id: Float
   time_stamp: Float
   word_limit: Float
}

"""
order by stddev_pop() on columns of table "reviewer_questions"
"""
input reviewer_questions_stddev_pop_order_by {
  id: order_by
  order_of_questions: order_by
  reviewer_question_id: order_by
  stage_id: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""aggregate stddev_samp on columns"""
type reviewer_questions_stddev_samp_fields {
   id: Float
   order_of_questions: Float
   reviewer_question_id: Float
   stage_id: Float
   time_stamp: Float
   word_limit: Float
}

"""
order by stddev_samp() on columns of table "reviewer_questions"
"""
input reviewer_questions_stddev_samp_order_by {
  id: order_by
  order_of_questions: order_by
  reviewer_question_id: order_by
  stage_id: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""
Streaming cursor of the table "reviewer_questions"
"""
input reviewer_questions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: reviewer_questions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input reviewer_questions_stream_cursor_value_input {
  answer_required: Boolean
  archived: Boolean
  data_type: reviewer_question_data_types
  displayed_text_options: _text
  id: Int
  is_acceptance_type: Boolean
  is_comment: Boolean
  is_conflict: Boolean
  is_grade: Boolean
  options: _text
  order_of_questions: Int
  reviewer_question_description: String
  reviewer_question_id: Int
  reviewer_question_name: String
  show_submitter: Boolean
  stage_id: Int
  time_stamp: bigint
  word_limit: Int
}

"""aggregate sum on columns"""
type reviewer_questions_sum_fields {
   id: Int
   order_of_questions: Int
   reviewer_question_id: Int
   stage_id: Int
   time_stamp: bigint
   word_limit: Int
}

"""
order by sum() on columns of table "reviewer_questions"
"""
input reviewer_questions_sum_order_by {
  id: order_by
  order_of_questions: order_by
  reviewer_question_id: order_by
  stage_id: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""
update columns of table "reviewer_questions"
"""
enum reviewer_questions_update_column {
  """column name"""
answer_required
  """column name"""
archived
  """column name"""
data_type
  """column name"""
displayed_text_options
  """column name"""
id
  """column name"""
is_acceptance_type
  """column name"""
is_comment
  """column name"""
is_conflict
  """column name"""
is_grade
  """column name"""
options
  """column name"""
order_of_questions
  """column name"""
reviewer_question_description
  """column name"""
reviewer_question_id
  """column name"""
reviewer_question_name
  """column name"""
show_submitter
  """column name"""
stage_id
  """column name"""
time_stamp
  """column name"""
word_limit
}

input reviewer_questions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: reviewer_questions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: reviewer_questions_set_input
  where: reviewer_questions_bool_exp! 
}

"""aggregate var_pop on columns"""
type reviewer_questions_var_pop_fields {
   id: Float
   order_of_questions: Float
   reviewer_question_id: Float
   stage_id: Float
   time_stamp: Float
   word_limit: Float
}

"""
order by var_pop() on columns of table "reviewer_questions"
"""
input reviewer_questions_var_pop_order_by {
  id: order_by
  order_of_questions: order_by
  reviewer_question_id: order_by
  stage_id: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""aggregate var_samp on columns"""
type reviewer_questions_var_samp_fields {
   id: Float
   order_of_questions: Float
   reviewer_question_id: Float
   stage_id: Float
   time_stamp: Float
   word_limit: Float
}

"""
order by var_samp() on columns of table "reviewer_questions"
"""
input reviewer_questions_var_samp_order_by {
  id: order_by
  order_of_questions: order_by
  reviewer_question_id: order_by
  stage_id: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""aggregate variance on columns"""
type reviewer_questions_variance_fields {
   id: Float
   order_of_questions: Float
   reviewer_question_id: Float
   stage_id: Float
   time_stamp: Float
   word_limit: Float
}

"""
order by variance() on columns of table "reviewer_questions"
"""
input reviewer_questions_variance_order_by {
  id: order_by
  order_of_questions: order_by
  reviewer_question_id: order_by
  stage_id: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""
columns and relationships of "reviews"
"""
type reviews {
   assigned: Boolean! 
   created_at: timestamptz! 
   id: Int! 
  """An array relationship"""
 review_dates("""distinct select on columns"""
distinct_on: [review_dates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [review_dates_order_by! ], """filter the rows returned"""
where: review_dates_bool_exp): [review_dates! ]! 
  """An aggregate relationship"""
 review_dates_aggregate("""distinct select on columns"""
distinct_on: [review_dates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [review_dates_order_by! ], """filter the rows returned"""
where: review_dates_bool_exp): review_dates_aggregate! 
   review_id: Int
  """An array relationship"""
 reviewer_inline_comments("""distinct select on columns"""
distinct_on: [reviewer_inline_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_inline_comments_order_by! ], """filter the rows returned"""
where: reviewer_inline_comments_bool_exp): [reviewer_inline_comments! ]! 
  """An aggregate relationship"""
 reviewer_inline_comments_aggregate("""distinct select on columns"""
distinct_on: [reviewer_inline_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_inline_comments_order_by! ], """filter the rows returned"""
where: reviewer_inline_comments_bool_exp): reviewer_inline_comments_aggregate! 
  """An array relationship"""
 reviewer_question_responses("""distinct select on columns"""
distinct_on: [reviewer_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_question_responses_order_by! ], """filter the rows returned"""
where: reviewer_question_responses_bool_exp): [reviewer_question_responses! ]! 
  """An aggregate relationship"""
 reviewer_question_responses_aggregate("""distinct select on columns"""
distinct_on: [reviewer_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_question_responses_order_by! ], """filter the rows returned"""
where: reviewer_question_responses_bool_exp): reviewer_question_responses_aggregate! 
   reviewer_user_id: Int! 
  """An object relationship"""
 stage: stages! 
   stage_id: Int! 
  """An object relationship"""
 submission: submissions! 
   submission_id: Int! 
   time_stamp: bigint! 
   updated_at: timestamptz
  """An object relationship"""
 user: users! 
}

"""
aggregated selection of "reviews"
"""
type reviews_aggregate {
   aggregate: reviews_aggregate_fields
   nodes: [reviews! ]! 
}

input reviews_aggregate_bool_exp {
  bool_and: reviews_aggregate_bool_exp_bool_and
  bool_or: reviews_aggregate_bool_exp_bool_or
  count: reviews_aggregate_bool_exp_count
}

input reviews_aggregate_bool_exp_bool_and {
  arguments: reviews_select_column_reviews_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: reviews_bool_exp
  predicate: Boolean_comparison_exp! 
}

input reviews_aggregate_bool_exp_bool_or {
  arguments: reviews_select_column_reviews_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: reviews_bool_exp
  predicate: Boolean_comparison_exp! 
}

input reviews_aggregate_bool_exp_count {
  arguments: [reviews_select_column! ]
  distinct: Boolean
  filter: reviews_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "reviews"
"""
type reviews_aggregate_fields {
   avg: reviews_avg_fields
   count(columns: [reviews_select_column! ], distinct: Boolean): Int! 
   max: reviews_max_fields
   min: reviews_min_fields
   stddev: reviews_stddev_fields
   stddev_pop: reviews_stddev_pop_fields
   stddev_samp: reviews_stddev_samp_fields
   sum: reviews_sum_fields
   var_pop: reviews_var_pop_fields
   var_samp: reviews_var_samp_fields
   variance: reviews_variance_fields
}

"""
order by aggregate values of table "reviews"
"""
input reviews_aggregate_order_by {
  avg: reviews_avg_order_by
  count: order_by
  max: reviews_max_order_by
  min: reviews_min_order_by
  stddev: reviews_stddev_order_by
  stddev_pop: reviews_stddev_pop_order_by
  stddev_samp: reviews_stddev_samp_order_by
  sum: reviews_sum_order_by
  var_pop: reviews_var_pop_order_by
  var_samp: reviews_var_samp_order_by
  variance: reviews_variance_order_by
}

"""
input type for inserting array relation for remote table "reviews"
"""
input reviews_arr_rel_insert_input {
  data: [reviews_insert_input! ]! 
  """upsert condition"""
on_conflict: reviews_on_conflict
}

"""aggregate avg on columns"""
type reviews_avg_fields {
   id: Float
   review_id: Float
   reviewer_user_id: Float
   stage_id: Float
   submission_id: Float
   time_stamp: Float
}

"""
order by avg() on columns of table "reviews"
"""
input reviews_avg_order_by {
  id: order_by
  review_id: order_by
  reviewer_user_id: order_by
  stage_id: order_by
  submission_id: order_by
  time_stamp: order_by
}

"""
Boolean expression to filter rows from the table "reviews". All fields are combined with a logical 'AND'.
"""
input reviews_bool_exp {
  _and: [reviews_bool_exp! ]
  _not: reviews_bool_exp
  _or: [reviews_bool_exp! ]
  assigned: Boolean_comparison_exp
  created_at: timestamptz_comparison_exp
  id: Int_comparison_exp
  review_dates: review_dates_bool_exp
  review_dates_aggregate: review_dates_aggregate_bool_exp
  review_id: Int_comparison_exp
  reviewer_inline_comments: reviewer_inline_comments_bool_exp
  reviewer_inline_comments_aggregate: reviewer_inline_comments_aggregate_bool_exp
  reviewer_question_responses: reviewer_question_responses_bool_exp
  reviewer_question_responses_aggregate: reviewer_question_responses_aggregate_bool_exp
  reviewer_user_id: Int_comparison_exp
  stage: stages_bool_exp
  stage_id: Int_comparison_exp
  submission: submissions_bool_exp
  submission_id: Int_comparison_exp
  time_stamp: bigint_comparison_exp
  updated_at: timestamptz_comparison_exp
  user: users_bool_exp
}

"""
unique or primary key constraints on table "reviews"
"""
enum reviews_constraint {
  """
  unique or primary key constraint on columns "review_id"
  """
reviews_pkey
  """
  unique or primary key constraint on columns "submission_id", "stage_id", "reviewer_user_id"
  """
reviews_submission_id_reviewer_user_id_stage_id_key
}

"""
input type for incrementing numeric columns in table "reviews"
"""
input reviews_inc_input {
  id: Int
  review_id: Int
  reviewer_user_id: Int
  stage_id: Int
  submission_id: Int
  time_stamp: bigint
}

"""
input type for inserting data into table "reviews"
"""
input reviews_insert_input {
  assigned: Boolean! 
  created_at: timestamptz! 
  id: Int
  review_dates: review_dates_arr_rel_insert_input
  review_id: Int! 
  reviewer_inline_comments: reviewer_inline_comments_arr_rel_insert_input
  reviewer_question_responses: reviewer_question_responses_arr_rel_insert_input
  reviewer_user_id: Int! 
  stage: stages_obj_rel_insert_input
  stage_id: Int! 
  submission: submissions_obj_rel_insert_input
  submission_id: Int! 
  time_stamp: bigint! 
  updated_at: timestamptz! 
  user: users_obj_rel_insert_input
}

"""aggregate max on columns"""
type reviews_max_fields {
   created_at: timestamptz
   id: Int
   review_id: Int
   reviewer_user_id: Int
   stage_id: Int
   submission_id: Int
   time_stamp: bigint
   updated_at: timestamptz
}

"""
order by max() on columns of table "reviews"
"""
input reviews_max_order_by {
  created_at: order_by
  id: order_by
  review_id: order_by
  reviewer_user_id: order_by
  stage_id: order_by
  submission_id: order_by
  time_stamp: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type reviews_min_fields {
   created_at: timestamptz
   id: Int
   review_id: Int
   reviewer_user_id: Int
   stage_id: Int
   submission_id: Int
   time_stamp: bigint
   updated_at: timestamptz
}

"""
order by min() on columns of table "reviews"
"""
input reviews_min_order_by {
  created_at: order_by
  id: order_by
  review_id: order_by
  reviewer_user_id: order_by
  stage_id: order_by
  submission_id: order_by
  time_stamp: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "reviews"
"""
type reviews_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [reviews! ]! 
}

"""
input type for inserting object relation for remote table "reviews"
"""
input reviews_obj_rel_insert_input {
  data: reviews_insert_input! 
  """upsert condition"""
on_conflict: reviews_on_conflict
}

"""
on_conflict condition type for table "reviews"
"""
input reviews_on_conflict {
  constraint: reviews_constraint! 
  update_columns: [reviews_update_column! ]! 
  where: reviews_bool_exp
}

"""Ordering options when selecting data from "reviews"."""
input reviews_order_by {
  assigned: order_by
  created_at: order_by
  id: order_by
  review_dates_aggregate: review_dates_aggregate_order_by
  review_id: order_by
  reviewer_inline_comments_aggregate: reviewer_inline_comments_aggregate_order_by
  reviewer_question_responses_aggregate: reviewer_question_responses_aggregate_order_by
  reviewer_user_id: order_by
  stage: stages_order_by
  stage_id: order_by
  submission: submissions_order_by
  submission_id: order_by
  time_stamp: order_by
  updated_at: order_by
  user: users_order_by
}

"""primary key columns input for table: reviews"""
input reviews_pk_columns_input {
  id: Int! 
}

"""
select columns of table "reviews"
"""
enum reviews_select_column {
  """column name"""
assigned
  """column name"""
created_at
  """column name"""
id
  """column name"""
review_id
  """column name"""
reviewer_user_id
  """column name"""
stage_id
  """column name"""
submission_id
  """column name"""
time_stamp
  """column name"""
updated_at
}

"""
select "reviews_aggregate_bool_exp_bool_and_arguments_columns" columns of table "reviews"
"""
enum reviews_select_column_reviews_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
assigned
}

"""
select "reviews_aggregate_bool_exp_bool_or_arguments_columns" columns of table "reviews"
"""
enum reviews_select_column_reviews_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
assigned
}

"""
input type for updating data in table "reviews"
"""
input reviews_set_input {
  assigned: Boolean
  created_at: timestamptz
  id: Int
  review_id: Int
  reviewer_user_id: Int
  stage_id: Int
  submission_id: Int
  time_stamp: bigint
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type reviews_stddev_fields {
   id: Float
   review_id: Float
   reviewer_user_id: Float
   stage_id: Float
   submission_id: Float
   time_stamp: Float
}

"""
order by stddev() on columns of table "reviews"
"""
input reviews_stddev_order_by {
  id: order_by
  review_id: order_by
  reviewer_user_id: order_by
  stage_id: order_by
  submission_id: order_by
  time_stamp: order_by
}

"""aggregate stddev_pop on columns"""
type reviews_stddev_pop_fields {
   id: Float
   review_id: Float
   reviewer_user_id: Float
   stage_id: Float
   submission_id: Float
   time_stamp: Float
}

"""
order by stddev_pop() on columns of table "reviews"
"""
input reviews_stddev_pop_order_by {
  id: order_by
  review_id: order_by
  reviewer_user_id: order_by
  stage_id: order_by
  submission_id: order_by
  time_stamp: order_by
}

"""aggregate stddev_samp on columns"""
type reviews_stddev_samp_fields {
   id: Float
   review_id: Float
   reviewer_user_id: Float
   stage_id: Float
   submission_id: Float
   time_stamp: Float
}

"""
order by stddev_samp() on columns of table "reviews"
"""
input reviews_stddev_samp_order_by {
  id: order_by
  review_id: order_by
  reviewer_user_id: order_by
  stage_id: order_by
  submission_id: order_by
  time_stamp: order_by
}

"""
Streaming cursor of the table "reviews"
"""
input reviews_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: reviews_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input reviews_stream_cursor_value_input {
  assigned: Boolean
  created_at: timestamptz
  id: Int
  review_id: Int
  reviewer_user_id: Int
  stage_id: Int
  submission_id: Int
  time_stamp: bigint
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type reviews_sum_fields {
   id: Int
   review_id: Int
   reviewer_user_id: Int
   stage_id: Int
   submission_id: Int
   time_stamp: bigint
}

"""
order by sum() on columns of table "reviews"
"""
input reviews_sum_order_by {
  id: order_by
  review_id: order_by
  reviewer_user_id: order_by
  stage_id: order_by
  submission_id: order_by
  time_stamp: order_by
}

"""
update columns of table "reviews"
"""
enum reviews_update_column {
  """column name"""
assigned
  """column name"""
created_at
  """column name"""
id
  """column name"""
review_id
  """column name"""
reviewer_user_id
  """column name"""
stage_id
  """column name"""
submission_id
  """column name"""
time_stamp
  """column name"""
updated_at
}

input reviews_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: reviews_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: reviews_set_input
  where: reviews_bool_exp! 
}

"""aggregate var_pop on columns"""
type reviews_var_pop_fields {
   id: Float
   review_id: Float
   reviewer_user_id: Float
   stage_id: Float
   submission_id: Float
   time_stamp: Float
}

"""
order by var_pop() on columns of table "reviews"
"""
input reviews_var_pop_order_by {
  id: order_by
  review_id: order_by
  reviewer_user_id: order_by
  stage_id: order_by
  submission_id: order_by
  time_stamp: order_by
}

"""aggregate var_samp on columns"""
type reviews_var_samp_fields {
   id: Float
   review_id: Float
   reviewer_user_id: Float
   stage_id: Float
   submission_id: Float
   time_stamp: Float
}

"""
order by var_samp() on columns of table "reviews"
"""
input reviews_var_samp_order_by {
  id: order_by
  review_id: order_by
  reviewer_user_id: order_by
  stage_id: order_by
  submission_id: order_by
  time_stamp: order_by
}

"""aggregate variance on columns"""
type reviews_variance_fields {
   id: Float
   review_id: Float
   reviewer_user_id: Float
   stage_id: Float
   submission_id: Float
   time_stamp: Float
}

"""
order by variance() on columns of table "reviews"
"""
input reviews_variance_order_by {
  id: order_by
  review_id: order_by
  reviewer_user_id: order_by
  stage_id: order_by
  submission_id: order_by
  time_stamp: order_by
}

"""
columns and relationships of "search_authors"
"""
type search_authors {
   author_id: Int
   author_order: Int
   degree: String
   email: String
   fe_epoch: bigint
   first_name: String
   last_name: String
   middle_initial: String
   orcid_id: String
   presenting: Boolean
   profile_picture: String
   search_similarity: Float
  """An object relationship"""
 submission: submissions
   submission_id: Int
   title: String
  """An object relationship"""
 users: users
}

"""
aggregated selection of "search_authors"
"""
type search_authors_aggregate {
   aggregate: search_authors_aggregate_fields
   nodes: [search_authors! ]! 
}

"""
aggregate fields of "search_authors"
"""
type search_authors_aggregate_fields {
   avg: search_authors_avg_fields
   count(columns: [search_authors_select_column! ], distinct: Boolean): Int! 
   max: search_authors_max_fields
   min: search_authors_min_fields
   stddev: search_authors_stddev_fields
   stddev_pop: search_authors_stddev_pop_fields
   stddev_samp: search_authors_stddev_samp_fields
   sum: search_authors_sum_fields
   var_pop: search_authors_var_pop_fields
   var_samp: search_authors_var_samp_fields
   variance: search_authors_variance_fields
}

"""aggregate avg on columns"""
type search_authors_avg_fields {
   author_id: Float
   author_order: Float
   fe_epoch: Float
   search_similarity: Float
   submission_id: Float
}

"""
Boolean expression to filter rows from the table "search_authors". All fields are combined with a logical 'AND'.
"""
input search_authors_bool_exp {
  _and: [search_authors_bool_exp! ]
  _not: search_authors_bool_exp
  _or: [search_authors_bool_exp! ]
  author_id: Int_comparison_exp
  author_order: Int_comparison_exp
  degree: String_comparison_exp
  email: String_comparison_exp
  fe_epoch: bigint_comparison_exp
  first_name: String_comparison_exp
  last_name: String_comparison_exp
  middle_initial: String_comparison_exp
  orcid_id: String_comparison_exp
  presenting: Boolean_comparison_exp
  profile_picture: String_comparison_exp
  search_similarity: Float_comparison_exp
  submission: submissions_bool_exp
  submission_id: Int_comparison_exp
  title: String_comparison_exp
  users: users_bool_exp
}

input search_authors_fuzzy_args {
  search: String
}

"""
input type for incrementing numeric columns in table "search_authors"
"""
input search_authors_inc_input {
  author_id: Int
  author_order: Int
  fe_epoch: bigint
  search_similarity: Float
  submission_id: Int
}

"""
input type for inserting data into table "search_authors"
"""
input search_authors_insert_input {
  author_id: Int
  author_order: Int
  degree: String
  email: String
  fe_epoch: bigint
  first_name: String
  last_name: String
  middle_initial: String
  orcid_id: String
  presenting: Boolean
  profile_picture: String
  search_similarity: Float
  submission: submissions_obj_rel_insert_input
  submission_id: Int
  title: String
  users: users_obj_rel_insert_input
}

"""aggregate max on columns"""
type search_authors_max_fields {
   author_id: Int
   author_order: Int
   degree: String
   email: String
   fe_epoch: bigint
   first_name: String
   last_name: String
   middle_initial: String
   orcid_id: String
   profile_picture: String
   search_similarity: Float
   submission_id: Int
   title: String
}

"""aggregate min on columns"""
type search_authors_min_fields {
   author_id: Int
   author_order: Int
   degree: String
   email: String
   fe_epoch: bigint
   first_name: String
   last_name: String
   middle_initial: String
   orcid_id: String
   profile_picture: String
   search_similarity: Float
   submission_id: Int
   title: String
}

"""
response of any mutation on the table "search_authors"
"""
type search_authors_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [search_authors! ]! 
}

"""Ordering options when selecting data from "search_authors"."""
input search_authors_order_by {
  author_id: order_by
  author_order: order_by
  degree: order_by
  email: order_by
  fe_epoch: order_by
  first_name: order_by
  last_name: order_by
  middle_initial: order_by
  orcid_id: order_by
  presenting: order_by
  profile_picture: order_by
  search_similarity: order_by
  submission: submissions_order_by
  submission_id: order_by
  title: order_by
  users: users_order_by
}

"""
select columns of table "search_authors"
"""
enum search_authors_select_column {
  """column name"""
author_id
  """column name"""
author_order
  """column name"""
degree
  """column name"""
email
  """column name"""
fe_epoch
  """column name"""
first_name
  """column name"""
last_name
  """column name"""
middle_initial
  """column name"""
orcid_id
  """column name"""
presenting
  """column name"""
profile_picture
  """column name"""
search_similarity
  """column name"""
submission_id
  """column name"""
title
}

"""
input type for updating data in table "search_authors"
"""
input search_authors_set_input {
  author_id: Int
  author_order: Int
  degree: String
  email: String
  fe_epoch: bigint
  first_name: String
  last_name: String
  middle_initial: String
  orcid_id: String
  presenting: Boolean
  profile_picture: String
  search_similarity: Float
  submission_id: Int
  title: String
}

"""aggregate stddev on columns"""
type search_authors_stddev_fields {
   author_id: Float
   author_order: Float
   fe_epoch: Float
   search_similarity: Float
   submission_id: Float
}

"""aggregate stddev_pop on columns"""
type search_authors_stddev_pop_fields {
   author_id: Float
   author_order: Float
   fe_epoch: Float
   search_similarity: Float
   submission_id: Float
}

"""aggregate stddev_samp on columns"""
type search_authors_stddev_samp_fields {
   author_id: Float
   author_order: Float
   fe_epoch: Float
   search_similarity: Float
   submission_id: Float
}

"""
Streaming cursor of the table "search_authors"
"""
input search_authors_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: search_authors_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input search_authors_stream_cursor_value_input {
  author_id: Int
  author_order: Int
  degree: String
  email: String
  fe_epoch: bigint
  first_name: String
  last_name: String
  middle_initial: String
  orcid_id: String
  presenting: Boolean
  profile_picture: String
  search_similarity: Float
  submission_id: Int
  title: String
}

"""aggregate sum on columns"""
type search_authors_sum_fields {
   author_id: Int
   author_order: Int
   fe_epoch: bigint
   search_similarity: Float
   submission_id: Int
}

input search_authors_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: search_authors_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: search_authors_set_input
  where: search_authors_bool_exp! 
}

"""aggregate var_pop on columns"""
type search_authors_var_pop_fields {
   author_id: Float
   author_order: Float
   fe_epoch: Float
   search_similarity: Float
   submission_id: Float
}

"""aggregate var_samp on columns"""
type search_authors_var_samp_fields {
   author_id: Float
   author_order: Float
   fe_epoch: Float
   search_similarity: Float
   submission_id: Float
}

"""aggregate variance on columns"""
type search_authors_variance_fields {
   author_id: Float
   author_order: Float
   fe_epoch: Float
   search_similarity: Float
   submission_id: Float
}

"""
columns and relationships of "search_chairs"
"""
type search_chairs {
   author_id: Int
   author_order: Int
   degree: String
   email: String
   first_name: String
   last_name: String
   middle_initial: String
   orcid_id: String
   presenting: Boolean
   profile_picture: String
  """An object relationship"""
 program_session: program_sessions
  """An array relationship"""
 program_sessions("""distinct select on columns"""
distinct_on: [program_sessions_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_chairs_order_by! ], """filter the rows returned"""
where: program_sessions_chairs_bool_exp): [program_sessions_chairs! ]! 
  """An aggregate relationship"""
 program_sessions_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_chairs_order_by! ], """filter the rows returned"""
where: program_sessions_chairs_bool_exp): program_sessions_chairs_aggregate! 
   search_similarity: Float
   submission_id: Int
   title: String
  """An object relationship"""
 user: users
}

"""
aggregated selection of "search_chairs"
"""
type search_chairs_aggregate {
   aggregate: search_chairs_aggregate_fields
   nodes: [search_chairs! ]! 
}

"""
aggregate fields of "search_chairs"
"""
type search_chairs_aggregate_fields {
   avg: search_chairs_avg_fields
   count(columns: [search_chairs_select_column! ], distinct: Boolean): Int! 
   max: search_chairs_max_fields
   min: search_chairs_min_fields
   stddev: search_chairs_stddev_fields
   stddev_pop: search_chairs_stddev_pop_fields
   stddev_samp: search_chairs_stddev_samp_fields
   sum: search_chairs_sum_fields
   var_pop: search_chairs_var_pop_fields
   var_samp: search_chairs_var_samp_fields
   variance: search_chairs_variance_fields
}

"""aggregate avg on columns"""
type search_chairs_avg_fields {
   author_id: Float
   author_order: Float
   search_similarity: Float
   submission_id: Float
}

"""
Boolean expression to filter rows from the table "search_chairs". All fields are combined with a logical 'AND'.
"""
input search_chairs_bool_exp {
  _and: [search_chairs_bool_exp! ]
  _not: search_chairs_bool_exp
  _or: [search_chairs_bool_exp! ]
  author_id: Int_comparison_exp
  author_order: Int_comparison_exp
  degree: String_comparison_exp
  email: String_comparison_exp
  first_name: String_comparison_exp
  last_name: String_comparison_exp
  middle_initial: String_comparison_exp
  orcid_id: String_comparison_exp
  presenting: Boolean_comparison_exp
  profile_picture: String_comparison_exp
  program_session: program_sessions_bool_exp
  program_sessions: program_sessions_chairs_bool_exp
  program_sessions_aggregate: program_sessions_chairs_aggregate_bool_exp
  search_similarity: Float_comparison_exp
  submission_id: Int_comparison_exp
  title: String_comparison_exp
  user: users_bool_exp
}

"""
input type for incrementing numeric columns in table "search_chairs"
"""
input search_chairs_inc_input {
  author_id: Int
  author_order: Int
  search_similarity: Float
  submission_id: Int
}

"""
input type for inserting data into table "search_chairs"
"""
input search_chairs_insert_input {
  author_id: Int
  author_order: Int
  degree: String
  email: String
  first_name: String
  last_name: String
  middle_initial: String
  orcid_id: String
  presenting: Boolean
  profile_picture: String
  program_session: program_sessions_obj_rel_insert_input
  program_sessions: program_sessions_chairs_arr_rel_insert_input
  search_similarity: Float
  submission_id: Int
  title: String
  user: users_obj_rel_insert_input
}

"""aggregate max on columns"""
type search_chairs_max_fields {
   author_id: Int
   author_order: Int
   degree: String
   email: String
   first_name: String
   last_name: String
   middle_initial: String
   orcid_id: String
   profile_picture: String
   search_similarity: Float
   submission_id: Int
   title: String
}

"""aggregate min on columns"""
type search_chairs_min_fields {
   author_id: Int
   author_order: Int
   degree: String
   email: String
   first_name: String
   last_name: String
   middle_initial: String
   orcid_id: String
   profile_picture: String
   search_similarity: Float
   submission_id: Int
   title: String
}

"""
response of any mutation on the table "search_chairs"
"""
type search_chairs_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [search_chairs! ]! 
}

"""Ordering options when selecting data from "search_chairs"."""
input search_chairs_order_by {
  author_id: order_by
  author_order: order_by
  degree: order_by
  email: order_by
  first_name: order_by
  last_name: order_by
  middle_initial: order_by
  orcid_id: order_by
  presenting: order_by
  profile_picture: order_by
  program_session: program_sessions_order_by
  program_sessions_aggregate: program_sessions_chairs_aggregate_order_by
  search_similarity: order_by
  submission_id: order_by
  title: order_by
  user: users_order_by
}

"""
select columns of table "search_chairs"
"""
enum search_chairs_select_column {
  """column name"""
author_id
  """column name"""
author_order
  """column name"""
degree
  """column name"""
email
  """column name"""
first_name
  """column name"""
last_name
  """column name"""
middle_initial
  """column name"""
orcid_id
  """column name"""
presenting
  """column name"""
profile_picture
  """column name"""
search_similarity
  """column name"""
submission_id
  """column name"""
title
}

"""
input type for updating data in table "search_chairs"
"""
input search_chairs_set_input {
  author_id: Int
  author_order: Int
  degree: String
  email: String
  first_name: String
  last_name: String
  middle_initial: String
  orcid_id: String
  presenting: Boolean
  profile_picture: String
  search_similarity: Float
  submission_id: Int
  title: String
}

"""aggregate stddev on columns"""
type search_chairs_stddev_fields {
   author_id: Float
   author_order: Float
   search_similarity: Float
   submission_id: Float
}

"""aggregate stddev_pop on columns"""
type search_chairs_stddev_pop_fields {
   author_id: Float
   author_order: Float
   search_similarity: Float
   submission_id: Float
}

"""aggregate stddev_samp on columns"""
type search_chairs_stddev_samp_fields {
   author_id: Float
   author_order: Float
   search_similarity: Float
   submission_id: Float
}

"""
Streaming cursor of the table "search_chairs"
"""
input search_chairs_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: search_chairs_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input search_chairs_stream_cursor_value_input {
  author_id: Int
  author_order: Int
  degree: String
  email: String
  first_name: String
  last_name: String
  middle_initial: String
  orcid_id: String
  presenting: Boolean
  profile_picture: String
  search_similarity: Float
  submission_id: Int
  title: String
}

"""aggregate sum on columns"""
type search_chairs_sum_fields {
   author_id: Int
   author_order: Int
   search_similarity: Float
   submission_id: Int
}

input search_chairs_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: search_chairs_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: search_chairs_set_input
  where: search_chairs_bool_exp! 
}

"""aggregate var_pop on columns"""
type search_chairs_var_pop_fields {
   author_id: Float
   author_order: Float
   search_similarity: Float
   submission_id: Float
}

"""aggregate var_samp on columns"""
type search_chairs_var_samp_fields {
   author_id: Float
   author_order: Float
   search_similarity: Float
   submission_id: Float
}

"""aggregate variance on columns"""
type search_chairs_variance_fields {
   author_id: Float
   author_order: Float
   search_similarity: Float
   submission_id: Float
}

input search_program_session_names_fuzzy_args {
  search: String
}

"""
columns and relationships of "search_program_sessions"
"""
type search_program_sessions {
   admin_notes: String
   colour: String
   column_width: Int
   description: String
   end_time: time
   event_id: Int
   name: String
   program_date_id: Int
   program_location_id: Int
   program_session_id: Int
   program_track_id: Int
   program_type_id: Int
   program_video_label: String
   program_video_link: String
   search_similarity: Float
  """An object relationship"""
 session: program_sessions
   start_time: time
   use_track_colour: Boolean
   use_type_colour: Boolean
}

type search_program_sessions_aggregate {
   aggregate: search_program_sessions_aggregate_fields
   nodes: [search_program_sessions! ]! 
}

"""
aggregate fields of "search_program_sessions"
"""
type search_program_sessions_aggregate_fields {
   avg: search_program_sessions_avg_fields
   count(columns: [search_program_sessions_select_column! ], distinct: Boolean): Int! 
   max: search_program_sessions_max_fields
   min: search_program_sessions_min_fields
   stddev: search_program_sessions_stddev_fields
   stddev_pop: search_program_sessions_stddev_pop_fields
   stddev_samp: search_program_sessions_stddev_samp_fields
   sum: search_program_sessions_sum_fields
   var_pop: search_program_sessions_var_pop_fields
   var_samp: search_program_sessions_var_samp_fields
   variance: search_program_sessions_variance_fields
}

"""aggregate avg on columns"""
type search_program_sessions_avg_fields {
   column_width: Float
   event_id: Float
   program_date_id: Float
   program_location_id: Float
   program_session_id: Float
   program_track_id: Float
   program_type_id: Float
   search_similarity: Float
}

"""
Boolean expression to filter rows from the table "search_program_sessions". All fields are combined with a logical 'AND'.
"""
input search_program_sessions_bool_exp {
  _and: [search_program_sessions_bool_exp! ]
  _not: search_program_sessions_bool_exp
  _or: [search_program_sessions_bool_exp! ]
  admin_notes: String_comparison_exp
  colour: String_comparison_exp
  column_width: Int_comparison_exp
  description: String_comparison_exp
  end_time: time_comparison_exp
  event_id: Int_comparison_exp
  name: String_comparison_exp
  program_date_id: Int_comparison_exp
  program_location_id: Int_comparison_exp
  program_session_id: Int_comparison_exp
  program_track_id: Int_comparison_exp
  program_type_id: Int_comparison_exp
  program_video_label: String_comparison_exp
  program_video_link: String_comparison_exp
  search_similarity: Float_comparison_exp
  session: program_sessions_bool_exp
  start_time: time_comparison_exp
  use_track_colour: Boolean_comparison_exp
  use_type_colour: Boolean_comparison_exp
}

"""
input type for incrementing numeric columns in table "search_program_sessions"
"""
input search_program_sessions_inc_input {
  column_width: Int
  event_id: Int
  program_date_id: Int
  program_location_id: Int
  program_session_id: Int
  program_track_id: Int
  program_type_id: Int
  search_similarity: Float
}

"""
input type for inserting data into table "search_program_sessions"
"""
input search_program_sessions_insert_input {
  admin_notes: String
  colour: String
  column_width: Int
  description: String
  end_time: time
  event_id: Int
  name: String
  program_date_id: Int
  program_location_id: Int
  program_session_id: Int
  program_track_id: Int
  program_type_id: Int
  program_video_label: String
  program_video_link: String
  search_similarity: Float
  session: program_sessions_obj_rel_insert_input
  start_time: time
  use_track_colour: Boolean
  use_type_colour: Boolean
}

"""aggregate max on columns"""
type search_program_sessions_max_fields {
   admin_notes: String
   colour: String
   column_width: Int
   description: String
   event_id: Int
   name: String
   program_date_id: Int
   program_location_id: Int
   program_session_id: Int
   program_track_id: Int
   program_type_id: Int
   program_video_label: String
   program_video_link: String
   search_similarity: Float
}

"""aggregate min on columns"""
type search_program_sessions_min_fields {
   admin_notes: String
   colour: String
   column_width: Int
   description: String
   event_id: Int
   name: String
   program_date_id: Int
   program_location_id: Int
   program_session_id: Int
   program_track_id: Int
   program_type_id: Int
   program_video_label: String
   program_video_link: String
   search_similarity: Float
}

"""
response of any mutation on the table "search_program_sessions"
"""
type search_program_sessions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [search_program_sessions! ]! 
}

"""Ordering options when selecting data from "search_program_sessions"."""
input search_program_sessions_order_by {
  admin_notes: order_by
  colour: order_by
  column_width: order_by
  description: order_by
  end_time: order_by
  event_id: order_by
  name: order_by
  program_date_id: order_by
  program_location_id: order_by
  program_session_id: order_by
  program_track_id: order_by
  program_type_id: order_by
  program_video_label: order_by
  program_video_link: order_by
  search_similarity: order_by
  session: program_sessions_order_by
  start_time: order_by
  use_track_colour: order_by
  use_type_colour: order_by
}

"""
select columns of table "search_program_sessions"
"""
enum search_program_sessions_select_column {
  """column name"""
admin_notes
  """column name"""
colour
  """column name"""
column_width
  """column name"""
description
  """column name"""
end_time
  """column name"""
event_id
  """column name"""
name
  """column name"""
program_date_id
  """column name"""
program_location_id
  """column name"""
program_session_id
  """column name"""
program_track_id
  """column name"""
program_type_id
  """column name"""
program_video_label
  """column name"""
program_video_link
  """column name"""
search_similarity
  """column name"""
start_time
  """column name"""
use_track_colour
  """column name"""
use_type_colour
}

"""
input type for updating data in table "search_program_sessions"
"""
input search_program_sessions_set_input {
  admin_notes: String
  colour: String
  column_width: Int
  description: String
  end_time: time
  event_id: Int
  name: String
  program_date_id: Int
  program_location_id: Int
  program_session_id: Int
  program_track_id: Int
  program_type_id: Int
  program_video_label: String
  program_video_link: String
  search_similarity: Float
  start_time: time
  use_track_colour: Boolean
  use_type_colour: Boolean
}

"""aggregate stddev on columns"""
type search_program_sessions_stddev_fields {
   column_width: Float
   event_id: Float
   program_date_id: Float
   program_location_id: Float
   program_session_id: Float
   program_track_id: Float
   program_type_id: Float
   search_similarity: Float
}

"""aggregate stddev_pop on columns"""
type search_program_sessions_stddev_pop_fields {
   column_width: Float
   event_id: Float
   program_date_id: Float
   program_location_id: Float
   program_session_id: Float
   program_track_id: Float
   program_type_id: Float
   search_similarity: Float
}

"""aggregate stddev_samp on columns"""
type search_program_sessions_stddev_samp_fields {
   column_width: Float
   event_id: Float
   program_date_id: Float
   program_location_id: Float
   program_session_id: Float
   program_track_id: Float
   program_type_id: Float
   search_similarity: Float
}

"""
Streaming cursor of the table "search_program_sessions"
"""
input search_program_sessions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: search_program_sessions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input search_program_sessions_stream_cursor_value_input {
  admin_notes: String
  colour: String
  column_width: Int
  description: String
  end_time: time
  event_id: Int
  name: String
  program_date_id: Int
  program_location_id: Int
  program_session_id: Int
  program_track_id: Int
  program_type_id: Int
  program_video_label: String
  program_video_link: String
  search_similarity: Float
  start_time: time
  use_track_colour: Boolean
  use_type_colour: Boolean
}

"""aggregate sum on columns"""
type search_program_sessions_sum_fields {
   column_width: Int
   event_id: Int
   program_date_id: Int
   program_location_id: Int
   program_session_id: Int
   program_track_id: Int
   program_type_id: Int
   search_similarity: Float
}

input search_program_sessions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: search_program_sessions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: search_program_sessions_set_input
  where: search_program_sessions_bool_exp! 
}

"""aggregate var_pop on columns"""
type search_program_sessions_var_pop_fields {
   column_width: Float
   event_id: Float
   program_date_id: Float
   program_location_id: Float
   program_session_id: Float
   program_track_id: Float
   program_type_id: Float
   search_similarity: Float
}

"""aggregate var_samp on columns"""
type search_program_sessions_var_samp_fields {
   column_width: Float
   event_id: Float
   program_date_id: Float
   program_location_id: Float
   program_session_id: Float
   program_track_id: Float
   program_type_id: Float
   search_similarity: Float
}

"""aggregate variance on columns"""
type search_program_sessions_variance_fields {
   column_width: Float
   event_id: Float
   program_date_id: Float
   program_location_id: Float
   program_session_id: Float
   program_track_id: Float
   program_type_id: Float
   search_similarity: Float
}

"""
Table shouldn't actually be used. It's just a reference table for a fuzzy search function so we can apply permissions.
"""
type search_question_responses {
   gives_permission_to_appear_in_programme: Boolean
   poster_image: String
   poster_image_height: Int
  """An object relationship"""
 question: questions
   question_id: Int
   question_response_id: Int
   search_similarity: Float
  """An object relationship"""
 submission: submissions
   submission_id: Int
   value: String
   word_count: smallint
}

"""
aggregated selection of "search_question_responses"
"""
type search_question_responses_aggregate {
   aggregate: search_question_responses_aggregate_fields
   nodes: [search_question_responses! ]! 
}

"""
aggregate fields of "search_question_responses"
"""
type search_question_responses_aggregate_fields {
   avg: search_question_responses_avg_fields
   count(columns: [search_question_responses_select_column! ], distinct: Boolean): Int! 
   max: search_question_responses_max_fields
   min: search_question_responses_min_fields
   stddev: search_question_responses_stddev_fields
   stddev_pop: search_question_responses_stddev_pop_fields
   stddev_samp: search_question_responses_stddev_samp_fields
   sum: search_question_responses_sum_fields
   var_pop: search_question_responses_var_pop_fields
   var_samp: search_question_responses_var_samp_fields
   variance: search_question_responses_variance_fields
}

"""aggregate avg on columns"""
type search_question_responses_avg_fields {
   poster_image_height: Float
   question_id: Float
   question_response_id: Float
   search_similarity: Float
   submission_id: Float
   word_count: Float
}

"""
Boolean expression to filter rows from the table "search_question_responses". All fields are combined with a logical 'AND'.
"""
input search_question_responses_bool_exp {
  _and: [search_question_responses_bool_exp! ]
  _not: search_question_responses_bool_exp
  _or: [search_question_responses_bool_exp! ]
  gives_permission_to_appear_in_programme: Boolean_comparison_exp
  poster_image: String_comparison_exp
  poster_image_height: Int_comparison_exp
  question: questions_bool_exp
  question_id: Int_comparison_exp
  question_response_id: Int_comparison_exp
  search_similarity: Float_comparison_exp
  submission: submissions_bool_exp
  submission_id: Int_comparison_exp
  value: String_comparison_exp
  word_count: smallint_comparison_exp
}

"""
input type for incrementing numeric columns in table "search_question_responses"
"""
input search_question_responses_inc_input {
  poster_image_height: Int
  question_id: Int
  question_response_id: Int
  search_similarity: Float
  submission_id: Int
  word_count: smallint
}

"""
input type for inserting data into table "search_question_responses"
"""
input search_question_responses_insert_input {
  gives_permission_to_appear_in_programme: Boolean
  poster_image: String
  poster_image_height: Int
  question: questions_obj_rel_insert_input
  question_id: Int
  question_response_id: Int
  search_similarity: Float
  submission: submissions_obj_rel_insert_input
  submission_id: Int
  value: String
  word_count: smallint
}

"""aggregate max on columns"""
type search_question_responses_max_fields {
   poster_image: String
   poster_image_height: Int
   question_id: Int
   question_response_id: Int
   search_similarity: Float
   submission_id: Int
   value: String
   word_count: smallint
}

"""aggregate min on columns"""
type search_question_responses_min_fields {
   poster_image: String
   poster_image_height: Int
   question_id: Int
   question_response_id: Int
   search_similarity: Float
   submission_id: Int
   value: String
   word_count: smallint
}

"""
response of any mutation on the table "search_question_responses"
"""
type search_question_responses_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [search_question_responses! ]! 
}

"""Ordering options when selecting data from "search_question_responses"."""
input search_question_responses_order_by {
  gives_permission_to_appear_in_programme: order_by
  poster_image: order_by
  poster_image_height: order_by
  question: questions_order_by
  question_id: order_by
  question_response_id: order_by
  search_similarity: order_by
  submission: submissions_order_by
  submission_id: order_by
  value: order_by
  word_count: order_by
}

"""
select columns of table "search_question_responses"
"""
enum search_question_responses_select_column {
  """column name"""
gives_permission_to_appear_in_programme
  """column name"""
poster_image
  """column name"""
poster_image_height
  """column name"""
question_id
  """column name"""
question_response_id
  """column name"""
search_similarity
  """column name"""
submission_id
  """column name"""
value
  """column name"""
word_count
}

"""
input type for updating data in table "search_question_responses"
"""
input search_question_responses_set_input {
  gives_permission_to_appear_in_programme: Boolean
  poster_image: String
  poster_image_height: Int
  question_id: Int
  question_response_id: Int
  search_similarity: Float
  submission_id: Int
  value: String
  word_count: smallint
}

"""aggregate stddev on columns"""
type search_question_responses_stddev_fields {
   poster_image_height: Float
   question_id: Float
   question_response_id: Float
   search_similarity: Float
   submission_id: Float
   word_count: Float
}

"""aggregate stddev_pop on columns"""
type search_question_responses_stddev_pop_fields {
   poster_image_height: Float
   question_id: Float
   question_response_id: Float
   search_similarity: Float
   submission_id: Float
   word_count: Float
}

"""aggregate stddev_samp on columns"""
type search_question_responses_stddev_samp_fields {
   poster_image_height: Float
   question_id: Float
   question_response_id: Float
   search_similarity: Float
   submission_id: Float
   word_count: Float
}

"""
Streaming cursor of the table "search_question_responses"
"""
input search_question_responses_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: search_question_responses_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input search_question_responses_stream_cursor_value_input {
  gives_permission_to_appear_in_programme: Boolean
  poster_image: String
  poster_image_height: Int
  question_id: Int
  question_response_id: Int
  search_similarity: Float
  submission_id: Int
  value: String
  word_count: smallint
}

"""aggregate sum on columns"""
type search_question_responses_sum_fields {
   poster_image_height: Int
   question_id: Int
   question_response_id: Int
   search_similarity: Float
   submission_id: Int
   word_count: smallint
}

input search_question_responses_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: search_question_responses_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: search_question_responses_set_input
  where: search_question_responses_bool_exp! 
}

"""aggregate var_pop on columns"""
type search_question_responses_var_pop_fields {
   poster_image_height: Float
   question_id: Float
   question_response_id: Float
   search_similarity: Float
   submission_id: Float
   word_count: Float
}

"""aggregate var_samp on columns"""
type search_question_responses_var_samp_fields {
   poster_image_height: Float
   question_id: Float
   question_response_id: Float
   search_similarity: Float
   submission_id: Float
   word_count: Float
}

"""aggregate variance on columns"""
type search_question_responses_variance_fields {
   poster_image_height: Float
   question_id: Float
   question_response_id: Float
   search_similarity: Float
   submission_id: Float
   word_count: Float
}

input search_session_chairs_fuzzy_args {
  search: String
}

input search_submission_titles_fuzzy_args {
  search: String
}

"""
columns and relationships of "search_symposium_people"
"""
type search_symposium_people {
   email: String
   event_id: Int
   first_name: String
   last_name: String
   name: String
   role: symposium_role
   search_similarity: Float
  """An object relationship"""
 symposium: symposia
   symposium_id: Int
  """An object relationship"""
 user: users
}

"""
aggregated selection of "search_symposium_people"
"""
type search_symposium_people_aggregate {
   aggregate: search_symposium_people_aggregate_fields
   nodes: [search_symposium_people! ]! 
}

"""
aggregate fields of "search_symposium_people"
"""
type search_symposium_people_aggregate_fields {
   avg: search_symposium_people_avg_fields
   count(columns: [search_symposium_people_select_column! ], distinct: Boolean): Int! 
   max: search_symposium_people_max_fields
   min: search_symposium_people_min_fields
   stddev: search_symposium_people_stddev_fields
   stddev_pop: search_symposium_people_stddev_pop_fields
   stddev_samp: search_symposium_people_stddev_samp_fields
   sum: search_symposium_people_sum_fields
   var_pop: search_symposium_people_var_pop_fields
   var_samp: search_symposium_people_var_samp_fields
   variance: search_symposium_people_variance_fields
}

"""aggregate avg on columns"""
type search_symposium_people_avg_fields {
   event_id: Float
   search_similarity: Float
   symposium_id: Float
}

"""
Boolean expression to filter rows from the table "search_symposium_people". All fields are combined with a logical 'AND'.
"""
input search_symposium_people_bool_exp {
  _and: [search_symposium_people_bool_exp! ]
  _not: search_symposium_people_bool_exp
  _or: [search_symposium_people_bool_exp! ]
  email: String_comparison_exp
  event_id: Int_comparison_exp
  first_name: String_comparison_exp
  last_name: String_comparison_exp
  name: String_comparison_exp
  role: symposium_role_comparison_exp
  search_similarity: Float_comparison_exp
  symposium: symposia_bool_exp
  symposium_id: Int_comparison_exp
  user: users_bool_exp
}

input search_symposium_people_fuzzy_args {
  search: String
}

"""aggregate max on columns"""
type search_symposium_people_max_fields {
   email: String
   event_id: Int
   first_name: String
   last_name: String
   name: String
   role: symposium_role
   search_similarity: Float
   symposium_id: Int
}

"""aggregate min on columns"""
type search_symposium_people_min_fields {
   email: String
   event_id: Int
   first_name: String
   last_name: String
   name: String
   role: symposium_role
   search_similarity: Float
   symposium_id: Int
}

"""Ordering options when selecting data from "search_symposium_people"."""
input search_symposium_people_order_by {
  email: order_by
  event_id: order_by
  first_name: order_by
  last_name: order_by
  name: order_by
  role: order_by
  search_similarity: order_by
  symposium: symposia_order_by
  symposium_id: order_by
  user: users_order_by
}

"""
select columns of table "search_symposium_people"
"""
enum search_symposium_people_select_column {
  """column name"""
email
  """column name"""
event_id
  """column name"""
first_name
  """column name"""
last_name
  """column name"""
name
  """column name"""
role
  """column name"""
search_similarity
  """column name"""
symposium_id
}

"""aggregate stddev on columns"""
type search_symposium_people_stddev_fields {
   event_id: Float
   search_similarity: Float
   symposium_id: Float
}

"""aggregate stddev_pop on columns"""
type search_symposium_people_stddev_pop_fields {
   event_id: Float
   search_similarity: Float
   symposium_id: Float
}

"""aggregate stddev_samp on columns"""
type search_symposium_people_stddev_samp_fields {
   event_id: Float
   search_similarity: Float
   symposium_id: Float
}

"""
Streaming cursor of the table "search_symposium_people"
"""
input search_symposium_people_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: search_symposium_people_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input search_symposium_people_stream_cursor_value_input {
  email: String
  event_id: Int
  first_name: String
  last_name: String
  name: String
  role: symposium_role
  search_similarity: Float
  symposium_id: Int
}

"""aggregate sum on columns"""
type search_symposium_people_sum_fields {
   event_id: Int
   search_similarity: Float
   symposium_id: Int
}

"""aggregate var_pop on columns"""
type search_symposium_people_var_pop_fields {
   event_id: Float
   search_similarity: Float
   symposium_id: Float
}

"""aggregate var_samp on columns"""
type search_symposium_people_var_samp_fields {
   event_id: Float
   search_similarity: Float
   symposium_id: Float
}

"""aggregate variance on columns"""
type search_symposium_people_variance_fields {
   event_id: Float
   search_similarity: Float
   symposium_id: Float
}

"""
columns and relationships of "search_symposium_people_view"
"""
type search_symposium_people_view {
   email: String
   event_id: Int
   first_name: String
   last_name: String
   name: String
   role: symposium_role
   symposium_id: Int
}

"""
aggregated selection of "search_symposium_people_view"
"""
type search_symposium_people_view_aggregate {
   aggregate: search_symposium_people_view_aggregate_fields
   nodes: [search_symposium_people_view! ]! 
}

"""
aggregate fields of "search_symposium_people_view"
"""
type search_symposium_people_view_aggregate_fields {
   avg: search_symposium_people_view_avg_fields
   count(columns: [search_symposium_people_view_select_column! ], distinct: Boolean): Int! 
   max: search_symposium_people_view_max_fields
   min: search_symposium_people_view_min_fields
   stddev: search_symposium_people_view_stddev_fields
   stddev_pop: search_symposium_people_view_stddev_pop_fields
   stddev_samp: search_symposium_people_view_stddev_samp_fields
   sum: search_symposium_people_view_sum_fields
   var_pop: search_symposium_people_view_var_pop_fields
   var_samp: search_symposium_people_view_var_samp_fields
   variance: search_symposium_people_view_variance_fields
}

"""aggregate avg on columns"""
type search_symposium_people_view_avg_fields {
   event_id: Float
   symposium_id: Float
}

"""
Boolean expression to filter rows from the table "search_symposium_people_view". All fields are combined with a logical 'AND'.
"""
input search_symposium_people_view_bool_exp {
  _and: [search_symposium_people_view_bool_exp! ]
  _not: search_symposium_people_view_bool_exp
  _or: [search_symposium_people_view_bool_exp! ]
  email: String_comparison_exp
  event_id: Int_comparison_exp
  first_name: String_comparison_exp
  last_name: String_comparison_exp
  name: String_comparison_exp
  role: symposium_role_comparison_exp
  symposium_id: Int_comparison_exp
}

"""aggregate max on columns"""
type search_symposium_people_view_max_fields {
   email: String
   event_id: Int
   first_name: String
   last_name: String
   name: String
   role: symposium_role
   symposium_id: Int
}

"""aggregate min on columns"""
type search_symposium_people_view_min_fields {
   email: String
   event_id: Int
   first_name: String
   last_name: String
   name: String
   role: symposium_role
   symposium_id: Int
}

"""
Ordering options when selecting data from "search_symposium_people_view".
"""
input search_symposium_people_view_order_by {
  email: order_by
  event_id: order_by
  first_name: order_by
  last_name: order_by
  name: order_by
  role: order_by
  symposium_id: order_by
}

"""
select columns of table "search_symposium_people_view"
"""
enum search_symposium_people_view_select_column {
  """column name"""
email
  """column name"""
event_id
  """column name"""
first_name
  """column name"""
last_name
  """column name"""
name
  """column name"""
role
  """column name"""
symposium_id
}

"""aggregate stddev on columns"""
type search_symposium_people_view_stddev_fields {
   event_id: Float
   symposium_id: Float
}

"""aggregate stddev_pop on columns"""
type search_symposium_people_view_stddev_pop_fields {
   event_id: Float
   symposium_id: Float
}

"""aggregate stddev_samp on columns"""
type search_symposium_people_view_stddev_samp_fields {
   event_id: Float
   symposium_id: Float
}

"""
Streaming cursor of the table "search_symposium_people_view"
"""
input search_symposium_people_view_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: search_symposium_people_view_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input search_symposium_people_view_stream_cursor_value_input {
  email: String
  event_id: Int
  first_name: String
  last_name: String
  name: String
  role: symposium_role
  symposium_id: Int
}

"""aggregate sum on columns"""
type search_symposium_people_view_sum_fields {
   event_id: Int
   symposium_id: Int
}

"""aggregate var_pop on columns"""
type search_symposium_people_view_var_pop_fields {
   event_id: Float
   symposium_id: Float
}

"""aggregate var_samp on columns"""
type search_symposium_people_view_var_samp_fields {
   event_id: Float
   symposium_id: Float
}

"""aggregate variance on columns"""
type search_symposium_people_view_variance_fields {
   event_id: Float
   symposium_id: Float
}

"""
columns and relationships of "search_symposium_question_responses"
"""
type search_symposium_question_responses {
   search_similarity: Float
  """An object relationship"""
 symposium: symposia
   symposium_id: Int
  """An object relationship"""
 symposium_question: symposium_questions
   symposium_question_id: Int
   symposium_question_response_id: Int
   time_stamp: bigint
   value: String
   word_count: Int
}

"""
aggregated selection of "search_symposium_question_responses"
"""
type search_symposium_question_responses_aggregate {
   aggregate: search_symposium_question_responses_aggregate_fields
   nodes: [search_symposium_question_responses! ]! 
}

"""
aggregate fields of "search_symposium_question_responses"
"""
type search_symposium_question_responses_aggregate_fields {
   avg: search_symposium_question_responses_avg_fields
   count(columns: [search_symposium_question_responses_select_column! ], distinct: Boolean): Int! 
   max: search_symposium_question_responses_max_fields
   min: search_symposium_question_responses_min_fields
   stddev: search_symposium_question_responses_stddev_fields
   stddev_pop: search_symposium_question_responses_stddev_pop_fields
   stddev_samp: search_symposium_question_responses_stddev_samp_fields
   sum: search_symposium_question_responses_sum_fields
   var_pop: search_symposium_question_responses_var_pop_fields
   var_samp: search_symposium_question_responses_var_samp_fields
   variance: search_symposium_question_responses_variance_fields
}

"""aggregate avg on columns"""
type search_symposium_question_responses_avg_fields {
   search_similarity: Float
   symposium_id: Float
   symposium_question_id: Float
   symposium_question_response_id: Float
   time_stamp: Float
   word_count: Float
}

"""
Boolean expression to filter rows from the table "search_symposium_question_responses". All fields are combined with a logical 'AND'.
"""
input search_symposium_question_responses_bool_exp {
  _and: [search_symposium_question_responses_bool_exp! ]
  _not: search_symposium_question_responses_bool_exp
  _or: [search_symposium_question_responses_bool_exp! ]
  search_similarity: Float_comparison_exp
  symposium: symposia_bool_exp
  symposium_id: Int_comparison_exp
  symposium_question: symposium_questions_bool_exp
  symposium_question_id: Int_comparison_exp
  symposium_question_response_id: Int_comparison_exp
  time_stamp: bigint_comparison_exp
  value: String_comparison_exp
  word_count: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "search_symposium_question_responses"
"""
input search_symposium_question_responses_inc_input {
  search_similarity: Float
  symposium_id: Int
  symposium_question_id: Int
  symposium_question_response_id: Int
  time_stamp: bigint
  word_count: Int
}

"""
input type for inserting data into table "search_symposium_question_responses"
"""
input search_symposium_question_responses_insert_input {
  search_similarity: Float
  symposium: symposia_obj_rel_insert_input
  symposium_id: Int
  symposium_question: symposium_questions_obj_rel_insert_input
  symposium_question_id: Int
  symposium_question_response_id: Int
  time_stamp: bigint
  value: String
  word_count: Int
}

"""aggregate max on columns"""
type search_symposium_question_responses_max_fields {
   search_similarity: Float
   symposium_id: Int
   symposium_question_id: Int
   symposium_question_response_id: Int
   time_stamp: bigint
   value: String
   word_count: Int
}

"""aggregate min on columns"""
type search_symposium_question_responses_min_fields {
   search_similarity: Float
   symposium_id: Int
   symposium_question_id: Int
   symposium_question_response_id: Int
   time_stamp: bigint
   value: String
   word_count: Int
}

"""
response of any mutation on the table "search_symposium_question_responses"
"""
type search_symposium_question_responses_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [search_symposium_question_responses! ]! 
}

"""
Ordering options when selecting data from "search_symposium_question_responses".
"""
input search_symposium_question_responses_order_by {
  search_similarity: order_by
  symposium: symposia_order_by
  symposium_id: order_by
  symposium_question: symposium_questions_order_by
  symposium_question_id: order_by
  symposium_question_response_id: order_by
  time_stamp: order_by
  value: order_by
  word_count: order_by
}

"""
select columns of table "search_symposium_question_responses"
"""
enum search_symposium_question_responses_select_column {
  """column name"""
search_similarity
  """column name"""
symposium_id
  """column name"""
symposium_question_id
  """column name"""
symposium_question_response_id
  """column name"""
time_stamp
  """column name"""
value
  """column name"""
word_count
}

"""
input type for updating data in table "search_symposium_question_responses"
"""
input search_symposium_question_responses_set_input {
  search_similarity: Float
  symposium_id: Int
  symposium_question_id: Int
  symposium_question_response_id: Int
  time_stamp: bigint
  value: String
  word_count: Int
}

"""aggregate stddev on columns"""
type search_symposium_question_responses_stddev_fields {
   search_similarity: Float
   symposium_id: Float
   symposium_question_id: Float
   symposium_question_response_id: Float
   time_stamp: Float
   word_count: Float
}

"""aggregate stddev_pop on columns"""
type search_symposium_question_responses_stddev_pop_fields {
   search_similarity: Float
   symposium_id: Float
   symposium_question_id: Float
   symposium_question_response_id: Float
   time_stamp: Float
   word_count: Float
}

"""aggregate stddev_samp on columns"""
type search_symposium_question_responses_stddev_samp_fields {
   search_similarity: Float
   symposium_id: Float
   symposium_question_id: Float
   symposium_question_response_id: Float
   time_stamp: Float
   word_count: Float
}

"""
Streaming cursor of the table "search_symposium_question_responses"
"""
input search_symposium_question_responses_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: search_symposium_question_responses_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input search_symposium_question_responses_stream_cursor_value_input {
  search_similarity: Float
  symposium_id: Int
  symposium_question_id: Int
  symposium_question_response_id: Int
  time_stamp: bigint
  value: String
  word_count: Int
}

"""aggregate sum on columns"""
type search_symposium_question_responses_sum_fields {
   search_similarity: Float
   symposium_id: Int
   symposium_question_id: Int
   symposium_question_response_id: Int
   time_stamp: bigint
   word_count: Int
}

input search_symposium_question_responses_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: search_symposium_question_responses_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: search_symposium_question_responses_set_input
  where: search_symposium_question_responses_bool_exp! 
}

"""aggregate var_pop on columns"""
type search_symposium_question_responses_var_pop_fields {
   search_similarity: Float
   symposium_id: Float
   symposium_question_id: Float
   symposium_question_response_id: Float
   time_stamp: Float
   word_count: Float
}

"""aggregate var_samp on columns"""
type search_symposium_question_responses_var_samp_fields {
   search_similarity: Float
   symposium_id: Float
   symposium_question_id: Float
   symposium_question_response_id: Float
   time_stamp: Float
   word_count: Float
}

"""aggregate variance on columns"""
type search_symposium_question_responses_variance_fields {
   search_similarity: Float
   symposium_id: Float
   symposium_question_id: Float
   symposium_question_response_id: Float
   time_stamp: Float
   word_count: Float
}

input search_symposium_titles_fuzzy_args {
  search: String
}

scalar secure_program_auth 

"""
Boolean expression to compare columns of type "secure_program_auth". All fields are combined with logical 'AND'.
"""
input secure_program_auth_comparison_exp {
  _eq: secure_program_auth
  _gt: secure_program_auth
  _gte: secure_program_auth
  _in: [secure_program_auth! ]
  _is_null: Boolean
  _lt: secure_program_auth
  _lte: secure_program_auth
  _neq: secure_program_auth
  _nin: [secure_program_auth! ]
}

"""
columns and relationships of "session_chair_affiliations"
"""
type session_chair_affiliations {
   affiliation_id: Int! 
   affiliation_order: Int! 
   author_id: Int! 
   city: String
   country: String
   institution: String
  """An object relationship"""
 session_chair: session_chairs! 
   state: String
}

"""
aggregated selection of "session_chair_affiliations"
"""
type session_chair_affiliations_aggregate {
   aggregate: session_chair_affiliations_aggregate_fields
   nodes: [session_chair_affiliations! ]! 
}

input session_chair_affiliations_aggregate_bool_exp {
  count: session_chair_affiliations_aggregate_bool_exp_count
}

input session_chair_affiliations_aggregate_bool_exp_count {
  arguments: [session_chair_affiliations_select_column! ]
  distinct: Boolean
  filter: session_chair_affiliations_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "session_chair_affiliations"
"""
type session_chair_affiliations_aggregate_fields {
   avg: session_chair_affiliations_avg_fields
   count(columns: [session_chair_affiliations_select_column! ], distinct: Boolean): Int! 
   max: session_chair_affiliations_max_fields
   min: session_chair_affiliations_min_fields
   stddev: session_chair_affiliations_stddev_fields
   stddev_pop: session_chair_affiliations_stddev_pop_fields
   stddev_samp: session_chair_affiliations_stddev_samp_fields
   sum: session_chair_affiliations_sum_fields
   var_pop: session_chair_affiliations_var_pop_fields
   var_samp: session_chair_affiliations_var_samp_fields
   variance: session_chair_affiliations_variance_fields
}

"""
order by aggregate values of table "session_chair_affiliations"
"""
input session_chair_affiliations_aggregate_order_by {
  avg: session_chair_affiliations_avg_order_by
  count: order_by
  max: session_chair_affiliations_max_order_by
  min: session_chair_affiliations_min_order_by
  stddev: session_chair_affiliations_stddev_order_by
  stddev_pop: session_chair_affiliations_stddev_pop_order_by
  stddev_samp: session_chair_affiliations_stddev_samp_order_by
  sum: session_chair_affiliations_sum_order_by
  var_pop: session_chair_affiliations_var_pop_order_by
  var_samp: session_chair_affiliations_var_samp_order_by
  variance: session_chair_affiliations_variance_order_by
}

"""
input type for inserting array relation for remote table "session_chair_affiliations"
"""
input session_chair_affiliations_arr_rel_insert_input {
  data: [session_chair_affiliations_insert_input! ]! 
  """upsert condition"""
on_conflict: session_chair_affiliations_on_conflict
}

"""aggregate avg on columns"""
type session_chair_affiliations_avg_fields {
   affiliation_id: Float
   affiliation_order: Float
   author_id: Float
}

"""
order by avg() on columns of table "session_chair_affiliations"
"""
input session_chair_affiliations_avg_order_by {
  affiliation_id: order_by
  affiliation_order: order_by
  author_id: order_by
}

"""
Boolean expression to filter rows from the table "session_chair_affiliations". All fields are combined with a logical 'AND'.
"""
input session_chair_affiliations_bool_exp {
  _and: [session_chair_affiliations_bool_exp! ]
  _not: session_chair_affiliations_bool_exp
  _or: [session_chair_affiliations_bool_exp! ]
  affiliation_id: Int_comparison_exp
  affiliation_order: Int_comparison_exp
  author_id: Int_comparison_exp
  city: String_comparison_exp
  country: String_comparison_exp
  institution: String_comparison_exp
  session_chair: session_chairs_bool_exp
  state: String_comparison_exp
}

"""
unique or primary key constraints on table "session_chair_affiliations"
"""
enum session_chair_affiliations_constraint {
  """
  unique or primary key constraint on columns "affiliation_id"
  """
session_chair_affiliations_pkey
}

"""
input type for incrementing numeric columns in table "session_chair_affiliations"
"""
input session_chair_affiliations_inc_input {
  affiliation_id: Int
  affiliation_order: Int
  author_id: Int
}

"""
input type for inserting data into table "session_chair_affiliations"
"""
input session_chair_affiliations_insert_input {
  affiliation_id: Int! 
  affiliation_order: Int! 
  author_id: Int! 
  city: String
  country: String
  institution: String
  session_chair: session_chairs_obj_rel_insert_input
  state: String
}

"""aggregate max on columns"""
type session_chair_affiliations_max_fields {
   affiliation_id: Int
   affiliation_order: Int
   author_id: Int
   city: String
   country: String
   institution: String
   state: String
}

"""
order by max() on columns of table "session_chair_affiliations"
"""
input session_chair_affiliations_max_order_by {
  affiliation_id: order_by
  affiliation_order: order_by
  author_id: order_by
  city: order_by
  country: order_by
  institution: order_by
  state: order_by
}

"""aggregate min on columns"""
type session_chair_affiliations_min_fields {
   affiliation_id: Int
   affiliation_order: Int
   author_id: Int
   city: String
   country: String
   institution: String
   state: String
}

"""
order by min() on columns of table "session_chair_affiliations"
"""
input session_chair_affiliations_min_order_by {
  affiliation_id: order_by
  affiliation_order: order_by
  author_id: order_by
  city: order_by
  country: order_by
  institution: order_by
  state: order_by
}

"""
response of any mutation on the table "session_chair_affiliations"
"""
type session_chair_affiliations_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [session_chair_affiliations! ]! 
}

"""
on_conflict condition type for table "session_chair_affiliations"
"""
input session_chair_affiliations_on_conflict {
  constraint: session_chair_affiliations_constraint! 
  update_columns: [session_chair_affiliations_update_column! ]! 
  where: session_chair_affiliations_bool_exp
}

"""
Ordering options when selecting data from "session_chair_affiliations".
"""
input session_chair_affiliations_order_by {
  affiliation_id: order_by
  affiliation_order: order_by
  author_id: order_by
  city: order_by
  country: order_by
  institution: order_by
  session_chair: session_chairs_order_by
  state: order_by
}

"""primary key columns input for table: session_chair_affiliations"""
input session_chair_affiliations_pk_columns_input {
  affiliation_id: Int! 
}

"""
select columns of table "session_chair_affiliations"
"""
enum session_chair_affiliations_select_column {
  """column name"""
affiliation_id
  """column name"""
affiliation_order
  """column name"""
author_id
  """column name"""
city
  """column name"""
country
  """column name"""
institution
  """column name"""
state
}

"""
input type for updating data in table "session_chair_affiliations"
"""
input session_chair_affiliations_set_input {
  affiliation_id: Int
  affiliation_order: Int
  author_id: Int
  city: String
  country: String
  institution: String
  state: String
}

"""aggregate stddev on columns"""
type session_chair_affiliations_stddev_fields {
   affiliation_id: Float
   affiliation_order: Float
   author_id: Float
}

"""
order by stddev() on columns of table "session_chair_affiliations"
"""
input session_chair_affiliations_stddev_order_by {
  affiliation_id: order_by
  affiliation_order: order_by
  author_id: order_by
}

"""aggregate stddev_pop on columns"""
type session_chair_affiliations_stddev_pop_fields {
   affiliation_id: Float
   affiliation_order: Float
   author_id: Float
}

"""
order by stddev_pop() on columns of table "session_chair_affiliations"
"""
input session_chair_affiliations_stddev_pop_order_by {
  affiliation_id: order_by
  affiliation_order: order_by
  author_id: order_by
}

"""aggregate stddev_samp on columns"""
type session_chair_affiliations_stddev_samp_fields {
   affiliation_id: Float
   affiliation_order: Float
   author_id: Float
}

"""
order by stddev_samp() on columns of table "session_chair_affiliations"
"""
input session_chair_affiliations_stddev_samp_order_by {
  affiliation_id: order_by
  affiliation_order: order_by
  author_id: order_by
}

"""
Streaming cursor of the table "session_chair_affiliations"
"""
input session_chair_affiliations_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: session_chair_affiliations_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input session_chair_affiliations_stream_cursor_value_input {
  affiliation_id: Int
  affiliation_order: Int
  author_id: Int
  city: String
  country: String
  institution: String
  state: String
}

"""aggregate sum on columns"""
type session_chair_affiliations_sum_fields {
   affiliation_id: Int
   affiliation_order: Int
   author_id: Int
}

"""
order by sum() on columns of table "session_chair_affiliations"
"""
input session_chair_affiliations_sum_order_by {
  affiliation_id: order_by
  affiliation_order: order_by
  author_id: order_by
}

"""
update columns of table "session_chair_affiliations"
"""
enum session_chair_affiliations_update_column {
  """column name"""
affiliation_id
  """column name"""
affiliation_order
  """column name"""
author_id
  """column name"""
city
  """column name"""
country
  """column name"""
institution
  """column name"""
state
}

input session_chair_affiliations_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: session_chair_affiliations_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: session_chair_affiliations_set_input
  where: session_chair_affiliations_bool_exp! 
}

"""aggregate var_pop on columns"""
type session_chair_affiliations_var_pop_fields {
   affiliation_id: Float
   affiliation_order: Float
   author_id: Float
}

"""
order by var_pop() on columns of table "session_chair_affiliations"
"""
input session_chair_affiliations_var_pop_order_by {
  affiliation_id: order_by
  affiliation_order: order_by
  author_id: order_by
}

"""aggregate var_samp on columns"""
type session_chair_affiliations_var_samp_fields {
   affiliation_id: Float
   affiliation_order: Float
   author_id: Float
}

"""
order by var_samp() on columns of table "session_chair_affiliations"
"""
input session_chair_affiliations_var_samp_order_by {
  affiliation_id: order_by
  affiliation_order: order_by
  author_id: order_by
}

"""aggregate variance on columns"""
type session_chair_affiliations_variance_fields {
   affiliation_id: Float
   affiliation_order: Float
   author_id: Float
}

"""
order by variance() on columns of table "session_chair_affiliations"
"""
input session_chair_affiliations_variance_order_by {
  affiliation_id: order_by
  affiliation_order: order_by
  author_id: order_by
}

"""
columns and relationships of "session_chair_fields"
"""
type session_chair_fields {
   answered_individually: Boolean! 
   author_field_index: Int! 
   description: String
   dropdownoptions: _text
   event_id: Int! 
   id: Int! 
   input_type: author_field_input_types! 
   mandatory: Boolean! 
   mandatory_for_presenter: Boolean! 
   only_for_presenter: Boolean! 
   question_type: author_field_question_types! 
   show_field: Boolean! 
   show_in_book: Boolean! 
   show_in_program: Boolean! 
   title: String
   word_limit: Int
}

"""
aggregated selection of "session_chair_fields"
"""
type session_chair_fields_aggregate {
   aggregate: session_chair_fields_aggregate_fields
   nodes: [session_chair_fields! ]! 
}

"""
aggregate fields of "session_chair_fields"
"""
type session_chair_fields_aggregate_fields {
   avg: session_chair_fields_avg_fields
   count(columns: [session_chair_fields_select_column! ], distinct: Boolean): Int! 
   max: session_chair_fields_max_fields
   min: session_chair_fields_min_fields
   stddev: session_chair_fields_stddev_fields
   stddev_pop: session_chair_fields_stddev_pop_fields
   stddev_samp: session_chair_fields_stddev_samp_fields
   sum: session_chair_fields_sum_fields
   var_pop: session_chair_fields_var_pop_fields
   var_samp: session_chair_fields_var_samp_fields
   variance: session_chair_fields_variance_fields
}

"""aggregate avg on columns"""
type session_chair_fields_avg_fields {
   author_field_index: Float
   event_id: Float
   id: Float
   word_limit: Float
}

"""
Boolean expression to filter rows from the table "session_chair_fields". All fields are combined with a logical 'AND'.
"""
input session_chair_fields_bool_exp {
  _and: [session_chair_fields_bool_exp! ]
  _not: session_chair_fields_bool_exp
  _or: [session_chair_fields_bool_exp! ]
  answered_individually: Boolean_comparison_exp
  author_field_index: Int_comparison_exp
  description: String_comparison_exp
  dropdownoptions: _text_comparison_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  input_type: author_field_input_types_comparison_exp
  mandatory: Boolean_comparison_exp
  mandatory_for_presenter: Boolean_comparison_exp
  only_for_presenter: Boolean_comparison_exp
  question_type: author_field_question_types_comparison_exp
  show_field: Boolean_comparison_exp
  show_in_book: Boolean_comparison_exp
  show_in_program: Boolean_comparison_exp
  title: String_comparison_exp
  word_limit: Int_comparison_exp
}

"""
unique or primary key constraints on table "session_chair_fields"
"""
enum session_chair_fields_constraint {
  """
  unique or primary key constraint on columns "id"
  """
session_chair_fields_pkey
}

"""
input type for incrementing numeric columns in table "session_chair_fields"
"""
input session_chair_fields_inc_input {
  author_field_index: Int
  event_id: Int
  id: Int
  word_limit: Int
}

"""
input type for inserting data into table "session_chair_fields"
"""
input session_chair_fields_insert_input {
  answered_individually: Boolean! 
  author_field_index: Int! 
  description: String
  dropdownoptions: _text
  event_id: Int! 
  id: Int! 
  input_type: author_field_input_types! 
  mandatory: Boolean! 
  mandatory_for_presenter: Boolean! 
  only_for_presenter: Boolean! 
  question_type: author_field_question_types! 
  show_field: Boolean! 
  show_in_book: Boolean! 
  show_in_program: Boolean! 
  title: String
  word_limit: Int
}

"""aggregate max on columns"""
type session_chair_fields_max_fields {
   author_field_index: Int
   description: String
   event_id: Int
   id: Int
   input_type: author_field_input_types
   question_type: author_field_question_types
   title: String
   word_limit: Int
}

"""aggregate min on columns"""
type session_chair_fields_min_fields {
   author_field_index: Int
   description: String
   event_id: Int
   id: Int
   input_type: author_field_input_types
   question_type: author_field_question_types
   title: String
   word_limit: Int
}

"""
response of any mutation on the table "session_chair_fields"
"""
type session_chair_fields_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [session_chair_fields! ]! 
}

"""
input type for inserting object relation for remote table "session_chair_fields"
"""
input session_chair_fields_obj_rel_insert_input {
  data: session_chair_fields_insert_input! 
  """upsert condition"""
on_conflict: session_chair_fields_on_conflict
}

"""
on_conflict condition type for table "session_chair_fields"
"""
input session_chair_fields_on_conflict {
  constraint: session_chair_fields_constraint! 
  update_columns: [session_chair_fields_update_column! ]! 
  where: session_chair_fields_bool_exp
}

"""Ordering options when selecting data from "session_chair_fields"."""
input session_chair_fields_order_by {
  answered_individually: order_by
  author_field_index: order_by
  description: order_by
  dropdownoptions: order_by
  event_id: order_by
  id: order_by
  input_type: order_by
  mandatory: order_by
  mandatory_for_presenter: order_by
  only_for_presenter: order_by
  question_type: order_by
  show_field: order_by
  show_in_book: order_by
  show_in_program: order_by
  title: order_by
  word_limit: order_by
}

"""primary key columns input for table: session_chair_fields"""
input session_chair_fields_pk_columns_input {
  id: Int! 
}

"""
select columns of table "session_chair_fields"
"""
enum session_chair_fields_select_column {
  """column name"""
answered_individually
  """column name"""
author_field_index
  """column name"""
description
  """column name"""
dropdownoptions
  """column name"""
event_id
  """column name"""
id
  """column name"""
input_type
  """column name"""
mandatory
  """column name"""
mandatory_for_presenter
  """column name"""
only_for_presenter
  """column name"""
question_type
  """column name"""
show_field
  """column name"""
show_in_book
  """column name"""
show_in_program
  """column name"""
title
  """column name"""
word_limit
}

"""
input type for updating data in table "session_chair_fields"
"""
input session_chair_fields_set_input {
  answered_individually: Boolean
  author_field_index: Int
  description: String
  dropdownoptions: _text
  event_id: Int
  id: Int
  input_type: author_field_input_types
  mandatory: Boolean
  mandatory_for_presenter: Boolean
  only_for_presenter: Boolean
  question_type: author_field_question_types
  show_field: Boolean
  show_in_book: Boolean
  show_in_program: Boolean
  title: String
  word_limit: Int
}

"""aggregate stddev on columns"""
type session_chair_fields_stddev_fields {
   author_field_index: Float
   event_id: Float
   id: Float
   word_limit: Float
}

"""aggregate stddev_pop on columns"""
type session_chair_fields_stddev_pop_fields {
   author_field_index: Float
   event_id: Float
   id: Float
   word_limit: Float
}

"""aggregate stddev_samp on columns"""
type session_chair_fields_stddev_samp_fields {
   author_field_index: Float
   event_id: Float
   id: Float
   word_limit: Float
}

"""
Streaming cursor of the table "session_chair_fields"
"""
input session_chair_fields_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: session_chair_fields_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input session_chair_fields_stream_cursor_value_input {
  answered_individually: Boolean
  author_field_index: Int
  description: String
  dropdownoptions: _text
  event_id: Int
  id: Int
  input_type: author_field_input_types
  mandatory: Boolean
  mandatory_for_presenter: Boolean
  only_for_presenter: Boolean
  question_type: author_field_question_types
  show_field: Boolean
  show_in_book: Boolean
  show_in_program: Boolean
  title: String
  word_limit: Int
}

"""aggregate sum on columns"""
type session_chair_fields_sum_fields {
   author_field_index: Int
   event_id: Int
   id: Int
   word_limit: Int
}

"""
update columns of table "session_chair_fields"
"""
enum session_chair_fields_update_column {
  """column name"""
answered_individually
  """column name"""
author_field_index
  """column name"""
description
  """column name"""
dropdownoptions
  """column name"""
event_id
  """column name"""
id
  """column name"""
input_type
  """column name"""
mandatory
  """column name"""
mandatory_for_presenter
  """column name"""
only_for_presenter
  """column name"""
question_type
  """column name"""
show_field
  """column name"""
show_in_book
  """column name"""
show_in_program
  """column name"""
title
  """column name"""
word_limit
}

input session_chair_fields_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: session_chair_fields_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: session_chair_fields_set_input
  where: session_chair_fields_bool_exp! 
}

"""aggregate var_pop on columns"""
type session_chair_fields_var_pop_fields {
   author_field_index: Float
   event_id: Float
   id: Float
   word_limit: Float
}

"""aggregate var_samp on columns"""
type session_chair_fields_var_samp_fields {
   author_field_index: Float
   event_id: Float
   id: Float
   word_limit: Float
}

"""aggregate variance on columns"""
type session_chair_fields_variance_fields {
   author_field_index: Float
   event_id: Float
   id: Float
   word_limit: Float
}

"""
columns and relationships of "session_chair_responses"
"""
type session_chair_responses {
   author_field_id: Int! 
   author_id: Int! 
   id: Int! 
  """An object relationship"""
 session_chair: session_chairs! 
  """An object relationship"""
 session_chair_field: session_chair_fields! 
   value: String
}

"""
aggregated selection of "session_chair_responses"
"""
type session_chair_responses_aggregate {
   aggregate: session_chair_responses_aggregate_fields
   nodes: [session_chair_responses! ]! 
}

input session_chair_responses_aggregate_bool_exp {
  count: session_chair_responses_aggregate_bool_exp_count
}

input session_chair_responses_aggregate_bool_exp_count {
  arguments: [session_chair_responses_select_column! ]
  distinct: Boolean
  filter: session_chair_responses_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "session_chair_responses"
"""
type session_chair_responses_aggregate_fields {
   avg: session_chair_responses_avg_fields
   count(columns: [session_chair_responses_select_column! ], distinct: Boolean): Int! 
   max: session_chair_responses_max_fields
   min: session_chair_responses_min_fields
   stddev: session_chair_responses_stddev_fields
   stddev_pop: session_chair_responses_stddev_pop_fields
   stddev_samp: session_chair_responses_stddev_samp_fields
   sum: session_chair_responses_sum_fields
   var_pop: session_chair_responses_var_pop_fields
   var_samp: session_chair_responses_var_samp_fields
   variance: session_chair_responses_variance_fields
}

"""
order by aggregate values of table "session_chair_responses"
"""
input session_chair_responses_aggregate_order_by {
  avg: session_chair_responses_avg_order_by
  count: order_by
  max: session_chair_responses_max_order_by
  min: session_chair_responses_min_order_by
  stddev: session_chair_responses_stddev_order_by
  stddev_pop: session_chair_responses_stddev_pop_order_by
  stddev_samp: session_chair_responses_stddev_samp_order_by
  sum: session_chair_responses_sum_order_by
  var_pop: session_chair_responses_var_pop_order_by
  var_samp: session_chair_responses_var_samp_order_by
  variance: session_chair_responses_variance_order_by
}

"""
input type for inserting array relation for remote table "session_chair_responses"
"""
input session_chair_responses_arr_rel_insert_input {
  data: [session_chair_responses_insert_input! ]! 
  """upsert condition"""
on_conflict: session_chair_responses_on_conflict
}

"""aggregate avg on columns"""
type session_chair_responses_avg_fields {
   author_field_id: Float
   author_id: Float
   id: Float
}

"""
order by avg() on columns of table "session_chair_responses"
"""
input session_chair_responses_avg_order_by {
  author_field_id: order_by
  author_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "session_chair_responses". All fields are combined with a logical 'AND'.
"""
input session_chair_responses_bool_exp {
  _and: [session_chair_responses_bool_exp! ]
  _not: session_chair_responses_bool_exp
  _or: [session_chair_responses_bool_exp! ]
  author_field_id: Int_comparison_exp
  author_id: Int_comparison_exp
  id: Int_comparison_exp
  session_chair: session_chairs_bool_exp
  session_chair_field: session_chair_fields_bool_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "session_chair_responses"
"""
enum session_chair_responses_constraint {
  """
  unique or primary key constraint on columns "author_field_response_id"
  """
session_chair_responses_pkey
}

"""
input type for incrementing numeric columns in table "session_chair_responses"
"""
input session_chair_responses_inc_input {
  author_field_id: Int
  author_id: Int
  id: Int
}

"""
input type for inserting data into table "session_chair_responses"
"""
input session_chair_responses_insert_input {
  author_field_id: Int! 
  author_id: Int! 
  id: Int
  session_chair: session_chairs_obj_rel_insert_input
  session_chair_field: session_chair_fields_obj_rel_insert_input
  value: String
}

"""aggregate max on columns"""
type session_chair_responses_max_fields {
   author_field_id: Int
   author_id: Int
   id: Int
   value: String
}

"""
order by max() on columns of table "session_chair_responses"
"""
input session_chair_responses_max_order_by {
  author_field_id: order_by
  author_id: order_by
  id: order_by
  value: order_by
}

"""aggregate min on columns"""
type session_chair_responses_min_fields {
   author_field_id: Int
   author_id: Int
   id: Int
   value: String
}

"""
order by min() on columns of table "session_chair_responses"
"""
input session_chair_responses_min_order_by {
  author_field_id: order_by
  author_id: order_by
  id: order_by
  value: order_by
}

"""
response of any mutation on the table "session_chair_responses"
"""
type session_chair_responses_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [session_chair_responses! ]! 
}

"""
on_conflict condition type for table "session_chair_responses"
"""
input session_chair_responses_on_conflict {
  constraint: session_chair_responses_constraint! 
  update_columns: [session_chair_responses_update_column! ]! 
  where: session_chair_responses_bool_exp
}

"""Ordering options when selecting data from "session_chair_responses"."""
input session_chair_responses_order_by {
  author_field_id: order_by
  author_id: order_by
  id: order_by
  session_chair: session_chairs_order_by
  session_chair_field: session_chair_fields_order_by
  value: order_by
}

"""primary key columns input for table: session_chair_responses"""
input session_chair_responses_pk_columns_input {
  id: Int! 
}

"""
select columns of table "session_chair_responses"
"""
enum session_chair_responses_select_column {
  """column name"""
author_field_id
  """column name"""
author_id
  """column name"""
id
  """column name"""
value
}

"""
input type for updating data in table "session_chair_responses"
"""
input session_chair_responses_set_input {
  author_field_id: Int
  author_id: Int
  id: Int
  value: String
}

"""aggregate stddev on columns"""
type session_chair_responses_stddev_fields {
   author_field_id: Float
   author_id: Float
   id: Float
}

"""
order by stddev() on columns of table "session_chair_responses"
"""
input session_chair_responses_stddev_order_by {
  author_field_id: order_by
  author_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type session_chair_responses_stddev_pop_fields {
   author_field_id: Float
   author_id: Float
   id: Float
}

"""
order by stddev_pop() on columns of table "session_chair_responses"
"""
input session_chair_responses_stddev_pop_order_by {
  author_field_id: order_by
  author_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type session_chair_responses_stddev_samp_fields {
   author_field_id: Float
   author_id: Float
   id: Float
}

"""
order by stddev_samp() on columns of table "session_chair_responses"
"""
input session_chair_responses_stddev_samp_order_by {
  author_field_id: order_by
  author_id: order_by
  id: order_by
}

"""
Streaming cursor of the table "session_chair_responses"
"""
input session_chair_responses_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: session_chair_responses_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input session_chair_responses_stream_cursor_value_input {
  author_field_id: Int
  author_id: Int
  id: Int
  value: String
}

"""aggregate sum on columns"""
type session_chair_responses_sum_fields {
   author_field_id: Int
   author_id: Int
   id: Int
}

"""
order by sum() on columns of table "session_chair_responses"
"""
input session_chair_responses_sum_order_by {
  author_field_id: order_by
  author_id: order_by
  id: order_by
}

"""
update columns of table "session_chair_responses"
"""
enum session_chair_responses_update_column {
  """column name"""
author_field_id
  """column name"""
author_id
  """column name"""
id
  """column name"""
value
}

input session_chair_responses_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: session_chair_responses_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: session_chair_responses_set_input
  where: session_chair_responses_bool_exp! 
}

"""aggregate var_pop on columns"""
type session_chair_responses_var_pop_fields {
   author_field_id: Float
   author_id: Float
   id: Float
}

"""
order by var_pop() on columns of table "session_chair_responses"
"""
input session_chair_responses_var_pop_order_by {
  author_field_id: order_by
  author_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type session_chair_responses_var_samp_fields {
   author_field_id: Float
   author_id: Float
   id: Float
}

"""
order by var_samp() on columns of table "session_chair_responses"
"""
input session_chair_responses_var_samp_order_by {
  author_field_id: order_by
  author_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type session_chair_responses_variance_fields {
   author_field_id: Float
   author_id: Float
   id: Float
}

"""
order by variance() on columns of table "session_chair_responses"
"""
input session_chair_responses_variance_order_by {
  author_field_id: order_by
  author_id: order_by
  id: order_by
}

"""
columns and relationships of "session_chair_users"
"""
type session_chair_users {
   author_id: Int
  """An object relationship"""
 chair: session_chairs
  """An array relationship"""
 user("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): [users! ]! 
  """An aggregate relationship"""
 user_aggregate("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): users_aggregate! 
   user_id: Int
}

"""
aggregated selection of "session_chair_users"
"""
type session_chair_users_aggregate {
   aggregate: session_chair_users_aggregate_fields
   nodes: [session_chair_users! ]! 
}

input session_chair_users_aggregate_bool_exp {
  count: session_chair_users_aggregate_bool_exp_count
}

input session_chair_users_aggregate_bool_exp_count {
  arguments: [session_chair_users_select_column! ]
  distinct: Boolean
  filter: session_chair_users_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "session_chair_users"
"""
type session_chair_users_aggregate_fields {
   avg: session_chair_users_avg_fields
   count(columns: [session_chair_users_select_column! ], distinct: Boolean): Int! 
   max: session_chair_users_max_fields
   min: session_chair_users_min_fields
   stddev: session_chair_users_stddev_fields
   stddev_pop: session_chair_users_stddev_pop_fields
   stddev_samp: session_chair_users_stddev_samp_fields
   sum: session_chair_users_sum_fields
   var_pop: session_chair_users_var_pop_fields
   var_samp: session_chair_users_var_samp_fields
   variance: session_chair_users_variance_fields
}

"""
order by aggregate values of table "session_chair_users"
"""
input session_chair_users_aggregate_order_by {
  avg: session_chair_users_avg_order_by
  count: order_by
  max: session_chair_users_max_order_by
  min: session_chair_users_min_order_by
  stddev: session_chair_users_stddev_order_by
  stddev_pop: session_chair_users_stddev_pop_order_by
  stddev_samp: session_chair_users_stddev_samp_order_by
  sum: session_chair_users_sum_order_by
  var_pop: session_chair_users_var_pop_order_by
  var_samp: session_chair_users_var_samp_order_by
  variance: session_chair_users_variance_order_by
}

"""
input type for inserting array relation for remote table "session_chair_users"
"""
input session_chair_users_arr_rel_insert_input {
  data: [session_chair_users_insert_input! ]! 
}

"""aggregate avg on columns"""
type session_chair_users_avg_fields {
   author_id: Float
   user_id: Float
}

"""
order by avg() on columns of table "session_chair_users"
"""
input session_chair_users_avg_order_by {
  author_id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "session_chair_users". All fields are combined with a logical 'AND'.
"""
input session_chair_users_bool_exp {
  _and: [session_chair_users_bool_exp! ]
  _not: session_chair_users_bool_exp
  _or: [session_chair_users_bool_exp! ]
  author_id: Int_comparison_exp
  chair: session_chairs_bool_exp
  user: users_bool_exp
  user_aggregate: users_aggregate_bool_exp
  user_id: Int_comparison_exp
}

"""
input type for inserting data into table "session_chair_users"
"""
input session_chair_users_insert_input {
  author_id: Int
  chair: session_chairs_obj_rel_insert_input
  user: users_arr_rel_insert_input
  user_id: Int
}

"""aggregate max on columns"""
type session_chair_users_max_fields {
   author_id: Int
   user_id: Int
}

"""
order by max() on columns of table "session_chair_users"
"""
input session_chair_users_max_order_by {
  author_id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type session_chair_users_min_fields {
   author_id: Int
   user_id: Int
}

"""
order by min() on columns of table "session_chair_users"
"""
input session_chair_users_min_order_by {
  author_id: order_by
  user_id: order_by
}

"""Ordering options when selecting data from "session_chair_users"."""
input session_chair_users_order_by {
  author_id: order_by
  chair: session_chairs_order_by
  user_aggregate: users_aggregate_order_by
  user_id: order_by
}

"""
select columns of table "session_chair_users"
"""
enum session_chair_users_select_column {
  """column name"""
author_id
  """column name"""
user_id
}

"""aggregate stddev on columns"""
type session_chair_users_stddev_fields {
   author_id: Float
   user_id: Float
}

"""
order by stddev() on columns of table "session_chair_users"
"""
input session_chair_users_stddev_order_by {
  author_id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type session_chair_users_stddev_pop_fields {
   author_id: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "session_chair_users"
"""
input session_chair_users_stddev_pop_order_by {
  author_id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type session_chair_users_stddev_samp_fields {
   author_id: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "session_chair_users"
"""
input session_chair_users_stddev_samp_order_by {
  author_id: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "session_chair_users"
"""
input session_chair_users_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: session_chair_users_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input session_chair_users_stream_cursor_value_input {
  author_id: Int
  user_id: Int
}

"""aggregate sum on columns"""
type session_chair_users_sum_fields {
   author_id: Int
   user_id: Int
}

"""
order by sum() on columns of table "session_chair_users"
"""
input session_chair_users_sum_order_by {
  author_id: order_by
  user_id: order_by
}

"""aggregate var_pop on columns"""
type session_chair_users_var_pop_fields {
   author_id: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "session_chair_users"
"""
input session_chair_users_var_pop_order_by {
  author_id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type session_chair_users_var_samp_fields {
   author_id: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "session_chair_users"
"""
input session_chair_users_var_samp_order_by {
  author_id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type session_chair_users_variance_fields {
   author_id: Float
   user_id: Float
}

"""
order by variance() on columns of table "session_chair_users"
"""
input session_chair_users_variance_order_by {
  author_id: order_by
  user_id: order_by
}

"""
columns and relationships of "session_chairs"
"""
type session_chairs {
   author_order: Int! 
  """An array relationship"""
 chair_user("""distinct select on columns"""
distinct_on: [session_chair_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chair_users_order_by! ], """filter the rows returned"""
where: session_chair_users_bool_exp): [session_chair_users! ]! 
  """An aggregate relationship"""
 chair_user_aggregate("""distinct select on columns"""
distinct_on: [session_chair_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chair_users_order_by! ], """filter the rows returned"""
where: session_chair_users_bool_exp): session_chair_users_aggregate! 
   degree: String
   email: String
  """An object relationship"""
 event: events! 
   first_name: String
   id: Int! 
   last_name: String
   middle_initial: String
   orcid_id: String
   presenting: Boolean! 
   profile_picture: String
  """An array relationship"""
 program_sessions_chairs("""distinct select on columns"""
distinct_on: [program_sessions_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_chairs_order_by! ], """filter the rows returned"""
where: program_sessions_chairs_bool_exp): [program_sessions_chairs! ]! 
  """An aggregate relationship"""
 program_sessions_chairs_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_chairs_order_by! ], """filter the rows returned"""
where: program_sessions_chairs_bool_exp): program_sessions_chairs_aggregate! 
  """An array relationship"""
 session_chair_affiliations("""distinct select on columns"""
distinct_on: [session_chair_affiliations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chair_affiliations_order_by! ], """filter the rows returned"""
where: session_chair_affiliations_bool_exp): [session_chair_affiliations! ]! 
  """An aggregate relationship"""
 session_chair_affiliations_aggregate("""distinct select on columns"""
distinct_on: [session_chair_affiliations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chair_affiliations_order_by! ], """filter the rows returned"""
where: session_chair_affiliations_bool_exp): session_chair_affiliations_aggregate! 
  """An array relationship"""
 session_chair_responses("""distinct select on columns"""
distinct_on: [session_chair_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chair_responses_order_by! ], """filter the rows returned"""
where: session_chair_responses_bool_exp): [session_chair_responses! ]! 
  """An aggregate relationship"""
 session_chair_responses_aggregate("""distinct select on columns"""
distinct_on: [session_chair_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chair_responses_order_by! ], """filter the rows returned"""
where: session_chair_responses_bool_exp): session_chair_responses_aggregate! 
   submission_id: Int! 
   title: String
}

"""
aggregated selection of "session_chairs"
"""
type session_chairs_aggregate {
   aggregate: session_chairs_aggregate_fields
   nodes: [session_chairs! ]! 
}

input session_chairs_aggregate_bool_exp {
  bool_and: session_chairs_aggregate_bool_exp_bool_and
  bool_or: session_chairs_aggregate_bool_exp_bool_or
  count: session_chairs_aggregate_bool_exp_count
}

input session_chairs_aggregate_bool_exp_bool_and {
  arguments: session_chairs_select_column_session_chairs_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: session_chairs_bool_exp
  predicate: Boolean_comparison_exp! 
}

input session_chairs_aggregate_bool_exp_bool_or {
  arguments: session_chairs_select_column_session_chairs_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: session_chairs_bool_exp
  predicate: Boolean_comparison_exp! 
}

input session_chairs_aggregate_bool_exp_count {
  arguments: [session_chairs_select_column! ]
  distinct: Boolean
  filter: session_chairs_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "session_chairs"
"""
type session_chairs_aggregate_fields {
   avg: session_chairs_avg_fields
   count(columns: [session_chairs_select_column! ], distinct: Boolean): Int! 
   max: session_chairs_max_fields
   min: session_chairs_min_fields
   stddev: session_chairs_stddev_fields
   stddev_pop: session_chairs_stddev_pop_fields
   stddev_samp: session_chairs_stddev_samp_fields
   sum: session_chairs_sum_fields
   var_pop: session_chairs_var_pop_fields
   var_samp: session_chairs_var_samp_fields
   variance: session_chairs_variance_fields
}

"""
order by aggregate values of table "session_chairs"
"""
input session_chairs_aggregate_order_by {
  avg: session_chairs_avg_order_by
  count: order_by
  max: session_chairs_max_order_by
  min: session_chairs_min_order_by
  stddev: session_chairs_stddev_order_by
  stddev_pop: session_chairs_stddev_pop_order_by
  stddev_samp: session_chairs_stddev_samp_order_by
  sum: session_chairs_sum_order_by
  var_pop: session_chairs_var_pop_order_by
  var_samp: session_chairs_var_samp_order_by
  variance: session_chairs_variance_order_by
}

"""
input type for inserting array relation for remote table "session_chairs"
"""
input session_chairs_arr_rel_insert_input {
  data: [session_chairs_insert_input! ]! 
  """upsert condition"""
on_conflict: session_chairs_on_conflict
}

"""aggregate avg on columns"""
type session_chairs_avg_fields {
   author_order: Float
   id: Float
   submission_id: Float
}

"""
order by avg() on columns of table "session_chairs"
"""
input session_chairs_avg_order_by {
  author_order: order_by
  id: order_by
  submission_id: order_by
}

"""
Boolean expression to filter rows from the table "session_chairs". All fields are combined with a logical 'AND'.
"""
input session_chairs_bool_exp {
  _and: [session_chairs_bool_exp! ]
  _not: session_chairs_bool_exp
  _or: [session_chairs_bool_exp! ]
  author_order: Int_comparison_exp
  chair_user: session_chair_users_bool_exp
  chair_user_aggregate: session_chair_users_aggregate_bool_exp
  degree: String_comparison_exp
  email: String_comparison_exp
  event: events_bool_exp
  first_name: String_comparison_exp
  id: Int_comparison_exp
  last_name: String_comparison_exp
  middle_initial: String_comparison_exp
  orcid_id: String_comparison_exp
  presenting: Boolean_comparison_exp
  profile_picture: String_comparison_exp
  program_sessions_chairs: program_sessions_chairs_bool_exp
  program_sessions_chairs_aggregate: program_sessions_chairs_aggregate_bool_exp
  session_chair_affiliations: session_chair_affiliations_bool_exp
  session_chair_affiliations_aggregate: session_chair_affiliations_aggregate_bool_exp
  session_chair_responses: session_chair_responses_bool_exp
  session_chair_responses_aggregate: session_chair_responses_aggregate_bool_exp
  submission_id: Int_comparison_exp
  title: String_comparison_exp
}

"""
unique or primary key constraints on table "session_chairs"
"""
enum session_chairs_constraint {
  """
  unique or primary key constraint on columns "author_id"
  """
session_chairs_pkey
}

"""
input type for incrementing numeric columns in table "session_chairs"
"""
input session_chairs_inc_input {
  author_order: Int
  id: Int
  submission_id: Int
}

"""
input type for inserting data into table "session_chairs"
"""
input session_chairs_insert_input {
  author_order: Int! 
  chair_user: session_chair_users_arr_rel_insert_input
  degree: String
  email: String
  event: events_obj_rel_insert_input
  first_name: String
  id: Int
  last_name: String
  middle_initial: String
  orcid_id: String
  presenting: Boolean! 
  profile_picture: String
  program_sessions_chairs: program_sessions_chairs_arr_rel_insert_input
  session_chair_affiliations: session_chair_affiliations_arr_rel_insert_input
  session_chair_responses: session_chair_responses_arr_rel_insert_input
  submission_id: Int! 
  title: String
}

"""aggregate max on columns"""
type session_chairs_max_fields {
   author_order: Int
   degree: String
   email: String
   first_name: String
   id: Int
   last_name: String
   middle_initial: String
   orcid_id: String
   profile_picture: String
   submission_id: Int
   title: String
}

"""
order by max() on columns of table "session_chairs"
"""
input session_chairs_max_order_by {
  author_order: order_by
  degree: order_by
  email: order_by
  first_name: order_by
  id: order_by
  last_name: order_by
  middle_initial: order_by
  orcid_id: order_by
  profile_picture: order_by
  submission_id: order_by
  title: order_by
}

"""aggregate min on columns"""
type session_chairs_min_fields {
   author_order: Int
   degree: String
   email: String
   first_name: String
   id: Int
   last_name: String
   middle_initial: String
   orcid_id: String
   profile_picture: String
   submission_id: Int
   title: String
}

"""
order by min() on columns of table "session_chairs"
"""
input session_chairs_min_order_by {
  author_order: order_by
  degree: order_by
  email: order_by
  first_name: order_by
  id: order_by
  last_name: order_by
  middle_initial: order_by
  orcid_id: order_by
  profile_picture: order_by
  submission_id: order_by
  title: order_by
}

"""
response of any mutation on the table "session_chairs"
"""
type session_chairs_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [session_chairs! ]! 
}

"""
input type for inserting object relation for remote table "session_chairs"
"""
input session_chairs_obj_rel_insert_input {
  data: session_chairs_insert_input! 
  """upsert condition"""
on_conflict: session_chairs_on_conflict
}

"""
on_conflict condition type for table "session_chairs"
"""
input session_chairs_on_conflict {
  constraint: session_chairs_constraint! 
  update_columns: [session_chairs_update_column! ]! 
  where: session_chairs_bool_exp
}

"""Ordering options when selecting data from "session_chairs"."""
input session_chairs_order_by {
  author_order: order_by
  chair_user_aggregate: session_chair_users_aggregate_order_by
  degree: order_by
  email: order_by
  event: events_order_by
  first_name: order_by
  id: order_by
  last_name: order_by
  middle_initial: order_by
  orcid_id: order_by
  presenting: order_by
  profile_picture: order_by
  program_sessions_chairs_aggregate: program_sessions_chairs_aggregate_order_by
  session_chair_affiliations_aggregate: session_chair_affiliations_aggregate_order_by
  session_chair_responses_aggregate: session_chair_responses_aggregate_order_by
  submission_id: order_by
  title: order_by
}

"""primary key columns input for table: session_chairs"""
input session_chairs_pk_columns_input {
  id: Int! 
}

"""
select columns of table "session_chairs"
"""
enum session_chairs_select_column {
  """column name"""
author_order
  """column name"""
degree
  """column name"""
email
  """column name"""
first_name
  """column name"""
id
  """column name"""
last_name
  """column name"""
middle_initial
  """column name"""
orcid_id
  """column name"""
presenting
  """column name"""
profile_picture
  """column name"""
submission_id
  """column name"""
title
}

"""
select "session_chairs_aggregate_bool_exp_bool_and_arguments_columns" columns of table "session_chairs"
"""
enum session_chairs_select_column_session_chairs_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
presenting
}

"""
select "session_chairs_aggregate_bool_exp_bool_or_arguments_columns" columns of table "session_chairs"
"""
enum session_chairs_select_column_session_chairs_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
presenting
}

"""
input type for updating data in table "session_chairs"
"""
input session_chairs_set_input {
  author_order: Int
  degree: String
  email: String
  first_name: String
  id: Int
  last_name: String
  middle_initial: String
  orcid_id: String
  presenting: Boolean
  profile_picture: String
  submission_id: Int
  title: String
}

"""aggregate stddev on columns"""
type session_chairs_stddev_fields {
   author_order: Float
   id: Float
   submission_id: Float
}

"""
order by stddev() on columns of table "session_chairs"
"""
input session_chairs_stddev_order_by {
  author_order: order_by
  id: order_by
  submission_id: order_by
}

"""aggregate stddev_pop on columns"""
type session_chairs_stddev_pop_fields {
   author_order: Float
   id: Float
   submission_id: Float
}

"""
order by stddev_pop() on columns of table "session_chairs"
"""
input session_chairs_stddev_pop_order_by {
  author_order: order_by
  id: order_by
  submission_id: order_by
}

"""aggregate stddev_samp on columns"""
type session_chairs_stddev_samp_fields {
   author_order: Float
   id: Float
   submission_id: Float
}

"""
order by stddev_samp() on columns of table "session_chairs"
"""
input session_chairs_stddev_samp_order_by {
  author_order: order_by
  id: order_by
  submission_id: order_by
}

"""
Streaming cursor of the table "session_chairs"
"""
input session_chairs_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: session_chairs_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input session_chairs_stream_cursor_value_input {
  author_order: Int
  degree: String
  email: String
  first_name: String
  id: Int
  last_name: String
  middle_initial: String
  orcid_id: String
  presenting: Boolean
  profile_picture: String
  submission_id: Int
  title: String
}

"""aggregate sum on columns"""
type session_chairs_sum_fields {
   author_order: Int
   id: Int
   submission_id: Int
}

"""
order by sum() on columns of table "session_chairs"
"""
input session_chairs_sum_order_by {
  author_order: order_by
  id: order_by
  submission_id: order_by
}

"""
update columns of table "session_chairs"
"""
enum session_chairs_update_column {
  """column name"""
author_order
  """column name"""
degree
  """column name"""
email
  """column name"""
first_name
  """column name"""
id
  """column name"""
last_name
  """column name"""
middle_initial
  """column name"""
orcid_id
  """column name"""
presenting
  """column name"""
profile_picture
  """column name"""
submission_id
  """column name"""
title
}

input session_chairs_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: session_chairs_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: session_chairs_set_input
  where: session_chairs_bool_exp! 
}

"""aggregate var_pop on columns"""
type session_chairs_var_pop_fields {
   author_order: Float
   id: Float
   submission_id: Float
}

"""
order by var_pop() on columns of table "session_chairs"
"""
input session_chairs_var_pop_order_by {
  author_order: order_by
  id: order_by
  submission_id: order_by
}

"""aggregate var_samp on columns"""
type session_chairs_var_samp_fields {
   author_order: Float
   id: Float
   submission_id: Float
}

"""
order by var_samp() on columns of table "session_chairs"
"""
input session_chairs_var_samp_order_by {
  author_order: order_by
  id: order_by
  submission_id: order_by
}

"""aggregate variance on columns"""
type session_chairs_variance_fields {
   author_order: Float
   id: Float
   submission_id: Float
}

"""
order by variance() on columns of table "session_chairs"
"""
input session_chairs_variance_order_by {
  author_order: order_by
  id: order_by
  submission_id: order_by
}

"""
columns and relationships of "session_links"
"""
type session_links {
   event_id: Int
   program_session_id: Int
   program_video_label: String
   program_video_link: String
}

"""
aggregated selection of "session_links"
"""
type session_links_aggregate {
   aggregate: session_links_aggregate_fields
   nodes: [session_links! ]! 
}

input session_links_aggregate_bool_exp {
  count: session_links_aggregate_bool_exp_count
}

input session_links_aggregate_bool_exp_count {
  arguments: [session_links_select_column! ]
  distinct: Boolean
  filter: session_links_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "session_links"
"""
type session_links_aggregate_fields {
   avg: session_links_avg_fields
   count(columns: [session_links_select_column! ], distinct: Boolean): Int! 
   max: session_links_max_fields
   min: session_links_min_fields
   stddev: session_links_stddev_fields
   stddev_pop: session_links_stddev_pop_fields
   stddev_samp: session_links_stddev_samp_fields
   sum: session_links_sum_fields
   var_pop: session_links_var_pop_fields
   var_samp: session_links_var_samp_fields
   variance: session_links_variance_fields
}

"""
order by aggregate values of table "session_links"
"""
input session_links_aggregate_order_by {
  avg: session_links_avg_order_by
  count: order_by
  max: session_links_max_order_by
  min: session_links_min_order_by
  stddev: session_links_stddev_order_by
  stddev_pop: session_links_stddev_pop_order_by
  stddev_samp: session_links_stddev_samp_order_by
  sum: session_links_sum_order_by
  var_pop: session_links_var_pop_order_by
  var_samp: session_links_var_samp_order_by
  variance: session_links_variance_order_by
}

"""
input type for inserting array relation for remote table "session_links"
"""
input session_links_arr_rel_insert_input {
  data: [session_links_insert_input! ]! 
}

"""aggregate avg on columns"""
type session_links_avg_fields {
   event_id: Float
   program_session_id: Float
}

"""
order by avg() on columns of table "session_links"
"""
input session_links_avg_order_by {
  event_id: order_by
  program_session_id: order_by
}

"""
Boolean expression to filter rows from the table "session_links". All fields are combined with a logical 'AND'.
"""
input session_links_bool_exp {
  _and: [session_links_bool_exp! ]
  _not: session_links_bool_exp
  _or: [session_links_bool_exp! ]
  event_id: Int_comparison_exp
  program_session_id: Int_comparison_exp
  program_video_label: String_comparison_exp
  program_video_link: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "session_links"
"""
input session_links_inc_input {
  event_id: Int
  program_session_id: Int
}

"""
input type for inserting data into table "session_links"
"""
input session_links_insert_input {
  event_id: Int
  program_session_id: Int
  program_video_label: String
  program_video_link: String
}

"""aggregate max on columns"""
type session_links_max_fields {
   event_id: Int
   program_session_id: Int
   program_video_label: String
   program_video_link: String
}

"""
order by max() on columns of table "session_links"
"""
input session_links_max_order_by {
  event_id: order_by
  program_session_id: order_by
  program_video_label: order_by
  program_video_link: order_by
}

"""aggregate min on columns"""
type session_links_min_fields {
   event_id: Int
   program_session_id: Int
   program_video_label: String
   program_video_link: String
}

"""
order by min() on columns of table "session_links"
"""
input session_links_min_order_by {
  event_id: order_by
  program_session_id: order_by
  program_video_label: order_by
  program_video_link: order_by
}

"""
response of any mutation on the table "session_links"
"""
type session_links_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [session_links! ]! 
}

"""Ordering options when selecting data from "session_links"."""
input session_links_order_by {
  event_id: order_by
  program_session_id: order_by
  program_video_label: order_by
  program_video_link: order_by
}

"""
select columns of table "session_links"
"""
enum session_links_select_column {
  """column name"""
event_id
  """column name"""
program_session_id
  """column name"""
program_video_label
  """column name"""
program_video_link
}

"""
input type for updating data in table "session_links"
"""
input session_links_set_input {
  event_id: Int
  program_session_id: Int
  program_video_label: String
  program_video_link: String
}

"""aggregate stddev on columns"""
type session_links_stddev_fields {
   event_id: Float
   program_session_id: Float
}

"""
order by stddev() on columns of table "session_links"
"""
input session_links_stddev_order_by {
  event_id: order_by
  program_session_id: order_by
}

"""aggregate stddev_pop on columns"""
type session_links_stddev_pop_fields {
   event_id: Float
   program_session_id: Float
}

"""
order by stddev_pop() on columns of table "session_links"
"""
input session_links_stddev_pop_order_by {
  event_id: order_by
  program_session_id: order_by
}

"""aggregate stddev_samp on columns"""
type session_links_stddev_samp_fields {
   event_id: Float
   program_session_id: Float
}

"""
order by stddev_samp() on columns of table "session_links"
"""
input session_links_stddev_samp_order_by {
  event_id: order_by
  program_session_id: order_by
}

"""
Streaming cursor of the table "session_links"
"""
input session_links_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: session_links_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input session_links_stream_cursor_value_input {
  event_id: Int
  program_session_id: Int
  program_video_label: String
  program_video_link: String
}

"""aggregate sum on columns"""
type session_links_sum_fields {
   event_id: Int
   program_session_id: Int
}

"""
order by sum() on columns of table "session_links"
"""
input session_links_sum_order_by {
  event_id: order_by
  program_session_id: order_by
}

input session_links_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: session_links_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: session_links_set_input
  where: session_links_bool_exp! 
}

"""aggregate var_pop on columns"""
type session_links_var_pop_fields {
   event_id: Float
   program_session_id: Float
}

"""
order by var_pop() on columns of table "session_links"
"""
input session_links_var_pop_order_by {
  event_id: order_by
  program_session_id: order_by
}

"""aggregate var_samp on columns"""
type session_links_var_samp_fields {
   event_id: Float
   program_session_id: Float
}

"""
order by var_samp() on columns of table "session_links"
"""
input session_links_var_samp_order_by {
  event_id: order_by
  program_session_id: order_by
}

"""aggregate variance on columns"""
type session_links_variance_fields {
   event_id: Float
   program_session_id: Float
}

"""
order by variance() on columns of table "session_links"
"""
input session_links_variance_order_by {
  event_id: order_by
  program_session_id: order_by
}

"""
columns and relationships of "sessions"
"""
type sessions {
   created_at: bigint
   ended_at: timestamptz
   session_id: String
   user_agent: String
   user_id: Int
}

"""
aggregated selection of "sessions"
"""
type sessions_aggregate {
   aggregate: sessions_aggregate_fields
   nodes: [sessions! ]! 
}

"""
aggregate fields of "sessions"
"""
type sessions_aggregate_fields {
   avg: sessions_avg_fields
   count(columns: [sessions_select_column! ], distinct: Boolean): Int! 
   max: sessions_max_fields
   min: sessions_min_fields
   stddev: sessions_stddev_fields
   stddev_pop: sessions_stddev_pop_fields
   stddev_samp: sessions_stddev_samp_fields
   sum: sessions_sum_fields
   var_pop: sessions_var_pop_fields
   var_samp: sessions_var_samp_fields
   variance: sessions_variance_fields
}

"""aggregate avg on columns"""
type sessions_avg_fields {
   created_at: Float
   user_id: Float
}

"""
Boolean expression to filter rows from the table "sessions". All fields are combined with a logical 'AND'.
"""
input sessions_bool_exp {
  _and: [sessions_bool_exp! ]
  _not: sessions_bool_exp
  _or: [sessions_bool_exp! ]
  created_at: bigint_comparison_exp
  ended_at: timestamptz_comparison_exp
  session_id: String_comparison_exp
  user_agent: String_comparison_exp
  user_id: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "sessions"
"""
input sessions_inc_input {
  created_at: bigint
  user_id: Int
}

"""
input type for inserting data into table "sessions"
"""
input sessions_insert_input {
  created_at: bigint! 
  ended_at: timestamptz
  session_id: String
  user_agent: String
  user_id: Int
}

"""aggregate max on columns"""
type sessions_max_fields {
   created_at: bigint
   ended_at: timestamptz
   session_id: String
   user_agent: String
   user_id: Int
}

"""aggregate min on columns"""
type sessions_min_fields {
   created_at: bigint
   ended_at: timestamptz
   session_id: String
   user_agent: String
   user_id: Int
}

"""
response of any mutation on the table "sessions"
"""
type sessions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [sessions! ]! 
}

"""Ordering options when selecting data from "sessions"."""
input sessions_order_by {
  created_at: order_by
  ended_at: order_by
  session_id: order_by
  user_agent: order_by
  user_id: order_by
}

"""
select columns of table "sessions"
"""
enum sessions_select_column {
  """column name"""
created_at
  """column name"""
ended_at
  """column name"""
session_id
  """column name"""
user_agent
  """column name"""
user_id
}

"""
input type for updating data in table "sessions"
"""
input sessions_set_input {
  created_at: bigint
  ended_at: timestamptz
  session_id: String
  user_agent: String
  user_id: Int
}

"""aggregate stddev on columns"""
type sessions_stddev_fields {
   created_at: Float
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type sessions_stddev_pop_fields {
   created_at: Float
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type sessions_stddev_samp_fields {
   created_at: Float
   user_id: Float
}

"""
Streaming cursor of the table "sessions"
"""
input sessions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: sessions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input sessions_stream_cursor_value_input {
  created_at: bigint
  ended_at: timestamptz
  session_id: String
  user_agent: String
  user_id: Int
}

"""aggregate sum on columns"""
type sessions_sum_fields {
   created_at: bigint
   user_id: Int
}

input sessions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: sessions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: sessions_set_input
  where: sessions_bool_exp! 
}

"""aggregate var_pop on columns"""
type sessions_var_pop_fields {
   created_at: Float
   user_id: Float
}

"""aggregate var_samp on columns"""
type sessions_var_samp_fields {
   created_at: Float
   user_id: Float
}

"""aggregate variance on columns"""
type sessions_variance_fields {
   created_at: Float
   user_id: Float
}

scalar smallint 

"""
Boolean expression to compare columns of type "smallint". All fields are combined with logical 'AND'.
"""
input smallint_comparison_exp {
  _eq: smallint
  _gt: smallint
  _gte: smallint
  _in: [smallint! ]
  _is_null: Boolean
  _lt: smallint
  _lte: smallint
  _neq: smallint
  _nin: [smallint! ]
}

"""
columns and relationships of "software_updates"
"""
type software_updates {
   date: timestamp! 
   details: String! 
   link: String! 
   software_update_id: Int! 
}

"""
aggregated selection of "software_updates"
"""
type software_updates_aggregate {
   aggregate: software_updates_aggregate_fields
   nodes: [software_updates! ]! 
}

"""
aggregate fields of "software_updates"
"""
type software_updates_aggregate_fields {
   avg: software_updates_avg_fields
   count(columns: [software_updates_select_column! ], distinct: Boolean): Int! 
   max: software_updates_max_fields
   min: software_updates_min_fields
   stddev: software_updates_stddev_fields
   stddev_pop: software_updates_stddev_pop_fields
   stddev_samp: software_updates_stddev_samp_fields
   sum: software_updates_sum_fields
   var_pop: software_updates_var_pop_fields
   var_samp: software_updates_var_samp_fields
   variance: software_updates_variance_fields
}

"""aggregate avg on columns"""
type software_updates_avg_fields {
   software_update_id: Float
}

"""
Boolean expression to filter rows from the table "software_updates". All fields are combined with a logical 'AND'.
"""
input software_updates_bool_exp {
  _and: [software_updates_bool_exp! ]
  _not: software_updates_bool_exp
  _or: [software_updates_bool_exp! ]
  date: timestamp_comparison_exp
  details: String_comparison_exp
  link: String_comparison_exp
  software_update_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "software_updates"
"""
enum software_updates_constraint {
  """
  unique or primary key constraint on columns "software_update_id"
  """
software_updates_pkey
}

"""
input type for incrementing numeric columns in table "software_updates"
"""
input software_updates_inc_input {
  software_update_id: Int
}

"""
input type for inserting data into table "software_updates"
"""
input software_updates_insert_input {
  date: timestamp! 
  details: String! 
  link: String! 
  software_update_id: Int! 
}

"""aggregate max on columns"""
type software_updates_max_fields {
   date: timestamp
   details: String
   link: String
   software_update_id: Int
}

"""aggregate min on columns"""
type software_updates_min_fields {
   date: timestamp
   details: String
   link: String
   software_update_id: Int
}

"""
response of any mutation on the table "software_updates"
"""
type software_updates_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [software_updates! ]! 
}

"""
on_conflict condition type for table "software_updates"
"""
input software_updates_on_conflict {
  constraint: software_updates_constraint! 
  update_columns: [software_updates_update_column! ]! 
  where: software_updates_bool_exp
}

"""Ordering options when selecting data from "software_updates"."""
input software_updates_order_by {
  date: order_by
  details: order_by
  link: order_by
  software_update_id: order_by
}

"""primary key columns input for table: software_updates"""
input software_updates_pk_columns_input {
  software_update_id: Int! 
}

"""
select columns of table "software_updates"
"""
enum software_updates_select_column {
  """column name"""
date
  """column name"""
details
  """column name"""
link
  """column name"""
software_update_id
}

"""
input type for updating data in table "software_updates"
"""
input software_updates_set_input {
  date: timestamp
  details: String
  link: String
  software_update_id: Int
}

"""aggregate stddev on columns"""
type software_updates_stddev_fields {
   software_update_id: Float
}

"""aggregate stddev_pop on columns"""
type software_updates_stddev_pop_fields {
   software_update_id: Float
}

"""aggregate stddev_samp on columns"""
type software_updates_stddev_samp_fields {
   software_update_id: Float
}

"""
Streaming cursor of the table "software_updates"
"""
input software_updates_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: software_updates_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input software_updates_stream_cursor_value_input {
  date: timestamp
  details: String
  link: String
  software_update_id: Int
}

"""aggregate sum on columns"""
type software_updates_sum_fields {
   software_update_id: Int
}

"""
update columns of table "software_updates"
"""
enum software_updates_update_column {
  """column name"""
date
  """column name"""
details
  """column name"""
link
  """column name"""
software_update_id
}

input software_updates_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: software_updates_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: software_updates_set_input
  where: software_updates_bool_exp! 
}

"""aggregate var_pop on columns"""
type software_updates_var_pop_fields {
   software_update_id: Float
}

"""aggregate var_samp on columns"""
type software_updates_var_samp_fields {
   software_update_id: Float
}

"""aggregate variance on columns"""
type software_updates_variance_fields {
   software_update_id: Float
}

"""
Sections of an event that can be submitted to and/or have separate reviews for each submission
"""
type stages {
   allow_symposium_submissions: Boolean! 
   committee_members_can_decide: Boolean! 
   deadline_date: date
   edit_incomplete_submissions_allowed: Boolean! 
   edit_submissions_allowed: Boolean! 
  """An object relationship"""
 event: events! 
   event_id: Int! 
   hide_submitter_email: Boolean! 
   hide_submitter_name: Boolean! 
   id: Int! 
   max_submissions_per_submitter: Int
   new_submissions_allowed: Boolean! 
   only_allowed_submissions: Boolean! 
   outcome_notification_date: date
   previous_stage_id: Int
  """An array relationship"""
 questions_stage_options("""distinct select on columns"""
distinct_on: [questions_stage_options_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_stage_options_order_by! ], """filter the rows returned"""
where: questions_stage_options_bool_exp): [questions_stage_options! ]! 
  """An aggregate relationship"""
 questions_stage_options_aggregate("""distinct select on columns"""
distinct_on: [questions_stage_options_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_stage_options_order_by! ], """filter the rows returned"""
where: questions_stage_options_bool_exp): questions_stage_options_aggregate! 
   review_deadline_date: date
  """An array relationship"""
 reviewer_questions("""distinct select on columns"""
distinct_on: [reviewer_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_questions_order_by! ], """filter the rows returned"""
where: reviewer_questions_bool_exp): [reviewer_questions! ]! 
  """An aggregate relationship"""
 reviewer_questions_aggregate("""distinct select on columns"""
distinct_on: [reviewer_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_questions_order_by! ], """filter the rows returned"""
where: reviewer_questions_bool_exp): reviewer_questions_aggregate! 
  """An array relationship"""
 reviews("""distinct select on columns"""
distinct_on: [reviews_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviews_order_by! ], """filter the rows returned"""
where: reviews_bool_exp): [reviews! ]! 
  """An aggregate relationship"""
 reviews_aggregate("""distinct select on columns"""
distinct_on: [reviews_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviews_order_by! ], """filter the rows returned"""
where: reviews_bool_exp): reviews_aggregate! 
   reviews_open: Boolean! 
   reviews_thank_you_message: String
   reviews_welcome_message: String
   stage_name: String! 
   submission_payment_currency: paypal_payment_currency! 
   submission_payment_enabled: Boolean! 
   submission_payment_failure: String! 
   submission_payment_pending: String! 
   submission_payment_price: Int! 
   submission_payment_processing: String! 
   submission_payment_success: String! 
  """An array relationship"""
 submissions("""distinct select on columns"""
distinct_on: [submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submissions_order_by! ], """filter the rows returned"""
where: submissions_bool_exp): [submissions! ]! 
  """An aggregate relationship"""
 submissions_aggregate("""distinct select on columns"""
distinct_on: [submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submissions_order_by! ], """filter the rows returned"""
where: submissions_bool_exp): submissions_aggregate! 
   submissions_thank_you_message: String
   submissions_welcome_message: String
   submitter_email_not_allowed_message: String! 
   submitters_can_view_decisions: Boolean! 
   submitters_can_view_reviews: Boolean! 
   symposium_reviews_open: Boolean! 
   symposium_reviews_thank_you_message: String
   symposium_reviews_welcome_message: String
   symposium_submissions_open: Boolean! 
}

"""
aggregated selection of "stages"
"""
type stages_aggregate {
   aggregate: stages_aggregate_fields
   nodes: [stages! ]! 
}

input stages_aggregate_bool_exp {
  bool_and: stages_aggregate_bool_exp_bool_and
  bool_or: stages_aggregate_bool_exp_bool_or
  count: stages_aggregate_bool_exp_count
}

input stages_aggregate_bool_exp_bool_and {
  arguments: stages_select_column_stages_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: stages_bool_exp
  predicate: Boolean_comparison_exp! 
}

input stages_aggregate_bool_exp_bool_or {
  arguments: stages_select_column_stages_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: stages_bool_exp
  predicate: Boolean_comparison_exp! 
}

input stages_aggregate_bool_exp_count {
  arguments: [stages_select_column! ]
  distinct: Boolean
  filter: stages_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "stages"
"""
type stages_aggregate_fields {
   avg: stages_avg_fields
   count(columns: [stages_select_column! ], distinct: Boolean): Int! 
   max: stages_max_fields
   min: stages_min_fields
   stddev: stages_stddev_fields
   stddev_pop: stages_stddev_pop_fields
   stddev_samp: stages_stddev_samp_fields
   sum: stages_sum_fields
   var_pop: stages_var_pop_fields
   var_samp: stages_var_samp_fields
   variance: stages_variance_fields
}

"""
order by aggregate values of table "stages"
"""
input stages_aggregate_order_by {
  avg: stages_avg_order_by
  count: order_by
  max: stages_max_order_by
  min: stages_min_order_by
  stddev: stages_stddev_order_by
  stddev_pop: stages_stddev_pop_order_by
  stddev_samp: stages_stddev_samp_order_by
  sum: stages_sum_order_by
  var_pop: stages_var_pop_order_by
  var_samp: stages_var_samp_order_by
  variance: stages_variance_order_by
}

"""
input type for inserting array relation for remote table "stages"
"""
input stages_arr_rel_insert_input {
  data: [stages_insert_input! ]! 
  """upsert condition"""
on_conflict: stages_on_conflict
}

"""aggregate avg on columns"""
type stages_avg_fields {
   event_id: Float
   id: Float
   max_submissions_per_submitter: Float
   previous_stage_id: Float
   submission_payment_price: Float
}

"""
order by avg() on columns of table "stages"
"""
input stages_avg_order_by {
  event_id: order_by
  id: order_by
  max_submissions_per_submitter: order_by
  previous_stage_id: order_by
  submission_payment_price: order_by
}

"""
Boolean expression to filter rows from the table "stages". All fields are combined with a logical 'AND'.
"""
input stages_bool_exp {
  _and: [stages_bool_exp! ]
  _not: stages_bool_exp
  _or: [stages_bool_exp! ]
  allow_symposium_submissions: Boolean_comparison_exp
  committee_members_can_decide: Boolean_comparison_exp
  deadline_date: date_comparison_exp
  edit_incomplete_submissions_allowed: Boolean_comparison_exp
  edit_submissions_allowed: Boolean_comparison_exp
  event: events_bool_exp
  event_id: Int_comparison_exp
  hide_submitter_email: Boolean_comparison_exp
  hide_submitter_name: Boolean_comparison_exp
  id: Int_comparison_exp
  max_submissions_per_submitter: Int_comparison_exp
  new_submissions_allowed: Boolean_comparison_exp
  only_allowed_submissions: Boolean_comparison_exp
  outcome_notification_date: date_comparison_exp
  previous_stage_id: Int_comparison_exp
  questions_stage_options: questions_stage_options_bool_exp
  questions_stage_options_aggregate: questions_stage_options_aggregate_bool_exp
  review_deadline_date: date_comparison_exp
  reviewer_questions: reviewer_questions_bool_exp
  reviewer_questions_aggregate: reviewer_questions_aggregate_bool_exp
  reviews: reviews_bool_exp
  reviews_aggregate: reviews_aggregate_bool_exp
  reviews_open: Boolean_comparison_exp
  reviews_thank_you_message: String_comparison_exp
  reviews_welcome_message: String_comparison_exp
  stage_name: String_comparison_exp
  submission_payment_currency: paypal_payment_currency_comparison_exp
  submission_payment_enabled: Boolean_comparison_exp
  submission_payment_failure: String_comparison_exp
  submission_payment_pending: String_comparison_exp
  submission_payment_price: Int_comparison_exp
  submission_payment_processing: String_comparison_exp
  submission_payment_success: String_comparison_exp
  submissions: submissions_bool_exp
  submissions_aggregate: submissions_aggregate_bool_exp
  submissions_thank_you_message: String_comparison_exp
  submissions_welcome_message: String_comparison_exp
  submitter_email_not_allowed_message: String_comparison_exp
  submitters_can_view_decisions: Boolean_comparison_exp
  submitters_can_view_reviews: Boolean_comparison_exp
  symposium_reviews_open: Boolean_comparison_exp
  symposium_reviews_thank_you_message: String_comparison_exp
  symposium_reviews_welcome_message: String_comparison_exp
  symposium_submissions_open: Boolean_comparison_exp
}

"""
unique or primary key constraints on table "stages"
"""
enum stages_constraint {
  """
  unique or primary key constraint on columns "stage_id"
  """
stages_pkey
}

"""
columns and relationships of "stages_event_acceptance_types"
"""
type stages_event_acceptance_types {
  """An object relationship"""
 event_acceptance_type: event_acceptance_types! 
   event_acceptance_type_id: Int! 
  """An object relationship"""
 stage: stages! 
   stage_id: Int! 
   stages_event_acceptance_type_id: Int! 
}

"""
aggregated selection of "stages_event_acceptance_types"
"""
type stages_event_acceptance_types_aggregate {
   aggregate: stages_event_acceptance_types_aggregate_fields
   nodes: [stages_event_acceptance_types! ]! 
}

"""
aggregate fields of "stages_event_acceptance_types"
"""
type stages_event_acceptance_types_aggregate_fields {
   avg: stages_event_acceptance_types_avg_fields
   count(columns: [stages_event_acceptance_types_select_column! ], distinct: Boolean): Int! 
   max: stages_event_acceptance_types_max_fields
   min: stages_event_acceptance_types_min_fields
   stddev: stages_event_acceptance_types_stddev_fields
   stddev_pop: stages_event_acceptance_types_stddev_pop_fields
   stddev_samp: stages_event_acceptance_types_stddev_samp_fields
   sum: stages_event_acceptance_types_sum_fields
   var_pop: stages_event_acceptance_types_var_pop_fields
   var_samp: stages_event_acceptance_types_var_samp_fields
   variance: stages_event_acceptance_types_variance_fields
}

"""aggregate avg on columns"""
type stages_event_acceptance_types_avg_fields {
   event_acceptance_type_id: Float
   stage_id: Float
   stages_event_acceptance_type_id: Float
}

"""
Boolean expression to filter rows from the table "stages_event_acceptance_types". All fields are combined with a logical 'AND'.
"""
input stages_event_acceptance_types_bool_exp {
  _and: [stages_event_acceptance_types_bool_exp! ]
  _not: stages_event_acceptance_types_bool_exp
  _or: [stages_event_acceptance_types_bool_exp! ]
  event_acceptance_type: event_acceptance_types_bool_exp
  event_acceptance_type_id: Int_comparison_exp
  stage: stages_bool_exp
  stage_id: Int_comparison_exp
  stages_event_acceptance_type_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "stages_event_acceptance_types"
"""
enum stages_event_acceptance_types_constraint {
  """
  unique or primary key constraint on columns "stages_event_acceptance_type_id"
  """
stages_event_outcomes_pkey
}

"""
input type for incrementing numeric columns in table "stages_event_acceptance_types"
"""
input stages_event_acceptance_types_inc_input {
  event_acceptance_type_id: Int
  stage_id: Int
  stages_event_acceptance_type_id: Int
}

"""
input type for inserting data into table "stages_event_acceptance_types"
"""
input stages_event_acceptance_types_insert_input {
  event_acceptance_type: event_acceptance_types_obj_rel_insert_input
  event_acceptance_type_id: Int! 
  stage: stages_obj_rel_insert_input
  stage_id: Int! 
  stages_event_acceptance_type_id: Int! 
}

"""aggregate max on columns"""
type stages_event_acceptance_types_max_fields {
   event_acceptance_type_id: Int
   stage_id: Int
   stages_event_acceptance_type_id: Int
}

"""aggregate min on columns"""
type stages_event_acceptance_types_min_fields {
   event_acceptance_type_id: Int
   stage_id: Int
   stages_event_acceptance_type_id: Int
}

"""
response of any mutation on the table "stages_event_acceptance_types"
"""
type stages_event_acceptance_types_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [stages_event_acceptance_types! ]! 
}

"""
on_conflict condition type for table "stages_event_acceptance_types"
"""
input stages_event_acceptance_types_on_conflict {
  constraint: stages_event_acceptance_types_constraint! 
  update_columns: [stages_event_acceptance_types_update_column! ]! 
  where: stages_event_acceptance_types_bool_exp
}

"""
Ordering options when selecting data from "stages_event_acceptance_types".
"""
input stages_event_acceptance_types_order_by {
  event_acceptance_type: event_acceptance_types_order_by
  event_acceptance_type_id: order_by
  stage: stages_order_by
  stage_id: order_by
  stages_event_acceptance_type_id: order_by
}

"""primary key columns input for table: stages_event_acceptance_types"""
input stages_event_acceptance_types_pk_columns_input {
  stages_event_acceptance_type_id: Int! 
}

"""
select columns of table "stages_event_acceptance_types"
"""
enum stages_event_acceptance_types_select_column {
  """column name"""
event_acceptance_type_id
  """column name"""
stage_id
  """column name"""
stages_event_acceptance_type_id
}

"""
input type for updating data in table "stages_event_acceptance_types"
"""
input stages_event_acceptance_types_set_input {
  event_acceptance_type_id: Int
  stage_id: Int
  stages_event_acceptance_type_id: Int
}

"""aggregate stddev on columns"""
type stages_event_acceptance_types_stddev_fields {
   event_acceptance_type_id: Float
   stage_id: Float
   stages_event_acceptance_type_id: Float
}

"""aggregate stddev_pop on columns"""
type stages_event_acceptance_types_stddev_pop_fields {
   event_acceptance_type_id: Float
   stage_id: Float
   stages_event_acceptance_type_id: Float
}

"""aggregate stddev_samp on columns"""
type stages_event_acceptance_types_stddev_samp_fields {
   event_acceptance_type_id: Float
   stage_id: Float
   stages_event_acceptance_type_id: Float
}

"""
Streaming cursor of the table "stages_event_acceptance_types"
"""
input stages_event_acceptance_types_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: stages_event_acceptance_types_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input stages_event_acceptance_types_stream_cursor_value_input {
  event_acceptance_type_id: Int
  stage_id: Int
  stages_event_acceptance_type_id: Int
}

"""aggregate sum on columns"""
type stages_event_acceptance_types_sum_fields {
   event_acceptance_type_id: Int
   stage_id: Int
   stages_event_acceptance_type_id: Int
}

"""
update columns of table "stages_event_acceptance_types"
"""
enum stages_event_acceptance_types_update_column {
  """column name"""
event_acceptance_type_id
  """column name"""
stage_id
  """column name"""
stages_event_acceptance_type_id
}

input stages_event_acceptance_types_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: stages_event_acceptance_types_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: stages_event_acceptance_types_set_input
  where: stages_event_acceptance_types_bool_exp! 
}

"""aggregate var_pop on columns"""
type stages_event_acceptance_types_var_pop_fields {
   event_acceptance_type_id: Float
   stage_id: Float
   stages_event_acceptance_type_id: Float
}

"""aggregate var_samp on columns"""
type stages_event_acceptance_types_var_samp_fields {
   event_acceptance_type_id: Float
   stage_id: Float
   stages_event_acceptance_type_id: Float
}

"""aggregate variance on columns"""
type stages_event_acceptance_types_variance_fields {
   event_acceptance_type_id: Float
   stage_id: Float
   stages_event_acceptance_type_id: Float
}

"""
input type for incrementing numeric columns in table "stages"
"""
input stages_inc_input {
  event_id: Int
  id: Int
  max_submissions_per_submitter: Int
  previous_stage_id: Int
  submission_payment_price: Int
}

"""
input type for inserting data into table "stages"
"""
input stages_insert_input {
  allow_symposium_submissions: Boolean! 
  committee_members_can_decide: Boolean! 
  deadline_date: date
  edit_incomplete_submissions_allowed: Boolean! 
  edit_submissions_allowed: Boolean! 
  event: events_obj_rel_insert_input
  event_id: Int! 
  hide_submitter_email: Boolean! 
  hide_submitter_name: Boolean! 
  id: Int
  max_submissions_per_submitter: Int
  new_submissions_allowed: Boolean! 
  only_allowed_submissions: Boolean! 
  outcome_notification_date: date
  previous_stage_id: Int
  questions_stage_options: questions_stage_options_arr_rel_insert_input
  review_deadline_date: date
  reviewer_questions: reviewer_questions_arr_rel_insert_input
  reviews: reviews_arr_rel_insert_input
  reviews_open: Boolean! 
  reviews_thank_you_message: String
  reviews_welcome_message: String
  stage_name: String! 
  submission_payment_currency: paypal_payment_currency! 
  submission_payment_enabled: Boolean! 
  submission_payment_failure: String! 
  submission_payment_pending: String! 
  submission_payment_price: Int! 
  submission_payment_processing: String! 
  submission_payment_success: String! 
  submissions: submissions_arr_rel_insert_input
  submissions_thank_you_message: String
  submissions_welcome_message: String
  submitter_email_not_allowed_message: String! 
  submitters_can_view_decisions: Boolean! 
  submitters_can_view_reviews: Boolean! 
  symposium_reviews_open: Boolean! 
  symposium_reviews_thank_you_message: String
  symposium_reviews_welcome_message: String
  symposium_submissions_open: Boolean! 
}

"""aggregate max on columns"""
type stages_max_fields {
   deadline_date: date
   event_id: Int
   id: Int
   max_submissions_per_submitter: Int
   outcome_notification_date: date
   previous_stage_id: Int
   review_deadline_date: date
   reviews_thank_you_message: String
   reviews_welcome_message: String
   stage_name: String
   submission_payment_currency: paypal_payment_currency
   submission_payment_failure: String
   submission_payment_pending: String
   submission_payment_price: Int
   submission_payment_processing: String
   submission_payment_success: String
   submissions_thank_you_message: String
   submissions_welcome_message: String
   submitter_email_not_allowed_message: String
   symposium_reviews_thank_you_message: String
   symposium_reviews_welcome_message: String
}

"""
order by max() on columns of table "stages"
"""
input stages_max_order_by {
  deadline_date: order_by
  event_id: order_by
  id: order_by
  max_submissions_per_submitter: order_by
  outcome_notification_date: order_by
  previous_stage_id: order_by
  review_deadline_date: order_by
  reviews_thank_you_message: order_by
  reviews_welcome_message: order_by
  stage_name: order_by
  submission_payment_currency: order_by
  submission_payment_failure: order_by
  submission_payment_pending: order_by
  submission_payment_price: order_by
  submission_payment_processing: order_by
  submission_payment_success: order_by
  submissions_thank_you_message: order_by
  submissions_welcome_message: order_by
  submitter_email_not_allowed_message: order_by
  symposium_reviews_thank_you_message: order_by
  symposium_reviews_welcome_message: order_by
}

"""aggregate min on columns"""
type stages_min_fields {
   deadline_date: date
   event_id: Int
   id: Int
   max_submissions_per_submitter: Int
   outcome_notification_date: date
   previous_stage_id: Int
   review_deadline_date: date
   reviews_thank_you_message: String
   reviews_welcome_message: String
   stage_name: String
   submission_payment_currency: paypal_payment_currency
   submission_payment_failure: String
   submission_payment_pending: String
   submission_payment_price: Int
   submission_payment_processing: String
   submission_payment_success: String
   submissions_thank_you_message: String
   submissions_welcome_message: String
   submitter_email_not_allowed_message: String
   symposium_reviews_thank_you_message: String
   symposium_reviews_welcome_message: String
}

"""
order by min() on columns of table "stages"
"""
input stages_min_order_by {
  deadline_date: order_by
  event_id: order_by
  id: order_by
  max_submissions_per_submitter: order_by
  outcome_notification_date: order_by
  previous_stage_id: order_by
  review_deadline_date: order_by
  reviews_thank_you_message: order_by
  reviews_welcome_message: order_by
  stage_name: order_by
  submission_payment_currency: order_by
  submission_payment_failure: order_by
  submission_payment_pending: order_by
  submission_payment_price: order_by
  submission_payment_processing: order_by
  submission_payment_success: order_by
  submissions_thank_you_message: order_by
  submissions_welcome_message: order_by
  submitter_email_not_allowed_message: order_by
  symposium_reviews_thank_you_message: order_by
  symposium_reviews_welcome_message: order_by
}

"""
response of any mutation on the table "stages"
"""
type stages_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [stages! ]! 
}

"""
input type for inserting object relation for remote table "stages"
"""
input stages_obj_rel_insert_input {
  data: stages_insert_input! 
  """upsert condition"""
on_conflict: stages_on_conflict
}

"""
on_conflict condition type for table "stages"
"""
input stages_on_conflict {
  constraint: stages_constraint! 
  update_columns: [stages_update_column! ]! 
  where: stages_bool_exp
}

"""Ordering options when selecting data from "stages"."""
input stages_order_by {
  allow_symposium_submissions: order_by
  committee_members_can_decide: order_by
  deadline_date: order_by
  edit_incomplete_submissions_allowed: order_by
  edit_submissions_allowed: order_by
  event: events_order_by
  event_id: order_by
  hide_submitter_email: order_by
  hide_submitter_name: order_by
  id: order_by
  max_submissions_per_submitter: order_by
  new_submissions_allowed: order_by
  only_allowed_submissions: order_by
  outcome_notification_date: order_by
  previous_stage_id: order_by
  questions_stage_options_aggregate: questions_stage_options_aggregate_order_by
  review_deadline_date: order_by
  reviewer_questions_aggregate: reviewer_questions_aggregate_order_by
  reviews_aggregate: reviews_aggregate_order_by
  reviews_open: order_by
  reviews_thank_you_message: order_by
  reviews_welcome_message: order_by
  stage_name: order_by
  submission_payment_currency: order_by
  submission_payment_enabled: order_by
  submission_payment_failure: order_by
  submission_payment_pending: order_by
  submission_payment_price: order_by
  submission_payment_processing: order_by
  submission_payment_success: order_by
  submissions_aggregate: submissions_aggregate_order_by
  submissions_thank_you_message: order_by
  submissions_welcome_message: order_by
  submitter_email_not_allowed_message: order_by
  submitters_can_view_decisions: order_by
  submitters_can_view_reviews: order_by
  symposium_reviews_open: order_by
  symposium_reviews_thank_you_message: order_by
  symposium_reviews_welcome_message: order_by
  symposium_submissions_open: order_by
}

"""primary key columns input for table: stages"""
input stages_pk_columns_input {
  id: Int! 
}

"""
select columns of table "stages"
"""
enum stages_select_column {
  """column name"""
allow_symposium_submissions
  """column name"""
committee_members_can_decide
  """column name"""
deadline_date
  """column name"""
edit_incomplete_submissions_allowed
  """column name"""
edit_submissions_allowed
  """column name"""
event_id
  """column name"""
hide_submitter_email
  """column name"""
hide_submitter_name
  """column name"""
id
  """column name"""
max_submissions_per_submitter
  """column name"""
new_submissions_allowed
  """column name"""
only_allowed_submissions
  """column name"""
outcome_notification_date
  """column name"""
previous_stage_id
  """column name"""
review_deadline_date
  """column name"""
reviews_open
  """column name"""
reviews_thank_you_message
  """column name"""
reviews_welcome_message
  """column name"""
stage_name
  """column name"""
submission_payment_currency
  """column name"""
submission_payment_enabled
  """column name"""
submission_payment_failure
  """column name"""
submission_payment_pending
  """column name"""
submission_payment_price
  """column name"""
submission_payment_processing
  """column name"""
submission_payment_success
  """column name"""
submissions_thank_you_message
  """column name"""
submissions_welcome_message
  """column name"""
submitter_email_not_allowed_message
  """column name"""
submitters_can_view_decisions
  """column name"""
submitters_can_view_reviews
  """column name"""
symposium_reviews_open
  """column name"""
symposium_reviews_thank_you_message
  """column name"""
symposium_reviews_welcome_message
  """column name"""
symposium_submissions_open
}

"""
select "stages_aggregate_bool_exp_bool_and_arguments_columns" columns of table "stages"
"""
enum stages_select_column_stages_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
allow_symposium_submissions
  """column name"""
committee_members_can_decide
  """column name"""
edit_incomplete_submissions_allowed
  """column name"""
edit_submissions_allowed
  """column name"""
hide_submitter_email
  """column name"""
hide_submitter_name
  """column name"""
new_submissions_allowed
  """column name"""
only_allowed_submissions
  """column name"""
reviews_open
  """column name"""
submission_payment_enabled
  """column name"""
submitters_can_view_decisions
  """column name"""
submitters_can_view_reviews
  """column name"""
symposium_reviews_open
  """column name"""
symposium_submissions_open
}

"""
select "stages_aggregate_bool_exp_bool_or_arguments_columns" columns of table "stages"
"""
enum stages_select_column_stages_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
allow_symposium_submissions
  """column name"""
committee_members_can_decide
  """column name"""
edit_incomplete_submissions_allowed
  """column name"""
edit_submissions_allowed
  """column name"""
hide_submitter_email
  """column name"""
hide_submitter_name
  """column name"""
new_submissions_allowed
  """column name"""
only_allowed_submissions
  """column name"""
reviews_open
  """column name"""
submission_payment_enabled
  """column name"""
submitters_can_view_decisions
  """column name"""
submitters_can_view_reviews
  """column name"""
symposium_reviews_open
  """column name"""
symposium_submissions_open
}

"""
input type for updating data in table "stages"
"""
input stages_set_input {
  allow_symposium_submissions: Boolean
  committee_members_can_decide: Boolean
  deadline_date: date
  edit_incomplete_submissions_allowed: Boolean
  edit_submissions_allowed: Boolean
  event_id: Int
  hide_submitter_email: Boolean
  hide_submitter_name: Boolean
  id: Int
  max_submissions_per_submitter: Int
  new_submissions_allowed: Boolean
  only_allowed_submissions: Boolean
  outcome_notification_date: date
  previous_stage_id: Int
  review_deadline_date: date
  reviews_open: Boolean
  reviews_thank_you_message: String
  reviews_welcome_message: String
  stage_name: String
  submission_payment_currency: paypal_payment_currency
  submission_payment_enabled: Boolean
  submission_payment_failure: String
  submission_payment_pending: String
  submission_payment_price: Int
  submission_payment_processing: String
  submission_payment_success: String
  submissions_thank_you_message: String
  submissions_welcome_message: String
  submitter_email_not_allowed_message: String
  submitters_can_view_decisions: Boolean
  submitters_can_view_reviews: Boolean
  symposium_reviews_open: Boolean
  symposium_reviews_thank_you_message: String
  symposium_reviews_welcome_message: String
  symposium_submissions_open: Boolean
}

"""aggregate stddev on columns"""
type stages_stddev_fields {
   event_id: Float
   id: Float
   max_submissions_per_submitter: Float
   previous_stage_id: Float
   submission_payment_price: Float
}

"""
order by stddev() on columns of table "stages"
"""
input stages_stddev_order_by {
  event_id: order_by
  id: order_by
  max_submissions_per_submitter: order_by
  previous_stage_id: order_by
  submission_payment_price: order_by
}

"""aggregate stddev_pop on columns"""
type stages_stddev_pop_fields {
   event_id: Float
   id: Float
   max_submissions_per_submitter: Float
   previous_stage_id: Float
   submission_payment_price: Float
}

"""
order by stddev_pop() on columns of table "stages"
"""
input stages_stddev_pop_order_by {
  event_id: order_by
  id: order_by
  max_submissions_per_submitter: order_by
  previous_stage_id: order_by
  submission_payment_price: order_by
}

"""aggregate stddev_samp on columns"""
type stages_stddev_samp_fields {
   event_id: Float
   id: Float
   max_submissions_per_submitter: Float
   previous_stage_id: Float
   submission_payment_price: Float
}

"""
order by stddev_samp() on columns of table "stages"
"""
input stages_stddev_samp_order_by {
  event_id: order_by
  id: order_by
  max_submissions_per_submitter: order_by
  previous_stage_id: order_by
  submission_payment_price: order_by
}

"""
Streaming cursor of the table "stages"
"""
input stages_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: stages_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input stages_stream_cursor_value_input {
  allow_symposium_submissions: Boolean
  committee_members_can_decide: Boolean
  deadline_date: date
  edit_incomplete_submissions_allowed: Boolean
  edit_submissions_allowed: Boolean
  event_id: Int
  hide_submitter_email: Boolean
  hide_submitter_name: Boolean
  id: Int
  max_submissions_per_submitter: Int
  new_submissions_allowed: Boolean
  only_allowed_submissions: Boolean
  outcome_notification_date: date
  previous_stage_id: Int
  review_deadline_date: date
  reviews_open: Boolean
  reviews_thank_you_message: String
  reviews_welcome_message: String
  stage_name: String
  submission_payment_currency: paypal_payment_currency
  submission_payment_enabled: Boolean
  submission_payment_failure: String
  submission_payment_pending: String
  submission_payment_price: Int
  submission_payment_processing: String
  submission_payment_success: String
  submissions_thank_you_message: String
  submissions_welcome_message: String
  submitter_email_not_allowed_message: String
  submitters_can_view_decisions: Boolean
  submitters_can_view_reviews: Boolean
  symposium_reviews_open: Boolean
  symposium_reviews_thank_you_message: String
  symposium_reviews_welcome_message: String
  symposium_submissions_open: Boolean
}

"""aggregate sum on columns"""
type stages_sum_fields {
   event_id: Int
   id: Int
   max_submissions_per_submitter: Int
   previous_stage_id: Int
   submission_payment_price: Int
}

"""
order by sum() on columns of table "stages"
"""
input stages_sum_order_by {
  event_id: order_by
  id: order_by
  max_submissions_per_submitter: order_by
  previous_stage_id: order_by
  submission_payment_price: order_by
}

"""
update columns of table "stages"
"""
enum stages_update_column {
  """column name"""
allow_symposium_submissions
  """column name"""
committee_members_can_decide
  """column name"""
deadline_date
  """column name"""
edit_incomplete_submissions_allowed
  """column name"""
edit_submissions_allowed
  """column name"""
event_id
  """column name"""
hide_submitter_email
  """column name"""
hide_submitter_name
  """column name"""
id
  """column name"""
max_submissions_per_submitter
  """column name"""
new_submissions_allowed
  """column name"""
only_allowed_submissions
  """column name"""
outcome_notification_date
  """column name"""
previous_stage_id
  """column name"""
review_deadline_date
  """column name"""
reviews_open
  """column name"""
reviews_thank_you_message
  """column name"""
reviews_welcome_message
  """column name"""
stage_name
  """column name"""
submission_payment_currency
  """column name"""
submission_payment_enabled
  """column name"""
submission_payment_failure
  """column name"""
submission_payment_pending
  """column name"""
submission_payment_price
  """column name"""
submission_payment_processing
  """column name"""
submission_payment_success
  """column name"""
submissions_thank_you_message
  """column name"""
submissions_welcome_message
  """column name"""
submitter_email_not_allowed_message
  """column name"""
submitters_can_view_decisions
  """column name"""
submitters_can_view_reviews
  """column name"""
symposium_reviews_open
  """column name"""
symposium_reviews_thank_you_message
  """column name"""
symposium_reviews_welcome_message
  """column name"""
symposium_submissions_open
}

input stages_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: stages_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: stages_set_input
  where: stages_bool_exp! 
}

"""aggregate var_pop on columns"""
type stages_var_pop_fields {
   event_id: Float
   id: Float
   max_submissions_per_submitter: Float
   previous_stage_id: Float
   submission_payment_price: Float
}

"""
order by var_pop() on columns of table "stages"
"""
input stages_var_pop_order_by {
  event_id: order_by
  id: order_by
  max_submissions_per_submitter: order_by
  previous_stage_id: order_by
  submission_payment_price: order_by
}

"""aggregate var_samp on columns"""
type stages_var_samp_fields {
   event_id: Float
   id: Float
   max_submissions_per_submitter: Float
   previous_stage_id: Float
   submission_payment_price: Float
}

"""
order by var_samp() on columns of table "stages"
"""
input stages_var_samp_order_by {
  event_id: order_by
  id: order_by
  max_submissions_per_submitter: order_by
  previous_stage_id: order_by
  submission_payment_price: order_by
}

"""aggregate variance on columns"""
type stages_variance_fields {
   event_id: Float
   id: Float
   max_submissions_per_submitter: Float
   previous_stage_id: Float
   submission_payment_price: Float
}

"""
order by variance() on columns of table "stages"
"""
input stages_variance_order_by {
  event_id: order_by
  id: order_by
  max_submissions_per_submitter: order_by
  previous_stage_id: order_by
  submission_payment_price: order_by
}

"""
columns and relationships of "stages_view"
"""
type stages_view {
   event_id: Int
   stage_id: Int
}

"""
aggregated selection of "stages_view"
"""
type stages_view_aggregate {
   aggregate: stages_view_aggregate_fields
   nodes: [stages_view! ]! 
}

"""
aggregate fields of "stages_view"
"""
type stages_view_aggregate_fields {
   avg: stages_view_avg_fields
   count(columns: [stages_view_select_column! ], distinct: Boolean): Int! 
   max: stages_view_max_fields
   min: stages_view_min_fields
   stddev: stages_view_stddev_fields
   stddev_pop: stages_view_stddev_pop_fields
   stddev_samp: stages_view_stddev_samp_fields
   sum: stages_view_sum_fields
   var_pop: stages_view_var_pop_fields
   var_samp: stages_view_var_samp_fields
   variance: stages_view_variance_fields
}

"""aggregate avg on columns"""
type stages_view_avg_fields {
   event_id: Float
   stage_id: Float
}

"""
Boolean expression to filter rows from the table "stages_view". All fields are combined with a logical 'AND'.
"""
input stages_view_bool_exp {
  _and: [stages_view_bool_exp! ]
  _not: stages_view_bool_exp
  _or: [stages_view_bool_exp! ]
  event_id: Int_comparison_exp
  stage_id: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "stages_view"
"""
input stages_view_inc_input {
  event_id: Int
  stage_id: Int
}

"""
input type for inserting data into table "stages_view"
"""
input stages_view_insert_input {
  event_id: Int
  stage_id: Int
}

"""aggregate max on columns"""
type stages_view_max_fields {
   event_id: Int
   stage_id: Int
}

"""aggregate min on columns"""
type stages_view_min_fields {
   event_id: Int
   stage_id: Int
}

"""
response of any mutation on the table "stages_view"
"""
type stages_view_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [stages_view! ]! 
}

"""
input type for inserting object relation for remote table "stages_view"
"""
input stages_view_obj_rel_insert_input {
  data: stages_view_insert_input! 
}

"""Ordering options when selecting data from "stages_view"."""
input stages_view_order_by {
  event_id: order_by
  stage_id: order_by
}

"""
select columns of table "stages_view"
"""
enum stages_view_select_column {
  """column name"""
event_id
  """column name"""
stage_id
}

"""
input type for updating data in table "stages_view"
"""
input stages_view_set_input {
  event_id: Int
  stage_id: Int
}

"""aggregate stddev on columns"""
type stages_view_stddev_fields {
   event_id: Float
   stage_id: Float
}

"""aggregate stddev_pop on columns"""
type stages_view_stddev_pop_fields {
   event_id: Float
   stage_id: Float
}

"""aggregate stddev_samp on columns"""
type stages_view_stddev_samp_fields {
   event_id: Float
   stage_id: Float
}

"""
Streaming cursor of the table "stages_view"
"""
input stages_view_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: stages_view_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input stages_view_stream_cursor_value_input {
  event_id: Int
  stage_id: Int
}

"""aggregate sum on columns"""
type stages_view_sum_fields {
   event_id: Int
   stage_id: Int
}

input stages_view_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: stages_view_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: stages_view_set_input
  where: stages_view_bool_exp! 
}

"""aggregate var_pop on columns"""
type stages_view_var_pop_fields {
   event_id: Float
   stage_id: Float
}

"""aggregate var_samp on columns"""
type stages_view_var_samp_fields {
   event_id: Float
   stage_id: Float
}

"""aggregate variance on columns"""
type stages_view_variance_fields {
   event_id: Float
   stage_id: Float
}

"""
columns and relationships of "submission_acceptance_types"
"""
type submission_acceptance_types {
  """An object relationship"""
 event_acceptance_type: event_acceptance_types
   event_acceptance_type_id: Int
  """An object relationship"""
 submission: submissions! 
   submission_id: Int! 
   time_stamp: bigint! 
}

"""
aggregated selection of "submission_acceptance_types"
"""
type submission_acceptance_types_aggregate {
   aggregate: submission_acceptance_types_aggregate_fields
   nodes: [submission_acceptance_types! ]! 
}

"""
aggregate fields of "submission_acceptance_types"
"""
type submission_acceptance_types_aggregate_fields {
   avg: submission_acceptance_types_avg_fields
   count(columns: [submission_acceptance_types_select_column! ], distinct: Boolean): Int! 
   max: submission_acceptance_types_max_fields
   min: submission_acceptance_types_min_fields
   stddev: submission_acceptance_types_stddev_fields
   stddev_pop: submission_acceptance_types_stddev_pop_fields
   stddev_samp: submission_acceptance_types_stddev_samp_fields
   sum: submission_acceptance_types_sum_fields
   var_pop: submission_acceptance_types_var_pop_fields
   var_samp: submission_acceptance_types_var_samp_fields
   variance: submission_acceptance_types_variance_fields
}

"""aggregate avg on columns"""
type submission_acceptance_types_avg_fields {
   event_acceptance_type_id: Float
   submission_id: Float
   time_stamp: Float
}

"""
Boolean expression to filter rows from the table "submission_acceptance_types". All fields are combined with a logical 'AND'.
"""
input submission_acceptance_types_bool_exp {
  _and: [submission_acceptance_types_bool_exp! ]
  _not: submission_acceptance_types_bool_exp
  _or: [submission_acceptance_types_bool_exp! ]
  event_acceptance_type: event_acceptance_types_bool_exp
  event_acceptance_type_id: Int_comparison_exp
  submission: submissions_bool_exp
  submission_id: Int_comparison_exp
  time_stamp: bigint_comparison_exp
}

"""
input type for incrementing numeric columns in table "submission_acceptance_types"
"""
input submission_acceptance_types_inc_input {
  event_acceptance_type_id: Int
  submission_id: Int
  time_stamp: bigint
}

"""
input type for inserting data into table "submission_acceptance_types"
"""
input submission_acceptance_types_insert_input {
  event_acceptance_type: event_acceptance_types_obj_rel_insert_input
  event_acceptance_type_id: Int
  submission: submissions_obj_rel_insert_input
  submission_id: Int! 
  time_stamp: bigint! 
}

"""aggregate max on columns"""
type submission_acceptance_types_max_fields {
   event_acceptance_type_id: Int
   submission_id: Int
   time_stamp: bigint
}

"""aggregate min on columns"""
type submission_acceptance_types_min_fields {
   event_acceptance_type_id: Int
   submission_id: Int
   time_stamp: bigint
}

"""
response of any mutation on the table "submission_acceptance_types"
"""
type submission_acceptance_types_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [submission_acceptance_types! ]! 
}

"""
Ordering options when selecting data from "submission_acceptance_types".
"""
input submission_acceptance_types_order_by {
  event_acceptance_type: event_acceptance_types_order_by
  event_acceptance_type_id: order_by
  submission: submissions_order_by
  submission_id: order_by
  time_stamp: order_by
}

"""
select columns of table "submission_acceptance_types"
"""
enum submission_acceptance_types_select_column {
  """column name"""
event_acceptance_type_id
  """column name"""
submission_id
  """column name"""
time_stamp
}

"""
input type for updating data in table "submission_acceptance_types"
"""
input submission_acceptance_types_set_input {
  event_acceptance_type_id: Int
  submission_id: Int
  time_stamp: bigint
}

"""aggregate stddev on columns"""
type submission_acceptance_types_stddev_fields {
   event_acceptance_type_id: Float
   submission_id: Float
   time_stamp: Float
}

"""aggregate stddev_pop on columns"""
type submission_acceptance_types_stddev_pop_fields {
   event_acceptance_type_id: Float
   submission_id: Float
   time_stamp: Float
}

"""aggregate stddev_samp on columns"""
type submission_acceptance_types_stddev_samp_fields {
   event_acceptance_type_id: Float
   submission_id: Float
   time_stamp: Float
}

"""
Streaming cursor of the table "submission_acceptance_types"
"""
input submission_acceptance_types_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: submission_acceptance_types_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input submission_acceptance_types_stream_cursor_value_input {
  event_acceptance_type_id: Int
  submission_id: Int
  time_stamp: bigint
}

"""aggregate sum on columns"""
type submission_acceptance_types_sum_fields {
   event_acceptance_type_id: Int
   submission_id: Int
   time_stamp: bigint
}

input submission_acceptance_types_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: submission_acceptance_types_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: submission_acceptance_types_set_input
  where: submission_acceptance_types_bool_exp! 
}

"""aggregate var_pop on columns"""
type submission_acceptance_types_var_pop_fields {
   event_acceptance_type_id: Float
   submission_id: Float
   time_stamp: Float
}

"""aggregate var_samp on columns"""
type submission_acceptance_types_var_samp_fields {
   event_acceptance_type_id: Float
   submission_id: Float
   time_stamp: Float
}

"""aggregate variance on columns"""
type submission_acceptance_types_variance_fields {
   event_acceptance_type_id: Float
   submission_id: Float
   time_stamp: Float
}

"""
columns and relationships of "submission_categories"
"""
type submission_categories {
   category: String
   event_id: Int
  """An object relationship"""
 submission: submissions
   submission_id: Int
  """An object relationship"""
 submission_views: virtual_conference_submission_views
}

"""
aggregated selection of "submission_categories"
"""
type submission_categories_aggregate {
   aggregate: submission_categories_aggregate_fields
   nodes: [submission_categories! ]! 
}

input submission_categories_aggregate_bool_exp {
  count: submission_categories_aggregate_bool_exp_count
}

input submission_categories_aggregate_bool_exp_count {
  arguments: [submission_categories_select_column! ]
  distinct: Boolean
  filter: submission_categories_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "submission_categories"
"""
type submission_categories_aggregate_fields {
   avg: submission_categories_avg_fields
   count(columns: [submission_categories_select_column! ], distinct: Boolean): Int! 
   max: submission_categories_max_fields
   min: submission_categories_min_fields
   stddev: submission_categories_stddev_fields
   stddev_pop: submission_categories_stddev_pop_fields
   stddev_samp: submission_categories_stddev_samp_fields
   sum: submission_categories_sum_fields
   var_pop: submission_categories_var_pop_fields
   var_samp: submission_categories_var_samp_fields
   variance: submission_categories_variance_fields
}

"""
order by aggregate values of table "submission_categories"
"""
input submission_categories_aggregate_order_by {
  avg: submission_categories_avg_order_by
  count: order_by
  max: submission_categories_max_order_by
  min: submission_categories_min_order_by
  stddev: submission_categories_stddev_order_by
  stddev_pop: submission_categories_stddev_pop_order_by
  stddev_samp: submission_categories_stddev_samp_order_by
  sum: submission_categories_sum_order_by
  var_pop: submission_categories_var_pop_order_by
  var_samp: submission_categories_var_samp_order_by
  variance: submission_categories_variance_order_by
}

"""
input type for inserting array relation for remote table "submission_categories"
"""
input submission_categories_arr_rel_insert_input {
  data: [submission_categories_insert_input! ]! 
}

"""aggregate avg on columns"""
type submission_categories_avg_fields {
   event_id: Float
   submission_id: Float
}

"""
order by avg() on columns of table "submission_categories"
"""
input submission_categories_avg_order_by {
  event_id: order_by
  submission_id: order_by
}

"""
Boolean expression to filter rows from the table "submission_categories". All fields are combined with a logical 'AND'.
"""
input submission_categories_bool_exp {
  _and: [submission_categories_bool_exp! ]
  _not: submission_categories_bool_exp
  _or: [submission_categories_bool_exp! ]
  category: String_comparison_exp
  event_id: Int_comparison_exp
  submission: submissions_bool_exp
  submission_id: Int_comparison_exp
  submission_views: virtual_conference_submission_views_bool_exp
}

"""
input type for inserting data into table "submission_categories"
"""
input submission_categories_insert_input {
  category: String
  event_id: Int
  submission: submissions_obj_rel_insert_input
  submission_id: Int
  submission_views: virtual_conference_submission_views_obj_rel_insert_input
}

"""aggregate max on columns"""
type submission_categories_max_fields {
   category: String
   event_id: Int
   submission_id: Int
}

"""
order by max() on columns of table "submission_categories"
"""
input submission_categories_max_order_by {
  category: order_by
  event_id: order_by
  submission_id: order_by
}

"""aggregate min on columns"""
type submission_categories_min_fields {
   category: String
   event_id: Int
   submission_id: Int
}

"""
order by min() on columns of table "submission_categories"
"""
input submission_categories_min_order_by {
  category: order_by
  event_id: order_by
  submission_id: order_by
}

"""Ordering options when selecting data from "submission_categories"."""
input submission_categories_order_by {
  category: order_by
  event_id: order_by
  submission: submissions_order_by
  submission_id: order_by
  submission_views: virtual_conference_submission_views_order_by
}

"""
select columns of table "submission_categories"
"""
enum submission_categories_select_column {
  """column name"""
category
  """column name"""
event_id
  """column name"""
submission_id
}

"""aggregate stddev on columns"""
type submission_categories_stddev_fields {
   event_id: Float
   submission_id: Float
}

"""
order by stddev() on columns of table "submission_categories"
"""
input submission_categories_stddev_order_by {
  event_id: order_by
  submission_id: order_by
}

"""aggregate stddev_pop on columns"""
type submission_categories_stddev_pop_fields {
   event_id: Float
   submission_id: Float
}

"""
order by stddev_pop() on columns of table "submission_categories"
"""
input submission_categories_stddev_pop_order_by {
  event_id: order_by
  submission_id: order_by
}

"""aggregate stddev_samp on columns"""
type submission_categories_stddev_samp_fields {
   event_id: Float
   submission_id: Float
}

"""
order by stddev_samp() on columns of table "submission_categories"
"""
input submission_categories_stddev_samp_order_by {
  event_id: order_by
  submission_id: order_by
}

"""
Streaming cursor of the table "submission_categories"
"""
input submission_categories_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: submission_categories_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input submission_categories_stream_cursor_value_input {
  category: String
  event_id: Int
  submission_id: Int
}

"""aggregate sum on columns"""
type submission_categories_sum_fields {
   event_id: Int
   submission_id: Int
}

"""
order by sum() on columns of table "submission_categories"
"""
input submission_categories_sum_order_by {
  event_id: order_by
  submission_id: order_by
}

"""aggregate var_pop on columns"""
type submission_categories_var_pop_fields {
   event_id: Float
   submission_id: Float
}

"""
order by var_pop() on columns of table "submission_categories"
"""
input submission_categories_var_pop_order_by {
  event_id: order_by
  submission_id: order_by
}

"""aggregate var_samp on columns"""
type submission_categories_var_samp_fields {
   event_id: Float
   submission_id: Float
}

"""
order by var_samp() on columns of table "submission_categories"
"""
input submission_categories_var_samp_order_by {
  event_id: order_by
  submission_id: order_by
}

"""aggregate variance on columns"""
type submission_categories_variance_fields {
   event_id: Float
   submission_id: Float
}

"""
order by variance() on columns of table "submission_categories"
"""
input submission_categories_variance_order_by {
  event_id: order_by
  submission_id: order_by
}

"""
columns and relationships of "submission_decisions"
"""
type submission_decisions {
   event_id: Int
   submission_id: Int
   value: String
}

"""
aggregated selection of "submission_decisions"
"""
type submission_decisions_aggregate {
   aggregate: submission_decisions_aggregate_fields
   nodes: [submission_decisions! ]! 
}

"""
aggregate fields of "submission_decisions"
"""
type submission_decisions_aggregate_fields {
   avg: submission_decisions_avg_fields
   count(columns: [submission_decisions_select_column! ], distinct: Boolean): Int! 
   max: submission_decisions_max_fields
   min: submission_decisions_min_fields
   stddev: submission_decisions_stddev_fields
   stddev_pop: submission_decisions_stddev_pop_fields
   stddev_samp: submission_decisions_stddev_samp_fields
   sum: submission_decisions_sum_fields
   var_pop: submission_decisions_var_pop_fields
   var_samp: submission_decisions_var_samp_fields
   variance: submission_decisions_variance_fields
}

"""aggregate avg on columns"""
type submission_decisions_avg_fields {
   event_id: Float
   submission_id: Float
}

"""
Boolean expression to filter rows from the table "submission_decisions". All fields are combined with a logical 'AND'.
"""
input submission_decisions_bool_exp {
  _and: [submission_decisions_bool_exp! ]
  _not: submission_decisions_bool_exp
  _or: [submission_decisions_bool_exp! ]
  event_id: Int_comparison_exp
  submission_id: Int_comparison_exp
  value: String_comparison_exp
}

"""
input type for inserting data into table "submission_decisions"
"""
input submission_decisions_insert_input {
  event_id: Int
  submission_id: Int
  value: String
}

"""aggregate max on columns"""
type submission_decisions_max_fields {
   event_id: Int
   submission_id: Int
   value: String
}

"""aggregate min on columns"""
type submission_decisions_min_fields {
   event_id: Int
   submission_id: Int
   value: String
}

"""
input type for inserting object relation for remote table "submission_decisions"
"""
input submission_decisions_obj_rel_insert_input {
  data: submission_decisions_insert_input! 
}

"""Ordering options when selecting data from "submission_decisions"."""
input submission_decisions_order_by {
  event_id: order_by
  submission_id: order_by
  value: order_by
}

"""
select columns of table "submission_decisions"
"""
enum submission_decisions_select_column {
  """column name"""
event_id
  """column name"""
submission_id
  """column name"""
value
}

"""aggregate stddev on columns"""
type submission_decisions_stddev_fields {
   event_id: Float
   submission_id: Float
}

"""aggregate stddev_pop on columns"""
type submission_decisions_stddev_pop_fields {
   event_id: Float
   submission_id: Float
}

"""aggregate stddev_samp on columns"""
type submission_decisions_stddev_samp_fields {
   event_id: Float
   submission_id: Float
}

"""
Streaming cursor of the table "submission_decisions"
"""
input submission_decisions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: submission_decisions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input submission_decisions_stream_cursor_value_input {
  event_id: Int
  submission_id: Int
  value: String
}

"""aggregate sum on columns"""
type submission_decisions_sum_fields {
   event_id: Int
   submission_id: Int
}

"""aggregate var_pop on columns"""
type submission_decisions_var_pop_fields {
   event_id: Float
   submission_id: Float
}

"""aggregate var_samp on columns"""
type submission_decisions_var_samp_fields {
   event_id: Float
   submission_id: Float
}

"""aggregate variance on columns"""
type submission_decisions_variance_fields {
   event_id: Float
   submission_id: Float
}

"""
columns and relationships of "submission_ids_and_acceptance_types"
"""
type submission_ids_and_acceptance_types {
   event_acceptance_type_id: Int
   event_id: Int
   submission_id: Int
   value: String
}

"""
aggregated selection of "submission_ids_and_acceptance_types"
"""
type submission_ids_and_acceptance_types_aggregate {
   aggregate: submission_ids_and_acceptance_types_aggregate_fields
   nodes: [submission_ids_and_acceptance_types! ]! 
}

"""
aggregate fields of "submission_ids_and_acceptance_types"
"""
type submission_ids_and_acceptance_types_aggregate_fields {
   avg: submission_ids_and_acceptance_types_avg_fields
   count(columns: [submission_ids_and_acceptance_types_select_column! ], distinct: Boolean): Int! 
   max: submission_ids_and_acceptance_types_max_fields
   min: submission_ids_and_acceptance_types_min_fields
   stddev: submission_ids_and_acceptance_types_stddev_fields
   stddev_pop: submission_ids_and_acceptance_types_stddev_pop_fields
   stddev_samp: submission_ids_and_acceptance_types_stddev_samp_fields
   sum: submission_ids_and_acceptance_types_sum_fields
   var_pop: submission_ids_and_acceptance_types_var_pop_fields
   var_samp: submission_ids_and_acceptance_types_var_samp_fields
   variance: submission_ids_and_acceptance_types_variance_fields
}

"""aggregate avg on columns"""
type submission_ids_and_acceptance_types_avg_fields {
   event_acceptance_type_id: Float
   event_id: Float
   submission_id: Float
}

"""
Boolean expression to filter rows from the table "submission_ids_and_acceptance_types". All fields are combined with a logical 'AND'.
"""
input submission_ids_and_acceptance_types_bool_exp {
  _and: [submission_ids_and_acceptance_types_bool_exp! ]
  _not: submission_ids_and_acceptance_types_bool_exp
  _or: [submission_ids_and_acceptance_types_bool_exp! ]
  event_acceptance_type_id: Int_comparison_exp
  event_id: Int_comparison_exp
  submission_id: Int_comparison_exp
  value: String_comparison_exp
}

"""
input type for inserting data into table "submission_ids_and_acceptance_types"
"""
input submission_ids_and_acceptance_types_insert_input {
  event_acceptance_type_id: Int
  event_id: Int
  submission_id: Int
  value: String
}

"""aggregate max on columns"""
type submission_ids_and_acceptance_types_max_fields {
   event_acceptance_type_id: Int
   event_id: Int
   submission_id: Int
   value: String
}

"""aggregate min on columns"""
type submission_ids_and_acceptance_types_min_fields {
   event_acceptance_type_id: Int
   event_id: Int
   submission_id: Int
   value: String
}

"""
input type for inserting object relation for remote table "submission_ids_and_acceptance_types"
"""
input submission_ids_and_acceptance_types_obj_rel_insert_input {
  data: submission_ids_and_acceptance_types_insert_input! 
}

"""
Ordering options when selecting data from "submission_ids_and_acceptance_types".
"""
input submission_ids_and_acceptance_types_order_by {
  event_acceptance_type_id: order_by
  event_id: order_by
  submission_id: order_by
  value: order_by
}

"""
select columns of table "submission_ids_and_acceptance_types"
"""
enum submission_ids_and_acceptance_types_select_column {
  """column name"""
event_acceptance_type_id
  """column name"""
event_id
  """column name"""
submission_id
  """column name"""
value
}

"""aggregate stddev on columns"""
type submission_ids_and_acceptance_types_stddev_fields {
   event_acceptance_type_id: Float
   event_id: Float
   submission_id: Float
}

"""aggregate stddev_pop on columns"""
type submission_ids_and_acceptance_types_stddev_pop_fields {
   event_acceptance_type_id: Float
   event_id: Float
   submission_id: Float
}

"""aggregate stddev_samp on columns"""
type submission_ids_and_acceptance_types_stddev_samp_fields {
   event_acceptance_type_id: Float
   event_id: Float
   submission_id: Float
}

"""
Streaming cursor of the table "submission_ids_and_acceptance_types"
"""
input submission_ids_and_acceptance_types_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: submission_ids_and_acceptance_types_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input submission_ids_and_acceptance_types_stream_cursor_value_input {
  event_acceptance_type_id: Int
  event_id: Int
  submission_id: Int
  value: String
}

"""aggregate sum on columns"""
type submission_ids_and_acceptance_types_sum_fields {
   event_acceptance_type_id: Int
   event_id: Int
   submission_id: Int
}

"""aggregate var_pop on columns"""
type submission_ids_and_acceptance_types_var_pop_fields {
   event_acceptance_type_id: Float
   event_id: Float
   submission_id: Float
}

"""aggregate var_samp on columns"""
type submission_ids_and_acceptance_types_var_samp_fields {
   event_acceptance_type_id: Float
   event_id: Float
   submission_id: Float
}

"""aggregate variance on columns"""
type submission_ids_and_acceptance_types_variance_fields {
   event_acceptance_type_id: Float
   event_id: Float
   submission_id: Float
}

"""Keeps track of any admin changes to submission ownership"""
type submission_owner_log {
   changed_by: Int
  """An array relationship"""
 changed_by_user("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): [users! ]! 
  """An aggregate relationship"""
 changed_by_user_aggregate("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): users_aggregate! 
   created_at: timestamptz! 
   event_id: Int! 
  """An array relationship"""
 from_user("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): [users! ]! 
  """An aggregate relationship"""
 from_user_aggregate("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): users_aggregate! 
   from_user_id: Int
   id: uuid! 
  """An object relationship"""
 submission: submissions
   submission_id: Int! 
  """An array relationship"""
 to_user("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): [users! ]! 
  """An aggregate relationship"""
 to_user_aggregate("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): users_aggregate! 
   to_user_id: Int! 
}

"""
aggregated selection of "submission_owner_log"
"""
type submission_owner_log_aggregate {
   aggregate: submission_owner_log_aggregate_fields
   nodes: [submission_owner_log! ]! 
}

"""
aggregate fields of "submission_owner_log"
"""
type submission_owner_log_aggregate_fields {
   avg: submission_owner_log_avg_fields
   count(columns: [submission_owner_log_select_column! ], distinct: Boolean): Int! 
   max: submission_owner_log_max_fields
   min: submission_owner_log_min_fields
   stddev: submission_owner_log_stddev_fields
   stddev_pop: submission_owner_log_stddev_pop_fields
   stddev_samp: submission_owner_log_stddev_samp_fields
   sum: submission_owner_log_sum_fields
   var_pop: submission_owner_log_var_pop_fields
   var_samp: submission_owner_log_var_samp_fields
   variance: submission_owner_log_variance_fields
}

"""aggregate avg on columns"""
type submission_owner_log_avg_fields {
   changed_by: Float
   event_id: Float
   from_user_id: Float
   submission_id: Float
   to_user_id: Float
}

"""
Boolean expression to filter rows from the table "submission_owner_log". All fields are combined with a logical 'AND'.
"""
input submission_owner_log_bool_exp {
  _and: [submission_owner_log_bool_exp! ]
  _not: submission_owner_log_bool_exp
  _or: [submission_owner_log_bool_exp! ]
  changed_by: Int_comparison_exp
  changed_by_user: users_bool_exp
  changed_by_user_aggregate: users_aggregate_bool_exp
  created_at: timestamptz_comparison_exp
  event_id: Int_comparison_exp
  from_user: users_bool_exp
  from_user_aggregate: users_aggregate_bool_exp
  from_user_id: Int_comparison_exp
  id: uuid_comparison_exp
  submission: submissions_bool_exp
  submission_id: Int_comparison_exp
  to_user: users_bool_exp
  to_user_aggregate: users_aggregate_bool_exp
  to_user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "submission_owner_log"
"""
enum submission_owner_log_constraint {
  """
  unique or primary key constraint on columns "id"
  """
submission_owner_log_pkey
}

"""
input type for incrementing numeric columns in table "submission_owner_log"
"""
input submission_owner_log_inc_input {
  changed_by: Int
  event_id: Int
  from_user_id: Int
  submission_id: Int
  to_user_id: Int
}

"""
input type for inserting data into table "submission_owner_log"
"""
input submission_owner_log_insert_input {
  changed_by: Int
  changed_by_user: users_arr_rel_insert_input
  created_at: timestamptz! 
  event_id: Int! 
  from_user: users_arr_rel_insert_input
  from_user_id: Int
  id: uuid! 
  submission: submissions_obj_rel_insert_input
  submission_id: Int! 
  to_user: users_arr_rel_insert_input
  to_user_id: Int! 
}

"""aggregate max on columns"""
type submission_owner_log_max_fields {
   changed_by: Int
   created_at: timestamptz
   event_id: Int
   from_user_id: Int
   id: uuid
   submission_id: Int
   to_user_id: Int
}

"""aggregate min on columns"""
type submission_owner_log_min_fields {
   changed_by: Int
   created_at: timestamptz
   event_id: Int
   from_user_id: Int
   id: uuid
   submission_id: Int
   to_user_id: Int
}

"""
response of any mutation on the table "submission_owner_log"
"""
type submission_owner_log_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [submission_owner_log! ]! 
}

"""
on_conflict condition type for table "submission_owner_log"
"""
input submission_owner_log_on_conflict {
  constraint: submission_owner_log_constraint! 
  update_columns: [submission_owner_log_update_column! ]! 
  where: submission_owner_log_bool_exp
}

"""Ordering options when selecting data from "submission_owner_log"."""
input submission_owner_log_order_by {
  changed_by: order_by
  changed_by_user_aggregate: users_aggregate_order_by
  created_at: order_by
  event_id: order_by
  from_user_aggregate: users_aggregate_order_by
  from_user_id: order_by
  id: order_by
  submission: submissions_order_by
  submission_id: order_by
  to_user_aggregate: users_aggregate_order_by
  to_user_id: order_by
}

"""primary key columns input for table: submission_owner_log"""
input submission_owner_log_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "submission_owner_log"
"""
enum submission_owner_log_select_column {
  """column name"""
changed_by
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
from_user_id
  """column name"""
id
  """column name"""
submission_id
  """column name"""
to_user_id
}

"""
input type for updating data in table "submission_owner_log"
"""
input submission_owner_log_set_input {
  changed_by: Int
  created_at: timestamptz
  event_id: Int
  from_user_id: Int
  id: uuid
  submission_id: Int
  to_user_id: Int
}

"""aggregate stddev on columns"""
type submission_owner_log_stddev_fields {
   changed_by: Float
   event_id: Float
   from_user_id: Float
   submission_id: Float
   to_user_id: Float
}

"""aggregate stddev_pop on columns"""
type submission_owner_log_stddev_pop_fields {
   changed_by: Float
   event_id: Float
   from_user_id: Float
   submission_id: Float
   to_user_id: Float
}

"""aggregate stddev_samp on columns"""
type submission_owner_log_stddev_samp_fields {
   changed_by: Float
   event_id: Float
   from_user_id: Float
   submission_id: Float
   to_user_id: Float
}

"""
Streaming cursor of the table "submission_owner_log"
"""
input submission_owner_log_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: submission_owner_log_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input submission_owner_log_stream_cursor_value_input {
  changed_by: Int
  created_at: timestamptz
  event_id: Int
  from_user_id: Int
  id: uuid
  submission_id: Int
  to_user_id: Int
}

"""aggregate sum on columns"""
type submission_owner_log_sum_fields {
   changed_by: Int
   event_id: Int
   from_user_id: Int
   submission_id: Int
   to_user_id: Int
}

"""
update columns of table "submission_owner_log"
"""
enum submission_owner_log_update_column {
  """column name"""
changed_by
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
from_user_id
  """column name"""
id
  """column name"""
submission_id
  """column name"""
to_user_id
}

input submission_owner_log_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: submission_owner_log_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: submission_owner_log_set_input
  where: submission_owner_log_bool_exp! 
}

"""aggregate var_pop on columns"""
type submission_owner_log_var_pop_fields {
   changed_by: Float
   event_id: Float
   from_user_id: Float
   submission_id: Float
   to_user_id: Float
}

"""aggregate var_samp on columns"""
type submission_owner_log_var_samp_fields {
   changed_by: Float
   event_id: Float
   from_user_id: Float
   submission_id: Float
   to_user_id: Float
}

"""aggregate variance on columns"""
type submission_owner_log_variance_fields {
   changed_by: Float
   event_id: Float
   from_user_id: Float
   submission_id: Float
   to_user_id: Float
}

"""
columns and relationships of "submission_updates"
"""
type submission_updates {
   event_id: Int
   submission_id: Int
   update_type: String
   updated: timestamptz
}

"""
aggregated selection of "submission_updates"
"""
type submission_updates_aggregate {
   aggregate: submission_updates_aggregate_fields
   nodes: [submission_updates! ]! 
}

"""
aggregate fields of "submission_updates"
"""
type submission_updates_aggregate_fields {
   avg: submission_updates_avg_fields
   count(columns: [submission_updates_select_column! ], distinct: Boolean): Int! 
   max: submission_updates_max_fields
   min: submission_updates_min_fields
   stddev: submission_updates_stddev_fields
   stddev_pop: submission_updates_stddev_pop_fields
   stddev_samp: submission_updates_stddev_samp_fields
   sum: submission_updates_sum_fields
   var_pop: submission_updates_var_pop_fields
   var_samp: submission_updates_var_samp_fields
   variance: submission_updates_variance_fields
}

"""aggregate avg on columns"""
type submission_updates_avg_fields {
   event_id: Float
   submission_id: Float
}

"""
Boolean expression to filter rows from the table "submission_updates". All fields are combined with a logical 'AND'.
"""
input submission_updates_bool_exp {
  _and: [submission_updates_bool_exp! ]
  _not: submission_updates_bool_exp
  _or: [submission_updates_bool_exp! ]
  event_id: Int_comparison_exp
  submission_id: Int_comparison_exp
  update_type: String_comparison_exp
  updated: timestamptz_comparison_exp
}

"""aggregate max on columns"""
type submission_updates_max_fields {
   event_id: Int
   submission_id: Int
   update_type: String
   updated: timestamptz
}

"""aggregate min on columns"""
type submission_updates_min_fields {
   event_id: Int
   submission_id: Int
   update_type: String
   updated: timestamptz
}

"""Ordering options when selecting data from "submission_updates"."""
input submission_updates_order_by {
  event_id: order_by
  submission_id: order_by
  update_type: order_by
  updated: order_by
}

"""
select columns of table "submission_updates"
"""
enum submission_updates_select_column {
  """column name"""
event_id
  """column name"""
submission_id
  """column name"""
update_type
  """column name"""
updated
}

"""aggregate stddev on columns"""
type submission_updates_stddev_fields {
   event_id: Float
   submission_id: Float
}

"""aggregate stddev_pop on columns"""
type submission_updates_stddev_pop_fields {
   event_id: Float
   submission_id: Float
}

"""aggregate stddev_samp on columns"""
type submission_updates_stddev_samp_fields {
   event_id: Float
   submission_id: Float
}

"""
Streaming cursor of the table "submission_updates"
"""
input submission_updates_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: submission_updates_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input submission_updates_stream_cursor_value_input {
  event_id: Int
  submission_id: Int
  update_type: String
  updated: timestamptz
}

"""aggregate sum on columns"""
type submission_updates_sum_fields {
   event_id: Int
   submission_id: Int
}

"""aggregate var_pop on columns"""
type submission_updates_var_pop_fields {
   event_id: Float
   submission_id: Float
}

"""aggregate var_samp on columns"""
type submission_updates_var_samp_fields {
   event_id: Float
   submission_id: Float
}

"""aggregate variance on columns"""
type submission_updates_variance_fields {
   event_id: Float
   submission_id: Float
}

"""Submissions/Abstracts made to an event"""
type submissions {
  """An array relationship"""
 accepted("""distinct select on columns"""
distinct_on: [accepted_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [accepted_submissions_order_by! ], """filter the rows returned"""
where: accepted_submissions_bool_exp): [accepted_submissions! ]! 
  """An aggregate relationship"""
 accepted_aggregate("""distinct select on columns"""
distinct_on: [accepted_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [accepted_submissions_order_by! ], """filter the rows returned"""
where: accepted_submissions_bool_exp): accepted_submissions_aggregate! 
  """An object relationship"""
 accepted_for: submission_ids_and_acceptance_types
   admin_notes: String
   archived: Boolean! 
  """An array relationship"""
 author_fields("""distinct select on columns"""
distinct_on: [author_fields_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_fields_order_by! ], """filter the rows returned"""
where: author_fields_bool_exp): [author_fields! ]! 
  """An aggregate relationship"""
 author_fields_aggregate("""distinct select on columns"""
distinct_on: [author_fields_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_fields_order_by! ], """filter the rows returned"""
where: author_fields_bool_exp): author_fields_aggregate! 
  """An array relationship"""
 author_versions("""distinct select on columns"""
distinct_on: [author_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_versions_order_by! ], """filter the rows returned"""
where: author_versions_bool_exp): [author_versions! ]! 
  """An aggregate relationship"""
 author_versions_aggregate("""distinct select on columns"""
distinct_on: [author_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_versions_order_by! ], """filter the rows returned"""
where: author_versions_bool_exp): author_versions_aggregate! 
  """An array relationship"""
 authors("""distinct select on columns"""
distinct_on: [authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [authors_order_by! ], """filter the rows returned"""
where: authors_bool_exp): [authors! ]! 
  """An aggregate relationship"""
 authors_aggregate("""distinct select on columns"""
distinct_on: [authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [authors_order_by! ], """filter the rows returned"""
where: authors_bool_exp): authors_aggregate! 
  """An array relationship"""
 authors_last_updated("""distinct select on columns"""
distinct_on: [authors_last_updated_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [authors_last_updated_order_by! ], """filter the rows returned"""
where: authors_last_updated_bool_exp): [authors_last_updated! ]! 
  """An aggregate relationship"""
 authors_last_updated_aggregate("""distinct select on columns"""
distinct_on: [authors_last_updated_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [authors_last_updated_order_by! ], """filter the rows returned"""
where: authors_last_updated_bool_exp): authors_last_updated_aggregate! 
  """An array relationship"""
 bookmarks("""distinct select on columns"""
distinct_on: [virtual_conference_submission_bookmarks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_submission_bookmarks_order_by! ], """filter the rows returned"""
where: virtual_conference_submission_bookmarks_bool_exp): [virtual_conference_submission_bookmarks! ]! 
  """An aggregate relationship"""
 bookmarks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_submission_bookmarks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_submission_bookmarks_order_by! ], """filter the rows returned"""
where: virtual_conference_submission_bookmarks_bool_exp): virtual_conference_submission_bookmarks_aggregate! 
  """An array relationship"""
 category("""distinct select on columns"""
distinct_on: [submission_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_categories_order_by! ], """filter the rows returned"""
where: submission_categories_bool_exp): [submission_categories! ]! 
  """An aggregate relationship"""
 category_aggregate("""distinct select on columns"""
distinct_on: [submission_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_categories_order_by! ], """filter the rows returned"""
where: submission_categories_bool_exp): submission_categories_aggregate! 
   complete: Boolean! 
   created_at: timestamptz! 
  """The user id of the user that created the submission"""
 created_by: Int! 
   created_email_sent: Boolean! 
  """An object relationship"""
 creator: users
  """An object relationship"""
 decision: submission_decisions
   decision_status: decision
  """An array relationship"""
 decisions("""distinct select on columns"""
distinct_on: [decisions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [decisions_order_by! ], """filter the rows returned"""
where: decisions_bool_exp): [decisions! ]! 
  """An aggregate relationship"""
 decisions_aggregate("""distinct select on columns"""
distinct_on: [decisions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [decisions_order_by! ], """filter the rows returned"""
where: decisions_bool_exp): decisions_aggregate! 
   et_al: Boolean! 
  """An object relationship"""
 event: events! 
  """The event id of the event the submission is in"""
 event_id: Int! 
   fe_epoch: bigint
  """A globally unique identifier for each submission"""
 id: Int! 
   in_poster_gallery: Boolean! 
   in_titles_listing: Boolean! 
   last_updated: bigint! 
  """The user id of the user who last edited the submission"""
 last_updated_by: Int! 
  """An array relationship"""
 presenter_emails("""distinct select on columns"""
distinct_on: [presenter_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [presenter_emails_order_by! ], """filter the rows returned"""
where: presenter_emails_bool_exp): [presenter_emails! ]! 
  """An aggregate relationship"""
 presenter_emails_aggregate("""distinct select on columns"""
distinct_on: [presenter_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [presenter_emails_order_by! ], """filter the rows returned"""
where: presenter_emails_bool_exp): presenter_emails_aggregate! 
   previous_stages("""JSON select path"""
path: String): json
  """The program code specified by the event admin"""
 program_code: String
  """An array relationship"""
 program_sessions_submissions("""distinct select on columns"""
distinct_on: [program_sessions_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_submissions_order_by! ], """filter the rows returned"""
where: program_sessions_submissions_bool_exp): [program_sessions_submissions! ]! 
  """An aggregate relationship"""
 program_sessions_submissions_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_submissions_order_by! ], """filter the rows returned"""
where: program_sessions_submissions_bool_exp): program_sessions_submissions_aggregate! 
  """An array relationship"""
 program_sessions_symposia("""distinct select on columns"""
distinct_on: [program_sessions_symposia_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_symposia_order_by! ], """filter the rows returned"""
where: program_sessions_symposia_bool_exp): [program_sessions_symposia! ]! 
  """An aggregate relationship"""
 program_sessions_symposia_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_symposia_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_symposia_order_by! ], """filter the rows returned"""
where: program_sessions_symposia_bool_exp): program_sessions_symposia_aggregate! 
  """An array relationship"""
 response_versions("""distinct select on columns"""
distinct_on: [question_response_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [question_response_versions_order_by! ], """filter the rows returned"""
where: question_response_versions_bool_exp): [question_response_versions! ]! 
  """An aggregate relationship"""
 response_versions_aggregate("""distinct select on columns"""
distinct_on: [question_response_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [question_response_versions_order_by! ], """filter the rows returned"""
where: question_response_versions_bool_exp): question_response_versions_aggregate! 
  """An array relationship"""
 responses("""distinct select on columns"""
distinct_on: [question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [question_responses_order_by! ], """filter the rows returned"""
where: question_responses_bool_exp): [question_responses! ]! 
  """An aggregate relationship"""
 responses_aggregate("""distinct select on columns"""
distinct_on: [question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [question_responses_order_by! ], """filter the rows returned"""
where: question_responses_bool_exp): question_responses_aggregate! 
  """An array relationship"""
 responses_view("""distinct select on columns"""
distinct_on: [question_responses_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [question_responses_view_order_by! ], """filter the rows returned"""
where: question_responses_view_bool_exp): [question_responses_view! ]! 
  """An aggregate relationship"""
 responses_view_aggregate("""distinct select on columns"""
distinct_on: [question_responses_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [question_responses_view_order_by! ], """filter the rows returned"""
where: question_responses_view_bool_exp): question_responses_view_aggregate! 
  """An array relationship"""
 reviews("""distinct select on columns"""
distinct_on: [reviews_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviews_order_by! ], """filter the rows returned"""
where: reviews_bool_exp): [reviews! ]! 
  """An aggregate relationship"""
 reviews_aggregate("""distinct select on columns"""
distinct_on: [reviews_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviews_order_by! ], """filter the rows returned"""
where: reviews_bool_exp): reviews_aggregate! 
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
 serial_number: Int! 
  """An object relationship"""
 stage: stages! 
  """The id of the stage the submission is in"""
 stage_id: Int! 
  """An object relationship"""
 symposium: symposia
  """The id of the symposium the submission is in"""
 symposium_id: Int
   symposium_order: Int
  """An array relationship"""
 symposium_submission_session_times("""distinct select on columns"""
distinct_on: [symposium_submission_session_times_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_submission_session_times_order_by! ], """filter the rows returned"""
where: symposium_submission_session_times_bool_exp): [symposium_submission_session_times! ]! 
  """An aggregate relationship"""
 symposium_submission_session_times_aggregate("""distinct select on columns"""
distinct_on: [symposium_submission_session_times_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_submission_session_times_order_by! ], """filter the rows returned"""
where: symposium_submission_session_times_bool_exp): symposium_submission_session_times_aggregate! 
   time_stamp: bigint! 
  """An array relationship"""
 title("""distinct select on columns"""
distinct_on: [title_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [title_responses_order_by! ], """filter the rows returned"""
where: title_responses_bool_exp): [title_responses! ]! 
  """An aggregate relationship"""
 title_aggregate("""distinct select on columns"""
distinct_on: [title_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [title_responses_order_by! ], """filter the rows returned"""
where: title_responses_bool_exp): title_responses_aggregate! 
  """An object relationship"""
 user: users
  """The user id of the user who owns the submission"""
 user_id: Int! 
  """An array relationship"""
 user_nullable("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): [users! ]! 
  """An aggregate relationship"""
 user_nullable_aggregate("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): users_aggregate! 
  """An array relationship"""
 virtual_conference_views("""distinct select on columns"""
distinct_on: [virtual_conference_submission_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_submission_views_order_by! ], """filter the rows returned"""
where: virtual_conference_submission_views_bool_exp): [virtual_conference_submission_views! ]! 
  """An aggregate relationship"""
 virtual_conference_views_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_submission_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_submission_views_order_by! ], """filter the rows returned"""
where: virtual_conference_submission_views_bool_exp): virtual_conference_submission_views_aggregate! 
}

"""
aggregated selection of "submissions_with_archived"
"""
type submissions_aggregate {
   aggregate: submissions_aggregate_fields
   nodes: [submissions! ]! 
}

input submissions_aggregate_bool_exp {
  bool_and: submissions_aggregate_bool_exp_bool_and
  bool_or: submissions_aggregate_bool_exp_bool_or
  count: submissions_aggregate_bool_exp_count
}

input submissions_aggregate_bool_exp_bool_and {
  arguments: submissions_select_column_submissions_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: submissions_bool_exp
  predicate: Boolean_comparison_exp! 
}

input submissions_aggregate_bool_exp_bool_or {
  arguments: submissions_select_column_submissions_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: submissions_bool_exp
  predicate: Boolean_comparison_exp! 
}

input submissions_aggregate_bool_exp_count {
  arguments: [submissions_select_column! ]
  distinct: Boolean
  filter: submissions_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "submissions_with_archived"
"""
type submissions_aggregate_fields {
   avg: submissions_avg_fields
   count(columns: [submissions_select_column! ], distinct: Boolean): Int! 
   max: submissions_max_fields
   min: submissions_min_fields
   stddev: submissions_stddev_fields
   stddev_pop: submissions_stddev_pop_fields
   stddev_samp: submissions_stddev_samp_fields
   sum: submissions_sum_fields
   var_pop: submissions_var_pop_fields
   var_samp: submissions_var_samp_fields
   variance: submissions_variance_fields
}

"""
order by aggregate values of table "submissions_with_archived"
"""
input submissions_aggregate_order_by {
  avg: submissions_avg_order_by
  count: order_by
  max: submissions_max_order_by
  min: submissions_min_order_by
  stddev: submissions_stddev_order_by
  stddev_pop: submissions_stddev_pop_order_by
  stddev_samp: submissions_stddev_samp_order_by
  sum: submissions_sum_order_by
  var_pop: submissions_var_pop_order_by
  var_samp: submissions_var_samp_order_by
  variance: submissions_variance_order_by
}

"""
input type for inserting array relation for remote table "submissions_with_archived"
"""
input submissions_arr_rel_insert_input {
  data: [submissions_insert_input! ]! 
  """upsert condition"""
on_conflict: submissions_on_conflict
}

"""aggregate avg on columns"""
type submissions_avg_fields {
  """The user id of the user that created the submission"""
 created_by: Float
  """The event id of the event the submission is in"""
 event_id: Float
   fe_epoch: Float
  """A globally unique identifier for each submission"""
 id: Float
   last_updated: Float
  """The user id of the user who last edited the submission"""
 last_updated_by: Float
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
 serial_number: Float
  """The id of the stage the submission is in"""
 stage_id: Float
  """The id of the symposium the submission is in"""
 symposium_id: Float
   symposium_order: Float
   time_stamp: Float
  """The user id of the user who owns the submission"""
 user_id: Float
}

"""
order by avg() on columns of table "submissions_with_archived"
"""
input submissions_avg_order_by {
  """The user id of the user that created the submission"""
created_by: order_by
  """The event id of the event the submission is in"""
event_id: order_by
  fe_epoch: order_by
  """A globally unique identifier for each submission"""
id: order_by
  last_updated: order_by
  """The user id of the user who last edited the submission"""
last_updated_by: order_by
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
serial_number: order_by
  """The id of the stage the submission is in"""
stage_id: order_by
  """The id of the symposium the submission is in"""
symposium_id: order_by
  symposium_order: order_by
  time_stamp: order_by
  """The user id of the user who owns the submission"""
user_id: order_by
}

"""
Boolean expression to filter rows from the table "submissions_with_archived". All fields are combined with a logical 'AND'.
"""
input submissions_bool_exp {
  _and: [submissions_bool_exp! ]
  _not: submissions_bool_exp
  _or: [submissions_bool_exp! ]
  accepted: accepted_submissions_bool_exp
  accepted_aggregate: accepted_submissions_aggregate_bool_exp
  accepted_for: submission_ids_and_acceptance_types_bool_exp
  admin_notes: String_comparison_exp
  archived: Boolean_comparison_exp
  author_fields: author_fields_bool_exp
  author_fields_aggregate: author_fields_aggregate_bool_exp
  author_versions: author_versions_bool_exp
  author_versions_aggregate: author_versions_aggregate_bool_exp
  authors: authors_bool_exp
  authors_aggregate: authors_aggregate_bool_exp
  authors_last_updated: authors_last_updated_bool_exp
  authors_last_updated_aggregate: authors_last_updated_aggregate_bool_exp
  bookmarks: virtual_conference_submission_bookmarks_bool_exp
  bookmarks_aggregate: virtual_conference_submission_bookmarks_aggregate_bool_exp
  category: submission_categories_bool_exp
  category_aggregate: submission_categories_aggregate_bool_exp
  complete: Boolean_comparison_exp
  created_at: timestamptz_comparison_exp
  created_by: Int_comparison_exp
  created_email_sent: Boolean_comparison_exp
  creator: users_bool_exp
  decision: submission_decisions_bool_exp
  decision_status: decision_comparison_exp
  decisions: decisions_bool_exp
  decisions_aggregate: decisions_aggregate_bool_exp
  et_al: Boolean_comparison_exp
  event: events_bool_exp
  event_id: Int_comparison_exp
  fe_epoch: bigint_comparison_exp
  id: Int_comparison_exp
  in_poster_gallery: Boolean_comparison_exp
  in_titles_listing: Boolean_comparison_exp
  last_updated: bigint_comparison_exp
  last_updated_by: Int_comparison_exp
  presenter_emails: presenter_emails_bool_exp
  presenter_emails_aggregate: presenter_emails_aggregate_bool_exp
  previous_stages: json_comparison_exp
  program_code: String_comparison_exp
  program_sessions_submissions: program_sessions_submissions_bool_exp
  program_sessions_submissions_aggregate: program_sessions_submissions_aggregate_bool_exp
  program_sessions_symposia: program_sessions_symposia_bool_exp
  program_sessions_symposia_aggregate: program_sessions_symposia_aggregate_bool_exp
  response_versions: question_response_versions_bool_exp
  response_versions_aggregate: question_response_versions_aggregate_bool_exp
  responses: question_responses_bool_exp
  responses_aggregate: question_responses_aggregate_bool_exp
  responses_view: question_responses_view_bool_exp
  responses_view_aggregate: question_responses_view_aggregate_bool_exp
  reviews: reviews_bool_exp
  reviews_aggregate: reviews_aggregate_bool_exp
  serial_number: Int_comparison_exp
  stage: stages_bool_exp
  stage_id: Int_comparison_exp
  symposium: symposia_bool_exp
  symposium_id: Int_comparison_exp
  symposium_order: Int_comparison_exp
  symposium_submission_session_times: symposium_submission_session_times_bool_exp
  symposium_submission_session_times_aggregate: symposium_submission_session_times_aggregate_bool_exp
  time_stamp: bigint_comparison_exp
  title: title_responses_bool_exp
  title_aggregate: title_responses_aggregate_bool_exp
  user: users_bool_exp
  user_id: Int_comparison_exp
  user_nullable: users_bool_exp
  user_nullable_aggregate: users_aggregate_bool_exp
  virtual_conference_views: virtual_conference_submission_views_bool_exp
  virtual_conference_views_aggregate: virtual_conference_submission_views_aggregate_bool_exp
}

"""
unique or primary key constraints on table "submissions_with_archived"
"""
enum submissions_constraint {
  """
  unique or primary key constraint on columns "submission_id"
  """
submissions_pkey
}

"""
input type for incrementing numeric columns in table "submissions_with_archived"
"""
input submissions_inc_input {
  """The user id of the user that created the submission"""
created_by: Int
  """The event id of the event the submission is in"""
event_id: Int
  fe_epoch: bigint
  """A globally unique identifier for each submission"""
id: Int
  last_updated: bigint
  """The user id of the user who last edited the submission"""
last_updated_by: Int
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
serial_number: Int
  """The id of the stage the submission is in"""
stage_id: Int
  """The id of the symposium the submission is in"""
symposium_id: Int
  symposium_order: Int
  time_stamp: bigint
  """The user id of the user who owns the submission"""
user_id: Int
}

"""
input type for inserting data into table "submissions_with_archived"
"""
input submissions_insert_input {
  accepted: accepted_submissions_arr_rel_insert_input
  accepted_for: submission_ids_and_acceptance_types_obj_rel_insert_input
  admin_notes: String! 
  archived: Boolean! 
  author_fields: author_fields_arr_rel_insert_input
  author_versions: author_versions_arr_rel_insert_input
  authors: authors_arr_rel_insert_input
  authors_last_updated: authors_last_updated_arr_rel_insert_input
  bookmarks: virtual_conference_submission_bookmarks_arr_rel_insert_input
  category: submission_categories_arr_rel_insert_input
  complete: Boolean! 
  created_at: timestamptz! 
  """The user id of the user that created the submission"""
created_by: Int! 
  created_email_sent: Boolean! 
  creator: users_obj_rel_insert_input
  decision: submission_decisions_obj_rel_insert_input
  decision_status: decision! 
  decisions: decisions_arr_rel_insert_input
  et_al: Boolean! 
  event: events_obj_rel_insert_input
  """The event id of the event the submission is in"""
event_id: Int! 
  fe_epoch: bigint
  """A globally unique identifier for each submission"""
id: Int
  in_poster_gallery: Boolean! 
  in_titles_listing: Boolean! 
  last_updated: bigint! 
  """The user id of the user who last edited the submission"""
last_updated_by: Int! 
  presenter_emails: presenter_emails_arr_rel_insert_input
  previous_stages: json! 
  """The program code specified by the event admin"""
program_code: String! 
  program_sessions_submissions: program_sessions_submissions_arr_rel_insert_input
  program_sessions_symposia: program_sessions_symposia_arr_rel_insert_input
  response_versions: question_response_versions_arr_rel_insert_input
  responses: question_responses_arr_rel_insert_input
  responses_view: question_responses_view_arr_rel_insert_input
  reviews: reviews_arr_rel_insert_input
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
serial_number: Int! 
  stage: stages_obj_rel_insert_input
  """The id of the stage the submission is in"""
stage_id: Int! 
  symposium: symposia_obj_rel_insert_input
  """The id of the symposium the submission is in"""
symposium_id: Int
  symposium_order: Int! 
  symposium_submission_session_times: symposium_submission_session_times_arr_rel_insert_input
  time_stamp: bigint! 
  title: title_responses_arr_rel_insert_input
  user: users_obj_rel_insert_input
  """The user id of the user who owns the submission"""
user_id: Int! 
  user_nullable: users_arr_rel_insert_input
  virtual_conference_views: virtual_conference_submission_views_arr_rel_insert_input
}

"""aggregate max on columns"""
type submissions_max_fields {
   admin_notes: String
   created_at: timestamptz
  """The user id of the user that created the submission"""
 created_by: Int
   decision_status: decision
  """The event id of the event the submission is in"""
 event_id: Int
   fe_epoch: bigint
  """A globally unique identifier for each submission"""
 id: Int
   last_updated: bigint
  """The user id of the user who last edited the submission"""
 last_updated_by: Int
  """The program code specified by the event admin"""
 program_code: String
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
 serial_number: Int
  """The id of the stage the submission is in"""
 stage_id: Int
  """The id of the symposium the submission is in"""
 symposium_id: Int
   symposium_order: Int
   time_stamp: bigint
  """The user id of the user who owns the submission"""
 user_id: Int
}

"""
order by max() on columns of table "submissions_with_archived"
"""
input submissions_max_order_by {
  admin_notes: order_by
  created_at: order_by
  """The user id of the user that created the submission"""
created_by: order_by
  decision_status: order_by
  """The event id of the event the submission is in"""
event_id: order_by
  fe_epoch: order_by
  """A globally unique identifier for each submission"""
id: order_by
  last_updated: order_by
  """The user id of the user who last edited the submission"""
last_updated_by: order_by
  """The program code specified by the event admin"""
program_code: order_by
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
serial_number: order_by
  """The id of the stage the submission is in"""
stage_id: order_by
  """The id of the symposium the submission is in"""
symposium_id: order_by
  symposium_order: order_by
  time_stamp: order_by
  """The user id of the user who owns the submission"""
user_id: order_by
}

"""aggregate min on columns"""
type submissions_min_fields {
   admin_notes: String
   created_at: timestamptz
  """The user id of the user that created the submission"""
 created_by: Int
   decision_status: decision
  """The event id of the event the submission is in"""
 event_id: Int
   fe_epoch: bigint
  """A globally unique identifier for each submission"""
 id: Int
   last_updated: bigint
  """The user id of the user who last edited the submission"""
 last_updated_by: Int
  """The program code specified by the event admin"""
 program_code: String
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
 serial_number: Int
  """The id of the stage the submission is in"""
 stage_id: Int
  """The id of the symposium the submission is in"""
 symposium_id: Int
   symposium_order: Int
   time_stamp: bigint
  """The user id of the user who owns the submission"""
 user_id: Int
}

"""
order by min() on columns of table "submissions_with_archived"
"""
input submissions_min_order_by {
  admin_notes: order_by
  created_at: order_by
  """The user id of the user that created the submission"""
created_by: order_by
  decision_status: order_by
  """The event id of the event the submission is in"""
event_id: order_by
  fe_epoch: order_by
  """A globally unique identifier for each submission"""
id: order_by
  last_updated: order_by
  """The user id of the user who last edited the submission"""
last_updated_by: order_by
  """The program code specified by the event admin"""
program_code: order_by
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
serial_number: order_by
  """The id of the stage the submission is in"""
stage_id: order_by
  """The id of the symposium the submission is in"""
symposium_id: order_by
  symposium_order: order_by
  time_stamp: order_by
  """The user id of the user who owns the submission"""
user_id: order_by
}

"""
response of any mutation on the table "submissions_with_archived"
"""
type submissions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [submissions! ]! 
}

"""
input type for inserting object relation for remote table "submissions_with_archived"
"""
input submissions_obj_rel_insert_input {
  data: submissions_insert_input! 
  """upsert condition"""
on_conflict: submissions_on_conflict
}

"""
on_conflict condition type for table "submissions_with_archived"
"""
input submissions_on_conflict {
  constraint: submissions_constraint! 
  update_columns: [submissions_update_column! ]! 
  where: submissions_bool_exp
}

"""Ordering options when selecting data from "submissions_with_archived"."""
input submissions_order_by {
  accepted_aggregate: accepted_submissions_aggregate_order_by
  accepted_for: submission_ids_and_acceptance_types_order_by
  admin_notes: order_by
  archived: order_by
  author_fields_aggregate: author_fields_aggregate_order_by
  author_versions_aggregate: author_versions_aggregate_order_by
  authors_aggregate: authors_aggregate_order_by
  authors_last_updated_aggregate: authors_last_updated_aggregate_order_by
  bookmarks_aggregate: virtual_conference_submission_bookmarks_aggregate_order_by
  category_aggregate: submission_categories_aggregate_order_by
  complete: order_by
  created_at: order_by
  created_by: order_by
  created_email_sent: order_by
  creator: users_order_by
  decision: submission_decisions_order_by
  decision_status: order_by
  decisions_aggregate: decisions_aggregate_order_by
  et_al: order_by
  event: events_order_by
  event_id: order_by
  fe_epoch: order_by
  id: order_by
  in_poster_gallery: order_by
  in_titles_listing: order_by
  last_updated: order_by
  last_updated_by: order_by
  presenter_emails_aggregate: presenter_emails_aggregate_order_by
  previous_stages: order_by
  program_code: order_by
  program_sessions_submissions_aggregate: program_sessions_submissions_aggregate_order_by
  program_sessions_symposia_aggregate: program_sessions_symposia_aggregate_order_by
  response_versions_aggregate: question_response_versions_aggregate_order_by
  responses_aggregate: question_responses_aggregate_order_by
  responses_view_aggregate: question_responses_view_aggregate_order_by
  reviews_aggregate: reviews_aggregate_order_by
  serial_number: order_by
  stage: stages_order_by
  stage_id: order_by
  symposium: symposia_order_by
  symposium_id: order_by
  symposium_order: order_by
  symposium_submission_session_times_aggregate: symposium_submission_session_times_aggregate_order_by
  time_stamp: order_by
  title_aggregate: title_responses_aggregate_order_by
  user: users_order_by
  user_id: order_by
  user_nullable_aggregate: users_aggregate_order_by
  virtual_conference_views_aggregate: virtual_conference_submission_views_aggregate_order_by
}

"""primary key columns input for table: submissions_with_archived"""
input submissions_pk_columns_input {
  """A globally unique identifier for each submission"""
id: Int! 
}

"""
select columns of table "submissions_with_archived"
"""
enum submissions_select_column {
  """column name"""
admin_notes
  """column name"""
archived
  """column name"""
complete
  """column name"""
created_at
  """column name"""
created_by
  """column name"""
created_email_sent
  """column name"""
decision_status
  """column name"""
et_al
  """column name"""
event_id
  """column name"""
fe_epoch
  """column name"""
id
  """column name"""
in_poster_gallery
  """column name"""
in_titles_listing
  """column name"""
last_updated
  """column name"""
last_updated_by
  """column name"""
previous_stages
  """column name"""
program_code
  """column name"""
serial_number
  """column name"""
stage_id
  """column name"""
symposium_id
  """column name"""
symposium_order
  """column name"""
time_stamp
  """column name"""
user_id
}

"""
select "submissions_aggregate_bool_exp_bool_and_arguments_columns" columns of table "submissions_with_archived"
"""
enum submissions_select_column_submissions_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
archived
  """column name"""
complete
  """column name"""
created_email_sent
  """column name"""
et_al
  """column name"""
in_poster_gallery
  """column name"""
in_titles_listing
}

"""
select "submissions_aggregate_bool_exp_bool_or_arguments_columns" columns of table "submissions_with_archived"
"""
enum submissions_select_column_submissions_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
archived
  """column name"""
complete
  """column name"""
created_email_sent
  """column name"""
et_al
  """column name"""
in_poster_gallery
  """column name"""
in_titles_listing
}

"""
input type for updating data in table "submissions_with_archived"
"""
input submissions_set_input {
  admin_notes: String
  archived: Boolean
  complete: Boolean
  created_at: timestamptz
  """The user id of the user that created the submission"""
created_by: Int
  created_email_sent: Boolean
  decision_status: decision
  et_al: Boolean
  """The event id of the event the submission is in"""
event_id: Int
  fe_epoch: bigint
  """A globally unique identifier for each submission"""
id: Int
  in_poster_gallery: Boolean
  in_titles_listing: Boolean
  last_updated: bigint
  """The user id of the user who last edited the submission"""
last_updated_by: Int
  previous_stages: json
  """The program code specified by the event admin"""
program_code: String
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
serial_number: Int
  """The id of the stage the submission is in"""
stage_id: Int
  """The id of the symposium the submission is in"""
symposium_id: Int
  symposium_order: Int
  time_stamp: bigint
  """The user id of the user who owns the submission"""
user_id: Int
}

"""aggregate stddev on columns"""
type submissions_stddev_fields {
  """The user id of the user that created the submission"""
 created_by: Float
  """The event id of the event the submission is in"""
 event_id: Float
   fe_epoch: Float
  """A globally unique identifier for each submission"""
 id: Float
   last_updated: Float
  """The user id of the user who last edited the submission"""
 last_updated_by: Float
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
 serial_number: Float
  """The id of the stage the submission is in"""
 stage_id: Float
  """The id of the symposium the submission is in"""
 symposium_id: Float
   symposium_order: Float
   time_stamp: Float
  """The user id of the user who owns the submission"""
 user_id: Float
}

"""
order by stddev() on columns of table "submissions_with_archived"
"""
input submissions_stddev_order_by {
  """The user id of the user that created the submission"""
created_by: order_by
  """The event id of the event the submission is in"""
event_id: order_by
  fe_epoch: order_by
  """A globally unique identifier for each submission"""
id: order_by
  last_updated: order_by
  """The user id of the user who last edited the submission"""
last_updated_by: order_by
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
serial_number: order_by
  """The id of the stage the submission is in"""
stage_id: order_by
  """The id of the symposium the submission is in"""
symposium_id: order_by
  symposium_order: order_by
  time_stamp: order_by
  """The user id of the user who owns the submission"""
user_id: order_by
}

"""aggregate stddev_pop on columns"""
type submissions_stddev_pop_fields {
  """The user id of the user that created the submission"""
 created_by: Float
  """The event id of the event the submission is in"""
 event_id: Float
   fe_epoch: Float
  """A globally unique identifier for each submission"""
 id: Float
   last_updated: Float
  """The user id of the user who last edited the submission"""
 last_updated_by: Float
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
 serial_number: Float
  """The id of the stage the submission is in"""
 stage_id: Float
  """The id of the symposium the submission is in"""
 symposium_id: Float
   symposium_order: Float
   time_stamp: Float
  """The user id of the user who owns the submission"""
 user_id: Float
}

"""
order by stddev_pop() on columns of table "submissions_with_archived"
"""
input submissions_stddev_pop_order_by {
  """The user id of the user that created the submission"""
created_by: order_by
  """The event id of the event the submission is in"""
event_id: order_by
  fe_epoch: order_by
  """A globally unique identifier for each submission"""
id: order_by
  last_updated: order_by
  """The user id of the user who last edited the submission"""
last_updated_by: order_by
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
serial_number: order_by
  """The id of the stage the submission is in"""
stage_id: order_by
  """The id of the symposium the submission is in"""
symposium_id: order_by
  symposium_order: order_by
  time_stamp: order_by
  """The user id of the user who owns the submission"""
user_id: order_by
}

"""aggregate stddev_samp on columns"""
type submissions_stddev_samp_fields {
  """The user id of the user that created the submission"""
 created_by: Float
  """The event id of the event the submission is in"""
 event_id: Float
   fe_epoch: Float
  """A globally unique identifier for each submission"""
 id: Float
   last_updated: Float
  """The user id of the user who last edited the submission"""
 last_updated_by: Float
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
 serial_number: Float
  """The id of the stage the submission is in"""
 stage_id: Float
  """The id of the symposium the submission is in"""
 symposium_id: Float
   symposium_order: Float
   time_stamp: Float
  """The user id of the user who owns the submission"""
 user_id: Float
}

"""
order by stddev_samp() on columns of table "submissions_with_archived"
"""
input submissions_stddev_samp_order_by {
  """The user id of the user that created the submission"""
created_by: order_by
  """The event id of the event the submission is in"""
event_id: order_by
  fe_epoch: order_by
  """A globally unique identifier for each submission"""
id: order_by
  last_updated: order_by
  """The user id of the user who last edited the submission"""
last_updated_by: order_by
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
serial_number: order_by
  """The id of the stage the submission is in"""
stage_id: order_by
  """The id of the symposium the submission is in"""
symposium_id: order_by
  symposium_order: order_by
  time_stamp: order_by
  """The user id of the user who owns the submission"""
user_id: order_by
}

"""
Streaming cursor of the table "submissions"
"""
input submissions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: submissions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input submissions_stream_cursor_value_input {
  admin_notes: String
  archived: Boolean
  complete: Boolean
  created_at: timestamptz
  """The user id of the user that created the submission"""
created_by: Int
  created_email_sent: Boolean
  decision_status: decision
  et_al: Boolean
  """The event id of the event the submission is in"""
event_id: Int
  fe_epoch: bigint
  """A globally unique identifier for each submission"""
id: Int
  in_poster_gallery: Boolean
  in_titles_listing: Boolean
  last_updated: bigint
  """The user id of the user who last edited the submission"""
last_updated_by: Int
  previous_stages: json
  """The program code specified by the event admin"""
program_code: String
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
serial_number: Int
  """The id of the stage the submission is in"""
stage_id: Int
  """The id of the symposium the submission is in"""
symposium_id: Int
  symposium_order: Int
  time_stamp: bigint
  """The user id of the user who owns the submission"""
user_id: Int
}

"""aggregate sum on columns"""
type submissions_sum_fields {
  """The user id of the user that created the submission"""
 created_by: Int
  """The event id of the event the submission is in"""
 event_id: Int
   fe_epoch: bigint
  """A globally unique identifier for each submission"""
 id: Int
   last_updated: bigint
  """The user id of the user who last edited the submission"""
 last_updated_by: Int
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
 serial_number: Int
  """The id of the stage the submission is in"""
 stage_id: Int
  """The id of the symposium the submission is in"""
 symposium_id: Int
   symposium_order: Int
   time_stamp: bigint
  """The user id of the user who owns the submission"""
 user_id: Int
}

"""
order by sum() on columns of table "submissions_with_archived"
"""
input submissions_sum_order_by {
  """The user id of the user that created the submission"""
created_by: order_by
  """The event id of the event the submission is in"""
event_id: order_by
  fe_epoch: order_by
  """A globally unique identifier for each submission"""
id: order_by
  last_updated: order_by
  """The user id of the user who last edited the submission"""
last_updated_by: order_by
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
serial_number: order_by
  """The id of the stage the submission is in"""
stage_id: order_by
  """The id of the symposium the submission is in"""
symposium_id: order_by
  symposium_order: order_by
  time_stamp: order_by
  """The user id of the user who owns the submission"""
user_id: order_by
}

"""
update columns of table "submissions_with_archived"
"""
enum submissions_update_column {
  """column name"""
admin_notes
  """column name"""
archived
  """column name"""
complete
  """column name"""
created_at
  """column name"""
created_by
  """column name"""
created_email_sent
  """column name"""
decision_status
  """column name"""
et_al
  """column name"""
event_id
  """column name"""
fe_epoch
  """column name"""
id
  """column name"""
in_poster_gallery
  """column name"""
in_titles_listing
  """column name"""
last_updated
  """column name"""
last_updated_by
  """column name"""
previous_stages
  """column name"""
program_code
  """column name"""
serial_number
  """column name"""
stage_id
  """column name"""
symposium_id
  """column name"""
symposium_order
  """column name"""
time_stamp
  """column name"""
user_id
}

input submissions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: submissions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: submissions_set_input
  where: submissions_bool_exp! 
}

"""aggregate var_pop on columns"""
type submissions_var_pop_fields {
  """The user id of the user that created the submission"""
 created_by: Float
  """The event id of the event the submission is in"""
 event_id: Float
   fe_epoch: Float
  """A globally unique identifier for each submission"""
 id: Float
   last_updated: Float
  """The user id of the user who last edited the submission"""
 last_updated_by: Float
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
 serial_number: Float
  """The id of the stage the submission is in"""
 stage_id: Float
  """The id of the symposium the submission is in"""
 symposium_id: Float
   symposium_order: Float
   time_stamp: Float
  """The user id of the user who owns the submission"""
 user_id: Float
}

"""
order by var_pop() on columns of table "submissions_with_archived"
"""
input submissions_var_pop_order_by {
  """The user id of the user that created the submission"""
created_by: order_by
  """The event id of the event the submission is in"""
event_id: order_by
  fe_epoch: order_by
  """A globally unique identifier for each submission"""
id: order_by
  last_updated: order_by
  """The user id of the user who last edited the submission"""
last_updated_by: order_by
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
serial_number: order_by
  """The id of the stage the submission is in"""
stage_id: order_by
  """The id of the symposium the submission is in"""
symposium_id: order_by
  symposium_order: order_by
  time_stamp: order_by
  """The user id of the user who owns the submission"""
user_id: order_by
}

"""aggregate var_samp on columns"""
type submissions_var_samp_fields {
  """The user id of the user that created the submission"""
 created_by: Float
  """The event id of the event the submission is in"""
 event_id: Float
   fe_epoch: Float
  """A globally unique identifier for each submission"""
 id: Float
   last_updated: Float
  """The user id of the user who last edited the submission"""
 last_updated_by: Float
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
 serial_number: Float
  """The id of the stage the submission is in"""
 stage_id: Float
  """The id of the symposium the submission is in"""
 symposium_id: Float
   symposium_order: Float
   time_stamp: Float
  """The user id of the user who owns the submission"""
 user_id: Float
}

"""
order by var_samp() on columns of table "submissions_with_archived"
"""
input submissions_var_samp_order_by {
  """The user id of the user that created the submission"""
created_by: order_by
  """The event id of the event the submission is in"""
event_id: order_by
  fe_epoch: order_by
  """A globally unique identifier for each submission"""
id: order_by
  last_updated: order_by
  """The user id of the user who last edited the submission"""
last_updated_by: order_by
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
serial_number: order_by
  """The id of the stage the submission is in"""
stage_id: order_by
  """The id of the symposium the submission is in"""
symposium_id: order_by
  symposium_order: order_by
  time_stamp: order_by
  """The user id of the user who owns the submission"""
user_id: order_by
}

"""aggregate variance on columns"""
type submissions_variance_fields {
  """The user id of the user that created the submission"""
 created_by: Float
  """The event id of the event the submission is in"""
 event_id: Float
   fe_epoch: Float
  """A globally unique identifier for each submission"""
 id: Float
   last_updated: Float
  """The user id of the user who last edited the submission"""
 last_updated_by: Float
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
 serial_number: Float
  """The id of the stage the submission is in"""
 stage_id: Float
  """The id of the symposium the submission is in"""
 symposium_id: Float
   symposium_order: Float
   time_stamp: Float
  """The user id of the user who owns the submission"""
 user_id: Float
}

"""
order by variance() on columns of table "submissions_with_archived"
"""
input submissions_variance_order_by {
  """The user id of the user that created the submission"""
created_by: order_by
  """The event id of the event the submission is in"""
event_id: order_by
  fe_epoch: order_by
  """A globally unique identifier for each submission"""
id: order_by
  last_updated: order_by
  """The user id of the user who last edited the submission"""
last_updated_by: order_by
  """
  A serial integer for submissions, unique within an event. Admins and submitters will think of these as submission IDs
  """
serial_number: order_by
  """The id of the stage the submission is in"""
stage_id: order_by
  """The id of the symposium the submission is in"""
symposium_id: order_by
  symposium_order: order_by
  time_stamp: order_by
  """The user id of the user who owns the submission"""
user_id: order_by
}

type subscription_root {
  """
  fetch data from the table: "accepted_submissions"
  """
 accepted_submissions("""distinct select on columns"""
distinct_on: [accepted_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [accepted_submissions_order_by! ], """filter the rows returned"""
where: accepted_submissions_bool_exp): [accepted_submissions! ]! 
  """
  fetch aggregated fields from the table: "accepted_submissions"
  """
 accepted_submissions_aggregate("""distinct select on columns"""
distinct_on: [accepted_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [accepted_submissions_order_by! ], """filter the rows returned"""
where: accepted_submissions_bool_exp): accepted_submissions_aggregate! 
  """
  fetch data from the table in a streaming manner: "accepted_submissions"
  """
 accepted_submissions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [accepted_submissions_stream_cursor_input]! , """filter the rows returned"""
where: accepted_submissions_bool_exp): [accepted_submissions! ]! 
  """
  fetch data from the table: "affiliation_versions"
  """
 affiliation_versions("""distinct select on columns"""
distinct_on: [affiliation_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [affiliation_versions_order_by! ], """filter the rows returned"""
where: affiliation_versions_bool_exp): [affiliation_versions! ]! 
  """
  fetch aggregated fields from the table: "affiliation_versions"
  """
 affiliation_versions_aggregate("""distinct select on columns"""
distinct_on: [affiliation_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [affiliation_versions_order_by! ], """filter the rows returned"""
where: affiliation_versions_bool_exp): affiliation_versions_aggregate! 
  """
  fetch data from the table: "affiliation_versions" using primary key columns
  """
 affiliation_versions_by_pk(id: bigint! ): affiliation_versions
  """
  fetch data from the table in a streaming manner: "affiliation_versions"
  """
 affiliation_versions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [affiliation_versions_stream_cursor_input]! , """filter the rows returned"""
where: affiliation_versions_bool_exp): [affiliation_versions! ]! 
  """An array relationship"""
 affiliations("""distinct select on columns"""
distinct_on: [affiliations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [affiliations_order_by! ], """filter the rows returned"""
where: affiliations_bool_exp): [affiliations! ]! 
  """An aggregate relationship"""
 affiliations_aggregate("""distinct select on columns"""
distinct_on: [affiliations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [affiliations_order_by! ], """filter the rows returned"""
where: affiliations_bool_exp): affiliations_aggregate! 
  """fetch data from the table: "affiliations" using primary key columns"""
 affiliations_by_pk(id: Int! ): affiliations
  """
  fetch data from the table in a streaming manner: "affiliations"
  """
 affiliations_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [affiliations_stream_cursor_input]! , """filter the rows returned"""
where: affiliations_bool_exp): [affiliations! ]! 
  """An array relationship"""
 affiliations_without_hidden_responses("""distinct select on columns"""
distinct_on: [affiliations_without_hidden_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [affiliations_without_hidden_responses_order_by! ], """filter the rows returned"""
where: affiliations_without_hidden_responses_bool_exp): [affiliations_without_hidden_responses! ]! 
  """An aggregate relationship"""
 affiliations_without_hidden_responses_aggregate("""distinct select on columns"""
distinct_on: [affiliations_without_hidden_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [affiliations_without_hidden_responses_order_by! ], """filter the rows returned"""
where: affiliations_without_hidden_responses_bool_exp): affiliations_without_hidden_responses_aggregate! 
  """
  fetch data from the table in a streaming manner: "affiliations_without_hidden_responses"
  """
 affiliations_without_hidden_responses_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [affiliations_without_hidden_responses_stream_cursor_input]! , """filter the rows returned"""
where: affiliations_without_hidden_responses_bool_exp): [affiliations_without_hidden_responses! ]! 
  """
  fetch data from the table: "all_event_categories"
  """
 all_event_categories("""distinct select on columns"""
distinct_on: [all_event_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [all_event_categories_order_by! ], """filter the rows returned"""
where: all_event_categories_bool_exp): [all_event_categories! ]! 
  """
  fetch aggregated fields from the table: "all_event_categories"
  """
 all_event_categories_aggregate("""distinct select on columns"""
distinct_on: [all_event_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [all_event_categories_order_by! ], """filter the rows returned"""
where: all_event_categories_bool_exp): all_event_categories_aggregate! 
  """
  fetch data from the table in a streaming manner: "all_event_categories"
  """
 all_event_categories_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [all_event_categories_stream_cursor_input]! , """filter the rows returned"""
where: all_event_categories_bool_exp): [all_event_categories! ]! 
  """
  fetch data from the table: "allowed_submitters"
  """
 allowed_submitters("""distinct select on columns"""
distinct_on: [allowed_submitters_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [allowed_submitters_order_by! ], """filter the rows returned"""
where: allowed_submitters_bool_exp): [allowed_submitters! ]! 
  """
  fetch aggregated fields from the table: "allowed_submitters"
  """
 allowed_submitters_aggregate("""distinct select on columns"""
distinct_on: [allowed_submitters_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [allowed_submitters_order_by! ], """filter the rows returned"""
where: allowed_submitters_bool_exp): allowed_submitters_aggregate! 
  """
  fetch data from the table: "allowed_submitters" using primary key columns
  """
 allowed_submitters_by_pk(id: Int! ): allowed_submitters
  """
  fetch data from the table in a streaming manner: "allowed_submitters"
  """
 allowed_submitters_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [allowed_submitters_stream_cursor_input]! , """filter the rows returned"""
where: allowed_submitters_bool_exp): [allowed_submitters! ]! 
  """
  fetch data from the table: "api_keys"
  """
 api_keys("""distinct select on columns"""
distinct_on: [api_keys_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [api_keys_order_by! ], """filter the rows returned"""
where: api_keys_bool_exp): [api_keys! ]! 
  """
  fetch aggregated fields from the table: "api_keys"
  """
 api_keys_aggregate("""distinct select on columns"""
distinct_on: [api_keys_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [api_keys_order_by! ], """filter the rows returned"""
where: api_keys_bool_exp): api_keys_aggregate! 
  """
  fetch data from the table in a streaming manner: "api_keys"
  """
 api_keys_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [api_keys_stream_cursor_input]! , """filter the rows returned"""
where: api_keys_bool_exp): [api_keys! ]! 
  """
  fetch data from the table: "author_field_response_versions"
  """
 author_field_response_versions("""distinct select on columns"""
distinct_on: [author_field_response_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_field_response_versions_order_by! ], """filter the rows returned"""
where: author_field_response_versions_bool_exp): [author_field_response_versions! ]! 
  """
  fetch aggregated fields from the table: "author_field_response_versions"
  """
 author_field_response_versions_aggregate("""distinct select on columns"""
distinct_on: [author_field_response_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_field_response_versions_order_by! ], """filter the rows returned"""
where: author_field_response_versions_bool_exp): author_field_response_versions_aggregate! 
  """
  fetch data from the table: "author_field_response_versions" using primary key columns
  """
 author_field_response_versions_by_pk(id: bigint! ): author_field_response_versions
  """
  fetch data from the table in a streaming manner: "author_field_response_versions"
  """
 author_field_response_versions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [author_field_response_versions_stream_cursor_input]! , """filter the rows returned"""
where: author_field_response_versions_bool_exp): [author_field_response_versions! ]! 
  """
  fetch data from the table: "author_field_responses"
  """
 author_field_responses("""distinct select on columns"""
distinct_on: [author_field_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_field_responses_order_by! ], """filter the rows returned"""
where: author_field_responses_bool_exp): [author_field_responses! ]! 
  """
  fetch aggregated fields from the table: "author_field_responses"
  """
 author_field_responses_aggregate("""distinct select on columns"""
distinct_on: [author_field_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_field_responses_order_by! ], """filter the rows returned"""
where: author_field_responses_bool_exp): author_field_responses_aggregate! 
  """
  fetch data from the table: "author_field_responses" using primary key columns
  """
 author_field_responses_by_pk(id: Int! ): author_field_responses
  """
  fetch data from the table in a streaming manner: "author_field_responses"
  """
 author_field_responses_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [author_field_responses_stream_cursor_input]! , """filter the rows returned"""
where: author_field_responses_bool_exp): [author_field_responses! ]! 
  """An array relationship"""
 author_fields("""distinct select on columns"""
distinct_on: [author_fields_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_fields_order_by! ], """filter the rows returned"""
where: author_fields_bool_exp): [author_fields! ]! 
  """An aggregate relationship"""
 author_fields_aggregate("""distinct select on columns"""
distinct_on: [author_fields_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_fields_order_by! ], """filter the rows returned"""
where: author_fields_bool_exp): author_fields_aggregate! 
  """fetch data from the table: "author_fields" using primary key columns"""
 author_fields_by_pk(id: Int! ): author_fields
  """
  fetch data from the table in a streaming manner: "author_fields"
  """
 author_fields_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [author_fields_stream_cursor_input]! , """filter the rows returned"""
where: author_fields_bool_exp): [author_fields! ]! 
  """
  fetch data from the table: "author_users"
  """
 author_users("""distinct select on columns"""
distinct_on: [author_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_users_order_by! ], """filter the rows returned"""
where: author_users_bool_exp): [author_users! ]! 
  """
  fetch aggregated fields from the table: "author_users"
  """
 author_users_aggregate("""distinct select on columns"""
distinct_on: [author_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_users_order_by! ], """filter the rows returned"""
where: author_users_bool_exp): author_users_aggregate! 
  """
  fetch data from the table in a streaming manner: "author_users"
  """
 author_users_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [author_users_stream_cursor_input]! , """filter the rows returned"""
where: author_users_bool_exp): [author_users! ]! 
  """An array relationship"""
 author_versions("""distinct select on columns"""
distinct_on: [author_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_versions_order_by! ], """filter the rows returned"""
where: author_versions_bool_exp): [author_versions! ]! 
  """An aggregate relationship"""
 author_versions_aggregate("""distinct select on columns"""
distinct_on: [author_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_versions_order_by! ], """filter the rows returned"""
where: author_versions_bool_exp): author_versions_aggregate! 
  """fetch data from the table: "author_versions" using primary key columns"""
 author_versions_by_pk(id: bigint! ): author_versions
  """
  fetch data from the table in a streaming manner: "author_versions"
  """
 author_versions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [author_versions_stream_cursor_input]! , """filter the rows returned"""
where: author_versions_bool_exp): [author_versions! ]! 
  """An array relationship"""
 authors("""distinct select on columns"""
distinct_on: [authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [authors_order_by! ], """filter the rows returned"""
where: authors_bool_exp): [authors! ]! 
  """An aggregate relationship"""
 authors_aggregate("""distinct select on columns"""
distinct_on: [authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [authors_order_by! ], """filter the rows returned"""
where: authors_bool_exp): authors_aggregate! 
  """fetch data from the table: "authors" using primary key columns"""
 authors_by_pk(id: Int! ): authors
  """An array relationship"""
 authors_last_updated("""distinct select on columns"""
distinct_on: [authors_last_updated_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [authors_last_updated_order_by! ], """filter the rows returned"""
where: authors_last_updated_bool_exp): [authors_last_updated! ]! 
  """An aggregate relationship"""
 authors_last_updated_aggregate("""distinct select on columns"""
distinct_on: [authors_last_updated_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [authors_last_updated_order_by! ], """filter the rows returned"""
where: authors_last_updated_bool_exp): authors_last_updated_aggregate! 
  """
  fetch data from the table in a streaming manner: "authors_last_updated"
  """
 authors_last_updated_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [authors_last_updated_stream_cursor_input]! , """filter the rows returned"""
where: authors_last_updated_bool_exp): [authors_last_updated! ]! 
  """
  fetch data from the table in a streaming manner: "authors"
  """
 authors_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [authors_stream_cursor_input]! , """filter the rows returned"""
where: authors_bool_exp): [authors! ]! 
  """
  fetch data from the table: "browser_errors"
  """
 browser_errors("""distinct select on columns"""
distinct_on: [browser_errors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [browser_errors_order_by! ], """filter the rows returned"""
where: browser_errors_bool_exp): [browser_errors! ]! 
  """
  fetch aggregated fields from the table: "browser_errors"
  """
 browser_errors_aggregate("""distinct select on columns"""
distinct_on: [browser_errors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [browser_errors_order_by! ], """filter the rows returned"""
where: browser_errors_bool_exp): browser_errors_aggregate! 
  """fetch data from the table: "browser_errors" using primary key columns"""
 browser_errors_by_pk(id: Int! ): browser_errors
  """
  fetch data from the table in a streaming manner: "browser_errors"
  """
 browser_errors_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [browser_errors_stream_cursor_input]! , """filter the rows returned"""
where: browser_errors_bool_exp): [browser_errors! ]! 
  """
  fetch data from the table: "categories"
  """
 categories("""distinct select on columns"""
distinct_on: [categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [categories_order_by! ], """filter the rows returned"""
where: categories_bool_exp): [categories! ]! 
  """
  fetch aggregated fields from the table: "categories"
  """
 categories_aggregate("""distinct select on columns"""
distinct_on: [categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [categories_order_by! ], """filter the rows returned"""
where: categories_bool_exp): categories_aggregate! 
  """
  fetch data from the table in a streaming manner: "categories"
  """
 categories_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [categories_stream_cursor_input]! , """filter the rows returned"""
where: categories_bool_exp): [categories! ]! 
  """
  fetch data from the table: "clients"
  """
 clients("""distinct select on columns"""
distinct_on: [clients_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [clients_order_by! ], """filter the rows returned"""
where: clients_bool_exp): [clients! ]! 
  """
  fetch aggregated fields from the table: "clients"
  """
 clients_aggregate("""distinct select on columns"""
distinct_on: [clients_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [clients_order_by! ], """filter the rows returned"""
where: clients_bool_exp): clients_aggregate! 
  """fetch data from the table: "clients" using primary key columns"""
 clients_by_pk("""A unique identifier for each client"""
client_id: Int! ): clients
  """An array relationship"""
 clients_permissions("""distinct select on columns"""
distinct_on: [clients_permissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [clients_permissions_order_by! ], """filter the rows returned"""
where: clients_permissions_bool_exp): [clients_permissions! ]! 
  """An aggregate relationship"""
 clients_permissions_aggregate("""distinct select on columns"""
distinct_on: [clients_permissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [clients_permissions_order_by! ], """filter the rows returned"""
where: clients_permissions_bool_exp): clients_permissions_aggregate! 
  """
  fetch data from the table in a streaming manner: "clients_permissions"
  """
 clients_permissions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [clients_permissions_stream_cursor_input]! , """filter the rows returned"""
where: clients_permissions_bool_exp): [clients_permissions! ]! 
  """
  fetch data from the table in a streaming manner: "clients"
  """
 clients_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [clients_stream_cursor_input]! , """filter the rows returned"""
where: clients_bool_exp): [clients! ]! 
  """
  fetch data from the table: "combined_word_limits"
  """
 combined_word_limits("""distinct select on columns"""
distinct_on: [combined_word_limits_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [combined_word_limits_order_by! ], """filter the rows returned"""
where: combined_word_limits_bool_exp): [combined_word_limits! ]! 
  """
  fetch aggregated fields from the table: "combined_word_limits"
  """
 combined_word_limits_aggregate("""distinct select on columns"""
distinct_on: [combined_word_limits_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [combined_word_limits_order_by! ], """filter the rows returned"""
where: combined_word_limits_bool_exp): combined_word_limits_aggregate! 
  """
  fetch data from the table: "combined_word_limits" using primary key columns
  """
 combined_word_limits_by_pk(combined_word_limit_id: Int! ): combined_word_limits
  """
  fetch data from the table in a streaming manner: "combined_word_limits"
  """
 combined_word_limits_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [combined_word_limits_stream_cursor_input]! , """filter the rows returned"""
where: combined_word_limits_bool_exp): [combined_word_limits! ]! 
  """
  fetch data from the table: "custom_logs"
  """
 custom_logs("""distinct select on columns"""
distinct_on: [custom_logs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [custom_logs_order_by! ], """filter the rows returned"""
where: custom_logs_bool_exp): [custom_logs! ]! 
  """
  fetch aggregated fields from the table: "custom_logs"
  """
 custom_logs_aggregate("""distinct select on columns"""
distinct_on: [custom_logs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [custom_logs_order_by! ], """filter the rows returned"""
where: custom_logs_bool_exp): custom_logs_aggregate! 
  """fetch data from the table: "custom_logs" using primary key columns"""
 custom_logs_by_pk(custom_log_id: Int! ): custom_logs
  """
  fetch data from the table in a streaming manner: "custom_logs"
  """
 custom_logs_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [custom_logs_stream_cursor_input]! , """filter the rows returned"""
where: custom_logs_bool_exp): [custom_logs! ]! 
  """An array relationship"""
 decision_question_responses("""distinct select on columns"""
distinct_on: [decision_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [decision_question_responses_order_by! ], """filter the rows returned"""
where: decision_question_responses_bool_exp): [decision_question_responses! ]! 
  """An aggregate relationship"""
 decision_question_responses_aggregate("""distinct select on columns"""
distinct_on: [decision_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [decision_question_responses_order_by! ], """filter the rows returned"""
where: decision_question_responses_bool_exp): decision_question_responses_aggregate! 
  """
  fetch data from the table: "decision_question_responses" using primary key columns
  """
 decision_question_responses_by_pk(decision_question_response_id: Int! ): decision_question_responses
  """
  fetch data from the table in a streaming manner: "decision_question_responses"
  """
 decision_question_responses_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [decision_question_responses_stream_cursor_input]! , """filter the rows returned"""
where: decision_question_responses_bool_exp): [decision_question_responses! ]! 
  """An array relationship"""
 decision_questions("""distinct select on columns"""
distinct_on: [decision_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [decision_questions_order_by! ], """filter the rows returned"""
where: decision_questions_bool_exp): [decision_questions! ]! 
  """An aggregate relationship"""
 decision_questions_aggregate("""distinct select on columns"""
distinct_on: [decision_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [decision_questions_order_by! ], """filter the rows returned"""
where: decision_questions_bool_exp): decision_questions_aggregate! 
  """
  fetch data from the table: "decision_questions" using primary key columns
  """
 decision_questions_by_pk(decision_question_id: Int! ): decision_questions
  """
  fetch data from the table in a streaming manner: "decision_questions"
  """
 decision_questions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [decision_questions_stream_cursor_input]! , """filter the rows returned"""
where: decision_questions_bool_exp): [decision_questions! ]! 
  """An array relationship"""
 decisions("""distinct select on columns"""
distinct_on: [decisions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [decisions_order_by! ], """filter the rows returned"""
where: decisions_bool_exp): [decisions! ]! 
  """An aggregate relationship"""
 decisions_aggregate("""distinct select on columns"""
distinct_on: [decisions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [decisions_order_by! ], """filter the rows returned"""
where: decisions_bool_exp): decisions_aggregate! 
  """fetch data from the table: "decisions" using primary key columns"""
 decisions_by_pk(decision_id: Int! ): decisions
  """
  fetch data from the table in a streaming manner: "decisions"
  """
 decisions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [decisions_stream_cursor_input]! , """filter the rows returned"""
where: decisions_bool_exp): [decisions! ]! 
  """
  fetch data from the table: "default_questions"
  """
 default_questions("""distinct select on columns"""
distinct_on: [default_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [default_questions_order_by! ], """filter the rows returned"""
where: default_questions_bool_exp): [default_questions! ]! 
  """
  fetch aggregated fields from the table: "default_questions"
  """
 default_questions_aggregate("""distinct select on columns"""
distinct_on: [default_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [default_questions_order_by! ], """filter the rows returned"""
where: default_questions_bool_exp): default_questions_aggregate! 
  """
  fetch data from the table: "default_questions" using primary key columns
  """
 default_questions_by_pk(question_id: Int! ): default_questions
  """
  fetch data from the table in a streaming manner: "default_questions"
  """
 default_questions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [default_questions_stream_cursor_input]! , """filter the rows returned"""
where: default_questions_bool_exp): [default_questions! ]! 
  """An array relationship"""
 delreg_question_responses("""distinct select on columns"""
distinct_on: [delreg_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_question_responses_order_by! ], """filter the rows returned"""
where: delreg_question_responses_bool_exp): [delreg_question_responses! ]! 
  """An aggregate relationship"""
 delreg_question_responses_aggregate("""distinct select on columns"""
distinct_on: [delreg_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_question_responses_order_by! ], """filter the rows returned"""
where: delreg_question_responses_bool_exp): delreg_question_responses_aggregate! 
  """
  fetch data from the table: "delreg_question_responses" using primary key columns
  """
 delreg_question_responses_by_pk(id: Int! ): delreg_question_responses
  """
  fetch data from the table: "delreg_question_responses_multi"
  """
 delreg_question_responses_multi("""distinct select on columns"""
distinct_on: [delreg_question_responses_multi_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_question_responses_multi_order_by! ], """filter the rows returned"""
where: delreg_question_responses_multi_bool_exp): [delreg_question_responses_multi! ]! 
  """
  fetch aggregated fields from the table: "delreg_question_responses_multi"
  """
 delreg_question_responses_multi_aggregate("""distinct select on columns"""
distinct_on: [delreg_question_responses_multi_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_question_responses_multi_order_by! ], """filter the rows returned"""
where: delreg_question_responses_multi_bool_exp): delreg_question_responses_multi_aggregate! 
  """
  fetch data from the table in a streaming manner: "delreg_question_responses_multi"
  """
 delreg_question_responses_multi_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [delreg_question_responses_multi_stream_cursor_input]! , """filter the rows returned"""
where: delreg_question_responses_multi_bool_exp): [delreg_question_responses_multi! ]! 
  """
  fetch data from the table in a streaming manner: "delreg_question_responses"
  """
 delreg_question_responses_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [delreg_question_responses_stream_cursor_input]! , """filter the rows returned"""
where: delreg_question_responses_bool_exp): [delreg_question_responses! ]! 
  """
  fetch data from the table: "delreg_questions"
  """
 delreg_questions("""distinct select on columns"""
distinct_on: [delreg_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_questions_order_by! ], """filter the rows returned"""
where: delreg_questions_bool_exp): [delreg_questions! ]! 
  """
  fetch aggregated fields from the table: "delreg_questions"
  """
 delreg_questions_aggregate("""distinct select on columns"""
distinct_on: [delreg_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_questions_order_by! ], """filter the rows returned"""
where: delreg_questions_bool_exp): delreg_questions_aggregate! 
  """
  fetch data from the table: "delreg_questions" using primary key columns
  """
 delreg_questions_by_pk(id: Int! ): delreg_questions
  """
  fetch data from the table in a streaming manner: "delreg_questions"
  """
 delreg_questions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [delreg_questions_stream_cursor_input]! , """filter the rows returned"""
where: delreg_questions_bool_exp): [delreg_questions! ]! 
  """An array relationship"""
 delreg_registrations("""distinct select on columns"""
distinct_on: [delreg_registrations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_registrations_order_by! ], """filter the rows returned"""
where: delreg_registrations_bool_exp): [delreg_registrations! ]! 
  """An aggregate relationship"""
 delreg_registrations_aggregate("""distinct select on columns"""
distinct_on: [delreg_registrations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_registrations_order_by! ], """filter the rows returned"""
where: delreg_registrations_bool_exp): delreg_registrations_aggregate! 
  """
  fetch data from the table: "delreg_registrations" using primary key columns
  """
 delreg_registrations_by_pk(id: Int! ): delreg_registrations
  """
  fetch data from the table in a streaming manner: "delreg_registrations"
  """
 delreg_registrations_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [delreg_registrations_stream_cursor_input]! , """filter the rows returned"""
where: delreg_registrations_bool_exp): [delreg_registrations! ]! 
  """
  fetch data from the table: "delreg_ticket_headings"
  """
 delreg_ticket_headings("""distinct select on columns"""
distinct_on: [delreg_ticket_headings_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_ticket_headings_order_by! ], """filter the rows returned"""
where: delreg_ticket_headings_bool_exp): [delreg_ticket_headings! ]! 
  """
  fetch aggregated fields from the table: "delreg_ticket_headings"
  """
 delreg_ticket_headings_aggregate("""distinct select on columns"""
distinct_on: [delreg_ticket_headings_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_ticket_headings_order_by! ], """filter the rows returned"""
where: delreg_ticket_headings_bool_exp): delreg_ticket_headings_aggregate! 
  """
  fetch data from the table: "delreg_ticket_headings" using primary key columns
  """
 delreg_ticket_headings_by_pk(id: Int! ): delreg_ticket_headings
  """
  fetch data from the table in a streaming manner: "delreg_ticket_headings"
  """
 delreg_ticket_headings_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [delreg_ticket_headings_stream_cursor_input]! , """filter the rows returned"""
where: delreg_ticket_headings_bool_exp): [delreg_ticket_headings! ]! 
  """
  fetch data from the table: "delreg_tickets"
  """
 delreg_tickets("""distinct select on columns"""
distinct_on: [delreg_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_tickets_order_by! ], """filter the rows returned"""
where: delreg_tickets_bool_exp): [delreg_tickets! ]! 
  """
  fetch aggregated fields from the table: "delreg_tickets"
  """
 delreg_tickets_aggregate("""distinct select on columns"""
distinct_on: [delreg_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [delreg_tickets_order_by! ], """filter the rows returned"""
where: delreg_tickets_bool_exp): delreg_tickets_aggregate! 
  """fetch data from the table: "delreg_tickets" using primary key columns"""
 delreg_tickets_by_pk(id: Int! ): delreg_tickets
  """
  fetch data from the table in a streaming manner: "delreg_tickets"
  """
 delreg_tickets_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [delreg_tickets_stream_cursor_input]! , """filter the rows returned"""
where: delreg_tickets_bool_exp): [delreg_tickets! ]! 
   dr_addon_coupons("""distinct select on columns"""
distinct_on: [dr_addon_coupons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_coupons_order_by! ], """filter the rows returned"""
where: dr_addon_coupons_bool_exp): [dr_addon_coupons! ]! 
   dr_addon_coupons_aggregate("""distinct select on columns"""
distinct_on: [dr_addon_coupons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_coupons_order_by! ], """filter the rows returned"""
where: dr_addon_coupons_bool_exp): dr_addon_coupons_aggregate! 
   dr_addon_coupons_by_pk(id: uuid! ): dr_addon_coupons
  """
  fetch data from the table in a streaming manner: "dr_addon_coupons"
  """
 dr_addon_coupons_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_addon_coupons_stream_cursor_input]! , """filter the rows returned"""
where: dr_addon_coupons_bool_exp): [dr_addon_coupons! ]! 
  """
  fetch data from the table: "dr_addon_coupons_view"
  """
 dr_addon_coupons_view("""distinct select on columns"""
distinct_on: [dr_addon_coupons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_coupons_view_order_by! ], """filter the rows returned"""
where: dr_addon_coupons_view_bool_exp): [dr_addon_coupons_view! ]! 
  """
  fetch aggregated fields from the table: "dr_addon_coupons_view"
  """
 dr_addon_coupons_view_aggregate("""distinct select on columns"""
distinct_on: [dr_addon_coupons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_coupons_view_order_by! ], """filter the rows returned"""
where: dr_addon_coupons_view_bool_exp): dr_addon_coupons_view_aggregate! 
  """
  fetch data from the table in a streaming manner: "dr_addon_coupons_view"
  """
 dr_addon_coupons_view_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_addon_coupons_view_stream_cursor_input]! , """filter the rows returned"""
where: dr_addon_coupons_view_bool_exp): [dr_addon_coupons_view! ]! 
  """
  fetch data from the table: "dr_addon_questions"
  """
 dr_addon_questions("""distinct select on columns"""
distinct_on: [dr_addon_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_questions_order_by! ], """filter the rows returned"""
where: dr_addon_questions_bool_exp): [dr_addon_questions! ]! 
  """
  fetch aggregated fields from the table: "dr_addon_questions"
  """
 dr_addon_questions_aggregate("""distinct select on columns"""
distinct_on: [dr_addon_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_questions_order_by! ], """filter the rows returned"""
where: dr_addon_questions_bool_exp): dr_addon_questions_aggregate! 
  """
  fetch data from the table: "dr_addon_questions" using primary key columns
  """
 dr_addon_questions_by_pk(id: uuid! ): dr_addon_questions
  """
  fetch data from the table in a streaming manner: "dr_addon_questions"
  """
 dr_addon_questions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_addon_questions_stream_cursor_input]! , """filter the rows returned"""
where: dr_addon_questions_bool_exp): [dr_addon_questions! ]! 
  """
  fetch data from the table: "dr_addon_tax_rules"
  """
 dr_addon_tax_rules("""distinct select on columns"""
distinct_on: [dr_addon_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_tax_rules_order_by! ], """filter the rows returned"""
where: dr_addon_tax_rules_bool_exp): [dr_addon_tax_rules! ]! 
  """
  fetch aggregated fields from the table: "dr_addon_tax_rules"
  """
 dr_addon_tax_rules_aggregate("""distinct select on columns"""
distinct_on: [dr_addon_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_tax_rules_order_by! ], """filter the rows returned"""
where: dr_addon_tax_rules_bool_exp): dr_addon_tax_rules_aggregate! 
  """
  fetch data from the table: "dr_addon_tax_rules" using primary key columns
  """
 dr_addon_tax_rules_by_pk(id: uuid! ): dr_addon_tax_rules
  """
  fetch data from the table in a streaming manner: "dr_addon_tax_rules"
  """
 dr_addon_tax_rules_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_addon_tax_rules_stream_cursor_input]! , """filter the rows returned"""
where: dr_addon_tax_rules_bool_exp): [dr_addon_tax_rules! ]! 
  """
  fetch data from the table: "dr_addon_tax_rules_view"
  """
 dr_addon_tax_rules_view("""distinct select on columns"""
distinct_on: [dr_addon_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_addon_tax_rules_view_bool_exp): [dr_addon_tax_rules_view! ]! 
  """
  fetch aggregated fields from the table: "dr_addon_tax_rules_view"
  """
 dr_addon_tax_rules_view_aggregate("""distinct select on columns"""
distinct_on: [dr_addon_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addon_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_addon_tax_rules_view_bool_exp): dr_addon_tax_rules_view_aggregate! 
  """
  fetch data from the table in a streaming manner: "dr_addon_tax_rules_view"
  """
 dr_addon_tax_rules_view_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_addon_tax_rules_view_stream_cursor_input]! , """filter the rows returned"""
where: dr_addon_tax_rules_view_bool_exp): [dr_addon_tax_rules_view! ]! 
  """
  fetch data from the table: "dr_addons"
  """
 dr_addons("""distinct select on columns"""
distinct_on: [dr_addons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addons_order_by! ], """filter the rows returned"""
where: dr_addons_bool_exp): [dr_addons! ]! 
  """
  fetch aggregated fields from the table: "dr_addons"
  """
 dr_addons_aggregate("""distinct select on columns"""
distinct_on: [dr_addons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_addons_order_by! ], """filter the rows returned"""
where: dr_addons_bool_exp): dr_addons_aggregate! 
  """fetch data from the table: "dr_addons" using primary key columns"""
 dr_addons_by_pk(id: uuid! ): dr_addons
  """
  fetch data from the table in a streaming manner: "dr_addons"
  """
 dr_addons_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_addons_stream_cursor_input]! , """filter the rows returned"""
where: dr_addons_bool_exp): [dr_addons! ]! 
  """
  fetch data from the table: "dr_analytics_event_types"
  """
 dr_analytics_event_types("""distinct select on columns"""
distinct_on: [dr_analytics_event_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_analytics_event_types_order_by! ], """filter the rows returned"""
where: dr_analytics_event_types_bool_exp): [dr_analytics_event_types! ]! 
  """
  fetch aggregated fields from the table: "dr_analytics_event_types"
  """
 dr_analytics_event_types_aggregate("""distinct select on columns"""
distinct_on: [dr_analytics_event_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_analytics_event_types_order_by! ], """filter the rows returned"""
where: dr_analytics_event_types_bool_exp): dr_analytics_event_types_aggregate! 
  """
  fetch data from the table: "dr_analytics_event_types" using primary key columns
  """
 dr_analytics_event_types_by_pk(value: String! ): dr_analytics_event_types
  """
  fetch data from the table in a streaming manner: "dr_analytics_event_types"
  """
 dr_analytics_event_types_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_analytics_event_types_stream_cursor_input]! , """filter the rows returned"""
where: dr_analytics_event_types_bool_exp): [dr_analytics_event_types! ]! 
  """
  fetch data from the table: "dr_analytics_events"
  """
 dr_analytics_events("""distinct select on columns"""
distinct_on: [dr_analytics_events_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_analytics_events_order_by! ], """filter the rows returned"""
where: dr_analytics_events_bool_exp): [dr_analytics_events! ]! 
  """
  fetch aggregated fields from the table: "dr_analytics_events"
  """
 dr_analytics_events_aggregate("""distinct select on columns"""
distinct_on: [dr_analytics_events_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_analytics_events_order_by! ], """filter the rows returned"""
where: dr_analytics_events_bool_exp): dr_analytics_events_aggregate! 
  """
  fetch data from the table: "dr_analytics_events" using primary key columns
  """
 dr_analytics_events_by_pk(id: Int! ): dr_analytics_events
  """
  fetch data from the table in a streaming manner: "dr_analytics_events"
  """
 dr_analytics_events_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_analytics_events_stream_cursor_input]! , """filter the rows returned"""
where: dr_analytics_events_bool_exp): [dr_analytics_events! ]! 
  """
  fetch data from the table: "dr_analytics_marketing_campaigns_view"
  """
 dr_analytics_marketing_campaigns_view("""distinct select on columns"""
distinct_on: [dr_analytics_marketing_campaigns_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_analytics_marketing_campaigns_view_order_by! ], """filter the rows returned"""
where: dr_analytics_marketing_campaigns_view_bool_exp): [dr_analytics_marketing_campaigns_view! ]! 
  """
  fetch aggregated fields from the table: "dr_analytics_marketing_campaigns_view"
  """
 dr_analytics_marketing_campaigns_view_aggregate("""distinct select on columns"""
distinct_on: [dr_analytics_marketing_campaigns_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_analytics_marketing_campaigns_view_order_by! ], """filter the rows returned"""
where: dr_analytics_marketing_campaigns_view_bool_exp): dr_analytics_marketing_campaigns_view_aggregate! 
  """
  fetch data from the table in a streaming manner: "dr_analytics_marketing_campaigns_view"
  """
 dr_analytics_marketing_campaigns_view_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_analytics_marketing_campaigns_view_stream_cursor_input]! , """filter the rows returned"""
where: dr_analytics_marketing_campaigns_view_bool_exp): [dr_analytics_marketing_campaigns_view! ]! 
  """
  fetch data from the table: "dr_analytics_view"
  """
 dr_analytics_view("""distinct select on columns"""
distinct_on: [dr_analytics_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_analytics_view_order_by! ], """filter the rows returned"""
where: dr_analytics_view_bool_exp): [dr_analytics_view! ]! 
  """
  fetch aggregated fields from the table: "dr_analytics_view"
  """
 dr_analytics_view_aggregate("""distinct select on columns"""
distinct_on: [dr_analytics_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_analytics_view_order_by! ], """filter the rows returned"""
where: dr_analytics_view_bool_exp): dr_analytics_view_aggregate! 
  """
  fetch data from the table in a streaming manner: "dr_analytics_view"
  """
 dr_analytics_view_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_analytics_view_stream_cursor_input]! , """filter the rows returned"""
where: dr_analytics_view_bool_exp): [dr_analytics_view! ]! 
  """
  fetch data from the table: "dr_attendee_addon_count"
  """
 dr_attendee_addon_count("""distinct select on columns"""
distinct_on: [dr_attendee_addon_count_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addon_count_order_by! ], """filter the rows returned"""
where: dr_attendee_addon_count_bool_exp): [dr_attendee_addon_count! ]! 
  """
  fetch aggregated fields from the table: "dr_attendee_addon_count"
  """
 dr_attendee_addon_count_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_addon_count_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addon_count_order_by! ], """filter the rows returned"""
where: dr_attendee_addon_count_bool_exp): dr_attendee_addon_count_aggregate! 
  """
  fetch data from the table in a streaming manner: "dr_attendee_addon_count"
  """
 dr_attendee_addon_count_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_attendee_addon_count_stream_cursor_input]! , """filter the rows returned"""
where: dr_attendee_addon_count_bool_exp): [dr_attendee_addon_count! ]! 
  """
  fetch data from the table: "dr_attendee_addon_tax_rules"
  """
 dr_attendee_addon_tax_rules("""distinct select on columns"""
distinct_on: [dr_attendee_addon_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addon_tax_rules_order_by! ], """filter the rows returned"""
where: dr_attendee_addon_tax_rules_bool_exp): [dr_attendee_addon_tax_rules! ]! 
  """
  fetch aggregated fields from the table: "dr_attendee_addon_tax_rules"
  """
 dr_attendee_addon_tax_rules_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_addon_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addon_tax_rules_order_by! ], """filter the rows returned"""
where: dr_attendee_addon_tax_rules_bool_exp): dr_attendee_addon_tax_rules_aggregate! 
  """
  fetch data from the table: "dr_attendee_addon_tax_rules" using primary key columns
  """
 dr_attendee_addon_tax_rules_by_pk(id: uuid! ): dr_attendee_addon_tax_rules
  """
  fetch data from the table in a streaming manner: "dr_attendee_addon_tax_rules"
  """
 dr_attendee_addon_tax_rules_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_attendee_addon_tax_rules_stream_cursor_input]! , """filter the rows returned"""
where: dr_attendee_addon_tax_rules_bool_exp): [dr_attendee_addon_tax_rules! ]! 
  """
  fetch data from the table: "dr_attendee_addons"
  """
 dr_attendee_addons("""distinct select on columns"""
distinct_on: [dr_attendee_addons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addons_order_by! ], """filter the rows returned"""
where: dr_attendee_addons_bool_exp): [dr_attendee_addons! ]! 
  """
  fetch aggregated fields from the table: "dr_attendee_addons"
  """
 dr_attendee_addons_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_addons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_addons_order_by! ], """filter the rows returned"""
where: dr_attendee_addons_bool_exp): dr_attendee_addons_aggregate! 
  """
  fetch data from the table: "dr_attendee_addons" using primary key columns
  """
 dr_attendee_addons_by_pk(id: uuid! ): dr_attendee_addons
  """
  fetch data from the table in a streaming manner: "dr_attendee_addons"
  """
 dr_attendee_addons_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_attendee_addons_stream_cursor_input]! , """filter the rows returned"""
where: dr_attendee_addons_bool_exp): [dr_attendee_addons! ]! 
  """
  fetch data from the table: "dr_attendee_question_response_options"
  """
 dr_attendee_question_response_options("""distinct select on columns"""
distinct_on: [dr_attendee_question_response_options_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_question_response_options_order_by! ], """filter the rows returned"""
where: dr_attendee_question_response_options_bool_exp): [dr_attendee_question_response_options! ]! 
  """
  fetch aggregated fields from the table: "dr_attendee_question_response_options"
  """
 dr_attendee_question_response_options_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_question_response_options_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_question_response_options_order_by! ], """filter the rows returned"""
where: dr_attendee_question_response_options_bool_exp): dr_attendee_question_response_options_aggregate! 
  """
  fetch data from the table: "dr_attendee_question_response_options" using primary key columns
  """
 dr_attendee_question_response_options_by_pk(id: uuid! ): dr_attendee_question_response_options
  """
  fetch data from the table in a streaming manner: "dr_attendee_question_response_options"
  """
 dr_attendee_question_response_options_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_attendee_question_response_options_stream_cursor_input]! , """filter the rows returned"""
where: dr_attendee_question_response_options_bool_exp): [dr_attendee_question_response_options! ]! 
  """
  fetch data from the table: "dr_attendee_question_responses"
  """
 dr_attendee_question_responses("""distinct select on columns"""
distinct_on: [dr_attendee_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_question_responses_order_by! ], """filter the rows returned"""
where: dr_attendee_question_responses_bool_exp): [dr_attendee_question_responses! ]! 
  """
  fetch aggregated fields from the table: "dr_attendee_question_responses"
  """
 dr_attendee_question_responses_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_question_responses_order_by! ], """filter the rows returned"""
where: dr_attendee_question_responses_bool_exp): dr_attendee_question_responses_aggregate! 
  """
  fetch data from the table: "dr_attendee_question_responses" using primary key columns
  """
 dr_attendee_question_responses_by_pk(id: uuid! ): dr_attendee_question_responses
  """
  fetch data from the table in a streaming manner: "dr_attendee_question_responses"
  """
 dr_attendee_question_responses_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_attendee_question_responses_stream_cursor_input]! , """filter the rows returned"""
where: dr_attendee_question_responses_bool_exp): [dr_attendee_question_responses! ]! 
  """
  fetch data from the table: "dr_attendee_ticket_count"
  """
 dr_attendee_ticket_count("""distinct select on columns"""
distinct_on: [dr_attendee_ticket_count_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_ticket_count_order_by! ], """filter the rows returned"""
where: dr_attendee_ticket_count_bool_exp): [dr_attendee_ticket_count! ]! 
  """
  fetch aggregated fields from the table: "dr_attendee_ticket_count"
  """
 dr_attendee_ticket_count_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_ticket_count_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_ticket_count_order_by! ], """filter the rows returned"""
where: dr_attendee_ticket_count_bool_exp): dr_attendee_ticket_count_aggregate! 
  """
  fetch data from the table in a streaming manner: "dr_attendee_ticket_count"
  """
 dr_attendee_ticket_count_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_attendee_ticket_count_stream_cursor_input]! , """filter the rows returned"""
where: dr_attendee_ticket_count_bool_exp): [dr_attendee_ticket_count! ]! 
  """
  fetch data from the table: "dr_attendee_ticket_tax_rules"
  """
 dr_attendee_ticket_tax_rules("""distinct select on columns"""
distinct_on: [dr_attendee_ticket_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_ticket_tax_rules_order_by! ], """filter the rows returned"""
where: dr_attendee_ticket_tax_rules_bool_exp): [dr_attendee_ticket_tax_rules! ]! 
  """
  fetch aggregated fields from the table: "dr_attendee_ticket_tax_rules"
  """
 dr_attendee_ticket_tax_rules_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_ticket_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_ticket_tax_rules_order_by! ], """filter the rows returned"""
where: dr_attendee_ticket_tax_rules_bool_exp): dr_attendee_ticket_tax_rules_aggregate! 
  """
  fetch data from the table: "dr_attendee_ticket_tax_rules" using primary key columns
  """
 dr_attendee_ticket_tax_rules_by_pk(id: uuid! ): dr_attendee_ticket_tax_rules
  """
  fetch data from the table in a streaming manner: "dr_attendee_ticket_tax_rules"
  """
 dr_attendee_ticket_tax_rules_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_attendee_ticket_tax_rules_stream_cursor_input]! , """filter the rows returned"""
where: dr_attendee_ticket_tax_rules_bool_exp): [dr_attendee_ticket_tax_rules! ]! 
  """
  fetch data from the table: "dr_attendee_tickets"
  """
 dr_attendee_tickets("""distinct select on columns"""
distinct_on: [dr_attendee_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_tickets_order_by! ], """filter the rows returned"""
where: dr_attendee_tickets_bool_exp): [dr_attendee_tickets! ]! 
  """
  fetch aggregated fields from the table: "dr_attendee_tickets"
  """
 dr_attendee_tickets_aggregate("""distinct select on columns"""
distinct_on: [dr_attendee_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendee_tickets_order_by! ], """filter the rows returned"""
where: dr_attendee_tickets_bool_exp): dr_attendee_tickets_aggregate! 
  """
  fetch data from the table: "dr_attendee_tickets" using primary key columns
  """
 dr_attendee_tickets_by_pk(id: uuid! ): dr_attendee_tickets
  """
  fetch data from the table in a streaming manner: "dr_attendee_tickets"
  """
 dr_attendee_tickets_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_attendee_tickets_stream_cursor_input]! , """filter the rows returned"""
where: dr_attendee_tickets_bool_exp): [dr_attendee_tickets! ]! 
  """An array relationship"""
 dr_attendees("""distinct select on columns"""
distinct_on: [dr_attendees_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendees_order_by! ], """filter the rows returned"""
where: dr_attendees_bool_exp): [dr_attendees! ]! 
  """An aggregate relationship"""
 dr_attendees_aggregate("""distinct select on columns"""
distinct_on: [dr_attendees_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendees_order_by! ], """filter the rows returned"""
where: dr_attendees_bool_exp): dr_attendees_aggregate! 
  """fetch data from the table: "dr_attendees" using primary key columns"""
 dr_attendees_by_pk(id: uuid! ): dr_attendees
  """
  fetch data from the table in a streaming manner: "dr_attendees"
  """
 dr_attendees_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_attendees_stream_cursor_input]! , """filter the rows returned"""
where: dr_attendees_bool_exp): [dr_attendees! ]! 
  """
  fetch data from the table: "dr_authorize_webhooks"
  """
 dr_authorize_webhooks("""distinct select on columns"""
distinct_on: [dr_authorize_webhooks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_authorize_webhooks_order_by! ], """filter the rows returned"""
where: dr_authorize_webhooks_bool_exp): [dr_authorize_webhooks! ]! 
  """
  fetch aggregated fields from the table: "dr_authorize_webhooks"
  """
 dr_authorize_webhooks_aggregate("""distinct select on columns"""
distinct_on: [dr_authorize_webhooks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_authorize_webhooks_order_by! ], """filter the rows returned"""
where: dr_authorize_webhooks_bool_exp): dr_authorize_webhooks_aggregate! 
  """
  fetch data from the table: "dr_authorize_webhooks" using primary key columns
  """
 dr_authorize_webhooks_by_pk(id: uuid! ): dr_authorize_webhooks
  """
  fetch data from the table in a streaming manner: "dr_authorize_webhooks"
  """
 dr_authorize_webhooks_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_authorize_webhooks_stream_cursor_input]! , """filter the rows returned"""
where: dr_authorize_webhooks_bool_exp): [dr_authorize_webhooks! ]! 
  """
  fetch data from the table: "dr_coupon_discount_type"
  """
 dr_coupon_discount_type("""distinct select on columns"""
distinct_on: [dr_coupon_discount_type_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_coupon_discount_type_order_by! ], """filter the rows returned"""
where: dr_coupon_discount_type_bool_exp): [dr_coupon_discount_type! ]! 
  """
  fetch aggregated fields from the table: "dr_coupon_discount_type"
  """
 dr_coupon_discount_type_aggregate("""distinct select on columns"""
distinct_on: [dr_coupon_discount_type_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_coupon_discount_type_order_by! ], """filter the rows returned"""
where: dr_coupon_discount_type_bool_exp): dr_coupon_discount_type_aggregate! 
  """
  fetch data from the table: "dr_coupon_discount_type" using primary key columns
  """
 dr_coupon_discount_type_by_pk(value: String! ): dr_coupon_discount_type
  """
  fetch data from the table in a streaming manner: "dr_coupon_discount_type"
  """
 dr_coupon_discount_type_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_coupon_discount_type_stream_cursor_input]! , """filter the rows returned"""
where: dr_coupon_discount_type_bool_exp): [dr_coupon_discount_type! ]! 
  """
  fetch data from the table: "dr_coupons"
  """
 dr_coupons("""distinct select on columns"""
distinct_on: [dr_coupons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_coupons_order_by! ], """filter the rows returned"""
where: dr_coupons_bool_exp): [dr_coupons! ]! 
  """
  fetch aggregated fields from the table: "dr_coupons"
  """
 dr_coupons_aggregate("""distinct select on columns"""
distinct_on: [dr_coupons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_coupons_order_by! ], """filter the rows returned"""
where: dr_coupons_bool_exp): dr_coupons_aggregate! 
  """fetch data from the table: "dr_coupons" using primary key columns"""
 dr_coupons_by_pk(id: uuid! ): dr_coupons
  """
  fetch data from the table in a streaming manner: "dr_coupons"
  """
 dr_coupons_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_coupons_stream_cursor_input]! , """filter the rows returned"""
where: dr_coupons_bool_exp): [dr_coupons! ]! 
  """
  fetch data from the table: "dr_currencies"
  """
 dr_currencies("""distinct select on columns"""
distinct_on: [dr_currencies_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_currencies_order_by! ], """filter the rows returned"""
where: dr_currencies_bool_exp): [dr_currencies! ]! 
  """
  fetch aggregated fields from the table: "dr_currencies"
  """
 dr_currencies_aggregate("""distinct select on columns"""
distinct_on: [dr_currencies_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_currencies_order_by! ], """filter the rows returned"""
where: dr_currencies_bool_exp): dr_currencies_aggregate! 
  """fetch data from the table: "dr_currencies" using primary key columns"""
 dr_currencies_by_pk(value: String! ): dr_currencies
  """
  fetch data from the table in a streaming manner: "dr_currencies"
  """
 dr_currencies_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_currencies_stream_cursor_input]! , """filter the rows returned"""
where: dr_currencies_bool_exp): [dr_currencies! ]! 
  """
  fetch data from the table: "dr_event_details"
  """
 dr_event_details("""distinct select on columns"""
distinct_on: [dr_event_details_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_event_details_order_by! ], """filter the rows returned"""
where: dr_event_details_bool_exp): [dr_event_details! ]! 
  """
  fetch aggregated fields from the table: "dr_event_details"
  """
 dr_event_details_aggregate("""distinct select on columns"""
distinct_on: [dr_event_details_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_event_details_order_by! ], """filter the rows returned"""
where: dr_event_details_bool_exp): dr_event_details_aggregate! 
  """
  fetch data from the table: "dr_event_details" using primary key columns
  """
 dr_event_details_by_pk(id: uuid! ): dr_event_details
  """
  fetch data from the table in a streaming manner: "dr_event_details"
  """
 dr_event_details_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_event_details_stream_cursor_input]! , """filter the rows returned"""
where: dr_event_details_bool_exp): [dr_event_details! ]! 
  """
  fetch data from the table: "dr_group_questions"
  """
 dr_group_questions("""distinct select on columns"""
distinct_on: [dr_group_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_group_questions_order_by! ], """filter the rows returned"""
where: dr_group_questions_bool_exp): [dr_group_questions! ]! 
  """
  fetch aggregated fields from the table: "dr_group_questions"
  """
 dr_group_questions_aggregate("""distinct select on columns"""
distinct_on: [dr_group_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_group_questions_order_by! ], """filter the rows returned"""
where: dr_group_questions_bool_exp): dr_group_questions_aggregate! 
  """
  fetch data from the table: "dr_group_questions" using primary key columns
  """
 dr_group_questions_by_pk(id: uuid! ): dr_group_questions
  """
  fetch data from the table in a streaming manner: "dr_group_questions"
  """
 dr_group_questions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_group_questions_stream_cursor_input]! , """filter the rows returned"""
where: dr_group_questions_bool_exp): [dr_group_questions! ]! 
  """
  fetch data from the table: "dr_invoice_setup"
  """
 dr_invoice_setup("""distinct select on columns"""
distinct_on: [dr_invoice_setup_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_invoice_setup_order_by! ], """filter the rows returned"""
where: dr_invoice_setup_bool_exp): [dr_invoice_setup! ]! 
  """
  fetch aggregated fields from the table: "dr_invoice_setup"
  """
 dr_invoice_setup_aggregate("""distinct select on columns"""
distinct_on: [dr_invoice_setup_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_invoice_setup_order_by! ], """filter the rows returned"""
where: dr_invoice_setup_bool_exp): dr_invoice_setup_aggregate! 
  """
  fetch data from the table: "dr_invoice_setup" using primary key columns
  """
 dr_invoice_setup_by_pk(id: uuid! ): dr_invoice_setup
  """
  fetch data from the table in a streaming manner: "dr_invoice_setup"
  """
 dr_invoice_setup_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_invoice_setup_stream_cursor_input]! , """filter the rows returned"""
where: dr_invoice_setup_bool_exp): [dr_invoice_setup! ]! 
  """
  fetch data from the table: "dr_line_item_statuses"
  """
 dr_line_item_statuses("""distinct select on columns"""
distinct_on: [dr_line_item_statuses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_line_item_statuses_order_by! ], """filter the rows returned"""
where: dr_line_item_statuses_bool_exp): [dr_line_item_statuses! ]! 
  """
  fetch aggregated fields from the table: "dr_line_item_statuses"
  """
 dr_line_item_statuses_aggregate("""distinct select on columns"""
distinct_on: [dr_line_item_statuses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_line_item_statuses_order_by! ], """filter the rows returned"""
where: dr_line_item_statuses_bool_exp): dr_line_item_statuses_aggregate! 
  """
  fetch data from the table: "dr_line_item_statuses" using primary key columns
  """
 dr_line_item_statuses_by_pk(value: String! ): dr_line_item_statuses
  """
  fetch data from the table in a streaming manner: "dr_line_item_statuses"
  """
 dr_line_item_statuses_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_line_item_statuses_stream_cursor_input]! , """filter the rows returned"""
where: dr_line_item_statuses_bool_exp): [dr_line_item_statuses! ]! 
  """
  fetch data from the table: "dr_marketing_campaigns"
  """
 dr_marketing_campaigns("""distinct select on columns"""
distinct_on: [dr_marketing_campaigns_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_marketing_campaigns_order_by! ], """filter the rows returned"""
where: dr_marketing_campaigns_bool_exp): [dr_marketing_campaigns! ]! 
  """
  fetch aggregated fields from the table: "dr_marketing_campaigns"
  """
 dr_marketing_campaigns_aggregate("""distinct select on columns"""
distinct_on: [dr_marketing_campaigns_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_marketing_campaigns_order_by! ], """filter the rows returned"""
where: dr_marketing_campaigns_bool_exp): dr_marketing_campaigns_aggregate! 
  """
  fetch data from the table: "dr_marketing_campaigns" using primary key columns
  """
 dr_marketing_campaigns_by_pk(id: uuid! ): dr_marketing_campaigns
  """
  fetch data from the table in a streaming manner: "dr_marketing_campaigns"
  """
 dr_marketing_campaigns_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_marketing_campaigns_stream_cursor_input]! , """filter the rows returned"""
where: dr_marketing_campaigns_bool_exp): [dr_marketing_campaigns! ]! 
  """
  fetch data from the table: "dr_offline_payments_setup"
  """
 dr_offline_payments_setup("""distinct select on columns"""
distinct_on: [dr_offline_payments_setup_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_offline_payments_setup_order_by! ], """filter the rows returned"""
where: dr_offline_payments_setup_bool_exp): [dr_offline_payments_setup! ]! 
  """
  fetch aggregated fields from the table: "dr_offline_payments_setup"
  """
 dr_offline_payments_setup_aggregate("""distinct select on columns"""
distinct_on: [dr_offline_payments_setup_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_offline_payments_setup_order_by! ], """filter the rows returned"""
where: dr_offline_payments_setup_bool_exp): dr_offline_payments_setup_aggregate! 
  """
  fetch data from the table: "dr_offline_payments_setup" using primary key columns
  """
 dr_offline_payments_setup_by_pk(id: uuid! ): dr_offline_payments_setup
  """
  fetch data from the table in a streaming manner: "dr_offline_payments_setup"
  """
 dr_offline_payments_setup_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_offline_payments_setup_stream_cursor_input]! , """filter the rows returned"""
where: dr_offline_payments_setup_bool_exp): [dr_offline_payments_setup! ]! 
  """
  fetch data from the table: "dr_order_line_items_coupon_view"
  """
 dr_order_line_items_coupon_view("""distinct select on columns"""
distinct_on: [dr_order_line_items_coupon_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_line_items_coupon_view_order_by! ], """filter the rows returned"""
where: dr_order_line_items_coupon_view_bool_exp): [dr_order_line_items_coupon_view! ]! 
  """
  fetch aggregated fields from the table: "dr_order_line_items_coupon_view"
  """
 dr_order_line_items_coupon_view_aggregate("""distinct select on columns"""
distinct_on: [dr_order_line_items_coupon_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_line_items_coupon_view_order_by! ], """filter the rows returned"""
where: dr_order_line_items_coupon_view_bool_exp): dr_order_line_items_coupon_view_aggregate! 
  """
  fetch data from the table in a streaming manner: "dr_order_line_items_coupon_view"
  """
 dr_order_line_items_coupon_view_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_order_line_items_coupon_view_stream_cursor_input]! , """filter the rows returned"""
where: dr_order_line_items_coupon_view_bool_exp): [dr_order_line_items_coupon_view! ]! 
  """
  fetch data from the table: "dr_order_line_items_tax_rules_view"
  """
 dr_order_line_items_tax_rules_view("""distinct select on columns"""
distinct_on: [dr_order_line_items_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_line_items_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_order_line_items_tax_rules_view_bool_exp): [dr_order_line_items_tax_rules_view! ]! 
  """
  fetch aggregated fields from the table: "dr_order_line_items_tax_rules_view"
  """
 dr_order_line_items_tax_rules_view_aggregate("""distinct select on columns"""
distinct_on: [dr_order_line_items_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_line_items_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_order_line_items_tax_rules_view_bool_exp): dr_order_line_items_tax_rules_view_aggregate! 
  """
  fetch data from the table in a streaming manner: "dr_order_line_items_tax_rules_view"
  """
 dr_order_line_items_tax_rules_view_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_order_line_items_tax_rules_view_stream_cursor_input]! , """filter the rows returned"""
where: dr_order_line_items_tax_rules_view_bool_exp): [dr_order_line_items_tax_rules_view! ]! 
  """
  fetch data from the table: "dr_order_payment_type"
  """
 dr_order_payment_type("""distinct select on columns"""
distinct_on: [dr_order_payment_type_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_payment_type_order_by! ], """filter the rows returned"""
where: dr_order_payment_type_bool_exp): [dr_order_payment_type! ]! 
  """
  fetch aggregated fields from the table: "dr_order_payment_type"
  """
 dr_order_payment_type_aggregate("""distinct select on columns"""
distinct_on: [dr_order_payment_type_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_payment_type_order_by! ], """filter the rows returned"""
where: dr_order_payment_type_bool_exp): dr_order_payment_type_aggregate! 
  """
  fetch data from the table: "dr_order_payment_type" using primary key columns
  """
 dr_order_payment_type_by_pk(value: String! ): dr_order_payment_type
  """
  fetch data from the table in a streaming manner: "dr_order_payment_type"
  """
 dr_order_payment_type_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_order_payment_type_stream_cursor_input]! , """filter the rows returned"""
where: dr_order_payment_type_bool_exp): [dr_order_payment_type! ]! 
  """
  fetch data from the table: "dr_order_tax_rules_view"
  """
 dr_order_tax_rules_view("""distinct select on columns"""
distinct_on: [dr_order_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_order_tax_rules_view_bool_exp): [dr_order_tax_rules_view! ]! 
  """
  fetch aggregated fields from the table: "dr_order_tax_rules_view"
  """
 dr_order_tax_rules_view_aggregate("""distinct select on columns"""
distinct_on: [dr_order_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_order_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_order_tax_rules_view_bool_exp): dr_order_tax_rules_view_aggregate! 
  """
  fetch data from the table in a streaming manner: "dr_order_tax_rules_view"
  """
 dr_order_tax_rules_view_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_order_tax_rules_view_stream_cursor_input]! , """filter the rows returned"""
where: dr_order_tax_rules_view_bool_exp): [dr_order_tax_rules_view! ]! 
  """
  fetch data from the table: "dr_orders"
  """
 dr_orders("""distinct select on columns"""
distinct_on: [dr_orders_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_orders_order_by! ], """filter the rows returned"""
where: dr_orders_bool_exp): [dr_orders! ]! 
  """
  fetch aggregated fields from the table: "dr_orders"
  """
 dr_orders_aggregate("""distinct select on columns"""
distinct_on: [dr_orders_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_orders_order_by! ], """filter the rows returned"""
where: dr_orders_bool_exp): dr_orders_aggregate! 
  """fetch data from the table: "dr_orders" using primary key columns"""
 dr_orders_by_pk(id: uuid! ): dr_orders
  """
  fetch data from the table in a streaming manner: "dr_orders"
  """
 dr_orders_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_orders_stream_cursor_input]! , """filter the rows returned"""
where: dr_orders_bool_exp): [dr_orders! ]! 
  """
  fetch data from the table: "dr_payment_type_fees_aggregate"
  """
 dr_payment_type_fees_aggregate("""distinct select on columns"""
distinct_on: [dr_payment_type_fees_aggregate_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_payment_type_fees_aggregate_order_by! ], """filter the rows returned"""
where: dr_payment_type_fees_aggregate_bool_exp): [dr_payment_type_fees_aggregate! ]! 
  """
  fetch aggregated fields from the table: "dr_payment_type_fees_aggregate"
  """
 dr_payment_type_fees_aggregate_aggregate("""distinct select on columns"""
distinct_on: [dr_payment_type_fees_aggregate_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_payment_type_fees_aggregate_order_by! ], """filter the rows returned"""
where: dr_payment_type_fees_aggregate_bool_exp): dr_payment_type_fees_aggregate_aggregate! 
  """
  fetch data from the table in a streaming manner: "dr_payment_type_fees_aggregate"
  """
 dr_payment_type_fees_aggregate_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_payment_type_fees_aggregate_stream_cursor_input]! , """filter the rows returned"""
where: dr_payment_type_fees_aggregate_bool_exp): [dr_payment_type_fees_aggregate! ]! 
  """
  fetch data from the table: "dr_paypal_setup"
  """
 dr_paypal_setup("""distinct select on columns"""
distinct_on: [dr_paypal_setup_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_paypal_setup_order_by! ], """filter the rows returned"""
where: dr_paypal_setup_bool_exp): [dr_paypal_setup! ]! 
  """
  fetch aggregated fields from the table: "dr_paypal_setup"
  """
 dr_paypal_setup_aggregate("""distinct select on columns"""
distinct_on: [dr_paypal_setup_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_paypal_setup_order_by! ], """filter the rows returned"""
where: dr_paypal_setup_bool_exp): dr_paypal_setup_aggregate! 
  """fetch data from the table: "dr_paypal_setup" using primary key columns"""
 dr_paypal_setup_by_pk(id: uuid! ): dr_paypal_setup
  """
  fetch data from the table in a streaming manner: "dr_paypal_setup"
  """
 dr_paypal_setup_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_paypal_setup_stream_cursor_input]! , """filter the rows returned"""
where: dr_paypal_setup_bool_exp): [dr_paypal_setup! ]! 
  """
  fetch data from the table: "dr_question_dependencies"
  """
 dr_question_dependencies("""distinct select on columns"""
distinct_on: [dr_question_dependencies_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_question_dependencies_order_by! ], """filter the rows returned"""
where: dr_question_dependencies_bool_exp): [dr_question_dependencies! ]! 
  """
  fetch aggregated fields from the table: "dr_question_dependencies"
  """
 dr_question_dependencies_aggregate("""distinct select on columns"""
distinct_on: [dr_question_dependencies_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_question_dependencies_order_by! ], """filter the rows returned"""
where: dr_question_dependencies_bool_exp): dr_question_dependencies_aggregate! 
  """
  fetch data from the table: "dr_question_dependencies" using primary key columns
  """
 dr_question_dependencies_by_pk(id: uuid! ): dr_question_dependencies
  """
  fetch data from the table in a streaming manner: "dr_question_dependencies"
  """
 dr_question_dependencies_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_question_dependencies_stream_cursor_input]! , """filter the rows returned"""
where: dr_question_dependencies_bool_exp): [dr_question_dependencies! ]! 
  """
  fetch data from the table: "dr_question_options"
  """
 dr_question_options("""distinct select on columns"""
distinct_on: [dr_question_options_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_question_options_order_by! ], """filter the rows returned"""
where: dr_question_options_bool_exp): [dr_question_options! ]! 
  """
  fetch aggregated fields from the table: "dr_question_options"
  """
 dr_question_options_aggregate("""distinct select on columns"""
distinct_on: [dr_question_options_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_question_options_order_by! ], """filter the rows returned"""
where: dr_question_options_bool_exp): dr_question_options_aggregate! 
  """
  fetch data from the table: "dr_question_options" using primary key columns
  """
 dr_question_options_by_pk(id: uuid! ): dr_question_options
  """
  fetch data from the table in a streaming manner: "dr_question_options"
  """
 dr_question_options_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_question_options_stream_cursor_input]! , """filter the rows returned"""
where: dr_question_options_bool_exp): [dr_question_options! ]! 
  """
  fetch data from the table: "dr_question_types"
  """
 dr_question_types("""distinct select on columns"""
distinct_on: [dr_question_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_question_types_order_by! ], """filter the rows returned"""
where: dr_question_types_bool_exp): [dr_question_types! ]! 
  """
  fetch aggregated fields from the table: "dr_question_types"
  """
 dr_question_types_aggregate("""distinct select on columns"""
distinct_on: [dr_question_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_question_types_order_by! ], """filter the rows returned"""
where: dr_question_types_bool_exp): dr_question_types_aggregate! 
  """
  fetch data from the table: "dr_question_types" using primary key columns
  """
 dr_question_types_by_pk(value: String! ): dr_question_types
  """
  fetch data from the table in a streaming manner: "dr_question_types"
  """
 dr_question_types_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_question_types_stream_cursor_input]! , """filter the rows returned"""
where: dr_question_types_bool_exp): [dr_question_types! ]! 
  """
  fetch data from the table: "dr_questions"
  """
 dr_questions("""distinct select on columns"""
distinct_on: [dr_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_questions_order_by! ], """filter the rows returned"""
where: dr_questions_bool_exp): [dr_questions! ]! 
  """
  fetch aggregated fields from the table: "dr_questions"
  """
 dr_questions_aggregate("""distinct select on columns"""
distinct_on: [dr_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_questions_order_by! ], """filter the rows returned"""
where: dr_questions_bool_exp): dr_questions_aggregate! 
  """fetch data from the table: "dr_questions" using primary key columns"""
 dr_questions_by_pk(id: uuid! ): dr_questions
  """
  fetch data from the table in a streaming manner: "dr_questions"
  """
 dr_questions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_questions_stream_cursor_input]! , """filter the rows returned"""
where: dr_questions_bool_exp): [dr_questions! ]! 
  """
  fetch data from the table: "dr_service_fee_charges"
  """
 dr_service_fee_charges("""distinct select on columns"""
distinct_on: [dr_service_fee_charges_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_service_fee_charges_order_by! ], """filter the rows returned"""
where: dr_service_fee_charges_bool_exp): [dr_service_fee_charges! ]! 
  """
  fetch aggregated fields from the table: "dr_service_fee_charges"
  """
 dr_service_fee_charges_aggregate("""distinct select on columns"""
distinct_on: [dr_service_fee_charges_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_service_fee_charges_order_by! ], """filter the rows returned"""
where: dr_service_fee_charges_bool_exp): dr_service_fee_charges_aggregate! 
  """
  fetch data from the table: "dr_service_fee_charges" using primary key columns
  """
 dr_service_fee_charges_by_pk(id: uuid! ): dr_service_fee_charges
  """
  fetch data from the table in a streaming manner: "dr_service_fee_charges"
  """
 dr_service_fee_charges_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_service_fee_charges_stream_cursor_input]! , """filter the rows returned"""
where: dr_service_fee_charges_bool_exp): [dr_service_fee_charges! ]! 
  """
  fetch data from the table: "dr_service_fees_grouped"
  """
 dr_service_fees_grouped("""distinct select on columns"""
distinct_on: [dr_service_fees_grouped_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_service_fees_grouped_order_by! ], """filter the rows returned"""
where: dr_service_fees_grouped_bool_exp): [dr_service_fees_grouped! ]! 
  """
  fetch aggregated fields from the table: "dr_service_fees_grouped"
  """
 dr_service_fees_grouped_aggregate("""distinct select on columns"""
distinct_on: [dr_service_fees_grouped_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_service_fees_grouped_order_by! ], """filter the rows returned"""
where: dr_service_fees_grouped_bool_exp): dr_service_fees_grouped_aggregate! 
  """
  fetch data from the table in a streaming manner: "dr_service_fees_grouped"
  """
 dr_service_fees_grouped_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_service_fees_grouped_stream_cursor_input]! , """filter the rows returned"""
where: dr_service_fees_grouped_bool_exp): [dr_service_fees_grouped! ]! 
  """
  fetch data from the table: "dr_stripe_delayed_payments_customer"
  """
 dr_stripe_delayed_payments_customer("""distinct select on columns"""
distinct_on: [dr_stripe_delayed_payments_customer_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_stripe_delayed_payments_customer_order_by! ], """filter the rows returned"""
where: dr_stripe_delayed_payments_customer_bool_exp): [dr_stripe_delayed_payments_customer! ]! 
  """
  fetch aggregated fields from the table: "dr_stripe_delayed_payments_customer"
  """
 dr_stripe_delayed_payments_customer_aggregate("""distinct select on columns"""
distinct_on: [dr_stripe_delayed_payments_customer_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_stripe_delayed_payments_customer_order_by! ], """filter the rows returned"""
where: dr_stripe_delayed_payments_customer_bool_exp): dr_stripe_delayed_payments_customer_aggregate! 
  """
  fetch data from the table: "dr_stripe_delayed_payments_customer" using primary key columns
  """
 dr_stripe_delayed_payments_customer_by_pk(id: uuid! ): dr_stripe_delayed_payments_customer
  """
  fetch data from the table in a streaming manner: "dr_stripe_delayed_payments_customer"
  """
 dr_stripe_delayed_payments_customer_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_stripe_delayed_payments_customer_stream_cursor_input]! , """filter the rows returned"""
where: dr_stripe_delayed_payments_customer_bool_exp): [dr_stripe_delayed_payments_customer! ]! 
  """
  fetch data from the table: "dr_stripe_webhooks"
  """
 dr_stripe_webhooks("""distinct select on columns"""
distinct_on: [dr_stripe_webhooks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_stripe_webhooks_order_by! ], """filter the rows returned"""
where: dr_stripe_webhooks_bool_exp): [dr_stripe_webhooks! ]! 
  """
  fetch aggregated fields from the table: "dr_stripe_webhooks"
  """
 dr_stripe_webhooks_aggregate("""distinct select on columns"""
distinct_on: [dr_stripe_webhooks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_stripe_webhooks_order_by! ], """filter the rows returned"""
where: dr_stripe_webhooks_bool_exp): dr_stripe_webhooks_aggregate! 
  """
  fetch data from the table: "dr_stripe_webhooks" using primary key columns
  """
 dr_stripe_webhooks_by_pk(id: uuid! ): dr_stripe_webhooks
  """
  fetch data from the table in a streaming manner: "dr_stripe_webhooks"
  """
 dr_stripe_webhooks_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_stripe_webhooks_stream_cursor_input]! , """filter the rows returned"""
where: dr_stripe_webhooks_bool_exp): [dr_stripe_webhooks! ]! 
  """
  fetch data from the table: "dr_tax_rules"
  """
 dr_tax_rules("""distinct select on columns"""
distinct_on: [dr_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_tax_rules_order_by! ], """filter the rows returned"""
where: dr_tax_rules_bool_exp): [dr_tax_rules! ]! 
  """
  fetch aggregated fields from the table: "dr_tax_rules"
  """
 dr_tax_rules_aggregate("""distinct select on columns"""
distinct_on: [dr_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_tax_rules_order_by! ], """filter the rows returned"""
where: dr_tax_rules_bool_exp): dr_tax_rules_aggregate! 
  """fetch data from the table: "dr_tax_rules" using primary key columns"""
 dr_tax_rules_by_pk(id: uuid! ): dr_tax_rules
  """
  fetch data from the table in a streaming manner: "dr_tax_rules"
  """
 dr_tax_rules_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_tax_rules_stream_cursor_input]! , """filter the rows returned"""
where: dr_tax_rules_bool_exp): [dr_tax_rules! ]! 
  """
  fetch data from the table: "dr_ticket_addons"
  """
 dr_ticket_addons("""distinct select on columns"""
distinct_on: [dr_ticket_addons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_addons_order_by! ], """filter the rows returned"""
where: dr_ticket_addons_bool_exp): [dr_ticket_addons! ]! 
  """
  fetch aggregated fields from the table: "dr_ticket_addons"
  """
 dr_ticket_addons_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_addons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_addons_order_by! ], """filter the rows returned"""
where: dr_ticket_addons_bool_exp): dr_ticket_addons_aggregate! 
  """
  fetch data from the table: "dr_ticket_addons" using primary key columns
  """
 dr_ticket_addons_by_pk(id: uuid! ): dr_ticket_addons
  """
  fetch data from the table in a streaming manner: "dr_ticket_addons"
  """
 dr_ticket_addons_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_ticket_addons_stream_cursor_input]! , """filter the rows returned"""
where: dr_ticket_addons_bool_exp): [dr_ticket_addons! ]! 
  """
  fetch data from the table: "dr_ticket_addons_view"
  """
 dr_ticket_addons_view("""distinct select on columns"""
distinct_on: [dr_ticket_addons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_addons_view_order_by! ], """filter the rows returned"""
where: dr_ticket_addons_view_bool_exp): [dr_ticket_addons_view! ]! 
  """
  fetch aggregated fields from the table: "dr_ticket_addons_view"
  """
 dr_ticket_addons_view_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_addons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_addons_view_order_by! ], """filter the rows returned"""
where: dr_ticket_addons_view_bool_exp): dr_ticket_addons_view_aggregate! 
  """
  fetch data from the table in a streaming manner: "dr_ticket_addons_view"
  """
 dr_ticket_addons_view_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_ticket_addons_view_stream_cursor_input]! , """filter the rows returned"""
where: dr_ticket_addons_view_bool_exp): [dr_ticket_addons_view! ]! 
   dr_ticket_coupons("""distinct select on columns"""
distinct_on: [dr_ticket_coupons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_coupons_order_by! ], """filter the rows returned"""
where: dr_ticket_coupons_bool_exp): [dr_ticket_coupons! ]! 
   dr_ticket_coupons_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_coupons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_coupons_order_by! ], """filter the rows returned"""
where: dr_ticket_coupons_bool_exp): dr_ticket_coupons_aggregate! 
   dr_ticket_coupons_by_pk(id: uuid! ): dr_ticket_coupons
  """
  fetch data from the table in a streaming manner: "dr_ticket_coupons"
  """
 dr_ticket_coupons_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_ticket_coupons_stream_cursor_input]! , """filter the rows returned"""
where: dr_ticket_coupons_bool_exp): [dr_ticket_coupons! ]! 
  """
  fetch data from the table: "dr_ticket_coupons_view"
  """
 dr_ticket_coupons_view("""distinct select on columns"""
distinct_on: [dr_ticket_coupons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_coupons_view_order_by! ], """filter the rows returned"""
where: dr_ticket_coupons_view_bool_exp): [dr_ticket_coupons_view! ]! 
  """
  fetch aggregated fields from the table: "dr_ticket_coupons_view"
  """
 dr_ticket_coupons_view_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_coupons_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_coupons_view_order_by! ], """filter the rows returned"""
where: dr_ticket_coupons_view_bool_exp): dr_ticket_coupons_view_aggregate! 
  """
  fetch data from the table in a streaming manner: "dr_ticket_coupons_view"
  """
 dr_ticket_coupons_view_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_ticket_coupons_view_stream_cursor_input]! , """filter the rows returned"""
where: dr_ticket_coupons_view_bool_exp): [dr_ticket_coupons_view! ]! 
  """
  fetch data from the table: "dr_ticket_groups"
  """
 dr_ticket_groups("""distinct select on columns"""
distinct_on: [dr_ticket_groups_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_groups_order_by! ], """filter the rows returned"""
where: dr_ticket_groups_bool_exp): [dr_ticket_groups! ]! 
  """
  fetch aggregated fields from the table: "dr_ticket_groups"
  """
 dr_ticket_groups_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_groups_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_groups_order_by! ], """filter the rows returned"""
where: dr_ticket_groups_bool_exp): dr_ticket_groups_aggregate! 
  """
  fetch data from the table: "dr_ticket_groups" using primary key columns
  """
 dr_ticket_groups_by_pk(id: Int! ): dr_ticket_groups
  """
  fetch data from the table in a streaming manner: "dr_ticket_groups"
  """
 dr_ticket_groups_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_ticket_groups_stream_cursor_input]! , """filter the rows returned"""
where: dr_ticket_groups_bool_exp): [dr_ticket_groups! ]! 
  """
  fetch data from the table: "dr_ticket_groups_ungrouped_order"
  """
 dr_ticket_groups_ungrouped_order("""distinct select on columns"""
distinct_on: [dr_ticket_groups_ungrouped_order_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_groups_ungrouped_order_order_by! ], """filter the rows returned"""
where: dr_ticket_groups_ungrouped_order_bool_exp): [dr_ticket_groups_ungrouped_order! ]! 
  """
  fetch aggregated fields from the table: "dr_ticket_groups_ungrouped_order"
  """
 dr_ticket_groups_ungrouped_order_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_groups_ungrouped_order_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_groups_ungrouped_order_order_by! ], """filter the rows returned"""
where: dr_ticket_groups_ungrouped_order_bool_exp): dr_ticket_groups_ungrouped_order_aggregate! 
  """
  fetch data from the table: "dr_ticket_groups_ungrouped_order" using primary key columns
  """
 dr_ticket_groups_ungrouped_order_by_pk(id: Int! ): dr_ticket_groups_ungrouped_order
  """
  fetch data from the table in a streaming manner: "dr_ticket_groups_ungrouped_order"
  """
 dr_ticket_groups_ungrouped_order_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_ticket_groups_ungrouped_order_stream_cursor_input]! , """filter the rows returned"""
where: dr_ticket_groups_ungrouped_order_bool_exp): [dr_ticket_groups_ungrouped_order! ]! 
  """
  fetch data from the table: "dr_ticket_tax_rules"
  """
 dr_ticket_tax_rules("""distinct select on columns"""
distinct_on: [dr_ticket_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_tax_rules_order_by! ], """filter the rows returned"""
where: dr_ticket_tax_rules_bool_exp): [dr_ticket_tax_rules! ]! 
  """
  fetch aggregated fields from the table: "dr_ticket_tax_rules"
  """
 dr_ticket_tax_rules_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_tax_rules_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_tax_rules_order_by! ], """filter the rows returned"""
where: dr_ticket_tax_rules_bool_exp): dr_ticket_tax_rules_aggregate! 
  """
  fetch data from the table: "dr_ticket_tax_rules" using primary key columns
  """
 dr_ticket_tax_rules_by_pk(id: uuid! ): dr_ticket_tax_rules
  """
  fetch data from the table in a streaming manner: "dr_ticket_tax_rules"
  """
 dr_ticket_tax_rules_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_ticket_tax_rules_stream_cursor_input]! , """filter the rows returned"""
where: dr_ticket_tax_rules_bool_exp): [dr_ticket_tax_rules! ]! 
  """
  fetch data from the table: "dr_ticket_tax_rules_view"
  """
 dr_ticket_tax_rules_view("""distinct select on columns"""
distinct_on: [dr_ticket_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_ticket_tax_rules_view_bool_exp): [dr_ticket_tax_rules_view! ]! 
  """
  fetch aggregated fields from the table: "dr_ticket_tax_rules_view"
  """
 dr_ticket_tax_rules_view_aggregate("""distinct select on columns"""
distinct_on: [dr_ticket_tax_rules_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_ticket_tax_rules_view_order_by! ], """filter the rows returned"""
where: dr_ticket_tax_rules_view_bool_exp): dr_ticket_tax_rules_view_aggregate! 
  """
  fetch data from the table in a streaming manner: "dr_ticket_tax_rules_view"
  """
 dr_ticket_tax_rules_view_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_ticket_tax_rules_view_stream_cursor_input]! , """filter the rows returned"""
where: dr_ticket_tax_rules_view_bool_exp): [dr_ticket_tax_rules_view! ]! 
  """
  fetch data from the table: "dr_tickets"
  """
 dr_tickets("""distinct select on columns"""
distinct_on: [dr_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_tickets_order_by! ], """filter the rows returned"""
where: dr_tickets_bool_exp): [dr_tickets! ]! 
  """
  fetch aggregated fields from the table: "dr_tickets"
  """
 dr_tickets_aggregate("""distinct select on columns"""
distinct_on: [dr_tickets_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_tickets_order_by! ], """filter the rows returned"""
where: dr_tickets_bool_exp): dr_tickets_aggregate! 
  """fetch data from the table: "dr_tickets" using primary key columns"""
 dr_tickets_by_pk(id: uuid! ): dr_tickets
  """
  fetch data from the table in a streaming manner: "dr_tickets"
  """
 dr_tickets_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_tickets_stream_cursor_input]! , """filter the rows returned"""
where: dr_tickets_bool_exp): [dr_tickets! ]! 
  """
  fetch data from the table: "dr_tickets_view"
  """
 dr_tickets_view("""distinct select on columns"""
distinct_on: [dr_tickets_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_tickets_view_order_by! ], """filter the rows returned"""
where: dr_tickets_view_bool_exp): [dr_tickets_view! ]! 
  """
  fetch aggregated fields from the table: "dr_tickets_view"
  """
 dr_tickets_view_aggregate("""distinct select on columns"""
distinct_on: [dr_tickets_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_tickets_view_order_by! ], """filter the rows returned"""
where: dr_tickets_view_bool_exp): dr_tickets_view_aggregate! 
  """
  fetch data from the table in a streaming manner: "dr_tickets_view"
  """
 dr_tickets_view_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_tickets_view_stream_cursor_input]! , """filter the rows returned"""
where: dr_tickets_view_bool_exp): [dr_tickets_view! ]! 
  """
  fetch data from the table: "dr_transaction_types"
  """
 dr_transaction_types("""distinct select on columns"""
distinct_on: [dr_transaction_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_transaction_types_order_by! ], """filter the rows returned"""
where: dr_transaction_types_bool_exp): [dr_transaction_types! ]! 
  """
  fetch aggregated fields from the table: "dr_transaction_types"
  """
 dr_transaction_types_aggregate("""distinct select on columns"""
distinct_on: [dr_transaction_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_transaction_types_order_by! ], """filter the rows returned"""
where: dr_transaction_types_bool_exp): dr_transaction_types_aggregate! 
  """
  fetch data from the table: "dr_transaction_types" using primary key columns
  """
 dr_transaction_types_by_pk(value: String! ): dr_transaction_types
  """
  fetch data from the table in a streaming manner: "dr_transaction_types"
  """
 dr_transaction_types_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_transaction_types_stream_cursor_input]! , """filter the rows returned"""
where: dr_transaction_types_bool_exp): [dr_transaction_types! ]! 
  """
  fetch data from the table: "dr_transactions"
  """
 dr_transactions("""distinct select on columns"""
distinct_on: [dr_transactions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_transactions_order_by! ], """filter the rows returned"""
where: dr_transactions_bool_exp): [dr_transactions! ]! 
  """
  fetch aggregated fields from the table: "dr_transactions"
  """
 dr_transactions_aggregate("""distinct select on columns"""
distinct_on: [dr_transactions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_transactions_order_by! ], """filter the rows returned"""
where: dr_transactions_bool_exp): dr_transactions_aggregate! 
  """fetch data from the table: "dr_transactions" using primary key columns"""
 dr_transactions_by_pk(id: uuid! ): dr_transactions
  """
  fetch data from the table in a streaming manner: "dr_transactions"
  """
 dr_transactions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_transactions_stream_cursor_input]! , """filter the rows returned"""
where: dr_transactions_bool_exp): [dr_transactions! ]! 
  """
  fetch data from the table: "dr_vat_address"
  """
 dr_vat_address("""distinct select on columns"""
distinct_on: [dr_vat_address_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_vat_address_order_by! ], """filter the rows returned"""
where: dr_vat_address_bool_exp): [dr_vat_address! ]! 
  """
  fetch aggregated fields from the table: "dr_vat_address"
  """
 dr_vat_address_aggregate("""distinct select on columns"""
distinct_on: [dr_vat_address_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_vat_address_order_by! ], """filter the rows returned"""
where: dr_vat_address_bool_exp): dr_vat_address_aggregate! 
  """fetch data from the table: "dr_vat_address" using primary key columns"""
 dr_vat_address_by_pk(id: uuid! ): dr_vat_address
  """
  fetch data from the table in a streaming manner: "dr_vat_address"
  """
 dr_vat_address_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [dr_vat_address_stream_cursor_input]! , """filter the rows returned"""
where: dr_vat_address_bool_exp): [dr_vat_address! ]! 
  """
  fetch data from the table: "errors"
  """
 errors("""distinct select on columns"""
distinct_on: [errors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [errors_order_by! ], """filter the rows returned"""
where: errors_bool_exp): [errors! ]! 
  """
  fetch aggregated fields from the table: "errors"
  """
 errors_aggregate("""distinct select on columns"""
distinct_on: [errors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [errors_order_by! ], """filter the rows returned"""
where: errors_bool_exp): errors_aggregate! 
  """fetch data from the table: "errors" using primary key columns"""
 errors_by_pk(error_id: Int! ): errors
  """
  fetch data from the table in a streaming manner: "errors"
  """
 errors_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [errors_stream_cursor_input]! , """filter the rows returned"""
where: errors_bool_exp): [errors! ]! 
  """
  fetch data from the table: "event_acceptance_types"
  """
 event_acceptance_types("""distinct select on columns"""
distinct_on: [event_acceptance_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_acceptance_types_order_by! ], """filter the rows returned"""
where: event_acceptance_types_bool_exp): [event_acceptance_types! ]! 
  """
  fetch aggregated fields from the table: "event_acceptance_types"
  """
 event_acceptance_types_aggregate("""distinct select on columns"""
distinct_on: [event_acceptance_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_acceptance_types_order_by! ], """filter the rows returned"""
where: event_acceptance_types_bool_exp): event_acceptance_types_aggregate! 
  """
  fetch data from the table: "event_acceptance_types" using primary key columns
  """
 event_acceptance_types_by_pk(event_acceptance_type_id: Int! ): event_acceptance_types
  """
  fetch data from the table in a streaming manner: "event_acceptance_types"
  """
 event_acceptance_types_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [event_acceptance_types_stream_cursor_input]! , """filter the rows returned"""
where: event_acceptance_types_bool_exp): [event_acceptance_types! ]! 
  """
  fetch data from the table: "event_emails"
  """
 event_emails("""distinct select on columns"""
distinct_on: [event_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_emails_order_by! ], """filter the rows returned"""
where: event_emails_bool_exp): [event_emails! ]! 
  """
  fetch aggregated fields from the table: "event_emails"
  """
 event_emails_aggregate("""distinct select on columns"""
distinct_on: [event_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_emails_order_by! ], """filter the rows returned"""
where: event_emails_bool_exp): event_emails_aggregate! 
  """fetch data from the table: "event_emails" using primary key columns"""
 event_emails_by_pk(id: Int! ): event_emails
  """
  fetch data from the table in a streaming manner: "event_emails"
  """
 event_emails_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [event_emails_stream_cursor_input]! , """filter the rows returned"""
where: event_emails_bool_exp): [event_emails! ]! 
  """
  fetch data from the table: "event_payments"
  """
 event_payments("""distinct select on columns"""
distinct_on: [event_payments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_payments_order_by! ], """filter the rows returned"""
where: event_payments_bool_exp): [event_payments! ]! 
  """
  fetch aggregated fields from the table: "event_payments"
  """
 event_payments_aggregate("""distinct select on columns"""
distinct_on: [event_payments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_payments_order_by! ], """filter the rows returned"""
where: event_payments_bool_exp): event_payments_aggregate! 
  """fetch data from the table: "event_payments" using primary key columns"""
 event_payments_by_pk(id: Int! ): event_payments
  """
  fetch data from the table in a streaming manner: "event_payments"
  """
 event_payments_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [event_payments_stream_cursor_input]! , """filter the rows returned"""
where: event_payments_bool_exp): [event_payments! ]! 
  """
  fetch data from the table: "event_program_menu_sponsors"
  """
 event_program_menu_sponsors("""distinct select on columns"""
distinct_on: [event_program_menu_sponsors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_program_menu_sponsors_order_by! ], """filter the rows returned"""
where: event_program_menu_sponsors_bool_exp): [event_program_menu_sponsors! ]! 
  """
  fetch aggregated fields from the table: "event_program_menu_sponsors"
  """
 event_program_menu_sponsors_aggregate("""distinct select on columns"""
distinct_on: [event_program_menu_sponsors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_program_menu_sponsors_order_by! ], """filter the rows returned"""
where: event_program_menu_sponsors_bool_exp): event_program_menu_sponsors_aggregate! 
  """
  fetch data from the table in a streaming manner: "event_program_menu_sponsors"
  """
 event_program_menu_sponsors_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [event_program_menu_sponsors_stream_cursor_input]! , """filter the rows returned"""
where: event_program_menu_sponsors_bool_exp): [event_program_menu_sponsors! ]! 
  """
  fetch data from the table: "event_suspicions"
  """
 event_suspicions("""distinct select on columns"""
distinct_on: [event_suspicions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_suspicions_order_by! ], """filter the rows returned"""
where: event_suspicions_bool_exp): [event_suspicions! ]! 
  """
  fetch aggregated fields from the table: "event_suspicions"
  """
 event_suspicions_aggregate("""distinct select on columns"""
distinct_on: [event_suspicions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [event_suspicions_order_by! ], """filter the rows returned"""
where: event_suspicions_bool_exp): event_suspicions_aggregate! 
  """
  fetch data from the table: "event_suspicions" using primary key columns
  """
 event_suspicions_by_pk(id: uuid! ): event_suspicions
  """
  fetch data from the table in a streaming manner: "event_suspicions"
  """
 event_suspicions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [event_suspicions_stream_cursor_input]! , """filter the rows returned"""
where: event_suspicions_bool_exp): [event_suspicions! ]! 
  """An array relationship"""
 events("""distinct select on columns"""
distinct_on: [events_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [events_order_by! ], """filter the rows returned"""
where: events_bool_exp): [events! ]! 
  """An aggregate relationship"""
 events_aggregate("""distinct select on columns"""
distinct_on: [events_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [events_order_by! ], """filter the rows returned"""
where: events_bool_exp): events_aggregate! 
  """
  fetch data from the table: "events_with_archived" using primary key columns
  """
 events_by_pk("""A unique identifier for each event"""
id: Int! ): events
  """An array relationship"""
 events_permissions("""distinct select on columns"""
distinct_on: [events_permissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [events_permissions_order_by! ], """filter the rows returned"""
where: events_permissions_bool_exp): [events_permissions! ]! 
  """An aggregate relationship"""
 events_permissions_aggregate("""distinct select on columns"""
distinct_on: [events_permissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [events_permissions_order_by! ], """filter the rows returned"""
where: events_permissions_bool_exp): events_permissions_aggregate! 
  """
  fetch data from the table in a streaming manner: "events_permissions"
  """
 events_permissions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [events_permissions_stream_cursor_input]! , """filter the rows returned"""
where: events_permissions_bool_exp): [events_permissions! ]! 
  """
  fetch data from the table in a streaming manner: "events_with_archived"
  """
 events_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [events_stream_cursor_input]! , """filter the rows returned"""
where: events_bool_exp): [events! ]! 
  """
  fetch data from the table: "events_verified_sender_emails"
  """
 events_verified_sender_emails("""distinct select on columns"""
distinct_on: [events_verified_sender_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [events_verified_sender_emails_order_by! ], """filter the rows returned"""
where: events_verified_sender_emails_bool_exp): [events_verified_sender_emails! ]! 
  """
  fetch aggregated fields from the table: "events_verified_sender_emails"
  """
 events_verified_sender_emails_aggregate("""distinct select on columns"""
distinct_on: [events_verified_sender_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [events_verified_sender_emails_order_by! ], """filter the rows returned"""
where: events_verified_sender_emails_bool_exp): events_verified_sender_emails_aggregate! 
  """
  fetch data from the table: "events_verified_sender_emails" using primary key columns
  """
 events_verified_sender_emails_by_pk(id: uuid! ): events_verified_sender_emails
  """
  fetch data from the table in a streaming manner: "events_verified_sender_emails"
  """
 events_verified_sender_emails_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [events_verified_sender_emails_stream_cursor_input]! , """filter the rows returned"""
where: events_verified_sender_emails_bool_exp): [events_verified_sender_emails! ]! 
  """
  fetch data from the table: "exhibitor_contact_statuses"
  """
 exhibitor_contact_statuses("""distinct select on columns"""
distinct_on: [exhibitor_contact_statuses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_contact_statuses_order_by! ], """filter the rows returned"""
where: exhibitor_contact_statuses_bool_exp): [exhibitor_contact_statuses! ]! 
  """
  fetch aggregated fields from the table: "exhibitor_contact_statuses"
  """
 exhibitor_contact_statuses_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_contact_statuses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_contact_statuses_order_by! ], """filter the rows returned"""
where: exhibitor_contact_statuses_bool_exp): exhibitor_contact_statuses_aggregate! 
  """
  fetch data from the table: "exhibitor_contact_statuses" using primary key columns
  """
 exhibitor_contact_statuses_by_pk(value: String! ): exhibitor_contact_statuses
  """
  fetch data from the table in a streaming manner: "exhibitor_contact_statuses"
  """
 exhibitor_contact_statuses_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [exhibitor_contact_statuses_stream_cursor_input]! , """filter the rows returned"""
where: exhibitor_contact_statuses_bool_exp): [exhibitor_contact_statuses! ]! 
  """An array relationship"""
 exhibitor_contacts("""distinct select on columns"""
distinct_on: [exhibitor_contacts_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_contacts_order_by! ], """filter the rows returned"""
where: exhibitor_contacts_bool_exp): [exhibitor_contacts! ]! 
  """An aggregate relationship"""
 exhibitor_contacts_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_contacts_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_contacts_order_by! ], """filter the rows returned"""
where: exhibitor_contacts_bool_exp): exhibitor_contacts_aggregate! 
  """
  fetch data from the table: "exhibitor_contacts" using primary key columns
  """
 exhibitor_contacts_by_pk(id: uuid! ): exhibitor_contacts
  """
  fetch data from the table in a streaming manner: "exhibitor_contacts"
  """
 exhibitor_contacts_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [exhibitor_contacts_stream_cursor_input]! , """filter the rows returned"""
where: exhibitor_contacts_bool_exp): [exhibitor_contacts! ]! 
  """An array relationship"""
 exhibitor_page_views("""distinct select on columns"""
distinct_on: [exhibitor_page_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_page_views_order_by! ], """filter the rows returned"""
where: exhibitor_page_views_bool_exp): [exhibitor_page_views! ]! 
  """An aggregate relationship"""
 exhibitor_page_views_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_page_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_page_views_order_by! ], """filter the rows returned"""
where: exhibitor_page_views_bool_exp): exhibitor_page_views_aggregate! 
  """
  fetch data from the table: "exhibitor_page_views" using primary key columns
  """
 exhibitor_page_views_by_pk(id: uuid! ): exhibitor_page_views
  """
  fetch data from the table in a streaming manner: "exhibitor_page_views"
  """
 exhibitor_page_views_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [exhibitor_page_views_stream_cursor_input]! , """filter the rows returned"""
where: exhibitor_page_views_bool_exp): [exhibitor_page_views! ]! 
  """
  fetch data from the table: "exhibitor_representative_user_badge"
  """
 exhibitor_representative_user_badge("""distinct select on columns"""
distinct_on: [exhibitor_representative_user_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_representative_user_badge_order_by! ], """filter the rows returned"""
where: exhibitor_representative_user_badge_bool_exp): [exhibitor_representative_user_badge! ]! 
  """
  fetch aggregated fields from the table: "exhibitor_representative_user_badge"
  """
 exhibitor_representative_user_badge_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_representative_user_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_representative_user_badge_order_by! ], """filter the rows returned"""
where: exhibitor_representative_user_badge_bool_exp): exhibitor_representative_user_badge_aggregate! 
  """
  fetch data from the table in a streaming manner: "exhibitor_representative_user_badge"
  """
 exhibitor_representative_user_badge_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [exhibitor_representative_user_badge_stream_cursor_input]! , """filter the rows returned"""
where: exhibitor_representative_user_badge_bool_exp): [exhibitor_representative_user_badge! ]! 
  """
  fetch data from the table: "exhibitor_representative_users"
  """
 exhibitor_representative_users("""distinct select on columns"""
distinct_on: [exhibitor_representative_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_representative_users_order_by! ], """filter the rows returned"""
where: exhibitor_representative_users_bool_exp): [exhibitor_representative_users! ]! 
  """
  fetch aggregated fields from the table: "exhibitor_representative_users"
  """
 exhibitor_representative_users_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_representative_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_representative_users_order_by! ], """filter the rows returned"""
where: exhibitor_representative_users_bool_exp): exhibitor_representative_users_aggregate! 
  """
  fetch data from the table in a streaming manner: "exhibitor_representative_users"
  """
 exhibitor_representative_users_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [exhibitor_representative_users_stream_cursor_input]! , """filter the rows returned"""
where: exhibitor_representative_users_bool_exp): [exhibitor_representative_users! ]! 
  """An array relationship"""
 exhibitor_representatives("""distinct select on columns"""
distinct_on: [exhibitor_representatives_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_representatives_order_by! ], """filter the rows returned"""
where: exhibitor_representatives_bool_exp): [exhibitor_representatives! ]! 
  """An aggregate relationship"""
 exhibitor_representatives_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_representatives_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_representatives_order_by! ], """filter the rows returned"""
where: exhibitor_representatives_bool_exp): exhibitor_representatives_aggregate! 
  """
  fetch data from the table: "exhibitor_representatives" using primary key columns
  """
 exhibitor_representatives_by_pk(id: uuid! ): exhibitor_representatives
  """
  fetch data from the table in a streaming manner: "exhibitor_representatives"
  """
 exhibitor_representatives_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [exhibitor_representatives_stream_cursor_input]! , """filter the rows returned"""
where: exhibitor_representatives_bool_exp): [exhibitor_representatives! ]! 
  """An array relationship"""
 exhibitor_resources("""distinct select on columns"""
distinct_on: [exhibitor_resources_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_resources_order_by! ], """filter the rows returned"""
where: exhibitor_resources_bool_exp): [exhibitor_resources! ]! 
  """An aggregate relationship"""
 exhibitor_resources_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_resources_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_resources_order_by! ], """filter the rows returned"""
where: exhibitor_resources_bool_exp): exhibitor_resources_aggregate! 
  """
  fetch data from the table: "exhibitor_resources" using primary key columns
  """
 exhibitor_resources_by_pk(id: uuid! ): exhibitor_resources
  """
  fetch data from the table in a streaming manner: "exhibitor_resources"
  """
 exhibitor_resources_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [exhibitor_resources_stream_cursor_input]! , """filter the rows returned"""
where: exhibitor_resources_bool_exp): [exhibitor_resources! ]! 
  """
  fetch data from the table: "exhibitor_sizes"
  """
 exhibitor_sizes("""distinct select on columns"""
distinct_on: [exhibitor_sizes_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_sizes_order_by! ], """filter the rows returned"""
where: exhibitor_sizes_bool_exp): [exhibitor_sizes! ]! 
  """
  fetch aggregated fields from the table: "exhibitor_sizes"
  """
 exhibitor_sizes_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_sizes_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_sizes_order_by! ], """filter the rows returned"""
where: exhibitor_sizes_bool_exp): exhibitor_sizes_aggregate! 
  """fetch data from the table: "exhibitor_sizes" using primary key columns"""
 exhibitor_sizes_by_pk(value: String! ): exhibitor_sizes
  """
  fetch data from the table in a streaming manner: "exhibitor_sizes"
  """
 exhibitor_sizes_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [exhibitor_sizes_stream_cursor_input]! , """filter the rows returned"""
where: exhibitor_sizes_bool_exp): [exhibitor_sizes! ]! 
  """
  fetch data from the table: "exhibitor_social_clicks"
  """
 exhibitor_social_clicks("""distinct select on columns"""
distinct_on: [exhibitor_social_clicks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_social_clicks_order_by! ], """filter the rows returned"""
where: exhibitor_social_clicks_bool_exp): [exhibitor_social_clicks! ]! 
  """
  fetch aggregated fields from the table: "exhibitor_social_clicks"
  """
 exhibitor_social_clicks_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_social_clicks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_social_clicks_order_by! ], """filter the rows returned"""
where: exhibitor_social_clicks_bool_exp): exhibitor_social_clicks_aggregate! 
  """
  fetch data from the table: "exhibitor_social_clicks" using primary key columns
  """
 exhibitor_social_clicks_by_pk(id: uuid! ): exhibitor_social_clicks
  """
  fetch data from the table in a streaming manner: "exhibitor_social_clicks"
  """
 exhibitor_social_clicks_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [exhibitor_social_clicks_stream_cursor_input]! , """filter the rows returned"""
where: exhibitor_social_clicks_bool_exp): [exhibitor_social_clicks! ]! 
  """
  fetch data from the table: "exhibitor_statuses"
  """
 exhibitor_statuses("""distinct select on columns"""
distinct_on: [exhibitor_statuses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_statuses_order_by! ], """filter the rows returned"""
where: exhibitor_statuses_bool_exp): [exhibitor_statuses! ]! 
  """
  fetch aggregated fields from the table: "exhibitor_statuses"
  """
 exhibitor_statuses_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_statuses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_statuses_order_by! ], """filter the rows returned"""
where: exhibitor_statuses_bool_exp): exhibitor_statuses_aggregate! 
  """
  fetch data from the table: "exhibitor_statuses" using primary key columns
  """
 exhibitor_statuses_by_pk(value: String! ): exhibitor_statuses
  """
  fetch data from the table in a streaming manner: "exhibitor_statuses"
  """
 exhibitor_statuses_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [exhibitor_statuses_stream_cursor_input]! , """filter the rows returned"""
where: exhibitor_statuses_bool_exp): [exhibitor_statuses! ]! 
  """
  fetch data from the table: "exhibitor_tags"
  """
 exhibitor_tags("""distinct select on columns"""
distinct_on: [exhibitor_tags_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_tags_order_by! ], """filter the rows returned"""
where: exhibitor_tags_bool_exp): [exhibitor_tags! ]! 
  """
  fetch aggregated fields from the table: "exhibitor_tags"
  """
 exhibitor_tags_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_tags_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_tags_order_by! ], """filter the rows returned"""
where: exhibitor_tags_bool_exp): exhibitor_tags_aggregate! 
  """fetch data from the table: "exhibitor_tags" using primary key columns"""
 exhibitor_tags_by_pk(id: uuid! ): exhibitor_tags
  """
  fetch data from the table in a streaming manner: "exhibitor_tags"
  """
 exhibitor_tags_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [exhibitor_tags_stream_cursor_input]! , """filter the rows returned"""
where: exhibitor_tags_bool_exp): [exhibitor_tags! ]! 
  """
  fetch data from the table: "exhibitor_users"
  """
 exhibitor_users("""distinct select on columns"""
distinct_on: [exhibitor_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_users_order_by! ], """filter the rows returned"""
where: exhibitor_users_bool_exp): [exhibitor_users! ]! 
  """
  fetch aggregated fields from the table: "exhibitor_users"
  """
 exhibitor_users_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_users_order_by! ], """filter the rows returned"""
where: exhibitor_users_bool_exp): exhibitor_users_aggregate! 
  """
  fetch data from the table in a streaming manner: "exhibitor_users"
  """
 exhibitor_users_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [exhibitor_users_stream_cursor_input]! , """filter the rows returned"""
where: exhibitor_users_bool_exp): [exhibitor_users! ]! 
  """
  fetch data from the table: "exhibitors"
  """
 exhibitors("""distinct select on columns"""
distinct_on: [exhibitors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitors_order_by! ], """filter the rows returned"""
where: exhibitors_bool_exp): [exhibitors! ]! 
  """
  fetch aggregated fields from the table: "exhibitors"
  """
 exhibitors_aggregate("""distinct select on columns"""
distinct_on: [exhibitors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitors_order_by! ], """filter the rows returned"""
where: exhibitors_bool_exp): exhibitors_aggregate! 
  """fetch data from the table: "exhibitors" using primary key columns"""
 exhibitors_by_pk(id: uuid! ): exhibitors
  """
  fetch data from the table in a streaming manner: "exhibitors"
  """
 exhibitors_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [exhibitors_stream_cursor_input]! , """filter the rows returned"""
where: exhibitors_bool_exp): [exhibitors! ]! 
  """An array relationship"""
 exhibitors_tags("""distinct select on columns"""
distinct_on: [exhibitors_tags_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitors_tags_order_by! ], """filter the rows returned"""
where: exhibitors_tags_bool_exp): [exhibitors_tags! ]! 
  """An aggregate relationship"""
 exhibitors_tags_aggregate("""distinct select on columns"""
distinct_on: [exhibitors_tags_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitors_tags_order_by! ], """filter the rows returned"""
where: exhibitors_tags_bool_exp): exhibitors_tags_aggregate! 
  """fetch data from the table: "exhibitors_tags" using primary key columns"""
 exhibitors_tags_by_pk(id: uuid! ): exhibitors_tags
  """
  fetch data from the table in a streaming manner: "exhibitors_tags"
  """
 exhibitors_tags_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [exhibitors_tags_stream_cursor_input]! , """filter the rows returned"""
where: exhibitors_tags_bool_exp): [exhibitors_tags! ]! 
  """
  fetch data from the table: "export_progresses"
  """
 export_progresses("""distinct select on columns"""
distinct_on: [export_progresses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [export_progresses_order_by! ], """filter the rows returned"""
where: export_progresses_bool_exp): [export_progresses! ]! 
  """
  fetch aggregated fields from the table: "export_progresses"
  """
 export_progresses_aggregate("""distinct select on columns"""
distinct_on: [export_progresses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [export_progresses_order_by! ], """filter the rows returned"""
where: export_progresses_bool_exp): export_progresses_aggregate! 
  """
  fetch data from the table: "export_progresses" using primary key columns
  """
 export_progresses_by_pk(id: uuid! ): export_progresses
  """
  fetch data from the table in a streaming manner: "export_progresses"
  """
 export_progresses_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [export_progresses_stream_cursor_input]! , """filter the rows returned"""
where: export_progresses_bool_exp): [export_progresses! ]! 
  """
  fetch data from the table: "gql_api_keys"
  """
 gql_api_keys("""distinct select on columns"""
distinct_on: [gql_api_keys_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [gql_api_keys_order_by! ], """filter the rows returned"""
where: gql_api_keys_bool_exp): [gql_api_keys! ]! 
  """
  fetch aggregated fields from the table: "gql_api_keys"
  """
 gql_api_keys_aggregate("""distinct select on columns"""
distinct_on: [gql_api_keys_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [gql_api_keys_order_by! ], """filter the rows returned"""
where: gql_api_keys_bool_exp): gql_api_keys_aggregate! 
  """fetch data from the table: "gql_api_keys" using primary key columns"""
 gql_api_keys_by_pk(api_key: uuid! ): gql_api_keys
  """
  fetch data from the table in a streaming manner: "gql_api_keys"
  """
 gql_api_keys_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [gql_api_keys_stream_cursor_input]! , """filter the rows returned"""
where: gql_api_keys_bool_exp): [gql_api_keys! ]! 
  """
  fetch data from the table: "notifications"
  """
 notifications("""distinct select on columns"""
distinct_on: [notifications_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [notifications_order_by! ], """filter the rows returned"""
where: notifications_bool_exp): [notifications! ]! 
  """
  fetch aggregated fields from the table: "notifications"
  """
 notifications_aggregate("""distinct select on columns"""
distinct_on: [notifications_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [notifications_order_by! ], """filter the rows returned"""
where: notifications_bool_exp): notifications_aggregate! 
  """fetch data from the table: "notifications" using primary key columns"""
 notifications_by_pk(notification_id: Int! ): notifications
  """
  fetch data from the table in a streaming manner: "notifications"
  """
 notifications_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [notifications_stream_cursor_input]! , """filter the rows returned"""
where: notifications_bool_exp): [notifications! ]! 
  """An array relationship"""
 notifications_users("""distinct select on columns"""
distinct_on: [notifications_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [notifications_users_order_by! ], """filter the rows returned"""
where: notifications_users_bool_exp): [notifications_users! ]! 
  """An aggregate relationship"""
 notifications_users_aggregate("""distinct select on columns"""
distinct_on: [notifications_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [notifications_users_order_by! ], """filter the rows returned"""
where: notifications_users_bool_exp): notifications_users_aggregate! 
  """
  fetch data from the table: "notifications_users" using primary key columns
  """
 notifications_users_by_pk(id: Int! ): notifications_users
  """
  fetch data from the table in a streaming manner: "notifications_users"
  """
 notifications_users_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [notifications_users_stream_cursor_input]! , """filter the rows returned"""
where: notifications_users_bool_exp): [notifications_users! ]! 
  """
  fetch data from the table: "oa_db_env"
  """
 oa_db_env("""distinct select on columns"""
distinct_on: [oa_db_env_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [oa_db_env_order_by! ], """filter the rows returned"""
where: oa_db_env_bool_exp): [oa_db_env! ]! 
  """
  fetch aggregated fields from the table: "oa_db_env"
  """
 oa_db_env_aggregate("""distinct select on columns"""
distinct_on: [oa_db_env_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [oa_db_env_order_by! ], """filter the rows returned"""
where: oa_db_env_bool_exp): oa_db_env_aggregate! 
  """fetch data from the table: "oa_db_env" using primary key columns"""
 oa_db_env_by_pk(key: String! ): oa_db_env
  """
  fetch data from the table in a streaming manner: "oa_db_env"
  """
 oa_db_env_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [oa_db_env_stream_cursor_input]! , """filter the rows returned"""
where: oa_db_env_bool_exp): [oa_db_env! ]! 
  """
  fetch data from the table: "oauth_codes"
  """
 oauth_codes("""distinct select on columns"""
distinct_on: [oauth_codes_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [oauth_codes_order_by! ], """filter the rows returned"""
where: oauth_codes_bool_exp): [oauth_codes! ]! 
  """
  fetch aggregated fields from the table: "oauth_codes"
  """
 oauth_codes_aggregate("""distinct select on columns"""
distinct_on: [oauth_codes_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [oauth_codes_order_by! ], """filter the rows returned"""
where: oauth_codes_bool_exp): oauth_codes_aggregate! 
  """fetch data from the table: "oauth_codes" using primary key columns"""
 oauth_codes_by_pk(id: uuid! ): oauth_codes
  """
  fetch data from the table in a streaming manner: "oauth_codes"
  """
 oauth_codes_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [oauth_codes_stream_cursor_input]! , """filter the rows returned"""
where: oauth_codes_bool_exp): [oauth_codes! ]! 
  """
  fetch data from the table: "orderable_posters_submissions"
  """
 orderable_posters_submissions("""distinct select on columns"""
distinct_on: [orderable_posters_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [orderable_posters_submissions_order_by! ], """filter the rows returned"""
where: orderable_posters_submissions_bool_exp): [orderable_posters_submissions! ]! 
  """
  fetch aggregated fields from the table: "orderable_posters_submissions"
  """
 orderable_posters_submissions_aggregate("""distinct select on columns"""
distinct_on: [orderable_posters_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [orderable_posters_submissions_order_by! ], """filter the rows returned"""
where: orderable_posters_submissions_bool_exp): orderable_posters_submissions_aggregate! 
  """
  fetch data from the table in a streaming manner: "orderable_posters_submissions"
  """
 orderable_posters_submissions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [orderable_posters_submissions_stream_cursor_input]! , """filter the rows returned"""
where: orderable_posters_submissions_bool_exp): [orderable_posters_submissions! ]! 
  """
  fetch data from the table: "ordered_people_by_last_name"
  """
 ordered_people_by_last_name("""distinct select on columns"""
distinct_on: [ordered_people_by_last_name_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_people_by_last_name_order_by! ], """filter the rows returned"""
where: ordered_people_by_last_name_bool_exp): [ordered_people_by_last_name! ]! 
  """
  fetch aggregated fields from the table: "ordered_people_by_last_name"
  """
 ordered_people_by_last_name_aggregate("""distinct select on columns"""
distinct_on: [ordered_people_by_last_name_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_people_by_last_name_order_by! ], """filter the rows returned"""
where: ordered_people_by_last_name_bool_exp): ordered_people_by_last_name_aggregate! 
  """
  fetch data from the table in a streaming manner: "ordered_people_by_last_name"
  """
 ordered_people_by_last_name_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [ordered_people_by_last_name_stream_cursor_input]! , """filter the rows returned"""
where: ordered_people_by_last_name_bool_exp): [ordered_people_by_last_name! ]! 
  """
  fetch data from the table: "ordered_poster_authors"
  """
 ordered_poster_authors("""distinct select on columns"""
distinct_on: [ordered_poster_authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_poster_authors_order_by! ], """filter the rows returned"""
where: ordered_poster_authors_bool_exp): [ordered_poster_authors! ]! 
  """
  fetch aggregated fields from the table: "ordered_poster_authors"
  """
 ordered_poster_authors_aggregate("""distinct select on columns"""
distinct_on: [ordered_poster_authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_poster_authors_order_by! ], """filter the rows returned"""
where: ordered_poster_authors_bool_exp): ordered_poster_authors_aggregate! 
  """
  fetch data from the table in a streaming manner: "ordered_poster_authors"
  """
 ordered_poster_authors_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [ordered_poster_authors_stream_cursor_input]! , """filter the rows returned"""
where: ordered_poster_authors_bool_exp): [ordered_poster_authors! ]! 
  """
  fetch data from the table: "ordered_program_authors"
  """
 ordered_program_authors("""distinct select on columns"""
distinct_on: [ordered_program_authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_authors_order_by! ], """filter the rows returned"""
where: ordered_program_authors_bool_exp): [ordered_program_authors! ]! 
  """
  fetch aggregated fields from the table: "ordered_program_authors"
  """
 ordered_program_authors_aggregate("""distinct select on columns"""
distinct_on: [ordered_program_authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_authors_order_by! ], """filter the rows returned"""
where: ordered_program_authors_bool_exp): ordered_program_authors_aggregate! 
  """
  fetch data from the table in a streaming manner: "ordered_program_authors"
  """
 ordered_program_authors_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [ordered_program_authors_stream_cursor_input]! , """filter the rows returned"""
where: ordered_program_authors_bool_exp): [ordered_program_authors! ]! 
  """
  fetch data from the table: "ordered_program_chairs"
  """
 ordered_program_chairs("""distinct select on columns"""
distinct_on: [ordered_program_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_chairs_order_by! ], """filter the rows returned"""
where: ordered_program_chairs_bool_exp): [ordered_program_chairs! ]! 
  """
  fetch aggregated fields from the table: "ordered_program_chairs"
  """
 ordered_program_chairs_aggregate("""distinct select on columns"""
distinct_on: [ordered_program_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_chairs_order_by! ], """filter the rows returned"""
where: ordered_program_chairs_bool_exp): ordered_program_chairs_aggregate! 
  """
  fetch data from the table in a streaming manner: "ordered_program_chairs"
  """
 ordered_program_chairs_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [ordered_program_chairs_stream_cursor_input]! , """filter the rows returned"""
where: ordered_program_chairs_bool_exp): [ordered_program_chairs! ]! 
  """
  fetch data from the table: "ordered_program_submissions_by_category"
  """
 ordered_program_submissions_by_category("""distinct select on columns"""
distinct_on: [ordered_program_submissions_by_category_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_submissions_by_category_order_by! ], """filter the rows returned"""
where: ordered_program_submissions_by_category_bool_exp): [ordered_program_submissions_by_category! ]! 
  """
  fetch aggregated fields from the table: "ordered_program_submissions_by_category"
  """
 ordered_program_submissions_by_category_aggregate("""distinct select on columns"""
distinct_on: [ordered_program_submissions_by_category_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_submissions_by_category_order_by! ], """filter the rows returned"""
where: ordered_program_submissions_by_category_bool_exp): ordered_program_submissions_by_category_aggregate! 
  """
  fetch data from the table in a streaming manner: "ordered_program_submissions_by_category"
  """
 ordered_program_submissions_by_category_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [ordered_program_submissions_by_category_stream_cursor_input]! , """filter the rows returned"""
where: ordered_program_submissions_by_category_bool_exp): [ordered_program_submissions_by_category! ]! 
  """An array relationship"""
 ordered_program_submissions_by_title("""distinct select on columns"""
distinct_on: [ordered_program_submissions_by_title_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_submissions_by_title_order_by! ], """filter the rows returned"""
where: ordered_program_submissions_by_title_bool_exp): [ordered_program_submissions_by_title! ]! 
  """An aggregate relationship"""
 ordered_program_submissions_by_title_aggregate("""distinct select on columns"""
distinct_on: [ordered_program_submissions_by_title_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_submissions_by_title_order_by! ], """filter the rows returned"""
where: ordered_program_submissions_by_title_bool_exp): ordered_program_submissions_by_title_aggregate! 
  """
  fetch data from the table in a streaming manner: "ordered_program_submissions_by_title"
  """
 ordered_program_submissions_by_title_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [ordered_program_submissions_by_title_stream_cursor_input]! , """filter the rows returned"""
where: ordered_program_submissions_by_title_bool_exp): [ordered_program_submissions_by_title! ]! 
  """
  fetch data from the table: "ordered_program_symposia_by_title"
  """
 ordered_program_symposia_by_title("""distinct select on columns"""
distinct_on: [ordered_program_symposia_by_title_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_symposia_by_title_order_by! ], """filter the rows returned"""
where: ordered_program_symposia_by_title_bool_exp): [ordered_program_symposia_by_title! ]! 
  """
  fetch aggregated fields from the table: "ordered_program_symposia_by_title"
  """
 ordered_program_symposia_by_title_aggregate("""distinct select on columns"""
distinct_on: [ordered_program_symposia_by_title_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_symposia_by_title_order_by! ], """filter the rows returned"""
where: ordered_program_symposia_by_title_bool_exp): ordered_program_symposia_by_title_aggregate! 
  """
  fetch data from the table in a streaming manner: "ordered_program_symposia_by_title"
  """
 ordered_program_symposia_by_title_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [ordered_program_symposia_by_title_stream_cursor_input]! , """filter the rows returned"""
where: ordered_program_symposia_by_title_bool_exp): [ordered_program_symposia_by_title! ]! 
  """
  fetch data from the table: "ordered_program_symposium_people"
  """
 ordered_program_symposium_people("""distinct select on columns"""
distinct_on: [ordered_program_symposium_people_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_symposium_people_order_by! ], """filter the rows returned"""
where: ordered_program_symposium_people_bool_exp): [ordered_program_symposium_people! ]! 
  """
  fetch aggregated fields from the table: "ordered_program_symposium_people"
  """
 ordered_program_symposium_people_aggregate("""distinct select on columns"""
distinct_on: [ordered_program_symposium_people_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_symposium_people_order_by! ], """filter the rows returned"""
where: ordered_program_symposium_people_bool_exp): ordered_program_symposium_people_aggregate! 
  """
  fetch data from the table in a streaming manner: "ordered_program_symposium_people"
  """
 ordered_program_symposium_people_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [ordered_program_symposium_people_stream_cursor_input]! , """filter the rows returned"""
where: ordered_program_symposium_people_bool_exp): [ordered_program_symposium_people! ]! 
  """
  fetch data from the table: "ordered_session_chairs"
  """
 ordered_session_chairs("""distinct select on columns"""
distinct_on: [ordered_session_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_session_chairs_order_by! ], """filter the rows returned"""
where: ordered_session_chairs_bool_exp): [ordered_session_chairs! ]! 
  """
  fetch aggregated fields from the table: "ordered_session_chairs"
  """
 ordered_session_chairs_aggregate("""distinct select on columns"""
distinct_on: [ordered_session_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_session_chairs_order_by! ], """filter the rows returned"""
where: ordered_session_chairs_bool_exp): ordered_session_chairs_aggregate! 
  """
  fetch data from the table in a streaming manner: "ordered_session_chairs"
  """
 ordered_session_chairs_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [ordered_session_chairs_stream_cursor_input]! , """filter the rows returned"""
where: ordered_session_chairs_bool_exp): [ordered_session_chairs! ]! 
  """An array relationship"""
 presenter_emails("""distinct select on columns"""
distinct_on: [presenter_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [presenter_emails_order_by! ], """filter the rows returned"""
where: presenter_emails_bool_exp): [presenter_emails! ]! 
  """An aggregate relationship"""
 presenter_emails_aggregate("""distinct select on columns"""
distinct_on: [presenter_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [presenter_emails_order_by! ], """filter the rows returned"""
where: presenter_emails_bool_exp): presenter_emails_aggregate! 
  """
  fetch data from the table in a streaming manner: "presenter_emails"
  """
 presenter_emails_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [presenter_emails_stream_cursor_input]! , """filter the rows returned"""
where: presenter_emails_bool_exp): [presenter_emails! ]! 
  """
  fetch data from the table: "program_attachments"
  """
 program_attachments("""distinct select on columns"""
distinct_on: [program_attachments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_attachments_order_by! ], """filter the rows returned"""
where: program_attachments_bool_exp): [program_attachments! ]! 
  """
  fetch aggregated fields from the table: "program_attachments"
  """
 program_attachments_aggregate("""distinct select on columns"""
distinct_on: [program_attachments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_attachments_order_by! ], """filter the rows returned"""
where: program_attachments_bool_exp): program_attachments_aggregate! 
  """
  fetch data from the table: "program_attachments" using primary key columns
  """
 program_attachments_by_pk(id: Int! ): program_attachments
  """
  fetch data from the table in a streaming manner: "program_attachments"
  """
 program_attachments_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_attachments_stream_cursor_input]! , """filter the rows returned"""
where: program_attachments_bool_exp): [program_attachments! ]! 
  """
  fetch data from the table: "program_chairs"
  """
 program_chairs("""distinct select on columns"""
distinct_on: [program_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_chairs_order_by! ], """filter the rows returned"""
where: program_chairs_bool_exp): [program_chairs! ]! 
  """
  fetch aggregated fields from the table: "program_chairs"
  """
 program_chairs_aggregate("""distinct select on columns"""
distinct_on: [program_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_chairs_order_by! ], """filter the rows returned"""
where: program_chairs_bool_exp): program_chairs_aggregate! 
  """fetch data from the table: "program_chairs" using primary key columns"""
 program_chairs_by_pk(program_chair_id: Int! ): program_chairs
  """
  fetch data from the table in a streaming manner: "program_chairs"
  """
 program_chairs_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_chairs_stream_cursor_input]! , """filter the rows returned"""
where: program_chairs_bool_exp): [program_chairs! ]! 
  """
  fetch data from the table: "program_columns"
  """
 program_columns("""distinct select on columns"""
distinct_on: [program_columns_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_columns_order_by! ], """filter the rows returned"""
where: program_columns_bool_exp): [program_columns! ]! 
  """
  fetch aggregated fields from the table: "program_columns"
  """
 program_columns_aggregate("""distinct select on columns"""
distinct_on: [program_columns_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_columns_order_by! ], """filter the rows returned"""
where: program_columns_bool_exp): program_columns_aggregate! 
  """fetch data from the table: "program_columns" using primary key columns"""
 program_columns_by_pk(id: Int! ): program_columns
  """
  fetch data from the table in a streaming manner: "program_columns"
  """
 program_columns_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_columns_stream_cursor_input]! , """filter the rows returned"""
where: program_columns_bool_exp): [program_columns! ]! 
  """
  fetch data from the table: "program_columns_zoom_users"
  """
 program_columns_zoom_users("""distinct select on columns"""
distinct_on: [program_columns_zoom_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_columns_zoom_users_order_by! ], """filter the rows returned"""
where: program_columns_zoom_users_bool_exp): [program_columns_zoom_users! ]! 
  """
  fetch aggregated fields from the table: "program_columns_zoom_users"
  """
 program_columns_zoom_users_aggregate("""distinct select on columns"""
distinct_on: [program_columns_zoom_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_columns_zoom_users_order_by! ], """filter the rows returned"""
where: program_columns_zoom_users_bool_exp): program_columns_zoom_users_aggregate! 
  """
  fetch data from the table: "program_columns_zoom_users" using primary key columns
  """
 program_columns_zoom_users_by_pk(id: Int! ): program_columns_zoom_users
  """
  fetch data from the table in a streaming manner: "program_columns_zoom_users"
  """
 program_columns_zoom_users_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_columns_zoom_users_stream_cursor_input]! , """filter the rows returned"""
where: program_columns_zoom_users_bool_exp): [program_columns_zoom_users! ]! 
  """An array relationship"""
 program_dates("""distinct select on columns"""
distinct_on: [program_dates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_dates_order_by! ], """filter the rows returned"""
where: program_dates_bool_exp): [program_dates! ]! 
  """An aggregate relationship"""
 program_dates_aggregate("""distinct select on columns"""
distinct_on: [program_dates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_dates_order_by! ], """filter the rows returned"""
where: program_dates_bool_exp): program_dates_aggregate! 
  """fetch data from the table: "program_dates" using primary key columns"""
 program_dates_by_pk(id: Int! ): program_dates
  """
  fetch data from the table in a streaming manner: "program_dates"
  """
 program_dates_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_dates_stream_cursor_input]! , """filter the rows returned"""
where: program_dates_bool_exp): [program_dates! ]! 
  """
  fetch data from the table: "program_downloads"
  """
 program_downloads("""distinct select on columns"""
distinct_on: [program_downloads_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_downloads_order_by! ], """filter the rows returned"""
where: program_downloads_bool_exp): [program_downloads! ]! 
  """
  fetch aggregated fields from the table: "program_downloads"
  """
 program_downloads_aggregate("""distinct select on columns"""
distinct_on: [program_downloads_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_downloads_order_by! ], """filter the rows returned"""
where: program_downloads_bool_exp): program_downloads_aggregate! 
  """
  fetch data from the table: "program_downloads" using primary key columns
  """
 program_downloads_by_pk(program_download_id: Int! ): program_downloads
  """
  fetch data from the table in a streaming manner: "program_downloads"
  """
 program_downloads_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_downloads_stream_cursor_input]! , """filter the rows returned"""
where: program_downloads_bool_exp): [program_downloads! ]! 
  """
  fetch data from the table: "program_info"
  """
 program_info("""distinct select on columns"""
distinct_on: [program_info_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_info_order_by! ], """filter the rows returned"""
where: program_info_bool_exp): [program_info! ]! 
  """
  fetch aggregated fields from the table: "program_info"
  """
 program_info_aggregate("""distinct select on columns"""
distinct_on: [program_info_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_info_order_by! ], """filter the rows returned"""
where: program_info_bool_exp): program_info_aggregate! 
  """fetch data from the table: "program_info" using primary key columns"""
 program_info_by_pk(program_info_id: Int! ): program_info
  """
  fetch data from the table in a streaming manner: "program_info"
  """
 program_info_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_info_stream_cursor_input]! , """filter the rows returned"""
where: program_info_bool_exp): [program_info! ]! 
  """
  fetch data from the table: "program_information"
  """
 program_information("""distinct select on columns"""
distinct_on: [program_information_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_information_order_by! ], """filter the rows returned"""
where: program_information_bool_exp): [program_information! ]! 
  """
  fetch aggregated fields from the table: "program_information"
  """
 program_information_aggregate("""distinct select on columns"""
distinct_on: [program_information_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_information_order_by! ], """filter the rows returned"""
where: program_information_bool_exp): program_information_aggregate! 
  """
  fetch data from the table: "program_information" using primary key columns
  """
 program_information_by_pk(program_information_id: Int! ): program_information
  """
  fetch data from the table in a streaming manner: "program_information"
  """
 program_information_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_information_stream_cursor_input]! , """filter the rows returned"""
where: program_information_bool_exp): [program_information! ]! 
  """
  fetch data from the table: "program_locations"
  """
 program_locations("""distinct select on columns"""
distinct_on: [program_locations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_locations_order_by! ], """filter the rows returned"""
where: program_locations_bool_exp): [program_locations! ]! 
  """
  fetch aggregated fields from the table: "program_locations"
  """
 program_locations_aggregate("""distinct select on columns"""
distinct_on: [program_locations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_locations_order_by! ], """filter the rows returned"""
where: program_locations_bool_exp): program_locations_aggregate! 
  """
  fetch data from the table: "program_locations" using primary key columns
  """
 program_locations_by_pk(program_location_id: Int! ): program_locations
  """
  fetch data from the table in a streaming manner: "program_locations"
  """
 program_locations_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_locations_stream_cursor_input]! , """filter the rows returned"""
where: program_locations_bool_exp): [program_locations! ]! 
  """
  fetch data from the table: "program_session_attachments"
  """
 program_session_activities("""distinct select on columns"""
distinct_on: [program_session_activities_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_activities_order_by! ], """filter the rows returned"""
where: program_session_activities_bool_exp): [program_session_activities! ]! 
  """
  fetch aggregated fields from the table: "program_session_attachments"
  """
 program_session_activities_aggregate("""distinct select on columns"""
distinct_on: [program_session_activities_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_activities_order_by! ], """filter the rows returned"""
where: program_session_activities_bool_exp): program_session_activities_aggregate! 
  """
  fetch data from the table in a streaming manner: "program_session_attachments"
  """
 program_session_activities_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_session_activities_stream_cursor_input]! , """filter the rows returned"""
where: program_session_activities_bool_exp): [program_session_activities! ]! 
  """
  fetch data from the table: "program_session_categories"
  """
 program_session_categories("""distinct select on columns"""
distinct_on: [program_session_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_categories_order_by! ], """filter the rows returned"""
where: program_session_categories_bool_exp): [program_session_categories! ]! 
  """
  fetch aggregated fields from the table: "program_session_categories"
  """
 program_session_categories_aggregate("""distinct select on columns"""
distinct_on: [program_session_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_categories_order_by! ], """filter the rows returned"""
where: program_session_categories_bool_exp): program_session_categories_aggregate! 
  """
  fetch data from the table: "program_session_categories" using primary key columns
  """
 program_session_categories_by_pk(id: Int! ): program_session_categories
  """
  fetch data from the table in a streaming manner: "program_session_categories"
  """
 program_session_categories_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_session_categories_stream_cursor_input]! , """filter the rows returned"""
where: program_session_categories_bool_exp): [program_session_categories! ]! 
  """
  fetch data from the table: "program_session_category_type"
  """
 program_session_category_type("""distinct select on columns"""
distinct_on: [program_session_category_type_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_category_type_order_by! ], """filter the rows returned"""
where: program_session_category_type_bool_exp): [program_session_category_type! ]! 
  """
  fetch aggregated fields from the table: "program_session_category_type"
  """
 program_session_category_type_aggregate("""distinct select on columns"""
distinct_on: [program_session_category_type_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_category_type_order_by! ], """filter the rows returned"""
where: program_session_category_type_bool_exp): program_session_category_type_aggregate! 
  """
  fetch data from the table: "program_session_category_type" using primary key columns
  """
 program_session_category_type_by_pk(id: Int! ): program_session_category_type
  """
  fetch data from the table in a streaming manner: "program_session_category_type"
  """
 program_session_category_type_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_session_category_type_stream_cursor_input]! , """filter the rows returned"""
where: program_session_category_type_bool_exp): [program_session_category_type! ]! 
  """
  fetch data from the table: "program_session_sponsors"
  """
 program_session_sponsors("""distinct select on columns"""
distinct_on: [program_session_sponsors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_sponsors_order_by! ], """filter the rows returned"""
where: program_session_sponsors_bool_exp): [program_session_sponsors! ]! 
  """
  fetch aggregated fields from the table: "program_session_sponsors"
  """
 program_session_sponsors_aggregate("""distinct select on columns"""
distinct_on: [program_session_sponsors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_sponsors_order_by! ], """filter the rows returned"""
where: program_session_sponsors_bool_exp): program_session_sponsors_aggregate! 
  """
  fetch data from the table in a streaming manner: "program_session_sponsors"
  """
 program_session_sponsors_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_session_sponsors_stream_cursor_input]! , """filter the rows returned"""
where: program_session_sponsors_bool_exp): [program_session_sponsors! ]! 
  """
  fetch data from the table: "program_session_zoom_meetings"
  """
 program_session_zoom_meetings("""distinct select on columns"""
distinct_on: [program_session_zoom_meetings_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_zoom_meetings_order_by! ], """filter the rows returned"""
where: program_session_zoom_meetings_bool_exp): [program_session_zoom_meetings! ]! 
  """
  fetch aggregated fields from the table: "program_session_zoom_meetings"
  """
 program_session_zoom_meetings_aggregate("""distinct select on columns"""
distinct_on: [program_session_zoom_meetings_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_session_zoom_meetings_order_by! ], """filter the rows returned"""
where: program_session_zoom_meetings_bool_exp): program_session_zoom_meetings_aggregate! 
  """
  fetch data from the table: "program_session_zoom_meetings" using primary key columns
  """
 program_session_zoom_meetings_by_pk(id: Int! ): program_session_zoom_meetings
  """
  fetch data from the table in a streaming manner: "program_session_zoom_meetings"
  """
 program_session_zoom_meetings_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_session_zoom_meetings_stream_cursor_input]! , """filter the rows returned"""
where: program_session_zoom_meetings_bool_exp): [program_session_zoom_meetings! ]! 
  """An array relationship"""
 program_sessions("""distinct select on columns"""
distinct_on: [program_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_order_by! ], """filter the rows returned"""
where: program_sessions_bool_exp): [program_sessions! ]! 
  """An aggregate relationship"""
 program_sessions_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_order_by! ], """filter the rows returned"""
where: program_sessions_bool_exp): program_sessions_aggregate! 
  """
  fetch data from the table: "program_sessions_authors"
  """
 program_sessions_authors("""distinct select on columns"""
distinct_on: [program_sessions_authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_authors_order_by! ], """filter the rows returned"""
where: program_sessions_authors_bool_exp): [program_sessions_authors! ]! 
  """
  fetch aggregated fields from the table: "program_sessions_authors"
  """
 program_sessions_authors_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_authors_order_by! ], """filter the rows returned"""
where: program_sessions_authors_bool_exp): program_sessions_authors_aggregate! 
  """
  fetch data from the table in a streaming manner: "program_sessions_authors"
  """
 program_sessions_authors_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_sessions_authors_stream_cursor_input]! , """filter the rows returned"""
where: program_sessions_authors_bool_exp): [program_sessions_authors! ]! 
  """
  fetch data from the table: "program_sessions" using primary key columns
  """
 program_sessions_by_pk(id: Int! ): program_sessions
  """
  fetch data from the table: "program_sessions_categories"
  """
 program_sessions_categories("""distinct select on columns"""
distinct_on: [program_sessions_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_categories_order_by! ], """filter the rows returned"""
where: program_sessions_categories_bool_exp): [program_sessions_categories! ]! 
  """
  fetch aggregated fields from the table: "program_sessions_categories"
  """
 program_sessions_categories_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_categories_order_by! ], """filter the rows returned"""
where: program_sessions_categories_bool_exp): program_sessions_categories_aggregate! 
  """
  fetch data from the table: "program_sessions_categories" using primary key columns
  """
 program_sessions_categories_by_pk(id: Int! ): program_sessions_categories
  """
  fetch data from the table in a streaming manner: "program_sessions_categories"
  """
 program_sessions_categories_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_sessions_categories_stream_cursor_input]! , """filter the rows returned"""
where: program_sessions_categories_bool_exp): [program_sessions_categories! ]! 
  """An array relationship"""
 program_sessions_chairs("""distinct select on columns"""
distinct_on: [program_sessions_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_chairs_order_by! ], """filter the rows returned"""
where: program_sessions_chairs_bool_exp): [program_sessions_chairs! ]! 
  """An aggregate relationship"""
 program_sessions_chairs_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_chairs_order_by! ], """filter the rows returned"""
where: program_sessions_chairs_bool_exp): program_sessions_chairs_aggregate! 
  """
  fetch data from the table: "program_sessions_chairs" using primary key columns
  """
 program_sessions_chairs_by_pk(id: Int! ): program_sessions_chairs
  """
  fetch data from the table in a streaming manner: "program_sessions_chairs"
  """
 program_sessions_chairs_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_sessions_chairs_stream_cursor_input]! , """filter the rows returned"""
where: program_sessions_chairs_bool_exp): [program_sessions_chairs! ]! 
  """An array relationship"""
 program_sessions_comments("""distinct select on columns"""
distinct_on: [program_sessions_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_comments_order_by! ], """filter the rows returned"""
where: program_sessions_comments_bool_exp): [program_sessions_comments! ]! 
  """An aggregate relationship"""
 program_sessions_comments_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_comments_order_by! ], """filter the rows returned"""
where: program_sessions_comments_bool_exp): program_sessions_comments_aggregate! 
  """
  fetch data from the table: "program_sessions_comments" using primary key columns
  """
 program_sessions_comments_by_pk(session_comment_id: Int! ): program_sessions_comments
  """
  fetch data from the table in a streaming manner: "program_sessions_comments"
  """
 program_sessions_comments_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_sessions_comments_stream_cursor_input]! , """filter the rows returned"""
where: program_sessions_comments_bool_exp): [program_sessions_comments! ]! 
  """An array relationship"""
 program_sessions_program_columns("""distinct select on columns"""
distinct_on: [program_sessions_program_columns_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_program_columns_order_by! ], """filter the rows returned"""
where: program_sessions_program_columns_bool_exp): [program_sessions_program_columns! ]! 
  """An aggregate relationship"""
 program_sessions_program_columns_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_program_columns_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_program_columns_order_by! ], """filter the rows returned"""
where: program_sessions_program_columns_bool_exp): program_sessions_program_columns_aggregate! 
  """
  fetch data from the table in a streaming manner: "program_sessions_program_columns"
  """
 program_sessions_program_columns_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_sessions_program_columns_stream_cursor_input]! , """filter the rows returned"""
where: program_sessions_program_columns_bool_exp): [program_sessions_program_columns! ]! 
  """
  fetch data from the table in a streaming manner: "program_sessions"
  """
 program_sessions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_sessions_stream_cursor_input]! , """filter the rows returned"""
where: program_sessions_bool_exp): [program_sessions! ]! 
  """An array relationship"""
 program_sessions_submissions("""distinct select on columns"""
distinct_on: [program_sessions_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_submissions_order_by! ], """filter the rows returned"""
where: program_sessions_submissions_bool_exp): [program_sessions_submissions! ]! 
  """An aggregate relationship"""
 program_sessions_submissions_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_submissions_order_by! ], """filter the rows returned"""
where: program_sessions_submissions_bool_exp): program_sessions_submissions_aggregate! 
  """
  fetch data from the table in a streaming manner: "program_sessions_submissions"
  """
 program_sessions_submissions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_sessions_submissions_stream_cursor_input]! , """filter the rows returned"""
where: program_sessions_submissions_bool_exp): [program_sessions_submissions! ]! 
  """An array relationship"""
 program_sessions_symposia("""distinct select on columns"""
distinct_on: [program_sessions_symposia_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_symposia_order_by! ], """filter the rows returned"""
where: program_sessions_symposia_bool_exp): [program_sessions_symposia! ]! 
  """An aggregate relationship"""
 program_sessions_symposia_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_symposia_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_symposia_order_by! ], """filter the rows returned"""
where: program_sessions_symposia_bool_exp): program_sessions_symposia_aggregate! 
  """
  fetch data from the table in a streaming manner: "program_sessions_symposia"
  """
 program_sessions_symposia_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_sessions_symposia_stream_cursor_input]! , """filter the rows returned"""
where: program_sessions_symposia_bool_exp): [program_sessions_symposia! ]! 
  """
  fetch data from the table: "program_sponsors"
  """
 program_sponsors("""distinct select on columns"""
distinct_on: [program_sponsors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sponsors_order_by! ], """filter the rows returned"""
where: program_sponsors_bool_exp): [program_sponsors! ]! 
  """
  fetch aggregated fields from the table: "program_sponsors"
  """
 program_sponsors_aggregate("""distinct select on columns"""
distinct_on: [program_sponsors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sponsors_order_by! ], """filter the rows returned"""
where: program_sponsors_bool_exp): program_sponsors_aggregate! 
  """
  fetch data from the table: "program_sponsors" using primary key columns
  """
 program_sponsors_by_pk(id: Int! ): program_sponsors
  """
  fetch data from the table in a streaming manner: "program_sponsors"
  """
 program_sponsors_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_sponsors_stream_cursor_input]! , """filter the rows returned"""
where: program_sponsors_bool_exp): [program_sponsors! ]! 
  """An array relationship"""
 program_submissions_comments("""distinct select on columns"""
distinct_on: [program_submissions_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_submissions_comments_order_by! ], """filter the rows returned"""
where: program_submissions_comments_bool_exp): [program_submissions_comments! ]! 
  """An aggregate relationship"""
 program_submissions_comments_aggregate("""distinct select on columns"""
distinct_on: [program_submissions_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_submissions_comments_order_by! ], """filter the rows returned"""
where: program_submissions_comments_bool_exp): program_submissions_comments_aggregate! 
  """
  fetch data from the table: "program_submissions_comments" using primary key columns
  """
 program_submissions_comments_by_pk(id: Int! ): program_submissions_comments
  """
  fetch data from the table in a streaming manner: "program_submissions_comments"
  """
 program_submissions_comments_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_submissions_comments_stream_cursor_input]! , """filter the rows returned"""
where: program_submissions_comments_bool_exp): [program_submissions_comments! ]! 
  """An array relationship"""
 program_symposium_comments("""distinct select on columns"""
distinct_on: [program_symposium_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_symposium_comments_order_by! ], """filter the rows returned"""
where: program_symposium_comments_bool_exp): [program_symposium_comments! ]! 
  """An aggregate relationship"""
 program_symposium_comments_aggregate("""distinct select on columns"""
distinct_on: [program_symposium_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_symposium_comments_order_by! ], """filter the rows returned"""
where: program_symposium_comments_bool_exp): program_symposium_comments_aggregate! 
  """
  fetch data from the table: "program_symposium_comments" using primary key columns
  """
 program_symposium_comments_by_pk(program_symposium_comment_id: Int! ): program_symposium_comments
  """
  fetch data from the table in a streaming manner: "program_symposium_comments"
  """
 program_symposium_comments_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_symposium_comments_stream_cursor_input]! , """filter the rows returned"""
where: program_symposium_comments_bool_exp): [program_symposium_comments! ]! 
  """
  fetch data from the table: "program_tabs"
  """
 program_tabs("""distinct select on columns"""
distinct_on: [program_tabs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_tabs_order_by! ], """filter the rows returned"""
where: program_tabs_bool_exp): [program_tabs! ]! 
  """
  fetch aggregated fields from the table: "program_tabs"
  """
 program_tabs_aggregate("""distinct select on columns"""
distinct_on: [program_tabs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_tabs_order_by! ], """filter the rows returned"""
where: program_tabs_bool_exp): program_tabs_aggregate! 
  """
  fetch data from the table in a streaming manner: "program_tabs"
  """
 program_tabs_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_tabs_stream_cursor_input]! , """filter the rows returned"""
where: program_tabs_bool_exp): [program_tabs! ]! 
  """
  fetch data from the table: "program_tracks"
  """
 program_tracks("""distinct select on columns"""
distinct_on: [program_tracks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_tracks_order_by! ], """filter the rows returned"""
where: program_tracks_bool_exp): [program_tracks! ]! 
  """
  fetch aggregated fields from the table: "program_tracks"
  """
 program_tracks_aggregate("""distinct select on columns"""
distinct_on: [program_tracks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_tracks_order_by! ], """filter the rows returned"""
where: program_tracks_bool_exp): program_tracks_aggregate! 
  """fetch data from the table: "program_tracks" using primary key columns"""
 program_tracks_by_pk(program_track_id: Int! ): program_tracks
  """
  fetch data from the table in a streaming manner: "program_tracks"
  """
 program_tracks_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_tracks_stream_cursor_input]! , """filter the rows returned"""
where: program_tracks_bool_exp): [program_tracks! ]! 
  """
  fetch data from the table: "program_types"
  """
 program_types("""distinct select on columns"""
distinct_on: [program_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_types_order_by! ], """filter the rows returned"""
where: program_types_bool_exp): [program_types! ]! 
  """
  fetch aggregated fields from the table: "program_types"
  """
 program_types_aggregate("""distinct select on columns"""
distinct_on: [program_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_types_order_by! ], """filter the rows returned"""
where: program_types_bool_exp): program_types_aggregate! 
  """fetch data from the table: "program_types" using primary key columns"""
 program_types_by_pk(program_type_id: Int! ): program_types
  """
  fetch data from the table in a streaming manner: "program_types"
  """
 program_types_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [program_types_stream_cursor_input]! , """filter the rows returned"""
where: program_types_bool_exp): [program_types! ]! 
  """
  fetch data from the table: "question_response_versions"
  """
 question_response_versions("""distinct select on columns"""
distinct_on: [question_response_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [question_response_versions_order_by! ], """filter the rows returned"""
where: question_response_versions_bool_exp): [question_response_versions! ]! 
  """
  fetch aggregated fields from the table: "question_response_versions"
  """
 question_response_versions_aggregate("""distinct select on columns"""
distinct_on: [question_response_versions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [question_response_versions_order_by! ], """filter the rows returned"""
where: question_response_versions_bool_exp): question_response_versions_aggregate! 
  """
  fetch data from the table: "question_response_versions" using primary key columns
  """
 question_response_versions_by_pk(id: bigint! ): question_response_versions
  """
  fetch data from the table in a streaming manner: "question_response_versions"
  """
 question_response_versions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [question_response_versions_stream_cursor_input]! , """filter the rows returned"""
where: question_response_versions_bool_exp): [question_response_versions! ]! 
  """
  fetch data from the table: "question_responses"
  """
 question_responses("""distinct select on columns"""
distinct_on: [question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [question_responses_order_by! ], """filter the rows returned"""
where: question_responses_bool_exp): [question_responses! ]! 
  """
  fetch aggregated fields from the table: "question_responses"
  """
 question_responses_aggregate("""distinct select on columns"""
distinct_on: [question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [question_responses_order_by! ], """filter the rows returned"""
where: question_responses_bool_exp): question_responses_aggregate! 
  """
  fetch data from the table: "question_responses" using primary key columns
  """
 question_responses_by_pk(id: Int! ): question_responses
  """
  fetch data from the table in a streaming manner: "question_responses"
  """
 question_responses_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [question_responses_stream_cursor_input]! , """filter the rows returned"""
where: question_responses_bool_exp): [question_responses! ]! 
  """
  fetch data from the table: "question_responses_view"
  """
 question_responses_view("""distinct select on columns"""
distinct_on: [question_responses_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [question_responses_view_order_by! ], """filter the rows returned"""
where: question_responses_view_bool_exp): [question_responses_view! ]! 
  """
  fetch aggregated fields from the table: "question_responses_view"
  """
 question_responses_view_aggregate("""distinct select on columns"""
distinct_on: [question_responses_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [question_responses_view_order_by! ], """filter the rows returned"""
where: question_responses_view_bool_exp): question_responses_view_aggregate! 
  """
  fetch data from the table in a streaming manner: "question_responses_view"
  """
 question_responses_view_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [question_responses_view_stream_cursor_input]! , """filter the rows returned"""
where: question_responses_view_bool_exp): [question_responses_view! ]! 
  """An array relationship"""
 questions("""distinct select on columns"""
distinct_on: [questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_order_by! ], """filter the rows returned"""
where: questions_bool_exp): [questions! ]! 
  """An aggregate relationship"""
 questions_aggregate("""distinct select on columns"""
distinct_on: [questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_order_by! ], """filter the rows returned"""
where: questions_bool_exp): questions_aggregate! 
  """fetch data from the table: "questions" using primary key columns"""
 questions_by_pk(id: Int! ): questions
  """An array relationship"""
 questions_stage_options("""distinct select on columns"""
distinct_on: [questions_stage_options_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_stage_options_order_by! ], """filter the rows returned"""
where: questions_stage_options_bool_exp): [questions_stage_options! ]! 
  """An aggregate relationship"""
 questions_stage_options_aggregate("""distinct select on columns"""
distinct_on: [questions_stage_options_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_stage_options_order_by! ], """filter the rows returned"""
where: questions_stage_options_bool_exp): questions_stage_options_aggregate! 
  """
  fetch data from the table: "questions_stage_options" using primary key columns
  """
 questions_stage_options_by_pk(id: Int! ): questions_stage_options
  """
  fetch data from the table in a streaming manner: "questions_stage_options"
  """
 questions_stage_options_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [questions_stage_options_stream_cursor_input]! , """filter the rows returned"""
where: questions_stage_options_bool_exp): [questions_stage_options! ]! 
  """
  fetch data from the table: "questions_stage_options_view"
  """
 questions_stage_options_view("""distinct select on columns"""
distinct_on: [questions_stage_options_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_stage_options_view_order_by! ], """filter the rows returned"""
where: questions_stage_options_view_bool_exp): [questions_stage_options_view! ]! 
  """
  fetch aggregated fields from the table: "questions_stage_options_view"
  """
 questions_stage_options_view_aggregate("""distinct select on columns"""
distinct_on: [questions_stage_options_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_stage_options_view_order_by! ], """filter the rows returned"""
where: questions_stage_options_view_bool_exp): questions_stage_options_view_aggregate! 
  """
  fetch data from the table in a streaming manner: "questions_stage_options_view"
  """
 questions_stage_options_view_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [questions_stage_options_view_stream_cursor_input]! , """filter the rows returned"""
where: questions_stage_options_view_bool_exp): [questions_stage_options_view! ]! 
  """
  fetch data from the table in a streaming manner: "questions"
  """
 questions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [questions_stream_cursor_input]! , """filter the rows returned"""
where: questions_bool_exp): [questions! ]! 
  """
  fetch data from the table: "questions_view"
  """
 questions_view("""distinct select on columns"""
distinct_on: [questions_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_view_order_by! ], """filter the rows returned"""
where: questions_view_bool_exp): [questions_view! ]! 
  """
  fetch aggregated fields from the table: "questions_view"
  """
 questions_view_aggregate("""distinct select on columns"""
distinct_on: [questions_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [questions_view_order_by! ], """filter the rows returned"""
where: questions_view_bool_exp): questions_view_aggregate! 
  """
  fetch data from the table in a streaming manner: "questions_view"
  """
 questions_view_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [questions_view_stream_cursor_input]! , """filter the rows returned"""
where: questions_view_bool_exp): [questions_view! ]! 
  """
  fetch data from the table: "ratings"
  """
 ratings("""distinct select on columns"""
distinct_on: [ratings_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ratings_order_by! ], """filter the rows returned"""
where: ratings_bool_exp): [ratings! ]! 
  """
  fetch aggregated fields from the table: "ratings"
  """
 ratings_aggregate("""distinct select on columns"""
distinct_on: [ratings_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ratings_order_by! ], """filter the rows returned"""
where: ratings_bool_exp): ratings_aggregate! 
  """fetch data from the table: "ratings" using primary key columns"""
 ratings_by_pk(id: Int! ): ratings
  """
  fetch data from the table in a streaming manner: "ratings"
  """
 ratings_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [ratings_stream_cursor_input]! , """filter the rows returned"""
where: ratings_bool_exp): [ratings! ]! 
  """
  fetch data from the table: "read_by_user_program_comments"
  """
 read_by_user_program_comments("""distinct select on columns"""
distinct_on: [read_by_user_program_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [read_by_user_program_comments_order_by! ], """filter the rows returned"""
where: read_by_user_program_comments_bool_exp): [read_by_user_program_comments! ]! 
  """
  fetch aggregated fields from the table: "read_by_user_program_comments"
  """
 read_by_user_program_comments_aggregate("""distinct select on columns"""
distinct_on: [read_by_user_program_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [read_by_user_program_comments_order_by! ], """filter the rows returned"""
where: read_by_user_program_comments_bool_exp): read_by_user_program_comments_aggregate! 
  """
  fetch data from the table: "read_by_user_program_comments" using primary key columns
  """
 read_by_user_program_comments_by_pk(id: Int! ): read_by_user_program_comments
  """
  fetch data from the table in a streaming manner: "read_by_user_program_comments"
  """
 read_by_user_program_comments_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [read_by_user_program_comments_stream_cursor_input]! , """filter the rows returned"""
where: read_by_user_program_comments_bool_exp): [read_by_user_program_comments! ]! 
  """
  fetch data from the table: "revenues"
  """
 revenues("""distinct select on columns"""
distinct_on: [revenues_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [revenues_order_by! ], """filter the rows returned"""
where: revenues_bool_exp): [revenues! ]! 
  """
  fetch aggregated fields from the table: "revenues"
  """
 revenues_aggregate("""distinct select on columns"""
distinct_on: [revenues_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [revenues_order_by! ], """filter the rows returned"""
where: revenues_bool_exp): revenues_aggregate! 
  """fetch data from the table: "revenues" using primary key columns"""
 revenues_by_pk(month: Int! , year: Int! ): revenues
  """
  fetch data from the table in a streaming manner: "revenues"
  """
 revenues_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [revenues_stream_cursor_input]! , """filter the rows returned"""
where: revenues_bool_exp): [revenues! ]! 
  """An array relationship"""
 review_dates("""distinct select on columns"""
distinct_on: [review_dates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [review_dates_order_by! ], """filter the rows returned"""
where: review_dates_bool_exp): [review_dates! ]! 
  """An aggregate relationship"""
 review_dates_aggregate("""distinct select on columns"""
distinct_on: [review_dates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [review_dates_order_by! ], """filter the rows returned"""
where: review_dates_bool_exp): review_dates_aggregate! 
  """fetch data from the table: "review_dates" using primary key columns"""
 review_dates_by_pk(id: Int! ): review_dates
  """
  fetch data from the table in a streaming manner: "review_dates"
  """
 review_dates_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [review_dates_stream_cursor_input]! , """filter the rows returned"""
where: review_dates_bool_exp): [review_dates! ]! 
  """
  fetch data from the table: "reviewer_admin_notes"
  """
 reviewer_admin_notes("""distinct select on columns"""
distinct_on: [reviewer_admin_notes_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_admin_notes_order_by! ], """filter the rows returned"""
where: reviewer_admin_notes_bool_exp): [reviewer_admin_notes! ]! 
  """
  fetch aggregated fields from the table: "reviewer_admin_notes"
  """
 reviewer_admin_notes_aggregate("""distinct select on columns"""
distinct_on: [reviewer_admin_notes_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_admin_notes_order_by! ], """filter the rows returned"""
where: reviewer_admin_notes_bool_exp): reviewer_admin_notes_aggregate! 
  """
  fetch data from the table in a streaming manner: "reviewer_admin_notes"
  """
 reviewer_admin_notes_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [reviewer_admin_notes_stream_cursor_input]! , """filter the rows returned"""
where: reviewer_admin_notes_bool_exp): [reviewer_admin_notes! ]! 
  """An array relationship"""
 reviewer_categories("""distinct select on columns"""
distinct_on: [reviewer_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_categories_order_by! ], """filter the rows returned"""
where: reviewer_categories_bool_exp): [reviewer_categories! ]! 
  """An aggregate relationship"""
 reviewer_categories_aggregate("""distinct select on columns"""
distinct_on: [reviewer_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_categories_order_by! ], """filter the rows returned"""
where: reviewer_categories_bool_exp): reviewer_categories_aggregate! 
  """
  fetch data from the table in a streaming manner: "reviewer_categories"
  """
 reviewer_categories_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [reviewer_categories_stream_cursor_input]! , """filter the rows returned"""
where: reviewer_categories_bool_exp): [reviewer_categories! ]! 
  """An array relationship"""
 reviewer_inline_comments("""distinct select on columns"""
distinct_on: [reviewer_inline_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_inline_comments_order_by! ], """filter the rows returned"""
where: reviewer_inline_comments_bool_exp): [reviewer_inline_comments! ]! 
  """An aggregate relationship"""
 reviewer_inline_comments_aggregate("""distinct select on columns"""
distinct_on: [reviewer_inline_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_inline_comments_order_by! ], """filter the rows returned"""
where: reviewer_inline_comments_bool_exp): reviewer_inline_comments_aggregate! 
  """
  fetch data from the table: "reviewer_inline_comments" using primary key columns
  """
 reviewer_inline_comments_by_pk(id: uuid! ): reviewer_inline_comments
  """
  fetch data from the table in a streaming manner: "reviewer_inline_comments"
  """
 reviewer_inline_comments_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [reviewer_inline_comments_stream_cursor_input]! , """filter the rows returned"""
where: reviewer_inline_comments_bool_exp): [reviewer_inline_comments! ]! 
  """An array relationship"""
 reviewer_question_responses("""distinct select on columns"""
distinct_on: [reviewer_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_question_responses_order_by! ], """filter the rows returned"""
where: reviewer_question_responses_bool_exp): [reviewer_question_responses! ]! 
  """An aggregate relationship"""
 reviewer_question_responses_aggregate("""distinct select on columns"""
distinct_on: [reviewer_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_question_responses_order_by! ], """filter the rows returned"""
where: reviewer_question_responses_bool_exp): reviewer_question_responses_aggregate! 
  """
  fetch data from the table: "reviewer_question_responses" using primary key columns
  """
 reviewer_question_responses_by_pk(id: Int! ): reviewer_question_responses
  """
  fetch data from the table in a streaming manner: "reviewer_question_responses"
  """
 reviewer_question_responses_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [reviewer_question_responses_stream_cursor_input]! , """filter the rows returned"""
where: reviewer_question_responses_bool_exp): [reviewer_question_responses! ]! 
  """An array relationship"""
 reviewer_questions("""distinct select on columns"""
distinct_on: [reviewer_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_questions_order_by! ], """filter the rows returned"""
where: reviewer_questions_bool_exp): [reviewer_questions! ]! 
  """An aggregate relationship"""
 reviewer_questions_aggregate("""distinct select on columns"""
distinct_on: [reviewer_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_questions_order_by! ], """filter the rows returned"""
where: reviewer_questions_bool_exp): reviewer_questions_aggregate! 
  """
  fetch data from the table: "reviewer_questions" using primary key columns
  """
 reviewer_questions_by_pk(id: Int! ): reviewer_questions
  """
  fetch data from the table in a streaming manner: "reviewer_questions"
  """
 reviewer_questions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [reviewer_questions_stream_cursor_input]! , """filter the rows returned"""
where: reviewer_questions_bool_exp): [reviewer_questions! ]! 
  """An array relationship"""
 reviews("""distinct select on columns"""
distinct_on: [reviews_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviews_order_by! ], """filter the rows returned"""
where: reviews_bool_exp): [reviews! ]! 
  """An aggregate relationship"""
 reviews_aggregate("""distinct select on columns"""
distinct_on: [reviews_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviews_order_by! ], """filter the rows returned"""
where: reviews_bool_exp): reviews_aggregate! 
  """fetch data from the table: "reviews" using primary key columns"""
 reviews_by_pk(id: Int! ): reviews
  """
  fetch data from the table in a streaming manner: "reviews"
  """
 reviews_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [reviews_stream_cursor_input]! , """filter the rows returned"""
where: reviews_bool_exp): [reviews! ]! 
  """
  fetch data from the table: "search_authors"
  """
 search_authors("""distinct select on columns"""
distinct_on: [search_authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_authors_order_by! ], """filter the rows returned"""
where: search_authors_bool_exp): [search_authors! ]! 
  """
  fetch aggregated fields from the table: "search_authors"
  """
 search_authors_aggregate("""distinct select on columns"""
distinct_on: [search_authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_authors_order_by! ], """filter the rows returned"""
where: search_authors_bool_exp): search_authors_aggregate! 
  """
  execute function "search_authors_fuzzy" which returns "search_authors"
  """
 search_authors_fuzzy("""
    input parameters for function "search_authors_fuzzy"
    """
args: search_authors_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_authors_order_by! ], """filter the rows returned"""
where: search_authors_bool_exp): [search_authors! ]! 
  """
  execute function "search_authors_fuzzy" and query aggregates on result of table type "search_authors"
  """
 search_authors_fuzzy_aggregate("""
    input parameters for function "search_authors_fuzzy_aggregate"
    """
args: search_authors_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_authors_order_by! ], """filter the rows returned"""
where: search_authors_bool_exp): search_authors_aggregate! 
  """
  fetch data from the table in a streaming manner: "search_authors"
  """
 search_authors_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [search_authors_stream_cursor_input]! , """filter the rows returned"""
where: search_authors_bool_exp): [search_authors! ]! 
  """
  fetch data from the table: "search_chairs"
  """
 search_chairs("""distinct select on columns"""
distinct_on: [search_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_chairs_order_by! ], """filter the rows returned"""
where: search_chairs_bool_exp): [search_chairs! ]! 
  """
  fetch aggregated fields from the table: "search_chairs"
  """
 search_chairs_aggregate("""distinct select on columns"""
distinct_on: [search_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_chairs_order_by! ], """filter the rows returned"""
where: search_chairs_bool_exp): search_chairs_aggregate! 
  """
  fetch data from the table in a streaming manner: "search_chairs"
  """
 search_chairs_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [search_chairs_stream_cursor_input]! , """filter the rows returned"""
where: search_chairs_bool_exp): [search_chairs! ]! 
  """
  execute function "search_program_session_names_fuzzy" which returns "search_program_sessions"
  """
 search_program_session_names_fuzzy("""
    input parameters for function "search_program_session_names_fuzzy"
    """
args: search_program_session_names_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_program_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_program_sessions_order_by! ], """filter the rows returned"""
where: search_program_sessions_bool_exp): [search_program_sessions! ]! 
  """
  execute function "search_program_session_names_fuzzy" and query aggregates on result of table type "search_program_sessions"
  """
 search_program_session_names_fuzzy_aggregate("""
    input parameters for function "search_program_session_names_fuzzy_aggregate"
    """
args: search_program_session_names_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_program_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_program_sessions_order_by! ], """filter the rows returned"""
where: search_program_sessions_bool_exp): search_program_sessions_aggregate! 
  """
  fetch data from the table: "search_program_sessions"
  """
 search_program_sessions("""distinct select on columns"""
distinct_on: [search_program_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_program_sessions_order_by! ], """filter the rows returned"""
where: search_program_sessions_bool_exp): [search_program_sessions! ]! 
  """
  fetch aggregated fields from the table: "search_program_sessions"
  """
 search_program_sessions_aggregate("""distinct select on columns"""
distinct_on: [search_program_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_program_sessions_order_by! ], """filter the rows returned"""
where: search_program_sessions_bool_exp): search_program_sessions_aggregate! 
  """
  fetch data from the table in a streaming manner: "search_program_sessions"
  """
 search_program_sessions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [search_program_sessions_stream_cursor_input]! , """filter the rows returned"""
where: search_program_sessions_bool_exp): [search_program_sessions! ]! 
  """
  fetch data from the table: "search_question_responses"
  """
 search_question_responses("""distinct select on columns"""
distinct_on: [search_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_question_responses_order_by! ], """filter the rows returned"""
where: search_question_responses_bool_exp): [search_question_responses! ]! 
  """
  fetch aggregated fields from the table: "search_question_responses"
  """
 search_question_responses_aggregate("""distinct select on columns"""
distinct_on: [search_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_question_responses_order_by! ], """filter the rows returned"""
where: search_question_responses_bool_exp): search_question_responses_aggregate! 
  """
  fetch data from the table in a streaming manner: "search_question_responses"
  """
 search_question_responses_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [search_question_responses_stream_cursor_input]! , """filter the rows returned"""
where: search_question_responses_bool_exp): [search_question_responses! ]! 
  """
  execute function "search_session_chairs_fuzzy" which returns "search_chairs"
  """
 search_session_chairs_fuzzy("""
    input parameters for function "search_session_chairs_fuzzy"
    """
args: search_session_chairs_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_chairs_order_by! ], """filter the rows returned"""
where: search_chairs_bool_exp): [search_chairs! ]! 
  """
  execute function "search_session_chairs_fuzzy" and query aggregates on result of table type "search_chairs"
  """
 search_session_chairs_fuzzy_aggregate("""
    input parameters for function "search_session_chairs_fuzzy_aggregate"
    """
args: search_session_chairs_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_chairs_order_by! ], """filter the rows returned"""
where: search_chairs_bool_exp): search_chairs_aggregate! 
  """
  execute function "search_submission_titles_fuzzy" which returns "search_question_responses"
  """
 search_submission_titles_fuzzy("""
    input parameters for function "search_submission_titles_fuzzy"
    """
args: search_submission_titles_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_question_responses_order_by! ], """filter the rows returned"""
where: search_question_responses_bool_exp): [search_question_responses! ]! 
  """
  execute function "search_submission_titles_fuzzy" and query aggregates on result of table type "search_question_responses"
  """
 search_submission_titles_fuzzy_aggregate("""
    input parameters for function "search_submission_titles_fuzzy_aggregate"
    """
args: search_submission_titles_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_question_responses_order_by! ], """filter the rows returned"""
where: search_question_responses_bool_exp): search_question_responses_aggregate! 
  """
  fetch data from the table: "search_symposium_people"
  """
 search_symposium_people("""distinct select on columns"""
distinct_on: [search_symposium_people_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_symposium_people_order_by! ], """filter the rows returned"""
where: search_symposium_people_bool_exp): [search_symposium_people! ]! 
  """
  fetch aggregated fields from the table: "search_symposium_people"
  """
 search_symposium_people_aggregate("""distinct select on columns"""
distinct_on: [search_symposium_people_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_symposium_people_order_by! ], """filter the rows returned"""
where: search_symposium_people_bool_exp): search_symposium_people_aggregate! 
  """
  execute function "search_symposium_people_fuzzy" which returns "search_symposium_people"
  """
 search_symposium_people_fuzzy("""
    input parameters for function "search_symposium_people_fuzzy"
    """
args: search_symposium_people_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_symposium_people_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_symposium_people_order_by! ], """filter the rows returned"""
where: search_symposium_people_bool_exp): [search_symposium_people! ]! 
  """
  execute function "search_symposium_people_fuzzy" and query aggregates on result of table type "search_symposium_people"
  """
 search_symposium_people_fuzzy_aggregate("""
    input parameters for function "search_symposium_people_fuzzy_aggregate"
    """
args: search_symposium_people_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_symposium_people_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_symposium_people_order_by! ], """filter the rows returned"""
where: search_symposium_people_bool_exp): search_symposium_people_aggregate! 
  """
  fetch data from the table in a streaming manner: "search_symposium_people"
  """
 search_symposium_people_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [search_symposium_people_stream_cursor_input]! , """filter the rows returned"""
where: search_symposium_people_bool_exp): [search_symposium_people! ]! 
  """
  fetch data from the table: "search_symposium_people_view"
  """
 search_symposium_people_view("""distinct select on columns"""
distinct_on: [search_symposium_people_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_symposium_people_view_order_by! ], """filter the rows returned"""
where: search_symposium_people_view_bool_exp): [search_symposium_people_view! ]! 
  """
  fetch aggregated fields from the table: "search_symposium_people_view"
  """
 search_symposium_people_view_aggregate("""distinct select on columns"""
distinct_on: [search_symposium_people_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_symposium_people_view_order_by! ], """filter the rows returned"""
where: search_symposium_people_view_bool_exp): search_symposium_people_view_aggregate! 
  """
  fetch data from the table in a streaming manner: "search_symposium_people_view"
  """
 search_symposium_people_view_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [search_symposium_people_view_stream_cursor_input]! , """filter the rows returned"""
where: search_symposium_people_view_bool_exp): [search_symposium_people_view! ]! 
  """
  fetch data from the table: "search_symposium_question_responses"
  """
 search_symposium_question_responses("""distinct select on columns"""
distinct_on: [search_symposium_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_symposium_question_responses_order_by! ], """filter the rows returned"""
where: search_symposium_question_responses_bool_exp): [search_symposium_question_responses! ]! 
  """
  fetch aggregated fields from the table: "search_symposium_question_responses"
  """
 search_symposium_question_responses_aggregate("""distinct select on columns"""
distinct_on: [search_symposium_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_symposium_question_responses_order_by! ], """filter the rows returned"""
where: search_symposium_question_responses_bool_exp): search_symposium_question_responses_aggregate! 
  """
  fetch data from the table in a streaming manner: "search_symposium_question_responses"
  """
 search_symposium_question_responses_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [search_symposium_question_responses_stream_cursor_input]! , """filter the rows returned"""
where: search_symposium_question_responses_bool_exp): [search_symposium_question_responses! ]! 
  """
  execute function "search_symposium_titles_fuzzy" which returns "search_symposium_question_responses"
  """
 search_symposium_titles_fuzzy("""
    input parameters for function "search_symposium_titles_fuzzy"
    """
args: search_symposium_titles_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_symposium_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_symposium_question_responses_order_by! ], """filter the rows returned"""
where: search_symposium_question_responses_bool_exp): [search_symposium_question_responses! ]! 
  """
  execute function "search_symposium_titles_fuzzy" and query aggregates on result of table type "search_symposium_question_responses"
  """
 search_symposium_titles_fuzzy_aggregate("""
    input parameters for function "search_symposium_titles_fuzzy_aggregate"
    """
args: search_symposium_titles_fuzzy_args! , """distinct select on columns"""
distinct_on: [search_symposium_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [search_symposium_question_responses_order_by! ], """filter the rows returned"""
where: search_symposium_question_responses_bool_exp): search_symposium_question_responses_aggregate! 
  """An array relationship"""
 session_chair_affiliations("""distinct select on columns"""
distinct_on: [session_chair_affiliations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chair_affiliations_order_by! ], """filter the rows returned"""
where: session_chair_affiliations_bool_exp): [session_chair_affiliations! ]! 
  """An aggregate relationship"""
 session_chair_affiliations_aggregate("""distinct select on columns"""
distinct_on: [session_chair_affiliations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chair_affiliations_order_by! ], """filter the rows returned"""
where: session_chair_affiliations_bool_exp): session_chair_affiliations_aggregate! 
  """
  fetch data from the table: "session_chair_affiliations" using primary key columns
  """
 session_chair_affiliations_by_pk(affiliation_id: Int! ): session_chair_affiliations
  """
  fetch data from the table in a streaming manner: "session_chair_affiliations"
  """
 session_chair_affiliations_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [session_chair_affiliations_stream_cursor_input]! , """filter the rows returned"""
where: session_chair_affiliations_bool_exp): [session_chair_affiliations! ]! 
  """
  fetch data from the table: "session_chair_fields"
  """
 session_chair_fields("""distinct select on columns"""
distinct_on: [session_chair_fields_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chair_fields_order_by! ], """filter the rows returned"""
where: session_chair_fields_bool_exp): [session_chair_fields! ]! 
  """
  fetch aggregated fields from the table: "session_chair_fields"
  """
 session_chair_fields_aggregate("""distinct select on columns"""
distinct_on: [session_chair_fields_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chair_fields_order_by! ], """filter the rows returned"""
where: session_chair_fields_bool_exp): session_chair_fields_aggregate! 
  """
  fetch data from the table: "session_chair_fields" using primary key columns
  """
 session_chair_fields_by_pk(id: Int! ): session_chair_fields
  """
  fetch data from the table in a streaming manner: "session_chair_fields"
  """
 session_chair_fields_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [session_chair_fields_stream_cursor_input]! , """filter the rows returned"""
where: session_chair_fields_bool_exp): [session_chair_fields! ]! 
  """An array relationship"""
 session_chair_responses("""distinct select on columns"""
distinct_on: [session_chair_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chair_responses_order_by! ], """filter the rows returned"""
where: session_chair_responses_bool_exp): [session_chair_responses! ]! 
  """An aggregate relationship"""
 session_chair_responses_aggregate("""distinct select on columns"""
distinct_on: [session_chair_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chair_responses_order_by! ], """filter the rows returned"""
where: session_chair_responses_bool_exp): session_chair_responses_aggregate! 
  """
  fetch data from the table: "session_chair_responses" using primary key columns
  """
 session_chair_responses_by_pk(id: Int! ): session_chair_responses
  """
  fetch data from the table in a streaming manner: "session_chair_responses"
  """
 session_chair_responses_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [session_chair_responses_stream_cursor_input]! , """filter the rows returned"""
where: session_chair_responses_bool_exp): [session_chair_responses! ]! 
  """
  fetch data from the table: "session_chair_users"
  """
 session_chair_users("""distinct select on columns"""
distinct_on: [session_chair_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chair_users_order_by! ], """filter the rows returned"""
where: session_chair_users_bool_exp): [session_chair_users! ]! 
  """
  fetch aggregated fields from the table: "session_chair_users"
  """
 session_chair_users_aggregate("""distinct select on columns"""
distinct_on: [session_chair_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chair_users_order_by! ], """filter the rows returned"""
where: session_chair_users_bool_exp): session_chair_users_aggregate! 
  """
  fetch data from the table in a streaming manner: "session_chair_users"
  """
 session_chair_users_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [session_chair_users_stream_cursor_input]! , """filter the rows returned"""
where: session_chair_users_bool_exp): [session_chair_users! ]! 
  """An array relationship"""
 session_chairs("""distinct select on columns"""
distinct_on: [session_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chairs_order_by! ], """filter the rows returned"""
where: session_chairs_bool_exp): [session_chairs! ]! 
  """An aggregate relationship"""
 session_chairs_aggregate("""distinct select on columns"""
distinct_on: [session_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chairs_order_by! ], """filter the rows returned"""
where: session_chairs_bool_exp): session_chairs_aggregate! 
  """fetch data from the table: "session_chairs" using primary key columns"""
 session_chairs_by_pk(id: Int! ): session_chairs
  """
  fetch data from the table in a streaming manner: "session_chairs"
  """
 session_chairs_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [session_chairs_stream_cursor_input]! , """filter the rows returned"""
where: session_chairs_bool_exp): [session_chairs! ]! 
  """
  fetch data from the table: "session_links"
  """
 session_links("""distinct select on columns"""
distinct_on: [session_links_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_links_order_by! ], """filter the rows returned"""
where: session_links_bool_exp): [session_links! ]! 
  """
  fetch aggregated fields from the table: "session_links"
  """
 session_links_aggregate("""distinct select on columns"""
distinct_on: [session_links_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_links_order_by! ], """filter the rows returned"""
where: session_links_bool_exp): session_links_aggregate! 
  """
  fetch data from the table in a streaming manner: "session_links"
  """
 session_links_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [session_links_stream_cursor_input]! , """filter the rows returned"""
where: session_links_bool_exp): [session_links! ]! 
  """
  fetch data from the table: "sessions"
  """
 sessions("""distinct select on columns"""
distinct_on: [sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [sessions_order_by! ], """filter the rows returned"""
where: sessions_bool_exp): [sessions! ]! 
  """
  fetch aggregated fields from the table: "sessions"
  """
 sessions_aggregate("""distinct select on columns"""
distinct_on: [sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [sessions_order_by! ], """filter the rows returned"""
where: sessions_bool_exp): sessions_aggregate! 
  """
  fetch data from the table in a streaming manner: "sessions"
  """
 sessions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [sessions_stream_cursor_input]! , """filter the rows returned"""
where: sessions_bool_exp): [sessions! ]! 
  """
  fetch data from the table: "software_updates"
  """
 software_updates("""distinct select on columns"""
distinct_on: [software_updates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [software_updates_order_by! ], """filter the rows returned"""
where: software_updates_bool_exp): [software_updates! ]! 
  """
  fetch aggregated fields from the table: "software_updates"
  """
 software_updates_aggregate("""distinct select on columns"""
distinct_on: [software_updates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [software_updates_order_by! ], """filter the rows returned"""
where: software_updates_bool_exp): software_updates_aggregate! 
  """
  fetch data from the table: "software_updates" using primary key columns
  """
 software_updates_by_pk(software_update_id: Int! ): software_updates
  """
  fetch data from the table in a streaming manner: "software_updates"
  """
 software_updates_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [software_updates_stream_cursor_input]! , """filter the rows returned"""
where: software_updates_bool_exp): [software_updates! ]! 
  """An array relationship"""
 stages("""distinct select on columns"""
distinct_on: [stages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [stages_order_by! ], """filter the rows returned"""
where: stages_bool_exp): [stages! ]! 
  """An aggregate relationship"""
 stages_aggregate("""distinct select on columns"""
distinct_on: [stages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [stages_order_by! ], """filter the rows returned"""
where: stages_bool_exp): stages_aggregate! 
  """fetch data from the table: "stages" using primary key columns"""
 stages_by_pk(id: Int! ): stages
  """
  fetch data from the table: "stages_event_acceptance_types"
  """
 stages_event_acceptance_types("""distinct select on columns"""
distinct_on: [stages_event_acceptance_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [stages_event_acceptance_types_order_by! ], """filter the rows returned"""
where: stages_event_acceptance_types_bool_exp): [stages_event_acceptance_types! ]! 
  """
  fetch aggregated fields from the table: "stages_event_acceptance_types"
  """
 stages_event_acceptance_types_aggregate("""distinct select on columns"""
distinct_on: [stages_event_acceptance_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [stages_event_acceptance_types_order_by! ], """filter the rows returned"""
where: stages_event_acceptance_types_bool_exp): stages_event_acceptance_types_aggregate! 
  """
  fetch data from the table: "stages_event_acceptance_types" using primary key columns
  """
 stages_event_acceptance_types_by_pk(stages_event_acceptance_type_id: Int! ): stages_event_acceptance_types
  """
  fetch data from the table in a streaming manner: "stages_event_acceptance_types"
  """
 stages_event_acceptance_types_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [stages_event_acceptance_types_stream_cursor_input]! , """filter the rows returned"""
where: stages_event_acceptance_types_bool_exp): [stages_event_acceptance_types! ]! 
  """
  fetch data from the table in a streaming manner: "stages"
  """
 stages_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [stages_stream_cursor_input]! , """filter the rows returned"""
where: stages_bool_exp): [stages! ]! 
  """
  fetch data from the table: "stages_view"
  """
 stages_view("""distinct select on columns"""
distinct_on: [stages_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [stages_view_order_by! ], """filter the rows returned"""
where: stages_view_bool_exp): [stages_view! ]! 
  """
  fetch aggregated fields from the table: "stages_view"
  """
 stages_view_aggregate("""distinct select on columns"""
distinct_on: [stages_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [stages_view_order_by! ], """filter the rows returned"""
where: stages_view_bool_exp): stages_view_aggregate! 
  """
  fetch data from the table in a streaming manner: "stages_view"
  """
 stages_view_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [stages_view_stream_cursor_input]! , """filter the rows returned"""
where: stages_view_bool_exp): [stages_view! ]! 
  """
  fetch data from the table: "submission_acceptance_types"
  """
 submission_acceptance_types("""distinct select on columns"""
distinct_on: [submission_acceptance_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_acceptance_types_order_by! ], """filter the rows returned"""
where: submission_acceptance_types_bool_exp): [submission_acceptance_types! ]! 
  """
  fetch aggregated fields from the table: "submission_acceptance_types"
  """
 submission_acceptance_types_aggregate("""distinct select on columns"""
distinct_on: [submission_acceptance_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_acceptance_types_order_by! ], """filter the rows returned"""
where: submission_acceptance_types_bool_exp): submission_acceptance_types_aggregate! 
  """
  fetch data from the table in a streaming manner: "submission_acceptance_types"
  """
 submission_acceptance_types_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [submission_acceptance_types_stream_cursor_input]! , """filter the rows returned"""
where: submission_acceptance_types_bool_exp): [submission_acceptance_types! ]! 
  """
  fetch data from the table: "submission_categories"
  """
 submission_categories("""distinct select on columns"""
distinct_on: [submission_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_categories_order_by! ], """filter the rows returned"""
where: submission_categories_bool_exp): [submission_categories! ]! 
  """
  fetch aggregated fields from the table: "submission_categories"
  """
 submission_categories_aggregate("""distinct select on columns"""
distinct_on: [submission_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_categories_order_by! ], """filter the rows returned"""
where: submission_categories_bool_exp): submission_categories_aggregate! 
  """
  fetch data from the table in a streaming manner: "submission_categories"
  """
 submission_categories_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [submission_categories_stream_cursor_input]! , """filter the rows returned"""
where: submission_categories_bool_exp): [submission_categories! ]! 
  """
  fetch data from the table: "submission_decisions"
  """
 submission_decisions("""distinct select on columns"""
distinct_on: [submission_decisions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_decisions_order_by! ], """filter the rows returned"""
where: submission_decisions_bool_exp): [submission_decisions! ]! 
  """
  fetch aggregated fields from the table: "submission_decisions"
  """
 submission_decisions_aggregate("""distinct select on columns"""
distinct_on: [submission_decisions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_decisions_order_by! ], """filter the rows returned"""
where: submission_decisions_bool_exp): submission_decisions_aggregate! 
  """
  fetch data from the table in a streaming manner: "submission_decisions"
  """
 submission_decisions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [submission_decisions_stream_cursor_input]! , """filter the rows returned"""
where: submission_decisions_bool_exp): [submission_decisions! ]! 
  """
  fetch data from the table: "submission_ids_and_acceptance_types"
  """
 submission_ids_and_acceptance_types("""distinct select on columns"""
distinct_on: [submission_ids_and_acceptance_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_ids_and_acceptance_types_order_by! ], """filter the rows returned"""
where: submission_ids_and_acceptance_types_bool_exp): [submission_ids_and_acceptance_types! ]! 
  """
  fetch aggregated fields from the table: "submission_ids_and_acceptance_types"
  """
 submission_ids_and_acceptance_types_aggregate("""distinct select on columns"""
distinct_on: [submission_ids_and_acceptance_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_ids_and_acceptance_types_order_by! ], """filter the rows returned"""
where: submission_ids_and_acceptance_types_bool_exp): submission_ids_and_acceptance_types_aggregate! 
  """
  fetch data from the table in a streaming manner: "submission_ids_and_acceptance_types"
  """
 submission_ids_and_acceptance_types_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [submission_ids_and_acceptance_types_stream_cursor_input]! , """filter the rows returned"""
where: submission_ids_and_acceptance_types_bool_exp): [submission_ids_and_acceptance_types! ]! 
  """
  fetch data from the table: "submission_owner_log"
  """
 submission_owner_log("""distinct select on columns"""
distinct_on: [submission_owner_log_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_owner_log_order_by! ], """filter the rows returned"""
where: submission_owner_log_bool_exp): [submission_owner_log! ]! 
  """
  fetch aggregated fields from the table: "submission_owner_log"
  """
 submission_owner_log_aggregate("""distinct select on columns"""
distinct_on: [submission_owner_log_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_owner_log_order_by! ], """filter the rows returned"""
where: submission_owner_log_bool_exp): submission_owner_log_aggregate! 
  """
  fetch data from the table: "submission_owner_log" using primary key columns
  """
 submission_owner_log_by_pk(id: uuid! ): submission_owner_log
  """
  fetch data from the table in a streaming manner: "submission_owner_log"
  """
 submission_owner_log_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [submission_owner_log_stream_cursor_input]! , """filter the rows returned"""
where: submission_owner_log_bool_exp): [submission_owner_log! ]! 
  """
  fetch data from the table: "submission_updates"
  """
 submission_updates("""distinct select on columns"""
distinct_on: [submission_updates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_updates_order_by! ], """filter the rows returned"""
where: submission_updates_bool_exp): [submission_updates! ]! 
  """
  fetch aggregated fields from the table: "submission_updates"
  """
 submission_updates_aggregate("""distinct select on columns"""
distinct_on: [submission_updates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submission_updates_order_by! ], """filter the rows returned"""
where: submission_updates_bool_exp): submission_updates_aggregate! 
  """
  fetch data from the table in a streaming manner: "submission_updates"
  """
 submission_updates_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [submission_updates_stream_cursor_input]! , """filter the rows returned"""
where: submission_updates_bool_exp): [submission_updates! ]! 
  """An array relationship"""
 submissions("""distinct select on columns"""
distinct_on: [submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submissions_order_by! ], """filter the rows returned"""
where: submissions_bool_exp): [submissions! ]! 
  """An aggregate relationship"""
 submissions_aggregate("""distinct select on columns"""
distinct_on: [submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submissions_order_by! ], """filter the rows returned"""
where: submissions_bool_exp): submissions_aggregate! 
  """
  fetch data from the table: "submissions_with_archived" using primary key columns
  """
 submissions_by_pk("""A globally unique identifier for each submission"""
id: Int! ): submissions
  """
  fetch data from the table in a streaming manner: "submissions_with_archived"
  """
 submissions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [submissions_stream_cursor_input]! , """filter the rows returned"""
where: submissions_bool_exp): [submissions! ]! 
  """An array relationship"""
 symposia("""distinct select on columns"""
distinct_on: [symposia_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposia_order_by! ], """filter the rows returned"""
where: symposia_bool_exp): [symposia! ]! 
  """
  fetch data from the table: "symposia_acceptance_types"
  """
 symposia_acceptance_types("""distinct select on columns"""
distinct_on: [symposia_acceptance_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposia_acceptance_types_order_by! ], """filter the rows returned"""
where: symposia_acceptance_types_bool_exp): [symposia_acceptance_types! ]! 
  """
  fetch aggregated fields from the table: "symposia_acceptance_types"
  """
 symposia_acceptance_types_aggregate("""distinct select on columns"""
distinct_on: [symposia_acceptance_types_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposia_acceptance_types_order_by! ], """filter the rows returned"""
where: symposia_acceptance_types_bool_exp): symposia_acceptance_types_aggregate! 
  """
  fetch data from the table: "symposia_acceptance_types" using primary key columns
  """
 symposia_acceptance_types_by_pk(symposium_acceptance_type_id: Int! ): symposia_acceptance_types
  """
  fetch data from the table in a streaming manner: "symposia_acceptance_types"
  """
 symposia_acceptance_types_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [symposia_acceptance_types_stream_cursor_input]! , """filter the rows returned"""
where: symposia_acceptance_types_bool_exp): [symposia_acceptance_types! ]! 
  """An aggregate relationship"""
 symposia_aggregate("""distinct select on columns"""
distinct_on: [symposia_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposia_order_by! ], """filter the rows returned"""
where: symposia_bool_exp): symposia_aggregate! 
  """
  fetch data from the table: "symposia_with_archived" using primary key columns
  """
 symposia_by_pk(id: Int! ): symposia
  """
  fetch data from the table in a streaming manner: "symposia_with_archived"
  """
 symposia_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [symposia_stream_cursor_input]! , """filter the rows returned"""
where: symposia_bool_exp): [symposia! ]! 
  """An array relationship"""
 symposium_affiliations("""distinct select on columns"""
distinct_on: [symposium_affiliations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_affiliations_order_by! ], """filter the rows returned"""
where: symposium_affiliations_bool_exp): [symposium_affiliations! ]! 
  """An aggregate relationship"""
 symposium_affiliations_aggregate("""distinct select on columns"""
distinct_on: [symposium_affiliations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_affiliations_order_by! ], """filter the rows returned"""
where: symposium_affiliations_bool_exp): symposium_affiliations_aggregate! 
  """
  fetch data from the table: "symposium_affiliations" using primary key columns
  """
 symposium_affiliations_by_pk(id: Int! ): symposium_affiliations
  """
  fetch data from the table in a streaming manner: "symposium_affiliations"
  """
 symposium_affiliations_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [symposium_affiliations_stream_cursor_input]! , """filter the rows returned"""
where: symposium_affiliations_bool_exp): [symposium_affiliations! ]! 
  """An array relationship"""
 symposium_person_field_responses("""distinct select on columns"""
distinct_on: [symposium_person_field_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_person_field_responses_order_by! ], """filter the rows returned"""
where: symposium_person_field_responses_bool_exp): [symposium_person_field_responses! ]! 
  """An aggregate relationship"""
 symposium_person_field_responses_aggregate("""distinct select on columns"""
distinct_on: [symposium_person_field_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_person_field_responses_order_by! ], """filter the rows returned"""
where: symposium_person_field_responses_bool_exp): symposium_person_field_responses_aggregate! 
  """
  fetch data from the table: "symposium_person_field_responses" using primary key columns
  """
 symposium_person_field_responses_by_pk(id: Int! ): symposium_person_field_responses
  """
  fetch data from the table in a streaming manner: "symposium_person_field_responses"
  """
 symposium_person_field_responses_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [symposium_person_field_responses_stream_cursor_input]! , """filter the rows returned"""
where: symposium_person_field_responses_bool_exp): [symposium_person_field_responses! ]! 
  """
  fetch data from the table: "symposium_person_fields"
  """
 symposium_person_fields("""distinct select on columns"""
distinct_on: [symposium_person_fields_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_person_fields_order_by! ], """filter the rows returned"""
where: symposium_person_fields_bool_exp): [symposium_person_fields! ]! 
  """
  fetch aggregated fields from the table: "symposium_person_fields"
  """
 symposium_person_fields_aggregate("""distinct select on columns"""
distinct_on: [symposium_person_fields_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_person_fields_order_by! ], """filter the rows returned"""
where: symposium_person_fields_bool_exp): symposium_person_fields_aggregate! 
  """
  fetch data from the table: "symposium_person_fields" using primary key columns
  """
 symposium_person_fields_by_pk(id: Int! ): symposium_person_fields
  """
  fetch data from the table in a streaming manner: "symposium_person_fields"
  """
 symposium_person_fields_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [symposium_person_fields_stream_cursor_input]! , """filter the rows returned"""
where: symposium_person_fields_bool_exp): [symposium_person_fields! ]! 
  """
  fetch data from the table: "symposium_person_users"
  """
 symposium_person_users("""distinct select on columns"""
distinct_on: [symposium_person_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_person_users_order_by! ], """filter the rows returned"""
where: symposium_person_users_bool_exp): [symposium_person_users! ]! 
  """
  fetch aggregated fields from the table: "symposium_person_users"
  """
 symposium_person_users_aggregate("""distinct select on columns"""
distinct_on: [symposium_person_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_person_users_order_by! ], """filter the rows returned"""
where: symposium_person_users_bool_exp): symposium_person_users_aggregate! 
  """
  fetch data from the table in a streaming manner: "symposium_person_users"
  """
 symposium_person_users_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [symposium_person_users_stream_cursor_input]! , """filter the rows returned"""
where: symposium_person_users_bool_exp): [symposium_person_users! ]! 
  """An array relationship"""
 symposium_persons("""distinct select on columns"""
distinct_on: [symposium_persons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_persons_order_by! ], """filter the rows returned"""
where: symposium_persons_bool_exp): [symposium_persons! ]! 
  """An aggregate relationship"""
 symposium_persons_aggregate("""distinct select on columns"""
distinct_on: [symposium_persons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_persons_order_by! ], """filter the rows returned"""
where: symposium_persons_bool_exp): symposium_persons_aggregate! 
  """
  fetch data from the table: "symposium_persons" using primary key columns
  """
 symposium_persons_by_pk(id: Int! ): symposium_persons
  """
  fetch data from the table in a streaming manner: "symposium_persons"
  """
 symposium_persons_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [symposium_persons_stream_cursor_input]! , """filter the rows returned"""
where: symposium_persons_bool_exp): [symposium_persons! ]! 
  """An array relationship"""
 symposium_question_responses("""distinct select on columns"""
distinct_on: [symposium_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_question_responses_order_by! ], """filter the rows returned"""
where: symposium_question_responses_bool_exp): [symposium_question_responses! ]! 
  """An aggregate relationship"""
 symposium_question_responses_aggregate("""distinct select on columns"""
distinct_on: [symposium_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_question_responses_order_by! ], """filter the rows returned"""
where: symposium_question_responses_bool_exp): symposium_question_responses_aggregate! 
  """
  fetch data from the table: "symposium_question_responses" using primary key columns
  """
 symposium_question_responses_by_pk(id: Int! ): symposium_question_responses
  """
  fetch data from the table in a streaming manner: "symposium_question_responses"
  """
 symposium_question_responses_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [symposium_question_responses_stream_cursor_input]! , """filter the rows returned"""
where: symposium_question_responses_bool_exp): [symposium_question_responses! ]! 
  """
  fetch data from the table: "symposium_questions"
  """
 symposium_questions("""distinct select on columns"""
distinct_on: [symposium_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_questions_order_by! ], """filter the rows returned"""
where: symposium_questions_bool_exp): [symposium_questions! ]! 
  """
  fetch aggregated fields from the table: "symposium_questions"
  """
 symposium_questions_aggregate("""distinct select on columns"""
distinct_on: [symposium_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_questions_order_by! ], """filter the rows returned"""
where: symposium_questions_bool_exp): symposium_questions_aggregate! 
  """
  fetch data from the table: "symposium_questions" using primary key columns
  """
 symposium_questions_by_pk(symposium_question_id: Int! ): symposium_questions
  """
  fetch data from the table in a streaming manner: "symposium_questions"
  """
 symposium_questions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [symposium_questions_stream_cursor_input]! , """filter the rows returned"""
where: symposium_questions_bool_exp): [symposium_questions! ]! 
  """
  fetch data from the table: "symposium_review_question_responses"
  """
 symposium_review_question_responses("""distinct select on columns"""
distinct_on: [symposium_review_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_review_question_responses_order_by! ], """filter the rows returned"""
where: symposium_review_question_responses_bool_exp): [symposium_review_question_responses! ]! 
  """
  fetch aggregated fields from the table: "symposium_review_question_responses"
  """
 symposium_review_question_responses_aggregate("""distinct select on columns"""
distinct_on: [symposium_review_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_review_question_responses_order_by! ], """filter the rows returned"""
where: symposium_review_question_responses_bool_exp): symposium_review_question_responses_aggregate! 
  """
  fetch data from the table: "symposium_review_question_responses" using primary key columns
  """
 symposium_review_question_responses_by_pk(symposium_review_question_response_id: Int! ): symposium_review_question_responses
  """
  fetch data from the table in a streaming manner: "symposium_review_question_responses"
  """
 symposium_review_question_responses_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [symposium_review_question_responses_stream_cursor_input]! , """filter the rows returned"""
where: symposium_review_question_responses_bool_exp): [symposium_review_question_responses! ]! 
  """
  fetch data from the table: "symposium_review_questions"
  """
 symposium_review_questions("""distinct select on columns"""
distinct_on: [symposium_review_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_review_questions_order_by! ], """filter the rows returned"""
where: symposium_review_questions_bool_exp): [symposium_review_questions! ]! 
  """
  fetch aggregated fields from the table: "symposium_review_questions"
  """
 symposium_review_questions_aggregate("""distinct select on columns"""
distinct_on: [symposium_review_questions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_review_questions_order_by! ], """filter the rows returned"""
where: symposium_review_questions_bool_exp): symposium_review_questions_aggregate! 
  """
  fetch data from the table: "symposium_review_questions" using primary key columns
  """
 symposium_review_questions_by_pk(symposium_review_question_id: Int! ): symposium_review_questions
  """
  fetch data from the table in a streaming manner: "symposium_review_questions"
  """
 symposium_review_questions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [symposium_review_questions_stream_cursor_input]! , """filter the rows returned"""
where: symposium_review_questions_bool_exp): [symposium_review_questions! ]! 
  """
  fetch data from the table: "symposium_reviews"
  """
 symposium_reviews("""distinct select on columns"""
distinct_on: [symposium_reviews_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_reviews_order_by! ], """filter the rows returned"""
where: symposium_reviews_bool_exp): [symposium_reviews! ]! 
  """
  fetch aggregated fields from the table: "symposium_reviews"
  """
 symposium_reviews_aggregate("""distinct select on columns"""
distinct_on: [symposium_reviews_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_reviews_order_by! ], """filter the rows returned"""
where: symposium_reviews_bool_exp): symposium_reviews_aggregate! 
  """
  fetch data from the table: "symposium_reviews" using primary key columns
  """
 symposium_reviews_by_pk(symposium_review_id: Int! ): symposium_reviews
  """
  fetch data from the table in a streaming manner: "symposium_reviews"
  """
 symposium_reviews_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [symposium_reviews_stream_cursor_input]! , """filter the rows returned"""
where: symposium_reviews_bool_exp): [symposium_reviews! ]! 
  """An array relationship"""
 symposium_submission_session_times("""distinct select on columns"""
distinct_on: [symposium_submission_session_times_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_submission_session_times_order_by! ], """filter the rows returned"""
where: symposium_submission_session_times_bool_exp): [symposium_submission_session_times! ]! 
  """An aggregate relationship"""
 symposium_submission_session_times_aggregate("""distinct select on columns"""
distinct_on: [symposium_submission_session_times_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_submission_session_times_order_by! ], """filter the rows returned"""
where: symposium_submission_session_times_bool_exp): symposium_submission_session_times_aggregate! 
  """
  fetch data from the table: "symposium_submission_session_times" using primary key columns
  """
 symposium_submission_session_times_by_pk(id: Int! ): symposium_submission_session_times
  """
  fetch data from the table in a streaming manner: "symposium_submission_session_times"
  """
 symposium_submission_session_times_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [symposium_submission_session_times_stream_cursor_input]! , """filter the rows returned"""
where: symposium_submission_session_times_bool_exp): [symposium_submission_session_times! ]! 
  """
  fetch data from the table: "table_email_attachments"
  """
 table_email_attachments("""distinct select on columns"""
distinct_on: [table_email_attachments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_attachments_order_by! ], """filter the rows returned"""
where: table_email_attachments_bool_exp): [table_email_attachments! ]! 
  """
  fetch aggregated fields from the table: "table_email_attachments"
  """
 table_email_attachments_aggregate("""distinct select on columns"""
distinct_on: [table_email_attachments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_attachments_order_by! ], """filter the rows returned"""
where: table_email_attachments_bool_exp): table_email_attachments_aggregate! 
  """
  fetch data from the table: "table_email_attachments" using primary key columns
  """
 table_email_attachments_by_pk(id: uuid! ): table_email_attachments
  """
  fetch data from the table in a streaming manner: "table_email_attachments"
  """
 table_email_attachments_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [table_email_attachments_stream_cursor_input]! , """filter the rows returned"""
where: table_email_attachments_bool_exp): [table_email_attachments! ]! 
  """An array relationship"""
 table_email_filters("""distinct select on columns"""
distinct_on: [table_email_filters_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_filters_order_by! ], """filter the rows returned"""
where: table_email_filters_bool_exp): [table_email_filters! ]! 
  """An aggregate relationship"""
 table_email_filters_aggregate("""distinct select on columns"""
distinct_on: [table_email_filters_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_filters_order_by! ], """filter the rows returned"""
where: table_email_filters_bool_exp): table_email_filters_aggregate! 
  """
  fetch data from the table: "table_email_filters" using primary key columns
  """
 table_email_filters_by_pk(id: uuid! ): table_email_filters
  """
  fetch data from the table in a streaming manner: "table_email_filters"
  """
 table_email_filters_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [table_email_filters_stream_cursor_input]! , """filter the rows returned"""
where: table_email_filters_bool_exp): [table_email_filters! ]! 
  """
  fetch data from the table: "table_email_merge_field_defaults"
  """
 table_email_merge_field_defaults("""distinct select on columns"""
distinct_on: [table_email_merge_field_defaults_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_merge_field_defaults_order_by! ], """filter the rows returned"""
where: table_email_merge_field_defaults_bool_exp): [table_email_merge_field_defaults! ]! 
  """
  fetch aggregated fields from the table: "table_email_merge_field_defaults"
  """
 table_email_merge_field_defaults_aggregate("""distinct select on columns"""
distinct_on: [table_email_merge_field_defaults_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_merge_field_defaults_order_by! ], """filter the rows returned"""
where: table_email_merge_field_defaults_bool_exp): table_email_merge_field_defaults_aggregate! 
  """
  fetch data from the table: "table_email_merge_field_defaults" using primary key columns
  """
 table_email_merge_field_defaults_by_pk(id: uuid! ): table_email_merge_field_defaults
  """
  fetch data from the table in a streaming manner: "table_email_merge_field_defaults"
  """
 table_email_merge_field_defaults_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [table_email_merge_field_defaults_stream_cursor_input]! , """filter the rows returned"""
where: table_email_merge_field_defaults_bool_exp): [table_email_merge_field_defaults! ]! 
  """
  fetch data from the table: "table_email_recipient_groups"
  """
 table_email_recipient_groups("""distinct select on columns"""
distinct_on: [table_email_recipient_groups_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_recipient_groups_order_by! ], """filter the rows returned"""
where: table_email_recipient_groups_bool_exp): [table_email_recipient_groups! ]! 
  """
  fetch aggregated fields from the table: "table_email_recipient_groups"
  """
 table_email_recipient_groups_aggregate("""distinct select on columns"""
distinct_on: [table_email_recipient_groups_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_recipient_groups_order_by! ], """filter the rows returned"""
where: table_email_recipient_groups_bool_exp): table_email_recipient_groups_aggregate! 
  """
  fetch data from the table: "table_email_recipient_groups" using primary key columns
  """
 table_email_recipient_groups_by_pk(value: String! ): table_email_recipient_groups
  """
  fetch data from the table in a streaming manner: "table_email_recipient_groups"
  """
 table_email_recipient_groups_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [table_email_recipient_groups_stream_cursor_input]! , """filter the rows returned"""
where: table_email_recipient_groups_bool_exp): [table_email_recipient_groups! ]! 
  """
  fetch data from the table: "table_email_templates"
  """
 table_email_templates("""distinct select on columns"""
distinct_on: [table_email_templates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_templates_order_by! ], """filter the rows returned"""
where: table_email_templates_bool_exp): [table_email_templates! ]! 
  """
  fetch aggregated fields from the table: "table_email_templates"
  """
 table_email_templates_aggregate("""distinct select on columns"""
distinct_on: [table_email_templates_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_templates_order_by! ], """filter the rows returned"""
where: table_email_templates_bool_exp): table_email_templates_aggregate! 
  """
  fetch data from the table: "table_email_templates" using primary key columns
  """
 table_email_templates_by_pk(id: uuid! ): table_email_templates
  """
  fetch data from the table in a streaming manner: "table_email_templates"
  """
 table_email_templates_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [table_email_templates_stream_cursor_input]! , """filter the rows returned"""
where: table_email_templates_bool_exp): [table_email_templates! ]! 
  """
  fetch data from the table: "title_responses"
  """
 title_responses("""distinct select on columns"""
distinct_on: [title_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [title_responses_order_by! ], """filter the rows returned"""
where: title_responses_bool_exp): [title_responses! ]! 
  """
  fetch aggregated fields from the table: "title_responses"
  """
 title_responses_aggregate("""distinct select on columns"""
distinct_on: [title_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [title_responses_order_by! ], """filter the rows returned"""
where: title_responses_bool_exp): title_responses_aggregate! 
  """
  fetch data from the table in a streaming manner: "title_responses"
  """
 title_responses_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [title_responses_stream_cursor_input]! , """filter the rows returned"""
where: title_responses_bool_exp): [title_responses! ]! 
  """
  fetch data from the table: "track_review_auto_assigns"
  """
 track_review_auto_assigns("""distinct select on columns"""
distinct_on: [track_review_auto_assigns_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [track_review_auto_assigns_order_by! ], """filter the rows returned"""
where: track_review_auto_assigns_bool_exp): [track_review_auto_assigns! ]! 
  """
  fetch aggregated fields from the table: "track_review_auto_assigns"
  """
 track_review_auto_assigns_aggregate("""distinct select on columns"""
distinct_on: [track_review_auto_assigns_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [track_review_auto_assigns_order_by! ], """filter the rows returned"""
where: track_review_auto_assigns_bool_exp): track_review_auto_assigns_aggregate! 
  """
  fetch data from the table: "track_review_auto_assigns" using primary key columns
  """
 track_review_auto_assigns_by_pk(id: uuid! ): track_review_auto_assigns
  """
  fetch data from the table in a streaming manner: "track_review_auto_assigns"
  """
 track_review_auto_assigns_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [track_review_auto_assigns_stream_cursor_input]! , """filter the rows returned"""
where: track_review_auto_assigns_bool_exp): [track_review_auto_assigns! ]! 
  """
  fetch data from the table: "user_asked_for_ratings"
  """
 user_asked_for_ratings("""distinct select on columns"""
distinct_on: [user_asked_for_ratings_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [user_asked_for_ratings_order_by! ], """filter the rows returned"""
where: user_asked_for_ratings_bool_exp): [user_asked_for_ratings! ]! 
  """
  fetch aggregated fields from the table: "user_asked_for_ratings"
  """
 user_asked_for_ratings_aggregate("""distinct select on columns"""
distinct_on: [user_asked_for_ratings_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [user_asked_for_ratings_order_by! ], """filter the rows returned"""
where: user_asked_for_ratings_bool_exp): user_asked_for_ratings_aggregate! 
  """
  fetch data from the table: "user_asked_for_ratings" using primary key columns
  """
 user_asked_for_ratings_by_pk(id: Int! ): user_asked_for_ratings
  """
  fetch data from the table in a streaming manner: "user_asked_for_ratings"
  """
 user_asked_for_ratings_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [user_asked_for_ratings_stream_cursor_input]! , """filter the rows returned"""
where: user_asked_for_ratings_bool_exp): [user_asked_for_ratings! ]! 
  """
  fetch data from the table: "user_emails"
  """
 user_emails("""distinct select on columns"""
distinct_on: [user_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [user_emails_order_by! ], """filter the rows returned"""
where: user_emails_bool_exp): [user_emails! ]! 
  """
  fetch aggregated fields from the table: "user_emails"
  """
 user_emails_aggregate("""distinct select on columns"""
distinct_on: [user_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [user_emails_order_by! ], """filter the rows returned"""
where: user_emails_bool_exp): user_emails_aggregate! 
  """
  fetch data from the table in a streaming manner: "user_emails"
  """
 user_emails_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [user_emails_stream_cursor_input]! , """filter the rows returned"""
where: user_emails_bool_exp): [user_emails! ]! 
  """
  fetch data from the table: "user_view"
  """
 user_view("""distinct select on columns"""
distinct_on: [user_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [user_view_order_by! ], """filter the rows returned"""
where: user_view_bool_exp): [user_view! ]! 
  """
  fetch aggregated fields from the table: "user_view"
  """
 user_view_aggregate("""distinct select on columns"""
distinct_on: [user_view_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [user_view_order_by! ], """filter the rows returned"""
where: user_view_bool_exp): user_view_aggregate! 
  """
  fetch data from the table in a streaming manner: "user_view"
  """
 user_view_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [user_view_stream_cursor_input]! , """filter the rows returned"""
where: user_view_bool_exp): [user_view! ]! 
  """An array relationship"""
 users("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): [users! ]! 
  """An aggregate relationship"""
 users_aggregate("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): users_aggregate! 
  """fetch data from the table: "users" using primary key columns"""
 users_by_pk(id: Int! ): users
  """
  fetch data from the table in a streaming manner: "users"
  """
 users_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [users_stream_cursor_input]! , """filter the rows returned"""
where: users_bool_exp): [users! ]! 
  """
  fetch data from the table: "verified_sender_emails"
  """
 verified_sender_emails("""distinct select on columns"""
distinct_on: [verified_sender_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [verified_sender_emails_order_by! ], """filter the rows returned"""
where: verified_sender_emails_bool_exp): [verified_sender_emails! ]! 
  """
  fetch aggregated fields from the table: "verified_sender_emails"
  """
 verified_sender_emails_aggregate("""distinct select on columns"""
distinct_on: [verified_sender_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [verified_sender_emails_order_by! ], """filter the rows returned"""
where: verified_sender_emails_bool_exp): verified_sender_emails_aggregate! 
  """
  fetch data from the table: "verified_sender_emails" using primary key columns
  """
 verified_sender_emails_by_pk(verified_sender_email_id: Int! ): verified_sender_emails
  """
  fetch data from the table in a streaming manner: "verified_sender_emails"
  """
 verified_sender_emails_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [verified_sender_emails_stream_cursor_input]! , """filter the rows returned"""
where: verified_sender_emails_bool_exp): [verified_sender_emails! ]! 
  """
  fetch data from the table: "virtual_conference_announcement_button_clicks"
  """
 virtual_conference_announcement_button_clicks("""distinct select on columns"""
distinct_on: [virtual_conference_announcement_button_clicks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_announcement_button_clicks_order_by! ], """filter the rows returned"""
where: virtual_conference_announcement_button_clicks_bool_exp): [virtual_conference_announcement_button_clicks! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_announcement_button_clicks"
  """
 virtual_conference_announcement_button_clicks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_announcement_button_clicks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_announcement_button_clicks_order_by! ], """filter the rows returned"""
where: virtual_conference_announcement_button_clicks_bool_exp): virtual_conference_announcement_button_clicks_aggregate! 
  """
  fetch data from the table: "virtual_conference_announcement_button_clicks" using primary key columns
  """
 virtual_conference_announcement_button_clicks_by_pk(id: uuid! ): virtual_conference_announcement_button_clicks
  """
  fetch data from the table in a streaming manner: "virtual_conference_announcement_button_clicks"
  """
 virtual_conference_announcement_button_clicks_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_announcement_button_clicks_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_announcement_button_clicks_bool_exp): [virtual_conference_announcement_button_clicks! ]! 
  """
  fetch data from the table: "virtual_conference_announcement_dismissals"
  """
 virtual_conference_announcement_dismissals("""distinct select on columns"""
distinct_on: [virtual_conference_announcement_dismissals_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_announcement_dismissals_order_by! ], """filter the rows returned"""
where: virtual_conference_announcement_dismissals_bool_exp): [virtual_conference_announcement_dismissals! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_announcement_dismissals"
  """
 virtual_conference_announcement_dismissals_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_announcement_dismissals_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_announcement_dismissals_order_by! ], """filter the rows returned"""
where: virtual_conference_announcement_dismissals_bool_exp): virtual_conference_announcement_dismissals_aggregate! 
  """
  fetch data from the table: "virtual_conference_announcement_dismissals" using primary key columns
  """
 virtual_conference_announcement_dismissals_by_pk(id: uuid! ): virtual_conference_announcement_dismissals
  """
  fetch data from the table in a streaming manner: "virtual_conference_announcement_dismissals"
  """
 virtual_conference_announcement_dismissals_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_announcement_dismissals_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_announcement_dismissals_bool_exp): [virtual_conference_announcement_dismissals! ]! 
  """
  fetch data from the table: "virtual_conference_announcement_views"
  """
 virtual_conference_announcement_views("""distinct select on columns"""
distinct_on: [virtual_conference_announcement_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_announcement_views_order_by! ], """filter the rows returned"""
where: virtual_conference_announcement_views_bool_exp): [virtual_conference_announcement_views! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_announcement_views"
  """
 virtual_conference_announcement_views_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_announcement_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_announcement_views_order_by! ], """filter the rows returned"""
where: virtual_conference_announcement_views_bool_exp): virtual_conference_announcement_views_aggregate! 
  """
  fetch data from the table: "virtual_conference_announcement_views" using primary key columns
  """
 virtual_conference_announcement_views_by_pk(id: uuid! ): virtual_conference_announcement_views
  """
  fetch data from the table in a streaming manner: "virtual_conference_announcement_views"
  """
 virtual_conference_announcement_views_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_announcement_views_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_announcement_views_bool_exp): [virtual_conference_announcement_views! ]! 
  """
  fetch data from the table: "virtual_conference_announcements"
  """
 virtual_conference_announcements("""distinct select on columns"""
distinct_on: [virtual_conference_announcements_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_announcements_order_by! ], """filter the rows returned"""
where: virtual_conference_announcements_bool_exp): [virtual_conference_announcements! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_announcements"
  """
 virtual_conference_announcements_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_announcements_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_announcements_order_by! ], """filter the rows returned"""
where: virtual_conference_announcements_bool_exp): virtual_conference_announcements_aggregate! 
  """
  fetch data from the table: "virtual_conference_announcements" using primary key columns
  """
 virtual_conference_announcements_by_pk(id: uuid! ): virtual_conference_announcements
  """
  fetch data from the table in a streaming manner: "virtual_conference_announcements"
  """
 virtual_conference_announcements_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_announcements_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_announcements_bool_exp): [virtual_conference_announcements! ]! 
  """
  fetch data from the table: "virtual_conference_average_session_view_count"
  """
 virtual_conference_average_session_view_count("""distinct select on columns"""
distinct_on: [virtual_conference_average_session_view_count_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_average_session_view_count_order_by! ], """filter the rows returned"""
where: virtual_conference_average_session_view_count_bool_exp): [virtual_conference_average_session_view_count! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_average_session_view_count"
  """
 virtual_conference_average_session_view_count_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_average_session_view_count_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_average_session_view_count_order_by! ], """filter the rows returned"""
where: virtual_conference_average_session_view_count_bool_exp): virtual_conference_average_session_view_count_aggregate! 
  """
  fetch data from the table in a streaming manner: "virtual_conference_average_session_view_count"
  """
 virtual_conference_average_session_view_count_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_average_session_view_count_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_average_session_view_count_bool_exp): [virtual_conference_average_session_view_count! ]! 
  """
  fetch data from the table: "virtual_conference_chat_group_invitations"
  """
 virtual_conference_chat_group_invitations("""distinct select on columns"""
distinct_on: [virtual_conference_chat_group_invitations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_group_invitations_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_group_invitations_bool_exp): [virtual_conference_chat_group_invitations! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_chat_group_invitations"
  """
 virtual_conference_chat_group_invitations_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_chat_group_invitations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_group_invitations_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_group_invitations_bool_exp): virtual_conference_chat_group_invitations_aggregate! 
  """
  fetch data from the table: "virtual_conference_chat_group_invitations" using primary key columns
  """
 virtual_conference_chat_group_invitations_by_pk(id: Int! ): virtual_conference_chat_group_invitations
  """
  fetch data from the table in a streaming manner: "virtual_conference_chat_group_invitations"
  """
 virtual_conference_chat_group_invitations_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_chat_group_invitations_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_chat_group_invitations_bool_exp): [virtual_conference_chat_group_invitations! ]! 
  """
  fetch data from the table: "virtual_conference_chat_group_reports"
  """
 virtual_conference_chat_group_reports("""distinct select on columns"""
distinct_on: [virtual_conference_chat_group_reports_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_group_reports_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_group_reports_bool_exp): [virtual_conference_chat_group_reports! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_chat_group_reports"
  """
 virtual_conference_chat_group_reports_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_chat_group_reports_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_group_reports_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_group_reports_bool_exp): virtual_conference_chat_group_reports_aggregate! 
  """
  fetch data from the table: "virtual_conference_chat_group_reports" using primary key columns
  """
 virtual_conference_chat_group_reports_by_pk(id: Int! ): virtual_conference_chat_group_reports
  """
  fetch data from the table: "virtual_conference_chat_group_reports_read_by"
  """
 virtual_conference_chat_group_reports_read_by("""distinct select on columns"""
distinct_on: [virtual_conference_chat_group_reports_read_by_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_group_reports_read_by_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_group_reports_read_by_bool_exp): [virtual_conference_chat_group_reports_read_by! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_chat_group_reports_read_by"
  """
 virtual_conference_chat_group_reports_read_by_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_chat_group_reports_read_by_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_group_reports_read_by_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_group_reports_read_by_bool_exp): virtual_conference_chat_group_reports_read_by_aggregate! 
  """
  fetch data from the table: "virtual_conference_chat_group_reports_read_by" using primary key columns
  """
 virtual_conference_chat_group_reports_read_by_by_pk(id: Int! ): virtual_conference_chat_group_reports_read_by
  """
  fetch data from the table in a streaming manner: "virtual_conference_chat_group_reports_read_by"
  """
 virtual_conference_chat_group_reports_read_by_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_chat_group_reports_read_by_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_chat_group_reports_read_by_bool_exp): [virtual_conference_chat_group_reports_read_by! ]! 
  """
  fetch data from the table in a streaming manner: "virtual_conference_chat_group_reports"
  """
 virtual_conference_chat_group_reports_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_chat_group_reports_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_chat_group_reports_bool_exp): [virtual_conference_chat_group_reports! ]! 
  """
  fetch data from the table: "virtual_conference_chat_groups"
  """
 virtual_conference_chat_groups("""distinct select on columns"""
distinct_on: [virtual_conference_chat_groups_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_groups_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_groups_bool_exp): [virtual_conference_chat_groups! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_chat_groups"
  """
 virtual_conference_chat_groups_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_chat_groups_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_groups_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_groups_bool_exp): virtual_conference_chat_groups_aggregate! 
  """
  fetch data from the table: "virtual_conference_chat_groups" using primary key columns
  """
 virtual_conference_chat_groups_by_pk(id: uuid! ): virtual_conference_chat_groups
  """
  fetch data from the table in a streaming manner: "virtual_conference_chat_groups"
  """
 virtual_conference_chat_groups_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_chat_groups_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_chat_groups_bool_exp): [virtual_conference_chat_groups! ]! 
  """
  fetch data from the table: "virtual_conference_cron_job_last_rans"
  """
 virtual_conference_cron_job_last_rans("""distinct select on columns"""
distinct_on: [virtual_conference_cron_job_last_rans_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_cron_job_last_rans_order_by! ], """filter the rows returned"""
where: virtual_conference_cron_job_last_rans_bool_exp): [virtual_conference_cron_job_last_rans! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_cron_job_last_rans"
  """
 virtual_conference_cron_job_last_rans_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_cron_job_last_rans_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_cron_job_last_rans_order_by! ], """filter the rows returned"""
where: virtual_conference_cron_job_last_rans_bool_exp): virtual_conference_cron_job_last_rans_aggregate! 
  """
  fetch data from the table: "virtual_conference_cron_job_last_rans" using primary key columns
  """
 virtual_conference_cron_job_last_rans_by_pk(id: Int! ): virtual_conference_cron_job_last_rans
  """
  fetch data from the table in a streaming manner: "virtual_conference_cron_job_last_rans"
  """
 virtual_conference_cron_job_last_rans_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_cron_job_last_rans_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_cron_job_last_rans_bool_exp): [virtual_conference_cron_job_last_rans! ]! 
  """
  fetch data from the table: "virtual_conference_direct_chat_blocks"
  """
 virtual_conference_direct_chat_blocks("""distinct select on columns"""
distinct_on: [virtual_conference_direct_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_chat_blocks_bool_exp): [virtual_conference_direct_chat_blocks! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_direct_chat_blocks"
  """
 virtual_conference_direct_chat_blocks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_direct_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_chat_blocks_bool_exp): virtual_conference_direct_chat_blocks_aggregate! 
  """
  fetch data from the table: "virtual_conference_direct_chat_blocks" using primary key columns
  """
 virtual_conference_direct_chat_blocks_by_pk(id: Int! ): virtual_conference_direct_chat_blocks
  """
  fetch data from the table in a streaming manner: "virtual_conference_direct_chat_blocks"
  """
 virtual_conference_direct_chat_blocks_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_direct_chat_blocks_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_direct_chat_blocks_bool_exp): [virtual_conference_direct_chat_blocks! ]! 
  """
  fetch data from the table: "virtual_conference_direct_messages"
  """
 virtual_conference_direct_messages("""distinct select on columns"""
distinct_on: [virtual_conference_direct_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_messages_bool_exp): [virtual_conference_direct_messages! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_direct_messages"
  """
 virtual_conference_direct_messages_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_direct_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_messages_bool_exp): virtual_conference_direct_messages_aggregate! 
  """
  fetch data from the table: "virtual_conference_direct_messages" using primary key columns
  """
 virtual_conference_direct_messages_by_pk(id: Int! ): virtual_conference_direct_messages
  """
  fetch data from the table in a streaming manner: "virtual_conference_direct_messages"
  """
 virtual_conference_direct_messages_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_direct_messages_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_direct_messages_bool_exp): [virtual_conference_direct_messages! ]! 
  """
  fetch data from the table: "virtual_conference_direct_video_calls"
  """
 virtual_conference_direct_video_calls("""distinct select on columns"""
distinct_on: [virtual_conference_direct_video_calls_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_video_calls_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_video_calls_bool_exp): [virtual_conference_direct_video_calls! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_direct_video_calls"
  """
 virtual_conference_direct_video_calls_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_direct_video_calls_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_video_calls_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_video_calls_bool_exp): virtual_conference_direct_video_calls_aggregate! 
  """
  fetch data from the table: "virtual_conference_direct_video_calls" using primary key columns
  """
 virtual_conference_direct_video_calls_by_pk(id: Int! ): virtual_conference_direct_video_calls
  """
  fetch data from the table in a streaming manner: "virtual_conference_direct_video_calls"
  """
 virtual_conference_direct_video_calls_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_direct_video_calls_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_direct_video_calls_bool_exp): [virtual_conference_direct_video_calls! ]! 
  """
  fetch data from the table: "virtual_conference_email_notification_speeds"
  """
 virtual_conference_email_notification_speeds("""distinct select on columns"""
distinct_on: [virtual_conference_email_notification_speeds_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_email_notification_speeds_order_by! ], """filter the rows returned"""
where: virtual_conference_email_notification_speeds_bool_exp): [virtual_conference_email_notification_speeds! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_email_notification_speeds"
  """
 virtual_conference_email_notification_speeds_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_email_notification_speeds_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_email_notification_speeds_order_by! ], """filter the rows returned"""
where: virtual_conference_email_notification_speeds_bool_exp): virtual_conference_email_notification_speeds_aggregate! 
  """
  fetch data from the table: "virtual_conference_email_notification_speeds" using primary key columns
  """
 virtual_conference_email_notification_speeds_by_pk(value: String! ): virtual_conference_email_notification_speeds
  """
  fetch data from the table in a streaming manner: "virtual_conference_email_notification_speeds"
  """
 virtual_conference_email_notification_speeds_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_email_notification_speeds_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_email_notification_speeds_bool_exp): [virtual_conference_email_notification_speeds! ]! 
  """
  fetch data from the table: "virtual_conference_event_chat_blocks"
  """
 virtual_conference_event_chat_blocks("""distinct select on columns"""
distinct_on: [virtual_conference_event_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_event_chat_blocks_bool_exp): [virtual_conference_event_chat_blocks! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_event_chat_blocks"
  """
 virtual_conference_event_chat_blocks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_event_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_event_chat_blocks_bool_exp): virtual_conference_event_chat_blocks_aggregate! 
  """
  fetch data from the table: "virtual_conference_event_chat_blocks" using primary key columns
  """
 virtual_conference_event_chat_blocks_by_pk(id: Int! ): virtual_conference_event_chat_blocks
  """
  fetch data from the table in a streaming manner: "virtual_conference_event_chat_blocks"
  """
 virtual_conference_event_chat_blocks_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_event_chat_blocks_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_event_chat_blocks_bool_exp): [virtual_conference_event_chat_blocks! ]! 
  """
  fetch data from the table: "virtual_conference_event_interests"
  """
 virtual_conference_event_interests("""distinct select on columns"""
distinct_on: [virtual_conference_event_interests_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_interests_order_by! ], """filter the rows returned"""
where: virtual_conference_event_interests_bool_exp): [virtual_conference_event_interests! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_event_interests"
  """
 virtual_conference_event_interests_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_event_interests_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_interests_order_by! ], """filter the rows returned"""
where: virtual_conference_event_interests_bool_exp): virtual_conference_event_interests_aggregate! 
  """
  fetch data from the table: "virtual_conference_event_interests" using primary key columns
  """
 virtual_conference_event_interests_by_pk(id: Int! ): virtual_conference_event_interests
  """
  fetch data from the table in a streaming manner: "virtual_conference_event_interests"
  """
 virtual_conference_event_interests_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_event_interests_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_event_interests_bool_exp): [virtual_conference_event_interests! ]! 
  """An array relationship"""
 virtual_conference_event_messages("""distinct select on columns"""
distinct_on: [virtual_conference_event_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_event_messages_bool_exp): [virtual_conference_event_messages! ]! 
  """An aggregate relationship"""
 virtual_conference_event_messages_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_event_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_event_messages_bool_exp): virtual_conference_event_messages_aggregate! 
  """
  fetch data from the table: "virtual_conference_event_messages" using primary key columns
  """
 virtual_conference_event_messages_by_pk(id: Int! ): virtual_conference_event_messages
  """
  fetch data from the table: "virtual_conference_event_messages_last_read"
  """
 virtual_conference_event_messages_last_read("""distinct select on columns"""
distinct_on: [virtual_conference_event_messages_last_read_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_messages_last_read_order_by! ], """filter the rows returned"""
where: virtual_conference_event_messages_last_read_bool_exp): [virtual_conference_event_messages_last_read! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_event_messages_last_read"
  """
 virtual_conference_event_messages_last_read_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_event_messages_last_read_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_messages_last_read_order_by! ], """filter the rows returned"""
where: virtual_conference_event_messages_last_read_bool_exp): virtual_conference_event_messages_last_read_aggregate! 
  """
  fetch data from the table: "virtual_conference_event_messages_last_read" using primary key columns
  """
 virtual_conference_event_messages_last_read_by_pk(id: Int! ): virtual_conference_event_messages_last_read
  """
  fetch data from the table in a streaming manner: "virtual_conference_event_messages_last_read"
  """
 virtual_conference_event_messages_last_read_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_event_messages_last_read_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_event_messages_last_read_bool_exp): [virtual_conference_event_messages_last_read! ]! 
  """
  fetch data from the table in a streaming manner: "virtual_conference_event_messages"
  """
 virtual_conference_event_messages_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_event_messages_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_event_messages_bool_exp): [virtual_conference_event_messages! ]! 
  """
  fetch data from the table: "virtual_conference_group_chat_message_reads"
  """
 virtual_conference_group_chat_message_reads("""distinct select on columns"""
distinct_on: [virtual_conference_group_chat_message_reads_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_chat_message_reads_order_by! ], """filter the rows returned"""
where: virtual_conference_group_chat_message_reads_bool_exp): [virtual_conference_group_chat_message_reads! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_group_chat_message_reads"
  """
 virtual_conference_group_chat_message_reads_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_group_chat_message_reads_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_chat_message_reads_order_by! ], """filter the rows returned"""
where: virtual_conference_group_chat_message_reads_bool_exp): virtual_conference_group_chat_message_reads_aggregate! 
  """
  fetch data from the table: "virtual_conference_group_chat_message_reads" using primary key columns
  """
 virtual_conference_group_chat_message_reads_by_pk(id: Int! ): virtual_conference_group_chat_message_reads
  """
  fetch data from the table in a streaming manner: "virtual_conference_group_chat_message_reads"
  """
 virtual_conference_group_chat_message_reads_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_group_chat_message_reads_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_group_chat_message_reads_bool_exp): [virtual_conference_group_chat_message_reads! ]! 
  """
  fetch data from the table: "virtual_conference_group_chat_messages"
  """
 virtual_conference_group_chat_messages("""distinct select on columns"""
distinct_on: [virtual_conference_group_chat_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_chat_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_group_chat_messages_bool_exp): [virtual_conference_group_chat_messages! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_group_chat_messages"
  """
 virtual_conference_group_chat_messages_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_group_chat_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_chat_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_group_chat_messages_bool_exp): virtual_conference_group_chat_messages_aggregate! 
  """
  fetch data from the table: "virtual_conference_group_chat_messages" using primary key columns
  """
 virtual_conference_group_chat_messages_by_pk(id: Int! ): virtual_conference_group_chat_messages
  """
  fetch data from the table in a streaming manner: "virtual_conference_group_chat_messages"
  """
 virtual_conference_group_chat_messages_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_group_chat_messages_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_group_chat_messages_bool_exp): [virtual_conference_group_chat_messages! ]! 
  """
  fetch data from the table: "virtual_conference_group_video_call_dismissals"
  """
 virtual_conference_group_video_call_dismissals("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_dismissals_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_dismissals_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_dismissals_bool_exp): [virtual_conference_group_video_call_dismissals! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_group_video_call_dismissals"
  """
 virtual_conference_group_video_call_dismissals_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_dismissals_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_dismissals_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_dismissals_bool_exp): virtual_conference_group_video_call_dismissals_aggregate! 
  """
  fetch data from the table: "virtual_conference_group_video_call_dismissals" using primary key columns
  """
 virtual_conference_group_video_call_dismissals_by_pk(id: Int! ): virtual_conference_group_video_call_dismissals
  """
  fetch data from the table in a streaming manner: "virtual_conference_group_video_call_dismissals"
  """
 virtual_conference_group_video_call_dismissals_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_group_video_call_dismissals_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_group_video_call_dismissals_bool_exp): [virtual_conference_group_video_call_dismissals! ]! 
  """
  fetch data from the table: "virtual_conference_group_video_call_durations"
  """
 virtual_conference_group_video_call_durations("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_durations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_durations_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_durations_bool_exp): [virtual_conference_group_video_call_durations! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_group_video_call_durations"
  """
 virtual_conference_group_video_call_durations_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_durations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_durations_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_durations_bool_exp): virtual_conference_group_video_call_durations_aggregate! 
  """
  fetch data from the table: "virtual_conference_group_video_call_durations" using primary key columns
  """
 virtual_conference_group_video_call_durations_by_pk(id: uuid! ): virtual_conference_group_video_call_durations
  """
  fetch data from the table in a streaming manner: "virtual_conference_group_video_call_durations"
  """
 virtual_conference_group_video_call_durations_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_group_video_call_durations_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_group_video_call_durations_bool_exp): [virtual_conference_group_video_call_durations! ]! 
  """
  fetch data from the table: "virtual_conference_group_video_call_joins"
  """
 virtual_conference_group_video_call_joins("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_joins_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_joins_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_joins_bool_exp): [virtual_conference_group_video_call_joins! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_group_video_call_joins"
  """
 virtual_conference_group_video_call_joins_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_joins_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_joins_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_joins_bool_exp): virtual_conference_group_video_call_joins_aggregate! 
  """
  fetch data from the table: "virtual_conference_group_video_call_joins" using primary key columns
  """
 virtual_conference_group_video_call_joins_by_pk(id: Int! ): virtual_conference_group_video_call_joins
  """
  fetch data from the table in a streaming manner: "virtual_conference_group_video_call_joins"
  """
 virtual_conference_group_video_call_joins_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_group_video_call_joins_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_group_video_call_joins_bool_exp): [virtual_conference_group_video_call_joins! ]! 
  """
  fetch data from the table: "virtual_conference_group_video_call_notification_dismissals"
  """
 virtual_conference_group_video_call_notification_dismissals("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_notification_dismissals_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_notification_dismissals_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_notification_dismissals_bool_exp): [virtual_conference_group_video_call_notification_dismissals! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_group_video_call_notification_dismissals"
  """
 virtual_conference_group_video_call_notification_dismissals_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_notification_dismissals_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_notification_dismissals_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_notification_dismissals_bool_exp): virtual_conference_group_video_call_notification_dismissals_aggregate! 
  """
  fetch data from the table: "virtual_conference_group_video_call_notification_dismissals" using primary key columns
  """
 virtual_conference_group_video_call_notification_dismissals_by_pk(id: Int! ): virtual_conference_group_video_call_notification_dismissals
  """
  fetch data from the table in a streaming manner: "virtual_conference_group_video_call_notification_dismissals"
  """
 virtual_conference_group_video_call_notification_dismissals_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_group_video_call_notification_dismissals_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_group_video_call_notification_dismissals_bool_exp): [virtual_conference_group_video_call_notification_dismissals! ]! 
  """
  fetch data from the table: "virtual_conference_name_badge"
  """
 virtual_conference_name_badge("""distinct select on columns"""
distinct_on: [virtual_conference_name_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_name_badge_order_by! ], """filter the rows returned"""
where: virtual_conference_name_badge_bool_exp): [virtual_conference_name_badge! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_name_badge"
  """
 virtual_conference_name_badge_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_name_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_name_badge_order_by! ], """filter the rows returned"""
where: virtual_conference_name_badge_bool_exp): virtual_conference_name_badge_aggregate! 
  """
  fetch data from the table: "virtual_conference_name_badge" using primary key columns
  """
 virtual_conference_name_badge_by_pk(id: Int! ): virtual_conference_name_badge
  """
  fetch data from the table in a streaming manner: "virtual_conference_name_badge"
  """
 virtual_conference_name_badge_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_name_badge_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_name_badge_bool_exp): [virtual_conference_name_badge! ]! 
  """
  fetch data from the table: "virtual_conference_notification_preferences"
  """
 virtual_conference_notification_preferences("""distinct select on columns"""
distinct_on: [virtual_conference_notification_preferences_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_notification_preferences_order_by! ], """filter the rows returned"""
where: virtual_conference_notification_preferences_bool_exp): [virtual_conference_notification_preferences! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_notification_preferences"
  """
 virtual_conference_notification_preferences_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_notification_preferences_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_notification_preferences_order_by! ], """filter the rows returned"""
where: virtual_conference_notification_preferences_bool_exp): virtual_conference_notification_preferences_aggregate! 
  """
  fetch data from the table: "virtual_conference_notification_preferences" using primary key columns
  """
 virtual_conference_notification_preferences_by_pk(id: Int! ): virtual_conference_notification_preferences
  """
  fetch data from the table in a streaming manner: "virtual_conference_notification_preferences"
  """
 virtual_conference_notification_preferences_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_notification_preferences_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_notification_preferences_bool_exp): [virtual_conference_notification_preferences! ]! 
  """
  fetch data from the table: "virtual_conference_page_views"
  """
 virtual_conference_page_views("""distinct select on columns"""
distinct_on: [virtual_conference_page_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_page_views_order_by! ], """filter the rows returned"""
where: virtual_conference_page_views_bool_exp): [virtual_conference_page_views! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_page_views"
  """
 virtual_conference_page_views_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_page_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_page_views_order_by! ], """filter the rows returned"""
where: virtual_conference_page_views_bool_exp): virtual_conference_page_views_aggregate! 
  """
  fetch data from the table: "virtual_conference_page_views" using primary key columns
  """
 virtual_conference_page_views_by_pk(id: uuid! ): virtual_conference_page_views
  """
  fetch data from the table in a streaming manner: "virtual_conference_page_views"
  """
 virtual_conference_page_views_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_page_views_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_page_views_bool_exp): [virtual_conference_page_views! ]! 
  """
  fetch data from the table: "virtual_conference_poster_views"
  """
 virtual_conference_poster_views("""distinct select on columns"""
distinct_on: [virtual_conference_poster_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_poster_views_order_by! ], """filter the rows returned"""
where: virtual_conference_poster_views_bool_exp): [virtual_conference_poster_views! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_poster_views"
  """
 virtual_conference_poster_views_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_poster_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_poster_views_order_by! ], """filter the rows returned"""
where: virtual_conference_poster_views_bool_exp): virtual_conference_poster_views_aggregate! 
  """
  fetch data from the table: "virtual_conference_poster_views" using primary key columns
  """
 virtual_conference_poster_views_by_pk(id: Int! ): virtual_conference_poster_views
  """
  fetch data from the table in a streaming manner: "virtual_conference_poster_views"
  """
 virtual_conference_poster_views_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_poster_views_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_poster_views_bool_exp): [virtual_conference_poster_views! ]! 
  """
  fetch data from the table: "virtual_conference_requests"
  """
 virtual_conference_requests("""distinct select on columns"""
distinct_on: [virtual_conference_requests_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_requests_order_by! ], """filter the rows returned"""
where: virtual_conference_requests_bool_exp): [virtual_conference_requests! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_requests"
  """
 virtual_conference_requests_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_requests_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_requests_order_by! ], """filter the rows returned"""
where: virtual_conference_requests_bool_exp): virtual_conference_requests_aggregate! 
  """
  fetch data from the table: "virtual_conference_requests" using primary key columns
  """
 virtual_conference_requests_by_pk(id: Int! ): virtual_conference_requests
  """
  fetch data from the table in a streaming manner: "virtual_conference_requests"
  """
 virtual_conference_requests_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_requests_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_requests_bool_exp): [virtual_conference_requests! ]! 
  """An array relationship"""
 virtual_conference_saved_badges("""distinct select on columns"""
distinct_on: [virtual_conference_saved_badges_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_saved_badges_order_by! ], """filter the rows returned"""
where: virtual_conference_saved_badges_bool_exp): [virtual_conference_saved_badges! ]! 
  """An aggregate relationship"""
 virtual_conference_saved_badges_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_saved_badges_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_saved_badges_order_by! ], """filter the rows returned"""
where: virtual_conference_saved_badges_bool_exp): virtual_conference_saved_badges_aggregate! 
  """
  fetch data from the table: "virtual_conference_saved_badges" using primary key columns
  """
 virtual_conference_saved_badges_by_pk(id: Int! ): virtual_conference_saved_badges
  """
  fetch data from the table in a streaming manner: "virtual_conference_saved_badges"
  """
 virtual_conference_saved_badges_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_saved_badges_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_saved_badges_bool_exp): [virtual_conference_saved_badges! ]! 
  """
  fetch data from the table: "virtual_conference_session_bookmarks"
  """
 virtual_conference_session_bookmarks("""distinct select on columns"""
distinct_on: [virtual_conference_session_bookmarks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_session_bookmarks_order_by! ], """filter the rows returned"""
where: virtual_conference_session_bookmarks_bool_exp): [virtual_conference_session_bookmarks! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_session_bookmarks"
  """
 virtual_conference_session_bookmarks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_session_bookmarks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_session_bookmarks_order_by! ], """filter the rows returned"""
where: virtual_conference_session_bookmarks_bool_exp): virtual_conference_session_bookmarks_aggregate! 
  """
  fetch data from the table: "virtual_conference_session_bookmarks" using primary key columns
  """
 virtual_conference_session_bookmarks_by_pk(id: Int! ): virtual_conference_session_bookmarks
  """
  fetch data from the table in a streaming manner: "virtual_conference_session_bookmarks"
  """
 virtual_conference_session_bookmarks_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_session_bookmarks_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_session_bookmarks_bool_exp): [virtual_conference_session_bookmarks! ]! 
  """
  fetch data from the table: "virtual_conference_session_views"
  """
 virtual_conference_session_views("""distinct select on columns"""
distinct_on: [virtual_conference_session_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_session_views_order_by! ], """filter the rows returned"""
where: virtual_conference_session_views_bool_exp): [virtual_conference_session_views! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_session_views"
  """
 virtual_conference_session_views_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_session_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_session_views_order_by! ], """filter the rows returned"""
where: virtual_conference_session_views_bool_exp): virtual_conference_session_views_aggregate! 
  """
  fetch data from the table: "virtual_conference_session_views" using primary key columns
  """
 virtual_conference_session_views_by_pk(id: Int! ): virtual_conference_session_views
  """
  fetch data from the table in a streaming manner: "virtual_conference_session_views"
  """
 virtual_conference_session_views_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_session_views_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_session_views_bool_exp): [virtual_conference_session_views! ]! 
  """
  fetch data from the table: "virtual_conference_sessions"
  """
 virtual_conference_sessions("""distinct select on columns"""
distinct_on: [virtual_conference_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_sessions_order_by! ], """filter the rows returned"""
where: virtual_conference_sessions_bool_exp): [virtual_conference_sessions! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_sessions"
  """
 virtual_conference_sessions_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_sessions_order_by! ], """filter the rows returned"""
where: virtual_conference_sessions_bool_exp): virtual_conference_sessions_aggregate! 
  """
  fetch data from the table: "virtual_conference_sessions" using primary key columns
  """
 virtual_conference_sessions_by_pk(id: uuid! ): virtual_conference_sessions
  """
  fetch data from the table in a streaming manner: "virtual_conference_sessions"
  """
 virtual_conference_sessions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_sessions_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_sessions_bool_exp): [virtual_conference_sessions! ]! 
  """
  fetch data from the table: "virtual_conference_submission_bookmarks"
  """
 virtual_conference_submission_bookmarks("""distinct select on columns"""
distinct_on: [virtual_conference_submission_bookmarks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_submission_bookmarks_order_by! ], """filter the rows returned"""
where: virtual_conference_submission_bookmarks_bool_exp): [virtual_conference_submission_bookmarks! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_submission_bookmarks"
  """
 virtual_conference_submission_bookmarks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_submission_bookmarks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_submission_bookmarks_order_by! ], """filter the rows returned"""
where: virtual_conference_submission_bookmarks_bool_exp): virtual_conference_submission_bookmarks_aggregate! 
  """
  fetch data from the table: "virtual_conference_submission_bookmarks" using primary key columns
  """
 virtual_conference_submission_bookmarks_by_pk(id: uuid! ): virtual_conference_submission_bookmarks
  """
  fetch data from the table in a streaming manner: "virtual_conference_submission_bookmarks"
  """
 virtual_conference_submission_bookmarks_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_submission_bookmarks_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_submission_bookmarks_bool_exp): [virtual_conference_submission_bookmarks! ]! 
  """
  fetch data from the table: "virtual_conference_submission_views"
  """
 virtual_conference_submission_views("""distinct select on columns"""
distinct_on: [virtual_conference_submission_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_submission_views_order_by! ], """filter the rows returned"""
where: virtual_conference_submission_views_bool_exp): [virtual_conference_submission_views! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_submission_views"
  """
 virtual_conference_submission_views_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_submission_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_submission_views_order_by! ], """filter the rows returned"""
where: virtual_conference_submission_views_bool_exp): virtual_conference_submission_views_aggregate! 
  """
  fetch data from the table: "virtual_conference_submission_views" using primary key columns
  """
 virtual_conference_submission_views_by_pk(id: Int! ): virtual_conference_submission_views
  """
  fetch data from the table in a streaming manner: "virtual_conference_submission_views"
  """
 virtual_conference_submission_views_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_submission_views_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_submission_views_bool_exp): [virtual_conference_submission_views! ]! 
  """
  fetch data from the table: "virtual_conference_symposium_views"
  """
 virtual_conference_symposium_views("""distinct select on columns"""
distinct_on: [virtual_conference_symposium_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_symposium_views_order_by! ], """filter the rows returned"""
where: virtual_conference_symposium_views_bool_exp): [virtual_conference_symposium_views! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_symposium_views"
  """
 virtual_conference_symposium_views_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_symposium_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_symposium_views_order_by! ], """filter the rows returned"""
where: virtual_conference_symposium_views_bool_exp): virtual_conference_symposium_views_aggregate! 
  """
  fetch data from the table: "virtual_conference_symposium_views" using primary key columns
  """
 virtual_conference_symposium_views_by_pk(id: Int! ): virtual_conference_symposium_views
  """
  fetch data from the table in a streaming manner: "virtual_conference_symposium_views"
  """
 virtual_conference_symposium_views_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_symposium_views_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_symposium_views_bool_exp): [virtual_conference_symposium_views! ]! 
  """
  fetch data from the table: "virtual_conference_top_submission_category_views"
  """
 virtual_conference_top_submission_category_views("""distinct select on columns"""
distinct_on: [virtual_conference_top_submission_category_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_top_submission_category_views_order_by! ], """filter the rows returned"""
where: virtual_conference_top_submission_category_views_bool_exp): [virtual_conference_top_submission_category_views! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_top_submission_category_views"
  """
 virtual_conference_top_submission_category_views_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_top_submission_category_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_top_submission_category_views_order_by! ], """filter the rows returned"""
where: virtual_conference_top_submission_category_views_bool_exp): virtual_conference_top_submission_category_views_aggregate! 
  """
  fetch data from the table in a streaming manner: "virtual_conference_top_submission_category_views"
  """
 virtual_conference_top_submission_category_views_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_top_submission_category_views_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_top_submission_category_views_bool_exp): [virtual_conference_top_submission_category_views! ]! 
  """
  fetch data from the table: "virtual_conference_top_ten_sessions_by_bookmarks"
  """
 virtual_conference_top_ten_sessions_by_bookmarks("""distinct select on columns"""
distinct_on: [virtual_conference_top_ten_sessions_by_bookmarks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_top_ten_sessions_by_bookmarks_order_by! ], """filter the rows returned"""
where: virtual_conference_top_ten_sessions_by_bookmarks_bool_exp): [virtual_conference_top_ten_sessions_by_bookmarks! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_top_ten_sessions_by_bookmarks"
  """
 virtual_conference_top_ten_sessions_by_bookmarks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_top_ten_sessions_by_bookmarks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_top_ten_sessions_by_bookmarks_order_by! ], """filter the rows returned"""
where: virtual_conference_top_ten_sessions_by_bookmarks_bool_exp): virtual_conference_top_ten_sessions_by_bookmarks_aggregate! 
  """
  fetch data from the table in a streaming manner: "virtual_conference_top_ten_sessions_by_bookmarks"
  """
 virtual_conference_top_ten_sessions_by_bookmarks_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_top_ten_sessions_by_bookmarks_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_top_ten_sessions_by_bookmarks_bool_exp): [virtual_conference_top_ten_sessions_by_bookmarks! ]! 
  """
  fetch data from the table: "virtual_conference_top_ten_sessions_by_views"
  """
 virtual_conference_top_ten_sessions_by_views("""distinct select on columns"""
distinct_on: [virtual_conference_top_ten_sessions_by_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_top_ten_sessions_by_views_order_by! ], """filter the rows returned"""
where: virtual_conference_top_ten_sessions_by_views_bool_exp): [virtual_conference_top_ten_sessions_by_views! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_top_ten_sessions_by_views"
  """
 virtual_conference_top_ten_sessions_by_views_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_top_ten_sessions_by_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_top_ten_sessions_by_views_order_by! ], """filter the rows returned"""
where: virtual_conference_top_ten_sessions_by_views_bool_exp): virtual_conference_top_ten_sessions_by_views_aggregate! 
  """
  fetch data from the table in a streaming manner: "virtual_conference_top_ten_sessions_by_views"
  """
 virtual_conference_top_ten_sessions_by_views_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_top_ten_sessions_by_views_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_top_ten_sessions_by_views_bool_exp): [virtual_conference_top_ten_sessions_by_views! ]! 
  """
  fetch data from the table: "virtual_conference_top_ten_submissions"
  """
 virtual_conference_top_ten_submissions("""distinct select on columns"""
distinct_on: [virtual_conference_top_ten_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_top_ten_submissions_order_by! ], """filter the rows returned"""
where: virtual_conference_top_ten_submissions_bool_exp): [virtual_conference_top_ten_submissions! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_top_ten_submissions"
  """
 virtual_conference_top_ten_submissions_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_top_ten_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_top_ten_submissions_order_by! ], """filter the rows returned"""
where: virtual_conference_top_ten_submissions_bool_exp): virtual_conference_top_ten_submissions_aggregate! 
  """
  fetch data from the table: "virtual_conference_top_ten_submissions_by_bookmarks"
  """
 virtual_conference_top_ten_submissions_by_bookmarks("""distinct select on columns"""
distinct_on: [virtual_conference_top_ten_submissions_by_bookmarks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_top_ten_submissions_by_bookmarks_order_by! ], """filter the rows returned"""
where: virtual_conference_top_ten_submissions_by_bookmarks_bool_exp): [virtual_conference_top_ten_submissions_by_bookmarks! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_top_ten_submissions_by_bookmarks"
  """
 virtual_conference_top_ten_submissions_by_bookmarks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_top_ten_submissions_by_bookmarks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_top_ten_submissions_by_bookmarks_order_by! ], """filter the rows returned"""
where: virtual_conference_top_ten_submissions_by_bookmarks_bool_exp): virtual_conference_top_ten_submissions_by_bookmarks_aggregate! 
  """
  fetch data from the table in a streaming manner: "virtual_conference_top_ten_submissions_by_bookmarks"
  """
 virtual_conference_top_ten_submissions_by_bookmarks_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_top_ten_submissions_by_bookmarks_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_top_ten_submissions_by_bookmarks_bool_exp): [virtual_conference_top_ten_submissions_by_bookmarks! ]! 
  """
  fetch data from the table in a streaming manner: "virtual_conference_top_ten_submissions"
  """
 virtual_conference_top_ten_submissions_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_top_ten_submissions_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_top_ten_submissions_bool_exp): [virtual_conference_top_ten_submissions! ]! 
  """
  fetch data from the table: "virtual_conference_user_heartbeats"
  """
 virtual_conference_user_heartbeats("""distinct select on columns"""
distinct_on: [virtual_conference_user_heartbeats_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_heartbeats_order_by! ], """filter the rows returned"""
where: virtual_conference_user_heartbeats_bool_exp): [virtual_conference_user_heartbeats! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_user_heartbeats"
  """
 virtual_conference_user_heartbeats_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_user_heartbeats_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_heartbeats_order_by! ], """filter the rows returned"""
where: virtual_conference_user_heartbeats_bool_exp): virtual_conference_user_heartbeats_aggregate! 
  """
  fetch data from the table: "virtual_conference_user_heartbeats" using primary key columns
  """
 virtual_conference_user_heartbeats_by_pk(id: Int! ): virtual_conference_user_heartbeats
  """
  fetch data from the table in a streaming manner: "virtual_conference_user_heartbeats"
  """
 virtual_conference_user_heartbeats_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_user_heartbeats_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_user_heartbeats_bool_exp): [virtual_conference_user_heartbeats! ]! 
  """An array relationship"""
 virtual_conference_user_interests("""distinct select on columns"""
distinct_on: [virtual_conference_user_interests_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_interests_order_by! ], """filter the rows returned"""
where: virtual_conference_user_interests_bool_exp): [virtual_conference_user_interests! ]! 
  """An aggregate relationship"""
 virtual_conference_user_interests_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_user_interests_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_interests_order_by! ], """filter the rows returned"""
where: virtual_conference_user_interests_bool_exp): virtual_conference_user_interests_aggregate! 
  """
  fetch data from the table: "virtual_conference_user_interests" using primary key columns
  """
 virtual_conference_user_interests_by_pk(id: Int! ): virtual_conference_user_interests
  """
  fetch data from the table in a streaming manner: "virtual_conference_user_interests"
  """
 virtual_conference_user_interests_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_user_interests_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_user_interests_bool_exp): [virtual_conference_user_interests! ]! 
  """
  fetch data from the table: "virtual_conference_user_notifications_last_emailed"
  """
 virtual_conference_user_notifications_last_emailed("""distinct select on columns"""
distinct_on: [virtual_conference_user_notifications_last_emailed_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_notifications_last_emailed_order_by! ], """filter the rows returned"""
where: virtual_conference_user_notifications_last_emailed_bool_exp): [virtual_conference_user_notifications_last_emailed! ]! 
  """
  fetch aggregated fields from the table: "virtual_conference_user_notifications_last_emailed"
  """
 virtual_conference_user_notifications_last_emailed_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_user_notifications_last_emailed_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_notifications_last_emailed_order_by! ], """filter the rows returned"""
where: virtual_conference_user_notifications_last_emailed_bool_exp): virtual_conference_user_notifications_last_emailed_aggregate! 
  """
  fetch data from the table: "virtual_conference_user_notifications_last_emailed" using primary key columns
  """
 virtual_conference_user_notifications_last_emailed_by_pk(id: Int! ): virtual_conference_user_notifications_last_emailed
  """
  fetch data from the table in a streaming manner: "virtual_conference_user_notifications_last_emailed"
  """
 virtual_conference_user_notifications_last_emailed_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [virtual_conference_user_notifications_last_emailed_stream_cursor_input]! , """filter the rows returned"""
where: virtual_conference_user_notifications_last_emailed_bool_exp): [virtual_conference_user_notifications_last_emailed! ]! 
  """
  fetch data from the table: "walkthrough_metrics"
  """
 walkthrough_metrics("""distinct select on columns"""
distinct_on: [walkthrough_metrics_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [walkthrough_metrics_order_by! ], """filter the rows returned"""
where: walkthrough_metrics_bool_exp): [walkthrough_metrics! ]! 
  """
  fetch aggregated fields from the table: "walkthrough_metrics"
  """
 walkthrough_metrics_aggregate("""distinct select on columns"""
distinct_on: [walkthrough_metrics_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [walkthrough_metrics_order_by! ], """filter the rows returned"""
where: walkthrough_metrics_bool_exp): walkthrough_metrics_aggregate! 
  """
  fetch data from the table: "walkthrough_metrics" using primary key columns
  """
 walkthrough_metrics_by_pk(id: Int! ): walkthrough_metrics
  """
  fetch data from the table in a streaming manner: "walkthrough_metrics"
  """
 walkthrough_metrics_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [walkthrough_metrics_stream_cursor_input]! , """filter the rows returned"""
where: walkthrough_metrics_bool_exp): [walkthrough_metrics! ]! 
  """
  fetch data from the table: "zoom_users_cache"
  """
 zoom_users_cache("""distinct select on columns"""
distinct_on: [zoom_users_cache_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [zoom_users_cache_order_by! ], """filter the rows returned"""
where: zoom_users_cache_bool_exp): [zoom_users_cache! ]! 
  """
  fetch aggregated fields from the table: "zoom_users_cache"
  """
 zoom_users_cache_aggregate("""distinct select on columns"""
distinct_on: [zoom_users_cache_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [zoom_users_cache_order_by! ], """filter the rows returned"""
where: zoom_users_cache_bool_exp): zoom_users_cache_aggregate! 
  """
  fetch data from the table: "zoom_users_cache" using primary key columns
  """
 zoom_users_cache_by_pk(id: Int! ): zoom_users_cache
  """
  fetch data from the table in a streaming manner: "zoom_users_cache"
  """
 zoom_users_cache_stream("""maximum number of rows returned in a single batch"""
batch_size: Int! , """cursor to stream the results returned by the query"""
cursor: [zoom_users_cache_stream_cursor_input]! , """filter the rows returned"""
where: zoom_users_cache_bool_exp): [zoom_users_cache! ]! 
}

"""A collection of submissions to be reviewed and presented together"""
type symposia {
   admin_notes: String
   archived: Boolean
   creator_user_id: Int! 
   decision_status: decision
  """An array relationship"""
 decisions("""distinct select on columns"""
distinct_on: [decisions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [decisions_order_by! ], """filter the rows returned"""
where: decisions_bool_exp): [decisions! ]! 
  """An aggregate relationship"""
 decisions_aggregate("""distinct select on columns"""
distinct_on: [decisions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [decisions_order_by! ], """filter the rows returned"""
where: decisions_bool_exp): decisions_aggregate! 
  """An object relationship"""
 event: events! 
   event_id: Int! 
   id: Int! 
   last_updated: bigint
   last_updated_by: Int
   program_code: String
  """An array relationship"""
 program_sessions_symposia("""distinct select on columns"""
distinct_on: [program_sessions_symposia_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_symposia_order_by! ], """filter the rows returned"""
where: program_sessions_symposia_bool_exp): [program_sessions_symposia! ]! 
  """An aggregate relationship"""
 program_sessions_symposia_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_symposia_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_symposia_order_by! ], """filter the rows returned"""
where: program_sessions_symposia_bool_exp): program_sessions_symposia_aggregate! 
  """An array relationship"""
 reviews("""distinct select on columns"""
distinct_on: [symposium_reviews_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_reviews_order_by! ], """filter the rows returned"""
where: symposium_reviews_bool_exp): [symposium_reviews! ]! 
  """An aggregate relationship"""
 reviews_aggregate("""distinct select on columns"""
distinct_on: [symposium_reviews_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_reviews_order_by! ], """filter the rows returned"""
where: symposium_reviews_bool_exp): symposium_reviews_aggregate! 
   serial_number: Int! 
  """An array relationship"""
 session_submission_times("""distinct select on columns"""
distinct_on: [symposium_submission_session_times_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_submission_session_times_order_by! ], """filter the rows returned"""
where: symposium_submission_session_times_bool_exp): [symposium_submission_session_times! ]! 
  """An aggregate relationship"""
 session_submission_times_aggregate("""distinct select on columns"""
distinct_on: [symposium_submission_session_times_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_submission_session_times_order_by! ], """filter the rows returned"""
where: symposium_submission_session_times_bool_exp): symposium_submission_session_times_aggregate! 
  """An array relationship"""
 submissions("""distinct select on columns"""
distinct_on: [submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submissions_order_by! ], """filter the rows returned"""
where: submissions_bool_exp): [submissions! ]! 
  """An aggregate relationship"""
 submissions_aggregate("""distinct select on columns"""
distinct_on: [submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submissions_order_by! ], """filter the rows returned"""
where: submissions_bool_exp): submissions_aggregate! 
   submitter_user_id: Int! 
  """An array relationship"""
 symposium_persons("""distinct select on columns"""
distinct_on: [symposium_persons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_persons_order_by! ], """filter the rows returned"""
where: symposium_persons_bool_exp): [symposium_persons! ]! 
  """An aggregate relationship"""
 symposium_persons_aggregate("""distinct select on columns"""
distinct_on: [symposium_persons_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_persons_order_by! ], """filter the rows returned"""
where: symposium_persons_bool_exp): symposium_persons_aggregate! 
  """An array relationship"""
 symposium_question_responses("""distinct select on columns"""
distinct_on: [symposium_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_question_responses_order_by! ], """filter the rows returned"""
where: symposium_question_responses_bool_exp): [symposium_question_responses! ]! 
  """An aggregate relationship"""
 symposium_question_responses_aggregate("""distinct select on columns"""
distinct_on: [symposium_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_question_responses_order_by! ], """filter the rows returned"""
where: symposium_question_responses_bool_exp): symposium_question_responses_aggregate! 
   time_stamp: bigint! 
  """An array relationship"""
 user_nullable("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): [users! ]! 
  """An aggregate relationship"""
 user_nullable_aggregate("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): users_aggregate! 
}

"""
columns and relationships of "symposia_acceptance_types"
"""
type symposia_acceptance_types {
  """An object relationship"""
 acceptance_type: event_acceptance_types
   event_acceptance_type_id: Int
  """An object relationship"""
 symposium: symposia
   symposium_acceptance_type_id: Int! 
   symposium_id: Int
   time_stamp: bigint
}

"""
aggregated selection of "symposia_acceptance_types"
"""
type symposia_acceptance_types_aggregate {
   aggregate: symposia_acceptance_types_aggregate_fields
   nodes: [symposia_acceptance_types! ]! 
}

"""
aggregate fields of "symposia_acceptance_types"
"""
type symposia_acceptance_types_aggregate_fields {
   avg: symposia_acceptance_types_avg_fields
   count(columns: [symposia_acceptance_types_select_column! ], distinct: Boolean): Int! 
   max: symposia_acceptance_types_max_fields
   min: symposia_acceptance_types_min_fields
   stddev: symposia_acceptance_types_stddev_fields
   stddev_pop: symposia_acceptance_types_stddev_pop_fields
   stddev_samp: symposia_acceptance_types_stddev_samp_fields
   sum: symposia_acceptance_types_sum_fields
   var_pop: symposia_acceptance_types_var_pop_fields
   var_samp: symposia_acceptance_types_var_samp_fields
   variance: symposia_acceptance_types_variance_fields
}

"""aggregate avg on columns"""
type symposia_acceptance_types_avg_fields {
   event_acceptance_type_id: Float
   symposium_acceptance_type_id: Float
   symposium_id: Float
   time_stamp: Float
}

"""
Boolean expression to filter rows from the table "symposia_acceptance_types". All fields are combined with a logical 'AND'.
"""
input symposia_acceptance_types_bool_exp {
  _and: [symposia_acceptance_types_bool_exp! ]
  _not: symposia_acceptance_types_bool_exp
  _or: [symposia_acceptance_types_bool_exp! ]
  acceptance_type: event_acceptance_types_bool_exp
  event_acceptance_type_id: Int_comparison_exp
  symposium: symposia_bool_exp
  symposium_acceptance_type_id: Int_comparison_exp
  symposium_id: Int_comparison_exp
  time_stamp: bigint_comparison_exp
}

"""
unique or primary key constraints on table "symposia_acceptance_types"
"""
enum symposia_acceptance_types_constraint {
  """
  unique or primary key constraint on columns "symposium_acceptance_type_id"
  """
symposia_outcomes_pkey
}

"""
input type for incrementing numeric columns in table "symposia_acceptance_types"
"""
input symposia_acceptance_types_inc_input {
  event_acceptance_type_id: Int
  symposium_acceptance_type_id: Int
  symposium_id: Int
  time_stamp: bigint
}

"""
input type for inserting data into table "symposia_acceptance_types"
"""
input symposia_acceptance_types_insert_input {
  acceptance_type: event_acceptance_types_obj_rel_insert_input
  event_acceptance_type_id: Int
  symposium: symposia_obj_rel_insert_input
  symposium_acceptance_type_id: Int! 
  symposium_id: Int
  time_stamp: bigint! 
}

"""aggregate max on columns"""
type symposia_acceptance_types_max_fields {
   event_acceptance_type_id: Int
   symposium_acceptance_type_id: Int
   symposium_id: Int
   time_stamp: bigint
}

"""aggregate min on columns"""
type symposia_acceptance_types_min_fields {
   event_acceptance_type_id: Int
   symposium_acceptance_type_id: Int
   symposium_id: Int
   time_stamp: bigint
}

"""
response of any mutation on the table "symposia_acceptance_types"
"""
type symposia_acceptance_types_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [symposia_acceptance_types! ]! 
}

"""
on_conflict condition type for table "symposia_acceptance_types"
"""
input symposia_acceptance_types_on_conflict {
  constraint: symposia_acceptance_types_constraint! 
  update_columns: [symposia_acceptance_types_update_column! ]! 
  where: symposia_acceptance_types_bool_exp
}

"""Ordering options when selecting data from "symposia_acceptance_types"."""
input symposia_acceptance_types_order_by {
  acceptance_type: event_acceptance_types_order_by
  event_acceptance_type_id: order_by
  symposium: symposia_order_by
  symposium_acceptance_type_id: order_by
  symposium_id: order_by
  time_stamp: order_by
}

"""primary key columns input for table: symposia_acceptance_types"""
input symposia_acceptance_types_pk_columns_input {
  symposium_acceptance_type_id: Int! 
}

"""
select columns of table "symposia_acceptance_types"
"""
enum symposia_acceptance_types_select_column {
  """column name"""
event_acceptance_type_id
  """column name"""
symposium_acceptance_type_id
  """column name"""
symposium_id
  """column name"""
time_stamp
}

"""
input type for updating data in table "symposia_acceptance_types"
"""
input symposia_acceptance_types_set_input {
  event_acceptance_type_id: Int
  symposium_acceptance_type_id: Int
  symposium_id: Int
  time_stamp: bigint
}

"""aggregate stddev on columns"""
type symposia_acceptance_types_stddev_fields {
   event_acceptance_type_id: Float
   symposium_acceptance_type_id: Float
   symposium_id: Float
   time_stamp: Float
}

"""aggregate stddev_pop on columns"""
type symposia_acceptance_types_stddev_pop_fields {
   event_acceptance_type_id: Float
   symposium_acceptance_type_id: Float
   symposium_id: Float
   time_stamp: Float
}

"""aggregate stddev_samp on columns"""
type symposia_acceptance_types_stddev_samp_fields {
   event_acceptance_type_id: Float
   symposium_acceptance_type_id: Float
   symposium_id: Float
   time_stamp: Float
}

"""
Streaming cursor of the table "symposia_acceptance_types"
"""
input symposia_acceptance_types_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: symposia_acceptance_types_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input symposia_acceptance_types_stream_cursor_value_input {
  event_acceptance_type_id: Int
  symposium_acceptance_type_id: Int
  symposium_id: Int
  time_stamp: bigint
}

"""aggregate sum on columns"""
type symposia_acceptance_types_sum_fields {
   event_acceptance_type_id: Int
   symposium_acceptance_type_id: Int
   symposium_id: Int
   time_stamp: bigint
}

"""
update columns of table "symposia_acceptance_types"
"""
enum symposia_acceptance_types_update_column {
  """column name"""
event_acceptance_type_id
  """column name"""
symposium_acceptance_type_id
  """column name"""
symposium_id
  """column name"""
time_stamp
}

input symposia_acceptance_types_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: symposia_acceptance_types_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: symposia_acceptance_types_set_input
  where: symposia_acceptance_types_bool_exp! 
}

"""aggregate var_pop on columns"""
type symposia_acceptance_types_var_pop_fields {
   event_acceptance_type_id: Float
   symposium_acceptance_type_id: Float
   symposium_id: Float
   time_stamp: Float
}

"""aggregate var_samp on columns"""
type symposia_acceptance_types_var_samp_fields {
   event_acceptance_type_id: Float
   symposium_acceptance_type_id: Float
   symposium_id: Float
   time_stamp: Float
}

"""aggregate variance on columns"""
type symposia_acceptance_types_variance_fields {
   event_acceptance_type_id: Float
   symposium_acceptance_type_id: Float
   symposium_id: Float
   time_stamp: Float
}

"""
aggregated selection of "symposia_with_archived"
"""
type symposia_aggregate {
   aggregate: symposia_aggregate_fields
   nodes: [symposia! ]! 
}

input symposia_aggregate_bool_exp {
  bool_and: symposia_aggregate_bool_exp_bool_and
  bool_or: symposia_aggregate_bool_exp_bool_or
  count: symposia_aggregate_bool_exp_count
}

input symposia_aggregate_bool_exp_bool_and {
  arguments: symposia_select_column_symposia_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: symposia_bool_exp
  predicate: Boolean_comparison_exp! 
}

input symposia_aggregate_bool_exp_bool_or {
  arguments: symposia_select_column_symposia_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: symposia_bool_exp
  predicate: Boolean_comparison_exp! 
}

input symposia_aggregate_bool_exp_count {
  arguments: [symposia_select_column! ]
  distinct: Boolean
  filter: symposia_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "symposia_with_archived"
"""
type symposia_aggregate_fields {
   avg: symposia_avg_fields
   count(columns: [symposia_select_column! ], distinct: Boolean): Int! 
   max: symposia_max_fields
   min: symposia_min_fields
   stddev: symposia_stddev_fields
   stddev_pop: symposia_stddev_pop_fields
   stddev_samp: symposia_stddev_samp_fields
   sum: symposia_sum_fields
   var_pop: symposia_var_pop_fields
   var_samp: symposia_var_samp_fields
   variance: symposia_variance_fields
}

"""
order by aggregate values of table "symposia_with_archived"
"""
input symposia_aggregate_order_by {
  avg: symposia_avg_order_by
  count: order_by
  max: symposia_max_order_by
  min: symposia_min_order_by
  stddev: symposia_stddev_order_by
  stddev_pop: symposia_stddev_pop_order_by
  stddev_samp: symposia_stddev_samp_order_by
  sum: symposia_sum_order_by
  var_pop: symposia_var_pop_order_by
  var_samp: symposia_var_samp_order_by
  variance: symposia_variance_order_by
}

"""
input type for inserting array relation for remote table "symposia_with_archived"
"""
input symposia_arr_rel_insert_input {
  data: [symposia_insert_input! ]! 
  """upsert condition"""
on_conflict: symposia_on_conflict
}

"""aggregate avg on columns"""
type symposia_avg_fields {
   creator_user_id: Float
   event_id: Float
   id: Float
   last_updated: Float
   last_updated_by: Float
   serial_number: Float
   submitter_user_id: Float
   time_stamp: Float
}

"""
order by avg() on columns of table "symposia_with_archived"
"""
input symposia_avg_order_by {
  creator_user_id: order_by
  event_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  serial_number: order_by
  submitter_user_id: order_by
  time_stamp: order_by
}

"""
Boolean expression to filter rows from the table "symposia_with_archived". All fields are combined with a logical 'AND'.
"""
input symposia_bool_exp {
  _and: [symposia_bool_exp! ]
  _not: symposia_bool_exp
  _or: [symposia_bool_exp! ]
  admin_notes: String_comparison_exp
  archived: Boolean_comparison_exp
  creator_user_id: Int_comparison_exp
  decision_status: decision_comparison_exp
  decisions: decisions_bool_exp
  decisions_aggregate: decisions_aggregate_bool_exp
  event: events_bool_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  last_updated: bigint_comparison_exp
  last_updated_by: Int_comparison_exp
  program_code: String_comparison_exp
  program_sessions_symposia: program_sessions_symposia_bool_exp
  program_sessions_symposia_aggregate: program_sessions_symposia_aggregate_bool_exp
  reviews: symposium_reviews_bool_exp
  reviews_aggregate: symposium_reviews_aggregate_bool_exp
  serial_number: Int_comparison_exp
  session_submission_times: symposium_submission_session_times_bool_exp
  session_submission_times_aggregate: symposium_submission_session_times_aggregate_bool_exp
  submissions: submissions_bool_exp
  submissions_aggregate: submissions_aggregate_bool_exp
  submitter_user_id: Int_comparison_exp
  symposium_persons: symposium_persons_bool_exp
  symposium_persons_aggregate: symposium_persons_aggregate_bool_exp
  symposium_question_responses: symposium_question_responses_bool_exp
  symposium_question_responses_aggregate: symposium_question_responses_aggregate_bool_exp
  time_stamp: bigint_comparison_exp
  user_nullable: users_bool_exp
  user_nullable_aggregate: users_aggregate_bool_exp
}

"""
unique or primary key constraints on table "symposia_with_archived"
"""
enum symposia_constraint {
  """
  unique or primary key constraint on columns "symposium_id"
  """
symposia_pkey
}

"""
input type for incrementing numeric columns in table "symposia_with_archived"
"""
input symposia_inc_input {
  creator_user_id: Int
  event_id: Int
  id: Int
  last_updated: bigint
  last_updated_by: Int
  serial_number: Int
  submitter_user_id: Int
  time_stamp: bigint
}

"""
input type for inserting data into table "symposia_with_archived"
"""
input symposia_insert_input {
  admin_notes: String
  archived: Boolean! 
  creator_user_id: Int! 
  decision_status: decision! 
  decisions: decisions_arr_rel_insert_input
  event: events_obj_rel_insert_input
  event_id: Int! 
  id: Int
  last_updated: bigint
  last_updated_by: Int
  program_code: String
  program_sessions_symposia: program_sessions_symposia_arr_rel_insert_input
  reviews: symposium_reviews_arr_rel_insert_input
  serial_number: Int! 
  session_submission_times: symposium_submission_session_times_arr_rel_insert_input
  submissions: submissions_arr_rel_insert_input
  submitter_user_id: Int! 
  symposium_persons: symposium_persons_arr_rel_insert_input
  symposium_question_responses: symposium_question_responses_arr_rel_insert_input
  time_stamp: bigint! 
  user_nullable: users_arr_rel_insert_input
}

"""aggregate max on columns"""
type symposia_max_fields {
   admin_notes: String
   creator_user_id: Int
   decision_status: decision
   event_id: Int
   id: Int
   last_updated: bigint
   last_updated_by: Int
   program_code: String
   serial_number: Int
   submitter_user_id: Int
   time_stamp: bigint
}

"""
order by max() on columns of table "symposia_with_archived"
"""
input symposia_max_order_by {
  admin_notes: order_by
  creator_user_id: order_by
  decision_status: order_by
  event_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  program_code: order_by
  serial_number: order_by
  submitter_user_id: order_by
  time_stamp: order_by
}

"""aggregate min on columns"""
type symposia_min_fields {
   admin_notes: String
   creator_user_id: Int
   decision_status: decision
   event_id: Int
   id: Int
   last_updated: bigint
   last_updated_by: Int
   program_code: String
   serial_number: Int
   submitter_user_id: Int
   time_stamp: bigint
}

"""
order by min() on columns of table "symposia_with_archived"
"""
input symposia_min_order_by {
  admin_notes: order_by
  creator_user_id: order_by
  decision_status: order_by
  event_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  program_code: order_by
  serial_number: order_by
  submitter_user_id: order_by
  time_stamp: order_by
}

"""
response of any mutation on the table "symposia_with_archived"
"""
type symposia_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [symposia! ]! 
}

"""
input type for inserting object relation for remote table "symposia_with_archived"
"""
input symposia_obj_rel_insert_input {
  data: symposia_insert_input! 
  """upsert condition"""
on_conflict: symposia_on_conflict
}

"""
on_conflict condition type for table "symposia_with_archived"
"""
input symposia_on_conflict {
  constraint: symposia_constraint! 
  update_columns: [symposia_update_column! ]! 
  where: symposia_bool_exp
}

"""Ordering options when selecting data from "symposia_with_archived"."""
input symposia_order_by {
  admin_notes: order_by
  archived: order_by
  creator_user_id: order_by
  decision_status: order_by
  decisions_aggregate: decisions_aggregate_order_by
  event: events_order_by
  event_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  program_code: order_by
  program_sessions_symposia_aggregate: program_sessions_symposia_aggregate_order_by
  reviews_aggregate: symposium_reviews_aggregate_order_by
  serial_number: order_by
  session_submission_times_aggregate: symposium_submission_session_times_aggregate_order_by
  submissions_aggregate: submissions_aggregate_order_by
  submitter_user_id: order_by
  symposium_persons_aggregate: symposium_persons_aggregate_order_by
  symposium_question_responses_aggregate: symposium_question_responses_aggregate_order_by
  time_stamp: order_by
  user_nullable_aggregate: users_aggregate_order_by
}

"""primary key columns input for table: symposia_with_archived"""
input symposia_pk_columns_input {
  id: Int! 
}

"""
select columns of table "symposia_with_archived"
"""
enum symposia_select_column {
  """column name"""
admin_notes
  """column name"""
archived
  """column name"""
creator_user_id
  """column name"""
decision_status
  """column name"""
event_id
  """column name"""
id
  """column name"""
last_updated
  """column name"""
last_updated_by
  """column name"""
program_code
  """column name"""
serial_number
  """column name"""
submitter_user_id
  """column name"""
time_stamp
}

"""
select "symposia_aggregate_bool_exp_bool_and_arguments_columns" columns of table "symposia_with_archived"
"""
enum symposia_select_column_symposia_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
archived
}

"""
select "symposia_aggregate_bool_exp_bool_or_arguments_columns" columns of table "symposia_with_archived"
"""
enum symposia_select_column_symposia_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
archived
}

"""
input type for updating data in table "symposia_with_archived"
"""
input symposia_set_input {
  admin_notes: String
  archived: Boolean
  creator_user_id: Int
  decision_status: decision
  event_id: Int
  id: Int
  last_updated: bigint
  last_updated_by: Int
  program_code: String
  serial_number: Int
  submitter_user_id: Int
  time_stamp: bigint
}

"""aggregate stddev on columns"""
type symposia_stddev_fields {
   creator_user_id: Float
   event_id: Float
   id: Float
   last_updated: Float
   last_updated_by: Float
   serial_number: Float
   submitter_user_id: Float
   time_stamp: Float
}

"""
order by stddev() on columns of table "symposia_with_archived"
"""
input symposia_stddev_order_by {
  creator_user_id: order_by
  event_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  serial_number: order_by
  submitter_user_id: order_by
  time_stamp: order_by
}

"""aggregate stddev_pop on columns"""
type symposia_stddev_pop_fields {
   creator_user_id: Float
   event_id: Float
   id: Float
   last_updated: Float
   last_updated_by: Float
   serial_number: Float
   submitter_user_id: Float
   time_stamp: Float
}

"""
order by stddev_pop() on columns of table "symposia_with_archived"
"""
input symposia_stddev_pop_order_by {
  creator_user_id: order_by
  event_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  serial_number: order_by
  submitter_user_id: order_by
  time_stamp: order_by
}

"""aggregate stddev_samp on columns"""
type symposia_stddev_samp_fields {
   creator_user_id: Float
   event_id: Float
   id: Float
   last_updated: Float
   last_updated_by: Float
   serial_number: Float
   submitter_user_id: Float
   time_stamp: Float
}

"""
order by stddev_samp() on columns of table "symposia_with_archived"
"""
input symposia_stddev_samp_order_by {
  creator_user_id: order_by
  event_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  serial_number: order_by
  submitter_user_id: order_by
  time_stamp: order_by
}

"""
Streaming cursor of the table "symposia"
"""
input symposia_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: symposia_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input symposia_stream_cursor_value_input {
  admin_notes: String
  archived: Boolean
  creator_user_id: Int
  decision_status: decision
  event_id: Int
  id: Int
  last_updated: bigint
  last_updated_by: Int
  program_code: String
  serial_number: Int
  submitter_user_id: Int
  time_stamp: bigint
}

"""aggregate sum on columns"""
type symposia_sum_fields {
   creator_user_id: Int
   event_id: Int
   id: Int
   last_updated: bigint
   last_updated_by: Int
   serial_number: Int
   submitter_user_id: Int
   time_stamp: bigint
}

"""
order by sum() on columns of table "symposia_with_archived"
"""
input symposia_sum_order_by {
  creator_user_id: order_by
  event_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  serial_number: order_by
  submitter_user_id: order_by
  time_stamp: order_by
}

"""
update columns of table "symposia_with_archived"
"""
enum symposia_update_column {
  """column name"""
admin_notes
  """column name"""
archived
  """column name"""
creator_user_id
  """column name"""
decision_status
  """column name"""
event_id
  """column name"""
id
  """column name"""
last_updated
  """column name"""
last_updated_by
  """column name"""
program_code
  """column name"""
serial_number
  """column name"""
submitter_user_id
  """column name"""
time_stamp
}

input symposia_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: symposia_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: symposia_set_input
  where: symposia_bool_exp! 
}

"""aggregate var_pop on columns"""
type symposia_var_pop_fields {
   creator_user_id: Float
   event_id: Float
   id: Float
   last_updated: Float
   last_updated_by: Float
   serial_number: Float
   submitter_user_id: Float
   time_stamp: Float
}

"""
order by var_pop() on columns of table "symposia_with_archived"
"""
input symposia_var_pop_order_by {
  creator_user_id: order_by
  event_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  serial_number: order_by
  submitter_user_id: order_by
  time_stamp: order_by
}

"""aggregate var_samp on columns"""
type symposia_var_samp_fields {
   creator_user_id: Float
   event_id: Float
   id: Float
   last_updated: Float
   last_updated_by: Float
   serial_number: Float
   submitter_user_id: Float
   time_stamp: Float
}

"""
order by var_samp() on columns of table "symposia_with_archived"
"""
input symposia_var_samp_order_by {
  creator_user_id: order_by
  event_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  serial_number: order_by
  submitter_user_id: order_by
  time_stamp: order_by
}

"""aggregate variance on columns"""
type symposia_variance_fields {
   creator_user_id: Float
   event_id: Float
   id: Float
   last_updated: Float
   last_updated_by: Float
   serial_number: Float
   submitter_user_id: Float
   time_stamp: Float
}

"""
order by variance() on columns of table "symposia_with_archived"
"""
input symposia_variance_order_by {
  creator_user_id: order_by
  event_id: order_by
  id: order_by
  last_updated: order_by
  last_updated_by: order_by
  serial_number: order_by
  submitter_user_id: order_by
  time_stamp: order_by
}

"""
columns and relationships of "symposium_affiliations"
"""
type symposium_affiliations {
   city: String
   country: String
   display_order: Int! 
   event_id: Int! 
   id: Int! 
   institution: String
   state: String
  """An object relationship"""
 symposium_person: symposium_persons! 
   symposium_person_id: Int! 
}

"""
aggregated selection of "symposium_affiliations"
"""
type symposium_affiliations_aggregate {
   aggregate: symposium_affiliations_aggregate_fields
   nodes: [symposium_affiliations! ]! 
}

input symposium_affiliations_aggregate_bool_exp {
  count: symposium_affiliations_aggregate_bool_exp_count
}

input symposium_affiliations_aggregate_bool_exp_count {
  arguments: [symposium_affiliations_select_column! ]
  distinct: Boolean
  filter: symposium_affiliations_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "symposium_affiliations"
"""
type symposium_affiliations_aggregate_fields {
   avg: symposium_affiliations_avg_fields
   count(columns: [symposium_affiliations_select_column! ], distinct: Boolean): Int! 
   max: symposium_affiliations_max_fields
   min: symposium_affiliations_min_fields
   stddev: symposium_affiliations_stddev_fields
   stddev_pop: symposium_affiliations_stddev_pop_fields
   stddev_samp: symposium_affiliations_stddev_samp_fields
   sum: symposium_affiliations_sum_fields
   var_pop: symposium_affiliations_var_pop_fields
   var_samp: symposium_affiliations_var_samp_fields
   variance: symposium_affiliations_variance_fields
}

"""
order by aggregate values of table "symposium_affiliations"
"""
input symposium_affiliations_aggregate_order_by {
  avg: symposium_affiliations_avg_order_by
  count: order_by
  max: symposium_affiliations_max_order_by
  min: symposium_affiliations_min_order_by
  stddev: symposium_affiliations_stddev_order_by
  stddev_pop: symposium_affiliations_stddev_pop_order_by
  stddev_samp: symposium_affiliations_stddev_samp_order_by
  sum: symposium_affiliations_sum_order_by
  var_pop: symposium_affiliations_var_pop_order_by
  var_samp: symposium_affiliations_var_samp_order_by
  variance: symposium_affiliations_variance_order_by
}

"""
input type for inserting array relation for remote table "symposium_affiliations"
"""
input symposium_affiliations_arr_rel_insert_input {
  data: [symposium_affiliations_insert_input! ]! 
  """upsert condition"""
on_conflict: symposium_affiliations_on_conflict
}

"""aggregate avg on columns"""
type symposium_affiliations_avg_fields {
   display_order: Float
   event_id: Float
   id: Float
   symposium_person_id: Float
}

"""
order by avg() on columns of table "symposium_affiliations"
"""
input symposium_affiliations_avg_order_by {
  display_order: order_by
  event_id: order_by
  id: order_by
  symposium_person_id: order_by
}

"""
Boolean expression to filter rows from the table "symposium_affiliations". All fields are combined with a logical 'AND'.
"""
input symposium_affiliations_bool_exp {
  _and: [symposium_affiliations_bool_exp! ]
  _not: symposium_affiliations_bool_exp
  _or: [symposium_affiliations_bool_exp! ]
  city: String_comparison_exp
  country: String_comparison_exp
  display_order: Int_comparison_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  institution: String_comparison_exp
  state: String_comparison_exp
  symposium_person: symposium_persons_bool_exp
  symposium_person_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "symposium_affiliations"
"""
enum symposium_affiliations_constraint {
  """
  unique or primary key constraint on columns "symposium_affiliation_id"
  """
symposium_affiliations_pkey
}

"""
input type for incrementing numeric columns in table "symposium_affiliations"
"""
input symposium_affiliations_inc_input {
  display_order: Int
  event_id: Int
  id: Int
  symposium_person_id: Int
}

"""
input type for inserting data into table "symposium_affiliations"
"""
input symposium_affiliations_insert_input {
  city: String
  country: String
  display_order: Int! 
  event_id: Int! 
  id: Int
  institution: String
  state: String
  symposium_person: symposium_persons_obj_rel_insert_input
  symposium_person_id: Int! 
}

"""aggregate max on columns"""
type symposium_affiliations_max_fields {
   city: String
   country: String
   display_order: Int
   event_id: Int
   id: Int
   institution: String
   state: String
   symposium_person_id: Int
}

"""
order by max() on columns of table "symposium_affiliations"
"""
input symposium_affiliations_max_order_by {
  city: order_by
  country: order_by
  display_order: order_by
  event_id: order_by
  id: order_by
  institution: order_by
  state: order_by
  symposium_person_id: order_by
}

"""aggregate min on columns"""
type symposium_affiliations_min_fields {
   city: String
   country: String
   display_order: Int
   event_id: Int
   id: Int
   institution: String
   state: String
   symposium_person_id: Int
}

"""
order by min() on columns of table "symposium_affiliations"
"""
input symposium_affiliations_min_order_by {
  city: order_by
  country: order_by
  display_order: order_by
  event_id: order_by
  id: order_by
  institution: order_by
  state: order_by
  symposium_person_id: order_by
}

"""
response of any mutation on the table "symposium_affiliations"
"""
type symposium_affiliations_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [symposium_affiliations! ]! 
}

"""
on_conflict condition type for table "symposium_affiliations"
"""
input symposium_affiliations_on_conflict {
  constraint: symposium_affiliations_constraint! 
  update_columns: [symposium_affiliations_update_column! ]! 
  where: symposium_affiliations_bool_exp
}

"""Ordering options when selecting data from "symposium_affiliations"."""
input symposium_affiliations_order_by {
  city: order_by
  country: order_by
  display_order: order_by
  event_id: order_by
  id: order_by
  institution: order_by
  state: order_by
  symposium_person: symposium_persons_order_by
  symposium_person_id: order_by
}

"""primary key columns input for table: symposium_affiliations"""
input symposium_affiliations_pk_columns_input {
  id: Int! 
}

"""
select columns of table "symposium_affiliations"
"""
enum symposium_affiliations_select_column {
  """column name"""
city
  """column name"""
country
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
id
  """column name"""
institution
  """column name"""
state
  """column name"""
symposium_person_id
}

"""
input type for updating data in table "symposium_affiliations"
"""
input symposium_affiliations_set_input {
  city: String
  country: String
  display_order: Int
  event_id: Int
  id: Int
  institution: String
  state: String
  symposium_person_id: Int
}

"""aggregate stddev on columns"""
type symposium_affiliations_stddev_fields {
   display_order: Float
   event_id: Float
   id: Float
   symposium_person_id: Float
}

"""
order by stddev() on columns of table "symposium_affiliations"
"""
input symposium_affiliations_stddev_order_by {
  display_order: order_by
  event_id: order_by
  id: order_by
  symposium_person_id: order_by
}

"""aggregate stddev_pop on columns"""
type symposium_affiliations_stddev_pop_fields {
   display_order: Float
   event_id: Float
   id: Float
   symposium_person_id: Float
}

"""
order by stddev_pop() on columns of table "symposium_affiliations"
"""
input symposium_affiliations_stddev_pop_order_by {
  display_order: order_by
  event_id: order_by
  id: order_by
  symposium_person_id: order_by
}

"""aggregate stddev_samp on columns"""
type symposium_affiliations_stddev_samp_fields {
   display_order: Float
   event_id: Float
   id: Float
   symposium_person_id: Float
}

"""
order by stddev_samp() on columns of table "symposium_affiliations"
"""
input symposium_affiliations_stddev_samp_order_by {
  display_order: order_by
  event_id: order_by
  id: order_by
  symposium_person_id: order_by
}

"""
Streaming cursor of the table "symposium_affiliations"
"""
input symposium_affiliations_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: symposium_affiliations_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input symposium_affiliations_stream_cursor_value_input {
  city: String
  country: String
  display_order: Int
  event_id: Int
  id: Int
  institution: String
  state: String
  symposium_person_id: Int
}

"""aggregate sum on columns"""
type symposium_affiliations_sum_fields {
   display_order: Int
   event_id: Int
   id: Int
   symposium_person_id: Int
}

"""
order by sum() on columns of table "symposium_affiliations"
"""
input symposium_affiliations_sum_order_by {
  display_order: order_by
  event_id: order_by
  id: order_by
  symposium_person_id: order_by
}

"""
update columns of table "symposium_affiliations"
"""
enum symposium_affiliations_update_column {
  """column name"""
city
  """column name"""
country
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
id
  """column name"""
institution
  """column name"""
state
  """column name"""
symposium_person_id
}

input symposium_affiliations_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: symposium_affiliations_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: symposium_affiliations_set_input
  where: symposium_affiliations_bool_exp! 
}

"""aggregate var_pop on columns"""
type symposium_affiliations_var_pop_fields {
   display_order: Float
   event_id: Float
   id: Float
   symposium_person_id: Float
}

"""
order by var_pop() on columns of table "symposium_affiliations"
"""
input symposium_affiliations_var_pop_order_by {
  display_order: order_by
  event_id: order_by
  id: order_by
  symposium_person_id: order_by
}

"""aggregate var_samp on columns"""
type symposium_affiliations_var_samp_fields {
   display_order: Float
   event_id: Float
   id: Float
   symposium_person_id: Float
}

"""
order by var_samp() on columns of table "symposium_affiliations"
"""
input symposium_affiliations_var_samp_order_by {
  display_order: order_by
  event_id: order_by
  id: order_by
  symposium_person_id: order_by
}

"""aggregate variance on columns"""
type symposium_affiliations_variance_fields {
   display_order: Float
   event_id: Float
   id: Float
   symposium_person_id: Float
}

"""
order by variance() on columns of table "symposium_affiliations"
"""
input symposium_affiliations_variance_order_by {
  display_order: order_by
  event_id: order_by
  id: order_by
  symposium_person_id: order_by
}

scalar symposium_field_input_types 

"""
Boolean expression to compare columns of type "symposium_field_input_types". All fields are combined with logical 'AND'.
"""
input symposium_field_input_types_comparison_exp {
  _eq: symposium_field_input_types
  _gt: symposium_field_input_types
  _gte: symposium_field_input_types
  _in: [symposium_field_input_types! ]
  _is_null: Boolean
  _lt: symposium_field_input_types
  _lte: symposium_field_input_types
  _neq: symposium_field_input_types
  _nin: [symposium_field_input_types! ]
}

scalar symposium_field_types 

"""
Boolean expression to compare columns of type "symposium_field_types". All fields are combined with logical 'AND'.
"""
input symposium_field_types_comparison_exp {
  _eq: symposium_field_types
  _gt: symposium_field_types
  _gte: symposium_field_types
  _in: [symposium_field_types! ]
  _is_null: Boolean
  _lt: symposium_field_types
  _lte: symposium_field_types
  _neq: symposium_field_types
  _nin: [symposium_field_types! ]
}

"""
columns and relationships of "symposium_person_field_responses"
"""
type symposium_person_field_responses {
   id: Int! 
  """An object relationship"""
 symposium_person: symposium_persons! 
  """An object relationship"""
 symposium_person_field: symposium_person_fields! 
   symposium_person_field_id: Int! 
   symposium_person_id: Int! 
   value: String! 
}

"""
aggregated selection of "symposium_person_field_responses"
"""
type symposium_person_field_responses_aggregate {
   aggregate: symposium_person_field_responses_aggregate_fields
   nodes: [symposium_person_field_responses! ]! 
}

input symposium_person_field_responses_aggregate_bool_exp {
  count: symposium_person_field_responses_aggregate_bool_exp_count
}

input symposium_person_field_responses_aggregate_bool_exp_count {
  arguments: [symposium_person_field_responses_select_column! ]
  distinct: Boolean
  filter: symposium_person_field_responses_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "symposium_person_field_responses"
"""
type symposium_person_field_responses_aggregate_fields {
   avg: symposium_person_field_responses_avg_fields
   count(columns: [symposium_person_field_responses_select_column! ], distinct: Boolean): Int! 
   max: symposium_person_field_responses_max_fields
   min: symposium_person_field_responses_min_fields
   stddev: symposium_person_field_responses_stddev_fields
   stddev_pop: symposium_person_field_responses_stddev_pop_fields
   stddev_samp: symposium_person_field_responses_stddev_samp_fields
   sum: symposium_person_field_responses_sum_fields
   var_pop: symposium_person_field_responses_var_pop_fields
   var_samp: symposium_person_field_responses_var_samp_fields
   variance: symposium_person_field_responses_variance_fields
}

"""
order by aggregate values of table "symposium_person_field_responses"
"""
input symposium_person_field_responses_aggregate_order_by {
  avg: symposium_person_field_responses_avg_order_by
  count: order_by
  max: symposium_person_field_responses_max_order_by
  min: symposium_person_field_responses_min_order_by
  stddev: symposium_person_field_responses_stddev_order_by
  stddev_pop: symposium_person_field_responses_stddev_pop_order_by
  stddev_samp: symposium_person_field_responses_stddev_samp_order_by
  sum: symposium_person_field_responses_sum_order_by
  var_pop: symposium_person_field_responses_var_pop_order_by
  var_samp: symposium_person_field_responses_var_samp_order_by
  variance: symposium_person_field_responses_variance_order_by
}

"""
input type for inserting array relation for remote table "symposium_person_field_responses"
"""
input symposium_person_field_responses_arr_rel_insert_input {
  data: [symposium_person_field_responses_insert_input! ]! 
  """upsert condition"""
on_conflict: symposium_person_field_responses_on_conflict
}

"""aggregate avg on columns"""
type symposium_person_field_responses_avg_fields {
   id: Float
   symposium_person_field_id: Float
   symposium_person_id: Float
}

"""
order by avg() on columns of table "symposium_person_field_responses"
"""
input symposium_person_field_responses_avg_order_by {
  id: order_by
  symposium_person_field_id: order_by
  symposium_person_id: order_by
}

"""
Boolean expression to filter rows from the table "symposium_person_field_responses". All fields are combined with a logical 'AND'.
"""
input symposium_person_field_responses_bool_exp {
  _and: [symposium_person_field_responses_bool_exp! ]
  _not: symposium_person_field_responses_bool_exp
  _or: [symposium_person_field_responses_bool_exp! ]
  id: Int_comparison_exp
  symposium_person: symposium_persons_bool_exp
  symposium_person_field: symposium_person_fields_bool_exp
  symposium_person_field_id: Int_comparison_exp
  symposium_person_id: Int_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "symposium_person_field_responses"
"""
enum symposium_person_field_responses_constraint {
  """
  unique or primary key constraint on columns "symposium_person_response_id"
  """
symposium_person_field_responses_pkey
}

"""
input type for incrementing numeric columns in table "symposium_person_field_responses"
"""
input symposium_person_field_responses_inc_input {
  id: Int
  symposium_person_field_id: Int
  symposium_person_id: Int
}

"""
input type for inserting data into table "symposium_person_field_responses"
"""
input symposium_person_field_responses_insert_input {
  id: Int
  symposium_person: symposium_persons_obj_rel_insert_input
  symposium_person_field: symposium_person_fields_obj_rel_insert_input
  symposium_person_field_id: Int! 
  symposium_person_id: Int! 
  value: String! 
}

"""aggregate max on columns"""
type symposium_person_field_responses_max_fields {
   id: Int
   symposium_person_field_id: Int
   symposium_person_id: Int
   value: String
}

"""
order by max() on columns of table "symposium_person_field_responses"
"""
input symposium_person_field_responses_max_order_by {
  id: order_by
  symposium_person_field_id: order_by
  symposium_person_id: order_by
  value: order_by
}

"""aggregate min on columns"""
type symposium_person_field_responses_min_fields {
   id: Int
   symposium_person_field_id: Int
   symposium_person_id: Int
   value: String
}

"""
order by min() on columns of table "symposium_person_field_responses"
"""
input symposium_person_field_responses_min_order_by {
  id: order_by
  symposium_person_field_id: order_by
  symposium_person_id: order_by
  value: order_by
}

"""
response of any mutation on the table "symposium_person_field_responses"
"""
type symposium_person_field_responses_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [symposium_person_field_responses! ]! 
}

"""
on_conflict condition type for table "symposium_person_field_responses"
"""
input symposium_person_field_responses_on_conflict {
  constraint: symposium_person_field_responses_constraint! 
  update_columns: [symposium_person_field_responses_update_column! ]! 
  where: symposium_person_field_responses_bool_exp
}

"""
Ordering options when selecting data from "symposium_person_field_responses".
"""
input symposium_person_field_responses_order_by {
  id: order_by
  symposium_person: symposium_persons_order_by
  symposium_person_field: symposium_person_fields_order_by
  symposium_person_field_id: order_by
  symposium_person_id: order_by
  value: order_by
}

"""primary key columns input for table: symposium_person_field_responses"""
input symposium_person_field_responses_pk_columns_input {
  id: Int! 
}

"""
select columns of table "symposium_person_field_responses"
"""
enum symposium_person_field_responses_select_column {
  """column name"""
id
  """column name"""
symposium_person_field_id
  """column name"""
symposium_person_id
  """column name"""
value
}

"""
input type for updating data in table "symposium_person_field_responses"
"""
input symposium_person_field_responses_set_input {
  id: Int
  symposium_person_field_id: Int
  symposium_person_id: Int
  value: String
}

"""aggregate stddev on columns"""
type symposium_person_field_responses_stddev_fields {
   id: Float
   symposium_person_field_id: Float
   symposium_person_id: Float
}

"""
order by stddev() on columns of table "symposium_person_field_responses"
"""
input symposium_person_field_responses_stddev_order_by {
  id: order_by
  symposium_person_field_id: order_by
  symposium_person_id: order_by
}

"""aggregate stddev_pop on columns"""
type symposium_person_field_responses_stddev_pop_fields {
   id: Float
   symposium_person_field_id: Float
   symposium_person_id: Float
}

"""
order by stddev_pop() on columns of table "symposium_person_field_responses"
"""
input symposium_person_field_responses_stddev_pop_order_by {
  id: order_by
  symposium_person_field_id: order_by
  symposium_person_id: order_by
}

"""aggregate stddev_samp on columns"""
type symposium_person_field_responses_stddev_samp_fields {
   id: Float
   symposium_person_field_id: Float
   symposium_person_id: Float
}

"""
order by stddev_samp() on columns of table "symposium_person_field_responses"
"""
input symposium_person_field_responses_stddev_samp_order_by {
  id: order_by
  symposium_person_field_id: order_by
  symposium_person_id: order_by
}

"""
Streaming cursor of the table "symposium_person_field_responses"
"""
input symposium_person_field_responses_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: symposium_person_field_responses_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input symposium_person_field_responses_stream_cursor_value_input {
  id: Int
  symposium_person_field_id: Int
  symposium_person_id: Int
  value: String
}

"""aggregate sum on columns"""
type symposium_person_field_responses_sum_fields {
   id: Int
   symposium_person_field_id: Int
   symposium_person_id: Int
}

"""
order by sum() on columns of table "symposium_person_field_responses"
"""
input symposium_person_field_responses_sum_order_by {
  id: order_by
  symposium_person_field_id: order_by
  symposium_person_id: order_by
}

"""
update columns of table "symposium_person_field_responses"
"""
enum symposium_person_field_responses_update_column {
  """column name"""
id
  """column name"""
symposium_person_field_id
  """column name"""
symposium_person_id
  """column name"""
value
}

input symposium_person_field_responses_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: symposium_person_field_responses_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: symposium_person_field_responses_set_input
  where: symposium_person_field_responses_bool_exp! 
}

"""aggregate var_pop on columns"""
type symposium_person_field_responses_var_pop_fields {
   id: Float
   symposium_person_field_id: Float
   symposium_person_id: Float
}

"""
order by var_pop() on columns of table "symposium_person_field_responses"
"""
input symposium_person_field_responses_var_pop_order_by {
  id: order_by
  symposium_person_field_id: order_by
  symposium_person_id: order_by
}

"""aggregate var_samp on columns"""
type symposium_person_field_responses_var_samp_fields {
   id: Float
   symposium_person_field_id: Float
   symposium_person_id: Float
}

"""
order by var_samp() on columns of table "symposium_person_field_responses"
"""
input symposium_person_field_responses_var_samp_order_by {
  id: order_by
  symposium_person_field_id: order_by
  symposium_person_id: order_by
}

"""aggregate variance on columns"""
type symposium_person_field_responses_variance_fields {
   id: Float
   symposium_person_field_id: Float
   symposium_person_id: Float
}

"""
order by variance() on columns of table "symposium_person_field_responses"
"""
input symposium_person_field_responses_variance_order_by {
  id: order_by
  symposium_person_field_id: order_by
  symposium_person_id: order_by
}

"""
columns and relationships of "symposium_person_fields"
"""
type symposium_person_fields {
   display_order: Int! 
  """An object relationship"""
 event: events! 
   event_id: Int! 
   id: Int! 
   input_type: symposium_field_input_types! 
   options: _text
   question_type: symposium_field_types! 
  """An array relationship"""
 responses("""distinct select on columns"""
distinct_on: [symposium_person_field_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_person_field_responses_order_by! ], """filter the rows returned"""
where: symposium_person_field_responses_bool_exp): [symposium_person_field_responses! ]! 
  """An aggregate relationship"""
 responses_aggregate("""distinct select on columns"""
distinct_on: [symposium_person_field_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_person_field_responses_order_by! ], """filter the rows returned"""
where: symposium_person_field_responses_bool_exp): symposium_person_field_responses_aggregate! 
   role: symposium_role! 
   status: field_status! 
   title: String! 
}

"""
aggregated selection of "symposium_person_fields"
"""
type symposium_person_fields_aggregate {
   aggregate: symposium_person_fields_aggregate_fields
   nodes: [symposium_person_fields! ]! 
}

"""
aggregate fields of "symposium_person_fields"
"""
type symposium_person_fields_aggregate_fields {
   avg: symposium_person_fields_avg_fields
   count(columns: [symposium_person_fields_select_column! ], distinct: Boolean): Int! 
   max: symposium_person_fields_max_fields
   min: symposium_person_fields_min_fields
   stddev: symposium_person_fields_stddev_fields
   stddev_pop: symposium_person_fields_stddev_pop_fields
   stddev_samp: symposium_person_fields_stddev_samp_fields
   sum: symposium_person_fields_sum_fields
   var_pop: symposium_person_fields_var_pop_fields
   var_samp: symposium_person_fields_var_samp_fields
   variance: symposium_person_fields_variance_fields
}

"""aggregate avg on columns"""
type symposium_person_fields_avg_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""
Boolean expression to filter rows from the table "symposium_person_fields". All fields are combined with a logical 'AND'.
"""
input symposium_person_fields_bool_exp {
  _and: [symposium_person_fields_bool_exp! ]
  _not: symposium_person_fields_bool_exp
  _or: [symposium_person_fields_bool_exp! ]
  display_order: Int_comparison_exp
  event: events_bool_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  input_type: symposium_field_input_types_comparison_exp
  options: _text_comparison_exp
  question_type: symposium_field_types_comparison_exp
  responses: symposium_person_field_responses_bool_exp
  responses_aggregate: symposium_person_field_responses_aggregate_bool_exp
  role: symposium_role_comparison_exp
  status: field_status_comparison_exp
  title: String_comparison_exp
}

"""
unique or primary key constraints on table "symposium_person_fields"
"""
enum symposium_person_fields_constraint {
  """
  unique or primary key constraint on columns "symposium_person_field_id"
  """
symposium_person_fields_pkey
}

"""
input type for incrementing numeric columns in table "symposium_person_fields"
"""
input symposium_person_fields_inc_input {
  display_order: Int
  event_id: Int
  id: Int
}

"""
input type for inserting data into table "symposium_person_fields"
"""
input symposium_person_fields_insert_input {
  display_order: Int! 
  event: events_obj_rel_insert_input
  event_id: Int! 
  id: Int
  input_type: symposium_field_input_types! 
  options: _text
  question_type: symposium_field_types! 
  responses: symposium_person_field_responses_arr_rel_insert_input
  role: symposium_role! 
  status: field_status! 
  title: String! 
}

"""aggregate max on columns"""
type symposium_person_fields_max_fields {
   display_order: Int
   event_id: Int
   id: Int
   input_type: symposium_field_input_types
   question_type: symposium_field_types
   role: symposium_role
   status: field_status
   title: String
}

"""aggregate min on columns"""
type symposium_person_fields_min_fields {
   display_order: Int
   event_id: Int
   id: Int
   input_type: symposium_field_input_types
   question_type: symposium_field_types
   role: symposium_role
   status: field_status
   title: String
}

"""
response of any mutation on the table "symposium_person_fields"
"""
type symposium_person_fields_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [symposium_person_fields! ]! 
}

"""
input type for inserting object relation for remote table "symposium_person_fields"
"""
input symposium_person_fields_obj_rel_insert_input {
  data: symposium_person_fields_insert_input! 
  """upsert condition"""
on_conflict: symposium_person_fields_on_conflict
}

"""
on_conflict condition type for table "symposium_person_fields"
"""
input symposium_person_fields_on_conflict {
  constraint: symposium_person_fields_constraint! 
  update_columns: [symposium_person_fields_update_column! ]! 
  where: symposium_person_fields_bool_exp
}

"""Ordering options when selecting data from "symposium_person_fields"."""
input symposium_person_fields_order_by {
  display_order: order_by
  event: events_order_by
  event_id: order_by
  id: order_by
  input_type: order_by
  options: order_by
  question_type: order_by
  responses_aggregate: symposium_person_field_responses_aggregate_order_by
  role: order_by
  status: order_by
  title: order_by
}

"""primary key columns input for table: symposium_person_fields"""
input symposium_person_fields_pk_columns_input {
  id: Int! 
}

"""
select columns of table "symposium_person_fields"
"""
enum symposium_person_fields_select_column {
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
id
  """column name"""
input_type
  """column name"""
options
  """column name"""
question_type
  """column name"""
role
  """column name"""
status
  """column name"""
title
}

"""
input type for updating data in table "symposium_person_fields"
"""
input symposium_person_fields_set_input {
  display_order: Int
  event_id: Int
  id: Int
  input_type: symposium_field_input_types
  options: _text
  question_type: symposium_field_types
  role: symposium_role
  status: field_status
  title: String
}

"""aggregate stddev on columns"""
type symposium_person_fields_stddev_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""aggregate stddev_pop on columns"""
type symposium_person_fields_stddev_pop_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""aggregate stddev_samp on columns"""
type symposium_person_fields_stddev_samp_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""
Streaming cursor of the table "symposium_person_fields"
"""
input symposium_person_fields_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: symposium_person_fields_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input symposium_person_fields_stream_cursor_value_input {
  display_order: Int
  event_id: Int
  id: Int
  input_type: symposium_field_input_types
  options: _text
  question_type: symposium_field_types
  role: symposium_role
  status: field_status
  title: String
}

"""aggregate sum on columns"""
type symposium_person_fields_sum_fields {
   display_order: Int
   event_id: Int
   id: Int
}

"""
update columns of table "symposium_person_fields"
"""
enum symposium_person_fields_update_column {
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
id
  """column name"""
input_type
  """column name"""
options
  """column name"""
question_type
  """column name"""
role
  """column name"""
status
  """column name"""
title
}

input symposium_person_fields_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: symposium_person_fields_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: symposium_person_fields_set_input
  where: symposium_person_fields_bool_exp! 
}

"""aggregate var_pop on columns"""
type symposium_person_fields_var_pop_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""aggregate var_samp on columns"""
type symposium_person_fields_var_samp_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""aggregate variance on columns"""
type symposium_person_fields_variance_fields {
   display_order: Float
   event_id: Float
   id: Float
}

"""
columns and relationships of "symposium_person_users"
"""
type symposium_person_users {
  """An object relationship"""
 symposium_person: symposium_persons
   symposium_person_id: Int
  """An array relationship"""
 user("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): [users! ]! 
  """An aggregate relationship"""
 user_aggregate("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): users_aggregate! 
   user_id: Int
}

"""
aggregated selection of "symposium_person_users"
"""
type symposium_person_users_aggregate {
   aggregate: symposium_person_users_aggregate_fields
   nodes: [symposium_person_users! ]! 
}

input symposium_person_users_aggregate_bool_exp {
  count: symposium_person_users_aggregate_bool_exp_count
}

input symposium_person_users_aggregate_bool_exp_count {
  arguments: [symposium_person_users_select_column! ]
  distinct: Boolean
  filter: symposium_person_users_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "symposium_person_users"
"""
type symposium_person_users_aggregate_fields {
   avg: symposium_person_users_avg_fields
   count(columns: [symposium_person_users_select_column! ], distinct: Boolean): Int! 
   max: symposium_person_users_max_fields
   min: symposium_person_users_min_fields
   stddev: symposium_person_users_stddev_fields
   stddev_pop: symposium_person_users_stddev_pop_fields
   stddev_samp: symposium_person_users_stddev_samp_fields
   sum: symposium_person_users_sum_fields
   var_pop: symposium_person_users_var_pop_fields
   var_samp: symposium_person_users_var_samp_fields
   variance: symposium_person_users_variance_fields
}

"""
order by aggregate values of table "symposium_person_users"
"""
input symposium_person_users_aggregate_order_by {
  avg: symposium_person_users_avg_order_by
  count: order_by
  max: symposium_person_users_max_order_by
  min: symposium_person_users_min_order_by
  stddev: symposium_person_users_stddev_order_by
  stddev_pop: symposium_person_users_stddev_pop_order_by
  stddev_samp: symposium_person_users_stddev_samp_order_by
  sum: symposium_person_users_sum_order_by
  var_pop: symposium_person_users_var_pop_order_by
  var_samp: symposium_person_users_var_samp_order_by
  variance: symposium_person_users_variance_order_by
}

"""
input type for inserting array relation for remote table "symposium_person_users"
"""
input symposium_person_users_arr_rel_insert_input {
  data: [symposium_person_users_insert_input! ]! 
}

"""aggregate avg on columns"""
type symposium_person_users_avg_fields {
   symposium_person_id: Float
   user_id: Float
}

"""
order by avg() on columns of table "symposium_person_users"
"""
input symposium_person_users_avg_order_by {
  symposium_person_id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "symposium_person_users". All fields are combined with a logical 'AND'.
"""
input symposium_person_users_bool_exp {
  _and: [symposium_person_users_bool_exp! ]
  _not: symposium_person_users_bool_exp
  _or: [symposium_person_users_bool_exp! ]
  symposium_person: symposium_persons_bool_exp
  symposium_person_id: Int_comparison_exp
  user: users_bool_exp
  user_aggregate: users_aggregate_bool_exp
  user_id: Int_comparison_exp
}

"""
input type for inserting data into table "symposium_person_users"
"""
input symposium_person_users_insert_input {
  symposium_person: symposium_persons_obj_rel_insert_input
  symposium_person_id: Int
  user: users_arr_rel_insert_input
  user_id: Int
}

"""aggregate max on columns"""
type symposium_person_users_max_fields {
   symposium_person_id: Int
   user_id: Int
}

"""
order by max() on columns of table "symposium_person_users"
"""
input symposium_person_users_max_order_by {
  symposium_person_id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type symposium_person_users_min_fields {
   symposium_person_id: Int
   user_id: Int
}

"""
order by min() on columns of table "symposium_person_users"
"""
input symposium_person_users_min_order_by {
  symposium_person_id: order_by
  user_id: order_by
}

"""Ordering options when selecting data from "symposium_person_users"."""
input symposium_person_users_order_by {
  symposium_person: symposium_persons_order_by
  symposium_person_id: order_by
  user_aggregate: users_aggregate_order_by
  user_id: order_by
}

"""
select columns of table "symposium_person_users"
"""
enum symposium_person_users_select_column {
  """column name"""
symposium_person_id
  """column name"""
user_id
}

"""aggregate stddev on columns"""
type symposium_person_users_stddev_fields {
   symposium_person_id: Float
   user_id: Float
}

"""
order by stddev() on columns of table "symposium_person_users"
"""
input symposium_person_users_stddev_order_by {
  symposium_person_id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type symposium_person_users_stddev_pop_fields {
   symposium_person_id: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "symposium_person_users"
"""
input symposium_person_users_stddev_pop_order_by {
  symposium_person_id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type symposium_person_users_stddev_samp_fields {
   symposium_person_id: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "symposium_person_users"
"""
input symposium_person_users_stddev_samp_order_by {
  symposium_person_id: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "symposium_person_users"
"""
input symposium_person_users_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: symposium_person_users_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input symposium_person_users_stream_cursor_value_input {
  symposium_person_id: Int
  user_id: Int
}

"""aggregate sum on columns"""
type symposium_person_users_sum_fields {
   symposium_person_id: Int
   user_id: Int
}

"""
order by sum() on columns of table "symposium_person_users"
"""
input symposium_person_users_sum_order_by {
  symposium_person_id: order_by
  user_id: order_by
}

"""aggregate var_pop on columns"""
type symposium_person_users_var_pop_fields {
   symposium_person_id: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "symposium_person_users"
"""
input symposium_person_users_var_pop_order_by {
  symposium_person_id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type symposium_person_users_var_samp_fields {
   symposium_person_id: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "symposium_person_users"
"""
input symposium_person_users_var_samp_order_by {
  symposium_person_id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type symposium_person_users_variance_fields {
   symposium_person_id: Float
   user_id: Float
}

"""
order by variance() on columns of table "symposium_person_users"
"""
input symposium_person_users_variance_order_by {
  symposium_person_id: order_by
  user_id: order_by
}

"""
columns and relationships of "symposium_persons"
"""
type symposium_persons {
   display_order: Int! 
  """An object relationship"""
 event: events! 
   event_id: Int! 
   id: Int! 
   role: symposium_role! 
  """An object relationship"""
 symposium: symposia! 
  """An array relationship"""
 symposium_affiliations("""distinct select on columns"""
distinct_on: [symposium_affiliations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_affiliations_order_by! ], """filter the rows returned"""
where: symposium_affiliations_bool_exp): [symposium_affiliations! ]! 
  """An aggregate relationship"""
 symposium_affiliations_aggregate("""distinct select on columns"""
distinct_on: [symposium_affiliations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_affiliations_order_by! ], """filter the rows returned"""
where: symposium_affiliations_bool_exp): symposium_affiliations_aggregate! 
   symposium_id: Int! 
  """An array relationship"""
 symposium_person_field_responses("""distinct select on columns"""
distinct_on: [symposium_person_field_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_person_field_responses_order_by! ], """filter the rows returned"""
where: symposium_person_field_responses_bool_exp): [symposium_person_field_responses! ]! 
  """An aggregate relationship"""
 symposium_person_field_responses_aggregate("""distinct select on columns"""
distinct_on: [symposium_person_field_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_person_field_responses_order_by! ], """filter the rows returned"""
where: symposium_person_field_responses_bool_exp): symposium_person_field_responses_aggregate! 
  """An array relationship"""
 symposium_person_user("""distinct select on columns"""
distinct_on: [symposium_person_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_person_users_order_by! ], """filter the rows returned"""
where: symposium_person_users_bool_exp): [symposium_person_users! ]! 
  """An aggregate relationship"""
 symposium_person_user_aggregate("""distinct select on columns"""
distinct_on: [symposium_person_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_person_users_order_by! ], """filter the rows returned"""
where: symposium_person_users_bool_exp): symposium_person_users_aggregate! 
}

"""
aggregated selection of "symposium_persons"
"""
type symposium_persons_aggregate {
   aggregate: symposium_persons_aggregate_fields
   nodes: [symposium_persons! ]! 
}

input symposium_persons_aggregate_bool_exp {
  count: symposium_persons_aggregate_bool_exp_count
}

input symposium_persons_aggregate_bool_exp_count {
  arguments: [symposium_persons_select_column! ]
  distinct: Boolean
  filter: symposium_persons_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "symposium_persons"
"""
type symposium_persons_aggregate_fields {
   avg: symposium_persons_avg_fields
   count(columns: [symposium_persons_select_column! ], distinct: Boolean): Int! 
   max: symposium_persons_max_fields
   min: symposium_persons_min_fields
   stddev: symposium_persons_stddev_fields
   stddev_pop: symposium_persons_stddev_pop_fields
   stddev_samp: symposium_persons_stddev_samp_fields
   sum: symposium_persons_sum_fields
   var_pop: symposium_persons_var_pop_fields
   var_samp: symposium_persons_var_samp_fields
   variance: symposium_persons_variance_fields
}

"""
order by aggregate values of table "symposium_persons"
"""
input symposium_persons_aggregate_order_by {
  avg: symposium_persons_avg_order_by
  count: order_by
  max: symposium_persons_max_order_by
  min: symposium_persons_min_order_by
  stddev: symposium_persons_stddev_order_by
  stddev_pop: symposium_persons_stddev_pop_order_by
  stddev_samp: symposium_persons_stddev_samp_order_by
  sum: symposium_persons_sum_order_by
  var_pop: symposium_persons_var_pop_order_by
  var_samp: symposium_persons_var_samp_order_by
  variance: symposium_persons_variance_order_by
}

"""
input type for inserting array relation for remote table "symposium_persons"
"""
input symposium_persons_arr_rel_insert_input {
  data: [symposium_persons_insert_input! ]! 
  """upsert condition"""
on_conflict: symposium_persons_on_conflict
}

"""aggregate avg on columns"""
type symposium_persons_avg_fields {
   display_order: Float
   event_id: Float
   id: Float
   symposium_id: Float
}

"""
order by avg() on columns of table "symposium_persons"
"""
input symposium_persons_avg_order_by {
  display_order: order_by
  event_id: order_by
  id: order_by
  symposium_id: order_by
}

"""
Boolean expression to filter rows from the table "symposium_persons". All fields are combined with a logical 'AND'.
"""
input symposium_persons_bool_exp {
  _and: [symposium_persons_bool_exp! ]
  _not: symposium_persons_bool_exp
  _or: [symposium_persons_bool_exp! ]
  display_order: Int_comparison_exp
  event: events_bool_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  role: symposium_role_comparison_exp
  symposium: symposia_bool_exp
  symposium_affiliations: symposium_affiliations_bool_exp
  symposium_affiliations_aggregate: symposium_affiliations_aggregate_bool_exp
  symposium_id: Int_comparison_exp
  symposium_person_field_responses: symposium_person_field_responses_bool_exp
  symposium_person_field_responses_aggregate: symposium_person_field_responses_aggregate_bool_exp
  symposium_person_user: symposium_person_users_bool_exp
  symposium_person_user_aggregate: symposium_person_users_aggregate_bool_exp
}

"""
unique or primary key constraints on table "symposium_persons"
"""
enum symposium_persons_constraint {
  """
  unique or primary key constraint on columns "symposium_person_id"
  """
symposium_persons_pkey
}

"""
input type for incrementing numeric columns in table "symposium_persons"
"""
input symposium_persons_inc_input {
  display_order: Int
  event_id: Int
  id: Int
  symposium_id: Int
}

"""
input type for inserting data into table "symposium_persons"
"""
input symposium_persons_insert_input {
  display_order: Int! 
  event: events_obj_rel_insert_input
  event_id: Int! 
  id: Int
  role: symposium_role! 
  symposium: symposia_obj_rel_insert_input
  symposium_affiliations: symposium_affiliations_arr_rel_insert_input
  symposium_id: Int! 
  symposium_person_field_responses: symposium_person_field_responses_arr_rel_insert_input
  symposium_person_user: symposium_person_users_arr_rel_insert_input
}

"""aggregate max on columns"""
type symposium_persons_max_fields {
   display_order: Int
   event_id: Int
   id: Int
   role: symposium_role
   symposium_id: Int
}

"""
order by max() on columns of table "symposium_persons"
"""
input symposium_persons_max_order_by {
  display_order: order_by
  event_id: order_by
  id: order_by
  role: order_by
  symposium_id: order_by
}

"""aggregate min on columns"""
type symposium_persons_min_fields {
   display_order: Int
   event_id: Int
   id: Int
   role: symposium_role
   symposium_id: Int
}

"""
order by min() on columns of table "symposium_persons"
"""
input symposium_persons_min_order_by {
  display_order: order_by
  event_id: order_by
  id: order_by
  role: order_by
  symposium_id: order_by
}

"""
response of any mutation on the table "symposium_persons"
"""
type symposium_persons_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [symposium_persons! ]! 
}

"""
input type for inserting object relation for remote table "symposium_persons"
"""
input symposium_persons_obj_rel_insert_input {
  data: symposium_persons_insert_input! 
  """upsert condition"""
on_conflict: symposium_persons_on_conflict
}

"""
on_conflict condition type for table "symposium_persons"
"""
input symposium_persons_on_conflict {
  constraint: symposium_persons_constraint! 
  update_columns: [symposium_persons_update_column! ]! 
  where: symposium_persons_bool_exp
}

"""Ordering options when selecting data from "symposium_persons"."""
input symposium_persons_order_by {
  display_order: order_by
  event: events_order_by
  event_id: order_by
  id: order_by
  role: order_by
  symposium: symposia_order_by
  symposium_affiliations_aggregate: symposium_affiliations_aggregate_order_by
  symposium_id: order_by
  symposium_person_field_responses_aggregate: symposium_person_field_responses_aggregate_order_by
  symposium_person_user_aggregate: symposium_person_users_aggregate_order_by
}

"""primary key columns input for table: symposium_persons"""
input symposium_persons_pk_columns_input {
  id: Int! 
}

"""
select columns of table "symposium_persons"
"""
enum symposium_persons_select_column {
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
id
  """column name"""
role
  """column name"""
symposium_id
}

"""
input type for updating data in table "symposium_persons"
"""
input symposium_persons_set_input {
  display_order: Int
  event_id: Int
  id: Int
  role: symposium_role
  symposium_id: Int
}

"""aggregate stddev on columns"""
type symposium_persons_stddev_fields {
   display_order: Float
   event_id: Float
   id: Float
   symposium_id: Float
}

"""
order by stddev() on columns of table "symposium_persons"
"""
input symposium_persons_stddev_order_by {
  display_order: order_by
  event_id: order_by
  id: order_by
  symposium_id: order_by
}

"""aggregate stddev_pop on columns"""
type symposium_persons_stddev_pop_fields {
   display_order: Float
   event_id: Float
   id: Float
   symposium_id: Float
}

"""
order by stddev_pop() on columns of table "symposium_persons"
"""
input symposium_persons_stddev_pop_order_by {
  display_order: order_by
  event_id: order_by
  id: order_by
  symposium_id: order_by
}

"""aggregate stddev_samp on columns"""
type symposium_persons_stddev_samp_fields {
   display_order: Float
   event_id: Float
   id: Float
   symposium_id: Float
}

"""
order by stddev_samp() on columns of table "symposium_persons"
"""
input symposium_persons_stddev_samp_order_by {
  display_order: order_by
  event_id: order_by
  id: order_by
  symposium_id: order_by
}

"""
Streaming cursor of the table "symposium_persons"
"""
input symposium_persons_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: symposium_persons_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input symposium_persons_stream_cursor_value_input {
  display_order: Int
  event_id: Int
  id: Int
  role: symposium_role
  symposium_id: Int
}

"""aggregate sum on columns"""
type symposium_persons_sum_fields {
   display_order: Int
   event_id: Int
   id: Int
   symposium_id: Int
}

"""
order by sum() on columns of table "symposium_persons"
"""
input symposium_persons_sum_order_by {
  display_order: order_by
  event_id: order_by
  id: order_by
  symposium_id: order_by
}

"""
update columns of table "symposium_persons"
"""
enum symposium_persons_update_column {
  """column name"""
display_order
  """column name"""
event_id
  """column name"""
id
  """column name"""
role
  """column name"""
symposium_id
}

input symposium_persons_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: symposium_persons_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: symposium_persons_set_input
  where: symposium_persons_bool_exp! 
}

"""aggregate var_pop on columns"""
type symposium_persons_var_pop_fields {
   display_order: Float
   event_id: Float
   id: Float
   symposium_id: Float
}

"""
order by var_pop() on columns of table "symposium_persons"
"""
input symposium_persons_var_pop_order_by {
  display_order: order_by
  event_id: order_by
  id: order_by
  symposium_id: order_by
}

"""aggregate var_samp on columns"""
type symposium_persons_var_samp_fields {
   display_order: Float
   event_id: Float
   id: Float
   symposium_id: Float
}

"""
order by var_samp() on columns of table "symposium_persons"
"""
input symposium_persons_var_samp_order_by {
  display_order: order_by
  event_id: order_by
  id: order_by
  symposium_id: order_by
}

"""aggregate variance on columns"""
type symposium_persons_variance_fields {
   display_order: Float
   event_id: Float
   id: Float
   symposium_id: Float
}

"""
order by variance() on columns of table "symposium_persons"
"""
input symposium_persons_variance_order_by {
  display_order: order_by
  event_id: order_by
  id: order_by
  symposium_id: order_by
}

scalar symposium_question_data_types 

"""
Boolean expression to compare columns of type "symposium_question_data_types". All fields are combined with logical 'AND'.
"""
input symposium_question_data_types_comparison_exp {
  _eq: symposium_question_data_types
  _gt: symposium_question_data_types
  _gte: symposium_question_data_types
  _in: [symposium_question_data_types! ]
  _is_null: Boolean
  _lt: symposium_question_data_types
  _lte: symposium_question_data_types
  _neq: symposium_question_data_types
  _nin: [symposium_question_data_types! ]
}

"""
columns and relationships of "symposium_question_responses"
"""
type symposium_question_responses {
   id: Int! 
  """An object relationship"""
 symposium: symposia! 
   symposium_id: Int! 
  """An object relationship"""
 symposium_question: symposium_questions! 
   symposium_question_id: Int! 
   time_stamp: bigint
   value: String! 
   word_count: Int
}

"""
aggregated selection of "symposium_question_responses"
"""
type symposium_question_responses_aggregate {
   aggregate: symposium_question_responses_aggregate_fields
   nodes: [symposium_question_responses! ]! 
}

input symposium_question_responses_aggregate_bool_exp {
  count: symposium_question_responses_aggregate_bool_exp_count
}

input symposium_question_responses_aggregate_bool_exp_count {
  arguments: [symposium_question_responses_select_column! ]
  distinct: Boolean
  filter: symposium_question_responses_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "symposium_question_responses"
"""
type symposium_question_responses_aggregate_fields {
   avg: symposium_question_responses_avg_fields
   count(columns: [symposium_question_responses_select_column! ], distinct: Boolean): Int! 
   max: symposium_question_responses_max_fields
   min: symposium_question_responses_min_fields
   stddev: symposium_question_responses_stddev_fields
   stddev_pop: symposium_question_responses_stddev_pop_fields
   stddev_samp: symposium_question_responses_stddev_samp_fields
   sum: symposium_question_responses_sum_fields
   var_pop: symposium_question_responses_var_pop_fields
   var_samp: symposium_question_responses_var_samp_fields
   variance: symposium_question_responses_variance_fields
}

"""
order by aggregate values of table "symposium_question_responses"
"""
input symposium_question_responses_aggregate_order_by {
  avg: symposium_question_responses_avg_order_by
  count: order_by
  max: symposium_question_responses_max_order_by
  min: symposium_question_responses_min_order_by
  stddev: symposium_question_responses_stddev_order_by
  stddev_pop: symposium_question_responses_stddev_pop_order_by
  stddev_samp: symposium_question_responses_stddev_samp_order_by
  sum: symposium_question_responses_sum_order_by
  var_pop: symposium_question_responses_var_pop_order_by
  var_samp: symposium_question_responses_var_samp_order_by
  variance: symposium_question_responses_variance_order_by
}

"""
input type for inserting array relation for remote table "symposium_question_responses"
"""
input symposium_question_responses_arr_rel_insert_input {
  data: [symposium_question_responses_insert_input! ]! 
  """upsert condition"""
on_conflict: symposium_question_responses_on_conflict
}

"""aggregate avg on columns"""
type symposium_question_responses_avg_fields {
   id: Float
   symposium_id: Float
   symposium_question_id: Float
   time_stamp: Float
   word_count: Float
}

"""
order by avg() on columns of table "symposium_question_responses"
"""
input symposium_question_responses_avg_order_by {
  id: order_by
  symposium_id: order_by
  symposium_question_id: order_by
  time_stamp: order_by
  word_count: order_by
}

"""
Boolean expression to filter rows from the table "symposium_question_responses". All fields are combined with a logical 'AND'.
"""
input symposium_question_responses_bool_exp {
  _and: [symposium_question_responses_bool_exp! ]
  _not: symposium_question_responses_bool_exp
  _or: [symposium_question_responses_bool_exp! ]
  id: Int_comparison_exp
  symposium: symposia_bool_exp
  symposium_id: Int_comparison_exp
  symposium_question: symposium_questions_bool_exp
  symposium_question_id: Int_comparison_exp
  time_stamp: bigint_comparison_exp
  value: String_comparison_exp
  word_count: Int_comparison_exp
}

"""
unique or primary key constraints on table "symposium_question_responses"
"""
enum symposium_question_responses_constraint {
  """
  unique or primary key constraint on columns "symposium_question_response_id"
  """
symposium_question_responses_pkey
  """
  unique or primary key constraint on columns "symposium_question_id", "symposium_id"
  """
symposium_question_responses_symposium_id_symposium_question_id
}

"""
input type for incrementing numeric columns in table "symposium_question_responses"
"""
input symposium_question_responses_inc_input {
  id: Int
  symposium_id: Int
  symposium_question_id: Int
  time_stamp: bigint
  word_count: Int
}

"""
input type for inserting data into table "symposium_question_responses"
"""
input symposium_question_responses_insert_input {
  id: Int
  symposium: symposia_obj_rel_insert_input
  symposium_id: Int! 
  symposium_question: symposium_questions_obj_rel_insert_input
  symposium_question_id: Int! 
  time_stamp: bigint! 
  value: String! 
  word_count: Int
}

"""aggregate max on columns"""
type symposium_question_responses_max_fields {
   id: Int
   symposium_id: Int
   symposium_question_id: Int
   time_stamp: bigint
   value: String
   word_count: Int
}

"""
order by max() on columns of table "symposium_question_responses"
"""
input symposium_question_responses_max_order_by {
  id: order_by
  symposium_id: order_by
  symposium_question_id: order_by
  time_stamp: order_by
  value: order_by
  word_count: order_by
}

"""aggregate min on columns"""
type symposium_question_responses_min_fields {
   id: Int
   symposium_id: Int
   symposium_question_id: Int
   time_stamp: bigint
   value: String
   word_count: Int
}

"""
order by min() on columns of table "symposium_question_responses"
"""
input symposium_question_responses_min_order_by {
  id: order_by
  symposium_id: order_by
  symposium_question_id: order_by
  time_stamp: order_by
  value: order_by
  word_count: order_by
}

"""
response of any mutation on the table "symposium_question_responses"
"""
type symposium_question_responses_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [symposium_question_responses! ]! 
}

"""
on_conflict condition type for table "symposium_question_responses"
"""
input symposium_question_responses_on_conflict {
  constraint: symposium_question_responses_constraint! 
  update_columns: [symposium_question_responses_update_column! ]! 
  where: symposium_question_responses_bool_exp
}

"""
Ordering options when selecting data from "symposium_question_responses".
"""
input symposium_question_responses_order_by {
  id: order_by
  symposium: symposia_order_by
  symposium_id: order_by
  symposium_question: symposium_questions_order_by
  symposium_question_id: order_by
  time_stamp: order_by
  value: order_by
  word_count: order_by
}

"""primary key columns input for table: symposium_question_responses"""
input symposium_question_responses_pk_columns_input {
  id: Int! 
}

"""
select columns of table "symposium_question_responses"
"""
enum symposium_question_responses_select_column {
  """column name"""
id
  """column name"""
symposium_id
  """column name"""
symposium_question_id
  """column name"""
time_stamp
  """column name"""
value
  """column name"""
word_count
}

"""
input type for updating data in table "symposium_question_responses"
"""
input symposium_question_responses_set_input {
  id: Int
  symposium_id: Int
  symposium_question_id: Int
  time_stamp: bigint
  value: String
  word_count: Int
}

"""aggregate stddev on columns"""
type symposium_question_responses_stddev_fields {
   id: Float
   symposium_id: Float
   symposium_question_id: Float
   time_stamp: Float
   word_count: Float
}

"""
order by stddev() on columns of table "symposium_question_responses"
"""
input symposium_question_responses_stddev_order_by {
  id: order_by
  symposium_id: order_by
  symposium_question_id: order_by
  time_stamp: order_by
  word_count: order_by
}

"""aggregate stddev_pop on columns"""
type symposium_question_responses_stddev_pop_fields {
   id: Float
   symposium_id: Float
   symposium_question_id: Float
   time_stamp: Float
   word_count: Float
}

"""
order by stddev_pop() on columns of table "symposium_question_responses"
"""
input symposium_question_responses_stddev_pop_order_by {
  id: order_by
  symposium_id: order_by
  symposium_question_id: order_by
  time_stamp: order_by
  word_count: order_by
}

"""aggregate stddev_samp on columns"""
type symposium_question_responses_stddev_samp_fields {
   id: Float
   symposium_id: Float
   symposium_question_id: Float
   time_stamp: Float
   word_count: Float
}

"""
order by stddev_samp() on columns of table "symposium_question_responses"
"""
input symposium_question_responses_stddev_samp_order_by {
  id: order_by
  symposium_id: order_by
  symposium_question_id: order_by
  time_stamp: order_by
  word_count: order_by
}

"""
Streaming cursor of the table "symposium_question_responses"
"""
input symposium_question_responses_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: symposium_question_responses_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input symposium_question_responses_stream_cursor_value_input {
  id: Int
  symposium_id: Int
  symposium_question_id: Int
  time_stamp: bigint
  value: String
  word_count: Int
}

"""aggregate sum on columns"""
type symposium_question_responses_sum_fields {
   id: Int
   symposium_id: Int
   symposium_question_id: Int
   time_stamp: bigint
   word_count: Int
}

"""
order by sum() on columns of table "symposium_question_responses"
"""
input symposium_question_responses_sum_order_by {
  id: order_by
  symposium_id: order_by
  symposium_question_id: order_by
  time_stamp: order_by
  word_count: order_by
}

"""
update columns of table "symposium_question_responses"
"""
enum symposium_question_responses_update_column {
  """column name"""
id
  """column name"""
symposium_id
  """column name"""
symposium_question_id
  """column name"""
time_stamp
  """column name"""
value
  """column name"""
word_count
}

input symposium_question_responses_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: symposium_question_responses_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: symposium_question_responses_set_input
  where: symposium_question_responses_bool_exp! 
}

"""aggregate var_pop on columns"""
type symposium_question_responses_var_pop_fields {
   id: Float
   symposium_id: Float
   symposium_question_id: Float
   time_stamp: Float
   word_count: Float
}

"""
order by var_pop() on columns of table "symposium_question_responses"
"""
input symposium_question_responses_var_pop_order_by {
  id: order_by
  symposium_id: order_by
  symposium_question_id: order_by
  time_stamp: order_by
  word_count: order_by
}

"""aggregate var_samp on columns"""
type symposium_question_responses_var_samp_fields {
   id: Float
   symposium_id: Float
   symposium_question_id: Float
   time_stamp: Float
   word_count: Float
}

"""
order by var_samp() on columns of table "symposium_question_responses"
"""
input symposium_question_responses_var_samp_order_by {
  id: order_by
  symposium_id: order_by
  symposium_question_id: order_by
  time_stamp: order_by
  word_count: order_by
}

"""aggregate variance on columns"""
type symposium_question_responses_variance_fields {
   id: Float
   symposium_id: Float
   symposium_question_id: Float
   time_stamp: Float
   word_count: Float
}

"""
order by variance() on columns of table "symposium_question_responses"
"""
input symposium_question_responses_variance_order_by {
  id: order_by
  symposium_id: order_by
  symposium_question_id: order_by
  time_stamp: order_by
  word_count: order_by
}

"""
columns and relationships of "symposium_questions"
"""
type symposium_questions {
   allow_2_people: Boolean! 
   answer_required: Boolean! 
   archived: Boolean! 
   city: field_status! 
   city_label: String! 
   country: field_status! 
   country_label: String! 
   data_type: symposium_question_data_types
  """An object relationship"""
 event: events! 
   event_id: Int! 
   in_program: Boolean! 
   institution: field_status! 
   institution_label: String! 
   is_category: Boolean! 
   is_title: Boolean! 
   mandatory_city: Boolean! 
   mandatory_country: Boolean! 
   mandatory_email: Boolean! 
   mandatory_first_name: Boolean! 
   mandatory_institution: Boolean! 
   mandatory_last_name: Boolean! 
   mandatory_middle_initial: Boolean! 
   mandatory_state: Boolean! 
   mandatory_title: Boolean! 
   max_affiliations: Int
   max_persons: Int
   options: _text
   order_of_questions: Int
   person_field_name: String
   question_description: String
   question_name: String
  """An array relationship"""
 responses("""distinct select on columns"""
distinct_on: [symposium_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_question_responses_order_by! ], """filter the rows returned"""
where: symposium_question_responses_bool_exp): [symposium_question_responses! ]! 
  """An aggregate relationship"""
 responses_aggregate("""distinct select on columns"""
distinct_on: [symposium_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_question_responses_order_by! ], """filter the rows returned"""
where: symposium_question_responses_bool_exp): symposium_question_responses_aggregate! 
   row_count: Int
   show_city: Boolean! 
   show_country: Boolean! 
   show_email: Boolean! 
   show_first_name: Boolean! 
   show_institution: Boolean! 
   show_last_name: Boolean! 
   show_middle_initial: Boolean! 
   show_reviewer: Boolean! 
   show_state: Boolean! 
   show_submitter: Boolean! 
   show_title: Boolean! 
   state: field_status! 
   state_label: String! 
   symposium_question_id: Int! 
   tabular_columns: _text
   tabular_rows: _text
   time_stamp: bigint
   word_limit: Int
}

"""
aggregated selection of "symposium_questions"
"""
type symposium_questions_aggregate {
   aggregate: symposium_questions_aggregate_fields
   nodes: [symposium_questions! ]! 
}

"""
aggregate fields of "symposium_questions"
"""
type symposium_questions_aggregate_fields {
   avg: symposium_questions_avg_fields
   count(columns: [symposium_questions_select_column! ], distinct: Boolean): Int! 
   max: symposium_questions_max_fields
   min: symposium_questions_min_fields
   stddev: symposium_questions_stddev_fields
   stddev_pop: symposium_questions_stddev_pop_fields
   stddev_samp: symposium_questions_stddev_samp_fields
   sum: symposium_questions_sum_fields
   var_pop: symposium_questions_var_pop_fields
   var_samp: symposium_questions_var_samp_fields
   variance: symposium_questions_variance_fields
}

"""aggregate avg on columns"""
type symposium_questions_avg_fields {
   event_id: Float
   max_affiliations: Float
   max_persons: Float
   order_of_questions: Float
   row_count: Float
   symposium_question_id: Float
   time_stamp: Float
   word_limit: Float
}

"""
Boolean expression to filter rows from the table "symposium_questions". All fields are combined with a logical 'AND'.
"""
input symposium_questions_bool_exp {
  _and: [symposium_questions_bool_exp! ]
  _not: symposium_questions_bool_exp
  _or: [symposium_questions_bool_exp! ]
  allow_2_people: Boolean_comparison_exp
  answer_required: Boolean_comparison_exp
  archived: Boolean_comparison_exp
  city: field_status_comparison_exp
  city_label: String_comparison_exp
  country: field_status_comparison_exp
  country_label: String_comparison_exp
  data_type: symposium_question_data_types_comparison_exp
  event: events_bool_exp
  event_id: Int_comparison_exp
  in_program: Boolean_comparison_exp
  institution: field_status_comparison_exp
  institution_label: String_comparison_exp
  is_category: Boolean_comparison_exp
  is_title: Boolean_comparison_exp
  mandatory_city: Boolean_comparison_exp
  mandatory_country: Boolean_comparison_exp
  mandatory_email: Boolean_comparison_exp
  mandatory_first_name: Boolean_comparison_exp
  mandatory_institution: Boolean_comparison_exp
  mandatory_last_name: Boolean_comparison_exp
  mandatory_middle_initial: Boolean_comparison_exp
  mandatory_state: Boolean_comparison_exp
  mandatory_title: Boolean_comparison_exp
  max_affiliations: Int_comparison_exp
  max_persons: Int_comparison_exp
  options: _text_comparison_exp
  order_of_questions: Int_comparison_exp
  person_field_name: String_comparison_exp
  question_description: String_comparison_exp
  question_name: String_comparison_exp
  responses: symposium_question_responses_bool_exp
  responses_aggregate: symposium_question_responses_aggregate_bool_exp
  row_count: Int_comparison_exp
  show_city: Boolean_comparison_exp
  show_country: Boolean_comparison_exp
  show_email: Boolean_comparison_exp
  show_first_name: Boolean_comparison_exp
  show_institution: Boolean_comparison_exp
  show_last_name: Boolean_comparison_exp
  show_middle_initial: Boolean_comparison_exp
  show_reviewer: Boolean_comparison_exp
  show_state: Boolean_comparison_exp
  show_submitter: Boolean_comparison_exp
  show_title: Boolean_comparison_exp
  state: field_status_comparison_exp
  state_label: String_comparison_exp
  symposium_question_id: Int_comparison_exp
  tabular_columns: _text_comparison_exp
  tabular_rows: _text_comparison_exp
  time_stamp: bigint_comparison_exp
  word_limit: Int_comparison_exp
}

"""
unique or primary key constraints on table "symposium_questions"
"""
enum symposium_questions_constraint {
  """
  unique or primary key constraint on columns "symposium_question_id"
  """
symposium_questions_pkey
}

"""
input type for incrementing numeric columns in table "symposium_questions"
"""
input symposium_questions_inc_input {
  event_id: Int
  max_affiliations: Int
  max_persons: Int
  order_of_questions: Int
  row_count: Int
  symposium_question_id: Int
  time_stamp: bigint
  word_limit: Int
}

"""
input type for inserting data into table "symposium_questions"
"""
input symposium_questions_insert_input {
  allow_2_people: Boolean! 
  answer_required: Boolean! 
  archived: Boolean! 
  city: field_status! 
  city_label: String! 
  country: field_status! 
  country_label: String! 
  data_type: symposium_question_data_types
  event: events_obj_rel_insert_input
  event_id: Int! 
  in_program: Boolean! 
  institution: field_status! 
  institution_label: String! 
  is_category: Boolean! 
  is_title: Boolean! 
  mandatory_city: Boolean! 
  mandatory_country: Boolean! 
  mandatory_email: Boolean! 
  mandatory_first_name: Boolean! 
  mandatory_institution: Boolean! 
  mandatory_last_name: Boolean! 
  mandatory_middle_initial: Boolean! 
  mandatory_state: Boolean! 
  mandatory_title: Boolean! 
  max_affiliations: Int! 
  max_persons: Int! 
  options: _text
  order_of_questions: Int
  person_field_name: String
  question_description: String
  question_name: String
  responses: symposium_question_responses_arr_rel_insert_input
  row_count: Int
  show_city: Boolean! 
  show_country: Boolean! 
  show_email: Boolean! 
  show_first_name: Boolean! 
  show_institution: Boolean! 
  show_last_name: Boolean! 
  show_middle_initial: Boolean! 
  show_reviewer: Boolean! 
  show_state: Boolean! 
  show_submitter: Boolean! 
  show_title: Boolean! 
  state: field_status! 
  state_label: String! 
  symposium_question_id: Int! 
  tabular_columns: _text
  tabular_rows: _text
  time_stamp: bigint! 
  word_limit: Int
}

"""aggregate max on columns"""
type symposium_questions_max_fields {
   city: field_status
   city_label: String
   country: field_status
   country_label: String
   data_type: symposium_question_data_types
   event_id: Int
   institution: field_status
   institution_label: String
   max_affiliations: Int
   max_persons: Int
   order_of_questions: Int
   person_field_name: String
   question_description: String
   question_name: String
   row_count: Int
   state: field_status
   state_label: String
   symposium_question_id: Int
   time_stamp: bigint
   word_limit: Int
}

"""aggregate min on columns"""
type symposium_questions_min_fields {
   city: field_status
   city_label: String
   country: field_status
   country_label: String
   data_type: symposium_question_data_types
   event_id: Int
   institution: field_status
   institution_label: String
   max_affiliations: Int
   max_persons: Int
   order_of_questions: Int
   person_field_name: String
   question_description: String
   question_name: String
   row_count: Int
   state: field_status
   state_label: String
   symposium_question_id: Int
   time_stamp: bigint
   word_limit: Int
}

"""
response of any mutation on the table "symposium_questions"
"""
type symposium_questions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [symposium_questions! ]! 
}

"""
input type for inserting object relation for remote table "symposium_questions"
"""
input symposium_questions_obj_rel_insert_input {
  data: symposium_questions_insert_input! 
  """upsert condition"""
on_conflict: symposium_questions_on_conflict
}

"""
on_conflict condition type for table "symposium_questions"
"""
input symposium_questions_on_conflict {
  constraint: symposium_questions_constraint! 
  update_columns: [symposium_questions_update_column! ]! 
  where: symposium_questions_bool_exp
}

"""Ordering options when selecting data from "symposium_questions"."""
input symposium_questions_order_by {
  allow_2_people: order_by
  answer_required: order_by
  archived: order_by
  city: order_by
  city_label: order_by
  country: order_by
  country_label: order_by
  data_type: order_by
  event: events_order_by
  event_id: order_by
  in_program: order_by
  institution: order_by
  institution_label: order_by
  is_category: order_by
  is_title: order_by
  mandatory_city: order_by
  mandatory_country: order_by
  mandatory_email: order_by
  mandatory_first_name: order_by
  mandatory_institution: order_by
  mandatory_last_name: order_by
  mandatory_middle_initial: order_by
  mandatory_state: order_by
  mandatory_title: order_by
  max_affiliations: order_by
  max_persons: order_by
  options: order_by
  order_of_questions: order_by
  person_field_name: order_by
  question_description: order_by
  question_name: order_by
  responses_aggregate: symposium_question_responses_aggregate_order_by
  row_count: order_by
  show_city: order_by
  show_country: order_by
  show_email: order_by
  show_first_name: order_by
  show_institution: order_by
  show_last_name: order_by
  show_middle_initial: order_by
  show_reviewer: order_by
  show_state: order_by
  show_submitter: order_by
  show_title: order_by
  state: order_by
  state_label: order_by
  symposium_question_id: order_by
  tabular_columns: order_by
  tabular_rows: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""primary key columns input for table: symposium_questions"""
input symposium_questions_pk_columns_input {
  symposium_question_id: Int! 
}

"""
select columns of table "symposium_questions"
"""
enum symposium_questions_select_column {
  """column name"""
allow_2_people
  """column name"""
answer_required
  """column name"""
archived
  """column name"""
city
  """column name"""
city_label
  """column name"""
country
  """column name"""
country_label
  """column name"""
data_type
  """column name"""
event_id
  """column name"""
in_program
  """column name"""
institution
  """column name"""
institution_label
  """column name"""
is_category
  """column name"""
is_title
  """column name"""
mandatory_city
  """column name"""
mandatory_country
  """column name"""
mandatory_email
  """column name"""
mandatory_first_name
  """column name"""
mandatory_institution
  """column name"""
mandatory_last_name
  """column name"""
mandatory_middle_initial
  """column name"""
mandatory_state
  """column name"""
mandatory_title
  """column name"""
max_affiliations
  """column name"""
max_persons
  """column name"""
options
  """column name"""
order_of_questions
  """column name"""
person_field_name
  """column name"""
question_description
  """column name"""
question_name
  """column name"""
row_count
  """column name"""
show_city
  """column name"""
show_country
  """column name"""
show_email
  """column name"""
show_first_name
  """column name"""
show_institution
  """column name"""
show_last_name
  """column name"""
show_middle_initial
  """column name"""
show_reviewer
  """column name"""
show_state
  """column name"""
show_submitter
  """column name"""
show_title
  """column name"""
state
  """column name"""
state_label
  """column name"""
symposium_question_id
  """column name"""
tabular_columns
  """column name"""
tabular_rows
  """column name"""
time_stamp
  """column name"""
word_limit
}

"""
input type for updating data in table "symposium_questions"
"""
input symposium_questions_set_input {
  allow_2_people: Boolean
  answer_required: Boolean
  archived: Boolean
  city: field_status
  city_label: String
  country: field_status
  country_label: String
  data_type: symposium_question_data_types
  event_id: Int
  in_program: Boolean
  institution: field_status
  institution_label: String
  is_category: Boolean
  is_title: Boolean
  mandatory_city: Boolean
  mandatory_country: Boolean
  mandatory_email: Boolean
  mandatory_first_name: Boolean
  mandatory_institution: Boolean
  mandatory_last_name: Boolean
  mandatory_middle_initial: Boolean
  mandatory_state: Boolean
  mandatory_title: Boolean
  max_affiliations: Int
  max_persons: Int
  options: _text
  order_of_questions: Int
  person_field_name: String
  question_description: String
  question_name: String
  row_count: Int
  show_city: Boolean
  show_country: Boolean
  show_email: Boolean
  show_first_name: Boolean
  show_institution: Boolean
  show_last_name: Boolean
  show_middle_initial: Boolean
  show_reviewer: Boolean
  show_state: Boolean
  show_submitter: Boolean
  show_title: Boolean
  state: field_status
  state_label: String
  symposium_question_id: Int
  tabular_columns: _text
  tabular_rows: _text
  time_stamp: bigint
  word_limit: Int
}

"""aggregate stddev on columns"""
type symposium_questions_stddev_fields {
   event_id: Float
   max_affiliations: Float
   max_persons: Float
   order_of_questions: Float
   row_count: Float
   symposium_question_id: Float
   time_stamp: Float
   word_limit: Float
}

"""aggregate stddev_pop on columns"""
type symposium_questions_stddev_pop_fields {
   event_id: Float
   max_affiliations: Float
   max_persons: Float
   order_of_questions: Float
   row_count: Float
   symposium_question_id: Float
   time_stamp: Float
   word_limit: Float
}

"""aggregate stddev_samp on columns"""
type symposium_questions_stddev_samp_fields {
   event_id: Float
   max_affiliations: Float
   max_persons: Float
   order_of_questions: Float
   row_count: Float
   symposium_question_id: Float
   time_stamp: Float
   word_limit: Float
}

"""
Streaming cursor of the table "symposium_questions"
"""
input symposium_questions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: symposium_questions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input symposium_questions_stream_cursor_value_input {
  allow_2_people: Boolean
  answer_required: Boolean
  archived: Boolean
  city: field_status
  city_label: String
  country: field_status
  country_label: String
  data_type: symposium_question_data_types
  event_id: Int
  in_program: Boolean
  institution: field_status
  institution_label: String
  is_category: Boolean
  is_title: Boolean
  mandatory_city: Boolean
  mandatory_country: Boolean
  mandatory_email: Boolean
  mandatory_first_name: Boolean
  mandatory_institution: Boolean
  mandatory_last_name: Boolean
  mandatory_middle_initial: Boolean
  mandatory_state: Boolean
  mandatory_title: Boolean
  max_affiliations: Int
  max_persons: Int
  options: _text
  order_of_questions: Int
  person_field_name: String
  question_description: String
  question_name: String
  row_count: Int
  show_city: Boolean
  show_country: Boolean
  show_email: Boolean
  show_first_name: Boolean
  show_institution: Boolean
  show_last_name: Boolean
  show_middle_initial: Boolean
  show_reviewer: Boolean
  show_state: Boolean
  show_submitter: Boolean
  show_title: Boolean
  state: field_status
  state_label: String
  symposium_question_id: Int
  tabular_columns: _text
  tabular_rows: _text
  time_stamp: bigint
  word_limit: Int
}

"""aggregate sum on columns"""
type symposium_questions_sum_fields {
   event_id: Int
   max_affiliations: Int
   max_persons: Int
   order_of_questions: Int
   row_count: Int
   symposium_question_id: Int
   time_stamp: bigint
   word_limit: Int
}

"""
update columns of table "symposium_questions"
"""
enum symposium_questions_update_column {
  """column name"""
allow_2_people
  """column name"""
answer_required
  """column name"""
archived
  """column name"""
city
  """column name"""
city_label
  """column name"""
country
  """column name"""
country_label
  """column name"""
data_type
  """column name"""
event_id
  """column name"""
in_program
  """column name"""
institution
  """column name"""
institution_label
  """column name"""
is_category
  """column name"""
is_title
  """column name"""
mandatory_city
  """column name"""
mandatory_country
  """column name"""
mandatory_email
  """column name"""
mandatory_first_name
  """column name"""
mandatory_institution
  """column name"""
mandatory_last_name
  """column name"""
mandatory_middle_initial
  """column name"""
mandatory_state
  """column name"""
mandatory_title
  """column name"""
max_affiliations
  """column name"""
max_persons
  """column name"""
options
  """column name"""
order_of_questions
  """column name"""
person_field_name
  """column name"""
question_description
  """column name"""
question_name
  """column name"""
row_count
  """column name"""
show_city
  """column name"""
show_country
  """column name"""
show_email
  """column name"""
show_first_name
  """column name"""
show_institution
  """column name"""
show_last_name
  """column name"""
show_middle_initial
  """column name"""
show_reviewer
  """column name"""
show_state
  """column name"""
show_submitter
  """column name"""
show_title
  """column name"""
state
  """column name"""
state_label
  """column name"""
symposium_question_id
  """column name"""
tabular_columns
  """column name"""
tabular_rows
  """column name"""
time_stamp
  """column name"""
word_limit
}

input symposium_questions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: symposium_questions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: symposium_questions_set_input
  where: symposium_questions_bool_exp! 
}

"""aggregate var_pop on columns"""
type symposium_questions_var_pop_fields {
   event_id: Float
   max_affiliations: Float
   max_persons: Float
   order_of_questions: Float
   row_count: Float
   symposium_question_id: Float
   time_stamp: Float
   word_limit: Float
}

"""aggregate var_samp on columns"""
type symposium_questions_var_samp_fields {
   event_id: Float
   max_affiliations: Float
   max_persons: Float
   order_of_questions: Float
   row_count: Float
   symposium_question_id: Float
   time_stamp: Float
   word_limit: Float
}

"""aggregate variance on columns"""
type symposium_questions_variance_fields {
   event_id: Float
   max_affiliations: Float
   max_persons: Float
   order_of_questions: Float
   row_count: Float
   symposium_question_id: Float
   time_stamp: Float
   word_limit: Float
}

scalar symposium_review_question_data_types 

"""
Boolean expression to compare columns of type "symposium_review_question_data_types". All fields are combined with logical 'AND'.
"""
input symposium_review_question_data_types_comparison_exp {
  _eq: symposium_review_question_data_types
  _gt: symposium_review_question_data_types
  _gte: symposium_review_question_data_types
  _in: [symposium_review_question_data_types! ]
  _is_null: Boolean
  _lt: symposium_review_question_data_types
  _lte: symposium_review_question_data_types
  _neq: symposium_review_question_data_types
  _nin: [symposium_review_question_data_types! ]
}

"""
columns and relationships of "symposium_review_question_responses"
"""
type symposium_review_question_responses {
   fe_epoch: bigint
  """An object relationship"""
 review: symposium_reviews! 
   symposium_review_id: Int! 
  """An object relationship"""
 symposium_review_question: symposium_review_questions! 
   symposium_review_question_id: Int! 
   symposium_review_question_response_id: Int! 
   time_stamp: bigint! 
   value: String
   word_count: Int
}

"""
aggregated selection of "symposium_review_question_responses"
"""
type symposium_review_question_responses_aggregate {
   aggregate: symposium_review_question_responses_aggregate_fields
   nodes: [symposium_review_question_responses! ]! 
}

input symposium_review_question_responses_aggregate_bool_exp {
  count: symposium_review_question_responses_aggregate_bool_exp_count
}

input symposium_review_question_responses_aggregate_bool_exp_count {
  arguments: [symposium_review_question_responses_select_column! ]
  distinct: Boolean
  filter: symposium_review_question_responses_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "symposium_review_question_responses"
"""
type symposium_review_question_responses_aggregate_fields {
   avg: symposium_review_question_responses_avg_fields
   count(columns: [symposium_review_question_responses_select_column! ], distinct: Boolean): Int! 
   max: symposium_review_question_responses_max_fields
   min: symposium_review_question_responses_min_fields
   stddev: symposium_review_question_responses_stddev_fields
   stddev_pop: symposium_review_question_responses_stddev_pop_fields
   stddev_samp: symposium_review_question_responses_stddev_samp_fields
   sum: symposium_review_question_responses_sum_fields
   var_pop: symposium_review_question_responses_var_pop_fields
   var_samp: symposium_review_question_responses_var_samp_fields
   variance: symposium_review_question_responses_variance_fields
}

"""
order by aggregate values of table "symposium_review_question_responses"
"""
input symposium_review_question_responses_aggregate_order_by {
  avg: symposium_review_question_responses_avg_order_by
  count: order_by
  max: symposium_review_question_responses_max_order_by
  min: symposium_review_question_responses_min_order_by
  stddev: symposium_review_question_responses_stddev_order_by
  stddev_pop: symposium_review_question_responses_stddev_pop_order_by
  stddev_samp: symposium_review_question_responses_stddev_samp_order_by
  sum: symposium_review_question_responses_sum_order_by
  var_pop: symposium_review_question_responses_var_pop_order_by
  var_samp: symposium_review_question_responses_var_samp_order_by
  variance: symposium_review_question_responses_variance_order_by
}

"""
input type for inserting array relation for remote table "symposium_review_question_responses"
"""
input symposium_review_question_responses_arr_rel_insert_input {
  data: [symposium_review_question_responses_insert_input! ]! 
  """upsert condition"""
on_conflict: symposium_review_question_responses_on_conflict
}

"""aggregate avg on columns"""
type symposium_review_question_responses_avg_fields {
   fe_epoch: Float
   symposium_review_id: Float
   symposium_review_question_id: Float
   symposium_review_question_response_id: Float
   time_stamp: Float
   word_count: Float
}

"""
order by avg() on columns of table "symposium_review_question_responses"
"""
input symposium_review_question_responses_avg_order_by {
  fe_epoch: order_by
  symposium_review_id: order_by
  symposium_review_question_id: order_by
  symposium_review_question_response_id: order_by
  time_stamp: order_by
  word_count: order_by
}

"""
Boolean expression to filter rows from the table "symposium_review_question_responses". All fields are combined with a logical 'AND'.
"""
input symposium_review_question_responses_bool_exp {
  _and: [symposium_review_question_responses_bool_exp! ]
  _not: symposium_review_question_responses_bool_exp
  _or: [symposium_review_question_responses_bool_exp! ]
  fe_epoch: bigint_comparison_exp
  review: symposium_reviews_bool_exp
  symposium_review_id: Int_comparison_exp
  symposium_review_question: symposium_review_questions_bool_exp
  symposium_review_question_id: Int_comparison_exp
  symposium_review_question_response_id: Int_comparison_exp
  time_stamp: bigint_comparison_exp
  value: String_comparison_exp
  word_count: Int_comparison_exp
}

"""
unique or primary key constraints on table "symposium_review_question_responses"
"""
enum symposium_review_question_responses_constraint {
  """
  unique or primary key constraint on columns "symposium_review_question_response_id"
  """
symposium_review_question_responses_pkey
  """
  unique or primary key constraint on columns "symposium_review_id", "symposium_review_question_id"
  """
symposium_review_question_responses_symposium_review_id_symposi
}

"""
input type for incrementing numeric columns in table "symposium_review_question_responses"
"""
input symposium_review_question_responses_inc_input {
  fe_epoch: bigint
  symposium_review_id: Int
  symposium_review_question_id: Int
  symposium_review_question_response_id: Int
  time_stamp: bigint
  word_count: Int
}

"""
input type for inserting data into table "symposium_review_question_responses"
"""
input symposium_review_question_responses_insert_input {
  fe_epoch: bigint
  review: symposium_reviews_obj_rel_insert_input
  symposium_review_id: Int! 
  symposium_review_question: symposium_review_questions_obj_rel_insert_input
  symposium_review_question_id: Int! 
  symposium_review_question_response_id: Int! 
  time_stamp: bigint! 
  value: String
  word_count: Int
}

"""aggregate max on columns"""
type symposium_review_question_responses_max_fields {
   fe_epoch: bigint
   symposium_review_id: Int
   symposium_review_question_id: Int
   symposium_review_question_response_id: Int
   time_stamp: bigint
   value: String
   word_count: Int
}

"""
order by max() on columns of table "symposium_review_question_responses"
"""
input symposium_review_question_responses_max_order_by {
  fe_epoch: order_by
  symposium_review_id: order_by
  symposium_review_question_id: order_by
  symposium_review_question_response_id: order_by
  time_stamp: order_by
  value: order_by
  word_count: order_by
}

"""aggregate min on columns"""
type symposium_review_question_responses_min_fields {
   fe_epoch: bigint
   symposium_review_id: Int
   symposium_review_question_id: Int
   symposium_review_question_response_id: Int
   time_stamp: bigint
   value: String
   word_count: Int
}

"""
order by min() on columns of table "symposium_review_question_responses"
"""
input symposium_review_question_responses_min_order_by {
  fe_epoch: order_by
  symposium_review_id: order_by
  symposium_review_question_id: order_by
  symposium_review_question_response_id: order_by
  time_stamp: order_by
  value: order_by
  word_count: order_by
}

"""
response of any mutation on the table "symposium_review_question_responses"
"""
type symposium_review_question_responses_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [symposium_review_question_responses! ]! 
}

"""
on_conflict condition type for table "symposium_review_question_responses"
"""
input symposium_review_question_responses_on_conflict {
  constraint: symposium_review_question_responses_constraint! 
  update_columns: [symposium_review_question_responses_update_column! ]! 
  where: symposium_review_question_responses_bool_exp
}

"""
Ordering options when selecting data from "symposium_review_question_responses".
"""
input symposium_review_question_responses_order_by {
  fe_epoch: order_by
  review: symposium_reviews_order_by
  symposium_review_id: order_by
  symposium_review_question: symposium_review_questions_order_by
  symposium_review_question_id: order_by
  symposium_review_question_response_id: order_by
  time_stamp: order_by
  value: order_by
  word_count: order_by
}

"""
primary key columns input for table: symposium_review_question_responses
"""
input symposium_review_question_responses_pk_columns_input {
  symposium_review_question_response_id: Int! 
}

"""
select columns of table "symposium_review_question_responses"
"""
enum symposium_review_question_responses_select_column {
  """column name"""
fe_epoch
  """column name"""
symposium_review_id
  """column name"""
symposium_review_question_id
  """column name"""
symposium_review_question_response_id
  """column name"""
time_stamp
  """column name"""
value
  """column name"""
word_count
}

"""
input type for updating data in table "symposium_review_question_responses"
"""
input symposium_review_question_responses_set_input {
  fe_epoch: bigint
  symposium_review_id: Int
  symposium_review_question_id: Int
  symposium_review_question_response_id: Int
  time_stamp: bigint
  value: String
  word_count: Int
}

"""aggregate stddev on columns"""
type symposium_review_question_responses_stddev_fields {
   fe_epoch: Float
   symposium_review_id: Float
   symposium_review_question_id: Float
   symposium_review_question_response_id: Float
   time_stamp: Float
   word_count: Float
}

"""
order by stddev() on columns of table "symposium_review_question_responses"
"""
input symposium_review_question_responses_stddev_order_by {
  fe_epoch: order_by
  symposium_review_id: order_by
  symposium_review_question_id: order_by
  symposium_review_question_response_id: order_by
  time_stamp: order_by
  word_count: order_by
}

"""aggregate stddev_pop on columns"""
type symposium_review_question_responses_stddev_pop_fields {
   fe_epoch: Float
   symposium_review_id: Float
   symposium_review_question_id: Float
   symposium_review_question_response_id: Float
   time_stamp: Float
   word_count: Float
}

"""
order by stddev_pop() on columns of table "symposium_review_question_responses"
"""
input symposium_review_question_responses_stddev_pop_order_by {
  fe_epoch: order_by
  symposium_review_id: order_by
  symposium_review_question_id: order_by
  symposium_review_question_response_id: order_by
  time_stamp: order_by
  word_count: order_by
}

"""aggregate stddev_samp on columns"""
type symposium_review_question_responses_stddev_samp_fields {
   fe_epoch: Float
   symposium_review_id: Float
   symposium_review_question_id: Float
   symposium_review_question_response_id: Float
   time_stamp: Float
   word_count: Float
}

"""
order by stddev_samp() on columns of table "symposium_review_question_responses"
"""
input symposium_review_question_responses_stddev_samp_order_by {
  fe_epoch: order_by
  symposium_review_id: order_by
  symposium_review_question_id: order_by
  symposium_review_question_response_id: order_by
  time_stamp: order_by
  word_count: order_by
}

"""
Streaming cursor of the table "symposium_review_question_responses"
"""
input symposium_review_question_responses_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: symposium_review_question_responses_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input symposium_review_question_responses_stream_cursor_value_input {
  fe_epoch: bigint
  symposium_review_id: Int
  symposium_review_question_id: Int
  symposium_review_question_response_id: Int
  time_stamp: bigint
  value: String
  word_count: Int
}

"""aggregate sum on columns"""
type symposium_review_question_responses_sum_fields {
   fe_epoch: bigint
   symposium_review_id: Int
   symposium_review_question_id: Int
   symposium_review_question_response_id: Int
   time_stamp: bigint
   word_count: Int
}

"""
order by sum() on columns of table "symposium_review_question_responses"
"""
input symposium_review_question_responses_sum_order_by {
  fe_epoch: order_by
  symposium_review_id: order_by
  symposium_review_question_id: order_by
  symposium_review_question_response_id: order_by
  time_stamp: order_by
  word_count: order_by
}

"""
update columns of table "symposium_review_question_responses"
"""
enum symposium_review_question_responses_update_column {
  """column name"""
fe_epoch
  """column name"""
symposium_review_id
  """column name"""
symposium_review_question_id
  """column name"""
symposium_review_question_response_id
  """column name"""
time_stamp
  """column name"""
value
  """column name"""
word_count
}

input symposium_review_question_responses_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: symposium_review_question_responses_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: symposium_review_question_responses_set_input
  where: symposium_review_question_responses_bool_exp! 
}

"""aggregate var_pop on columns"""
type symposium_review_question_responses_var_pop_fields {
   fe_epoch: Float
   symposium_review_id: Float
   symposium_review_question_id: Float
   symposium_review_question_response_id: Float
   time_stamp: Float
   word_count: Float
}

"""
order by var_pop() on columns of table "symposium_review_question_responses"
"""
input symposium_review_question_responses_var_pop_order_by {
  fe_epoch: order_by
  symposium_review_id: order_by
  symposium_review_question_id: order_by
  symposium_review_question_response_id: order_by
  time_stamp: order_by
  word_count: order_by
}

"""aggregate var_samp on columns"""
type symposium_review_question_responses_var_samp_fields {
   fe_epoch: Float
   symposium_review_id: Float
   symposium_review_question_id: Float
   symposium_review_question_response_id: Float
   time_stamp: Float
   word_count: Float
}

"""
order by var_samp() on columns of table "symposium_review_question_responses"
"""
input symposium_review_question_responses_var_samp_order_by {
  fe_epoch: order_by
  symposium_review_id: order_by
  symposium_review_question_id: order_by
  symposium_review_question_response_id: order_by
  time_stamp: order_by
  word_count: order_by
}

"""aggregate variance on columns"""
type symposium_review_question_responses_variance_fields {
   fe_epoch: Float
   symposium_review_id: Float
   symposium_review_question_id: Float
   symposium_review_question_response_id: Float
   time_stamp: Float
   word_count: Float
}

"""
order by variance() on columns of table "symposium_review_question_responses"
"""
input symposium_review_question_responses_variance_order_by {
  fe_epoch: order_by
  symposium_review_id: order_by
  symposium_review_question_id: order_by
  symposium_review_question_response_id: order_by
  time_stamp: order_by
  word_count: order_by
}

"""
columns and relationships of "symposium_review_questions"
"""
type symposium_review_questions {
   answer_required: Boolean! 
   data_type: symposium_review_question_data_types! 
   displayed_text_options: _text
   event_id: Int! 
   is_acceptance_type: Boolean! 
   is_comment: Boolean! 
   is_conflict: Boolean! 
   is_grade: Boolean! 
   options: _text
   order_of_questions: Int
   question_description: String
   question_name: String
   row_count: Int
   show_submitter: Boolean! 
   symposium_review_question_id: Int! 
   time_stamp: bigint
   word_limit: smallint
}

"""
aggregated selection of "symposium_review_questions"
"""
type symposium_review_questions_aggregate {
   aggregate: symposium_review_questions_aggregate_fields
   nodes: [symposium_review_questions! ]! 
}

"""
aggregate fields of "symposium_review_questions"
"""
type symposium_review_questions_aggregate_fields {
   avg: symposium_review_questions_avg_fields
   count(columns: [symposium_review_questions_select_column! ], distinct: Boolean): Int! 
   max: symposium_review_questions_max_fields
   min: symposium_review_questions_min_fields
   stddev: symposium_review_questions_stddev_fields
   stddev_pop: symposium_review_questions_stddev_pop_fields
   stddev_samp: symposium_review_questions_stddev_samp_fields
   sum: symposium_review_questions_sum_fields
   var_pop: symposium_review_questions_var_pop_fields
   var_samp: symposium_review_questions_var_samp_fields
   variance: symposium_review_questions_variance_fields
}

"""aggregate avg on columns"""
type symposium_review_questions_avg_fields {
   event_id: Float
   order_of_questions: Float
   row_count: Float
   symposium_review_question_id: Float
   time_stamp: Float
   word_limit: Float
}

"""
Boolean expression to filter rows from the table "symposium_review_questions". All fields are combined with a logical 'AND'.
"""
input symposium_review_questions_bool_exp {
  _and: [symposium_review_questions_bool_exp! ]
  _not: symposium_review_questions_bool_exp
  _or: [symposium_review_questions_bool_exp! ]
  answer_required: Boolean_comparison_exp
  data_type: symposium_review_question_data_types_comparison_exp
  displayed_text_options: _text_comparison_exp
  event_id: Int_comparison_exp
  is_acceptance_type: Boolean_comparison_exp
  is_comment: Boolean_comparison_exp
  is_conflict: Boolean_comparison_exp
  is_grade: Boolean_comparison_exp
  options: _text_comparison_exp
  order_of_questions: Int_comparison_exp
  question_description: String_comparison_exp
  question_name: String_comparison_exp
  row_count: Int_comparison_exp
  show_submitter: Boolean_comparison_exp
  symposium_review_question_id: Int_comparison_exp
  time_stamp: bigint_comparison_exp
  word_limit: smallint_comparison_exp
}

"""
unique or primary key constraints on table "symposium_review_questions"
"""
enum symposium_review_questions_constraint {
  """
  unique or primary key constraint on columns "symposium_review_question_id"
  """
symposium_review_questions_pkey
}

"""
input type for incrementing numeric columns in table "symposium_review_questions"
"""
input symposium_review_questions_inc_input {
  event_id: Int
  order_of_questions: Int
  row_count: Int
  symposium_review_question_id: Int
  time_stamp: bigint
  word_limit: smallint
}

"""
input type for inserting data into table "symposium_review_questions"
"""
input symposium_review_questions_insert_input {
  answer_required: Boolean! 
  data_type: symposium_review_question_data_types! 
  displayed_text_options: _text
  event_id: Int! 
  is_acceptance_type: Boolean! 
  is_comment: Boolean! 
  is_conflict: Boolean! 
  is_grade: Boolean! 
  options: _text
  order_of_questions: Int
  question_description: String
  question_name: String
  row_count: Int
  show_submitter: Boolean! 
  symposium_review_question_id: Int! 
  time_stamp: bigint! 
  word_limit: smallint
}

"""aggregate max on columns"""
type symposium_review_questions_max_fields {
   data_type: symposium_review_question_data_types
   event_id: Int
   order_of_questions: Int
   question_description: String
   question_name: String
   row_count: Int
   symposium_review_question_id: Int
   time_stamp: bigint
   word_limit: smallint
}

"""aggregate min on columns"""
type symposium_review_questions_min_fields {
   data_type: symposium_review_question_data_types
   event_id: Int
   order_of_questions: Int
   question_description: String
   question_name: String
   row_count: Int
   symposium_review_question_id: Int
   time_stamp: bigint
   word_limit: smallint
}

"""
response of any mutation on the table "symposium_review_questions"
"""
type symposium_review_questions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [symposium_review_questions! ]! 
}

"""
input type for inserting object relation for remote table "symposium_review_questions"
"""
input symposium_review_questions_obj_rel_insert_input {
  data: symposium_review_questions_insert_input! 
  """upsert condition"""
on_conflict: symposium_review_questions_on_conflict
}

"""
on_conflict condition type for table "symposium_review_questions"
"""
input symposium_review_questions_on_conflict {
  constraint: symposium_review_questions_constraint! 
  update_columns: [symposium_review_questions_update_column! ]! 
  where: symposium_review_questions_bool_exp
}

"""
Ordering options when selecting data from "symposium_review_questions".
"""
input symposium_review_questions_order_by {
  answer_required: order_by
  data_type: order_by
  displayed_text_options: order_by
  event_id: order_by
  is_acceptance_type: order_by
  is_comment: order_by
  is_conflict: order_by
  is_grade: order_by
  options: order_by
  order_of_questions: order_by
  question_description: order_by
  question_name: order_by
  row_count: order_by
  show_submitter: order_by
  symposium_review_question_id: order_by
  time_stamp: order_by
  word_limit: order_by
}

"""primary key columns input for table: symposium_review_questions"""
input symposium_review_questions_pk_columns_input {
  symposium_review_question_id: Int! 
}

"""
select columns of table "symposium_review_questions"
"""
enum symposium_review_questions_select_column {
  """column name"""
answer_required
  """column name"""
data_type
  """column name"""
displayed_text_options
  """column name"""
event_id
  """column name"""
is_acceptance_type
  """column name"""
is_comment
  """column name"""
is_conflict
  """column name"""
is_grade
  """column name"""
options
  """column name"""
order_of_questions
  """column name"""
question_description
  """column name"""
question_name
  """column name"""
row_count
  """column name"""
show_submitter
  """column name"""
symposium_review_question_id
  """column name"""
time_stamp
  """column name"""
word_limit
}

"""
input type for updating data in table "symposium_review_questions"
"""
input symposium_review_questions_set_input {
  answer_required: Boolean
  data_type: symposium_review_question_data_types
  displayed_text_options: _text
  event_id: Int
  is_acceptance_type: Boolean
  is_comment: Boolean
  is_conflict: Boolean
  is_grade: Boolean
  options: _text
  order_of_questions: Int
  question_description: String
  question_name: String
  row_count: Int
  show_submitter: Boolean
  symposium_review_question_id: Int
  time_stamp: bigint
  word_limit: smallint
}

"""aggregate stddev on columns"""
type symposium_review_questions_stddev_fields {
   event_id: Float
   order_of_questions: Float
   row_count: Float
   symposium_review_question_id: Float
   time_stamp: Float
   word_limit: Float
}

"""aggregate stddev_pop on columns"""
type symposium_review_questions_stddev_pop_fields {
   event_id: Float
   order_of_questions: Float
   row_count: Float
   symposium_review_question_id: Float
   time_stamp: Float
   word_limit: Float
}

"""aggregate stddev_samp on columns"""
type symposium_review_questions_stddev_samp_fields {
   event_id: Float
   order_of_questions: Float
   row_count: Float
   symposium_review_question_id: Float
   time_stamp: Float
   word_limit: Float
}

"""
Streaming cursor of the table "symposium_review_questions"
"""
input symposium_review_questions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: symposium_review_questions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input symposium_review_questions_stream_cursor_value_input {
  answer_required: Boolean
  data_type: symposium_review_question_data_types
  displayed_text_options: _text
  event_id: Int
  is_acceptance_type: Boolean
  is_comment: Boolean
  is_conflict: Boolean
  is_grade: Boolean
  options: _text
  order_of_questions: Int
  question_description: String
  question_name: String
  row_count: Int
  show_submitter: Boolean
  symposium_review_question_id: Int
  time_stamp: bigint
  word_limit: smallint
}

"""aggregate sum on columns"""
type symposium_review_questions_sum_fields {
   event_id: Int
   order_of_questions: Int
   row_count: Int
   symposium_review_question_id: Int
   time_stamp: bigint
   word_limit: smallint
}

"""
update columns of table "symposium_review_questions"
"""
enum symposium_review_questions_update_column {
  """column name"""
answer_required
  """column name"""
data_type
  """column name"""
displayed_text_options
  """column name"""
event_id
  """column name"""
is_acceptance_type
  """column name"""
is_comment
  """column name"""
is_conflict
  """column name"""
is_grade
  """column name"""
options
  """column name"""
order_of_questions
  """column name"""
question_description
  """column name"""
question_name
  """column name"""
row_count
  """column name"""
show_submitter
  """column name"""
symposium_review_question_id
  """column name"""
time_stamp
  """column name"""
word_limit
}

input symposium_review_questions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: symposium_review_questions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: symposium_review_questions_set_input
  where: symposium_review_questions_bool_exp! 
}

"""aggregate var_pop on columns"""
type symposium_review_questions_var_pop_fields {
   event_id: Float
   order_of_questions: Float
   row_count: Float
   symposium_review_question_id: Float
   time_stamp: Float
   word_limit: Float
}

"""aggregate var_samp on columns"""
type symposium_review_questions_var_samp_fields {
   event_id: Float
   order_of_questions: Float
   row_count: Float
   symposium_review_question_id: Float
   time_stamp: Float
   word_limit: Float
}

"""aggregate variance on columns"""
type symposium_review_questions_variance_fields {
   event_id: Float
   order_of_questions: Float
   row_count: Float
   symposium_review_question_id: Float
   time_stamp: Float
   word_limit: Float
}

"""
columns and relationships of "symposium_reviews"
"""
type symposium_reviews {
   assigned: Boolean! 
   event_id: Int! 
  """An array relationship"""
 responses("""distinct select on columns"""
distinct_on: [symposium_review_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_review_question_responses_order_by! ], """filter the rows returned"""
where: symposium_review_question_responses_bool_exp): [symposium_review_question_responses! ]! 
  """An aggregate relationship"""
 responses_aggregate("""distinct select on columns"""
distinct_on: [symposium_review_question_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_review_question_responses_order_by! ], """filter the rows returned"""
where: symposium_review_question_responses_bool_exp): symposium_review_question_responses_aggregate! 
   reviewer_user_id: Int! 
   serial_number: bigint
  """An object relationship"""
 symposium: symposia! 
   symposium_id: Int! 
   symposium_review_id: Int! 
   time_stamp: bigint! 
}

"""
aggregated selection of "symposium_reviews"
"""
type symposium_reviews_aggregate {
   aggregate: symposium_reviews_aggregate_fields
   nodes: [symposium_reviews! ]! 
}

input symposium_reviews_aggregate_bool_exp {
  bool_and: symposium_reviews_aggregate_bool_exp_bool_and
  bool_or: symposium_reviews_aggregate_bool_exp_bool_or
  count: symposium_reviews_aggregate_bool_exp_count
}

input symposium_reviews_aggregate_bool_exp_bool_and {
  arguments: symposium_reviews_select_column_symposium_reviews_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: symposium_reviews_bool_exp
  predicate: Boolean_comparison_exp! 
}

input symposium_reviews_aggregate_bool_exp_bool_or {
  arguments: symposium_reviews_select_column_symposium_reviews_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: symposium_reviews_bool_exp
  predicate: Boolean_comparison_exp! 
}

input symposium_reviews_aggregate_bool_exp_count {
  arguments: [symposium_reviews_select_column! ]
  distinct: Boolean
  filter: symposium_reviews_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "symposium_reviews"
"""
type symposium_reviews_aggregate_fields {
   avg: symposium_reviews_avg_fields
   count(columns: [symposium_reviews_select_column! ], distinct: Boolean): Int! 
   max: symposium_reviews_max_fields
   min: symposium_reviews_min_fields
   stddev: symposium_reviews_stddev_fields
   stddev_pop: symposium_reviews_stddev_pop_fields
   stddev_samp: symposium_reviews_stddev_samp_fields
   sum: symposium_reviews_sum_fields
   var_pop: symposium_reviews_var_pop_fields
   var_samp: symposium_reviews_var_samp_fields
   variance: symposium_reviews_variance_fields
}

"""
order by aggregate values of table "symposium_reviews"
"""
input symposium_reviews_aggregate_order_by {
  avg: symposium_reviews_avg_order_by
  count: order_by
  max: symposium_reviews_max_order_by
  min: symposium_reviews_min_order_by
  stddev: symposium_reviews_stddev_order_by
  stddev_pop: symposium_reviews_stddev_pop_order_by
  stddev_samp: symposium_reviews_stddev_samp_order_by
  sum: symposium_reviews_sum_order_by
  var_pop: symposium_reviews_var_pop_order_by
  var_samp: symposium_reviews_var_samp_order_by
  variance: symposium_reviews_variance_order_by
}

"""
input type for inserting array relation for remote table "symposium_reviews"
"""
input symposium_reviews_arr_rel_insert_input {
  data: [symposium_reviews_insert_input! ]! 
  """upsert condition"""
on_conflict: symposium_reviews_on_conflict
}

"""aggregate avg on columns"""
type symposium_reviews_avg_fields {
   event_id: Float
   reviewer_user_id: Float
   serial_number: Float
   symposium_id: Float
   symposium_review_id: Float
   time_stamp: Float
}

"""
order by avg() on columns of table "symposium_reviews"
"""
input symposium_reviews_avg_order_by {
  event_id: order_by
  reviewer_user_id: order_by
  serial_number: order_by
  symposium_id: order_by
  symposium_review_id: order_by
  time_stamp: order_by
}

"""
Boolean expression to filter rows from the table "symposium_reviews". All fields are combined with a logical 'AND'.
"""
input symposium_reviews_bool_exp {
  _and: [symposium_reviews_bool_exp! ]
  _not: symposium_reviews_bool_exp
  _or: [symposium_reviews_bool_exp! ]
  assigned: Boolean_comparison_exp
  event_id: Int_comparison_exp
  responses: symposium_review_question_responses_bool_exp
  responses_aggregate: symposium_review_question_responses_aggregate_bool_exp
  reviewer_user_id: Int_comparison_exp
  serial_number: bigint_comparison_exp
  symposium: symposia_bool_exp
  symposium_id: Int_comparison_exp
  symposium_review_id: Int_comparison_exp
  time_stamp: bigint_comparison_exp
}

"""
unique or primary key constraints on table "symposium_reviews"
"""
enum symposium_reviews_constraint {
  """
  unique or primary key constraint on columns "symposium_review_id"
  """
symposium_reviews_pkey
}

"""
input type for incrementing numeric columns in table "symposium_reviews"
"""
input symposium_reviews_inc_input {
  event_id: Int
  reviewer_user_id: Int
  serial_number: bigint
  symposium_id: Int
  symposium_review_id: Int
  time_stamp: bigint
}

"""
input type for inserting data into table "symposium_reviews"
"""
input symposium_reviews_insert_input {
  assigned: Boolean! 
  event_id: Int! 
  responses: symposium_review_question_responses_arr_rel_insert_input
  reviewer_user_id: Int! 
  serial_number: bigint
  symposium: symposia_obj_rel_insert_input
  symposium_id: Int! 
  symposium_review_id: Int! 
  time_stamp: bigint! 
}

"""aggregate max on columns"""
type symposium_reviews_max_fields {
   event_id: Int
   reviewer_user_id: Int
   serial_number: bigint
   symposium_id: Int
   symposium_review_id: Int
   time_stamp: bigint
}

"""
order by max() on columns of table "symposium_reviews"
"""
input symposium_reviews_max_order_by {
  event_id: order_by
  reviewer_user_id: order_by
  serial_number: order_by
  symposium_id: order_by
  symposium_review_id: order_by
  time_stamp: order_by
}

"""aggregate min on columns"""
type symposium_reviews_min_fields {
   event_id: Int
   reviewer_user_id: Int
   serial_number: bigint
   symposium_id: Int
   symposium_review_id: Int
   time_stamp: bigint
}

"""
order by min() on columns of table "symposium_reviews"
"""
input symposium_reviews_min_order_by {
  event_id: order_by
  reviewer_user_id: order_by
  serial_number: order_by
  symposium_id: order_by
  symposium_review_id: order_by
  time_stamp: order_by
}

"""
response of any mutation on the table "symposium_reviews"
"""
type symposium_reviews_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [symposium_reviews! ]! 
}

"""
input type for inserting object relation for remote table "symposium_reviews"
"""
input symposium_reviews_obj_rel_insert_input {
  data: symposium_reviews_insert_input! 
  """upsert condition"""
on_conflict: symposium_reviews_on_conflict
}

"""
on_conflict condition type for table "symposium_reviews"
"""
input symposium_reviews_on_conflict {
  constraint: symposium_reviews_constraint! 
  update_columns: [symposium_reviews_update_column! ]! 
  where: symposium_reviews_bool_exp
}

"""Ordering options when selecting data from "symposium_reviews"."""
input symposium_reviews_order_by {
  assigned: order_by
  event_id: order_by
  responses_aggregate: symposium_review_question_responses_aggregate_order_by
  reviewer_user_id: order_by
  serial_number: order_by
  symposium: symposia_order_by
  symposium_id: order_by
  symposium_review_id: order_by
  time_stamp: order_by
}

"""primary key columns input for table: symposium_reviews"""
input symposium_reviews_pk_columns_input {
  symposium_review_id: Int! 
}

"""
select columns of table "symposium_reviews"
"""
enum symposium_reviews_select_column {
  """column name"""
assigned
  """column name"""
event_id
  """column name"""
reviewer_user_id
  """column name"""
serial_number
  """column name"""
symposium_id
  """column name"""
symposium_review_id
  """column name"""
time_stamp
}

"""
select "symposium_reviews_aggregate_bool_exp_bool_and_arguments_columns" columns of table "symposium_reviews"
"""
enum symposium_reviews_select_column_symposium_reviews_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
assigned
}

"""
select "symposium_reviews_aggregate_bool_exp_bool_or_arguments_columns" columns of table "symposium_reviews"
"""
enum symposium_reviews_select_column_symposium_reviews_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
assigned
}

"""
input type for updating data in table "symposium_reviews"
"""
input symposium_reviews_set_input {
  assigned: Boolean
  event_id: Int
  reviewer_user_id: Int
  serial_number: bigint
  symposium_id: Int
  symposium_review_id: Int
  time_stamp: bigint
}

"""aggregate stddev on columns"""
type symposium_reviews_stddev_fields {
   event_id: Float
   reviewer_user_id: Float
   serial_number: Float
   symposium_id: Float
   symposium_review_id: Float
   time_stamp: Float
}

"""
order by stddev() on columns of table "symposium_reviews"
"""
input symposium_reviews_stddev_order_by {
  event_id: order_by
  reviewer_user_id: order_by
  serial_number: order_by
  symposium_id: order_by
  symposium_review_id: order_by
  time_stamp: order_by
}

"""aggregate stddev_pop on columns"""
type symposium_reviews_stddev_pop_fields {
   event_id: Float
   reviewer_user_id: Float
   serial_number: Float
   symposium_id: Float
   symposium_review_id: Float
   time_stamp: Float
}

"""
order by stddev_pop() on columns of table "symposium_reviews"
"""
input symposium_reviews_stddev_pop_order_by {
  event_id: order_by
  reviewer_user_id: order_by
  serial_number: order_by
  symposium_id: order_by
  symposium_review_id: order_by
  time_stamp: order_by
}

"""aggregate stddev_samp on columns"""
type symposium_reviews_stddev_samp_fields {
   event_id: Float
   reviewer_user_id: Float
   serial_number: Float
   symposium_id: Float
   symposium_review_id: Float
   time_stamp: Float
}

"""
order by stddev_samp() on columns of table "symposium_reviews"
"""
input symposium_reviews_stddev_samp_order_by {
  event_id: order_by
  reviewer_user_id: order_by
  serial_number: order_by
  symposium_id: order_by
  symposium_review_id: order_by
  time_stamp: order_by
}

"""
Streaming cursor of the table "symposium_reviews"
"""
input symposium_reviews_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: symposium_reviews_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input symposium_reviews_stream_cursor_value_input {
  assigned: Boolean
  event_id: Int
  reviewer_user_id: Int
  serial_number: bigint
  symposium_id: Int
  symposium_review_id: Int
  time_stamp: bigint
}

"""aggregate sum on columns"""
type symposium_reviews_sum_fields {
   event_id: Int
   reviewer_user_id: Int
   serial_number: bigint
   symposium_id: Int
   symposium_review_id: Int
   time_stamp: bigint
}

"""
order by sum() on columns of table "symposium_reviews"
"""
input symposium_reviews_sum_order_by {
  event_id: order_by
  reviewer_user_id: order_by
  serial_number: order_by
  symposium_id: order_by
  symposium_review_id: order_by
  time_stamp: order_by
}

"""
update columns of table "symposium_reviews"
"""
enum symposium_reviews_update_column {
  """column name"""
assigned
  """column name"""
event_id
  """column name"""
reviewer_user_id
  """column name"""
serial_number
  """column name"""
symposium_id
  """column name"""
symposium_review_id
  """column name"""
time_stamp
}

input symposium_reviews_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: symposium_reviews_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: symposium_reviews_set_input
  where: symposium_reviews_bool_exp! 
}

"""aggregate var_pop on columns"""
type symposium_reviews_var_pop_fields {
   event_id: Float
   reviewer_user_id: Float
   serial_number: Float
   symposium_id: Float
   symposium_review_id: Float
   time_stamp: Float
}

"""
order by var_pop() on columns of table "symposium_reviews"
"""
input symposium_reviews_var_pop_order_by {
  event_id: order_by
  reviewer_user_id: order_by
  serial_number: order_by
  symposium_id: order_by
  symposium_review_id: order_by
  time_stamp: order_by
}

"""aggregate var_samp on columns"""
type symposium_reviews_var_samp_fields {
   event_id: Float
   reviewer_user_id: Float
   serial_number: Float
   symposium_id: Float
   symposium_review_id: Float
   time_stamp: Float
}

"""
order by var_samp() on columns of table "symposium_reviews"
"""
input symposium_reviews_var_samp_order_by {
  event_id: order_by
  reviewer_user_id: order_by
  serial_number: order_by
  symposium_id: order_by
  symposium_review_id: order_by
  time_stamp: order_by
}

"""aggregate variance on columns"""
type symposium_reviews_variance_fields {
   event_id: Float
   reviewer_user_id: Float
   serial_number: Float
   symposium_id: Float
   symposium_review_id: Float
   time_stamp: Float
}

"""
order by variance() on columns of table "symposium_reviews"
"""
input symposium_reviews_variance_order_by {
  event_id: order_by
  reviewer_user_id: order_by
  serial_number: order_by
  symposium_id: order_by
  symposium_review_id: order_by
  time_stamp: order_by
}

scalar symposium_role 

"""
Boolean expression to compare columns of type "symposium_role". All fields are combined with logical 'AND'.
"""
input symposium_role_comparison_exp {
  _eq: symposium_role
  _gt: symposium_role
  _gte: symposium_role
  _in: [symposium_role! ]
  _is_null: Boolean
  _lt: symposium_role
  _lte: symposium_role
  _neq: symposium_role
  _nin: [symposium_role! ]
}

"""
columns and relationships of "symposium_submission_session_times"
"""
type symposium_submission_session_times {
   end_time: time
   event_id: Int! 
   id: Int! 
  """An object relationship"""
 program_session: program_sessions! 
   program_session_id: Int! 
   start_time: time
  """An object relationship"""
 submission: submissions! 
   submission_id: Int! 
  """An object relationship"""
 symposium: symposia! 
   symposium_id: Int! 
}

"""
aggregated selection of "symposium_submission_session_times"
"""
type symposium_submission_session_times_aggregate {
   aggregate: symposium_submission_session_times_aggregate_fields
   nodes: [symposium_submission_session_times! ]! 
}

input symposium_submission_session_times_aggregate_bool_exp {
  count: symposium_submission_session_times_aggregate_bool_exp_count
}

input symposium_submission_session_times_aggregate_bool_exp_count {
  arguments: [symposium_submission_session_times_select_column! ]
  distinct: Boolean
  filter: symposium_submission_session_times_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "symposium_submission_session_times"
"""
type symposium_submission_session_times_aggregate_fields {
   avg: symposium_submission_session_times_avg_fields
   count(columns: [symposium_submission_session_times_select_column! ], distinct: Boolean): Int! 
   max: symposium_submission_session_times_max_fields
   min: symposium_submission_session_times_min_fields
   stddev: symposium_submission_session_times_stddev_fields
   stddev_pop: symposium_submission_session_times_stddev_pop_fields
   stddev_samp: symposium_submission_session_times_stddev_samp_fields
   sum: symposium_submission_session_times_sum_fields
   var_pop: symposium_submission_session_times_var_pop_fields
   var_samp: symposium_submission_session_times_var_samp_fields
   variance: symposium_submission_session_times_variance_fields
}

"""
order by aggregate values of table "symposium_submission_session_times"
"""
input symposium_submission_session_times_aggregate_order_by {
  avg: symposium_submission_session_times_avg_order_by
  count: order_by
  max: symposium_submission_session_times_max_order_by
  min: symposium_submission_session_times_min_order_by
  stddev: symposium_submission_session_times_stddev_order_by
  stddev_pop: symposium_submission_session_times_stddev_pop_order_by
  stddev_samp: symposium_submission_session_times_stddev_samp_order_by
  sum: symposium_submission_session_times_sum_order_by
  var_pop: symposium_submission_session_times_var_pop_order_by
  var_samp: symposium_submission_session_times_var_samp_order_by
  variance: symposium_submission_session_times_variance_order_by
}

"""
input type for inserting array relation for remote table "symposium_submission_session_times"
"""
input symposium_submission_session_times_arr_rel_insert_input {
  data: [symposium_submission_session_times_insert_input! ]! 
  """upsert condition"""
on_conflict: symposium_submission_session_times_on_conflict
}

"""aggregate avg on columns"""
type symposium_submission_session_times_avg_fields {
   event_id: Float
   id: Float
   program_session_id: Float
   submission_id: Float
   symposium_id: Float
}

"""
order by avg() on columns of table "symposium_submission_session_times"
"""
input symposium_submission_session_times_avg_order_by {
  event_id: order_by
  id: order_by
  program_session_id: order_by
  submission_id: order_by
  symposium_id: order_by
}

"""
Boolean expression to filter rows from the table "symposium_submission_session_times". All fields are combined with a logical 'AND'.
"""
input symposium_submission_session_times_bool_exp {
  _and: [symposium_submission_session_times_bool_exp! ]
  _not: symposium_submission_session_times_bool_exp
  _or: [symposium_submission_session_times_bool_exp! ]
  end_time: time_comparison_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  program_session: program_sessions_bool_exp
  program_session_id: Int_comparison_exp
  start_time: time_comparison_exp
  submission: submissions_bool_exp
  submission_id: Int_comparison_exp
  symposium: symposia_bool_exp
  symposium_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "symposium_submission_session_times"
"""
enum symposium_submission_session_times_constraint {
  """
  unique or primary key constraint on columns "submission_id", "program_session_id", "symposium_id"
  """
symposium_submission_session__program_session_id_symposium__key
  """
  unique or primary key constraint on columns "id"
  """
symposium_submission_session_times_pkey
}

"""
input type for incrementing numeric columns in table "symposium_submission_session_times"
"""
input symposium_submission_session_times_inc_input {
  event_id: Int
  id: Int
  program_session_id: Int
  submission_id: Int
  symposium_id: Int
}

"""
input type for inserting data into table "symposium_submission_session_times"
"""
input symposium_submission_session_times_insert_input {
  end_time: time
  event_id: Int! 
  id: Int! 
  program_session: program_sessions_obj_rel_insert_input
  program_session_id: Int! 
  start_time: time
  submission: submissions_obj_rel_insert_input
  submission_id: Int! 
  symposium: symposia_obj_rel_insert_input
  symposium_id: Int! 
}

"""aggregate max on columns"""
type symposium_submission_session_times_max_fields {
   event_id: Int
   id: Int
   program_session_id: Int
   submission_id: Int
   symposium_id: Int
}

"""
order by max() on columns of table "symposium_submission_session_times"
"""
input symposium_submission_session_times_max_order_by {
  event_id: order_by
  id: order_by
  program_session_id: order_by
  submission_id: order_by
  symposium_id: order_by
}

"""aggregate min on columns"""
type symposium_submission_session_times_min_fields {
   event_id: Int
   id: Int
   program_session_id: Int
   submission_id: Int
   symposium_id: Int
}

"""
order by min() on columns of table "symposium_submission_session_times"
"""
input symposium_submission_session_times_min_order_by {
  event_id: order_by
  id: order_by
  program_session_id: order_by
  submission_id: order_by
  symposium_id: order_by
}

"""
response of any mutation on the table "symposium_submission_session_times"
"""
type symposium_submission_session_times_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [symposium_submission_session_times! ]! 
}

"""
on_conflict condition type for table "symposium_submission_session_times"
"""
input symposium_submission_session_times_on_conflict {
  constraint: symposium_submission_session_times_constraint! 
  update_columns: [symposium_submission_session_times_update_column! ]! 
  where: symposium_submission_session_times_bool_exp
}

"""
Ordering options when selecting data from "symposium_submission_session_times".
"""
input symposium_submission_session_times_order_by {
  end_time: order_by
  event_id: order_by
  id: order_by
  program_session: program_sessions_order_by
  program_session_id: order_by
  start_time: order_by
  submission: submissions_order_by
  submission_id: order_by
  symposium: symposia_order_by
  symposium_id: order_by
}

"""
primary key columns input for table: symposium_submission_session_times
"""
input symposium_submission_session_times_pk_columns_input {
  id: Int! 
}

"""
select columns of table "symposium_submission_session_times"
"""
enum symposium_submission_session_times_select_column {
  """column name"""
end_time
  """column name"""
event_id
  """column name"""
id
  """column name"""
program_session_id
  """column name"""
start_time
  """column name"""
submission_id
  """column name"""
symposium_id
}

"""
input type for updating data in table "symposium_submission_session_times"
"""
input symposium_submission_session_times_set_input {
  end_time: time
  event_id: Int
  id: Int
  program_session_id: Int
  start_time: time
  submission_id: Int
  symposium_id: Int
}

"""aggregate stddev on columns"""
type symposium_submission_session_times_stddev_fields {
   event_id: Float
   id: Float
   program_session_id: Float
   submission_id: Float
   symposium_id: Float
}

"""
order by stddev() on columns of table "symposium_submission_session_times"
"""
input symposium_submission_session_times_stddev_order_by {
  event_id: order_by
  id: order_by
  program_session_id: order_by
  submission_id: order_by
  symposium_id: order_by
}

"""aggregate stddev_pop on columns"""
type symposium_submission_session_times_stddev_pop_fields {
   event_id: Float
   id: Float
   program_session_id: Float
   submission_id: Float
   symposium_id: Float
}

"""
order by stddev_pop() on columns of table "symposium_submission_session_times"
"""
input symposium_submission_session_times_stddev_pop_order_by {
  event_id: order_by
  id: order_by
  program_session_id: order_by
  submission_id: order_by
  symposium_id: order_by
}

"""aggregate stddev_samp on columns"""
type symposium_submission_session_times_stddev_samp_fields {
   event_id: Float
   id: Float
   program_session_id: Float
   submission_id: Float
   symposium_id: Float
}

"""
order by stddev_samp() on columns of table "symposium_submission_session_times"
"""
input symposium_submission_session_times_stddev_samp_order_by {
  event_id: order_by
  id: order_by
  program_session_id: order_by
  submission_id: order_by
  symposium_id: order_by
}

"""
Streaming cursor of the table "symposium_submission_session_times"
"""
input symposium_submission_session_times_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: symposium_submission_session_times_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input symposium_submission_session_times_stream_cursor_value_input {
  end_time: time
  event_id: Int
  id: Int
  program_session_id: Int
  start_time: time
  submission_id: Int
  symposium_id: Int
}

"""aggregate sum on columns"""
type symposium_submission_session_times_sum_fields {
   event_id: Int
   id: Int
   program_session_id: Int
   submission_id: Int
   symposium_id: Int
}

"""
order by sum() on columns of table "symposium_submission_session_times"
"""
input symposium_submission_session_times_sum_order_by {
  event_id: order_by
  id: order_by
  program_session_id: order_by
  submission_id: order_by
  symposium_id: order_by
}

"""
update columns of table "symposium_submission_session_times"
"""
enum symposium_submission_session_times_update_column {
  """column name"""
end_time
  """column name"""
event_id
  """column name"""
id
  """column name"""
program_session_id
  """column name"""
start_time
  """column name"""
submission_id
  """column name"""
symposium_id
}

input symposium_submission_session_times_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: symposium_submission_session_times_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: symposium_submission_session_times_set_input
  where: symposium_submission_session_times_bool_exp! 
}

"""aggregate var_pop on columns"""
type symposium_submission_session_times_var_pop_fields {
   event_id: Float
   id: Float
   program_session_id: Float
   submission_id: Float
   symposium_id: Float
}

"""
order by var_pop() on columns of table "symposium_submission_session_times"
"""
input symposium_submission_session_times_var_pop_order_by {
  event_id: order_by
  id: order_by
  program_session_id: order_by
  submission_id: order_by
  symposium_id: order_by
}

"""aggregate var_samp on columns"""
type symposium_submission_session_times_var_samp_fields {
   event_id: Float
   id: Float
   program_session_id: Float
   submission_id: Float
   symposium_id: Float
}

"""
order by var_samp() on columns of table "symposium_submission_session_times"
"""
input symposium_submission_session_times_var_samp_order_by {
  event_id: order_by
  id: order_by
  program_session_id: order_by
  submission_id: order_by
  symposium_id: order_by
}

"""aggregate variance on columns"""
type symposium_submission_session_times_variance_fields {
   event_id: Float
   id: Float
   program_session_id: Float
   submission_id: Float
   symposium_id: Float
}

"""
order by variance() on columns of table "symposium_submission_session_times"
"""
input symposium_submission_session_times_variance_order_by {
  event_id: order_by
  id: order_by
  program_session_id: order_by
  submission_id: order_by
  symposium_id: order_by
}

"""
columns and relationships of "table_email_attachments"
"""
type table_email_attachments {
   created_at: timestamptz! 
   id: uuid! 
   name: String! 
  """An object relationship"""
 table_email_template: table_email_templates! 
   table_email_template_id: uuid! 
   url: String! 
}

"""
aggregated selection of "table_email_attachments"
"""
type table_email_attachments_aggregate {
   aggregate: table_email_attachments_aggregate_fields
   nodes: [table_email_attachments! ]! 
}

input table_email_attachments_aggregate_bool_exp {
  count: table_email_attachments_aggregate_bool_exp_count
}

input table_email_attachments_aggregate_bool_exp_count {
  arguments: [table_email_attachments_select_column! ]
  distinct: Boolean
  filter: table_email_attachments_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "table_email_attachments"
"""
type table_email_attachments_aggregate_fields {
   count(columns: [table_email_attachments_select_column! ], distinct: Boolean): Int! 
   max: table_email_attachments_max_fields
   min: table_email_attachments_min_fields
}

"""
order by aggregate values of table "table_email_attachments"
"""
input table_email_attachments_aggregate_order_by {
  count: order_by
  max: table_email_attachments_max_order_by
  min: table_email_attachments_min_order_by
}

"""
input type for inserting array relation for remote table "table_email_attachments"
"""
input table_email_attachments_arr_rel_insert_input {
  data: [table_email_attachments_insert_input! ]! 
  """upsert condition"""
on_conflict: table_email_attachments_on_conflict
}

"""
Boolean expression to filter rows from the table "table_email_attachments". All fields are combined with a logical 'AND'.
"""
input table_email_attachments_bool_exp {
  _and: [table_email_attachments_bool_exp! ]
  _not: table_email_attachments_bool_exp
  _or: [table_email_attachments_bool_exp! ]
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  name: String_comparison_exp
  table_email_template: table_email_templates_bool_exp
  table_email_template_id: uuid_comparison_exp
  url: String_comparison_exp
}

"""
unique or primary key constraints on table "table_email_attachments"
"""
enum table_email_attachments_constraint {
  """
  unique or primary key constraint on columns "id"
  """
table_email_attachments_pkey
}

"""
input type for inserting data into table "table_email_attachments"
"""
input table_email_attachments_insert_input {
  created_at: timestamptz! 
  id: uuid! 
  name: String! 
  table_email_template: table_email_templates_obj_rel_insert_input
  table_email_template_id: uuid! 
  url: String! 
}

"""aggregate max on columns"""
type table_email_attachments_max_fields {
   created_at: timestamptz
   id: uuid
   name: String
   table_email_template_id: uuid
   url: String
}

"""
order by max() on columns of table "table_email_attachments"
"""
input table_email_attachments_max_order_by {
  created_at: order_by
  id: order_by
  name: order_by
  table_email_template_id: order_by
  url: order_by
}

"""aggregate min on columns"""
type table_email_attachments_min_fields {
   created_at: timestamptz
   id: uuid
   name: String
   table_email_template_id: uuid
   url: String
}

"""
order by min() on columns of table "table_email_attachments"
"""
input table_email_attachments_min_order_by {
  created_at: order_by
  id: order_by
  name: order_by
  table_email_template_id: order_by
  url: order_by
}

"""
response of any mutation on the table "table_email_attachments"
"""
type table_email_attachments_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [table_email_attachments! ]! 
}

"""
on_conflict condition type for table "table_email_attachments"
"""
input table_email_attachments_on_conflict {
  constraint: table_email_attachments_constraint! 
  update_columns: [table_email_attachments_update_column! ]! 
  where: table_email_attachments_bool_exp
}

"""Ordering options when selecting data from "table_email_attachments"."""
input table_email_attachments_order_by {
  created_at: order_by
  id: order_by
  name: order_by
  table_email_template: table_email_templates_order_by
  table_email_template_id: order_by
  url: order_by
}

"""primary key columns input for table: table_email_attachments"""
input table_email_attachments_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "table_email_attachments"
"""
enum table_email_attachments_select_column {
  """column name"""
created_at
  """column name"""
id
  """column name"""
name
  """column name"""
table_email_template_id
  """column name"""
url
}

"""
input type for updating data in table "table_email_attachments"
"""
input table_email_attachments_set_input {
  created_at: timestamptz
  id: uuid
  name: String
  table_email_template_id: uuid
  url: String
}

"""
Streaming cursor of the table "table_email_attachments"
"""
input table_email_attachments_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: table_email_attachments_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input table_email_attachments_stream_cursor_value_input {
  created_at: timestamptz
  id: uuid
  name: String
  table_email_template_id: uuid
  url: String
}

"""
update columns of table "table_email_attachments"
"""
enum table_email_attachments_update_column {
  """column name"""
created_at
  """column name"""
id
  """column name"""
name
  """column name"""
table_email_template_id
  """column name"""
url
}

input table_email_attachments_updates {
  """sets the columns of the filtered rows to the given values"""
_set: table_email_attachments_set_input
  where: table_email_attachments_bool_exp! 
}

"""
columns and relationships of "table_email_filters"
"""
type table_email_filters {
   column_name: String! 
   id: uuid! 
   table_email_template_id: uuid! 
   value: String! 
}

"""
aggregated selection of "table_email_filters"
"""
type table_email_filters_aggregate {
   aggregate: table_email_filters_aggregate_fields
   nodes: [table_email_filters! ]! 
}

input table_email_filters_aggregate_bool_exp {
  count: table_email_filters_aggregate_bool_exp_count
}

input table_email_filters_aggregate_bool_exp_count {
  arguments: [table_email_filters_select_column! ]
  distinct: Boolean
  filter: table_email_filters_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "table_email_filters"
"""
type table_email_filters_aggregate_fields {
   count(columns: [table_email_filters_select_column! ], distinct: Boolean): Int! 
   max: table_email_filters_max_fields
   min: table_email_filters_min_fields
}

"""
order by aggregate values of table "table_email_filters"
"""
input table_email_filters_aggregate_order_by {
  count: order_by
  max: table_email_filters_max_order_by
  min: table_email_filters_min_order_by
}

"""
input type for inserting array relation for remote table "table_email_filters"
"""
input table_email_filters_arr_rel_insert_input {
  data: [table_email_filters_insert_input! ]! 
  """upsert condition"""
on_conflict: table_email_filters_on_conflict
}

"""
Boolean expression to filter rows from the table "table_email_filters". All fields are combined with a logical 'AND'.
"""
input table_email_filters_bool_exp {
  _and: [table_email_filters_bool_exp! ]
  _not: table_email_filters_bool_exp
  _or: [table_email_filters_bool_exp! ]
  column_name: String_comparison_exp
  id: uuid_comparison_exp
  table_email_template_id: uuid_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "table_email_filters"
"""
enum table_email_filters_constraint {
  """
  unique or primary key constraint on columns "id"
  """
table_email_filters_pkey
}

"""
input type for inserting data into table "table_email_filters"
"""
input table_email_filters_insert_input {
  column_name: String! 
  id: uuid! 
  table_email_template_id: uuid! 
  value: String! 
}

"""aggregate max on columns"""
type table_email_filters_max_fields {
   column_name: String
   id: uuid
   table_email_template_id: uuid
   value: String
}

"""
order by max() on columns of table "table_email_filters"
"""
input table_email_filters_max_order_by {
  column_name: order_by
  id: order_by
  table_email_template_id: order_by
  value: order_by
}

"""aggregate min on columns"""
type table_email_filters_min_fields {
   column_name: String
   id: uuid
   table_email_template_id: uuid
   value: String
}

"""
order by min() on columns of table "table_email_filters"
"""
input table_email_filters_min_order_by {
  column_name: order_by
  id: order_by
  table_email_template_id: order_by
  value: order_by
}

"""
response of any mutation on the table "table_email_filters"
"""
type table_email_filters_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [table_email_filters! ]! 
}

"""
on_conflict condition type for table "table_email_filters"
"""
input table_email_filters_on_conflict {
  constraint: table_email_filters_constraint! 
  update_columns: [table_email_filters_update_column! ]! 
  where: table_email_filters_bool_exp
}

"""Ordering options when selecting data from "table_email_filters"."""
input table_email_filters_order_by {
  column_name: order_by
  id: order_by
  table_email_template_id: order_by
  value: order_by
}

"""primary key columns input for table: table_email_filters"""
input table_email_filters_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "table_email_filters"
"""
enum table_email_filters_select_column {
  """column name"""
column_name
  """column name"""
id
  """column name"""
table_email_template_id
  """column name"""
value
}

"""
input type for updating data in table "table_email_filters"
"""
input table_email_filters_set_input {
  column_name: String
  id: uuid
  table_email_template_id: uuid
  value: String
}

"""
Streaming cursor of the table "table_email_filters"
"""
input table_email_filters_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: table_email_filters_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input table_email_filters_stream_cursor_value_input {
  column_name: String
  id: uuid
  table_email_template_id: uuid
  value: String
}

"""
update columns of table "table_email_filters"
"""
enum table_email_filters_update_column {
  """column name"""
column_name
  """column name"""
id
  """column name"""
table_email_template_id
  """column name"""
value
}

input table_email_filters_updates {
  """sets the columns of the filtered rows to the given values"""
_set: table_email_filters_set_input
  where: table_email_filters_bool_exp! 
}

"""
columns and relationships of "table_email_merge_field_defaults"
"""
type table_email_merge_field_defaults {
   created_at: timestamptz! 
   enabled: Boolean! 
   id: uuid! 
   key: String! 
  """An object relationship"""
 table_email_template: table_email_templates! 
   table_email_template_id: uuid! 
   value: String! 
}

"""
aggregated selection of "table_email_merge_field_defaults"
"""
type table_email_merge_field_defaults_aggregate {
   aggregate: table_email_merge_field_defaults_aggregate_fields
   nodes: [table_email_merge_field_defaults! ]! 
}

input table_email_merge_field_defaults_aggregate_bool_exp {
  bool_and: table_email_merge_field_defaults_aggregate_bool_exp_bool_and
  bool_or: table_email_merge_field_defaults_aggregate_bool_exp_bool_or
  count: table_email_merge_field_defaults_aggregate_bool_exp_count
}

input table_email_merge_field_defaults_aggregate_bool_exp_bool_and {
  arguments: table_email_merge_field_defaults_select_column_table_email_merge_field_defaults_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: table_email_merge_field_defaults_bool_exp
  predicate: Boolean_comparison_exp! 
}

input table_email_merge_field_defaults_aggregate_bool_exp_bool_or {
  arguments: table_email_merge_field_defaults_select_column_table_email_merge_field_defaults_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: table_email_merge_field_defaults_bool_exp
  predicate: Boolean_comparison_exp! 
}

input table_email_merge_field_defaults_aggregate_bool_exp_count {
  arguments: [table_email_merge_field_defaults_select_column! ]
  distinct: Boolean
  filter: table_email_merge_field_defaults_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "table_email_merge_field_defaults"
"""
type table_email_merge_field_defaults_aggregate_fields {
   count(columns: [table_email_merge_field_defaults_select_column! ], distinct: Boolean): Int! 
   max: table_email_merge_field_defaults_max_fields
   min: table_email_merge_field_defaults_min_fields
}

"""
order by aggregate values of table "table_email_merge_field_defaults"
"""
input table_email_merge_field_defaults_aggregate_order_by {
  count: order_by
  max: table_email_merge_field_defaults_max_order_by
  min: table_email_merge_field_defaults_min_order_by
}

"""
input type for inserting array relation for remote table "table_email_merge_field_defaults"
"""
input table_email_merge_field_defaults_arr_rel_insert_input {
  data: [table_email_merge_field_defaults_insert_input! ]! 
  """upsert condition"""
on_conflict: table_email_merge_field_defaults_on_conflict
}

"""
Boolean expression to filter rows from the table "table_email_merge_field_defaults". All fields are combined with a logical 'AND'.
"""
input table_email_merge_field_defaults_bool_exp {
  _and: [table_email_merge_field_defaults_bool_exp! ]
  _not: table_email_merge_field_defaults_bool_exp
  _or: [table_email_merge_field_defaults_bool_exp! ]
  created_at: timestamptz_comparison_exp
  enabled: Boolean_comparison_exp
  id: uuid_comparison_exp
  key: String_comparison_exp
  table_email_template: table_email_templates_bool_exp
  table_email_template_id: uuid_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "table_email_merge_field_defaults"
"""
enum table_email_merge_field_defaults_constraint {
  """
  unique or primary key constraint on columns "table_email_template_id", "key"
  """
table_email_merge_field_defaults_key_table_email_template_id_ke
  """
  unique or primary key constraint on columns "id"
  """
table_email_merge_field_defaults_pkey
}

"""
input type for inserting data into table "table_email_merge_field_defaults"
"""
input table_email_merge_field_defaults_insert_input {
  created_at: timestamptz! 
  enabled: Boolean! 
  id: uuid! 
  key: String! 
  table_email_template: table_email_templates_obj_rel_insert_input
  table_email_template_id: uuid! 
  value: String! 
}

"""aggregate max on columns"""
type table_email_merge_field_defaults_max_fields {
   created_at: timestamptz
   id: uuid
   key: String
   table_email_template_id: uuid
   value: String
}

"""
order by max() on columns of table "table_email_merge_field_defaults"
"""
input table_email_merge_field_defaults_max_order_by {
  created_at: order_by
  id: order_by
  key: order_by
  table_email_template_id: order_by
  value: order_by
}

"""aggregate min on columns"""
type table_email_merge_field_defaults_min_fields {
   created_at: timestamptz
   id: uuid
   key: String
   table_email_template_id: uuid
   value: String
}

"""
order by min() on columns of table "table_email_merge_field_defaults"
"""
input table_email_merge_field_defaults_min_order_by {
  created_at: order_by
  id: order_by
  key: order_by
  table_email_template_id: order_by
  value: order_by
}

"""
response of any mutation on the table "table_email_merge_field_defaults"
"""
type table_email_merge_field_defaults_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [table_email_merge_field_defaults! ]! 
}

"""
on_conflict condition type for table "table_email_merge_field_defaults"
"""
input table_email_merge_field_defaults_on_conflict {
  constraint: table_email_merge_field_defaults_constraint! 
  update_columns: [table_email_merge_field_defaults_update_column! ]! 
  where: table_email_merge_field_defaults_bool_exp
}

"""
Ordering options when selecting data from "table_email_merge_field_defaults".
"""
input table_email_merge_field_defaults_order_by {
  created_at: order_by
  enabled: order_by
  id: order_by
  key: order_by
  table_email_template: table_email_templates_order_by
  table_email_template_id: order_by
  value: order_by
}

"""primary key columns input for table: table_email_merge_field_defaults"""
input table_email_merge_field_defaults_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "table_email_merge_field_defaults"
"""
enum table_email_merge_field_defaults_select_column {
  """column name"""
created_at
  """column name"""
enabled
  """column name"""
id
  """column name"""
key
  """column name"""
table_email_template_id
  """column name"""
value
}

"""
select "table_email_merge_field_defaults_aggregate_bool_exp_bool_and_arguments_columns" columns of table "table_email_merge_field_defaults"
"""
enum table_email_merge_field_defaults_select_column_table_email_merge_field_defaults_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
enabled
}

"""
select "table_email_merge_field_defaults_aggregate_bool_exp_bool_or_arguments_columns" columns of table "table_email_merge_field_defaults"
"""
enum table_email_merge_field_defaults_select_column_table_email_merge_field_defaults_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
enabled
}

"""
input type for updating data in table "table_email_merge_field_defaults"
"""
input table_email_merge_field_defaults_set_input {
  created_at: timestamptz
  enabled: Boolean
  id: uuid
  key: String
  table_email_template_id: uuid
  value: String
}

"""
Streaming cursor of the table "table_email_merge_field_defaults"
"""
input table_email_merge_field_defaults_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: table_email_merge_field_defaults_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input table_email_merge_field_defaults_stream_cursor_value_input {
  created_at: timestamptz
  enabled: Boolean
  id: uuid
  key: String
  table_email_template_id: uuid
  value: String
}

"""
update columns of table "table_email_merge_field_defaults"
"""
enum table_email_merge_field_defaults_update_column {
  """column name"""
created_at
  """column name"""
enabled
  """column name"""
id
  """column name"""
key
  """column name"""
table_email_template_id
  """column name"""
value
}

input table_email_merge_field_defaults_updates {
  """sets the columns of the filtered rows to the given values"""
_set: table_email_merge_field_defaults_set_input
  where: table_email_merge_field_defaults_bool_exp! 
}

"""
columns and relationships of "table_email_recipient_groups"
"""
type table_email_recipient_groups {
   comment: String
   value: String! 
}

"""
aggregated selection of "table_email_recipient_groups"
"""
type table_email_recipient_groups_aggregate {
   aggregate: table_email_recipient_groups_aggregate_fields
   nodes: [table_email_recipient_groups! ]! 
}

"""
aggregate fields of "table_email_recipient_groups"
"""
type table_email_recipient_groups_aggregate_fields {
   count(columns: [table_email_recipient_groups_select_column! ], distinct: Boolean): Int! 
   max: table_email_recipient_groups_max_fields
   min: table_email_recipient_groups_min_fields
}

"""
Boolean expression to filter rows from the table "table_email_recipient_groups". All fields are combined with a logical 'AND'.
"""
input table_email_recipient_groups_bool_exp {
  _and: [table_email_recipient_groups_bool_exp! ]
  _not: table_email_recipient_groups_bool_exp
  _or: [table_email_recipient_groups_bool_exp! ]
  comment: String_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "table_email_recipient_groups"
"""
enum table_email_recipient_groups_constraint {
  """
  unique or primary key constraint on columns "value"
  """
table_email_recipient_groups_pkey
}

enum table_email_recipient_groups_enum {
  """
  People who have been bought tickets and are on the delegate attendees table
  """
DelegateAttendees
  """The authors listed in the submission form"""
authors
  """people who have registered via the delegate registration system"""
delegates
  """The presenter of the submission"""
presenters
  """people who have engagements in the program"""
program_bookings
  """The reviewers of the submissions"""
reviewers
  """The creators of submissions"""
submitters
}

"""
Boolean expression to compare columns of type "table_email_recipient_groups_enum". All fields are combined with logical 'AND'.
"""
input table_email_recipient_groups_enum_comparison_exp {
  _eq: table_email_recipient_groups_enum
  _in: [table_email_recipient_groups_enum! ]
  _is_null: Boolean
  _neq: table_email_recipient_groups_enum
  _nin: [table_email_recipient_groups_enum! ]
}

"""
input type for inserting data into table "table_email_recipient_groups"
"""
input table_email_recipient_groups_insert_input {
  comment: String
  value: String! 
}

"""aggregate max on columns"""
type table_email_recipient_groups_max_fields {
   comment: String
   value: String
}

"""aggregate min on columns"""
type table_email_recipient_groups_min_fields {
   comment: String
   value: String
}

"""
response of any mutation on the table "table_email_recipient_groups"
"""
type table_email_recipient_groups_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [table_email_recipient_groups! ]! 
}

"""
on_conflict condition type for table "table_email_recipient_groups"
"""
input table_email_recipient_groups_on_conflict {
  constraint: table_email_recipient_groups_constraint! 
  update_columns: [table_email_recipient_groups_update_column! ]! 
  where: table_email_recipient_groups_bool_exp
}

"""
Ordering options when selecting data from "table_email_recipient_groups".
"""
input table_email_recipient_groups_order_by {
  comment: order_by
  value: order_by
}

"""primary key columns input for table: table_email_recipient_groups"""
input table_email_recipient_groups_pk_columns_input {
  value: String! 
}

"""
select columns of table "table_email_recipient_groups"
"""
enum table_email_recipient_groups_select_column {
  """column name"""
comment
  """column name"""
value
}

"""
input type for updating data in table "table_email_recipient_groups"
"""
input table_email_recipient_groups_set_input {
  comment: String
  value: String
}

"""
Streaming cursor of the table "table_email_recipient_groups"
"""
input table_email_recipient_groups_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: table_email_recipient_groups_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input table_email_recipient_groups_stream_cursor_value_input {
  comment: String
  value: String
}

"""
update columns of table "table_email_recipient_groups"
"""
enum table_email_recipient_groups_update_column {
  """column name"""
comment
  """column name"""
value
}

input table_email_recipient_groups_updates {
  """sets the columns of the filtered rows to the given values"""
_set: table_email_recipient_groups_set_input
  where: table_email_recipient_groups_bool_exp! 
}

"""
columns and relationships of "table_email_templates"
"""
type table_email_templates {
   append_signature: Boolean! 
  """An array relationship"""
 attachments("""distinct select on columns"""
distinct_on: [table_email_attachments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_attachments_order_by! ], """filter the rows returned"""
where: table_email_attachments_bool_exp): [table_email_attachments! ]! 
  """An aggregate relationship"""
 attachments_aggregate("""distinct select on columns"""
distinct_on: [table_email_attachments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_attachments_order_by! ], """filter the rows returned"""
where: table_email_attachments_bool_exp): table_email_attachments_aggregate! 
   blind_cc_admin: Boolean! 
   body: String! 
   cc_admin: Boolean! 
   created_at: timestamptz! 
   created_by: Int! 
   id: uuid! 
  """An array relationship"""
 merge_field_defaults("""distinct select on columns"""
distinct_on: [table_email_merge_field_defaults_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_merge_field_defaults_order_by! ], """filter the rows returned"""
where: table_email_merge_field_defaults_bool_exp): [table_email_merge_field_defaults! ]! 
  """An aggregate relationship"""
 merge_field_defaults_aggregate("""distinct select on columns"""
distinct_on: [table_email_merge_field_defaults_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_merge_field_defaults_order_by! ], """filter the rows returned"""
where: table_email_merge_field_defaults_bool_exp): table_email_merge_field_defaults_aggregate! 
   name: String! 
  """An object relationship"""
 stage: stages! 
   stage_id: Int! 
   subject: String! 
  """An array relationship"""
 table_email_filters("""distinct select on columns"""
distinct_on: [table_email_filters_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_filters_order_by! ], """filter the rows returned"""
where: table_email_filters_bool_exp): [table_email_filters! ]! 
  """An aggregate relationship"""
 table_email_filters_aggregate("""distinct select on columns"""
distinct_on: [table_email_filters_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [table_email_filters_order_by! ], """filter the rows returned"""
where: table_email_filters_bool_exp): table_email_filters_aggregate! 
   table_email_recipient_group: table_email_recipient_groups_enum! 
   table_name: String
}

"""
aggregated selection of "table_email_templates"
"""
type table_email_templates_aggregate {
   aggregate: table_email_templates_aggregate_fields
   nodes: [table_email_templates! ]! 
}

"""
aggregate fields of "table_email_templates"
"""
type table_email_templates_aggregate_fields {
   avg: table_email_templates_avg_fields
   count(columns: [table_email_templates_select_column! ], distinct: Boolean): Int! 
   max: table_email_templates_max_fields
   min: table_email_templates_min_fields
   stddev: table_email_templates_stddev_fields
   stddev_pop: table_email_templates_stddev_pop_fields
   stddev_samp: table_email_templates_stddev_samp_fields
   sum: table_email_templates_sum_fields
   var_pop: table_email_templates_var_pop_fields
   var_samp: table_email_templates_var_samp_fields
   variance: table_email_templates_variance_fields
}

"""aggregate avg on columns"""
type table_email_templates_avg_fields {
   created_by: Float
   stage_id: Float
}

"""
Boolean expression to filter rows from the table "table_email_templates". All fields are combined with a logical 'AND'.
"""
input table_email_templates_bool_exp {
  _and: [table_email_templates_bool_exp! ]
  _not: table_email_templates_bool_exp
  _or: [table_email_templates_bool_exp! ]
  append_signature: Boolean_comparison_exp
  attachments: table_email_attachments_bool_exp
  attachments_aggregate: table_email_attachments_aggregate_bool_exp
  blind_cc_admin: Boolean_comparison_exp
  body: String_comparison_exp
  cc_admin: Boolean_comparison_exp
  created_at: timestamptz_comparison_exp
  created_by: Int_comparison_exp
  id: uuid_comparison_exp
  merge_field_defaults: table_email_merge_field_defaults_bool_exp
  merge_field_defaults_aggregate: table_email_merge_field_defaults_aggregate_bool_exp
  name: String_comparison_exp
  stage: stages_bool_exp
  stage_id: Int_comparison_exp
  subject: String_comparison_exp
  table_email_filters: table_email_filters_bool_exp
  table_email_filters_aggregate: table_email_filters_aggregate_bool_exp
  table_email_recipient_group: table_email_recipient_groups_enum_comparison_exp
  table_name: String_comparison_exp
}

"""
unique or primary key constraints on table "table_email_templates"
"""
enum table_email_templates_constraint {
  """
  unique or primary key constraint on columns "id"
  """
table_email_templates_pkey
}

"""
input type for incrementing numeric columns in table "table_email_templates"
"""
input table_email_templates_inc_input {
  created_by: Int
  stage_id: Int
}

"""
input type for inserting data into table "table_email_templates"
"""
input table_email_templates_insert_input {
  append_signature: Boolean! 
  attachments: table_email_attachments_arr_rel_insert_input
  blind_cc_admin: Boolean! 
  body: String! 
  cc_admin: Boolean! 
  created_at: timestamptz! 
  created_by: Int! 
  id: uuid! 
  merge_field_defaults: table_email_merge_field_defaults_arr_rel_insert_input
  name: String! 
  stage: stages_obj_rel_insert_input
  stage_id: Int! 
  subject: String! 
  table_email_filters: table_email_filters_arr_rel_insert_input
  table_email_recipient_group: table_email_recipient_groups_enum! 
  table_name: String
}

"""aggregate max on columns"""
type table_email_templates_max_fields {
   body: String
   created_at: timestamptz
   created_by: Int
   id: uuid
   name: String
   stage_id: Int
   subject: String
   table_name: String
}

"""aggregate min on columns"""
type table_email_templates_min_fields {
   body: String
   created_at: timestamptz
   created_by: Int
   id: uuid
   name: String
   stage_id: Int
   subject: String
   table_name: String
}

"""
response of any mutation on the table "table_email_templates"
"""
type table_email_templates_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [table_email_templates! ]! 
}

"""
input type for inserting object relation for remote table "table_email_templates"
"""
input table_email_templates_obj_rel_insert_input {
  data: table_email_templates_insert_input! 
  """upsert condition"""
on_conflict: table_email_templates_on_conflict
}

"""
on_conflict condition type for table "table_email_templates"
"""
input table_email_templates_on_conflict {
  constraint: table_email_templates_constraint! 
  update_columns: [table_email_templates_update_column! ]! 
  where: table_email_templates_bool_exp
}

"""Ordering options when selecting data from "table_email_templates"."""
input table_email_templates_order_by {
  append_signature: order_by
  attachments_aggregate: table_email_attachments_aggregate_order_by
  blind_cc_admin: order_by
  body: order_by
  cc_admin: order_by
  created_at: order_by
  created_by: order_by
  id: order_by
  merge_field_defaults_aggregate: table_email_merge_field_defaults_aggregate_order_by
  name: order_by
  stage: stages_order_by
  stage_id: order_by
  subject: order_by
  table_email_filters_aggregate: table_email_filters_aggregate_order_by
  table_email_recipient_group: order_by
  table_name: order_by
}

"""primary key columns input for table: table_email_templates"""
input table_email_templates_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "table_email_templates"
"""
enum table_email_templates_select_column {
  """column name"""
append_signature
  """column name"""
blind_cc_admin
  """column name"""
body
  """column name"""
cc_admin
  """column name"""
created_at
  """column name"""
created_by
  """column name"""
id
  """column name"""
name
  """column name"""
stage_id
  """column name"""
subject
  """column name"""
table_email_recipient_group
  """column name"""
table_name
}

"""
input type for updating data in table "table_email_templates"
"""
input table_email_templates_set_input {
  append_signature: Boolean
  blind_cc_admin: Boolean
  body: String
  cc_admin: Boolean
  created_at: timestamptz
  created_by: Int
  id: uuid
  name: String
  stage_id: Int
  subject: String
  table_email_recipient_group: table_email_recipient_groups_enum
  table_name: String
}

"""aggregate stddev on columns"""
type table_email_templates_stddev_fields {
   created_by: Float
   stage_id: Float
}

"""aggregate stddev_pop on columns"""
type table_email_templates_stddev_pop_fields {
   created_by: Float
   stage_id: Float
}

"""aggregate stddev_samp on columns"""
type table_email_templates_stddev_samp_fields {
   created_by: Float
   stage_id: Float
}

"""
Streaming cursor of the table "table_email_templates"
"""
input table_email_templates_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: table_email_templates_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input table_email_templates_stream_cursor_value_input {
  append_signature: Boolean
  blind_cc_admin: Boolean
  body: String
  cc_admin: Boolean
  created_at: timestamptz
  created_by: Int
  id: uuid
  name: String
  stage_id: Int
  subject: String
  table_email_recipient_group: table_email_recipient_groups_enum
  table_name: String
}

"""aggregate sum on columns"""
type table_email_templates_sum_fields {
   created_by: Int
   stage_id: Int
}

"""
update columns of table "table_email_templates"
"""
enum table_email_templates_update_column {
  """column name"""
append_signature
  """column name"""
blind_cc_admin
  """column name"""
body
  """column name"""
cc_admin
  """column name"""
created_at
  """column name"""
created_by
  """column name"""
id
  """column name"""
name
  """column name"""
stage_id
  """column name"""
subject
  """column name"""
table_email_recipient_group
  """column name"""
table_name
}

input table_email_templates_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: table_email_templates_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: table_email_templates_set_input
  where: table_email_templates_bool_exp! 
}

"""aggregate var_pop on columns"""
type table_email_templates_var_pop_fields {
   created_by: Float
   stage_id: Float
}

"""aggregate var_samp on columns"""
type table_email_templates_var_samp_fields {
   created_by: Float
   stage_id: Float
}

"""aggregate variance on columns"""
type table_email_templates_variance_fields {
   created_by: Float
   stage_id: Float
}

scalar time 

"""
Boolean expression to compare columns of type "time". All fields are combined with logical 'AND'.
"""
input time_comparison_exp {
  _eq: time
  _gt: time
  _gte: time
  _in: [time! ]
  _is_null: Boolean
  _lt: time
  _lte: time
  _neq: time
  _nin: [time! ]
}

scalar time_display_status 

"""
Boolean expression to compare columns of type "time_display_status". All fields are combined with logical 'AND'.
"""
input time_display_status_comparison_exp {
  _eq: time_display_status
  _gt: time_display_status
  _gte: time_display_status
  _in: [time_display_status! ]
  _is_null: Boolean
  _lt: time_display_status
  _lte: time_display_status
  _neq: time_display_status
  _nin: [time_display_status! ]
}

scalar timestamp 

"""
Boolean expression to compare columns of type "timestamp". All fields are combined with logical 'AND'.
"""
input timestamp_comparison_exp {
  _eq: timestamp
  _gt: timestamp
  _gte: timestamp
  _in: [timestamp! ]
  _is_null: Boolean
  _lt: timestamp
  _lte: timestamp
  _neq: timestamp
  _nin: [timestamp! ]
}

scalar timestamptz 

"""
Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz! ]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz! ]
}

scalar timezone_display 

"""
Boolean expression to compare columns of type "timezone_display". All fields are combined with logical 'AND'.
"""
input timezone_display_comparison_exp {
  _eq: timezone_display
  _gt: timezone_display
  _gte: timezone_display
  _in: [timezone_display! ]
  _is_null: Boolean
  _lt: timezone_display
  _lte: timezone_display
  _neq: timezone_display
  _nin: [timezone_display! ]
}

"""
columns and relationships of "title_responses"
"""
type title_responses {
   id: Int
   question_id: Int
  """An object relationship"""
 submission: submissions
   submission_id: Int
   value: String
   without_html: String
}

"""
aggregated selection of "title_responses"
"""
type title_responses_aggregate {
   aggregate: title_responses_aggregate_fields
   nodes: [title_responses! ]! 
}

input title_responses_aggregate_bool_exp {
  count: title_responses_aggregate_bool_exp_count
}

input title_responses_aggregate_bool_exp_count {
  arguments: [title_responses_select_column! ]
  distinct: Boolean
  filter: title_responses_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "title_responses"
"""
type title_responses_aggregate_fields {
   avg: title_responses_avg_fields
   count(columns: [title_responses_select_column! ], distinct: Boolean): Int! 
   max: title_responses_max_fields
   min: title_responses_min_fields
   stddev: title_responses_stddev_fields
   stddev_pop: title_responses_stddev_pop_fields
   stddev_samp: title_responses_stddev_samp_fields
   sum: title_responses_sum_fields
   var_pop: title_responses_var_pop_fields
   var_samp: title_responses_var_samp_fields
   variance: title_responses_variance_fields
}

"""
order by aggregate values of table "title_responses"
"""
input title_responses_aggregate_order_by {
  avg: title_responses_avg_order_by
  count: order_by
  max: title_responses_max_order_by
  min: title_responses_min_order_by
  stddev: title_responses_stddev_order_by
  stddev_pop: title_responses_stddev_pop_order_by
  stddev_samp: title_responses_stddev_samp_order_by
  sum: title_responses_sum_order_by
  var_pop: title_responses_var_pop_order_by
  var_samp: title_responses_var_samp_order_by
  variance: title_responses_variance_order_by
}

"""
input type for inserting array relation for remote table "title_responses"
"""
input title_responses_arr_rel_insert_input {
  data: [title_responses_insert_input! ]! 
}

"""aggregate avg on columns"""
type title_responses_avg_fields {
   id: Float
   question_id: Float
   submission_id: Float
}

"""
order by avg() on columns of table "title_responses"
"""
input title_responses_avg_order_by {
  id: order_by
  question_id: order_by
  submission_id: order_by
}

"""
Boolean expression to filter rows from the table "title_responses". All fields are combined with a logical 'AND'.
"""
input title_responses_bool_exp {
  _and: [title_responses_bool_exp! ]
  _not: title_responses_bool_exp
  _or: [title_responses_bool_exp! ]
  id: Int_comparison_exp
  question_id: Int_comparison_exp
  submission: submissions_bool_exp
  submission_id: Int_comparison_exp
  value: String_comparison_exp
  without_html: String_comparison_exp
}

"""
input type for inserting data into table "title_responses"
"""
input title_responses_insert_input {
  id: Int
  question_id: Int
  submission: submissions_obj_rel_insert_input
  submission_id: Int
  value: String
  without_html: String
}

"""aggregate max on columns"""
type title_responses_max_fields {
   id: Int
   question_id: Int
   submission_id: Int
   value: String
   without_html: String
}

"""
order by max() on columns of table "title_responses"
"""
input title_responses_max_order_by {
  id: order_by
  question_id: order_by
  submission_id: order_by
  value: order_by
  without_html: order_by
}

"""aggregate min on columns"""
type title_responses_min_fields {
   id: Int
   question_id: Int
   submission_id: Int
   value: String
   without_html: String
}

"""
order by min() on columns of table "title_responses"
"""
input title_responses_min_order_by {
  id: order_by
  question_id: order_by
  submission_id: order_by
  value: order_by
  without_html: order_by
}

"""Ordering options when selecting data from "title_responses"."""
input title_responses_order_by {
  id: order_by
  question_id: order_by
  submission: submissions_order_by
  submission_id: order_by
  value: order_by
  without_html: order_by
}

"""
select columns of table "title_responses"
"""
enum title_responses_select_column {
  """column name"""
id
  """column name"""
question_id
  """column name"""
submission_id
  """column name"""
value
  """column name"""
without_html
}

"""aggregate stddev on columns"""
type title_responses_stddev_fields {
   id: Float
   question_id: Float
   submission_id: Float
}

"""
order by stddev() on columns of table "title_responses"
"""
input title_responses_stddev_order_by {
  id: order_by
  question_id: order_by
  submission_id: order_by
}

"""aggregate stddev_pop on columns"""
type title_responses_stddev_pop_fields {
   id: Float
   question_id: Float
   submission_id: Float
}

"""
order by stddev_pop() on columns of table "title_responses"
"""
input title_responses_stddev_pop_order_by {
  id: order_by
  question_id: order_by
  submission_id: order_by
}

"""aggregate stddev_samp on columns"""
type title_responses_stddev_samp_fields {
   id: Float
   question_id: Float
   submission_id: Float
}

"""
order by stddev_samp() on columns of table "title_responses"
"""
input title_responses_stddev_samp_order_by {
  id: order_by
  question_id: order_by
  submission_id: order_by
}

"""
Streaming cursor of the table "title_responses"
"""
input title_responses_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: title_responses_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input title_responses_stream_cursor_value_input {
  id: Int
  question_id: Int
  submission_id: Int
  value: String
  without_html: String
}

"""aggregate sum on columns"""
type title_responses_sum_fields {
   id: Int
   question_id: Int
   submission_id: Int
}

"""
order by sum() on columns of table "title_responses"
"""
input title_responses_sum_order_by {
  id: order_by
  question_id: order_by
  submission_id: order_by
}

"""aggregate var_pop on columns"""
type title_responses_var_pop_fields {
   id: Float
   question_id: Float
   submission_id: Float
}

"""
order by var_pop() on columns of table "title_responses"
"""
input title_responses_var_pop_order_by {
  id: order_by
  question_id: order_by
  submission_id: order_by
}

"""aggregate var_samp on columns"""
type title_responses_var_samp_fields {
   id: Float
   question_id: Float
   submission_id: Float
}

"""
order by var_samp() on columns of table "title_responses"
"""
input title_responses_var_samp_order_by {
  id: order_by
  question_id: order_by
  submission_id: order_by
}

"""aggregate variance on columns"""
type title_responses_variance_fields {
   id: Float
   question_id: Float
   submission_id: Float
}

"""
order by variance() on columns of table "title_responses"
"""
input title_responses_variance_order_by {
  id: order_by
  question_id: order_by
  submission_id: order_by
}

scalar title_type 

"""
Boolean expression to compare columns of type "title_type". All fields are combined with logical 'AND'.
"""
input title_type_comparison_exp {
  _eq: title_type
  _gt: title_type
  _gte: title_type
  _in: [title_type! ]
  _is_null: Boolean
  _lt: title_type
  _lte: title_type
  _neq: title_type
  _nin: [title_type! ]
}

"""see usage of review auto assigning for business insights"""
type track_review_auto_assigns {
   created_at: timestamptz! 
   id: uuid! 
   review_count: Int! 
  """An object relationship"""
 stage: stages
   stage_id: Int! 
   updated_at: timestamptz! 
   user_id: Int! 
}

"""
aggregated selection of "track_review_auto_assigns"
"""
type track_review_auto_assigns_aggregate {
   aggregate: track_review_auto_assigns_aggregate_fields
   nodes: [track_review_auto_assigns! ]! 
}

"""
aggregate fields of "track_review_auto_assigns"
"""
type track_review_auto_assigns_aggregate_fields {
   avg: track_review_auto_assigns_avg_fields
   count(columns: [track_review_auto_assigns_select_column! ], distinct: Boolean): Int! 
   max: track_review_auto_assigns_max_fields
   min: track_review_auto_assigns_min_fields
   stddev: track_review_auto_assigns_stddev_fields
   stddev_pop: track_review_auto_assigns_stddev_pop_fields
   stddev_samp: track_review_auto_assigns_stddev_samp_fields
   sum: track_review_auto_assigns_sum_fields
   var_pop: track_review_auto_assigns_var_pop_fields
   var_samp: track_review_auto_assigns_var_samp_fields
   variance: track_review_auto_assigns_variance_fields
}

"""aggregate avg on columns"""
type track_review_auto_assigns_avg_fields {
   review_count: Float
   stage_id: Float
   user_id: Float
}

"""
Boolean expression to filter rows from the table "track_review_auto_assigns". All fields are combined with a logical 'AND'.
"""
input track_review_auto_assigns_bool_exp {
  _and: [track_review_auto_assigns_bool_exp! ]
  _not: track_review_auto_assigns_bool_exp
  _or: [track_review_auto_assigns_bool_exp! ]
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  review_count: Int_comparison_exp
  stage: stages_bool_exp
  stage_id: Int_comparison_exp
  updated_at: timestamptz_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "track_review_auto_assigns"
"""
enum track_review_auto_assigns_constraint {
  """
  unique or primary key constraint on columns "id"
  """
track_review_auto_assigns_pkey
}

"""
input type for incrementing numeric columns in table "track_review_auto_assigns"
"""
input track_review_auto_assigns_inc_input {
  review_count: Int
  stage_id: Int
  user_id: Int
}

"""
input type for inserting data into table "track_review_auto_assigns"
"""
input track_review_auto_assigns_insert_input {
  created_at: timestamptz! 
  id: uuid! 
  review_count: Int! 
  stage: stages_obj_rel_insert_input
  stage_id: Int! 
  updated_at: timestamptz! 
  user_id: Int! 
}

"""aggregate max on columns"""
type track_review_auto_assigns_max_fields {
   created_at: timestamptz
   id: uuid
   review_count: Int
   stage_id: Int
   updated_at: timestamptz
   user_id: Int
}

"""aggregate min on columns"""
type track_review_auto_assigns_min_fields {
   created_at: timestamptz
   id: uuid
   review_count: Int
   stage_id: Int
   updated_at: timestamptz
   user_id: Int
}

"""
response of any mutation on the table "track_review_auto_assigns"
"""
type track_review_auto_assigns_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [track_review_auto_assigns! ]! 
}

"""
on_conflict condition type for table "track_review_auto_assigns"
"""
input track_review_auto_assigns_on_conflict {
  constraint: track_review_auto_assigns_constraint! 
  update_columns: [track_review_auto_assigns_update_column! ]! 
  where: track_review_auto_assigns_bool_exp
}

"""Ordering options when selecting data from "track_review_auto_assigns"."""
input track_review_auto_assigns_order_by {
  created_at: order_by
  id: order_by
  review_count: order_by
  stage: stages_order_by
  stage_id: order_by
  updated_at: order_by
  user_id: order_by
}

"""primary key columns input for table: track_review_auto_assigns"""
input track_review_auto_assigns_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "track_review_auto_assigns"
"""
enum track_review_auto_assigns_select_column {
  """column name"""
created_at
  """column name"""
id
  """column name"""
review_count
  """column name"""
stage_id
  """column name"""
updated_at
  """column name"""
user_id
}

"""
input type for updating data in table "track_review_auto_assigns"
"""
input track_review_auto_assigns_set_input {
  created_at: timestamptz
  id: uuid
  review_count: Int
  stage_id: Int
  updated_at: timestamptz
  user_id: Int
}

"""aggregate stddev on columns"""
type track_review_auto_assigns_stddev_fields {
   review_count: Float
   stage_id: Float
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type track_review_auto_assigns_stddev_pop_fields {
   review_count: Float
   stage_id: Float
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type track_review_auto_assigns_stddev_samp_fields {
   review_count: Float
   stage_id: Float
   user_id: Float
}

"""
Streaming cursor of the table "track_review_auto_assigns"
"""
input track_review_auto_assigns_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: track_review_auto_assigns_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input track_review_auto_assigns_stream_cursor_value_input {
  created_at: timestamptz
  id: uuid
  review_count: Int
  stage_id: Int
  updated_at: timestamptz
  user_id: Int
}

"""aggregate sum on columns"""
type track_review_auto_assigns_sum_fields {
   review_count: Int
   stage_id: Int
   user_id: Int
}

"""
update columns of table "track_review_auto_assigns"
"""
enum track_review_auto_assigns_update_column {
  """column name"""
created_at
  """column name"""
id
  """column name"""
review_count
  """column name"""
stage_id
  """column name"""
updated_at
  """column name"""
user_id
}

input track_review_auto_assigns_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: track_review_auto_assigns_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: track_review_auto_assigns_set_input
  where: track_review_auto_assigns_bool_exp! 
}

"""aggregate var_pop on columns"""
type track_review_auto_assigns_var_pop_fields {
   review_count: Float
   stage_id: Float
   user_id: Float
}

"""aggregate var_samp on columns"""
type track_review_auto_assigns_var_samp_fields {
   review_count: Float
   stage_id: Float
   user_id: Float
}

"""aggregate variance on columns"""
type track_review_auto_assigns_variance_fields {
   review_count: Float
   stage_id: Float
   user_id: Float
}

"""
columns and relationships of "user_asked_for_ratings"
"""
type user_asked_for_ratings {
   created_at: timestamp! 
   id: Int! 
   user_id: Int! 
}

"""
aggregated selection of "user_asked_for_ratings"
"""
type user_asked_for_ratings_aggregate {
   aggregate: user_asked_for_ratings_aggregate_fields
   nodes: [user_asked_for_ratings! ]! 
}

"""
aggregate fields of "user_asked_for_ratings"
"""
type user_asked_for_ratings_aggregate_fields {
   avg: user_asked_for_ratings_avg_fields
   count(columns: [user_asked_for_ratings_select_column! ], distinct: Boolean): Int! 
   max: user_asked_for_ratings_max_fields
   min: user_asked_for_ratings_min_fields
   stddev: user_asked_for_ratings_stddev_fields
   stddev_pop: user_asked_for_ratings_stddev_pop_fields
   stddev_samp: user_asked_for_ratings_stddev_samp_fields
   sum: user_asked_for_ratings_sum_fields
   var_pop: user_asked_for_ratings_var_pop_fields
   var_samp: user_asked_for_ratings_var_samp_fields
   variance: user_asked_for_ratings_variance_fields
}

"""aggregate avg on columns"""
type user_asked_for_ratings_avg_fields {
   id: Float
   user_id: Float
}

"""
Boolean expression to filter rows from the table "user_asked_for_ratings". All fields are combined with a logical 'AND'.
"""
input user_asked_for_ratings_bool_exp {
  _and: [user_asked_for_ratings_bool_exp! ]
  _not: user_asked_for_ratings_bool_exp
  _or: [user_asked_for_ratings_bool_exp! ]
  created_at: timestamp_comparison_exp
  id: Int_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "user_asked_for_ratings"
"""
enum user_asked_for_ratings_constraint {
  """
  unique or primary key constraint on columns "id"
  """
user_asked_for_ratings_pkey
}

"""
input type for incrementing numeric columns in table "user_asked_for_ratings"
"""
input user_asked_for_ratings_inc_input {
  id: Int
  user_id: Int
}

"""
input type for inserting data into table "user_asked_for_ratings"
"""
input user_asked_for_ratings_insert_input {
  created_at: timestamp! 
  id: Int! 
  user_id: Int! 
}

"""aggregate max on columns"""
type user_asked_for_ratings_max_fields {
   created_at: timestamp
   id: Int
   user_id: Int
}

"""aggregate min on columns"""
type user_asked_for_ratings_min_fields {
   created_at: timestamp
   id: Int
   user_id: Int
}

"""
response of any mutation on the table "user_asked_for_ratings"
"""
type user_asked_for_ratings_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [user_asked_for_ratings! ]! 
}

"""
on_conflict condition type for table "user_asked_for_ratings"
"""
input user_asked_for_ratings_on_conflict {
  constraint: user_asked_for_ratings_constraint! 
  update_columns: [user_asked_for_ratings_update_column! ]! 
  where: user_asked_for_ratings_bool_exp
}

"""Ordering options when selecting data from "user_asked_for_ratings"."""
input user_asked_for_ratings_order_by {
  created_at: order_by
  id: order_by
  user_id: order_by
}

"""primary key columns input for table: user_asked_for_ratings"""
input user_asked_for_ratings_pk_columns_input {
  id: Int! 
}

"""
select columns of table "user_asked_for_ratings"
"""
enum user_asked_for_ratings_select_column {
  """column name"""
created_at
  """column name"""
id
  """column name"""
user_id
}

"""
input type for updating data in table "user_asked_for_ratings"
"""
input user_asked_for_ratings_set_input {
  created_at: timestamp
  id: Int
  user_id: Int
}

"""aggregate stddev on columns"""
type user_asked_for_ratings_stddev_fields {
   id: Float
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type user_asked_for_ratings_stddev_pop_fields {
   id: Float
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type user_asked_for_ratings_stddev_samp_fields {
   id: Float
   user_id: Float
}

"""
Streaming cursor of the table "user_asked_for_ratings"
"""
input user_asked_for_ratings_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: user_asked_for_ratings_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input user_asked_for_ratings_stream_cursor_value_input {
  created_at: timestamp
  id: Int
  user_id: Int
}

"""aggregate sum on columns"""
type user_asked_for_ratings_sum_fields {
   id: Int
   user_id: Int
}

"""
update columns of table "user_asked_for_ratings"
"""
enum user_asked_for_ratings_update_column {
  """column name"""
created_at
  """column name"""
id
  """column name"""
user_id
}

input user_asked_for_ratings_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: user_asked_for_ratings_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: user_asked_for_ratings_set_input
  where: user_asked_for_ratings_bool_exp! 
}

"""aggregate var_pop on columns"""
type user_asked_for_ratings_var_pop_fields {
   id: Float
   user_id: Float
}

"""aggregate var_samp on columns"""
type user_asked_for_ratings_var_samp_fields {
   id: Float
   user_id: Float
}

"""aggregate variance on columns"""
type user_asked_for_ratings_variance_fields {
   id: Float
   user_id: Float
}

"""
columns and relationships of "user_emails"
"""
type user_emails {
   email: citext
   user_id: Int
}

"""
aggregated selection of "user_emails"
"""
type user_emails_aggregate {
   aggregate: user_emails_aggregate_fields
   nodes: [user_emails! ]! 
}

input user_emails_aggregate_bool_exp {
  count: user_emails_aggregate_bool_exp_count
}

input user_emails_aggregate_bool_exp_count {
  arguments: [user_emails_select_column! ]
  distinct: Boolean
  filter: user_emails_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "user_emails"
"""
type user_emails_aggregate_fields {
   avg: user_emails_avg_fields
   count(columns: [user_emails_select_column! ], distinct: Boolean): Int! 
   max: user_emails_max_fields
   min: user_emails_min_fields
   stddev: user_emails_stddev_fields
   stddev_pop: user_emails_stddev_pop_fields
   stddev_samp: user_emails_stddev_samp_fields
   sum: user_emails_sum_fields
   var_pop: user_emails_var_pop_fields
   var_samp: user_emails_var_samp_fields
   variance: user_emails_variance_fields
}

"""
order by aggregate values of table "user_emails"
"""
input user_emails_aggregate_order_by {
  avg: user_emails_avg_order_by
  count: order_by
  max: user_emails_max_order_by
  min: user_emails_min_order_by
  stddev: user_emails_stddev_order_by
  stddev_pop: user_emails_stddev_pop_order_by
  stddev_samp: user_emails_stddev_samp_order_by
  sum: user_emails_sum_order_by
  var_pop: user_emails_var_pop_order_by
  var_samp: user_emails_var_samp_order_by
  variance: user_emails_variance_order_by
}

"""
input type for inserting array relation for remote table "user_emails"
"""
input user_emails_arr_rel_insert_input {
  data: [user_emails_insert_input! ]! 
}

"""aggregate avg on columns"""
type user_emails_avg_fields {
   user_id: Float
}

"""
order by avg() on columns of table "user_emails"
"""
input user_emails_avg_order_by {
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "user_emails". All fields are combined with a logical 'AND'.
"""
input user_emails_bool_exp {
  _and: [user_emails_bool_exp! ]
  _not: user_emails_bool_exp
  _or: [user_emails_bool_exp! ]
  email: citext_comparison_exp
  user_id: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "user_emails"
"""
input user_emails_inc_input {
  user_id: Int
}

"""
input type for inserting data into table "user_emails"
"""
input user_emails_insert_input {
  email: citext
  user_id: Int
}

"""aggregate max on columns"""
type user_emails_max_fields {
   email: citext
   user_id: Int
}

"""
order by max() on columns of table "user_emails"
"""
input user_emails_max_order_by {
  email: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type user_emails_min_fields {
   email: citext
   user_id: Int
}

"""
order by min() on columns of table "user_emails"
"""
input user_emails_min_order_by {
  email: order_by
  user_id: order_by
}

"""
response of any mutation on the table "user_emails"
"""
type user_emails_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [user_emails! ]! 
}

"""Ordering options when selecting data from "user_emails"."""
input user_emails_order_by {
  email: order_by
  user_id: order_by
}

"""
select columns of table "user_emails"
"""
enum user_emails_select_column {
  """column name"""
email
  """column name"""
user_id
}

"""
input type for updating data in table "user_emails"
"""
input user_emails_set_input {
  email: citext
  user_id: Int
}

"""aggregate stddev on columns"""
type user_emails_stddev_fields {
   user_id: Float
}

"""
order by stddev() on columns of table "user_emails"
"""
input user_emails_stddev_order_by {
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type user_emails_stddev_pop_fields {
   user_id: Float
}

"""
order by stddev_pop() on columns of table "user_emails"
"""
input user_emails_stddev_pop_order_by {
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type user_emails_stddev_samp_fields {
   user_id: Float
}

"""
order by stddev_samp() on columns of table "user_emails"
"""
input user_emails_stddev_samp_order_by {
  user_id: order_by
}

"""
Streaming cursor of the table "user_emails"
"""
input user_emails_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: user_emails_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input user_emails_stream_cursor_value_input {
  email: citext
  user_id: Int
}

"""aggregate sum on columns"""
type user_emails_sum_fields {
   user_id: Int
}

"""
order by sum() on columns of table "user_emails"
"""
input user_emails_sum_order_by {
  user_id: order_by
}

input user_emails_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: user_emails_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: user_emails_set_input
  where: user_emails_bool_exp! 
}

"""aggregate var_pop on columns"""
type user_emails_var_pop_fields {
   user_id: Float
}

"""
order by var_pop() on columns of table "user_emails"
"""
input user_emails_var_pop_order_by {
  user_id: order_by
}

"""aggregate var_samp on columns"""
type user_emails_var_samp_fields {
   user_id: Float
}

"""
order by var_samp() on columns of table "user_emails"
"""
input user_emails_var_samp_order_by {
  user_id: order_by
}

"""aggregate variance on columns"""
type user_emails_variance_fields {
   user_id: Float
}

"""
order by variance() on columns of table "user_emails"
"""
input user_emails_variance_order_by {
  user_id: order_by
}

scalar user_type 

"""
Boolean expression to compare columns of type "user_type". All fields are combined with logical 'AND'.
"""
input user_type_comparison_exp {
  _eq: user_type
  _gt: user_type
  _gte: user_type
  _in: [user_type! ]
  _is_null: Boolean
  _lt: user_type
  _lte: user_type
  _neq: user_type
  _nin: [user_type! ]
}

"""
columns and relationships of "user_view"
"""
type user_view {
  """An object relationship"""
 attendee: dr_attendees
   email: citext
   first_name: String
   last_name: String
  """An object relationship"""
 order: dr_orders
   user_id: Int
}

"""
aggregated selection of "user_view"
"""
type user_view_aggregate {
   aggregate: user_view_aggregate_fields
   nodes: [user_view! ]! 
}

"""
aggregate fields of "user_view"
"""
type user_view_aggregate_fields {
   avg: user_view_avg_fields
   count(columns: [user_view_select_column! ], distinct: Boolean): Int! 
   max: user_view_max_fields
   min: user_view_min_fields
   stddev: user_view_stddev_fields
   stddev_pop: user_view_stddev_pop_fields
   stddev_samp: user_view_stddev_samp_fields
   sum: user_view_sum_fields
   var_pop: user_view_var_pop_fields
   var_samp: user_view_var_samp_fields
   variance: user_view_variance_fields
}

"""aggregate avg on columns"""
type user_view_avg_fields {
   user_id: Float
}

"""
Boolean expression to filter rows from the table "user_view". All fields are combined with a logical 'AND'.
"""
input user_view_bool_exp {
  _and: [user_view_bool_exp! ]
  _not: user_view_bool_exp
  _or: [user_view_bool_exp! ]
  attendee: dr_attendees_bool_exp
  email: citext_comparison_exp
  first_name: String_comparison_exp
  last_name: String_comparison_exp
  order: dr_orders_bool_exp
  user_id: Int_comparison_exp
}

"""
input type for incrementing numeric columns in table "user_view"
"""
input user_view_inc_input {
  user_id: Int
}

"""
input type for inserting data into table "user_view"
"""
input user_view_insert_input {
  attendee: dr_attendees_obj_rel_insert_input
  email: citext
  first_name: String
  last_name: String
  order: dr_orders_obj_rel_insert_input
  user_id: Int
}

"""aggregate max on columns"""
type user_view_max_fields {
   email: citext
   first_name: String
   last_name: String
   user_id: Int
}

"""aggregate min on columns"""
type user_view_min_fields {
   email: citext
   first_name: String
   last_name: String
   user_id: Int
}

"""
response of any mutation on the table "user_view"
"""
type user_view_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [user_view! ]! 
}

"""
input type for inserting object relation for remote table "user_view"
"""
input user_view_obj_rel_insert_input {
  data: user_view_insert_input! 
}

"""Ordering options when selecting data from "user_view"."""
input user_view_order_by {
  attendee: dr_attendees_order_by
  email: order_by
  first_name: order_by
  last_name: order_by
  order: dr_orders_order_by
  user_id: order_by
}

"""
select columns of table "user_view"
"""
enum user_view_select_column {
  """column name"""
email
  """column name"""
first_name
  """column name"""
last_name
  """column name"""
user_id
}

"""
input type for updating data in table "user_view"
"""
input user_view_set_input {
  email: citext
  first_name: String
  last_name: String
  user_id: Int
}

"""aggregate stddev on columns"""
type user_view_stddev_fields {
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type user_view_stddev_pop_fields {
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type user_view_stddev_samp_fields {
   user_id: Float
}

"""
Streaming cursor of the table "user_view"
"""
input user_view_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: user_view_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input user_view_stream_cursor_value_input {
  email: citext
  first_name: String
  last_name: String
  user_id: Int
}

"""aggregate sum on columns"""
type user_view_sum_fields {
   user_id: Int
}

input user_view_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: user_view_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: user_view_set_input
  where: user_view_bool_exp! 
}

"""aggregate var_pop on columns"""
type user_view_var_pop_fields {
   user_id: Float
}

"""aggregate var_samp on columns"""
type user_view_var_samp_fields {
   user_id: Float
}

"""aggregate variance on columns"""
type user_view_variance_fields {
   user_id: Float
}

"""
columns and relationships of "users"
"""
type users {
  """An array relationship"""
 author("""distinct select on columns"""
distinct_on: [author_field_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_field_responses_order_by! ], """filter the rows returned"""
where: author_field_responses_bool_exp): [author_field_responses! ]! 
  """An aggregate relationship"""
 author_aggregate("""distinct select on columns"""
distinct_on: [author_field_responses_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [author_field_responses_order_by! ], """filter the rows returned"""
where: author_field_responses_bool_exp): author_field_responses_aggregate! 
  """An array relationship"""
 authors("""distinct select on columns"""
distinct_on: [authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [authors_order_by! ], """filter the rows returned"""
where: authors_bool_exp): [authors! ]! 
  """An aggregate relationship"""
 authors_aggregate("""distinct select on columns"""
distinct_on: [authors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [authors_order_by! ], """filter the rows returned"""
where: authors_bool_exp): authors_aggregate! 
   casss_impexium_id: String
  """An array relationship"""
 clients_permissions("""distinct select on columns"""
distinct_on: [clients_permissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [clients_permissions_order_by! ], """filter the rows returned"""
where: clients_permissions_bool_exp): [clients_permissions! ]! 
  """An aggregate relationship"""
 clients_permissions_aggregate("""distinct select on columns"""
distinct_on: [clients_permissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [clients_permissions_order_by! ], """filter the rows returned"""
where: clients_permissions_bool_exp): clients_permissions_aggregate! 
   created_at: timestamptz
  """An array relationship"""
 current_user_email("""distinct select on columns"""
distinct_on: [user_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [user_emails_order_by! ], """filter the rows returned"""
where: user_emails_bool_exp): [user_emails! ]! 
  """An aggregate relationship"""
 current_user_email_aggregate("""distinct select on columns"""
distinct_on: [user_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [user_emails_order_by! ], """filter the rows returned"""
where: user_emails_bool_exp): user_emails_aggregate! 
  """An array relationship"""
 dr_attendees("""distinct select on columns"""
distinct_on: [dr_attendees_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendees_order_by! ], """filter the rows returned"""
where: dr_attendees_bool_exp): [dr_attendees! ]! 
  """An aggregate relationship"""
 dr_attendees_aggregate("""distinct select on columns"""
distinct_on: [dr_attendees_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [dr_attendees_order_by! ], """filter the rows returned"""
where: dr_attendees_bool_exp): dr_attendees_aggregate! 
  """An object relationship"""
 dr_orders: dr_orders
   email: citext! 
   email_verified: Boolean! 
  """An array relationship"""
 events_permissions("""distinct select on columns"""
distinct_on: [events_permissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [events_permissions_order_by! ], """filter the rows returned"""
where: events_permissions_bool_exp): [events_permissions! ]! 
  """An aggregate relationship"""
 events_permissions_aggregate("""distinct select on columns"""
distinct_on: [events_permissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [events_permissions_order_by! ], """filter the rows returned"""
where: events_permissions_bool_exp): events_permissions_aggregate! 
  """An array relationship"""
 exhibitor_booths("""distinct select on columns"""
distinct_on: [exhibitors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitors_order_by! ], """filter the rows returned"""
where: exhibitors_bool_exp): [exhibitors! ]! 
  """An aggregate relationship"""
 exhibitor_booths_aggregate("""distinct select on columns"""
distinct_on: [exhibitors_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitors_order_by! ], """filter the rows returned"""
where: exhibitors_bool_exp): exhibitors_aggregate! 
  """An array relationship"""
 exhibitor_representative("""distinct select on columns"""
distinct_on: [exhibitor_representatives_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_representatives_order_by! ], """filter the rows returned"""
where: exhibitor_representatives_bool_exp): [exhibitor_representatives! ]! 
  """An aggregate relationship"""
 exhibitor_representative_aggregate("""distinct select on columns"""
distinct_on: [exhibitor_representatives_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [exhibitor_representatives_order_by! ], """filter the rows returned"""
where: exhibitor_representatives_bool_exp): exhibitor_representatives_aggregate! 
   first_name: String
  """An array relationship"""
 group_chat_messages("""distinct select on columns"""
distinct_on: [virtual_conference_group_chat_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_chat_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_group_chat_messages_bool_exp): [virtual_conference_group_chat_messages! ]! 
  """An aggregate relationship"""
 group_chat_messages_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_group_chat_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_chat_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_group_chat_messages_bool_exp): virtual_conference_group_chat_messages_aggregate! 
  """An array relationship"""
 heartbeats("""distinct select on columns"""
distinct_on: [virtual_conference_user_heartbeats_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_heartbeats_order_by! ], """filter the rows returned"""
where: virtual_conference_user_heartbeats_bool_exp): [virtual_conference_user_heartbeats! ]! 
  """An aggregate relationship"""
 heartbeats_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_user_heartbeats_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_heartbeats_order_by! ], """filter the rows returned"""
where: virtual_conference_user_heartbeats_bool_exp): virtual_conference_user_heartbeats_aggregate! 
   id: Int! 
   last_name: String
  """An array relationship"""
 name_badges("""distinct select on columns"""
distinct_on: [virtual_conference_name_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_name_badge_order_by! ], """filter the rows returned"""
where: virtual_conference_name_badge_bool_exp): [virtual_conference_name_badge! ]! 
  """An aggregate relationship"""
 name_badges_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_name_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_name_badge_order_by! ], """filter the rows returned"""
where: virtual_conference_name_badge_bool_exp): virtual_conference_name_badge_aggregate! 
   oauth_google_id: String
   oauth_intuit_id: String
   oauth_linkedin_id: String
   oauth_sso_id: String
   password: String
  """An array relationship"""
 program_sessions_comments("""distinct select on columns"""
distinct_on: [program_sessions_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_comments_order_by! ], """filter the rows returned"""
where: program_sessions_comments_bool_exp): [program_sessions_comments! ]! 
  """An aggregate relationship"""
 program_sessions_comments_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_comments_order_by! ], """filter the rows returned"""
where: program_sessions_comments_bool_exp): program_sessions_comments_aggregate! 
  """An array relationship"""
 program_submissions_comments("""distinct select on columns"""
distinct_on: [program_submissions_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_submissions_comments_order_by! ], """filter the rows returned"""
where: program_submissions_comments_bool_exp): [program_submissions_comments! ]! 
  """An aggregate relationship"""
 program_submissions_comments_aggregate("""distinct select on columns"""
distinct_on: [program_submissions_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_submissions_comments_order_by! ], """filter the rows returned"""
where: program_submissions_comments_bool_exp): program_submissions_comments_aggregate! 
  """An array relationship"""
 program_symposium_comments("""distinct select on columns"""
distinct_on: [program_symposium_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_symposium_comments_order_by! ], """filter the rows returned"""
where: program_symposium_comments_bool_exp): [program_symposium_comments! ]! 
  """An aggregate relationship"""
 program_symposium_comments_aggregate("""distinct select on columns"""
distinct_on: [program_symposium_comments_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_symposium_comments_order_by! ], """filter the rows returned"""
where: program_symposium_comments_bool_exp): program_symposium_comments_aggregate! 
   registered: Boolean! 
  """An array relationship"""
 reviewer_categories("""distinct select on columns"""
distinct_on: [reviewer_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_categories_order_by! ], """filter the rows returned"""
where: reviewer_categories_bool_exp): [reviewer_categories! ]! 
  """An aggregate relationship"""
 reviewer_categories_aggregate("""distinct select on columns"""
distinct_on: [reviewer_categories_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviewer_categories_order_by! ], """filter the rows returned"""
where: reviewer_categories_bool_exp): reviewer_categories_aggregate! 
  """An array relationship"""
 reviews("""distinct select on columns"""
distinct_on: [reviews_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviews_order_by! ], """filter the rows returned"""
where: reviews_bool_exp): [reviews! ]! 
  """An aggregate relationship"""
 reviews_aggregate("""distinct select on columns"""
distinct_on: [reviews_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [reviews_order_by! ], """filter the rows returned"""
where: reviews_bool_exp): reviews_aggregate! 
   sanitised: Boolean! 
  """An array relationship"""
 session_chairs("""distinct select on columns"""
distinct_on: [session_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chairs_order_by! ], """filter the rows returned"""
where: session_chairs_bool_exp): [session_chairs! ]! 
  """An aggregate relationship"""
 session_chairs_aggregate("""distinct select on columns"""
distinct_on: [session_chairs_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [session_chairs_order_by! ], """filter the rows returned"""
where: session_chairs_bool_exp): session_chairs_aggregate! 
   show_contact_us_banner_on_dashboard: Boolean! 
  """An array relationship"""
 submissions("""distinct select on columns"""
distinct_on: [submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submissions_order_by! ], """filter the rows returned"""
where: submissions_bool_exp): [submissions! ]! 
  """An aggregate relationship"""
 submissions_aggregate("""distinct select on columns"""
distinct_on: [submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submissions_order_by! ], """filter the rows returned"""
where: submissions_bool_exp): submissions_aggregate! 
  """An array relationship"""
 symposia("""distinct select on columns"""
distinct_on: [symposia_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposia_order_by! ], """filter the rows returned"""
where: symposia_bool_exp): [symposia! ]! 
  """An aggregate relationship"""
 symposia_aggregate("""distinct select on columns"""
distinct_on: [symposia_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposia_order_by! ], """filter the rows returned"""
where: symposia_bool_exp): symposia_aggregate! 
  """An array relationship"""
 symposium_people("""distinct select on columns"""
distinct_on: [symposium_person_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_person_users_order_by! ], """filter the rows returned"""
where: symposium_person_users_bool_exp): [symposium_person_users! ]! 
  """An aggregate relationship"""
 symposium_people_aggregate("""distinct select on columns"""
distinct_on: [symposium_person_users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [symposium_person_users_order_by! ], """filter the rows returned"""
where: symposium_person_users_bool_exp): symposium_person_users_aggregate! 
   tel: String
   title: String
   updated_at: timestamptz
   verification_email_opened: Boolean! 
  """An array relationship"""
 virtual_conference_event_messages("""distinct select on columns"""
distinct_on: [virtual_conference_event_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_event_messages_bool_exp): [virtual_conference_event_messages! ]! 
  """An aggregate relationship"""
 virtual_conference_event_messages_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_event_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_event_messages_bool_exp): virtual_conference_event_messages_aggregate! 
}

"""
aggregated selection of "users"
"""
type users_aggregate {
   aggregate: users_aggregate_fields
   nodes: [users! ]! 
}

input users_aggregate_bool_exp {
  bool_and: users_aggregate_bool_exp_bool_and
  bool_or: users_aggregate_bool_exp_bool_or
  count: users_aggregate_bool_exp_count
}

input users_aggregate_bool_exp_bool_and {
  arguments: users_select_column_users_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: users_bool_exp
  predicate: Boolean_comparison_exp! 
}

input users_aggregate_bool_exp_bool_or {
  arguments: users_select_column_users_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: users_bool_exp
  predicate: Boolean_comparison_exp! 
}

input users_aggregate_bool_exp_count {
  arguments: [users_select_column! ]
  distinct: Boolean
  filter: users_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "users"
"""
type users_aggregate_fields {
   avg: users_avg_fields
   count(columns: [users_select_column! ], distinct: Boolean): Int! 
   max: users_max_fields
   min: users_min_fields
   stddev: users_stddev_fields
   stddev_pop: users_stddev_pop_fields
   stddev_samp: users_stddev_samp_fields
   sum: users_sum_fields
   var_pop: users_var_pop_fields
   var_samp: users_var_samp_fields
   variance: users_variance_fields
}

"""
order by aggregate values of table "users"
"""
input users_aggregate_order_by {
  avg: users_avg_order_by
  count: order_by
  max: users_max_order_by
  min: users_min_order_by
  stddev: users_stddev_order_by
  stddev_pop: users_stddev_pop_order_by
  stddev_samp: users_stddev_samp_order_by
  sum: users_sum_order_by
  var_pop: users_var_pop_order_by
  var_samp: users_var_samp_order_by
  variance: users_variance_order_by
}

"""
input type for inserting array relation for remote table "users"
"""
input users_arr_rel_insert_input {
  data: [users_insert_input! ]! 
  """upsert condition"""
on_conflict: users_on_conflict
}

"""aggregate avg on columns"""
type users_avg_fields {
   id: Float
}

"""
order by avg() on columns of table "users"
"""
input users_avg_order_by {
  id: order_by
}

"""
Boolean expression to filter rows from the table "users". All fields are combined with a logical 'AND'.
"""
input users_bool_exp {
  _and: [users_bool_exp! ]
  _not: users_bool_exp
  _or: [users_bool_exp! ]
  author: author_field_responses_bool_exp
  author_aggregate: author_field_responses_aggregate_bool_exp
  authors: authors_bool_exp
  authors_aggregate: authors_aggregate_bool_exp
  casss_impexium_id: String_comparison_exp
  clients_permissions: clients_permissions_bool_exp
  clients_permissions_aggregate: clients_permissions_aggregate_bool_exp
  created_at: timestamptz_comparison_exp
  current_user_email: user_emails_bool_exp
  current_user_email_aggregate: user_emails_aggregate_bool_exp
  dr_attendees: dr_attendees_bool_exp
  dr_attendees_aggregate: dr_attendees_aggregate_bool_exp
  dr_orders: dr_orders_bool_exp
  email: citext_comparison_exp
  email_verified: Boolean_comparison_exp
  events_permissions: events_permissions_bool_exp
  events_permissions_aggregate: events_permissions_aggregate_bool_exp
  exhibitor_booths: exhibitors_bool_exp
  exhibitor_booths_aggregate: exhibitors_aggregate_bool_exp
  exhibitor_representative: exhibitor_representatives_bool_exp
  exhibitor_representative_aggregate: exhibitor_representatives_aggregate_bool_exp
  first_name: String_comparison_exp
  group_chat_messages: virtual_conference_group_chat_messages_bool_exp
  group_chat_messages_aggregate: virtual_conference_group_chat_messages_aggregate_bool_exp
  heartbeats: virtual_conference_user_heartbeats_bool_exp
  heartbeats_aggregate: virtual_conference_user_heartbeats_aggregate_bool_exp
  id: Int_comparison_exp
  last_name: String_comparison_exp
  name_badges: virtual_conference_name_badge_bool_exp
  name_badges_aggregate: virtual_conference_name_badge_aggregate_bool_exp
  oauth_google_id: String_comparison_exp
  oauth_intuit_id: String_comparison_exp
  oauth_linkedin_id: String_comparison_exp
  oauth_sso_id: String_comparison_exp
  password: String_comparison_exp
  program_sessions_comments: program_sessions_comments_bool_exp
  program_sessions_comments_aggregate: program_sessions_comments_aggregate_bool_exp
  program_submissions_comments: program_submissions_comments_bool_exp
  program_submissions_comments_aggregate: program_submissions_comments_aggregate_bool_exp
  program_symposium_comments: program_symposium_comments_bool_exp
  program_symposium_comments_aggregate: program_symposium_comments_aggregate_bool_exp
  registered: Boolean_comparison_exp
  reviewer_categories: reviewer_categories_bool_exp
  reviewer_categories_aggregate: reviewer_categories_aggregate_bool_exp
  reviews: reviews_bool_exp
  reviews_aggregate: reviews_aggregate_bool_exp
  sanitised: Boolean_comparison_exp
  session_chairs: session_chairs_bool_exp
  session_chairs_aggregate: session_chairs_aggregate_bool_exp
  show_contact_us_banner_on_dashboard: Boolean_comparison_exp
  submissions: submissions_bool_exp
  submissions_aggregate: submissions_aggregate_bool_exp
  symposia: symposia_bool_exp
  symposia_aggregate: symposia_aggregate_bool_exp
  symposium_people: symposium_person_users_bool_exp
  symposium_people_aggregate: symposium_person_users_aggregate_bool_exp
  tel: String_comparison_exp
  title: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  verification_email_opened: Boolean_comparison_exp
  virtual_conference_event_messages: virtual_conference_event_messages_bool_exp
  virtual_conference_event_messages_aggregate: virtual_conference_event_messages_aggregate_bool_exp
}

"""
unique or primary key constraints on table "users"
"""
enum users_constraint {
  """
  unique or primary key constraint on columns "email"
  """
users_email_key
  """
  unique or primary key constraint on columns "oauth_sso_id"
  """
users_oauth_sso_id_key
  """
  unique or primary key constraint on columns "user_id"
  """
users_pkey
}

"""
input type for incrementing numeric columns in table "users"
"""
input users_inc_input {
  id: Int
}

"""
input type for inserting data into table "users"
"""
input users_insert_input {
  author: author_field_responses_arr_rel_insert_input
  authors: authors_arr_rel_insert_input
  casss_impexium_id: String
  clients_permissions: clients_permissions_arr_rel_insert_input
  created_at: timestamptz! 
  current_user_email: user_emails_arr_rel_insert_input
  dr_attendees: dr_attendees_arr_rel_insert_input
  dr_orders: dr_orders_obj_rel_insert_input
  email: citext! 
  email_verified: Boolean! 
  events_permissions: events_permissions_arr_rel_insert_input
  exhibitor_booths: exhibitors_arr_rel_insert_input
  exhibitor_representative: exhibitor_representatives_arr_rel_insert_input
  first_name: String! 
  group_chat_messages: virtual_conference_group_chat_messages_arr_rel_insert_input
  heartbeats: virtual_conference_user_heartbeats_arr_rel_insert_input
  id: Int
  last_name: String! 
  name_badges: virtual_conference_name_badge_arr_rel_insert_input
  oauth_google_id: String
  oauth_intuit_id: String
  oauth_linkedin_id: String
  oauth_sso_id: String
  password: String
  program_sessions_comments: program_sessions_comments_arr_rel_insert_input
  program_submissions_comments: program_submissions_comments_arr_rel_insert_input
  program_symposium_comments: program_symposium_comments_arr_rel_insert_input
  registered: Boolean! 
  reviewer_categories: reviewer_categories_arr_rel_insert_input
  reviews: reviews_arr_rel_insert_input
  sanitised: Boolean! 
  session_chairs: session_chairs_arr_rel_insert_input
  show_contact_us_banner_on_dashboard: Boolean! 
  submissions: submissions_arr_rel_insert_input
  symposia: symposia_arr_rel_insert_input
  symposium_people: symposium_person_users_arr_rel_insert_input
  tel: String! 
  title: String! 
  updated_at: timestamptz! 
  verification_email_opened: Boolean! 
  virtual_conference_event_messages: virtual_conference_event_messages_arr_rel_insert_input
}

"""aggregate max on columns"""
type users_max_fields {
   casss_impexium_id: String
   created_at: timestamptz
   email: citext
   first_name: String
   id: Int
   last_name: String
   oauth_google_id: String
   oauth_intuit_id: String
   oauth_linkedin_id: String
   oauth_sso_id: String
   password: String
   tel: String
   title: String
   updated_at: timestamptz
}

"""
order by max() on columns of table "users"
"""
input users_max_order_by {
  casss_impexium_id: order_by
  created_at: order_by
  email: order_by
  first_name: order_by
  id: order_by
  last_name: order_by
  oauth_google_id: order_by
  oauth_intuit_id: order_by
  oauth_linkedin_id: order_by
  oauth_sso_id: order_by
  password: order_by
  tel: order_by
  title: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type users_min_fields {
   casss_impexium_id: String
   created_at: timestamptz
   email: citext
   first_name: String
   id: Int
   last_name: String
   oauth_google_id: String
   oauth_intuit_id: String
   oauth_linkedin_id: String
   oauth_sso_id: String
   password: String
   tel: String
   title: String
   updated_at: timestamptz
}

"""
order by min() on columns of table "users"
"""
input users_min_order_by {
  casss_impexium_id: order_by
  created_at: order_by
  email: order_by
  first_name: order_by
  id: order_by
  last_name: order_by
  oauth_google_id: order_by
  oauth_intuit_id: order_by
  oauth_linkedin_id: order_by
  oauth_sso_id: order_by
  password: order_by
  tel: order_by
  title: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "users"
"""
type users_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [users! ]! 
}

"""
input type for inserting object relation for remote table "users"
"""
input users_obj_rel_insert_input {
  data: users_insert_input! 
  """upsert condition"""
on_conflict: users_on_conflict
}

"""
on_conflict condition type for table "users"
"""
input users_on_conflict {
  constraint: users_constraint! 
  update_columns: [users_update_column! ]! 
  where: users_bool_exp
}

"""Ordering options when selecting data from "users"."""
input users_order_by {
  author_aggregate: author_field_responses_aggregate_order_by
  authors_aggregate: authors_aggregate_order_by
  casss_impexium_id: order_by
  clients_permissions_aggregate: clients_permissions_aggregate_order_by
  created_at: order_by
  current_user_email_aggregate: user_emails_aggregate_order_by
  dr_attendees_aggregate: dr_attendees_aggregate_order_by
  dr_orders: dr_orders_order_by
  email: order_by
  email_verified: order_by
  events_permissions_aggregate: events_permissions_aggregate_order_by
  exhibitor_booths_aggregate: exhibitors_aggregate_order_by
  exhibitor_representative_aggregate: exhibitor_representatives_aggregate_order_by
  first_name: order_by
  group_chat_messages_aggregate: virtual_conference_group_chat_messages_aggregate_order_by
  heartbeats_aggregate: virtual_conference_user_heartbeats_aggregate_order_by
  id: order_by
  last_name: order_by
  name_badges_aggregate: virtual_conference_name_badge_aggregate_order_by
  oauth_google_id: order_by
  oauth_intuit_id: order_by
  oauth_linkedin_id: order_by
  oauth_sso_id: order_by
  password: order_by
  program_sessions_comments_aggregate: program_sessions_comments_aggregate_order_by
  program_submissions_comments_aggregate: program_submissions_comments_aggregate_order_by
  program_symposium_comments_aggregate: program_symposium_comments_aggregate_order_by
  registered: order_by
  reviewer_categories_aggregate: reviewer_categories_aggregate_order_by
  reviews_aggregate: reviews_aggregate_order_by
  sanitised: order_by
  session_chairs_aggregate: session_chairs_aggregate_order_by
  show_contact_us_banner_on_dashboard: order_by
  submissions_aggregate: submissions_aggregate_order_by
  symposia_aggregate: symposia_aggregate_order_by
  symposium_people_aggregate: symposium_person_users_aggregate_order_by
  tel: order_by
  title: order_by
  updated_at: order_by
  verification_email_opened: order_by
  virtual_conference_event_messages_aggregate: virtual_conference_event_messages_aggregate_order_by
}

"""primary key columns input for table: users"""
input users_pk_columns_input {
  id: Int! 
}

"""
select columns of table "users"
"""
enum users_select_column {
  """column name"""
casss_impexium_id
  """column name"""
created_at
  """column name"""
email
  """column name"""
email_verified
  """column name"""
first_name
  """column name"""
id
  """column name"""
last_name
  """column name"""
oauth_google_id
  """column name"""
oauth_intuit_id
  """column name"""
oauth_linkedin_id
  """column name"""
oauth_sso_id
  """column name"""
password
  """column name"""
registered
  """column name"""
sanitised
  """column name"""
show_contact_us_banner_on_dashboard
  """column name"""
tel
  """column name"""
title
  """column name"""
updated_at
  """column name"""
verification_email_opened
}

"""
select "users_aggregate_bool_exp_bool_and_arguments_columns" columns of table "users"
"""
enum users_select_column_users_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
email_verified
  """column name"""
registered
  """column name"""
sanitised
  """column name"""
show_contact_us_banner_on_dashboard
  """column name"""
verification_email_opened
}

"""
select "users_aggregate_bool_exp_bool_or_arguments_columns" columns of table "users"
"""
enum users_select_column_users_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
email_verified
  """column name"""
registered
  """column name"""
sanitised
  """column name"""
show_contact_us_banner_on_dashboard
  """column name"""
verification_email_opened
}

"""
input type for updating data in table "users"
"""
input users_set_input {
  casss_impexium_id: String
  created_at: timestamptz
  email: citext
  email_verified: Boolean
  first_name: String
  id: Int
  last_name: String
  oauth_google_id: String
  oauth_intuit_id: String
  oauth_linkedin_id: String
  oauth_sso_id: String
  password: String
  registered: Boolean
  sanitised: Boolean
  show_contact_us_banner_on_dashboard: Boolean
  tel: String
  title: String
  updated_at: timestamptz
  verification_email_opened: Boolean
}

"""aggregate stddev on columns"""
type users_stddev_fields {
   id: Float
}

"""
order by stddev() on columns of table "users"
"""
input users_stddev_order_by {
  id: order_by
}

"""aggregate stddev_pop on columns"""
type users_stddev_pop_fields {
   id: Float
}

"""
order by stddev_pop() on columns of table "users"
"""
input users_stddev_pop_order_by {
  id: order_by
}

"""aggregate stddev_samp on columns"""
type users_stddev_samp_fields {
   id: Float
}

"""
order by stddev_samp() on columns of table "users"
"""
input users_stddev_samp_order_by {
  id: order_by
}

"""
Streaming cursor of the table "users"
"""
input users_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: users_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input users_stream_cursor_value_input {
  casss_impexium_id: String
  created_at: timestamptz
  email: citext
  email_verified: Boolean
  first_name: String
  id: Int
  last_name: String
  oauth_google_id: String
  oauth_intuit_id: String
  oauth_linkedin_id: String
  oauth_sso_id: String
  password: String
  registered: Boolean
  sanitised: Boolean
  show_contact_us_banner_on_dashboard: Boolean
  tel: String
  title: String
  updated_at: timestamptz
  verification_email_opened: Boolean
}

"""aggregate sum on columns"""
type users_sum_fields {
   id: Int
}

"""
order by sum() on columns of table "users"
"""
input users_sum_order_by {
  id: order_by
}

"""
update columns of table "users"
"""
enum users_update_column {
  """column name"""
casss_impexium_id
  """column name"""
created_at
  """column name"""
email
  """column name"""
email_verified
  """column name"""
first_name
  """column name"""
id
  """column name"""
last_name
  """column name"""
oauth_google_id
  """column name"""
oauth_intuit_id
  """column name"""
oauth_linkedin_id
  """column name"""
oauth_sso_id
  """column name"""
password
  """column name"""
registered
  """column name"""
sanitised
  """column name"""
show_contact_us_banner_on_dashboard
  """column name"""
tel
  """column name"""
title
  """column name"""
updated_at
  """column name"""
verification_email_opened
}

input users_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: users_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: users_set_input
  where: users_bool_exp! 
}

"""aggregate var_pop on columns"""
type users_var_pop_fields {
   id: Float
}

"""
order by var_pop() on columns of table "users"
"""
input users_var_pop_order_by {
  id: order_by
}

"""aggregate var_samp on columns"""
type users_var_samp_fields {
   id: Float
}

"""
order by var_samp() on columns of table "users"
"""
input users_var_samp_order_by {
  id: order_by
}

"""aggregate variance on columns"""
type users_variance_fields {
   id: Float
}

"""
order by variance() on columns of table "users"
"""
input users_variance_order_by {
  id: order_by
}

scalar uuid 

"""
Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'.
"""
input uuid_comparison_exp {
  _eq: uuid
  _gt: uuid
  _gte: uuid
  _in: [uuid! ]
  _is_null: Boolean
  _lt: uuid
  _lte: uuid
  _neq: uuid
  _nin: [uuid! ]
}

scalar vat_code 

"""
Boolean expression to compare columns of type "vat_code". All fields are combined with logical 'AND'.
"""
input vat_code_comparison_exp {
  _eq: vat_code
  _gt: vat_code
  _gte: vat_code
  _in: [vat_code! ]
  _is_null: Boolean
  _lt: vat_code
  _lte: vat_code
  _neq: vat_code
  _nin: [vat_code! ]
}

"""
columns and relationships of "verified_sender_emails"
"""
type verified_sender_emails {
   dkim_host: String! 
   dkim_value: String! 
   dkim_verified: Boolean! 
   email: String! 
  """
  fetch data from the table: "events_verified_sender_emails"
  """
 events_verified_sender_emails("""distinct select on columns"""
distinct_on: [events_verified_sender_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [events_verified_sender_emails_order_by! ], """filter the rows returned"""
where: events_verified_sender_emails_bool_exp): [events_verified_sender_emails! ]! 
  """
  fetch aggregated fields from the table: "events_verified_sender_emails"
  """
 events_verified_sender_emails_aggregate("""distinct select on columns"""
distinct_on: [events_verified_sender_emails_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [events_verified_sender_emails_order_by! ], """filter the rows returned"""
where: events_verified_sender_emails_bool_exp): events_verified_sender_emails_aggregate! 
   postmark_sender_id: Int! 
   verified: Boolean! 
   verified_sender_email_id: Int! 
}

"""
aggregated selection of "verified_sender_emails"
"""
type verified_sender_emails_aggregate {
   aggregate: verified_sender_emails_aggregate_fields
   nodes: [verified_sender_emails! ]! 
}

"""
aggregate fields of "verified_sender_emails"
"""
type verified_sender_emails_aggregate_fields {
   avg: verified_sender_emails_avg_fields
   count(columns: [verified_sender_emails_select_column! ], distinct: Boolean): Int! 
   max: verified_sender_emails_max_fields
   min: verified_sender_emails_min_fields
   stddev: verified_sender_emails_stddev_fields
   stddev_pop: verified_sender_emails_stddev_pop_fields
   stddev_samp: verified_sender_emails_stddev_samp_fields
   sum: verified_sender_emails_sum_fields
   var_pop: verified_sender_emails_var_pop_fields
   var_samp: verified_sender_emails_var_samp_fields
   variance: verified_sender_emails_variance_fields
}

"""aggregate avg on columns"""
type verified_sender_emails_avg_fields {
   postmark_sender_id: Float
   verified_sender_email_id: Float
}

"""
Boolean expression to filter rows from the table "verified_sender_emails". All fields are combined with a logical 'AND'.
"""
input verified_sender_emails_bool_exp {
  _and: [verified_sender_emails_bool_exp! ]
  _not: verified_sender_emails_bool_exp
  _or: [verified_sender_emails_bool_exp! ]
  dkim_host: String_comparison_exp
  dkim_value: String_comparison_exp
  dkim_verified: Boolean_comparison_exp
  email: String_comparison_exp
  events_verified_sender_emails: events_verified_sender_emails_bool_exp
  events_verified_sender_emails_aggregate: events_verified_sender_emails_aggregate_bool_exp
  postmark_sender_id: Int_comparison_exp
  verified: Boolean_comparison_exp
  verified_sender_email_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "verified_sender_emails"
"""
enum verified_sender_emails_constraint {
  """
  unique or primary key constraint on columns "email"
  """
verified_sender_emails_email_key
  """
  unique or primary key constraint on columns "verified_sender_email_id"
  """
verified_sender_emails_pkey
}

"""
input type for incrementing numeric columns in table "verified_sender_emails"
"""
input verified_sender_emails_inc_input {
  postmark_sender_id: Int
  verified_sender_email_id: Int
}

"""
input type for inserting data into table "verified_sender_emails"
"""
input verified_sender_emails_insert_input {
  dkim_host: String! 
  dkim_value: String! 
  dkim_verified: Boolean! 
  email: String! 
  events_verified_sender_emails: events_verified_sender_emails_arr_rel_insert_input
  postmark_sender_id: Int! 
  verified: Boolean! 
  verified_sender_email_id: Int! 
}

"""aggregate max on columns"""
type verified_sender_emails_max_fields {
   dkim_host: String
   dkim_value: String
   email: String
   postmark_sender_id: Int
   verified_sender_email_id: Int
}

"""aggregate min on columns"""
type verified_sender_emails_min_fields {
   dkim_host: String
   dkim_value: String
   email: String
   postmark_sender_id: Int
   verified_sender_email_id: Int
}

"""
response of any mutation on the table "verified_sender_emails"
"""
type verified_sender_emails_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [verified_sender_emails! ]! 
}

"""
on_conflict condition type for table "verified_sender_emails"
"""
input verified_sender_emails_on_conflict {
  constraint: verified_sender_emails_constraint! 
  update_columns: [verified_sender_emails_update_column! ]! 
  where: verified_sender_emails_bool_exp
}

"""Ordering options when selecting data from "verified_sender_emails"."""
input verified_sender_emails_order_by {
  dkim_host: order_by
  dkim_value: order_by
  dkim_verified: order_by
  email: order_by
  events_verified_sender_emails_aggregate: events_verified_sender_emails_aggregate_order_by
  postmark_sender_id: order_by
  verified: order_by
  verified_sender_email_id: order_by
}

"""primary key columns input for table: verified_sender_emails"""
input verified_sender_emails_pk_columns_input {
  verified_sender_email_id: Int! 
}

"""
select columns of table "verified_sender_emails"
"""
enum verified_sender_emails_select_column {
  """column name"""
dkim_host
  """column name"""
dkim_value
  """column name"""
dkim_verified
  """column name"""
email
  """column name"""
postmark_sender_id
  """column name"""
verified
  """column name"""
verified_sender_email_id
}

"""
input type for updating data in table "verified_sender_emails"
"""
input verified_sender_emails_set_input {
  dkim_host: String
  dkim_value: String
  dkim_verified: Boolean
  email: String
  postmark_sender_id: Int
  verified: Boolean
  verified_sender_email_id: Int
}

"""aggregate stddev on columns"""
type verified_sender_emails_stddev_fields {
   postmark_sender_id: Float
   verified_sender_email_id: Float
}

"""aggregate stddev_pop on columns"""
type verified_sender_emails_stddev_pop_fields {
   postmark_sender_id: Float
   verified_sender_email_id: Float
}

"""aggregate stddev_samp on columns"""
type verified_sender_emails_stddev_samp_fields {
   postmark_sender_id: Float
   verified_sender_email_id: Float
}

"""
Streaming cursor of the table "verified_sender_emails"
"""
input verified_sender_emails_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: verified_sender_emails_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input verified_sender_emails_stream_cursor_value_input {
  dkim_host: String
  dkim_value: String
  dkim_verified: Boolean
  email: String
  postmark_sender_id: Int
  verified: Boolean
  verified_sender_email_id: Int
}

"""aggregate sum on columns"""
type verified_sender_emails_sum_fields {
   postmark_sender_id: Int
   verified_sender_email_id: Int
}

"""
update columns of table "verified_sender_emails"
"""
enum verified_sender_emails_update_column {
  """column name"""
dkim_host
  """column name"""
dkim_value
  """column name"""
dkim_verified
  """column name"""
email
  """column name"""
postmark_sender_id
  """column name"""
verified
  """column name"""
verified_sender_email_id
}

input verified_sender_emails_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: verified_sender_emails_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: verified_sender_emails_set_input
  where: verified_sender_emails_bool_exp! 
}

"""aggregate var_pop on columns"""
type verified_sender_emails_var_pop_fields {
   postmark_sender_id: Float
   verified_sender_email_id: Float
}

"""aggregate var_samp on columns"""
type verified_sender_emails_var_samp_fields {
   postmark_sender_id: Float
   verified_sender_email_id: Float
}

"""aggregate variance on columns"""
type verified_sender_emails_variance_fields {
   postmark_sender_id: Float
   verified_sender_email_id: Float
}

"""
columns and relationships of "virtual_conference_announcement_button_clicks"
"""
type virtual_conference_announcement_button_clicks {
  """An object relationship"""
 announcement: virtual_conference_announcements
   announcement_id: uuid! 
   anon_user_id: String
   created_at: timestamptz! 
   id: uuid! 
   user_id: Int! 
}

"""
aggregated selection of "virtual_conference_announcement_button_clicks"
"""
type virtual_conference_announcement_button_clicks_aggregate {
   aggregate: virtual_conference_announcement_button_clicks_aggregate_fields
   nodes: [virtual_conference_announcement_button_clicks! ]! 
}

input virtual_conference_announcement_button_clicks_aggregate_bool_exp {
  count: virtual_conference_announcement_button_clicks_aggregate_bool_exp_count
}

input virtual_conference_announcement_button_clicks_aggregate_bool_exp_count {
  arguments: [virtual_conference_announcement_button_clicks_select_column! ]
  distinct: Boolean
  filter: virtual_conference_announcement_button_clicks_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_announcement_button_clicks"
"""
type virtual_conference_announcement_button_clicks_aggregate_fields {
   avg: virtual_conference_announcement_button_clicks_avg_fields
   count(columns: [virtual_conference_announcement_button_clicks_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_announcement_button_clicks_max_fields
   min: virtual_conference_announcement_button_clicks_min_fields
   stddev: virtual_conference_announcement_button_clicks_stddev_fields
   stddev_pop: virtual_conference_announcement_button_clicks_stddev_pop_fields
   stddev_samp: virtual_conference_announcement_button_clicks_stddev_samp_fields
   sum: virtual_conference_announcement_button_clicks_sum_fields
   var_pop: virtual_conference_announcement_button_clicks_var_pop_fields
   var_samp: virtual_conference_announcement_button_clicks_var_samp_fields
   variance: virtual_conference_announcement_button_clicks_variance_fields
}

"""
order by aggregate values of table "virtual_conference_announcement_button_clicks"
"""
input virtual_conference_announcement_button_clicks_aggregate_order_by {
  avg: virtual_conference_announcement_button_clicks_avg_order_by
  count: order_by
  max: virtual_conference_announcement_button_clicks_max_order_by
  min: virtual_conference_announcement_button_clicks_min_order_by
  stddev: virtual_conference_announcement_button_clicks_stddev_order_by
  stddev_pop: virtual_conference_announcement_button_clicks_stddev_pop_order_by
  stddev_samp: virtual_conference_announcement_button_clicks_stddev_samp_order_by
  sum: virtual_conference_announcement_button_clicks_sum_order_by
  var_pop: virtual_conference_announcement_button_clicks_var_pop_order_by
  var_samp: virtual_conference_announcement_button_clicks_var_samp_order_by
  variance: virtual_conference_announcement_button_clicks_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_announcement_button_clicks"
"""
input virtual_conference_announcement_button_clicks_arr_rel_insert_input {
  data: [virtual_conference_announcement_button_clicks_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_announcement_button_clicks_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_announcement_button_clicks_avg_fields {
   user_id: Float
}

"""
order by avg() on columns of table "virtual_conference_announcement_button_clicks"
"""
input virtual_conference_announcement_button_clicks_avg_order_by {
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_announcement_button_clicks". All fields are combined with a logical 'AND'.
"""
input virtual_conference_announcement_button_clicks_bool_exp {
  _and: [virtual_conference_announcement_button_clicks_bool_exp! ]
  _not: virtual_conference_announcement_button_clicks_bool_exp
  _or: [virtual_conference_announcement_button_clicks_bool_exp! ]
  announcement: virtual_conference_announcements_bool_exp
  announcement_id: uuid_comparison_exp
  anon_user_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_announcement_button_clicks"
"""
enum virtual_conference_announcement_button_clicks_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_announcement_button_clicks_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_announcement_button_clicks"
"""
input virtual_conference_announcement_button_clicks_inc_input {
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_announcement_button_clicks"
"""
input virtual_conference_announcement_button_clicks_insert_input {
  announcement: virtual_conference_announcements_obj_rel_insert_input
  announcement_id: uuid! 
  anon_user_id: String
  created_at: timestamptz! 
  id: uuid! 
  user_id: Int! 
}

"""aggregate max on columns"""
type virtual_conference_announcement_button_clicks_max_fields {
   announcement_id: uuid
   anon_user_id: String
   created_at: timestamptz
   id: uuid
   user_id: Int
}

"""
order by max() on columns of table "virtual_conference_announcement_button_clicks"
"""
input virtual_conference_announcement_button_clicks_max_order_by {
  announcement_id: order_by
  anon_user_id: order_by
  created_at: order_by
  id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type virtual_conference_announcement_button_clicks_min_fields {
   announcement_id: uuid
   anon_user_id: String
   created_at: timestamptz
   id: uuid
   user_id: Int
}

"""
order by min() on columns of table "virtual_conference_announcement_button_clicks"
"""
input virtual_conference_announcement_button_clicks_min_order_by {
  announcement_id: order_by
  anon_user_id: order_by
  created_at: order_by
  id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "virtual_conference_announcement_button_clicks"
"""
type virtual_conference_announcement_button_clicks_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_announcement_button_clicks! ]! 
}

"""
on_conflict condition type for table "virtual_conference_announcement_button_clicks"
"""
input virtual_conference_announcement_button_clicks_on_conflict {
  constraint: virtual_conference_announcement_button_clicks_constraint! 
  update_columns: [virtual_conference_announcement_button_clicks_update_column! ]! 
  where: virtual_conference_announcement_button_clicks_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_announcement_button_clicks".
"""
input virtual_conference_announcement_button_clicks_order_by {
  announcement: virtual_conference_announcements_order_by
  announcement_id: order_by
  anon_user_id: order_by
  created_at: order_by
  id: order_by
  user_id: order_by
}

"""
primary key columns input for table: virtual_conference_announcement_button_clicks
"""
input virtual_conference_announcement_button_clicks_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "virtual_conference_announcement_button_clicks"
"""
enum virtual_conference_announcement_button_clicks_select_column {
  """column name"""
announcement_id
  """column name"""
anon_user_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_announcement_button_clicks"
"""
input virtual_conference_announcement_button_clicks_set_input {
  announcement_id: uuid
  anon_user_id: String
  created_at: timestamptz
  id: uuid
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_announcement_button_clicks_stddev_fields {
   user_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_announcement_button_clicks"
"""
input virtual_conference_announcement_button_clicks_stddev_order_by {
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_announcement_button_clicks_stddev_pop_fields {
   user_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_announcement_button_clicks"
"""
input virtual_conference_announcement_button_clicks_stddev_pop_order_by {
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_announcement_button_clicks_stddev_samp_fields {
   user_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_announcement_button_clicks"
"""
input virtual_conference_announcement_button_clicks_stddev_samp_order_by {
  user_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_announcement_button_clicks"
"""
input virtual_conference_announcement_button_clicks_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_announcement_button_clicks_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_announcement_button_clicks_stream_cursor_value_input {
  announcement_id: uuid
  anon_user_id: String
  created_at: timestamptz
  id: uuid
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_announcement_button_clicks_sum_fields {
   user_id: Int
}

"""
order by sum() on columns of table "virtual_conference_announcement_button_clicks"
"""
input virtual_conference_announcement_button_clicks_sum_order_by {
  user_id: order_by
}

"""
update columns of table "virtual_conference_announcement_button_clicks"
"""
enum virtual_conference_announcement_button_clicks_update_column {
  """column name"""
announcement_id
  """column name"""
anon_user_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
user_id
}

input virtual_conference_announcement_button_clicks_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_announcement_button_clicks_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_announcement_button_clicks_set_input
  where: virtual_conference_announcement_button_clicks_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_announcement_button_clicks_var_pop_fields {
   user_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_announcement_button_clicks"
"""
input virtual_conference_announcement_button_clicks_var_pop_order_by {
  user_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_announcement_button_clicks_var_samp_fields {
   user_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_announcement_button_clicks"
"""
input virtual_conference_announcement_button_clicks_var_samp_order_by {
  user_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_announcement_button_clicks_variance_fields {
   user_id: Float
}

"""
order by variance() on columns of table "virtual_conference_announcement_button_clicks"
"""
input virtual_conference_announcement_button_clicks_variance_order_by {
  user_id: order_by
}

"""
columns and relationships of "virtual_conference_announcement_dismissals"
"""
type virtual_conference_announcement_dismissals {
  """An object relationship"""
 announcement: virtual_conference_announcements
   announcement_id: uuid! 
   anon_user_id: String
   created_at: timestamptz! 
   id: uuid! 
   user_id: Int! 
}

"""
aggregated selection of "virtual_conference_announcement_dismissals"
"""
type virtual_conference_announcement_dismissals_aggregate {
   aggregate: virtual_conference_announcement_dismissals_aggregate_fields
   nodes: [virtual_conference_announcement_dismissals! ]! 
}

input virtual_conference_announcement_dismissals_aggregate_bool_exp {
  count: virtual_conference_announcement_dismissals_aggregate_bool_exp_count
}

input virtual_conference_announcement_dismissals_aggregate_bool_exp_count {
  arguments: [virtual_conference_announcement_dismissals_select_column! ]
  distinct: Boolean
  filter: virtual_conference_announcement_dismissals_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_announcement_dismissals"
"""
type virtual_conference_announcement_dismissals_aggregate_fields {
   avg: virtual_conference_announcement_dismissals_avg_fields
   count(columns: [virtual_conference_announcement_dismissals_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_announcement_dismissals_max_fields
   min: virtual_conference_announcement_dismissals_min_fields
   stddev: virtual_conference_announcement_dismissals_stddev_fields
   stddev_pop: virtual_conference_announcement_dismissals_stddev_pop_fields
   stddev_samp: virtual_conference_announcement_dismissals_stddev_samp_fields
   sum: virtual_conference_announcement_dismissals_sum_fields
   var_pop: virtual_conference_announcement_dismissals_var_pop_fields
   var_samp: virtual_conference_announcement_dismissals_var_samp_fields
   variance: virtual_conference_announcement_dismissals_variance_fields
}

"""
order by aggregate values of table "virtual_conference_announcement_dismissals"
"""
input virtual_conference_announcement_dismissals_aggregate_order_by {
  avg: virtual_conference_announcement_dismissals_avg_order_by
  count: order_by
  max: virtual_conference_announcement_dismissals_max_order_by
  min: virtual_conference_announcement_dismissals_min_order_by
  stddev: virtual_conference_announcement_dismissals_stddev_order_by
  stddev_pop: virtual_conference_announcement_dismissals_stddev_pop_order_by
  stddev_samp: virtual_conference_announcement_dismissals_stddev_samp_order_by
  sum: virtual_conference_announcement_dismissals_sum_order_by
  var_pop: virtual_conference_announcement_dismissals_var_pop_order_by
  var_samp: virtual_conference_announcement_dismissals_var_samp_order_by
  variance: virtual_conference_announcement_dismissals_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_announcement_dismissals"
"""
input virtual_conference_announcement_dismissals_arr_rel_insert_input {
  data: [virtual_conference_announcement_dismissals_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_announcement_dismissals_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_announcement_dismissals_avg_fields {
   user_id: Float
}

"""
order by avg() on columns of table "virtual_conference_announcement_dismissals"
"""
input virtual_conference_announcement_dismissals_avg_order_by {
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_announcement_dismissals". All fields are combined with a logical 'AND'.
"""
input virtual_conference_announcement_dismissals_bool_exp {
  _and: [virtual_conference_announcement_dismissals_bool_exp! ]
  _not: virtual_conference_announcement_dismissals_bool_exp
  _or: [virtual_conference_announcement_dismissals_bool_exp! ]
  announcement: virtual_conference_announcements_bool_exp
  announcement_id: uuid_comparison_exp
  anon_user_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_announcement_dismissals"
"""
enum virtual_conference_announcement_dismissals_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_announcement_dismissals_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_announcement_dismissals"
"""
input virtual_conference_announcement_dismissals_inc_input {
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_announcement_dismissals"
"""
input virtual_conference_announcement_dismissals_insert_input {
  announcement: virtual_conference_announcements_obj_rel_insert_input
  announcement_id: uuid! 
  anon_user_id: String
  created_at: timestamptz! 
  id: uuid! 
  user_id: Int! 
}

"""aggregate max on columns"""
type virtual_conference_announcement_dismissals_max_fields {
   announcement_id: uuid
   anon_user_id: String
   created_at: timestamptz
   id: uuid
   user_id: Int
}

"""
order by max() on columns of table "virtual_conference_announcement_dismissals"
"""
input virtual_conference_announcement_dismissals_max_order_by {
  announcement_id: order_by
  anon_user_id: order_by
  created_at: order_by
  id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type virtual_conference_announcement_dismissals_min_fields {
   announcement_id: uuid
   anon_user_id: String
   created_at: timestamptz
   id: uuid
   user_id: Int
}

"""
order by min() on columns of table "virtual_conference_announcement_dismissals"
"""
input virtual_conference_announcement_dismissals_min_order_by {
  announcement_id: order_by
  anon_user_id: order_by
  created_at: order_by
  id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "virtual_conference_announcement_dismissals"
"""
type virtual_conference_announcement_dismissals_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_announcement_dismissals! ]! 
}

"""
on_conflict condition type for table "virtual_conference_announcement_dismissals"
"""
input virtual_conference_announcement_dismissals_on_conflict {
  constraint: virtual_conference_announcement_dismissals_constraint! 
  update_columns: [virtual_conference_announcement_dismissals_update_column! ]! 
  where: virtual_conference_announcement_dismissals_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_announcement_dismissals".
"""
input virtual_conference_announcement_dismissals_order_by {
  announcement: virtual_conference_announcements_order_by
  announcement_id: order_by
  anon_user_id: order_by
  created_at: order_by
  id: order_by
  user_id: order_by
}

"""
primary key columns input for table: virtual_conference_announcement_dismissals
"""
input virtual_conference_announcement_dismissals_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "virtual_conference_announcement_dismissals"
"""
enum virtual_conference_announcement_dismissals_select_column {
  """column name"""
announcement_id
  """column name"""
anon_user_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_announcement_dismissals"
"""
input virtual_conference_announcement_dismissals_set_input {
  announcement_id: uuid
  anon_user_id: String
  created_at: timestamptz
  id: uuid
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_announcement_dismissals_stddev_fields {
   user_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_announcement_dismissals"
"""
input virtual_conference_announcement_dismissals_stddev_order_by {
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_announcement_dismissals_stddev_pop_fields {
   user_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_announcement_dismissals"
"""
input virtual_conference_announcement_dismissals_stddev_pop_order_by {
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_announcement_dismissals_stddev_samp_fields {
   user_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_announcement_dismissals"
"""
input virtual_conference_announcement_dismissals_stddev_samp_order_by {
  user_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_announcement_dismissals"
"""
input virtual_conference_announcement_dismissals_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_announcement_dismissals_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_announcement_dismissals_stream_cursor_value_input {
  announcement_id: uuid
  anon_user_id: String
  created_at: timestamptz
  id: uuid
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_announcement_dismissals_sum_fields {
   user_id: Int
}

"""
order by sum() on columns of table "virtual_conference_announcement_dismissals"
"""
input virtual_conference_announcement_dismissals_sum_order_by {
  user_id: order_by
}

"""
update columns of table "virtual_conference_announcement_dismissals"
"""
enum virtual_conference_announcement_dismissals_update_column {
  """column name"""
announcement_id
  """column name"""
anon_user_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
user_id
}

input virtual_conference_announcement_dismissals_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_announcement_dismissals_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_announcement_dismissals_set_input
  where: virtual_conference_announcement_dismissals_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_announcement_dismissals_var_pop_fields {
   user_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_announcement_dismissals"
"""
input virtual_conference_announcement_dismissals_var_pop_order_by {
  user_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_announcement_dismissals_var_samp_fields {
   user_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_announcement_dismissals"
"""
input virtual_conference_announcement_dismissals_var_samp_order_by {
  user_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_announcement_dismissals_variance_fields {
   user_id: Float
}

"""
order by variance() on columns of table "virtual_conference_announcement_dismissals"
"""
input virtual_conference_announcement_dismissals_variance_order_by {
  user_id: order_by
}

"""
columns and relationships of "virtual_conference_announcement_views"
"""
type virtual_conference_announcement_views {
  """An object relationship"""
 announcement: virtual_conference_announcements
   announcement_id: uuid! 
   anon_user_id: String
   created_at: timestamptz! 
   id: uuid! 
   user_id: Int! 
}

"""
aggregated selection of "virtual_conference_announcement_views"
"""
type virtual_conference_announcement_views_aggregate {
   aggregate: virtual_conference_announcement_views_aggregate_fields
   nodes: [virtual_conference_announcement_views! ]! 
}

input virtual_conference_announcement_views_aggregate_bool_exp {
  count: virtual_conference_announcement_views_aggregate_bool_exp_count
}

input virtual_conference_announcement_views_aggregate_bool_exp_count {
  arguments: [virtual_conference_announcement_views_select_column! ]
  distinct: Boolean
  filter: virtual_conference_announcement_views_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_announcement_views"
"""
type virtual_conference_announcement_views_aggregate_fields {
   avg: virtual_conference_announcement_views_avg_fields
   count(columns: [virtual_conference_announcement_views_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_announcement_views_max_fields
   min: virtual_conference_announcement_views_min_fields
   stddev: virtual_conference_announcement_views_stddev_fields
   stddev_pop: virtual_conference_announcement_views_stddev_pop_fields
   stddev_samp: virtual_conference_announcement_views_stddev_samp_fields
   sum: virtual_conference_announcement_views_sum_fields
   var_pop: virtual_conference_announcement_views_var_pop_fields
   var_samp: virtual_conference_announcement_views_var_samp_fields
   variance: virtual_conference_announcement_views_variance_fields
}

"""
order by aggregate values of table "virtual_conference_announcement_views"
"""
input virtual_conference_announcement_views_aggregate_order_by {
  avg: virtual_conference_announcement_views_avg_order_by
  count: order_by
  max: virtual_conference_announcement_views_max_order_by
  min: virtual_conference_announcement_views_min_order_by
  stddev: virtual_conference_announcement_views_stddev_order_by
  stddev_pop: virtual_conference_announcement_views_stddev_pop_order_by
  stddev_samp: virtual_conference_announcement_views_stddev_samp_order_by
  sum: virtual_conference_announcement_views_sum_order_by
  var_pop: virtual_conference_announcement_views_var_pop_order_by
  var_samp: virtual_conference_announcement_views_var_samp_order_by
  variance: virtual_conference_announcement_views_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_announcement_views"
"""
input virtual_conference_announcement_views_arr_rel_insert_input {
  data: [virtual_conference_announcement_views_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_announcement_views_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_announcement_views_avg_fields {
   user_id: Float
}

"""
order by avg() on columns of table "virtual_conference_announcement_views"
"""
input virtual_conference_announcement_views_avg_order_by {
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_announcement_views". All fields are combined with a logical 'AND'.
"""
input virtual_conference_announcement_views_bool_exp {
  _and: [virtual_conference_announcement_views_bool_exp! ]
  _not: virtual_conference_announcement_views_bool_exp
  _or: [virtual_conference_announcement_views_bool_exp! ]
  announcement: virtual_conference_announcements_bool_exp
  announcement_id: uuid_comparison_exp
  anon_user_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_announcement_views"
"""
enum virtual_conference_announcement_views_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_announcement_views_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_announcement_views"
"""
input virtual_conference_announcement_views_inc_input {
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_announcement_views"
"""
input virtual_conference_announcement_views_insert_input {
  announcement: virtual_conference_announcements_obj_rel_insert_input
  announcement_id: uuid! 
  anon_user_id: String
  created_at: timestamptz! 
  id: uuid! 
  user_id: Int! 
}

"""aggregate max on columns"""
type virtual_conference_announcement_views_max_fields {
   announcement_id: uuid
   anon_user_id: String
   created_at: timestamptz
   id: uuid
   user_id: Int
}

"""
order by max() on columns of table "virtual_conference_announcement_views"
"""
input virtual_conference_announcement_views_max_order_by {
  announcement_id: order_by
  anon_user_id: order_by
  created_at: order_by
  id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type virtual_conference_announcement_views_min_fields {
   announcement_id: uuid
   anon_user_id: String
   created_at: timestamptz
   id: uuid
   user_id: Int
}

"""
order by min() on columns of table "virtual_conference_announcement_views"
"""
input virtual_conference_announcement_views_min_order_by {
  announcement_id: order_by
  anon_user_id: order_by
  created_at: order_by
  id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "virtual_conference_announcement_views"
"""
type virtual_conference_announcement_views_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_announcement_views! ]! 
}

"""
on_conflict condition type for table "virtual_conference_announcement_views"
"""
input virtual_conference_announcement_views_on_conflict {
  constraint: virtual_conference_announcement_views_constraint! 
  update_columns: [virtual_conference_announcement_views_update_column! ]! 
  where: virtual_conference_announcement_views_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_announcement_views".
"""
input virtual_conference_announcement_views_order_by {
  announcement: virtual_conference_announcements_order_by
  announcement_id: order_by
  anon_user_id: order_by
  created_at: order_by
  id: order_by
  user_id: order_by
}

"""
primary key columns input for table: virtual_conference_announcement_views
"""
input virtual_conference_announcement_views_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "virtual_conference_announcement_views"
"""
enum virtual_conference_announcement_views_select_column {
  """column name"""
announcement_id
  """column name"""
anon_user_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_announcement_views"
"""
input virtual_conference_announcement_views_set_input {
  announcement_id: uuid
  anon_user_id: String
  created_at: timestamptz
  id: uuid
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_announcement_views_stddev_fields {
   user_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_announcement_views"
"""
input virtual_conference_announcement_views_stddev_order_by {
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_announcement_views_stddev_pop_fields {
   user_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_announcement_views"
"""
input virtual_conference_announcement_views_stddev_pop_order_by {
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_announcement_views_stddev_samp_fields {
   user_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_announcement_views"
"""
input virtual_conference_announcement_views_stddev_samp_order_by {
  user_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_announcement_views"
"""
input virtual_conference_announcement_views_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_announcement_views_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_announcement_views_stream_cursor_value_input {
  announcement_id: uuid
  anon_user_id: String
  created_at: timestamptz
  id: uuid
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_announcement_views_sum_fields {
   user_id: Int
}

"""
order by sum() on columns of table "virtual_conference_announcement_views"
"""
input virtual_conference_announcement_views_sum_order_by {
  user_id: order_by
}

"""
update columns of table "virtual_conference_announcement_views"
"""
enum virtual_conference_announcement_views_update_column {
  """column name"""
announcement_id
  """column name"""
anon_user_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
user_id
}

input virtual_conference_announcement_views_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_announcement_views_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_announcement_views_set_input
  where: virtual_conference_announcement_views_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_announcement_views_var_pop_fields {
   user_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_announcement_views"
"""
input virtual_conference_announcement_views_var_pop_order_by {
  user_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_announcement_views_var_samp_fields {
   user_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_announcement_views"
"""
input virtual_conference_announcement_views_var_samp_order_by {
  user_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_announcement_views_variance_fields {
   user_id: Float
}

"""
order by variance() on columns of table "virtual_conference_announcement_views"
"""
input virtual_conference_announcement_views_variance_order_by {
  user_id: order_by
}

"""
columns and relationships of "virtual_conference_announcements"
"""
type virtual_conference_announcements {
   announcement: String! 
  """An array relationship"""
 button_clicks("""distinct select on columns"""
distinct_on: [virtual_conference_announcement_button_clicks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_announcement_button_clicks_order_by! ], """filter the rows returned"""
where: virtual_conference_announcement_button_clicks_bool_exp): [virtual_conference_announcement_button_clicks! ]! 
  """An aggregate relationship"""
 button_clicks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_announcement_button_clicks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_announcement_button_clicks_order_by! ], """filter the rows returned"""
where: virtual_conference_announcement_button_clicks_bool_exp): virtual_conference_announcement_button_clicks_aggregate! 
   button_copy: String! 
   button_link: String! 
   created_at: timestamptz! 
   deleted: Boolean! 
  """An array relationship"""
 dismissals("""distinct select on columns"""
distinct_on: [virtual_conference_announcement_dismissals_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_announcement_dismissals_order_by! ], """filter the rows returned"""
where: virtual_conference_announcement_dismissals_bool_exp): [virtual_conference_announcement_dismissals! ]! 
  """An aggregate relationship"""
 dismissals_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_announcement_dismissals_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_announcement_dismissals_order_by! ], """filter the rows returned"""
where: virtual_conference_announcement_dismissals_bool_exp): virtual_conference_announcement_dismissals_aggregate! 
   event_id: Int! 
   expires_at: timestamptz
   id: uuid! 
   minutes_visible: Int! 
   scheduled: Boolean! 
   scheduled_at: timestamp
   shows_at: timestamptz
   timezone: String
   updated_at: timestamptz! 
   user_id: Int! 
  """An array relationship"""
 views("""distinct select on columns"""
distinct_on: [virtual_conference_announcement_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_announcement_views_order_by! ], """filter the rows returned"""
where: virtual_conference_announcement_views_bool_exp): [virtual_conference_announcement_views! ]! 
  """An aggregate relationship"""
 views_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_announcement_views_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_announcement_views_order_by! ], """filter the rows returned"""
where: virtual_conference_announcement_views_bool_exp): virtual_conference_announcement_views_aggregate! 
}

"""
aggregated selection of "virtual_conference_announcements"
"""
type virtual_conference_announcements_aggregate {
   aggregate: virtual_conference_announcements_aggregate_fields
   nodes: [virtual_conference_announcements! ]! 
}

"""
aggregate fields of "virtual_conference_announcements"
"""
type virtual_conference_announcements_aggregate_fields {
   avg: virtual_conference_announcements_avg_fields
   count(columns: [virtual_conference_announcements_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_announcements_max_fields
   min: virtual_conference_announcements_min_fields
   stddev: virtual_conference_announcements_stddev_fields
   stddev_pop: virtual_conference_announcements_stddev_pop_fields
   stddev_samp: virtual_conference_announcements_stddev_samp_fields
   sum: virtual_conference_announcements_sum_fields
   var_pop: virtual_conference_announcements_var_pop_fields
   var_samp: virtual_conference_announcements_var_samp_fields
   variance: virtual_conference_announcements_variance_fields
}

"""aggregate avg on columns"""
type virtual_conference_announcements_avg_fields {
   event_id: Float
   minutes_visible: Float
   user_id: Float
}

"""
Boolean expression to filter rows from the table "virtual_conference_announcements". All fields are combined with a logical 'AND'.
"""
input virtual_conference_announcements_bool_exp {
  _and: [virtual_conference_announcements_bool_exp! ]
  _not: virtual_conference_announcements_bool_exp
  _or: [virtual_conference_announcements_bool_exp! ]
  announcement: String_comparison_exp
  button_clicks: virtual_conference_announcement_button_clicks_bool_exp
  button_clicks_aggregate: virtual_conference_announcement_button_clicks_aggregate_bool_exp
  button_copy: String_comparison_exp
  button_link: String_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted: Boolean_comparison_exp
  dismissals: virtual_conference_announcement_dismissals_bool_exp
  dismissals_aggregate: virtual_conference_announcement_dismissals_aggregate_bool_exp
  event_id: Int_comparison_exp
  expires_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  minutes_visible: Int_comparison_exp
  scheduled: Boolean_comparison_exp
  scheduled_at: timestamp_comparison_exp
  shows_at: timestamptz_comparison_exp
  timezone: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  user_id: Int_comparison_exp
  views: virtual_conference_announcement_views_bool_exp
  views_aggregate: virtual_conference_announcement_views_aggregate_bool_exp
}

"""
unique or primary key constraints on table "virtual_conference_announcements"
"""
enum virtual_conference_announcements_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_announcements_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_announcements"
"""
input virtual_conference_announcements_inc_input {
  event_id: Int
  minutes_visible: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_announcements"
"""
input virtual_conference_announcements_insert_input {
  announcement: String! 
  button_clicks: virtual_conference_announcement_button_clicks_arr_rel_insert_input
  button_copy: String! 
  button_link: String! 
  created_at: timestamptz! 
  deleted: Boolean! 
  dismissals: virtual_conference_announcement_dismissals_arr_rel_insert_input
  event_id: Int! 
  expires_at: timestamptz
  id: uuid! 
  minutes_visible: Int! 
  scheduled: Boolean! 
  scheduled_at: timestamp
  shows_at: timestamptz
  timezone: String
  updated_at: timestamptz! 
  user_id: Int! 
  views: virtual_conference_announcement_views_arr_rel_insert_input
}

"""aggregate max on columns"""
type virtual_conference_announcements_max_fields {
   announcement: String
   button_copy: String
   button_link: String
   created_at: timestamptz
   event_id: Int
   expires_at: timestamptz
   id: uuid
   minutes_visible: Int
   scheduled_at: timestamp
   shows_at: timestamptz
   timezone: String
   updated_at: timestamptz
   user_id: Int
}

"""aggregate min on columns"""
type virtual_conference_announcements_min_fields {
   announcement: String
   button_copy: String
   button_link: String
   created_at: timestamptz
   event_id: Int
   expires_at: timestamptz
   id: uuid
   minutes_visible: Int
   scheduled_at: timestamp
   shows_at: timestamptz
   timezone: String
   updated_at: timestamptz
   user_id: Int
}

"""
response of any mutation on the table "virtual_conference_announcements"
"""
type virtual_conference_announcements_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_announcements! ]! 
}

"""
input type for inserting object relation for remote table "virtual_conference_announcements"
"""
input virtual_conference_announcements_obj_rel_insert_input {
  data: virtual_conference_announcements_insert_input! 
  """upsert condition"""
on_conflict: virtual_conference_announcements_on_conflict
}

"""
on_conflict condition type for table "virtual_conference_announcements"
"""
input virtual_conference_announcements_on_conflict {
  constraint: virtual_conference_announcements_constraint! 
  update_columns: [virtual_conference_announcements_update_column! ]! 
  where: virtual_conference_announcements_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_announcements".
"""
input virtual_conference_announcements_order_by {
  announcement: order_by
  button_clicks_aggregate: virtual_conference_announcement_button_clicks_aggregate_order_by
  button_copy: order_by
  button_link: order_by
  created_at: order_by
  deleted: order_by
  dismissals_aggregate: virtual_conference_announcement_dismissals_aggregate_order_by
  event_id: order_by
  expires_at: order_by
  id: order_by
  minutes_visible: order_by
  scheduled: order_by
  scheduled_at: order_by
  shows_at: order_by
  timezone: order_by
  updated_at: order_by
  user_id: order_by
  views_aggregate: virtual_conference_announcement_views_aggregate_order_by
}

"""primary key columns input for table: virtual_conference_announcements"""
input virtual_conference_announcements_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "virtual_conference_announcements"
"""
enum virtual_conference_announcements_select_column {
  """column name"""
announcement
  """column name"""
button_copy
  """column name"""
button_link
  """column name"""
created_at
  """column name"""
deleted
  """column name"""
event_id
  """column name"""
expires_at
  """column name"""
id
  """column name"""
minutes_visible
  """column name"""
scheduled
  """column name"""
scheduled_at
  """column name"""
shows_at
  """column name"""
timezone
  """column name"""
updated_at
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_announcements"
"""
input virtual_conference_announcements_set_input {
  announcement: String
  button_copy: String
  button_link: String
  created_at: timestamptz
  deleted: Boolean
  event_id: Int
  expires_at: timestamptz
  id: uuid
  minutes_visible: Int
  scheduled: Boolean
  scheduled_at: timestamp
  shows_at: timestamptz
  timezone: String
  updated_at: timestamptz
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_announcements_stddev_fields {
   event_id: Float
   minutes_visible: Float
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type virtual_conference_announcements_stddev_pop_fields {
   event_id: Float
   minutes_visible: Float
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type virtual_conference_announcements_stddev_samp_fields {
   event_id: Float
   minutes_visible: Float
   user_id: Float
}

"""
Streaming cursor of the table "virtual_conference_announcements"
"""
input virtual_conference_announcements_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_announcements_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_announcements_stream_cursor_value_input {
  announcement: String
  button_copy: String
  button_link: String
  created_at: timestamptz
  deleted: Boolean
  event_id: Int
  expires_at: timestamptz
  id: uuid
  minutes_visible: Int
  scheduled: Boolean
  scheduled_at: timestamp
  shows_at: timestamptz
  timezone: String
  updated_at: timestamptz
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_announcements_sum_fields {
   event_id: Int
   minutes_visible: Int
   user_id: Int
}

"""
update columns of table "virtual_conference_announcements"
"""
enum virtual_conference_announcements_update_column {
  """column name"""
announcement
  """column name"""
button_copy
  """column name"""
button_link
  """column name"""
created_at
  """column name"""
deleted
  """column name"""
event_id
  """column name"""
expires_at
  """column name"""
id
  """column name"""
minutes_visible
  """column name"""
scheduled
  """column name"""
scheduled_at
  """column name"""
shows_at
  """column name"""
timezone
  """column name"""
updated_at
  """column name"""
user_id
}

input virtual_conference_announcements_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_announcements_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_announcements_set_input
  where: virtual_conference_announcements_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_announcements_var_pop_fields {
   event_id: Float
   minutes_visible: Float
   user_id: Float
}

"""aggregate var_samp on columns"""
type virtual_conference_announcements_var_samp_fields {
   event_id: Float
   minutes_visible: Float
   user_id: Float
}

"""aggregate variance on columns"""
type virtual_conference_announcements_variance_fields {
   event_id: Float
   minutes_visible: Float
   user_id: Float
}

"""
columns and relationships of "virtual_conference_average_session_view_count"
"""
type virtual_conference_average_session_view_count {
   avg: Int
   event_id: Int
}

"""
aggregated selection of "virtual_conference_average_session_view_count"
"""
type virtual_conference_average_session_view_count_aggregate {
   aggregate: virtual_conference_average_session_view_count_aggregate_fields
   nodes: [virtual_conference_average_session_view_count! ]! 
}

"""
aggregate fields of "virtual_conference_average_session_view_count"
"""
type virtual_conference_average_session_view_count_aggregate_fields {
   avg: virtual_conference_average_session_view_count_avg_fields
   count(columns: [virtual_conference_average_session_view_count_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_average_session_view_count_max_fields
   min: virtual_conference_average_session_view_count_min_fields
   stddev: virtual_conference_average_session_view_count_stddev_fields
   stddev_pop: virtual_conference_average_session_view_count_stddev_pop_fields
   stddev_samp: virtual_conference_average_session_view_count_stddev_samp_fields
   sum: virtual_conference_average_session_view_count_sum_fields
   var_pop: virtual_conference_average_session_view_count_var_pop_fields
   var_samp: virtual_conference_average_session_view_count_var_samp_fields
   variance: virtual_conference_average_session_view_count_variance_fields
}

"""aggregate avg on columns"""
type virtual_conference_average_session_view_count_avg_fields {
   avg: Float
   event_id: Float
}

"""
Boolean expression to filter rows from the table "virtual_conference_average_session_view_count". All fields are combined with a logical 'AND'.
"""
input virtual_conference_average_session_view_count_bool_exp {
  _and: [virtual_conference_average_session_view_count_bool_exp! ]
  _not: virtual_conference_average_session_view_count_bool_exp
  _or: [virtual_conference_average_session_view_count_bool_exp! ]
  avg: Int_comparison_exp
  event_id: Int_comparison_exp
}

"""aggregate max on columns"""
type virtual_conference_average_session_view_count_max_fields {
   avg: Int
   event_id: Int
}

"""aggregate min on columns"""
type virtual_conference_average_session_view_count_min_fields {
   avg: Int
   event_id: Int
}

"""
Ordering options when selecting data from "virtual_conference_average_session_view_count".
"""
input virtual_conference_average_session_view_count_order_by {
  avg: order_by
  event_id: order_by
}

"""
select columns of table "virtual_conference_average_session_view_count"
"""
enum virtual_conference_average_session_view_count_select_column {
  """column name"""
avg
  """column name"""
event_id
}

"""aggregate stddev on columns"""
type virtual_conference_average_session_view_count_stddev_fields {
   avg: Float
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type virtual_conference_average_session_view_count_stddev_pop_fields {
   avg: Float
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type virtual_conference_average_session_view_count_stddev_samp_fields {
   avg: Float
   event_id: Float
}

"""
Streaming cursor of the table "virtual_conference_average_session_view_count"
"""
input virtual_conference_average_session_view_count_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_average_session_view_count_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_average_session_view_count_stream_cursor_value_input {
  avg: Int
  event_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_average_session_view_count_sum_fields {
   avg: Int
   event_id: Int
}

"""aggregate var_pop on columns"""
type virtual_conference_average_session_view_count_var_pop_fields {
   avg: Float
   event_id: Float
}

"""aggregate var_samp on columns"""
type virtual_conference_average_session_view_count_var_samp_fields {
   avg: Float
   event_id: Float
}

"""aggregate variance on columns"""
type virtual_conference_average_session_view_count_variance_fields {
   avg: Float
   event_id: Float
}

"""The creator/admin of a chat group inviting someone to it"""
type virtual_conference_chat_group_invitations {
   created_at: timestamptz! 
   disinvited_at: timestamptz
   disinvited_by: Int
  """An object relationship"""
 group: virtual_conference_chat_groups! 
   group_id: uuid! 
   id: Int! 
  """An array relationship"""
 invitee("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): [users! ]! 
  """An aggregate relationship"""
 invitee_aggregate("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): users_aggregate! 
   invitee_id: Int! 
  """An array relationship"""
 inviter("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): [users! ]! 
  """An aggregate relationship"""
 inviter_aggregate("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): users_aggregate! 
  """An array relationship"""
 inviter_badge("""distinct select on columns"""
distinct_on: [virtual_conference_name_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_name_badge_order_by! ], """filter the rows returned"""
where: virtual_conference_name_badge_bool_exp): [virtual_conference_name_badge! ]! 
  """An aggregate relationship"""
 inviter_badge_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_name_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_name_badge_order_by! ], """filter the rows returned"""
where: virtual_conference_name_badge_bool_exp): virtual_conference_name_badge_aggregate! 
   inviter_id: Int! 
   seen: Boolean! 
   updated_at: timestamptz
}

"""
aggregated selection of "virtual_conference_chat_group_invitations"
"""
type virtual_conference_chat_group_invitations_aggregate {
   aggregate: virtual_conference_chat_group_invitations_aggregate_fields
   nodes: [virtual_conference_chat_group_invitations! ]! 
}

input virtual_conference_chat_group_invitations_aggregate_bool_exp {
  bool_and: virtual_conference_chat_group_invitations_aggregate_bool_exp_bool_and
  bool_or: virtual_conference_chat_group_invitations_aggregate_bool_exp_bool_or
  count: virtual_conference_chat_group_invitations_aggregate_bool_exp_count
}

input virtual_conference_chat_group_invitations_aggregate_bool_exp_bool_and {
  arguments: virtual_conference_chat_group_invitations_select_column_virtual_conference_chat_group_invitations_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: virtual_conference_chat_group_invitations_bool_exp
  predicate: Boolean_comparison_exp! 
}

input virtual_conference_chat_group_invitations_aggregate_bool_exp_bool_or {
  arguments: virtual_conference_chat_group_invitations_select_column_virtual_conference_chat_group_invitations_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: virtual_conference_chat_group_invitations_bool_exp
  predicate: Boolean_comparison_exp! 
}

input virtual_conference_chat_group_invitations_aggregate_bool_exp_count {
  arguments: [virtual_conference_chat_group_invitations_select_column! ]
  distinct: Boolean
  filter: virtual_conference_chat_group_invitations_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_chat_group_invitations"
"""
type virtual_conference_chat_group_invitations_aggregate_fields {
   avg: virtual_conference_chat_group_invitations_avg_fields
   count(columns: [virtual_conference_chat_group_invitations_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_chat_group_invitations_max_fields
   min: virtual_conference_chat_group_invitations_min_fields
   stddev: virtual_conference_chat_group_invitations_stddev_fields
   stddev_pop: virtual_conference_chat_group_invitations_stddev_pop_fields
   stddev_samp: virtual_conference_chat_group_invitations_stddev_samp_fields
   sum: virtual_conference_chat_group_invitations_sum_fields
   var_pop: virtual_conference_chat_group_invitations_var_pop_fields
   var_samp: virtual_conference_chat_group_invitations_var_samp_fields
   variance: virtual_conference_chat_group_invitations_variance_fields
}

"""
order by aggregate values of table "virtual_conference_chat_group_invitations"
"""
input virtual_conference_chat_group_invitations_aggregate_order_by {
  avg: virtual_conference_chat_group_invitations_avg_order_by
  count: order_by
  max: virtual_conference_chat_group_invitations_max_order_by
  min: virtual_conference_chat_group_invitations_min_order_by
  stddev: virtual_conference_chat_group_invitations_stddev_order_by
  stddev_pop: virtual_conference_chat_group_invitations_stddev_pop_order_by
  stddev_samp: virtual_conference_chat_group_invitations_stddev_samp_order_by
  sum: virtual_conference_chat_group_invitations_sum_order_by
  var_pop: virtual_conference_chat_group_invitations_var_pop_order_by
  var_samp: virtual_conference_chat_group_invitations_var_samp_order_by
  variance: virtual_conference_chat_group_invitations_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_chat_group_invitations"
"""
input virtual_conference_chat_group_invitations_arr_rel_insert_input {
  data: [virtual_conference_chat_group_invitations_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_chat_group_invitations_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_chat_group_invitations_avg_fields {
   disinvited_by: Float
   id: Float
   invitee_id: Float
   inviter_id: Float
}

"""
order by avg() on columns of table "virtual_conference_chat_group_invitations"
"""
input virtual_conference_chat_group_invitations_avg_order_by {
  disinvited_by: order_by
  id: order_by
  invitee_id: order_by
  inviter_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_chat_group_invitations". All fields are combined with a logical 'AND'.
"""
input virtual_conference_chat_group_invitations_bool_exp {
  _and: [virtual_conference_chat_group_invitations_bool_exp! ]
  _not: virtual_conference_chat_group_invitations_bool_exp
  _or: [virtual_conference_chat_group_invitations_bool_exp! ]
  created_at: timestamptz_comparison_exp
  disinvited_at: timestamptz_comparison_exp
  disinvited_by: Int_comparison_exp
  group: virtual_conference_chat_groups_bool_exp
  group_id: uuid_comparison_exp
  id: Int_comparison_exp
  invitee: users_bool_exp
  invitee_aggregate: users_aggregate_bool_exp
  invitee_id: Int_comparison_exp
  inviter: users_bool_exp
  inviter_aggregate: users_aggregate_bool_exp
  inviter_badge: virtual_conference_name_badge_bool_exp
  inviter_badge_aggregate: virtual_conference_name_badge_aggregate_bool_exp
  inviter_id: Int_comparison_exp
  seen: Boolean_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_chat_group_invitations"
"""
enum virtual_conference_chat_group_invitations_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_chat_group_invitations_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_chat_group_invitations"
"""
input virtual_conference_chat_group_invitations_inc_input {
  disinvited_by: Int
  id: Int
  invitee_id: Int
  inviter_id: Int
}

"""
input type for inserting data into table "virtual_conference_chat_group_invitations"
"""
input virtual_conference_chat_group_invitations_insert_input {
  created_at: timestamptz! 
  disinvited_at: timestamptz
  disinvited_by: Int
  group: virtual_conference_chat_groups_obj_rel_insert_input
  group_id: uuid! 
  id: Int! 
  invitee: users_arr_rel_insert_input
  invitee_id: Int! 
  inviter: users_arr_rel_insert_input
  inviter_badge: virtual_conference_name_badge_arr_rel_insert_input
  inviter_id: Int! 
  seen: Boolean! 
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type virtual_conference_chat_group_invitations_max_fields {
   created_at: timestamptz
   disinvited_at: timestamptz
   disinvited_by: Int
   group_id: uuid
   id: Int
   invitee_id: Int
   inviter_id: Int
   updated_at: timestamptz
}

"""
order by max() on columns of table "virtual_conference_chat_group_invitations"
"""
input virtual_conference_chat_group_invitations_max_order_by {
  created_at: order_by
  disinvited_at: order_by
  disinvited_by: order_by
  group_id: order_by
  id: order_by
  invitee_id: order_by
  inviter_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type virtual_conference_chat_group_invitations_min_fields {
   created_at: timestamptz
   disinvited_at: timestamptz
   disinvited_by: Int
   group_id: uuid
   id: Int
   invitee_id: Int
   inviter_id: Int
   updated_at: timestamptz
}

"""
order by min() on columns of table "virtual_conference_chat_group_invitations"
"""
input virtual_conference_chat_group_invitations_min_order_by {
  created_at: order_by
  disinvited_at: order_by
  disinvited_by: order_by
  group_id: order_by
  id: order_by
  invitee_id: order_by
  inviter_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "virtual_conference_chat_group_invitations"
"""
type virtual_conference_chat_group_invitations_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_chat_group_invitations! ]! 
}

"""
on_conflict condition type for table "virtual_conference_chat_group_invitations"
"""
input virtual_conference_chat_group_invitations_on_conflict {
  constraint: virtual_conference_chat_group_invitations_constraint! 
  update_columns: [virtual_conference_chat_group_invitations_update_column! ]! 
  where: virtual_conference_chat_group_invitations_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_chat_group_invitations".
"""
input virtual_conference_chat_group_invitations_order_by {
  created_at: order_by
  disinvited_at: order_by
  disinvited_by: order_by
  group: virtual_conference_chat_groups_order_by
  group_id: order_by
  id: order_by
  invitee_aggregate: users_aggregate_order_by
  invitee_id: order_by
  inviter_aggregate: users_aggregate_order_by
  inviter_badge_aggregate: virtual_conference_name_badge_aggregate_order_by
  inviter_id: order_by
  seen: order_by
  updated_at: order_by
}

"""
primary key columns input for table: virtual_conference_chat_group_invitations
"""
input virtual_conference_chat_group_invitations_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_chat_group_invitations"
"""
enum virtual_conference_chat_group_invitations_select_column {
  """column name"""
created_at
  """column name"""
disinvited_at
  """column name"""
disinvited_by
  """column name"""
group_id
  """column name"""
id
  """column name"""
invitee_id
  """column name"""
inviter_id
  """column name"""
seen
  """column name"""
updated_at
}

"""
select "virtual_conference_chat_group_invitations_aggregate_bool_exp_bool_and_arguments_columns" columns of table "virtual_conference_chat_group_invitations"
"""
enum virtual_conference_chat_group_invitations_select_column_virtual_conference_chat_group_invitations_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
seen
}

"""
select "virtual_conference_chat_group_invitations_aggregate_bool_exp_bool_or_arguments_columns" columns of table "virtual_conference_chat_group_invitations"
"""
enum virtual_conference_chat_group_invitations_select_column_virtual_conference_chat_group_invitations_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
seen
}

"""
input type for updating data in table "virtual_conference_chat_group_invitations"
"""
input virtual_conference_chat_group_invitations_set_input {
  created_at: timestamptz
  disinvited_at: timestamptz
  disinvited_by: Int
  group_id: uuid
  id: Int
  invitee_id: Int
  inviter_id: Int
  seen: Boolean
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type virtual_conference_chat_group_invitations_stddev_fields {
   disinvited_by: Float
   id: Float
   invitee_id: Float
   inviter_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_chat_group_invitations"
"""
input virtual_conference_chat_group_invitations_stddev_order_by {
  disinvited_by: order_by
  id: order_by
  invitee_id: order_by
  inviter_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_chat_group_invitations_stddev_pop_fields {
   disinvited_by: Float
   id: Float
   invitee_id: Float
   inviter_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_chat_group_invitations"
"""
input virtual_conference_chat_group_invitations_stddev_pop_order_by {
  disinvited_by: order_by
  id: order_by
  invitee_id: order_by
  inviter_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_chat_group_invitations_stddev_samp_fields {
   disinvited_by: Float
   id: Float
   invitee_id: Float
   inviter_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_chat_group_invitations"
"""
input virtual_conference_chat_group_invitations_stddev_samp_order_by {
  disinvited_by: order_by
  id: order_by
  invitee_id: order_by
  inviter_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_chat_group_invitations"
"""
input virtual_conference_chat_group_invitations_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_chat_group_invitations_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_chat_group_invitations_stream_cursor_value_input {
  created_at: timestamptz
  disinvited_at: timestamptz
  disinvited_by: Int
  group_id: uuid
  id: Int
  invitee_id: Int
  inviter_id: Int
  seen: Boolean
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type virtual_conference_chat_group_invitations_sum_fields {
   disinvited_by: Int
   id: Int
   invitee_id: Int
   inviter_id: Int
}

"""
order by sum() on columns of table "virtual_conference_chat_group_invitations"
"""
input virtual_conference_chat_group_invitations_sum_order_by {
  disinvited_by: order_by
  id: order_by
  invitee_id: order_by
  inviter_id: order_by
}

"""
update columns of table "virtual_conference_chat_group_invitations"
"""
enum virtual_conference_chat_group_invitations_update_column {
  """column name"""
created_at
  """column name"""
disinvited_at
  """column name"""
disinvited_by
  """column name"""
group_id
  """column name"""
id
  """column name"""
invitee_id
  """column name"""
inviter_id
  """column name"""
seen
  """column name"""
updated_at
}

input virtual_conference_chat_group_invitations_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_chat_group_invitations_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_chat_group_invitations_set_input
  where: virtual_conference_chat_group_invitations_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_chat_group_invitations_var_pop_fields {
   disinvited_by: Float
   id: Float
   invitee_id: Float
   inviter_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_chat_group_invitations"
"""
input virtual_conference_chat_group_invitations_var_pop_order_by {
  disinvited_by: order_by
  id: order_by
  invitee_id: order_by
  inviter_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_chat_group_invitations_var_samp_fields {
   disinvited_by: Float
   id: Float
   invitee_id: Float
   inviter_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_chat_group_invitations"
"""
input virtual_conference_chat_group_invitations_var_samp_order_by {
  disinvited_by: order_by
  id: order_by
  invitee_id: order_by
  inviter_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_chat_group_invitations_variance_fields {
   disinvited_by: Float
   id: Float
   invitee_id: Float
   inviter_id: Float
}

"""
order by variance() on columns of table "virtual_conference_chat_group_invitations"
"""
input virtual_conference_chat_group_invitations_variance_order_by {
  disinvited_by: order_by
  id: order_by
  invitee_id: order_by
  inviter_id: order_by
}

"""
When a virtual conference attendee reports a chat group for abusive language etc.
"""
type virtual_conference_chat_group_reports {
   created_at: timestamptz! 
  """An array relationship"""
 group("""distinct select on columns"""
distinct_on: [virtual_conference_chat_groups_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_groups_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_groups_bool_exp): [virtual_conference_chat_groups! ]! 
  """An aggregate relationship"""
 group_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_chat_groups_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_groups_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_groups_bool_exp): virtual_conference_chat_groups_aggregate! 
   group_id: uuid! 
   id: Int! 
  """An array relationship"""
 read_by("""distinct select on columns"""
distinct_on: [virtual_conference_chat_group_reports_read_by_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_group_reports_read_by_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_group_reports_read_by_bool_exp): [virtual_conference_chat_group_reports_read_by! ]! 
  """An aggregate relationship"""
 read_by_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_chat_group_reports_read_by_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_group_reports_read_by_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_group_reports_read_by_bool_exp): virtual_conference_chat_group_reports_read_by_aggregate! 
   reason: String
  """An array relationship"""
 user("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): [users! ]! 
  """An aggregate relationship"""
 user_aggregate("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): users_aggregate! 
   user_id: Int! 
}

"""
aggregated selection of "virtual_conference_chat_group_reports"
"""
type virtual_conference_chat_group_reports_aggregate {
   aggregate: virtual_conference_chat_group_reports_aggregate_fields
   nodes: [virtual_conference_chat_group_reports! ]! 
}

input virtual_conference_chat_group_reports_aggregate_bool_exp {
  count: virtual_conference_chat_group_reports_aggregate_bool_exp_count
}

input virtual_conference_chat_group_reports_aggregate_bool_exp_count {
  arguments: [virtual_conference_chat_group_reports_select_column! ]
  distinct: Boolean
  filter: virtual_conference_chat_group_reports_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_chat_group_reports"
"""
type virtual_conference_chat_group_reports_aggregate_fields {
   avg: virtual_conference_chat_group_reports_avg_fields
   count(columns: [virtual_conference_chat_group_reports_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_chat_group_reports_max_fields
   min: virtual_conference_chat_group_reports_min_fields
   stddev: virtual_conference_chat_group_reports_stddev_fields
   stddev_pop: virtual_conference_chat_group_reports_stddev_pop_fields
   stddev_samp: virtual_conference_chat_group_reports_stddev_samp_fields
   sum: virtual_conference_chat_group_reports_sum_fields
   var_pop: virtual_conference_chat_group_reports_var_pop_fields
   var_samp: virtual_conference_chat_group_reports_var_samp_fields
   variance: virtual_conference_chat_group_reports_variance_fields
}

"""
order by aggregate values of table "virtual_conference_chat_group_reports"
"""
input virtual_conference_chat_group_reports_aggregate_order_by {
  avg: virtual_conference_chat_group_reports_avg_order_by
  count: order_by
  max: virtual_conference_chat_group_reports_max_order_by
  min: virtual_conference_chat_group_reports_min_order_by
  stddev: virtual_conference_chat_group_reports_stddev_order_by
  stddev_pop: virtual_conference_chat_group_reports_stddev_pop_order_by
  stddev_samp: virtual_conference_chat_group_reports_stddev_samp_order_by
  sum: virtual_conference_chat_group_reports_sum_order_by
  var_pop: virtual_conference_chat_group_reports_var_pop_order_by
  var_samp: virtual_conference_chat_group_reports_var_samp_order_by
  variance: virtual_conference_chat_group_reports_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_chat_group_reports"
"""
input virtual_conference_chat_group_reports_arr_rel_insert_input {
  data: [virtual_conference_chat_group_reports_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_chat_group_reports_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_chat_group_reports_avg_fields {
   id: Float
   user_id: Float
}

"""
order by avg() on columns of table "virtual_conference_chat_group_reports"
"""
input virtual_conference_chat_group_reports_avg_order_by {
  id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_chat_group_reports". All fields are combined with a logical 'AND'.
"""
input virtual_conference_chat_group_reports_bool_exp {
  _and: [virtual_conference_chat_group_reports_bool_exp! ]
  _not: virtual_conference_chat_group_reports_bool_exp
  _or: [virtual_conference_chat_group_reports_bool_exp! ]
  created_at: timestamptz_comparison_exp
  group: virtual_conference_chat_groups_bool_exp
  group_aggregate: virtual_conference_chat_groups_aggregate_bool_exp
  group_id: uuid_comparison_exp
  id: Int_comparison_exp
  read_by: virtual_conference_chat_group_reports_read_by_bool_exp
  read_by_aggregate: virtual_conference_chat_group_reports_read_by_aggregate_bool_exp
  reason: String_comparison_exp
  user: users_bool_exp
  user_aggregate: users_aggregate_bool_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_chat_group_reports"
"""
enum virtual_conference_chat_group_reports_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_chat_group_reports_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_chat_group_reports"
"""
input virtual_conference_chat_group_reports_inc_input {
  id: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_chat_group_reports"
"""
input virtual_conference_chat_group_reports_insert_input {
  created_at: timestamptz! 
  group: virtual_conference_chat_groups_arr_rel_insert_input
  group_id: uuid! 
  id: Int! 
  read_by: virtual_conference_chat_group_reports_read_by_arr_rel_insert_input
  reason: String
  user: users_arr_rel_insert_input
  user_id: Int! 
}

"""aggregate max on columns"""
type virtual_conference_chat_group_reports_max_fields {
   created_at: timestamptz
   group_id: uuid
   id: Int
   reason: String
   user_id: Int
}

"""
order by max() on columns of table "virtual_conference_chat_group_reports"
"""
input virtual_conference_chat_group_reports_max_order_by {
  created_at: order_by
  group_id: order_by
  id: order_by
  reason: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type virtual_conference_chat_group_reports_min_fields {
   created_at: timestamptz
   group_id: uuid
   id: Int
   reason: String
   user_id: Int
}

"""
order by min() on columns of table "virtual_conference_chat_group_reports"
"""
input virtual_conference_chat_group_reports_min_order_by {
  created_at: order_by
  group_id: order_by
  id: order_by
  reason: order_by
  user_id: order_by
}

"""
response of any mutation on the table "virtual_conference_chat_group_reports"
"""
type virtual_conference_chat_group_reports_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_chat_group_reports! ]! 
}

"""
on_conflict condition type for table "virtual_conference_chat_group_reports"
"""
input virtual_conference_chat_group_reports_on_conflict {
  constraint: virtual_conference_chat_group_reports_constraint! 
  update_columns: [virtual_conference_chat_group_reports_update_column! ]! 
  where: virtual_conference_chat_group_reports_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_chat_group_reports".
"""
input virtual_conference_chat_group_reports_order_by {
  created_at: order_by
  group_aggregate: virtual_conference_chat_groups_aggregate_order_by
  group_id: order_by
  id: order_by
  read_by_aggregate: virtual_conference_chat_group_reports_read_by_aggregate_order_by
  reason: order_by
  user_aggregate: users_aggregate_order_by
  user_id: order_by
}

"""
primary key columns input for table: virtual_conference_chat_group_reports
"""
input virtual_conference_chat_group_reports_pk_columns_input {
  id: Int! 
}

"""Virtual conference chat group report notification read status"""
type virtual_conference_chat_group_reports_read_by {
   id: Int! 
   report_id: Int! 
   user_id: Int! 
}

"""
aggregated selection of "virtual_conference_chat_group_reports_read_by"
"""
type virtual_conference_chat_group_reports_read_by_aggregate {
   aggregate: virtual_conference_chat_group_reports_read_by_aggregate_fields
   nodes: [virtual_conference_chat_group_reports_read_by! ]! 
}

input virtual_conference_chat_group_reports_read_by_aggregate_bool_exp {
  count: virtual_conference_chat_group_reports_read_by_aggregate_bool_exp_count
}

input virtual_conference_chat_group_reports_read_by_aggregate_bool_exp_count {
  arguments: [virtual_conference_chat_group_reports_read_by_select_column! ]
  distinct: Boolean
  filter: virtual_conference_chat_group_reports_read_by_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_chat_group_reports_read_by"
"""
type virtual_conference_chat_group_reports_read_by_aggregate_fields {
   avg: virtual_conference_chat_group_reports_read_by_avg_fields
   count(columns: [virtual_conference_chat_group_reports_read_by_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_chat_group_reports_read_by_max_fields
   min: virtual_conference_chat_group_reports_read_by_min_fields
   stddev: virtual_conference_chat_group_reports_read_by_stddev_fields
   stddev_pop: virtual_conference_chat_group_reports_read_by_stddev_pop_fields
   stddev_samp: virtual_conference_chat_group_reports_read_by_stddev_samp_fields
   sum: virtual_conference_chat_group_reports_read_by_sum_fields
   var_pop: virtual_conference_chat_group_reports_read_by_var_pop_fields
   var_samp: virtual_conference_chat_group_reports_read_by_var_samp_fields
   variance: virtual_conference_chat_group_reports_read_by_variance_fields
}

"""
order by aggregate values of table "virtual_conference_chat_group_reports_read_by"
"""
input virtual_conference_chat_group_reports_read_by_aggregate_order_by {
  avg: virtual_conference_chat_group_reports_read_by_avg_order_by
  count: order_by
  max: virtual_conference_chat_group_reports_read_by_max_order_by
  min: virtual_conference_chat_group_reports_read_by_min_order_by
  stddev: virtual_conference_chat_group_reports_read_by_stddev_order_by
  stddev_pop: virtual_conference_chat_group_reports_read_by_stddev_pop_order_by
  stddev_samp: virtual_conference_chat_group_reports_read_by_stddev_samp_order_by
  sum: virtual_conference_chat_group_reports_read_by_sum_order_by
  var_pop: virtual_conference_chat_group_reports_read_by_var_pop_order_by
  var_samp: virtual_conference_chat_group_reports_read_by_var_samp_order_by
  variance: virtual_conference_chat_group_reports_read_by_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_chat_group_reports_read_by"
"""
input virtual_conference_chat_group_reports_read_by_arr_rel_insert_input {
  data: [virtual_conference_chat_group_reports_read_by_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_chat_group_reports_read_by_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_chat_group_reports_read_by_avg_fields {
   id: Float
   report_id: Float
   user_id: Float
}

"""
order by avg() on columns of table "virtual_conference_chat_group_reports_read_by"
"""
input virtual_conference_chat_group_reports_read_by_avg_order_by {
  id: order_by
  report_id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_chat_group_reports_read_by". All fields are combined with a logical 'AND'.
"""
input virtual_conference_chat_group_reports_read_by_bool_exp {
  _and: [virtual_conference_chat_group_reports_read_by_bool_exp! ]
  _not: virtual_conference_chat_group_reports_read_by_bool_exp
  _or: [virtual_conference_chat_group_reports_read_by_bool_exp! ]
  id: Int_comparison_exp
  report_id: Int_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_chat_group_reports_read_by"
"""
enum virtual_conference_chat_group_reports_read_by_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_chat_group_reports_read_by_pkey
  """
  unique or primary key constraint on columns "report_id", "user_id"
  """
virtual_conference_chat_group_reports_read_by_user_id_report_id
}

"""
input type for incrementing numeric columns in table "virtual_conference_chat_group_reports_read_by"
"""
input virtual_conference_chat_group_reports_read_by_inc_input {
  id: Int
  report_id: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_chat_group_reports_read_by"
"""
input virtual_conference_chat_group_reports_read_by_insert_input {
  id: Int! 
  report_id: Int! 
  user_id: Int! 
}

"""aggregate max on columns"""
type virtual_conference_chat_group_reports_read_by_max_fields {
   id: Int
   report_id: Int
   user_id: Int
}

"""
order by max() on columns of table "virtual_conference_chat_group_reports_read_by"
"""
input virtual_conference_chat_group_reports_read_by_max_order_by {
  id: order_by
  report_id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type virtual_conference_chat_group_reports_read_by_min_fields {
   id: Int
   report_id: Int
   user_id: Int
}

"""
order by min() on columns of table "virtual_conference_chat_group_reports_read_by"
"""
input virtual_conference_chat_group_reports_read_by_min_order_by {
  id: order_by
  report_id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "virtual_conference_chat_group_reports_read_by"
"""
type virtual_conference_chat_group_reports_read_by_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_chat_group_reports_read_by! ]! 
}

"""
on_conflict condition type for table "virtual_conference_chat_group_reports_read_by"
"""
input virtual_conference_chat_group_reports_read_by_on_conflict {
  constraint: virtual_conference_chat_group_reports_read_by_constraint! 
  update_columns: [virtual_conference_chat_group_reports_read_by_update_column! ]! 
  where: virtual_conference_chat_group_reports_read_by_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_chat_group_reports_read_by".
"""
input virtual_conference_chat_group_reports_read_by_order_by {
  id: order_by
  report_id: order_by
  user_id: order_by
}

"""
primary key columns input for table: virtual_conference_chat_group_reports_read_by
"""
input virtual_conference_chat_group_reports_read_by_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_chat_group_reports_read_by"
"""
enum virtual_conference_chat_group_reports_read_by_select_column {
  """column name"""
id
  """column name"""
report_id
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_chat_group_reports_read_by"
"""
input virtual_conference_chat_group_reports_read_by_set_input {
  id: Int
  report_id: Int
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_chat_group_reports_read_by_stddev_fields {
   id: Float
   report_id: Float
   user_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_chat_group_reports_read_by"
"""
input virtual_conference_chat_group_reports_read_by_stddev_order_by {
  id: order_by
  report_id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_chat_group_reports_read_by_stddev_pop_fields {
   id: Float
   report_id: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_chat_group_reports_read_by"
"""
input virtual_conference_chat_group_reports_read_by_stddev_pop_order_by {
  id: order_by
  report_id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_chat_group_reports_read_by_stddev_samp_fields {
   id: Float
   report_id: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_chat_group_reports_read_by"
"""
input virtual_conference_chat_group_reports_read_by_stddev_samp_order_by {
  id: order_by
  report_id: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_chat_group_reports_read_by"
"""
input virtual_conference_chat_group_reports_read_by_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_chat_group_reports_read_by_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_chat_group_reports_read_by_stream_cursor_value_input {
  id: Int
  report_id: Int
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_chat_group_reports_read_by_sum_fields {
   id: Int
   report_id: Int
   user_id: Int
}

"""
order by sum() on columns of table "virtual_conference_chat_group_reports_read_by"
"""
input virtual_conference_chat_group_reports_read_by_sum_order_by {
  id: order_by
  report_id: order_by
  user_id: order_by
}

"""
update columns of table "virtual_conference_chat_group_reports_read_by"
"""
enum virtual_conference_chat_group_reports_read_by_update_column {
  """column name"""
id
  """column name"""
report_id
  """column name"""
user_id
}

input virtual_conference_chat_group_reports_read_by_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_chat_group_reports_read_by_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_chat_group_reports_read_by_set_input
  where: virtual_conference_chat_group_reports_read_by_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_chat_group_reports_read_by_var_pop_fields {
   id: Float
   report_id: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_chat_group_reports_read_by"
"""
input virtual_conference_chat_group_reports_read_by_var_pop_order_by {
  id: order_by
  report_id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_chat_group_reports_read_by_var_samp_fields {
   id: Float
   report_id: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_chat_group_reports_read_by"
"""
input virtual_conference_chat_group_reports_read_by_var_samp_order_by {
  id: order_by
  report_id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_chat_group_reports_read_by_variance_fields {
   id: Float
   report_id: Float
   user_id: Float
}

"""
order by variance() on columns of table "virtual_conference_chat_group_reports_read_by"
"""
input virtual_conference_chat_group_reports_read_by_variance_order_by {
  id: order_by
  report_id: order_by
  user_id: order_by
}

"""
select columns of table "virtual_conference_chat_group_reports"
"""
enum virtual_conference_chat_group_reports_select_column {
  """column name"""
created_at
  """column name"""
group_id
  """column name"""
id
  """column name"""
reason
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_chat_group_reports"
"""
input virtual_conference_chat_group_reports_set_input {
  created_at: timestamptz
  group_id: uuid
  id: Int
  reason: String
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_chat_group_reports_stddev_fields {
   id: Float
   user_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_chat_group_reports"
"""
input virtual_conference_chat_group_reports_stddev_order_by {
  id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_chat_group_reports_stddev_pop_fields {
   id: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_chat_group_reports"
"""
input virtual_conference_chat_group_reports_stddev_pop_order_by {
  id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_chat_group_reports_stddev_samp_fields {
   id: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_chat_group_reports"
"""
input virtual_conference_chat_group_reports_stddev_samp_order_by {
  id: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_chat_group_reports"
"""
input virtual_conference_chat_group_reports_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_chat_group_reports_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_chat_group_reports_stream_cursor_value_input {
  created_at: timestamptz
  group_id: uuid
  id: Int
  reason: String
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_chat_group_reports_sum_fields {
   id: Int
   user_id: Int
}

"""
order by sum() on columns of table "virtual_conference_chat_group_reports"
"""
input virtual_conference_chat_group_reports_sum_order_by {
  id: order_by
  user_id: order_by
}

"""
update columns of table "virtual_conference_chat_group_reports"
"""
enum virtual_conference_chat_group_reports_update_column {
  """column name"""
created_at
  """column name"""
group_id
  """column name"""
id
  """column name"""
reason
  """column name"""
user_id
}

input virtual_conference_chat_group_reports_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_chat_group_reports_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_chat_group_reports_set_input
  where: virtual_conference_chat_group_reports_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_chat_group_reports_var_pop_fields {
   id: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_chat_group_reports"
"""
input virtual_conference_chat_group_reports_var_pop_order_by {
  id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_chat_group_reports_var_samp_fields {
   id: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_chat_group_reports"
"""
input virtual_conference_chat_group_reports_var_samp_order_by {
  id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_chat_group_reports_variance_fields {
   id: Float
   user_id: Float
}

"""
order by variance() on columns of table "virtual_conference_chat_group_reports"
"""
input virtual_conference_chat_group_reports_variance_order_by {
  id: order_by
  user_id: order_by
}

"""
columns and relationships of "virtual_conference_chat_groups"
"""
type virtual_conference_chat_groups {
  """An array relationship"""
 call_dismissals("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_dismissals_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_dismissals_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_dismissals_bool_exp): [virtual_conference_group_video_call_dismissals! ]! 
  """An aggregate relationship"""
 call_dismissals_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_dismissals_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_dismissals_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_dismissals_bool_exp): virtual_conference_group_video_call_dismissals_aggregate! 
  """An array relationship"""
 call_durations("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_durations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_durations_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_durations_bool_exp): [virtual_conference_group_video_call_durations! ]! 
  """An aggregate relationship"""
 call_durations_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_durations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_durations_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_durations_bool_exp): virtual_conference_group_video_call_durations_aggregate! 
  """An array relationship"""
 call_joins("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_joins_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_joins_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_joins_bool_exp): [virtual_conference_group_video_call_joins! ]! 
  """An aggregate relationship"""
 call_joins_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_joins_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_joins_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_joins_bool_exp): virtual_conference_group_video_call_joins_aggregate! 
   created_at: timestamptz! 
  """An object relationship"""
 creator: users! 
  """An array relationship"""
 creator_badge("""distinct select on columns"""
distinct_on: [virtual_conference_name_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_name_badge_order_by! ], """filter the rows returned"""
where: virtual_conference_name_badge_bool_exp): [virtual_conference_name_badge! ]! 
  """An aggregate relationship"""
 creator_badge_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_name_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_name_badge_order_by! ], """filter the rows returned"""
where: virtual_conference_name_badge_bool_exp): virtual_conference_name_badge_aggregate! 
  """An array relationship"""
 creator_event_blocks("""distinct select on columns"""
distinct_on: [virtual_conference_event_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_event_chat_blocks_bool_exp): [virtual_conference_event_chat_blocks! ]! 
  """An aggregate relationship"""
 creator_event_blocks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_event_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_event_chat_blocks_bool_exp): virtual_conference_event_chat_blocks_aggregate! 
   creator_id: Int! 
   daily_room_id: String
   daily_room_name: String
   daily_room_opened_at: timestamptz
   daily_room_opened_by: Int
   deleted: Boolean! 
   event_id: Int! 
  """An array relationship"""
 group_invitations("""distinct select on columns"""
distinct_on: [virtual_conference_chat_group_invitations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_group_invitations_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_group_invitations_bool_exp): [virtual_conference_chat_group_invitations! ]! 
  """An aggregate relationship"""
 group_invitations_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_chat_group_invitations_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_group_invitations_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_group_invitations_bool_exp): virtual_conference_chat_group_invitations_aggregate! 
   icon: String
   id: uuid! 
  """An array relationship"""
 messages("""distinct select on columns"""
distinct_on: [virtual_conference_group_chat_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_chat_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_group_chat_messages_bool_exp): [virtual_conference_group_chat_messages! ]! 
  """An aggregate relationship"""
 messages_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_group_chat_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_chat_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_group_chat_messages_bool_exp): virtual_conference_group_chat_messages_aggregate! 
   name: String! 
   private: Boolean! 
  """An array relationship"""
 reports("""distinct select on columns"""
distinct_on: [virtual_conference_chat_group_reports_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_group_reports_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_group_reports_bool_exp): [virtual_conference_chat_group_reports! ]! 
  """An aggregate relationship"""
 reports_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_chat_group_reports_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_group_reports_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_group_reports_bool_exp): virtual_conference_chat_group_reports_aggregate! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "virtual_conference_chat_groups"
"""
type virtual_conference_chat_groups_aggregate {
   aggregate: virtual_conference_chat_groups_aggregate_fields
   nodes: [virtual_conference_chat_groups! ]! 
}

input virtual_conference_chat_groups_aggregate_bool_exp {
  bool_and: virtual_conference_chat_groups_aggregate_bool_exp_bool_and
  bool_or: virtual_conference_chat_groups_aggregate_bool_exp_bool_or
  count: virtual_conference_chat_groups_aggregate_bool_exp_count
}

input virtual_conference_chat_groups_aggregate_bool_exp_bool_and {
  arguments: virtual_conference_chat_groups_select_column_virtual_conference_chat_groups_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: virtual_conference_chat_groups_bool_exp
  predicate: Boolean_comparison_exp! 
}

input virtual_conference_chat_groups_aggregate_bool_exp_bool_or {
  arguments: virtual_conference_chat_groups_select_column_virtual_conference_chat_groups_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: virtual_conference_chat_groups_bool_exp
  predicate: Boolean_comparison_exp! 
}

input virtual_conference_chat_groups_aggregate_bool_exp_count {
  arguments: [virtual_conference_chat_groups_select_column! ]
  distinct: Boolean
  filter: virtual_conference_chat_groups_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_chat_groups"
"""
type virtual_conference_chat_groups_aggregate_fields {
   avg: virtual_conference_chat_groups_avg_fields
   count(columns: [virtual_conference_chat_groups_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_chat_groups_max_fields
   min: virtual_conference_chat_groups_min_fields
   stddev: virtual_conference_chat_groups_stddev_fields
   stddev_pop: virtual_conference_chat_groups_stddev_pop_fields
   stddev_samp: virtual_conference_chat_groups_stddev_samp_fields
   sum: virtual_conference_chat_groups_sum_fields
   var_pop: virtual_conference_chat_groups_var_pop_fields
   var_samp: virtual_conference_chat_groups_var_samp_fields
   variance: virtual_conference_chat_groups_variance_fields
}

"""
order by aggregate values of table "virtual_conference_chat_groups"
"""
input virtual_conference_chat_groups_aggregate_order_by {
  avg: virtual_conference_chat_groups_avg_order_by
  count: order_by
  max: virtual_conference_chat_groups_max_order_by
  min: virtual_conference_chat_groups_min_order_by
  stddev: virtual_conference_chat_groups_stddev_order_by
  stddev_pop: virtual_conference_chat_groups_stddev_pop_order_by
  stddev_samp: virtual_conference_chat_groups_stddev_samp_order_by
  sum: virtual_conference_chat_groups_sum_order_by
  var_pop: virtual_conference_chat_groups_var_pop_order_by
  var_samp: virtual_conference_chat_groups_var_samp_order_by
  variance: virtual_conference_chat_groups_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_chat_groups"
"""
input virtual_conference_chat_groups_arr_rel_insert_input {
  data: [virtual_conference_chat_groups_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_chat_groups_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_chat_groups_avg_fields {
   creator_id: Float
   daily_room_opened_by: Float
   event_id: Float
}

"""
order by avg() on columns of table "virtual_conference_chat_groups"
"""
input virtual_conference_chat_groups_avg_order_by {
  creator_id: order_by
  daily_room_opened_by: order_by
  event_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_chat_groups". All fields are combined with a logical 'AND'.
"""
input virtual_conference_chat_groups_bool_exp {
  _and: [virtual_conference_chat_groups_bool_exp! ]
  _not: virtual_conference_chat_groups_bool_exp
  _or: [virtual_conference_chat_groups_bool_exp! ]
  call_dismissals: virtual_conference_group_video_call_dismissals_bool_exp
  call_dismissals_aggregate: virtual_conference_group_video_call_dismissals_aggregate_bool_exp
  call_durations: virtual_conference_group_video_call_durations_bool_exp
  call_durations_aggregate: virtual_conference_group_video_call_durations_aggregate_bool_exp
  call_joins: virtual_conference_group_video_call_joins_bool_exp
  call_joins_aggregate: virtual_conference_group_video_call_joins_aggregate_bool_exp
  created_at: timestamptz_comparison_exp
  creator: users_bool_exp
  creator_badge: virtual_conference_name_badge_bool_exp
  creator_badge_aggregate: virtual_conference_name_badge_aggregate_bool_exp
  creator_event_blocks: virtual_conference_event_chat_blocks_bool_exp
  creator_event_blocks_aggregate: virtual_conference_event_chat_blocks_aggregate_bool_exp
  creator_id: Int_comparison_exp
  daily_room_id: String_comparison_exp
  daily_room_name: String_comparison_exp
  daily_room_opened_at: timestamptz_comparison_exp
  daily_room_opened_by: Int_comparison_exp
  deleted: Boolean_comparison_exp
  event_id: Int_comparison_exp
  group_invitations: virtual_conference_chat_group_invitations_bool_exp
  group_invitations_aggregate: virtual_conference_chat_group_invitations_aggregate_bool_exp
  icon: String_comparison_exp
  id: uuid_comparison_exp
  messages: virtual_conference_group_chat_messages_bool_exp
  messages_aggregate: virtual_conference_group_chat_messages_aggregate_bool_exp
  name: String_comparison_exp
  private: Boolean_comparison_exp
  reports: virtual_conference_chat_group_reports_bool_exp
  reports_aggregate: virtual_conference_chat_group_reports_aggregate_bool_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_chat_groups"
"""
enum virtual_conference_chat_groups_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_chat_groups_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_chat_groups"
"""
input virtual_conference_chat_groups_inc_input {
  creator_id: Int
  daily_room_opened_by: Int
  event_id: Int
}

"""
input type for inserting data into table "virtual_conference_chat_groups"
"""
input virtual_conference_chat_groups_insert_input {
  call_dismissals: virtual_conference_group_video_call_dismissals_arr_rel_insert_input
  call_durations: virtual_conference_group_video_call_durations_arr_rel_insert_input
  call_joins: virtual_conference_group_video_call_joins_arr_rel_insert_input
  created_at: timestamptz! 
  creator: users_obj_rel_insert_input
  creator_badge: virtual_conference_name_badge_arr_rel_insert_input
  creator_event_blocks: virtual_conference_event_chat_blocks_arr_rel_insert_input
  creator_id: Int! 
  daily_room_id: String
  daily_room_name: String
  daily_room_opened_at: timestamptz
  daily_room_opened_by: Int
  deleted: Boolean! 
  event_id: Int! 
  group_invitations: virtual_conference_chat_group_invitations_arr_rel_insert_input
  icon: String
  id: uuid! 
  messages: virtual_conference_group_chat_messages_arr_rel_insert_input
  name: String! 
  private: Boolean! 
  reports: virtual_conference_chat_group_reports_arr_rel_insert_input
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type virtual_conference_chat_groups_max_fields {
   created_at: timestamptz
   creator_id: Int
   daily_room_id: String
   daily_room_name: String
   daily_room_opened_at: timestamptz
   daily_room_opened_by: Int
   event_id: Int
   icon: String
   id: uuid
   name: String
   updated_at: timestamptz
}

"""
order by max() on columns of table "virtual_conference_chat_groups"
"""
input virtual_conference_chat_groups_max_order_by {
  created_at: order_by
  creator_id: order_by
  daily_room_id: order_by
  daily_room_name: order_by
  daily_room_opened_at: order_by
  daily_room_opened_by: order_by
  event_id: order_by
  icon: order_by
  id: order_by
  name: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type virtual_conference_chat_groups_min_fields {
   created_at: timestamptz
   creator_id: Int
   daily_room_id: String
   daily_room_name: String
   daily_room_opened_at: timestamptz
   daily_room_opened_by: Int
   event_id: Int
   icon: String
   id: uuid
   name: String
   updated_at: timestamptz
}

"""
order by min() on columns of table "virtual_conference_chat_groups"
"""
input virtual_conference_chat_groups_min_order_by {
  created_at: order_by
  creator_id: order_by
  daily_room_id: order_by
  daily_room_name: order_by
  daily_room_opened_at: order_by
  daily_room_opened_by: order_by
  event_id: order_by
  icon: order_by
  id: order_by
  name: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "virtual_conference_chat_groups"
"""
type virtual_conference_chat_groups_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_chat_groups! ]! 
}

"""
input type for inserting object relation for remote table "virtual_conference_chat_groups"
"""
input virtual_conference_chat_groups_obj_rel_insert_input {
  data: virtual_conference_chat_groups_insert_input! 
  """upsert condition"""
on_conflict: virtual_conference_chat_groups_on_conflict
}

"""
on_conflict condition type for table "virtual_conference_chat_groups"
"""
input virtual_conference_chat_groups_on_conflict {
  constraint: virtual_conference_chat_groups_constraint! 
  update_columns: [virtual_conference_chat_groups_update_column! ]! 
  where: virtual_conference_chat_groups_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_chat_groups".
"""
input virtual_conference_chat_groups_order_by {
  call_dismissals_aggregate: virtual_conference_group_video_call_dismissals_aggregate_order_by
  call_durations_aggregate: virtual_conference_group_video_call_durations_aggregate_order_by
  call_joins_aggregate: virtual_conference_group_video_call_joins_aggregate_order_by
  created_at: order_by
  creator: users_order_by
  creator_badge_aggregate: virtual_conference_name_badge_aggregate_order_by
  creator_event_blocks_aggregate: virtual_conference_event_chat_blocks_aggregate_order_by
  creator_id: order_by
  daily_room_id: order_by
  daily_room_name: order_by
  daily_room_opened_at: order_by
  daily_room_opened_by: order_by
  deleted: order_by
  event_id: order_by
  group_invitations_aggregate: virtual_conference_chat_group_invitations_aggregate_order_by
  icon: order_by
  id: order_by
  messages_aggregate: virtual_conference_group_chat_messages_aggregate_order_by
  name: order_by
  private: order_by
  reports_aggregate: virtual_conference_chat_group_reports_aggregate_order_by
  updated_at: order_by
}

"""primary key columns input for table: virtual_conference_chat_groups"""
input virtual_conference_chat_groups_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "virtual_conference_chat_groups"
"""
enum virtual_conference_chat_groups_select_column {
  """column name"""
created_at
  """column name"""
creator_id
  """column name"""
daily_room_id
  """column name"""
daily_room_name
  """column name"""
daily_room_opened_at
  """column name"""
daily_room_opened_by
  """column name"""
deleted
  """column name"""
event_id
  """column name"""
icon
  """column name"""
id
  """column name"""
name
  """column name"""
private
  """column name"""
updated_at
}

"""
select "virtual_conference_chat_groups_aggregate_bool_exp_bool_and_arguments_columns" columns of table "virtual_conference_chat_groups"
"""
enum virtual_conference_chat_groups_select_column_virtual_conference_chat_groups_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
deleted
  """column name"""
private
}

"""
select "virtual_conference_chat_groups_aggregate_bool_exp_bool_or_arguments_columns" columns of table "virtual_conference_chat_groups"
"""
enum virtual_conference_chat_groups_select_column_virtual_conference_chat_groups_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
deleted
  """column name"""
private
}

"""
input type for updating data in table "virtual_conference_chat_groups"
"""
input virtual_conference_chat_groups_set_input {
  created_at: timestamptz
  creator_id: Int
  daily_room_id: String
  daily_room_name: String
  daily_room_opened_at: timestamptz
  daily_room_opened_by: Int
  deleted: Boolean
  event_id: Int
  icon: String
  id: uuid
  name: String
  private: Boolean
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type virtual_conference_chat_groups_stddev_fields {
   creator_id: Float
   daily_room_opened_by: Float
   event_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_chat_groups"
"""
input virtual_conference_chat_groups_stddev_order_by {
  creator_id: order_by
  daily_room_opened_by: order_by
  event_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_chat_groups_stddev_pop_fields {
   creator_id: Float
   daily_room_opened_by: Float
   event_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_chat_groups"
"""
input virtual_conference_chat_groups_stddev_pop_order_by {
  creator_id: order_by
  daily_room_opened_by: order_by
  event_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_chat_groups_stddev_samp_fields {
   creator_id: Float
   daily_room_opened_by: Float
   event_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_chat_groups"
"""
input virtual_conference_chat_groups_stddev_samp_order_by {
  creator_id: order_by
  daily_room_opened_by: order_by
  event_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_chat_groups"
"""
input virtual_conference_chat_groups_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_chat_groups_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_chat_groups_stream_cursor_value_input {
  created_at: timestamptz
  creator_id: Int
  daily_room_id: String
  daily_room_name: String
  daily_room_opened_at: timestamptz
  daily_room_opened_by: Int
  deleted: Boolean
  event_id: Int
  icon: String
  id: uuid
  name: String
  private: Boolean
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type virtual_conference_chat_groups_sum_fields {
   creator_id: Int
   daily_room_opened_by: Int
   event_id: Int
}

"""
order by sum() on columns of table "virtual_conference_chat_groups"
"""
input virtual_conference_chat_groups_sum_order_by {
  creator_id: order_by
  daily_room_opened_by: order_by
  event_id: order_by
}

"""
update columns of table "virtual_conference_chat_groups"
"""
enum virtual_conference_chat_groups_update_column {
  """column name"""
created_at
  """column name"""
creator_id
  """column name"""
daily_room_id
  """column name"""
daily_room_name
  """column name"""
daily_room_opened_at
  """column name"""
daily_room_opened_by
  """column name"""
deleted
  """column name"""
event_id
  """column name"""
icon
  """column name"""
id
  """column name"""
name
  """column name"""
private
  """column name"""
updated_at
}

input virtual_conference_chat_groups_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_chat_groups_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_chat_groups_set_input
  where: virtual_conference_chat_groups_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_chat_groups_var_pop_fields {
   creator_id: Float
   daily_room_opened_by: Float
   event_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_chat_groups"
"""
input virtual_conference_chat_groups_var_pop_order_by {
  creator_id: order_by
  daily_room_opened_by: order_by
  event_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_chat_groups_var_samp_fields {
   creator_id: Float
   daily_room_opened_by: Float
   event_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_chat_groups"
"""
input virtual_conference_chat_groups_var_samp_order_by {
  creator_id: order_by
  daily_room_opened_by: order_by
  event_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_chat_groups_variance_fields {
   creator_id: Float
   daily_room_opened_by: Float
   event_id: Float
}

"""
order by variance() on columns of table "virtual_conference_chat_groups"
"""
input virtual_conference_chat_groups_variance_order_by {
  creator_id: order_by
  daily_room_opened_by: order_by
  event_id: order_by
}

"""
columns and relationships of "virtual_conference_cron_job_last_rans"
"""
type virtual_conference_cron_job_last_rans {
   id: Int! 
   name: String! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "virtual_conference_cron_job_last_rans"
"""
type virtual_conference_cron_job_last_rans_aggregate {
   aggregate: virtual_conference_cron_job_last_rans_aggregate_fields
   nodes: [virtual_conference_cron_job_last_rans! ]! 
}

"""
aggregate fields of "virtual_conference_cron_job_last_rans"
"""
type virtual_conference_cron_job_last_rans_aggregate_fields {
   avg: virtual_conference_cron_job_last_rans_avg_fields
   count(columns: [virtual_conference_cron_job_last_rans_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_cron_job_last_rans_max_fields
   min: virtual_conference_cron_job_last_rans_min_fields
   stddev: virtual_conference_cron_job_last_rans_stddev_fields
   stddev_pop: virtual_conference_cron_job_last_rans_stddev_pop_fields
   stddev_samp: virtual_conference_cron_job_last_rans_stddev_samp_fields
   sum: virtual_conference_cron_job_last_rans_sum_fields
   var_pop: virtual_conference_cron_job_last_rans_var_pop_fields
   var_samp: virtual_conference_cron_job_last_rans_var_samp_fields
   variance: virtual_conference_cron_job_last_rans_variance_fields
}

"""aggregate avg on columns"""
type virtual_conference_cron_job_last_rans_avg_fields {
   id: Float
}

"""
Boolean expression to filter rows from the table "virtual_conference_cron_job_last_rans". All fields are combined with a logical 'AND'.
"""
input virtual_conference_cron_job_last_rans_bool_exp {
  _and: [virtual_conference_cron_job_last_rans_bool_exp! ]
  _not: virtual_conference_cron_job_last_rans_bool_exp
  _or: [virtual_conference_cron_job_last_rans_bool_exp! ]
  id: Int_comparison_exp
  name: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_cron_job_last_rans"
"""
enum virtual_conference_cron_job_last_rans_constraint {
  """
  unique or primary key constraint on columns "name"
  """
virtual_conference_cron_job_last_rans_name_key
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_cron_job_last_rans_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_cron_job_last_rans"
"""
input virtual_conference_cron_job_last_rans_inc_input {
  id: Int
}

"""
input type for inserting data into table "virtual_conference_cron_job_last_rans"
"""
input virtual_conference_cron_job_last_rans_insert_input {
  id: Int! 
  name: String! 
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type virtual_conference_cron_job_last_rans_max_fields {
   id: Int
   name: String
   updated_at: timestamptz
}

"""aggregate min on columns"""
type virtual_conference_cron_job_last_rans_min_fields {
   id: Int
   name: String
   updated_at: timestamptz
}

"""
response of any mutation on the table "virtual_conference_cron_job_last_rans"
"""
type virtual_conference_cron_job_last_rans_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_cron_job_last_rans! ]! 
}

"""
on_conflict condition type for table "virtual_conference_cron_job_last_rans"
"""
input virtual_conference_cron_job_last_rans_on_conflict {
  constraint: virtual_conference_cron_job_last_rans_constraint! 
  update_columns: [virtual_conference_cron_job_last_rans_update_column! ]! 
  where: virtual_conference_cron_job_last_rans_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_cron_job_last_rans".
"""
input virtual_conference_cron_job_last_rans_order_by {
  id: order_by
  name: order_by
  updated_at: order_by
}

"""
primary key columns input for table: virtual_conference_cron_job_last_rans
"""
input virtual_conference_cron_job_last_rans_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_cron_job_last_rans"
"""
enum virtual_conference_cron_job_last_rans_select_column {
  """column name"""
id
  """column name"""
name
  """column name"""
updated_at
}

"""
input type for updating data in table "virtual_conference_cron_job_last_rans"
"""
input virtual_conference_cron_job_last_rans_set_input {
  id: Int
  name: String
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type virtual_conference_cron_job_last_rans_stddev_fields {
   id: Float
}

"""aggregate stddev_pop on columns"""
type virtual_conference_cron_job_last_rans_stddev_pop_fields {
   id: Float
}

"""aggregate stddev_samp on columns"""
type virtual_conference_cron_job_last_rans_stddev_samp_fields {
   id: Float
}

"""
Streaming cursor of the table "virtual_conference_cron_job_last_rans"
"""
input virtual_conference_cron_job_last_rans_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_cron_job_last_rans_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_cron_job_last_rans_stream_cursor_value_input {
  id: Int
  name: String
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type virtual_conference_cron_job_last_rans_sum_fields {
   id: Int
}

"""
update columns of table "virtual_conference_cron_job_last_rans"
"""
enum virtual_conference_cron_job_last_rans_update_column {
  """column name"""
id
  """column name"""
name
  """column name"""
updated_at
}

input virtual_conference_cron_job_last_rans_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_cron_job_last_rans_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_cron_job_last_rans_set_input
  where: virtual_conference_cron_job_last_rans_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_cron_job_last_rans_var_pop_fields {
   id: Float
}

"""aggregate var_samp on columns"""
type virtual_conference_cron_job_last_rans_var_samp_fields {
   id: Float
}

"""aggregate variance on columns"""
type virtual_conference_cron_job_last_rans_variance_fields {
   id: Float
}

"""
columns and relationships of "virtual_conference_direct_chat_blocks"
"""
type virtual_conference_direct_chat_blocks {
   created_at: timestamptz! 
   event_id: Int! 
   id: Int! 
   recipient_id: Int! 
   sender_id: Int! 
}

"""
aggregated selection of "virtual_conference_direct_chat_blocks"
"""
type virtual_conference_direct_chat_blocks_aggregate {
   aggregate: virtual_conference_direct_chat_blocks_aggregate_fields
   nodes: [virtual_conference_direct_chat_blocks! ]! 
}

input virtual_conference_direct_chat_blocks_aggregate_bool_exp {
  count: virtual_conference_direct_chat_blocks_aggregate_bool_exp_count
}

input virtual_conference_direct_chat_blocks_aggregate_bool_exp_count {
  arguments: [virtual_conference_direct_chat_blocks_select_column! ]
  distinct: Boolean
  filter: virtual_conference_direct_chat_blocks_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_direct_chat_blocks"
"""
type virtual_conference_direct_chat_blocks_aggregate_fields {
   avg: virtual_conference_direct_chat_blocks_avg_fields
   count(columns: [virtual_conference_direct_chat_blocks_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_direct_chat_blocks_max_fields
   min: virtual_conference_direct_chat_blocks_min_fields
   stddev: virtual_conference_direct_chat_blocks_stddev_fields
   stddev_pop: virtual_conference_direct_chat_blocks_stddev_pop_fields
   stddev_samp: virtual_conference_direct_chat_blocks_stddev_samp_fields
   sum: virtual_conference_direct_chat_blocks_sum_fields
   var_pop: virtual_conference_direct_chat_blocks_var_pop_fields
   var_samp: virtual_conference_direct_chat_blocks_var_samp_fields
   variance: virtual_conference_direct_chat_blocks_variance_fields
}

"""
order by aggregate values of table "virtual_conference_direct_chat_blocks"
"""
input virtual_conference_direct_chat_blocks_aggregate_order_by {
  avg: virtual_conference_direct_chat_blocks_avg_order_by
  count: order_by
  max: virtual_conference_direct_chat_blocks_max_order_by
  min: virtual_conference_direct_chat_blocks_min_order_by
  stddev: virtual_conference_direct_chat_blocks_stddev_order_by
  stddev_pop: virtual_conference_direct_chat_blocks_stddev_pop_order_by
  stddev_samp: virtual_conference_direct_chat_blocks_stddev_samp_order_by
  sum: virtual_conference_direct_chat_blocks_sum_order_by
  var_pop: virtual_conference_direct_chat_blocks_var_pop_order_by
  var_samp: virtual_conference_direct_chat_blocks_var_samp_order_by
  variance: virtual_conference_direct_chat_blocks_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_direct_chat_blocks"
"""
input virtual_conference_direct_chat_blocks_arr_rel_insert_input {
  data: [virtual_conference_direct_chat_blocks_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_direct_chat_blocks_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_direct_chat_blocks_avg_fields {
   event_id: Float
   id: Float
   recipient_id: Float
   sender_id: Float
}

"""
order by avg() on columns of table "virtual_conference_direct_chat_blocks"
"""
input virtual_conference_direct_chat_blocks_avg_order_by {
  event_id: order_by
  id: order_by
  recipient_id: order_by
  sender_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_direct_chat_blocks". All fields are combined with a logical 'AND'.
"""
input virtual_conference_direct_chat_blocks_bool_exp {
  _and: [virtual_conference_direct_chat_blocks_bool_exp! ]
  _not: virtual_conference_direct_chat_blocks_bool_exp
  _or: [virtual_conference_direct_chat_blocks_bool_exp! ]
  created_at: timestamptz_comparison_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  recipient_id: Int_comparison_exp
  sender_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_direct_chat_blocks"
"""
enum virtual_conference_direct_chat_blocks_constraint {
  """
  unique or primary key constraint on columns "recipient_id", "sender_id", "event_id"
  """
virtual_conference_direct_chat_blocks_blocker_id_blockee_id_eve
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_direct_chat_blocks_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_direct_chat_blocks"
"""
input virtual_conference_direct_chat_blocks_inc_input {
  event_id: Int
  id: Int
  recipient_id: Int
  sender_id: Int
}

"""
input type for inserting data into table "virtual_conference_direct_chat_blocks"
"""
input virtual_conference_direct_chat_blocks_insert_input {
  created_at: timestamptz! 
  event_id: Int! 
  id: Int! 
  recipient_id: Int! 
  sender_id: Int! 
}

"""aggregate max on columns"""
type virtual_conference_direct_chat_blocks_max_fields {
   created_at: timestamptz
   event_id: Int
   id: Int
   recipient_id: Int
   sender_id: Int
}

"""
order by max() on columns of table "virtual_conference_direct_chat_blocks"
"""
input virtual_conference_direct_chat_blocks_max_order_by {
  created_at: order_by
  event_id: order_by
  id: order_by
  recipient_id: order_by
  sender_id: order_by
}

"""aggregate min on columns"""
type virtual_conference_direct_chat_blocks_min_fields {
   created_at: timestamptz
   event_id: Int
   id: Int
   recipient_id: Int
   sender_id: Int
}

"""
order by min() on columns of table "virtual_conference_direct_chat_blocks"
"""
input virtual_conference_direct_chat_blocks_min_order_by {
  created_at: order_by
  event_id: order_by
  id: order_by
  recipient_id: order_by
  sender_id: order_by
}

"""
response of any mutation on the table "virtual_conference_direct_chat_blocks"
"""
type virtual_conference_direct_chat_blocks_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_direct_chat_blocks! ]! 
}

"""
on_conflict condition type for table "virtual_conference_direct_chat_blocks"
"""
input virtual_conference_direct_chat_blocks_on_conflict {
  constraint: virtual_conference_direct_chat_blocks_constraint! 
  update_columns: [virtual_conference_direct_chat_blocks_update_column! ]! 
  where: virtual_conference_direct_chat_blocks_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_direct_chat_blocks".
"""
input virtual_conference_direct_chat_blocks_order_by {
  created_at: order_by
  event_id: order_by
  id: order_by
  recipient_id: order_by
  sender_id: order_by
}

"""
primary key columns input for table: virtual_conference_direct_chat_blocks
"""
input virtual_conference_direct_chat_blocks_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_direct_chat_blocks"
"""
enum virtual_conference_direct_chat_blocks_select_column {
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
id
  """column name"""
recipient_id
  """column name"""
sender_id
}

"""
input type for updating data in table "virtual_conference_direct_chat_blocks"
"""
input virtual_conference_direct_chat_blocks_set_input {
  created_at: timestamptz
  event_id: Int
  id: Int
  recipient_id: Int
  sender_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_direct_chat_blocks_stddev_fields {
   event_id: Float
   id: Float
   recipient_id: Float
   sender_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_direct_chat_blocks"
"""
input virtual_conference_direct_chat_blocks_stddev_order_by {
  event_id: order_by
  id: order_by
  recipient_id: order_by
  sender_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_direct_chat_blocks_stddev_pop_fields {
   event_id: Float
   id: Float
   recipient_id: Float
   sender_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_direct_chat_blocks"
"""
input virtual_conference_direct_chat_blocks_stddev_pop_order_by {
  event_id: order_by
  id: order_by
  recipient_id: order_by
  sender_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_direct_chat_blocks_stddev_samp_fields {
   event_id: Float
   id: Float
   recipient_id: Float
   sender_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_direct_chat_blocks"
"""
input virtual_conference_direct_chat_blocks_stddev_samp_order_by {
  event_id: order_by
  id: order_by
  recipient_id: order_by
  sender_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_direct_chat_blocks"
"""
input virtual_conference_direct_chat_blocks_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_direct_chat_blocks_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_direct_chat_blocks_stream_cursor_value_input {
  created_at: timestamptz
  event_id: Int
  id: Int
  recipient_id: Int
  sender_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_direct_chat_blocks_sum_fields {
   event_id: Int
   id: Int
   recipient_id: Int
   sender_id: Int
}

"""
order by sum() on columns of table "virtual_conference_direct_chat_blocks"
"""
input virtual_conference_direct_chat_blocks_sum_order_by {
  event_id: order_by
  id: order_by
  recipient_id: order_by
  sender_id: order_by
}

"""
update columns of table "virtual_conference_direct_chat_blocks"
"""
enum virtual_conference_direct_chat_blocks_update_column {
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
id
  """column name"""
recipient_id
  """column name"""
sender_id
}

input virtual_conference_direct_chat_blocks_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_direct_chat_blocks_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_direct_chat_blocks_set_input
  where: virtual_conference_direct_chat_blocks_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_direct_chat_blocks_var_pop_fields {
   event_id: Float
   id: Float
   recipient_id: Float
   sender_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_direct_chat_blocks"
"""
input virtual_conference_direct_chat_blocks_var_pop_order_by {
  event_id: order_by
  id: order_by
  recipient_id: order_by
  sender_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_direct_chat_blocks_var_samp_fields {
   event_id: Float
   id: Float
   recipient_id: Float
   sender_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_direct_chat_blocks"
"""
input virtual_conference_direct_chat_blocks_var_samp_order_by {
  event_id: order_by
  id: order_by
  recipient_id: order_by
  sender_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_direct_chat_blocks_variance_fields {
   event_id: Float
   id: Float
   recipient_id: Float
   sender_id: Float
}

"""
order by variance() on columns of table "virtual_conference_direct_chat_blocks"
"""
input virtual_conference_direct_chat_blocks_variance_order_by {
  event_id: order_by
  id: order_by
  recipient_id: order_by
  sender_id: order_by
}

"""
columns and relationships of "virtual_conference_direct_messages"
"""
type virtual_conference_direct_messages {
  """An array relationship"""
 chat_blocks("""distinct select on columns"""
distinct_on: [virtual_conference_direct_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_chat_blocks_bool_exp): [virtual_conference_direct_chat_blocks! ]! 
  """An aggregate relationship"""
 chat_blocks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_direct_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_chat_blocks_bool_exp): virtual_conference_direct_chat_blocks_aggregate! 
   created_at: timestamptz! 
   deleted: Boolean! 
   device: String
  """An array relationship"""
 event_chat_blocks("""distinct select on columns"""
distinct_on: [virtual_conference_event_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_event_chat_blocks_bool_exp): [virtual_conference_event_chat_blocks! ]! 
  """An aggregate relationship"""
 event_chat_blocks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_event_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_event_chat_blocks_bool_exp): virtual_conference_event_chat_blocks_aggregate! 
   event_id: Int! 
   fe_uuid: String
   id: Int! 
   message: String! 
   notified: Boolean! 
   read: Boolean! 
  """An array relationship"""
 recipient_badges("""distinct select on columns"""
distinct_on: [virtual_conference_name_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_name_badge_order_by! ], """filter the rows returned"""
where: virtual_conference_name_badge_bool_exp): [virtual_conference_name_badge! ]! 
  """An aggregate relationship"""
 recipient_badges_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_name_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_name_badge_order_by! ], """filter the rows returned"""
where: virtual_conference_name_badge_bool_exp): virtual_conference_name_badge_aggregate! 
   recipient_id: Int! 
  """An array relationship"""
 sender_badges("""distinct select on columns"""
distinct_on: [virtual_conference_name_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_name_badge_order_by! ], """filter the rows returned"""
where: virtual_conference_name_badge_bool_exp): [virtual_conference_name_badge! ]! 
  """An aggregate relationship"""
 sender_badges_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_name_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_name_badge_order_by! ], """filter the rows returned"""
where: virtual_conference_name_badge_bool_exp): virtual_conference_name_badge_aggregate! 
   sender_id: Int! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "virtual_conference_direct_messages"
"""
type virtual_conference_direct_messages_aggregate {
   aggregate: virtual_conference_direct_messages_aggregate_fields
   nodes: [virtual_conference_direct_messages! ]! 
}

input virtual_conference_direct_messages_aggregate_bool_exp {
  bool_and: virtual_conference_direct_messages_aggregate_bool_exp_bool_and
  bool_or: virtual_conference_direct_messages_aggregate_bool_exp_bool_or
  count: virtual_conference_direct_messages_aggregate_bool_exp_count
}

input virtual_conference_direct_messages_aggregate_bool_exp_bool_and {
  arguments: virtual_conference_direct_messages_select_column_virtual_conference_direct_messages_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: virtual_conference_direct_messages_bool_exp
  predicate: Boolean_comparison_exp! 
}

input virtual_conference_direct_messages_aggregate_bool_exp_bool_or {
  arguments: virtual_conference_direct_messages_select_column_virtual_conference_direct_messages_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: virtual_conference_direct_messages_bool_exp
  predicate: Boolean_comparison_exp! 
}

input virtual_conference_direct_messages_aggregate_bool_exp_count {
  arguments: [virtual_conference_direct_messages_select_column! ]
  distinct: Boolean
  filter: virtual_conference_direct_messages_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_direct_messages"
"""
type virtual_conference_direct_messages_aggregate_fields {
   avg: virtual_conference_direct_messages_avg_fields
   count(columns: [virtual_conference_direct_messages_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_direct_messages_max_fields
   min: virtual_conference_direct_messages_min_fields
   stddev: virtual_conference_direct_messages_stddev_fields
   stddev_pop: virtual_conference_direct_messages_stddev_pop_fields
   stddev_samp: virtual_conference_direct_messages_stddev_samp_fields
   sum: virtual_conference_direct_messages_sum_fields
   var_pop: virtual_conference_direct_messages_var_pop_fields
   var_samp: virtual_conference_direct_messages_var_samp_fields
   variance: virtual_conference_direct_messages_variance_fields
}

"""
order by aggregate values of table "virtual_conference_direct_messages"
"""
input virtual_conference_direct_messages_aggregate_order_by {
  avg: virtual_conference_direct_messages_avg_order_by
  count: order_by
  max: virtual_conference_direct_messages_max_order_by
  min: virtual_conference_direct_messages_min_order_by
  stddev: virtual_conference_direct_messages_stddev_order_by
  stddev_pop: virtual_conference_direct_messages_stddev_pop_order_by
  stddev_samp: virtual_conference_direct_messages_stddev_samp_order_by
  sum: virtual_conference_direct_messages_sum_order_by
  var_pop: virtual_conference_direct_messages_var_pop_order_by
  var_samp: virtual_conference_direct_messages_var_samp_order_by
  variance: virtual_conference_direct_messages_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_direct_messages"
"""
input virtual_conference_direct_messages_arr_rel_insert_input {
  data: [virtual_conference_direct_messages_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_direct_messages_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_direct_messages_avg_fields {
   event_id: Float
   id: Float
   recipient_id: Float
   sender_id: Float
}

"""
order by avg() on columns of table "virtual_conference_direct_messages"
"""
input virtual_conference_direct_messages_avg_order_by {
  event_id: order_by
  id: order_by
  recipient_id: order_by
  sender_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_direct_messages". All fields are combined with a logical 'AND'.
"""
input virtual_conference_direct_messages_bool_exp {
  _and: [virtual_conference_direct_messages_bool_exp! ]
  _not: virtual_conference_direct_messages_bool_exp
  _or: [virtual_conference_direct_messages_bool_exp! ]
  chat_blocks: virtual_conference_direct_chat_blocks_bool_exp
  chat_blocks_aggregate: virtual_conference_direct_chat_blocks_aggregate_bool_exp
  created_at: timestamptz_comparison_exp
  deleted: Boolean_comparison_exp
  device: String_comparison_exp
  event_chat_blocks: virtual_conference_event_chat_blocks_bool_exp
  event_chat_blocks_aggregate: virtual_conference_event_chat_blocks_aggregate_bool_exp
  event_id: Int_comparison_exp
  fe_uuid: String_comparison_exp
  id: Int_comparison_exp
  message: String_comparison_exp
  notified: Boolean_comparison_exp
  read: Boolean_comparison_exp
  recipient_badges: virtual_conference_name_badge_bool_exp
  recipient_badges_aggregate: virtual_conference_name_badge_aggregate_bool_exp
  recipient_id: Int_comparison_exp
  sender_badges: virtual_conference_name_badge_bool_exp
  sender_badges_aggregate: virtual_conference_name_badge_aggregate_bool_exp
  sender_id: Int_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_direct_messages"
"""
enum virtual_conference_direct_messages_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_direct_messages_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_direct_messages"
"""
input virtual_conference_direct_messages_inc_input {
  event_id: Int
  id: Int
  recipient_id: Int
  sender_id: Int
}

"""
input type for inserting data into table "virtual_conference_direct_messages"
"""
input virtual_conference_direct_messages_insert_input {
  chat_blocks: virtual_conference_direct_chat_blocks_arr_rel_insert_input
  created_at: timestamptz! 
  deleted: Boolean! 
  device: String
  event_chat_blocks: virtual_conference_event_chat_blocks_arr_rel_insert_input
  event_id: Int! 
  fe_uuid: String
  id: Int! 
  message: String! 
  notified: Boolean! 
  read: Boolean! 
  recipient_badges: virtual_conference_name_badge_arr_rel_insert_input
  recipient_id: Int! 
  sender_badges: virtual_conference_name_badge_arr_rel_insert_input
  sender_id: Int! 
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type virtual_conference_direct_messages_max_fields {
   created_at: timestamptz
   device: String
   event_id: Int
   fe_uuid: String
   id: Int
   message: String
   recipient_id: Int
   sender_id: Int
   updated_at: timestamptz
}

"""
order by max() on columns of table "virtual_conference_direct_messages"
"""
input virtual_conference_direct_messages_max_order_by {
  created_at: order_by
  device: order_by
  event_id: order_by
  fe_uuid: order_by
  id: order_by
  message: order_by
  recipient_id: order_by
  sender_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type virtual_conference_direct_messages_min_fields {
   created_at: timestamptz
   device: String
   event_id: Int
   fe_uuid: String
   id: Int
   message: String
   recipient_id: Int
   sender_id: Int
   updated_at: timestamptz
}

"""
order by min() on columns of table "virtual_conference_direct_messages"
"""
input virtual_conference_direct_messages_min_order_by {
  created_at: order_by
  device: order_by
  event_id: order_by
  fe_uuid: order_by
  id: order_by
  message: order_by
  recipient_id: order_by
  sender_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "virtual_conference_direct_messages"
"""
type virtual_conference_direct_messages_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_direct_messages! ]! 
}

"""
on_conflict condition type for table "virtual_conference_direct_messages"
"""
input virtual_conference_direct_messages_on_conflict {
  constraint: virtual_conference_direct_messages_constraint! 
  update_columns: [virtual_conference_direct_messages_update_column! ]! 
  where: virtual_conference_direct_messages_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_direct_messages".
"""
input virtual_conference_direct_messages_order_by {
  chat_blocks_aggregate: virtual_conference_direct_chat_blocks_aggregate_order_by
  created_at: order_by
  deleted: order_by
  device: order_by
  event_chat_blocks_aggregate: virtual_conference_event_chat_blocks_aggregate_order_by
  event_id: order_by
  fe_uuid: order_by
  id: order_by
  message: order_by
  notified: order_by
  read: order_by
  recipient_badges_aggregate: virtual_conference_name_badge_aggregate_order_by
  recipient_id: order_by
  sender_badges_aggregate: virtual_conference_name_badge_aggregate_order_by
  sender_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: virtual_conference_direct_messages
"""
input virtual_conference_direct_messages_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_direct_messages"
"""
enum virtual_conference_direct_messages_select_column {
  """column name"""
created_at
  """column name"""
deleted
  """column name"""
device
  """column name"""
event_id
  """column name"""
fe_uuid
  """column name"""
id
  """column name"""
message
  """column name"""
notified
  """column name"""
read
  """column name"""
recipient_id
  """column name"""
sender_id
  """column name"""
updated_at
}

"""
select "virtual_conference_direct_messages_aggregate_bool_exp_bool_and_arguments_columns" columns of table "virtual_conference_direct_messages"
"""
enum virtual_conference_direct_messages_select_column_virtual_conference_direct_messages_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
deleted
  """column name"""
notified
  """column name"""
read
}

"""
select "virtual_conference_direct_messages_aggregate_bool_exp_bool_or_arguments_columns" columns of table "virtual_conference_direct_messages"
"""
enum virtual_conference_direct_messages_select_column_virtual_conference_direct_messages_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
deleted
  """column name"""
notified
  """column name"""
read
}

"""
input type for updating data in table "virtual_conference_direct_messages"
"""
input virtual_conference_direct_messages_set_input {
  created_at: timestamptz
  deleted: Boolean
  device: String
  event_id: Int
  fe_uuid: String
  id: Int
  message: String
  notified: Boolean
  read: Boolean
  recipient_id: Int
  sender_id: Int
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type virtual_conference_direct_messages_stddev_fields {
   event_id: Float
   id: Float
   recipient_id: Float
   sender_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_direct_messages"
"""
input virtual_conference_direct_messages_stddev_order_by {
  event_id: order_by
  id: order_by
  recipient_id: order_by
  sender_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_direct_messages_stddev_pop_fields {
   event_id: Float
   id: Float
   recipient_id: Float
   sender_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_direct_messages"
"""
input virtual_conference_direct_messages_stddev_pop_order_by {
  event_id: order_by
  id: order_by
  recipient_id: order_by
  sender_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_direct_messages_stddev_samp_fields {
   event_id: Float
   id: Float
   recipient_id: Float
   sender_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_direct_messages"
"""
input virtual_conference_direct_messages_stddev_samp_order_by {
  event_id: order_by
  id: order_by
  recipient_id: order_by
  sender_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_direct_messages"
"""
input virtual_conference_direct_messages_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_direct_messages_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_direct_messages_stream_cursor_value_input {
  created_at: timestamptz
  deleted: Boolean
  device: String
  event_id: Int
  fe_uuid: String
  id: Int
  message: String
  notified: Boolean
  read: Boolean
  recipient_id: Int
  sender_id: Int
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type virtual_conference_direct_messages_sum_fields {
   event_id: Int
   id: Int
   recipient_id: Int
   sender_id: Int
}

"""
order by sum() on columns of table "virtual_conference_direct_messages"
"""
input virtual_conference_direct_messages_sum_order_by {
  event_id: order_by
  id: order_by
  recipient_id: order_by
  sender_id: order_by
}

"""
update columns of table "virtual_conference_direct_messages"
"""
enum virtual_conference_direct_messages_update_column {
  """column name"""
created_at
  """column name"""
deleted
  """column name"""
device
  """column name"""
event_id
  """column name"""
fe_uuid
  """column name"""
id
  """column name"""
message
  """column name"""
notified
  """column name"""
read
  """column name"""
recipient_id
  """column name"""
sender_id
  """column name"""
updated_at
}

input virtual_conference_direct_messages_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_direct_messages_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_direct_messages_set_input
  where: virtual_conference_direct_messages_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_direct_messages_var_pop_fields {
   event_id: Float
   id: Float
   recipient_id: Float
   sender_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_direct_messages"
"""
input virtual_conference_direct_messages_var_pop_order_by {
  event_id: order_by
  id: order_by
  recipient_id: order_by
  sender_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_direct_messages_var_samp_fields {
   event_id: Float
   id: Float
   recipient_id: Float
   sender_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_direct_messages"
"""
input virtual_conference_direct_messages_var_samp_order_by {
  event_id: order_by
  id: order_by
  recipient_id: order_by
  sender_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_direct_messages_variance_fields {
   event_id: Float
   id: Float
   recipient_id: Float
   sender_id: Float
}

"""
order by variance() on columns of table "virtual_conference_direct_messages"
"""
input virtual_conference_direct_messages_variance_order_by {
  event_id: order_by
  id: order_by
  recipient_id: order_by
  sender_id: order_by
}

"""
columns and relationships of "virtual_conference_direct_video_calls"
"""
type virtual_conference_direct_video_calls {
  """An array relationship"""
 callee_admin_block("""distinct select on columns"""
distinct_on: [virtual_conference_event_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_event_chat_blocks_bool_exp): [virtual_conference_event_chat_blocks! ]! 
  """An aggregate relationship"""
 callee_admin_block_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_event_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_event_chat_blocks_bool_exp): virtual_conference_event_chat_blocks_aggregate! 
  """An array relationship"""
 callee_badge("""distinct select on columns"""
distinct_on: [virtual_conference_name_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_name_badge_order_by! ], """filter the rows returned"""
where: virtual_conference_name_badge_bool_exp): [virtual_conference_name_badge! ]! 
  """An aggregate relationship"""
 callee_badge_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_name_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_name_badge_order_by! ], """filter the rows returned"""
where: virtual_conference_name_badge_bool_exp): virtual_conference_name_badge_aggregate! 
  """An array relationship"""
 callee_block("""distinct select on columns"""
distinct_on: [virtual_conference_direct_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_chat_blocks_bool_exp): [virtual_conference_direct_chat_blocks! ]! 
  """An aggregate relationship"""
 callee_block_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_direct_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_chat_blocks_bool_exp): virtual_conference_direct_chat_blocks_aggregate! 
   callee_browser_uuid: String
   callee_chat_notification_closed: Boolean! 
   callee_engaged: Boolean! 
  """An array relationship"""
 callee_heartbeat("""distinct select on columns"""
distinct_on: [virtual_conference_user_heartbeats_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_heartbeats_order_by! ], """filter the rows returned"""
where: virtual_conference_user_heartbeats_bool_exp): [virtual_conference_user_heartbeats! ]! 
  """An aggregate relationship"""
 callee_heartbeat_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_user_heartbeats_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_heartbeats_order_by! ], """filter the rows returned"""
where: virtual_conference_user_heartbeats_bool_exp): virtual_conference_user_heartbeats_aggregate! 
   callee_id: Int! 
  """An array relationship"""
 caller_admin_block("""distinct select on columns"""
distinct_on: [virtual_conference_event_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_event_chat_blocks_bool_exp): [virtual_conference_event_chat_blocks! ]! 
  """An aggregate relationship"""
 caller_admin_block_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_event_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_event_chat_blocks_bool_exp): virtual_conference_event_chat_blocks_aggregate! 
  """An array relationship"""
 caller_badge("""distinct select on columns"""
distinct_on: [virtual_conference_name_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_name_badge_order_by! ], """filter the rows returned"""
where: virtual_conference_name_badge_bool_exp): [virtual_conference_name_badge! ]! 
  """An aggregate relationship"""
 caller_badge_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_name_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_name_badge_order_by! ], """filter the rows returned"""
where: virtual_conference_name_badge_bool_exp): virtual_conference_name_badge_aggregate! 
   caller_browser_uuid: String
   caller_chat_notification_closed: Boolean! 
  """An array relationship"""
 caller_heartbeat("""distinct select on columns"""
distinct_on: [virtual_conference_user_heartbeats_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_heartbeats_order_by! ], """filter the rows returned"""
where: virtual_conference_user_heartbeats_bool_exp): [virtual_conference_user_heartbeats! ]! 
  """An aggregate relationship"""
 caller_heartbeat_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_user_heartbeats_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_heartbeats_order_by! ], """filter the rows returned"""
where: virtual_conference_user_heartbeats_bool_exp): virtual_conference_user_heartbeats_aggregate! 
   caller_id: Int! 
   created_at: timestamptz! 
   daily_room_id: String! 
   daily_room_name: String! 
   device: String
   ended_at: timestamptz
   ended_by: Int
   event_id: Int! 
   id: Int! 
   ringing: Boolean! 
}

"""
aggregated selection of "virtual_conference_direct_video_calls"
"""
type virtual_conference_direct_video_calls_aggregate {
   aggregate: virtual_conference_direct_video_calls_aggregate_fields
   nodes: [virtual_conference_direct_video_calls! ]! 
}

input virtual_conference_direct_video_calls_aggregate_bool_exp {
  bool_and: virtual_conference_direct_video_calls_aggregate_bool_exp_bool_and
  bool_or: virtual_conference_direct_video_calls_aggregate_bool_exp_bool_or
  count: virtual_conference_direct_video_calls_aggregate_bool_exp_count
}

input virtual_conference_direct_video_calls_aggregate_bool_exp_bool_and {
  arguments: virtual_conference_direct_video_calls_select_column_virtual_conference_direct_video_calls_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: virtual_conference_direct_video_calls_bool_exp
  predicate: Boolean_comparison_exp! 
}

input virtual_conference_direct_video_calls_aggregate_bool_exp_bool_or {
  arguments: virtual_conference_direct_video_calls_select_column_virtual_conference_direct_video_calls_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: virtual_conference_direct_video_calls_bool_exp
  predicate: Boolean_comparison_exp! 
}

input virtual_conference_direct_video_calls_aggregate_bool_exp_count {
  arguments: [virtual_conference_direct_video_calls_select_column! ]
  distinct: Boolean
  filter: virtual_conference_direct_video_calls_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_direct_video_calls"
"""
type virtual_conference_direct_video_calls_aggregate_fields {
   avg: virtual_conference_direct_video_calls_avg_fields
   count(columns: [virtual_conference_direct_video_calls_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_direct_video_calls_max_fields
   min: virtual_conference_direct_video_calls_min_fields
   stddev: virtual_conference_direct_video_calls_stddev_fields
   stddev_pop: virtual_conference_direct_video_calls_stddev_pop_fields
   stddev_samp: virtual_conference_direct_video_calls_stddev_samp_fields
   sum: virtual_conference_direct_video_calls_sum_fields
   var_pop: virtual_conference_direct_video_calls_var_pop_fields
   var_samp: virtual_conference_direct_video_calls_var_samp_fields
   variance: virtual_conference_direct_video_calls_variance_fields
}

"""
order by aggregate values of table "virtual_conference_direct_video_calls"
"""
input virtual_conference_direct_video_calls_aggregate_order_by {
  avg: virtual_conference_direct_video_calls_avg_order_by
  count: order_by
  max: virtual_conference_direct_video_calls_max_order_by
  min: virtual_conference_direct_video_calls_min_order_by
  stddev: virtual_conference_direct_video_calls_stddev_order_by
  stddev_pop: virtual_conference_direct_video_calls_stddev_pop_order_by
  stddev_samp: virtual_conference_direct_video_calls_stddev_samp_order_by
  sum: virtual_conference_direct_video_calls_sum_order_by
  var_pop: virtual_conference_direct_video_calls_var_pop_order_by
  var_samp: virtual_conference_direct_video_calls_var_samp_order_by
  variance: virtual_conference_direct_video_calls_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_direct_video_calls"
"""
input virtual_conference_direct_video_calls_arr_rel_insert_input {
  data: [virtual_conference_direct_video_calls_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_direct_video_calls_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_direct_video_calls_avg_fields {
   callee_id: Float
   caller_id: Float
   ended_by: Float
   event_id: Float
   id: Float
}

"""
order by avg() on columns of table "virtual_conference_direct_video_calls"
"""
input virtual_conference_direct_video_calls_avg_order_by {
  callee_id: order_by
  caller_id: order_by
  ended_by: order_by
  event_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_direct_video_calls". All fields are combined with a logical 'AND'.
"""
input virtual_conference_direct_video_calls_bool_exp {
  _and: [virtual_conference_direct_video_calls_bool_exp! ]
  _not: virtual_conference_direct_video_calls_bool_exp
  _or: [virtual_conference_direct_video_calls_bool_exp! ]
  callee_admin_block: virtual_conference_event_chat_blocks_bool_exp
  callee_admin_block_aggregate: virtual_conference_event_chat_blocks_aggregate_bool_exp
  callee_badge: virtual_conference_name_badge_bool_exp
  callee_badge_aggregate: virtual_conference_name_badge_aggregate_bool_exp
  callee_block: virtual_conference_direct_chat_blocks_bool_exp
  callee_block_aggregate: virtual_conference_direct_chat_blocks_aggregate_bool_exp
  callee_browser_uuid: String_comparison_exp
  callee_chat_notification_closed: Boolean_comparison_exp
  callee_engaged: Boolean_comparison_exp
  callee_heartbeat: virtual_conference_user_heartbeats_bool_exp
  callee_heartbeat_aggregate: virtual_conference_user_heartbeats_aggregate_bool_exp
  callee_id: Int_comparison_exp
  caller_admin_block: virtual_conference_event_chat_blocks_bool_exp
  caller_admin_block_aggregate: virtual_conference_event_chat_blocks_aggregate_bool_exp
  caller_badge: virtual_conference_name_badge_bool_exp
  caller_badge_aggregate: virtual_conference_name_badge_aggregate_bool_exp
  caller_browser_uuid: String_comparison_exp
  caller_chat_notification_closed: Boolean_comparison_exp
  caller_heartbeat: virtual_conference_user_heartbeats_bool_exp
  caller_heartbeat_aggregate: virtual_conference_user_heartbeats_aggregate_bool_exp
  caller_id: Int_comparison_exp
  created_at: timestamptz_comparison_exp
  daily_room_id: String_comparison_exp
  daily_room_name: String_comparison_exp
  device: String_comparison_exp
  ended_at: timestamptz_comparison_exp
  ended_by: Int_comparison_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  ringing: Boolean_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_direct_video_calls"
"""
enum virtual_conference_direct_video_calls_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_direct_video_calls_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_direct_video_calls"
"""
input virtual_conference_direct_video_calls_inc_input {
  callee_id: Int
  caller_id: Int
  ended_by: Int
  event_id: Int
  id: Int
}

"""
input type for inserting data into table "virtual_conference_direct_video_calls"
"""
input virtual_conference_direct_video_calls_insert_input {
  callee_admin_block: virtual_conference_event_chat_blocks_arr_rel_insert_input
  callee_badge: virtual_conference_name_badge_arr_rel_insert_input
  callee_block: virtual_conference_direct_chat_blocks_arr_rel_insert_input
  callee_browser_uuid: String
  callee_chat_notification_closed: Boolean! 
  callee_engaged: Boolean! 
  callee_heartbeat: virtual_conference_user_heartbeats_arr_rel_insert_input
  callee_id: Int! 
  caller_admin_block: virtual_conference_event_chat_blocks_arr_rel_insert_input
  caller_badge: virtual_conference_name_badge_arr_rel_insert_input
  caller_browser_uuid: String
  caller_chat_notification_closed: Boolean! 
  caller_heartbeat: virtual_conference_user_heartbeats_arr_rel_insert_input
  caller_id: Int! 
  created_at: timestamptz! 
  daily_room_id: String! 
  daily_room_name: String! 
  device: String
  ended_at: timestamptz
  ended_by: Int
  event_id: Int! 
  id: Int! 
  ringing: Boolean! 
}

"""aggregate max on columns"""
type virtual_conference_direct_video_calls_max_fields {
   callee_browser_uuid: String
   callee_id: Int
   caller_browser_uuid: String
   caller_id: Int
   created_at: timestamptz
   daily_room_id: String
   daily_room_name: String
   device: String
   ended_at: timestamptz
   ended_by: Int
   event_id: Int
   id: Int
}

"""
order by max() on columns of table "virtual_conference_direct_video_calls"
"""
input virtual_conference_direct_video_calls_max_order_by {
  callee_browser_uuid: order_by
  callee_id: order_by
  caller_browser_uuid: order_by
  caller_id: order_by
  created_at: order_by
  daily_room_id: order_by
  daily_room_name: order_by
  device: order_by
  ended_at: order_by
  ended_by: order_by
  event_id: order_by
  id: order_by
}

"""aggregate min on columns"""
type virtual_conference_direct_video_calls_min_fields {
   callee_browser_uuid: String
   callee_id: Int
   caller_browser_uuid: String
   caller_id: Int
   created_at: timestamptz
   daily_room_id: String
   daily_room_name: String
   device: String
   ended_at: timestamptz
   ended_by: Int
   event_id: Int
   id: Int
}

"""
order by min() on columns of table "virtual_conference_direct_video_calls"
"""
input virtual_conference_direct_video_calls_min_order_by {
  callee_browser_uuid: order_by
  callee_id: order_by
  caller_browser_uuid: order_by
  caller_id: order_by
  created_at: order_by
  daily_room_id: order_by
  daily_room_name: order_by
  device: order_by
  ended_at: order_by
  ended_by: order_by
  event_id: order_by
  id: order_by
}

"""
response of any mutation on the table "virtual_conference_direct_video_calls"
"""
type virtual_conference_direct_video_calls_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_direct_video_calls! ]! 
}

"""
on_conflict condition type for table "virtual_conference_direct_video_calls"
"""
input virtual_conference_direct_video_calls_on_conflict {
  constraint: virtual_conference_direct_video_calls_constraint! 
  update_columns: [virtual_conference_direct_video_calls_update_column! ]! 
  where: virtual_conference_direct_video_calls_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_direct_video_calls".
"""
input virtual_conference_direct_video_calls_order_by {
  callee_admin_block_aggregate: virtual_conference_event_chat_blocks_aggregate_order_by
  callee_badge_aggregate: virtual_conference_name_badge_aggregate_order_by
  callee_block_aggregate: virtual_conference_direct_chat_blocks_aggregate_order_by
  callee_browser_uuid: order_by
  callee_chat_notification_closed: order_by
  callee_engaged: order_by
  callee_heartbeat_aggregate: virtual_conference_user_heartbeats_aggregate_order_by
  callee_id: order_by
  caller_admin_block_aggregate: virtual_conference_event_chat_blocks_aggregate_order_by
  caller_badge_aggregate: virtual_conference_name_badge_aggregate_order_by
  caller_browser_uuid: order_by
  caller_chat_notification_closed: order_by
  caller_heartbeat_aggregate: virtual_conference_user_heartbeats_aggregate_order_by
  caller_id: order_by
  created_at: order_by
  daily_room_id: order_by
  daily_room_name: order_by
  device: order_by
  ended_at: order_by
  ended_by: order_by
  event_id: order_by
  id: order_by
  ringing: order_by
}

"""
primary key columns input for table: virtual_conference_direct_video_calls
"""
input virtual_conference_direct_video_calls_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_direct_video_calls"
"""
enum virtual_conference_direct_video_calls_select_column {
  """column name"""
callee_browser_uuid
  """column name"""
callee_chat_notification_closed
  """column name"""
callee_engaged
  """column name"""
callee_id
  """column name"""
caller_browser_uuid
  """column name"""
caller_chat_notification_closed
  """column name"""
caller_id
  """column name"""
created_at
  """column name"""
daily_room_id
  """column name"""
daily_room_name
  """column name"""
device
  """column name"""
ended_at
  """column name"""
ended_by
  """column name"""
event_id
  """column name"""
id
  """column name"""
ringing
}

"""
select "virtual_conference_direct_video_calls_aggregate_bool_exp_bool_and_arguments_columns" columns of table "virtual_conference_direct_video_calls"
"""
enum virtual_conference_direct_video_calls_select_column_virtual_conference_direct_video_calls_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
callee_chat_notification_closed
  """column name"""
callee_engaged
  """column name"""
caller_chat_notification_closed
  """column name"""
ringing
}

"""
select "virtual_conference_direct_video_calls_aggregate_bool_exp_bool_or_arguments_columns" columns of table "virtual_conference_direct_video_calls"
"""
enum virtual_conference_direct_video_calls_select_column_virtual_conference_direct_video_calls_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
callee_chat_notification_closed
  """column name"""
callee_engaged
  """column name"""
caller_chat_notification_closed
  """column name"""
ringing
}

"""
input type for updating data in table "virtual_conference_direct_video_calls"
"""
input virtual_conference_direct_video_calls_set_input {
  callee_browser_uuid: String
  callee_chat_notification_closed: Boolean
  callee_engaged: Boolean
  callee_id: Int
  caller_browser_uuid: String
  caller_chat_notification_closed: Boolean
  caller_id: Int
  created_at: timestamptz
  daily_room_id: String
  daily_room_name: String
  device: String
  ended_at: timestamptz
  ended_by: Int
  event_id: Int
  id: Int
  ringing: Boolean
}

"""aggregate stddev on columns"""
type virtual_conference_direct_video_calls_stddev_fields {
   callee_id: Float
   caller_id: Float
   ended_by: Float
   event_id: Float
   id: Float
}

"""
order by stddev() on columns of table "virtual_conference_direct_video_calls"
"""
input virtual_conference_direct_video_calls_stddev_order_by {
  callee_id: order_by
  caller_id: order_by
  ended_by: order_by
  event_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_direct_video_calls_stddev_pop_fields {
   callee_id: Float
   caller_id: Float
   ended_by: Float
   event_id: Float
   id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_direct_video_calls"
"""
input virtual_conference_direct_video_calls_stddev_pop_order_by {
  callee_id: order_by
  caller_id: order_by
  ended_by: order_by
  event_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_direct_video_calls_stddev_samp_fields {
   callee_id: Float
   caller_id: Float
   ended_by: Float
   event_id: Float
   id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_direct_video_calls"
"""
input virtual_conference_direct_video_calls_stddev_samp_order_by {
  callee_id: order_by
  caller_id: order_by
  ended_by: order_by
  event_id: order_by
  id: order_by
}

"""
Streaming cursor of the table "virtual_conference_direct_video_calls"
"""
input virtual_conference_direct_video_calls_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_direct_video_calls_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_direct_video_calls_stream_cursor_value_input {
  callee_browser_uuid: String
  callee_chat_notification_closed: Boolean
  callee_engaged: Boolean
  callee_id: Int
  caller_browser_uuid: String
  caller_chat_notification_closed: Boolean
  caller_id: Int
  created_at: timestamptz
  daily_room_id: String
  daily_room_name: String
  device: String
  ended_at: timestamptz
  ended_by: Int
  event_id: Int
  id: Int
  ringing: Boolean
}

"""aggregate sum on columns"""
type virtual_conference_direct_video_calls_sum_fields {
   callee_id: Int
   caller_id: Int
   ended_by: Int
   event_id: Int
   id: Int
}

"""
order by sum() on columns of table "virtual_conference_direct_video_calls"
"""
input virtual_conference_direct_video_calls_sum_order_by {
  callee_id: order_by
  caller_id: order_by
  ended_by: order_by
  event_id: order_by
  id: order_by
}

"""
update columns of table "virtual_conference_direct_video_calls"
"""
enum virtual_conference_direct_video_calls_update_column {
  """column name"""
callee_browser_uuid
  """column name"""
callee_chat_notification_closed
  """column name"""
callee_engaged
  """column name"""
callee_id
  """column name"""
caller_browser_uuid
  """column name"""
caller_chat_notification_closed
  """column name"""
caller_id
  """column name"""
created_at
  """column name"""
daily_room_id
  """column name"""
daily_room_name
  """column name"""
device
  """column name"""
ended_at
  """column name"""
ended_by
  """column name"""
event_id
  """column name"""
id
  """column name"""
ringing
}

input virtual_conference_direct_video_calls_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_direct_video_calls_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_direct_video_calls_set_input
  where: virtual_conference_direct_video_calls_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_direct_video_calls_var_pop_fields {
   callee_id: Float
   caller_id: Float
   ended_by: Float
   event_id: Float
   id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_direct_video_calls"
"""
input virtual_conference_direct_video_calls_var_pop_order_by {
  callee_id: order_by
  caller_id: order_by
  ended_by: order_by
  event_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_direct_video_calls_var_samp_fields {
   callee_id: Float
   caller_id: Float
   ended_by: Float
   event_id: Float
   id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_direct_video_calls"
"""
input virtual_conference_direct_video_calls_var_samp_order_by {
  callee_id: order_by
  caller_id: order_by
  ended_by: order_by
  event_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_direct_video_calls_variance_fields {
   callee_id: Float
   caller_id: Float
   ended_by: Float
   event_id: Float
   id: Float
}

"""
order by variance() on columns of table "virtual_conference_direct_video_calls"
"""
input virtual_conference_direct_video_calls_variance_order_by {
  callee_id: order_by
  caller_id: order_by
  ended_by: order_by
  event_id: order_by
  id: order_by
}

"""
columns and relationships of "virtual_conference_email_notification_speeds"
"""
type virtual_conference_email_notification_speeds {
   comment: String! 
   value: String! 
}

"""
aggregated selection of "virtual_conference_email_notification_speeds"
"""
type virtual_conference_email_notification_speeds_aggregate {
   aggregate: virtual_conference_email_notification_speeds_aggregate_fields
   nodes: [virtual_conference_email_notification_speeds! ]! 
}

"""
aggregate fields of "virtual_conference_email_notification_speeds"
"""
type virtual_conference_email_notification_speeds_aggregate_fields {
   count(columns: [virtual_conference_email_notification_speeds_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_email_notification_speeds_max_fields
   min: virtual_conference_email_notification_speeds_min_fields
}

"""
Boolean expression to filter rows from the table "virtual_conference_email_notification_speeds". All fields are combined with a logical 'AND'.
"""
input virtual_conference_email_notification_speeds_bool_exp {
  _and: [virtual_conference_email_notification_speeds_bool_exp! ]
  _not: virtual_conference_email_notification_speeds_bool_exp
  _or: [virtual_conference_email_notification_speeds_bool_exp! ]
  comment: String_comparison_exp
  value: String_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_email_notification_speeds"
"""
enum virtual_conference_email_notification_speeds_constraint {
  """
  unique or primary key constraint on columns "value"
  """
virtual_conference_email_notification_speeds_pkey
}

enum virtual_conference_email_notification_speeds_enum {
  """One email at the end of the day"""
Daily
  """As soon as user receives something new"""
Immediate
  """Never receive notifications"""
Never
  """One email a week"""
Weekly
}

"""
Boolean expression to compare columns of type "virtual_conference_email_notification_speeds_enum". All fields are combined with logical 'AND'.
"""
input virtual_conference_email_notification_speeds_enum_comparison_exp {
  _eq: virtual_conference_email_notification_speeds_enum
  _in: [virtual_conference_email_notification_speeds_enum! ]
  _is_null: Boolean
  _neq: virtual_conference_email_notification_speeds_enum
  _nin: [virtual_conference_email_notification_speeds_enum! ]
}

"""
input type for inserting data into table "virtual_conference_email_notification_speeds"
"""
input virtual_conference_email_notification_speeds_insert_input {
  comment: String! 
  value: String! 
}

"""aggregate max on columns"""
type virtual_conference_email_notification_speeds_max_fields {
   comment: String
   value: String
}

"""aggregate min on columns"""
type virtual_conference_email_notification_speeds_min_fields {
   comment: String
   value: String
}

"""
response of any mutation on the table "virtual_conference_email_notification_speeds"
"""
type virtual_conference_email_notification_speeds_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_email_notification_speeds! ]! 
}

"""
on_conflict condition type for table "virtual_conference_email_notification_speeds"
"""
input virtual_conference_email_notification_speeds_on_conflict {
  constraint: virtual_conference_email_notification_speeds_constraint! 
  update_columns: [virtual_conference_email_notification_speeds_update_column! ]! 
  where: virtual_conference_email_notification_speeds_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_email_notification_speeds".
"""
input virtual_conference_email_notification_speeds_order_by {
  comment: order_by
  value: order_by
}

"""
primary key columns input for table: virtual_conference_email_notification_speeds
"""
input virtual_conference_email_notification_speeds_pk_columns_input {
  value: String! 
}

"""
select columns of table "virtual_conference_email_notification_speeds"
"""
enum virtual_conference_email_notification_speeds_select_column {
  """column name"""
comment
  """column name"""
value
}

"""
input type for updating data in table "virtual_conference_email_notification_speeds"
"""
input virtual_conference_email_notification_speeds_set_input {
  comment: String
  value: String
}

"""
Streaming cursor of the table "virtual_conference_email_notification_speeds"
"""
input virtual_conference_email_notification_speeds_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_email_notification_speeds_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_email_notification_speeds_stream_cursor_value_input {
  comment: String
  value: String
}

"""
update columns of table "virtual_conference_email_notification_speeds"
"""
enum virtual_conference_email_notification_speeds_update_column {
  """column name"""
comment
  """column name"""
value
}

input virtual_conference_email_notification_speeds_updates {
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_email_notification_speeds_set_input
  where: virtual_conference_email_notification_speeds_bool_exp! 
}

"""
columns and relationships of "virtual_conference_event_chat_blocks"
"""
type virtual_conference_event_chat_blocks {
  """An array relationship"""
 badges("""distinct select on columns"""
distinct_on: [virtual_conference_name_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_name_badge_order_by! ], """filter the rows returned"""
where: virtual_conference_name_badge_bool_exp): [virtual_conference_name_badge! ]! 
  """An aggregate relationship"""
 badges_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_name_badge_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_name_badge_order_by! ], """filter the rows returned"""
where: virtual_conference_name_badge_bool_exp): virtual_conference_name_badge_aggregate! 
   created_at: timestamptz! 
   event_id: Int! 
   id: Int! 
  """An array relationship"""
 user("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): [users! ]! 
  """An aggregate relationship"""
 user_aggregate("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): users_aggregate! 
   user_id: Int! 
}

"""
aggregated selection of "virtual_conference_event_chat_blocks"
"""
type virtual_conference_event_chat_blocks_aggregate {
   aggregate: virtual_conference_event_chat_blocks_aggregate_fields
   nodes: [virtual_conference_event_chat_blocks! ]! 
}

input virtual_conference_event_chat_blocks_aggregate_bool_exp {
  count: virtual_conference_event_chat_blocks_aggregate_bool_exp_count
}

input virtual_conference_event_chat_blocks_aggregate_bool_exp_count {
  arguments: [virtual_conference_event_chat_blocks_select_column! ]
  distinct: Boolean
  filter: virtual_conference_event_chat_blocks_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_event_chat_blocks"
"""
type virtual_conference_event_chat_blocks_aggregate_fields {
   avg: virtual_conference_event_chat_blocks_avg_fields
   count(columns: [virtual_conference_event_chat_blocks_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_event_chat_blocks_max_fields
   min: virtual_conference_event_chat_blocks_min_fields
   stddev: virtual_conference_event_chat_blocks_stddev_fields
   stddev_pop: virtual_conference_event_chat_blocks_stddev_pop_fields
   stddev_samp: virtual_conference_event_chat_blocks_stddev_samp_fields
   sum: virtual_conference_event_chat_blocks_sum_fields
   var_pop: virtual_conference_event_chat_blocks_var_pop_fields
   var_samp: virtual_conference_event_chat_blocks_var_samp_fields
   variance: virtual_conference_event_chat_blocks_variance_fields
}

"""
order by aggregate values of table "virtual_conference_event_chat_blocks"
"""
input virtual_conference_event_chat_blocks_aggregate_order_by {
  avg: virtual_conference_event_chat_blocks_avg_order_by
  count: order_by
  max: virtual_conference_event_chat_blocks_max_order_by
  min: virtual_conference_event_chat_blocks_min_order_by
  stddev: virtual_conference_event_chat_blocks_stddev_order_by
  stddev_pop: virtual_conference_event_chat_blocks_stddev_pop_order_by
  stddev_samp: virtual_conference_event_chat_blocks_stddev_samp_order_by
  sum: virtual_conference_event_chat_blocks_sum_order_by
  var_pop: virtual_conference_event_chat_blocks_var_pop_order_by
  var_samp: virtual_conference_event_chat_blocks_var_samp_order_by
  variance: virtual_conference_event_chat_blocks_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_event_chat_blocks"
"""
input virtual_conference_event_chat_blocks_arr_rel_insert_input {
  data: [virtual_conference_event_chat_blocks_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_event_chat_blocks_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_event_chat_blocks_avg_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by avg() on columns of table "virtual_conference_event_chat_blocks"
"""
input virtual_conference_event_chat_blocks_avg_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_event_chat_blocks". All fields are combined with a logical 'AND'.
"""
input virtual_conference_event_chat_blocks_bool_exp {
  _and: [virtual_conference_event_chat_blocks_bool_exp! ]
  _not: virtual_conference_event_chat_blocks_bool_exp
  _or: [virtual_conference_event_chat_blocks_bool_exp! ]
  badges: virtual_conference_name_badge_bool_exp
  badges_aggregate: virtual_conference_name_badge_aggregate_bool_exp
  created_at: timestamptz_comparison_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  user: users_bool_exp
  user_aggregate: users_aggregate_bool_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_event_chat_blocks"
"""
enum virtual_conference_event_chat_blocks_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_event_chat_blocks_pkey
  """
  unique or primary key constraint on columns "event_id", "user_id"
  """
virtual_conference_event_chat_blocks_user_id_event_id_key
}

"""
input type for incrementing numeric columns in table "virtual_conference_event_chat_blocks"
"""
input virtual_conference_event_chat_blocks_inc_input {
  event_id: Int
  id: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_event_chat_blocks"
"""
input virtual_conference_event_chat_blocks_insert_input {
  badges: virtual_conference_name_badge_arr_rel_insert_input
  created_at: timestamptz! 
  event_id: Int! 
  id: Int! 
  user: users_arr_rel_insert_input
  user_id: Int! 
}

"""aggregate max on columns"""
type virtual_conference_event_chat_blocks_max_fields {
   created_at: timestamptz
   event_id: Int
   id: Int
   user_id: Int
}

"""
order by max() on columns of table "virtual_conference_event_chat_blocks"
"""
input virtual_conference_event_chat_blocks_max_order_by {
  created_at: order_by
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type virtual_conference_event_chat_blocks_min_fields {
   created_at: timestamptz
   event_id: Int
   id: Int
   user_id: Int
}

"""
order by min() on columns of table "virtual_conference_event_chat_blocks"
"""
input virtual_conference_event_chat_blocks_min_order_by {
  created_at: order_by
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "virtual_conference_event_chat_blocks"
"""
type virtual_conference_event_chat_blocks_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_event_chat_blocks! ]! 
}

"""
on_conflict condition type for table "virtual_conference_event_chat_blocks"
"""
input virtual_conference_event_chat_blocks_on_conflict {
  constraint: virtual_conference_event_chat_blocks_constraint! 
  update_columns: [virtual_conference_event_chat_blocks_update_column! ]! 
  where: virtual_conference_event_chat_blocks_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_event_chat_blocks".
"""
input virtual_conference_event_chat_blocks_order_by {
  badges_aggregate: virtual_conference_name_badge_aggregate_order_by
  created_at: order_by
  event_id: order_by
  id: order_by
  user_aggregate: users_aggregate_order_by
  user_id: order_by
}

"""
primary key columns input for table: virtual_conference_event_chat_blocks
"""
input virtual_conference_event_chat_blocks_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_event_chat_blocks"
"""
enum virtual_conference_event_chat_blocks_select_column {
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
id
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_event_chat_blocks"
"""
input virtual_conference_event_chat_blocks_set_input {
  created_at: timestamptz
  event_id: Int
  id: Int
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_event_chat_blocks_stddev_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_event_chat_blocks"
"""
input virtual_conference_event_chat_blocks_stddev_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_event_chat_blocks_stddev_pop_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_event_chat_blocks"
"""
input virtual_conference_event_chat_blocks_stddev_pop_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_event_chat_blocks_stddev_samp_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_event_chat_blocks"
"""
input virtual_conference_event_chat_blocks_stddev_samp_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_event_chat_blocks"
"""
input virtual_conference_event_chat_blocks_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_event_chat_blocks_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_event_chat_blocks_stream_cursor_value_input {
  created_at: timestamptz
  event_id: Int
  id: Int
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_event_chat_blocks_sum_fields {
   event_id: Int
   id: Int
   user_id: Int
}

"""
order by sum() on columns of table "virtual_conference_event_chat_blocks"
"""
input virtual_conference_event_chat_blocks_sum_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""
update columns of table "virtual_conference_event_chat_blocks"
"""
enum virtual_conference_event_chat_blocks_update_column {
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
id
  """column name"""
user_id
}

input virtual_conference_event_chat_blocks_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_event_chat_blocks_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_event_chat_blocks_set_input
  where: virtual_conference_event_chat_blocks_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_event_chat_blocks_var_pop_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_event_chat_blocks"
"""
input virtual_conference_event_chat_blocks_var_pop_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_event_chat_blocks_var_samp_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_event_chat_blocks"
"""
input virtual_conference_event_chat_blocks_var_samp_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_event_chat_blocks_variance_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by variance() on columns of table "virtual_conference_event_chat_blocks"
"""
input virtual_conference_event_chat_blocks_variance_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""
columns and relationships of "virtual_conference_event_interests"
"""
type virtual_conference_event_interests {
  """An object relationship"""
 event: events! 
   event_id: Int! 
   id: Int! 
   ordering: Int! 
   value: String! 
  """An array relationship"""
 virtual_conference_user_interests("""distinct select on columns"""
distinct_on: [virtual_conference_user_interests_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_interests_order_by! ], """filter the rows returned"""
where: virtual_conference_user_interests_bool_exp): [virtual_conference_user_interests! ]! 
  """An aggregate relationship"""
 virtual_conference_user_interests_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_user_interests_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_interests_order_by! ], """filter the rows returned"""
where: virtual_conference_user_interests_bool_exp): virtual_conference_user_interests_aggregate! 
}

"""
aggregated selection of "virtual_conference_event_interests"
"""
type virtual_conference_event_interests_aggregate {
   aggregate: virtual_conference_event_interests_aggregate_fields
   nodes: [virtual_conference_event_interests! ]! 
}

"""
aggregate fields of "virtual_conference_event_interests"
"""
type virtual_conference_event_interests_aggregate_fields {
   avg: virtual_conference_event_interests_avg_fields
   count(columns: [virtual_conference_event_interests_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_event_interests_max_fields
   min: virtual_conference_event_interests_min_fields
   stddev: virtual_conference_event_interests_stddev_fields
   stddev_pop: virtual_conference_event_interests_stddev_pop_fields
   stddev_samp: virtual_conference_event_interests_stddev_samp_fields
   sum: virtual_conference_event_interests_sum_fields
   var_pop: virtual_conference_event_interests_var_pop_fields
   var_samp: virtual_conference_event_interests_var_samp_fields
   variance: virtual_conference_event_interests_variance_fields
}

"""aggregate avg on columns"""
type virtual_conference_event_interests_avg_fields {
   event_id: Float
   id: Float
   ordering: Float
}

"""
Boolean expression to filter rows from the table "virtual_conference_event_interests". All fields are combined with a logical 'AND'.
"""
input virtual_conference_event_interests_bool_exp {
  _and: [virtual_conference_event_interests_bool_exp! ]
  _not: virtual_conference_event_interests_bool_exp
  _or: [virtual_conference_event_interests_bool_exp! ]
  event: events_bool_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  ordering: Int_comparison_exp
  value: String_comparison_exp
  virtual_conference_user_interests: virtual_conference_user_interests_bool_exp
  virtual_conference_user_interests_aggregate: virtual_conference_user_interests_aggregate_bool_exp
}

"""
unique or primary key constraints on table "virtual_conference_event_interests"
"""
enum virtual_conference_event_interests_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_event_interests_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_event_interests"
"""
input virtual_conference_event_interests_inc_input {
  event_id: Int
  id: Int
  ordering: Int
}

"""
input type for inserting data into table "virtual_conference_event_interests"
"""
input virtual_conference_event_interests_insert_input {
  event: events_obj_rel_insert_input
  event_id: Int! 
  id: Int! 
  ordering: Int! 
  value: String! 
  virtual_conference_user_interests: virtual_conference_user_interests_arr_rel_insert_input
}

"""aggregate max on columns"""
type virtual_conference_event_interests_max_fields {
   event_id: Int
   id: Int
   ordering: Int
   value: String
}

"""aggregate min on columns"""
type virtual_conference_event_interests_min_fields {
   event_id: Int
   id: Int
   ordering: Int
   value: String
}

"""
response of any mutation on the table "virtual_conference_event_interests"
"""
type virtual_conference_event_interests_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_event_interests! ]! 
}

"""
input type for inserting object relation for remote table "virtual_conference_event_interests"
"""
input virtual_conference_event_interests_obj_rel_insert_input {
  data: virtual_conference_event_interests_insert_input! 
  """upsert condition"""
on_conflict: virtual_conference_event_interests_on_conflict
}

"""
on_conflict condition type for table "virtual_conference_event_interests"
"""
input virtual_conference_event_interests_on_conflict {
  constraint: virtual_conference_event_interests_constraint! 
  update_columns: [virtual_conference_event_interests_update_column! ]! 
  where: virtual_conference_event_interests_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_event_interests".
"""
input virtual_conference_event_interests_order_by {
  event: events_order_by
  event_id: order_by
  id: order_by
  ordering: order_by
  value: order_by
  virtual_conference_user_interests_aggregate: virtual_conference_user_interests_aggregate_order_by
}

"""
primary key columns input for table: virtual_conference_event_interests
"""
input virtual_conference_event_interests_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_event_interests"
"""
enum virtual_conference_event_interests_select_column {
  """column name"""
event_id
  """column name"""
id
  """column name"""
ordering
  """column name"""
value
}

"""
input type for updating data in table "virtual_conference_event_interests"
"""
input virtual_conference_event_interests_set_input {
  event_id: Int
  id: Int
  ordering: Int
  value: String
}

"""aggregate stddev on columns"""
type virtual_conference_event_interests_stddev_fields {
   event_id: Float
   id: Float
   ordering: Float
}

"""aggregate stddev_pop on columns"""
type virtual_conference_event_interests_stddev_pop_fields {
   event_id: Float
   id: Float
   ordering: Float
}

"""aggregate stddev_samp on columns"""
type virtual_conference_event_interests_stddev_samp_fields {
   event_id: Float
   id: Float
   ordering: Float
}

"""
Streaming cursor of the table "virtual_conference_event_interests"
"""
input virtual_conference_event_interests_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_event_interests_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_event_interests_stream_cursor_value_input {
  event_id: Int
  id: Int
  ordering: Int
  value: String
}

"""aggregate sum on columns"""
type virtual_conference_event_interests_sum_fields {
   event_id: Int
   id: Int
   ordering: Int
}

"""
update columns of table "virtual_conference_event_interests"
"""
enum virtual_conference_event_interests_update_column {
  """column name"""
event_id
  """column name"""
id
  """column name"""
ordering
  """column name"""
value
}

input virtual_conference_event_interests_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_event_interests_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_event_interests_set_input
  where: virtual_conference_event_interests_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_event_interests_var_pop_fields {
   event_id: Float
   id: Float
   ordering: Float
}

"""aggregate var_samp on columns"""
type virtual_conference_event_interests_var_samp_fields {
   event_id: Float
   id: Float
   ordering: Float
}

"""aggregate variance on columns"""
type virtual_conference_event_interests_variance_fields {
   event_id: Float
   id: Float
   ordering: Float
}

"""
columns and relationships of "virtual_conference_event_messages"
"""
type virtual_conference_event_messages {
  """An object relationship"""
 badge: virtual_conference_name_badge
  """An array relationship"""
 blocked_sender("""distinct select on columns"""
distinct_on: [virtual_conference_event_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_event_chat_blocks_bool_exp): [virtual_conference_event_chat_blocks! ]! 
  """An aggregate relationship"""
 blocked_sender_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_event_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_event_chat_blocks_bool_exp): virtual_conference_event_chat_blocks_aggregate! 
   created_at: timestamptz! 
   deleted: Boolean! 
   deleted_by: Int
   device: String
   event_id: Int! 
   fe_uuid: String
   id: Int! 
   message: String! 
   updated_at: timestamptz
  """An object relationship"""
 user: users! 
   user_id: Int! 
}

"""
aggregated selection of "virtual_conference_event_messages"
"""
type virtual_conference_event_messages_aggregate {
   aggregate: virtual_conference_event_messages_aggregate_fields
   nodes: [virtual_conference_event_messages! ]! 
}

input virtual_conference_event_messages_aggregate_bool_exp {
  bool_and: virtual_conference_event_messages_aggregate_bool_exp_bool_and
  bool_or: virtual_conference_event_messages_aggregate_bool_exp_bool_or
  count: virtual_conference_event_messages_aggregate_bool_exp_count
}

input virtual_conference_event_messages_aggregate_bool_exp_bool_and {
  arguments: virtual_conference_event_messages_select_column_virtual_conference_event_messages_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: virtual_conference_event_messages_bool_exp
  predicate: Boolean_comparison_exp! 
}

input virtual_conference_event_messages_aggregate_bool_exp_bool_or {
  arguments: virtual_conference_event_messages_select_column_virtual_conference_event_messages_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: virtual_conference_event_messages_bool_exp
  predicate: Boolean_comparison_exp! 
}

input virtual_conference_event_messages_aggregate_bool_exp_count {
  arguments: [virtual_conference_event_messages_select_column! ]
  distinct: Boolean
  filter: virtual_conference_event_messages_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_event_messages"
"""
type virtual_conference_event_messages_aggregate_fields {
   avg: virtual_conference_event_messages_avg_fields
   count(columns: [virtual_conference_event_messages_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_event_messages_max_fields
   min: virtual_conference_event_messages_min_fields
   stddev: virtual_conference_event_messages_stddev_fields
   stddev_pop: virtual_conference_event_messages_stddev_pop_fields
   stddev_samp: virtual_conference_event_messages_stddev_samp_fields
   sum: virtual_conference_event_messages_sum_fields
   var_pop: virtual_conference_event_messages_var_pop_fields
   var_samp: virtual_conference_event_messages_var_samp_fields
   variance: virtual_conference_event_messages_variance_fields
}

"""
order by aggregate values of table "virtual_conference_event_messages"
"""
input virtual_conference_event_messages_aggregate_order_by {
  avg: virtual_conference_event_messages_avg_order_by
  count: order_by
  max: virtual_conference_event_messages_max_order_by
  min: virtual_conference_event_messages_min_order_by
  stddev: virtual_conference_event_messages_stddev_order_by
  stddev_pop: virtual_conference_event_messages_stddev_pop_order_by
  stddev_samp: virtual_conference_event_messages_stddev_samp_order_by
  sum: virtual_conference_event_messages_sum_order_by
  var_pop: virtual_conference_event_messages_var_pop_order_by
  var_samp: virtual_conference_event_messages_var_samp_order_by
  variance: virtual_conference_event_messages_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_event_messages"
"""
input virtual_conference_event_messages_arr_rel_insert_input {
  data: [virtual_conference_event_messages_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_event_messages_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_event_messages_avg_fields {
   deleted_by: Float
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by avg() on columns of table "virtual_conference_event_messages"
"""
input virtual_conference_event_messages_avg_order_by {
  deleted_by: order_by
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_event_messages". All fields are combined with a logical 'AND'.
"""
input virtual_conference_event_messages_bool_exp {
  _and: [virtual_conference_event_messages_bool_exp! ]
  _not: virtual_conference_event_messages_bool_exp
  _or: [virtual_conference_event_messages_bool_exp! ]
  badge: virtual_conference_name_badge_bool_exp
  blocked_sender: virtual_conference_event_chat_blocks_bool_exp
  blocked_sender_aggregate: virtual_conference_event_chat_blocks_aggregate_bool_exp
  created_at: timestamptz_comparison_exp
  deleted: Boolean_comparison_exp
  deleted_by: Int_comparison_exp
  device: String_comparison_exp
  event_id: Int_comparison_exp
  fe_uuid: String_comparison_exp
  id: Int_comparison_exp
  message: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  user: users_bool_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_event_messages"
"""
enum virtual_conference_event_messages_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_event_messages_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_event_messages"
"""
input virtual_conference_event_messages_inc_input {
  deleted_by: Int
  event_id: Int
  id: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_event_messages"
"""
input virtual_conference_event_messages_insert_input {
  badge: virtual_conference_name_badge_obj_rel_insert_input
  blocked_sender: virtual_conference_event_chat_blocks_arr_rel_insert_input
  created_at: timestamptz! 
  deleted: Boolean! 
  deleted_by: Int
  device: String
  event_id: Int! 
  fe_uuid: String
  id: Int! 
  message: String! 
  updated_at: timestamptz! 
  user: users_obj_rel_insert_input
  user_id: Int! 
}

"""
columns and relationships of "virtual_conference_event_messages_last_read"
"""
type virtual_conference_event_messages_last_read {
   event_id: Int! 
   id: Int! 
   updated_at: timestamptz! 
   user_id: Int! 
}

"""
aggregated selection of "virtual_conference_event_messages_last_read"
"""
type virtual_conference_event_messages_last_read_aggregate {
   aggregate: virtual_conference_event_messages_last_read_aggregate_fields
   nodes: [virtual_conference_event_messages_last_read! ]! 
}

"""
aggregate fields of "virtual_conference_event_messages_last_read"
"""
type virtual_conference_event_messages_last_read_aggregate_fields {
   avg: virtual_conference_event_messages_last_read_avg_fields
   count(columns: [virtual_conference_event_messages_last_read_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_event_messages_last_read_max_fields
   min: virtual_conference_event_messages_last_read_min_fields
   stddev: virtual_conference_event_messages_last_read_stddev_fields
   stddev_pop: virtual_conference_event_messages_last_read_stddev_pop_fields
   stddev_samp: virtual_conference_event_messages_last_read_stddev_samp_fields
   sum: virtual_conference_event_messages_last_read_sum_fields
   var_pop: virtual_conference_event_messages_last_read_var_pop_fields
   var_samp: virtual_conference_event_messages_last_read_var_samp_fields
   variance: virtual_conference_event_messages_last_read_variance_fields
}

"""aggregate avg on columns"""
type virtual_conference_event_messages_last_read_avg_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
Boolean expression to filter rows from the table "virtual_conference_event_messages_last_read". All fields are combined with a logical 'AND'.
"""
input virtual_conference_event_messages_last_read_bool_exp {
  _and: [virtual_conference_event_messages_last_read_bool_exp! ]
  _not: virtual_conference_event_messages_last_read_bool_exp
  _or: [virtual_conference_event_messages_last_read_bool_exp! ]
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  updated_at: timestamptz_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_event_messages_last_read"
"""
enum virtual_conference_event_messages_last_read_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_event_messages_last_read_pkey
  """
  unique or primary key constraint on columns "event_id", "user_id"
  """
virtual_conference_event_messages_last_read_user_id_event_id_ke
}

"""
input type for incrementing numeric columns in table "virtual_conference_event_messages_last_read"
"""
input virtual_conference_event_messages_last_read_inc_input {
  event_id: Int
  id: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_event_messages_last_read"
"""
input virtual_conference_event_messages_last_read_insert_input {
  event_id: Int! 
  id: Int! 
  updated_at: timestamptz! 
  user_id: Int! 
}

"""aggregate max on columns"""
type virtual_conference_event_messages_last_read_max_fields {
   event_id: Int
   id: Int
   updated_at: timestamptz
   user_id: Int
}

"""aggregate min on columns"""
type virtual_conference_event_messages_last_read_min_fields {
   event_id: Int
   id: Int
   updated_at: timestamptz
   user_id: Int
}

"""
response of any mutation on the table "virtual_conference_event_messages_last_read"
"""
type virtual_conference_event_messages_last_read_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_event_messages_last_read! ]! 
}

"""
on_conflict condition type for table "virtual_conference_event_messages_last_read"
"""
input virtual_conference_event_messages_last_read_on_conflict {
  constraint: virtual_conference_event_messages_last_read_constraint! 
  update_columns: [virtual_conference_event_messages_last_read_update_column! ]! 
  where: virtual_conference_event_messages_last_read_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_event_messages_last_read".
"""
input virtual_conference_event_messages_last_read_order_by {
  event_id: order_by
  id: order_by
  updated_at: order_by
  user_id: order_by
}

"""
primary key columns input for table: virtual_conference_event_messages_last_read
"""
input virtual_conference_event_messages_last_read_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_event_messages_last_read"
"""
enum virtual_conference_event_messages_last_read_select_column {
  """column name"""
event_id
  """column name"""
id
  """column name"""
updated_at
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_event_messages_last_read"
"""
input virtual_conference_event_messages_last_read_set_input {
  event_id: Int
  id: Int
  updated_at: timestamptz
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_event_messages_last_read_stddev_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type virtual_conference_event_messages_last_read_stddev_pop_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type virtual_conference_event_messages_last_read_stddev_samp_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
Streaming cursor of the table "virtual_conference_event_messages_last_read"
"""
input virtual_conference_event_messages_last_read_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_event_messages_last_read_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_event_messages_last_read_stream_cursor_value_input {
  event_id: Int
  id: Int
  updated_at: timestamptz
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_event_messages_last_read_sum_fields {
   event_id: Int
   id: Int
   user_id: Int
}

"""
update columns of table "virtual_conference_event_messages_last_read"
"""
enum virtual_conference_event_messages_last_read_update_column {
  """column name"""
event_id
  """column name"""
id
  """column name"""
updated_at
  """column name"""
user_id
}

input virtual_conference_event_messages_last_read_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_event_messages_last_read_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_event_messages_last_read_set_input
  where: virtual_conference_event_messages_last_read_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_event_messages_last_read_var_pop_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""aggregate var_samp on columns"""
type virtual_conference_event_messages_last_read_var_samp_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""aggregate variance on columns"""
type virtual_conference_event_messages_last_read_variance_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""aggregate max on columns"""
type virtual_conference_event_messages_max_fields {
   created_at: timestamptz
   deleted_by: Int
   device: String
   event_id: Int
   fe_uuid: String
   id: Int
   message: String
   updated_at: timestamptz
   user_id: Int
}

"""
order by max() on columns of table "virtual_conference_event_messages"
"""
input virtual_conference_event_messages_max_order_by {
  created_at: order_by
  deleted_by: order_by
  device: order_by
  event_id: order_by
  fe_uuid: order_by
  id: order_by
  message: order_by
  updated_at: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type virtual_conference_event_messages_min_fields {
   created_at: timestamptz
   deleted_by: Int
   device: String
   event_id: Int
   fe_uuid: String
   id: Int
   message: String
   updated_at: timestamptz
   user_id: Int
}

"""
order by min() on columns of table "virtual_conference_event_messages"
"""
input virtual_conference_event_messages_min_order_by {
  created_at: order_by
  deleted_by: order_by
  device: order_by
  event_id: order_by
  fe_uuid: order_by
  id: order_by
  message: order_by
  updated_at: order_by
  user_id: order_by
}

"""
response of any mutation on the table "virtual_conference_event_messages"
"""
type virtual_conference_event_messages_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_event_messages! ]! 
}

"""
on_conflict condition type for table "virtual_conference_event_messages"
"""
input virtual_conference_event_messages_on_conflict {
  constraint: virtual_conference_event_messages_constraint! 
  update_columns: [virtual_conference_event_messages_update_column! ]! 
  where: virtual_conference_event_messages_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_event_messages".
"""
input virtual_conference_event_messages_order_by {
  badge: virtual_conference_name_badge_order_by
  blocked_sender_aggregate: virtual_conference_event_chat_blocks_aggregate_order_by
  created_at: order_by
  deleted: order_by
  deleted_by: order_by
  device: order_by
  event_id: order_by
  fe_uuid: order_by
  id: order_by
  message: order_by
  updated_at: order_by
  user: users_order_by
  user_id: order_by
}

"""primary key columns input for table: virtual_conference_event_messages"""
input virtual_conference_event_messages_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_event_messages"
"""
enum virtual_conference_event_messages_select_column {
  """column name"""
created_at
  """column name"""
deleted
  """column name"""
deleted_by
  """column name"""
device
  """column name"""
event_id
  """column name"""
fe_uuid
  """column name"""
id
  """column name"""
message
  """column name"""
updated_at
  """column name"""
user_id
}

"""
select "virtual_conference_event_messages_aggregate_bool_exp_bool_and_arguments_columns" columns of table "virtual_conference_event_messages"
"""
enum virtual_conference_event_messages_select_column_virtual_conference_event_messages_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
deleted
}

"""
select "virtual_conference_event_messages_aggregate_bool_exp_bool_or_arguments_columns" columns of table "virtual_conference_event_messages"
"""
enum virtual_conference_event_messages_select_column_virtual_conference_event_messages_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
deleted
}

"""
input type for updating data in table "virtual_conference_event_messages"
"""
input virtual_conference_event_messages_set_input {
  created_at: timestamptz
  deleted: Boolean
  deleted_by: Int
  device: String
  event_id: Int
  fe_uuid: String
  id: Int
  message: String
  updated_at: timestamptz
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_event_messages_stddev_fields {
   deleted_by: Float
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_event_messages"
"""
input virtual_conference_event_messages_stddev_order_by {
  deleted_by: order_by
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_event_messages_stddev_pop_fields {
   deleted_by: Float
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_event_messages"
"""
input virtual_conference_event_messages_stddev_pop_order_by {
  deleted_by: order_by
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_event_messages_stddev_samp_fields {
   deleted_by: Float
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_event_messages"
"""
input virtual_conference_event_messages_stddev_samp_order_by {
  deleted_by: order_by
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_event_messages"
"""
input virtual_conference_event_messages_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_event_messages_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_event_messages_stream_cursor_value_input {
  created_at: timestamptz
  deleted: Boolean
  deleted_by: Int
  device: String
  event_id: Int
  fe_uuid: String
  id: Int
  message: String
  updated_at: timestamptz
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_event_messages_sum_fields {
   deleted_by: Int
   event_id: Int
   id: Int
   user_id: Int
}

"""
order by sum() on columns of table "virtual_conference_event_messages"
"""
input virtual_conference_event_messages_sum_order_by {
  deleted_by: order_by
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""
update columns of table "virtual_conference_event_messages"
"""
enum virtual_conference_event_messages_update_column {
  """column name"""
created_at
  """column name"""
deleted
  """column name"""
deleted_by
  """column name"""
device
  """column name"""
event_id
  """column name"""
fe_uuid
  """column name"""
id
  """column name"""
message
  """column name"""
updated_at
  """column name"""
user_id
}

input virtual_conference_event_messages_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_event_messages_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_event_messages_set_input
  where: virtual_conference_event_messages_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_event_messages_var_pop_fields {
   deleted_by: Float
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_event_messages"
"""
input virtual_conference_event_messages_var_pop_order_by {
  deleted_by: order_by
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_event_messages_var_samp_fields {
   deleted_by: Float
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_event_messages"
"""
input virtual_conference_event_messages_var_samp_order_by {
  deleted_by: order_by
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_event_messages_variance_fields {
   deleted_by: Float
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by variance() on columns of table "virtual_conference_event_messages"
"""
input virtual_conference_event_messages_variance_order_by {
  deleted_by: order_by
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""
columns and relationships of "virtual_conference_group_chat_message_reads"
"""
type virtual_conference_group_chat_message_reads {
   id: Int! 
  """An array relationship"""
 message("""distinct select on columns"""
distinct_on: [virtual_conference_group_chat_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_chat_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_group_chat_messages_bool_exp): [virtual_conference_group_chat_messages! ]! 
  """An aggregate relationship"""
 message_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_group_chat_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_chat_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_group_chat_messages_bool_exp): virtual_conference_group_chat_messages_aggregate! 
   message_id: Int! 
   user_id: Int! 
}

"""
aggregated selection of "virtual_conference_group_chat_message_reads"
"""
type virtual_conference_group_chat_message_reads_aggregate {
   aggregate: virtual_conference_group_chat_message_reads_aggregate_fields
   nodes: [virtual_conference_group_chat_message_reads! ]! 
}

input virtual_conference_group_chat_message_reads_aggregate_bool_exp {
  count: virtual_conference_group_chat_message_reads_aggregate_bool_exp_count
}

input virtual_conference_group_chat_message_reads_aggregate_bool_exp_count {
  arguments: [virtual_conference_group_chat_message_reads_select_column! ]
  distinct: Boolean
  filter: virtual_conference_group_chat_message_reads_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_group_chat_message_reads"
"""
type virtual_conference_group_chat_message_reads_aggregate_fields {
   avg: virtual_conference_group_chat_message_reads_avg_fields
   count(columns: [virtual_conference_group_chat_message_reads_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_group_chat_message_reads_max_fields
   min: virtual_conference_group_chat_message_reads_min_fields
   stddev: virtual_conference_group_chat_message_reads_stddev_fields
   stddev_pop: virtual_conference_group_chat_message_reads_stddev_pop_fields
   stddev_samp: virtual_conference_group_chat_message_reads_stddev_samp_fields
   sum: virtual_conference_group_chat_message_reads_sum_fields
   var_pop: virtual_conference_group_chat_message_reads_var_pop_fields
   var_samp: virtual_conference_group_chat_message_reads_var_samp_fields
   variance: virtual_conference_group_chat_message_reads_variance_fields
}

"""
order by aggregate values of table "virtual_conference_group_chat_message_reads"
"""
input virtual_conference_group_chat_message_reads_aggregate_order_by {
  avg: virtual_conference_group_chat_message_reads_avg_order_by
  count: order_by
  max: virtual_conference_group_chat_message_reads_max_order_by
  min: virtual_conference_group_chat_message_reads_min_order_by
  stddev: virtual_conference_group_chat_message_reads_stddev_order_by
  stddev_pop: virtual_conference_group_chat_message_reads_stddev_pop_order_by
  stddev_samp: virtual_conference_group_chat_message_reads_stddev_samp_order_by
  sum: virtual_conference_group_chat_message_reads_sum_order_by
  var_pop: virtual_conference_group_chat_message_reads_var_pop_order_by
  var_samp: virtual_conference_group_chat_message_reads_var_samp_order_by
  variance: virtual_conference_group_chat_message_reads_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_group_chat_message_reads"
"""
input virtual_conference_group_chat_message_reads_arr_rel_insert_input {
  data: [virtual_conference_group_chat_message_reads_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_group_chat_message_reads_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_group_chat_message_reads_avg_fields {
   id: Float
   message_id: Float
   user_id: Float
}

"""
order by avg() on columns of table "virtual_conference_group_chat_message_reads"
"""
input virtual_conference_group_chat_message_reads_avg_order_by {
  id: order_by
  message_id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_group_chat_message_reads". All fields are combined with a logical 'AND'.
"""
input virtual_conference_group_chat_message_reads_bool_exp {
  _and: [virtual_conference_group_chat_message_reads_bool_exp! ]
  _not: virtual_conference_group_chat_message_reads_bool_exp
  _or: [virtual_conference_group_chat_message_reads_bool_exp! ]
  id: Int_comparison_exp
  message: virtual_conference_group_chat_messages_bool_exp
  message_aggregate: virtual_conference_group_chat_messages_aggregate_bool_exp
  message_id: Int_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_group_chat_message_reads"
"""
enum virtual_conference_group_chat_message_reads_constraint {
  """
  unique or primary key constraint on columns "user_id", "message_id"
  """
virtual_conference_group_chat_message_re_user_id_message_id_key
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_group_chat_message_reads_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_group_chat_message_reads"
"""
input virtual_conference_group_chat_message_reads_inc_input {
  id: Int
  message_id: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_group_chat_message_reads"
"""
input virtual_conference_group_chat_message_reads_insert_input {
  id: Int! 
  message: virtual_conference_group_chat_messages_arr_rel_insert_input
  message_id: Int! 
  user_id: Int! 
}

"""aggregate max on columns"""
type virtual_conference_group_chat_message_reads_max_fields {
   id: Int
   message_id: Int
   user_id: Int
}

"""
order by max() on columns of table "virtual_conference_group_chat_message_reads"
"""
input virtual_conference_group_chat_message_reads_max_order_by {
  id: order_by
  message_id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type virtual_conference_group_chat_message_reads_min_fields {
   id: Int
   message_id: Int
   user_id: Int
}

"""
order by min() on columns of table "virtual_conference_group_chat_message_reads"
"""
input virtual_conference_group_chat_message_reads_min_order_by {
  id: order_by
  message_id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "virtual_conference_group_chat_message_reads"
"""
type virtual_conference_group_chat_message_reads_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_group_chat_message_reads! ]! 
}

"""
on_conflict condition type for table "virtual_conference_group_chat_message_reads"
"""
input virtual_conference_group_chat_message_reads_on_conflict {
  constraint: virtual_conference_group_chat_message_reads_constraint! 
  update_columns: [virtual_conference_group_chat_message_reads_update_column! ]! 
  where: virtual_conference_group_chat_message_reads_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_group_chat_message_reads".
"""
input virtual_conference_group_chat_message_reads_order_by {
  id: order_by
  message_aggregate: virtual_conference_group_chat_messages_aggregate_order_by
  message_id: order_by
  user_id: order_by
}

"""
primary key columns input for table: virtual_conference_group_chat_message_reads
"""
input virtual_conference_group_chat_message_reads_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_group_chat_message_reads"
"""
enum virtual_conference_group_chat_message_reads_select_column {
  """column name"""
id
  """column name"""
message_id
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_group_chat_message_reads"
"""
input virtual_conference_group_chat_message_reads_set_input {
  id: Int
  message_id: Int
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_group_chat_message_reads_stddev_fields {
   id: Float
   message_id: Float
   user_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_group_chat_message_reads"
"""
input virtual_conference_group_chat_message_reads_stddev_order_by {
  id: order_by
  message_id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_group_chat_message_reads_stddev_pop_fields {
   id: Float
   message_id: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_group_chat_message_reads"
"""
input virtual_conference_group_chat_message_reads_stddev_pop_order_by {
  id: order_by
  message_id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_group_chat_message_reads_stddev_samp_fields {
   id: Float
   message_id: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_group_chat_message_reads"
"""
input virtual_conference_group_chat_message_reads_stddev_samp_order_by {
  id: order_by
  message_id: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_group_chat_message_reads"
"""
input virtual_conference_group_chat_message_reads_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_group_chat_message_reads_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_group_chat_message_reads_stream_cursor_value_input {
  id: Int
  message_id: Int
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_group_chat_message_reads_sum_fields {
   id: Int
   message_id: Int
   user_id: Int
}

"""
order by sum() on columns of table "virtual_conference_group_chat_message_reads"
"""
input virtual_conference_group_chat_message_reads_sum_order_by {
  id: order_by
  message_id: order_by
  user_id: order_by
}

"""
update columns of table "virtual_conference_group_chat_message_reads"
"""
enum virtual_conference_group_chat_message_reads_update_column {
  """column name"""
id
  """column name"""
message_id
  """column name"""
user_id
}

input virtual_conference_group_chat_message_reads_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_group_chat_message_reads_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_group_chat_message_reads_set_input
  where: virtual_conference_group_chat_message_reads_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_group_chat_message_reads_var_pop_fields {
   id: Float
   message_id: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_group_chat_message_reads"
"""
input virtual_conference_group_chat_message_reads_var_pop_order_by {
  id: order_by
  message_id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_group_chat_message_reads_var_samp_fields {
   id: Float
   message_id: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_group_chat_message_reads"
"""
input virtual_conference_group_chat_message_reads_var_samp_order_by {
  id: order_by
  message_id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_group_chat_message_reads_variance_fields {
   id: Float
   message_id: Float
   user_id: Float
}

"""
order by variance() on columns of table "virtual_conference_group_chat_message_reads"
"""
input virtual_conference_group_chat_message_reads_variance_order_by {
  id: order_by
  message_id: order_by
  user_id: order_by
}

"""
columns and relationships of "virtual_conference_group_chat_messages"
"""
type virtual_conference_group_chat_messages {
  """An object relationship"""
 chat_group: virtual_conference_chat_groups! 
   created_at: timestamptz! 
   deleted: Boolean! 
   device: String
  """An array relationship"""
 direct_blocks("""distinct select on columns"""
distinct_on: [virtual_conference_direct_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_chat_blocks_bool_exp): [virtual_conference_direct_chat_blocks! ]! 
  """An aggregate relationship"""
 direct_blocks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_direct_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_chat_blocks_bool_exp): virtual_conference_direct_chat_blocks_aggregate! 
  """An array relationship"""
 event_blocks("""distinct select on columns"""
distinct_on: [virtual_conference_event_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_event_chat_blocks_bool_exp): [virtual_conference_event_chat_blocks! ]! 
  """An aggregate relationship"""
 event_blocks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_event_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_event_chat_blocks_bool_exp): virtual_conference_event_chat_blocks_aggregate! 
   fe_uuid: String
   group_id: uuid! 
   id: Int! 
   message: String! 
  """An array relationship"""
 reads("""distinct select on columns"""
distinct_on: [virtual_conference_group_chat_message_reads_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_chat_message_reads_order_by! ], """filter the rows returned"""
where: virtual_conference_group_chat_message_reads_bool_exp): [virtual_conference_group_chat_message_reads! ]! 
  """An aggregate relationship"""
 reads_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_group_chat_message_reads_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_chat_message_reads_order_by! ], """filter the rows returned"""
where: virtual_conference_group_chat_message_reads_bool_exp): virtual_conference_group_chat_message_reads_aggregate! 
  """An array relationship"""
 sender("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): [users! ]! 
  """An aggregate relationship"""
 sender_aggregate("""distinct select on columns"""
distinct_on: [users_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [users_order_by! ], """filter the rows returned"""
where: users_bool_exp): users_aggregate! 
   sender_id: Int! 
   updated_at: timestamptz! 
}

"""
aggregated selection of "virtual_conference_group_chat_messages"
"""
type virtual_conference_group_chat_messages_aggregate {
   aggregate: virtual_conference_group_chat_messages_aggregate_fields
   nodes: [virtual_conference_group_chat_messages! ]! 
}

input virtual_conference_group_chat_messages_aggregate_bool_exp {
  bool_and: virtual_conference_group_chat_messages_aggregate_bool_exp_bool_and
  bool_or: virtual_conference_group_chat_messages_aggregate_bool_exp_bool_or
  count: virtual_conference_group_chat_messages_aggregate_bool_exp_count
}

input virtual_conference_group_chat_messages_aggregate_bool_exp_bool_and {
  arguments: virtual_conference_group_chat_messages_select_column_virtual_conference_group_chat_messages_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: virtual_conference_group_chat_messages_bool_exp
  predicate: Boolean_comparison_exp! 
}

input virtual_conference_group_chat_messages_aggregate_bool_exp_bool_or {
  arguments: virtual_conference_group_chat_messages_select_column_virtual_conference_group_chat_messages_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: virtual_conference_group_chat_messages_bool_exp
  predicate: Boolean_comparison_exp! 
}

input virtual_conference_group_chat_messages_aggregate_bool_exp_count {
  arguments: [virtual_conference_group_chat_messages_select_column! ]
  distinct: Boolean
  filter: virtual_conference_group_chat_messages_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_group_chat_messages"
"""
type virtual_conference_group_chat_messages_aggregate_fields {
   avg: virtual_conference_group_chat_messages_avg_fields
   count(columns: [virtual_conference_group_chat_messages_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_group_chat_messages_max_fields
   min: virtual_conference_group_chat_messages_min_fields
   stddev: virtual_conference_group_chat_messages_stddev_fields
   stddev_pop: virtual_conference_group_chat_messages_stddev_pop_fields
   stddev_samp: virtual_conference_group_chat_messages_stddev_samp_fields
   sum: virtual_conference_group_chat_messages_sum_fields
   var_pop: virtual_conference_group_chat_messages_var_pop_fields
   var_samp: virtual_conference_group_chat_messages_var_samp_fields
   variance: virtual_conference_group_chat_messages_variance_fields
}

"""
order by aggregate values of table "virtual_conference_group_chat_messages"
"""
input virtual_conference_group_chat_messages_aggregate_order_by {
  avg: virtual_conference_group_chat_messages_avg_order_by
  count: order_by
  max: virtual_conference_group_chat_messages_max_order_by
  min: virtual_conference_group_chat_messages_min_order_by
  stddev: virtual_conference_group_chat_messages_stddev_order_by
  stddev_pop: virtual_conference_group_chat_messages_stddev_pop_order_by
  stddev_samp: virtual_conference_group_chat_messages_stddev_samp_order_by
  sum: virtual_conference_group_chat_messages_sum_order_by
  var_pop: virtual_conference_group_chat_messages_var_pop_order_by
  var_samp: virtual_conference_group_chat_messages_var_samp_order_by
  variance: virtual_conference_group_chat_messages_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_group_chat_messages"
"""
input virtual_conference_group_chat_messages_arr_rel_insert_input {
  data: [virtual_conference_group_chat_messages_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_group_chat_messages_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_group_chat_messages_avg_fields {
   id: Float
   sender_id: Float
}

"""
order by avg() on columns of table "virtual_conference_group_chat_messages"
"""
input virtual_conference_group_chat_messages_avg_order_by {
  id: order_by
  sender_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_group_chat_messages". All fields are combined with a logical 'AND'.
"""
input virtual_conference_group_chat_messages_bool_exp {
  _and: [virtual_conference_group_chat_messages_bool_exp! ]
  _not: virtual_conference_group_chat_messages_bool_exp
  _or: [virtual_conference_group_chat_messages_bool_exp! ]
  chat_group: virtual_conference_chat_groups_bool_exp
  created_at: timestamptz_comparison_exp
  deleted: Boolean_comparison_exp
  device: String_comparison_exp
  direct_blocks: virtual_conference_direct_chat_blocks_bool_exp
  direct_blocks_aggregate: virtual_conference_direct_chat_blocks_aggregate_bool_exp
  event_blocks: virtual_conference_event_chat_blocks_bool_exp
  event_blocks_aggregate: virtual_conference_event_chat_blocks_aggregate_bool_exp
  fe_uuid: String_comparison_exp
  group_id: uuid_comparison_exp
  id: Int_comparison_exp
  message: String_comparison_exp
  reads: virtual_conference_group_chat_message_reads_bool_exp
  reads_aggregate: virtual_conference_group_chat_message_reads_aggregate_bool_exp
  sender: users_bool_exp
  sender_aggregate: users_aggregate_bool_exp
  sender_id: Int_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_group_chat_messages"
"""
enum virtual_conference_group_chat_messages_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_group_chat_messages_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_group_chat_messages"
"""
input virtual_conference_group_chat_messages_inc_input {
  id: Int
  sender_id: Int
}

"""
input type for inserting data into table "virtual_conference_group_chat_messages"
"""
input virtual_conference_group_chat_messages_insert_input {
  chat_group: virtual_conference_chat_groups_obj_rel_insert_input
  created_at: timestamptz! 
  deleted: Boolean! 
  device: String
  direct_blocks: virtual_conference_direct_chat_blocks_arr_rel_insert_input
  event_blocks: virtual_conference_event_chat_blocks_arr_rel_insert_input
  fe_uuid: String
  group_id: uuid! 
  id: Int! 
  message: String! 
  reads: virtual_conference_group_chat_message_reads_arr_rel_insert_input
  sender: users_arr_rel_insert_input
  sender_id: Int! 
  updated_at: timestamptz! 
}

"""aggregate max on columns"""
type virtual_conference_group_chat_messages_max_fields {
   created_at: timestamptz
   device: String
   fe_uuid: String
   group_id: uuid
   id: Int
   message: String
   sender_id: Int
   updated_at: timestamptz
}

"""
order by max() on columns of table "virtual_conference_group_chat_messages"
"""
input virtual_conference_group_chat_messages_max_order_by {
  created_at: order_by
  device: order_by
  fe_uuid: order_by
  group_id: order_by
  id: order_by
  message: order_by
  sender_id: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type virtual_conference_group_chat_messages_min_fields {
   created_at: timestamptz
   device: String
   fe_uuid: String
   group_id: uuid
   id: Int
   message: String
   sender_id: Int
   updated_at: timestamptz
}

"""
order by min() on columns of table "virtual_conference_group_chat_messages"
"""
input virtual_conference_group_chat_messages_min_order_by {
  created_at: order_by
  device: order_by
  fe_uuid: order_by
  group_id: order_by
  id: order_by
  message: order_by
  sender_id: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "virtual_conference_group_chat_messages"
"""
type virtual_conference_group_chat_messages_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_group_chat_messages! ]! 
}

"""
on_conflict condition type for table "virtual_conference_group_chat_messages"
"""
input virtual_conference_group_chat_messages_on_conflict {
  constraint: virtual_conference_group_chat_messages_constraint! 
  update_columns: [virtual_conference_group_chat_messages_update_column! ]! 
  where: virtual_conference_group_chat_messages_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_group_chat_messages".
"""
input virtual_conference_group_chat_messages_order_by {
  chat_group: virtual_conference_chat_groups_order_by
  created_at: order_by
  deleted: order_by
  device: order_by
  direct_blocks_aggregate: virtual_conference_direct_chat_blocks_aggregate_order_by
  event_blocks_aggregate: virtual_conference_event_chat_blocks_aggregate_order_by
  fe_uuid: order_by
  group_id: order_by
  id: order_by
  message: order_by
  reads_aggregate: virtual_conference_group_chat_message_reads_aggregate_order_by
  sender_aggregate: users_aggregate_order_by
  sender_id: order_by
  updated_at: order_by
}

"""
primary key columns input for table: virtual_conference_group_chat_messages
"""
input virtual_conference_group_chat_messages_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_group_chat_messages"
"""
enum virtual_conference_group_chat_messages_select_column {
  """column name"""
created_at
  """column name"""
deleted
  """column name"""
device
  """column name"""
fe_uuid
  """column name"""
group_id
  """column name"""
id
  """column name"""
message
  """column name"""
sender_id
  """column name"""
updated_at
}

"""
select "virtual_conference_group_chat_messages_aggregate_bool_exp_bool_and_arguments_columns" columns of table "virtual_conference_group_chat_messages"
"""
enum virtual_conference_group_chat_messages_select_column_virtual_conference_group_chat_messages_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
deleted
}

"""
select "virtual_conference_group_chat_messages_aggregate_bool_exp_bool_or_arguments_columns" columns of table "virtual_conference_group_chat_messages"
"""
enum virtual_conference_group_chat_messages_select_column_virtual_conference_group_chat_messages_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
deleted
}

"""
input type for updating data in table "virtual_conference_group_chat_messages"
"""
input virtual_conference_group_chat_messages_set_input {
  created_at: timestamptz
  deleted: Boolean
  device: String
  fe_uuid: String
  group_id: uuid
  id: Int
  message: String
  sender_id: Int
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type virtual_conference_group_chat_messages_stddev_fields {
   id: Float
   sender_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_group_chat_messages"
"""
input virtual_conference_group_chat_messages_stddev_order_by {
  id: order_by
  sender_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_group_chat_messages_stddev_pop_fields {
   id: Float
   sender_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_group_chat_messages"
"""
input virtual_conference_group_chat_messages_stddev_pop_order_by {
  id: order_by
  sender_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_group_chat_messages_stddev_samp_fields {
   id: Float
   sender_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_group_chat_messages"
"""
input virtual_conference_group_chat_messages_stddev_samp_order_by {
  id: order_by
  sender_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_group_chat_messages"
"""
input virtual_conference_group_chat_messages_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_group_chat_messages_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_group_chat_messages_stream_cursor_value_input {
  created_at: timestamptz
  deleted: Boolean
  device: String
  fe_uuid: String
  group_id: uuid
  id: Int
  message: String
  sender_id: Int
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type virtual_conference_group_chat_messages_sum_fields {
   id: Int
   sender_id: Int
}

"""
order by sum() on columns of table "virtual_conference_group_chat_messages"
"""
input virtual_conference_group_chat_messages_sum_order_by {
  id: order_by
  sender_id: order_by
}

"""
update columns of table "virtual_conference_group_chat_messages"
"""
enum virtual_conference_group_chat_messages_update_column {
  """column name"""
created_at
  """column name"""
deleted
  """column name"""
device
  """column name"""
fe_uuid
  """column name"""
group_id
  """column name"""
id
  """column name"""
message
  """column name"""
sender_id
  """column name"""
updated_at
}

input virtual_conference_group_chat_messages_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_group_chat_messages_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_group_chat_messages_set_input
  where: virtual_conference_group_chat_messages_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_group_chat_messages_var_pop_fields {
   id: Float
   sender_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_group_chat_messages"
"""
input virtual_conference_group_chat_messages_var_pop_order_by {
  id: order_by
  sender_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_group_chat_messages_var_samp_fields {
   id: Float
   sender_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_group_chat_messages"
"""
input virtual_conference_group_chat_messages_var_samp_order_by {
  id: order_by
  sender_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_group_chat_messages_variance_fields {
   id: Float
   sender_id: Float
}

"""
order by variance() on columns of table "virtual_conference_group_chat_messages"
"""
input virtual_conference_group_chat_messages_variance_order_by {
  id: order_by
  sender_id: order_by
}

"""
columns and relationships of "virtual_conference_group_video_call_dismissals"
"""
type virtual_conference_group_video_call_dismissals {
   created_at: timestamptz! 
   group_chat_id: uuid! 
   id: Int! 
   user_id: Int! 
}

"""
aggregated selection of "virtual_conference_group_video_call_dismissals"
"""
type virtual_conference_group_video_call_dismissals_aggregate {
   aggregate: virtual_conference_group_video_call_dismissals_aggregate_fields
   nodes: [virtual_conference_group_video_call_dismissals! ]! 
}

input virtual_conference_group_video_call_dismissals_aggregate_bool_exp {
  count: virtual_conference_group_video_call_dismissals_aggregate_bool_exp_count
}

input virtual_conference_group_video_call_dismissals_aggregate_bool_exp_count {
  arguments: [virtual_conference_group_video_call_dismissals_select_column! ]
  distinct: Boolean
  filter: virtual_conference_group_video_call_dismissals_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_group_video_call_dismissals"
"""
type virtual_conference_group_video_call_dismissals_aggregate_fields {
   avg: virtual_conference_group_video_call_dismissals_avg_fields
   count(columns: [virtual_conference_group_video_call_dismissals_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_group_video_call_dismissals_max_fields
   min: virtual_conference_group_video_call_dismissals_min_fields
   stddev: virtual_conference_group_video_call_dismissals_stddev_fields
   stddev_pop: virtual_conference_group_video_call_dismissals_stddev_pop_fields
   stddev_samp: virtual_conference_group_video_call_dismissals_stddev_samp_fields
   sum: virtual_conference_group_video_call_dismissals_sum_fields
   var_pop: virtual_conference_group_video_call_dismissals_var_pop_fields
   var_samp: virtual_conference_group_video_call_dismissals_var_samp_fields
   variance: virtual_conference_group_video_call_dismissals_variance_fields
}

"""
order by aggregate values of table "virtual_conference_group_video_call_dismissals"
"""
input virtual_conference_group_video_call_dismissals_aggregate_order_by {
  avg: virtual_conference_group_video_call_dismissals_avg_order_by
  count: order_by
  max: virtual_conference_group_video_call_dismissals_max_order_by
  min: virtual_conference_group_video_call_dismissals_min_order_by
  stddev: virtual_conference_group_video_call_dismissals_stddev_order_by
  stddev_pop: virtual_conference_group_video_call_dismissals_stddev_pop_order_by
  stddev_samp: virtual_conference_group_video_call_dismissals_stddev_samp_order_by
  sum: virtual_conference_group_video_call_dismissals_sum_order_by
  var_pop: virtual_conference_group_video_call_dismissals_var_pop_order_by
  var_samp: virtual_conference_group_video_call_dismissals_var_samp_order_by
  variance: virtual_conference_group_video_call_dismissals_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_group_video_call_dismissals"
"""
input virtual_conference_group_video_call_dismissals_arr_rel_insert_input {
  data: [virtual_conference_group_video_call_dismissals_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_group_video_call_dismissals_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_group_video_call_dismissals_avg_fields {
   id: Float
   user_id: Float
}

"""
order by avg() on columns of table "virtual_conference_group_video_call_dismissals"
"""
input virtual_conference_group_video_call_dismissals_avg_order_by {
  id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_group_video_call_dismissals". All fields are combined with a logical 'AND'.
"""
input virtual_conference_group_video_call_dismissals_bool_exp {
  _and: [virtual_conference_group_video_call_dismissals_bool_exp! ]
  _not: virtual_conference_group_video_call_dismissals_bool_exp
  _or: [virtual_conference_group_video_call_dismissals_bool_exp! ]
  created_at: timestamptz_comparison_exp
  group_chat_id: uuid_comparison_exp
  id: Int_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_group_video_call_dismissals"
"""
enum virtual_conference_group_video_call_dismissals_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_group_video_call_dismissals_pkey
  """
  unique or primary key constraint on columns "user_id", "group_chat_id"
  """
virtual_conference_group_video_call_dismissals_user_id_group_vi
}

"""
input type for incrementing numeric columns in table "virtual_conference_group_video_call_dismissals"
"""
input virtual_conference_group_video_call_dismissals_inc_input {
  id: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_group_video_call_dismissals"
"""
input virtual_conference_group_video_call_dismissals_insert_input {
  created_at: timestamptz! 
  group_chat_id: uuid! 
  id: Int! 
  user_id: Int! 
}

"""aggregate max on columns"""
type virtual_conference_group_video_call_dismissals_max_fields {
   created_at: timestamptz
   group_chat_id: uuid
   id: Int
   user_id: Int
}

"""
order by max() on columns of table "virtual_conference_group_video_call_dismissals"
"""
input virtual_conference_group_video_call_dismissals_max_order_by {
  created_at: order_by
  group_chat_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type virtual_conference_group_video_call_dismissals_min_fields {
   created_at: timestamptz
   group_chat_id: uuid
   id: Int
   user_id: Int
}

"""
order by min() on columns of table "virtual_conference_group_video_call_dismissals"
"""
input virtual_conference_group_video_call_dismissals_min_order_by {
  created_at: order_by
  group_chat_id: order_by
  id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "virtual_conference_group_video_call_dismissals"
"""
type virtual_conference_group_video_call_dismissals_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_group_video_call_dismissals! ]! 
}

"""
on_conflict condition type for table "virtual_conference_group_video_call_dismissals"
"""
input virtual_conference_group_video_call_dismissals_on_conflict {
  constraint: virtual_conference_group_video_call_dismissals_constraint! 
  update_columns: [virtual_conference_group_video_call_dismissals_update_column! ]! 
  where: virtual_conference_group_video_call_dismissals_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_group_video_call_dismissals".
"""
input virtual_conference_group_video_call_dismissals_order_by {
  created_at: order_by
  group_chat_id: order_by
  id: order_by
  user_id: order_by
}

"""
primary key columns input for table: virtual_conference_group_video_call_dismissals
"""
input virtual_conference_group_video_call_dismissals_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_group_video_call_dismissals"
"""
enum virtual_conference_group_video_call_dismissals_select_column {
  """column name"""
created_at
  """column name"""
group_chat_id
  """column name"""
id
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_group_video_call_dismissals"
"""
input virtual_conference_group_video_call_dismissals_set_input {
  created_at: timestamptz
  group_chat_id: uuid
  id: Int
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_group_video_call_dismissals_stddev_fields {
   id: Float
   user_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_group_video_call_dismissals"
"""
input virtual_conference_group_video_call_dismissals_stddev_order_by {
  id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_group_video_call_dismissals_stddev_pop_fields {
   id: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_group_video_call_dismissals"
"""
input virtual_conference_group_video_call_dismissals_stddev_pop_order_by {
  id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_group_video_call_dismissals_stddev_samp_fields {
   id: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_group_video_call_dismissals"
"""
input virtual_conference_group_video_call_dismissals_stddev_samp_order_by {
  id: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_group_video_call_dismissals"
"""
input virtual_conference_group_video_call_dismissals_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_group_video_call_dismissals_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_group_video_call_dismissals_stream_cursor_value_input {
  created_at: timestamptz
  group_chat_id: uuid
  id: Int
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_group_video_call_dismissals_sum_fields {
   id: Int
   user_id: Int
}

"""
order by sum() on columns of table "virtual_conference_group_video_call_dismissals"
"""
input virtual_conference_group_video_call_dismissals_sum_order_by {
  id: order_by
  user_id: order_by
}

"""
update columns of table "virtual_conference_group_video_call_dismissals"
"""
enum virtual_conference_group_video_call_dismissals_update_column {
  """column name"""
created_at
  """column name"""
group_chat_id
  """column name"""
id
  """column name"""
user_id
}

input virtual_conference_group_video_call_dismissals_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_group_video_call_dismissals_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_group_video_call_dismissals_set_input
  where: virtual_conference_group_video_call_dismissals_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_group_video_call_dismissals_var_pop_fields {
   id: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_group_video_call_dismissals"
"""
input virtual_conference_group_video_call_dismissals_var_pop_order_by {
  id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_group_video_call_dismissals_var_samp_fields {
   id: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_group_video_call_dismissals"
"""
input virtual_conference_group_video_call_dismissals_var_samp_order_by {
  id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_group_video_call_dismissals_variance_fields {
   id: Float
   user_id: Float
}

"""
order by variance() on columns of table "virtual_conference_group_video_call_dismissals"
"""
input virtual_conference_group_video_call_dismissals_variance_order_by {
  id: order_by
  user_id: order_by
}

"""
columns and relationships of "virtual_conference_group_video_call_durations"
"""
type virtual_conference_group_video_call_durations {
  """An array relationship"""
 chat_group("""distinct select on columns"""
distinct_on: [virtual_conference_chat_groups_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_groups_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_groups_bool_exp): [virtual_conference_chat_groups! ]! 
  """An aggregate relationship"""
 chat_group_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_chat_groups_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_chat_groups_order_by! ], """filter the rows returned"""
where: virtual_conference_chat_groups_bool_exp): virtual_conference_chat_groups_aggregate! 
   chat_group_id: uuid! 
  """An array relationship"""
 chat_notification_dismissals("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_notification_dismissals_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_notification_dismissals_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_notification_dismissals_bool_exp): [virtual_conference_group_video_call_notification_dismissals! ]! 
  """An aggregate relationship"""
 chat_notification_dismissals_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_group_video_call_notification_dismissals_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_group_video_call_notification_dismissals_order_by! ], """filter the rows returned"""
where: virtual_conference_group_video_call_notification_dismissals_bool_exp): virtual_conference_group_video_call_notification_dismissals_aggregate! 
   created_at: timestamptz! 
   creator_id: Int! 
   ended_at: timestamptz
   id: uuid! 
}

"""
aggregated selection of "virtual_conference_group_video_call_durations"
"""
type virtual_conference_group_video_call_durations_aggregate {
   aggregate: virtual_conference_group_video_call_durations_aggregate_fields
   nodes: [virtual_conference_group_video_call_durations! ]! 
}

input virtual_conference_group_video_call_durations_aggregate_bool_exp {
  count: virtual_conference_group_video_call_durations_aggregate_bool_exp_count
}

input virtual_conference_group_video_call_durations_aggregate_bool_exp_count {
  arguments: [virtual_conference_group_video_call_durations_select_column! ]
  distinct: Boolean
  filter: virtual_conference_group_video_call_durations_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_group_video_call_durations"
"""
type virtual_conference_group_video_call_durations_aggregate_fields {
   avg: virtual_conference_group_video_call_durations_avg_fields
   count(columns: [virtual_conference_group_video_call_durations_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_group_video_call_durations_max_fields
   min: virtual_conference_group_video_call_durations_min_fields
   stddev: virtual_conference_group_video_call_durations_stddev_fields
   stddev_pop: virtual_conference_group_video_call_durations_stddev_pop_fields
   stddev_samp: virtual_conference_group_video_call_durations_stddev_samp_fields
   sum: virtual_conference_group_video_call_durations_sum_fields
   var_pop: virtual_conference_group_video_call_durations_var_pop_fields
   var_samp: virtual_conference_group_video_call_durations_var_samp_fields
   variance: virtual_conference_group_video_call_durations_variance_fields
}

"""
order by aggregate values of table "virtual_conference_group_video_call_durations"
"""
input virtual_conference_group_video_call_durations_aggregate_order_by {
  avg: virtual_conference_group_video_call_durations_avg_order_by
  count: order_by
  max: virtual_conference_group_video_call_durations_max_order_by
  min: virtual_conference_group_video_call_durations_min_order_by
  stddev: virtual_conference_group_video_call_durations_stddev_order_by
  stddev_pop: virtual_conference_group_video_call_durations_stddev_pop_order_by
  stddev_samp: virtual_conference_group_video_call_durations_stddev_samp_order_by
  sum: virtual_conference_group_video_call_durations_sum_order_by
  var_pop: virtual_conference_group_video_call_durations_var_pop_order_by
  var_samp: virtual_conference_group_video_call_durations_var_samp_order_by
  variance: virtual_conference_group_video_call_durations_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_group_video_call_durations"
"""
input virtual_conference_group_video_call_durations_arr_rel_insert_input {
  data: [virtual_conference_group_video_call_durations_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_group_video_call_durations_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_group_video_call_durations_avg_fields {
   creator_id: Float
}

"""
order by avg() on columns of table "virtual_conference_group_video_call_durations"
"""
input virtual_conference_group_video_call_durations_avg_order_by {
  creator_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_group_video_call_durations". All fields are combined with a logical 'AND'.
"""
input virtual_conference_group_video_call_durations_bool_exp {
  _and: [virtual_conference_group_video_call_durations_bool_exp! ]
  _not: virtual_conference_group_video_call_durations_bool_exp
  _or: [virtual_conference_group_video_call_durations_bool_exp! ]
  chat_group: virtual_conference_chat_groups_bool_exp
  chat_group_aggregate: virtual_conference_chat_groups_aggregate_bool_exp
  chat_group_id: uuid_comparison_exp
  chat_notification_dismissals: virtual_conference_group_video_call_notification_dismissals_bool_exp
  chat_notification_dismissals_aggregate: virtual_conference_group_video_call_notification_dismissals_aggregate_bool_exp
  created_at: timestamptz_comparison_exp
  creator_id: Int_comparison_exp
  ended_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_group_video_call_durations"
"""
enum virtual_conference_group_video_call_durations_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_group_video_calls_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_group_video_call_durations"
"""
input virtual_conference_group_video_call_durations_inc_input {
  creator_id: Int
}

"""
input type for inserting data into table "virtual_conference_group_video_call_durations"
"""
input virtual_conference_group_video_call_durations_insert_input {
  chat_group: virtual_conference_chat_groups_arr_rel_insert_input
  chat_group_id: uuid! 
  chat_notification_dismissals: virtual_conference_group_video_call_notification_dismissals_arr_rel_insert_input
  created_at: timestamptz! 
  creator_id: Int! 
  ended_at: timestamptz! 
  id: uuid! 
}

"""aggregate max on columns"""
type virtual_conference_group_video_call_durations_max_fields {
   chat_group_id: uuid
   created_at: timestamptz
   creator_id: Int
   ended_at: timestamptz
   id: uuid
}

"""
order by max() on columns of table "virtual_conference_group_video_call_durations"
"""
input virtual_conference_group_video_call_durations_max_order_by {
  chat_group_id: order_by
  created_at: order_by
  creator_id: order_by
  ended_at: order_by
  id: order_by
}

"""aggregate min on columns"""
type virtual_conference_group_video_call_durations_min_fields {
   chat_group_id: uuid
   created_at: timestamptz
   creator_id: Int
   ended_at: timestamptz
   id: uuid
}

"""
order by min() on columns of table "virtual_conference_group_video_call_durations"
"""
input virtual_conference_group_video_call_durations_min_order_by {
  chat_group_id: order_by
  created_at: order_by
  creator_id: order_by
  ended_at: order_by
  id: order_by
}

"""
response of any mutation on the table "virtual_conference_group_video_call_durations"
"""
type virtual_conference_group_video_call_durations_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_group_video_call_durations! ]! 
}

"""
on_conflict condition type for table "virtual_conference_group_video_call_durations"
"""
input virtual_conference_group_video_call_durations_on_conflict {
  constraint: virtual_conference_group_video_call_durations_constraint! 
  update_columns: [virtual_conference_group_video_call_durations_update_column! ]! 
  where: virtual_conference_group_video_call_durations_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_group_video_call_durations".
"""
input virtual_conference_group_video_call_durations_order_by {
  chat_group_aggregate: virtual_conference_chat_groups_aggregate_order_by
  chat_group_id: order_by
  chat_notification_dismissals_aggregate: virtual_conference_group_video_call_notification_dismissals_aggregate_order_by
  created_at: order_by
  creator_id: order_by
  ended_at: order_by
  id: order_by
}

"""
primary key columns input for table: virtual_conference_group_video_call_durations
"""
input virtual_conference_group_video_call_durations_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "virtual_conference_group_video_call_durations"
"""
enum virtual_conference_group_video_call_durations_select_column {
  """column name"""
chat_group_id
  """column name"""
created_at
  """column name"""
creator_id
  """column name"""
ended_at
  """column name"""
id
}

"""
input type for updating data in table "virtual_conference_group_video_call_durations"
"""
input virtual_conference_group_video_call_durations_set_input {
  chat_group_id: uuid
  created_at: timestamptz
  creator_id: Int
  ended_at: timestamptz
  id: uuid
}

"""aggregate stddev on columns"""
type virtual_conference_group_video_call_durations_stddev_fields {
   creator_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_group_video_call_durations"
"""
input virtual_conference_group_video_call_durations_stddev_order_by {
  creator_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_group_video_call_durations_stddev_pop_fields {
   creator_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_group_video_call_durations"
"""
input virtual_conference_group_video_call_durations_stddev_pop_order_by {
  creator_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_group_video_call_durations_stddev_samp_fields {
   creator_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_group_video_call_durations"
"""
input virtual_conference_group_video_call_durations_stddev_samp_order_by {
  creator_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_group_video_call_durations"
"""
input virtual_conference_group_video_call_durations_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_group_video_call_durations_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_group_video_call_durations_stream_cursor_value_input {
  chat_group_id: uuid
  created_at: timestamptz
  creator_id: Int
  ended_at: timestamptz
  id: uuid
}

"""aggregate sum on columns"""
type virtual_conference_group_video_call_durations_sum_fields {
   creator_id: Int
}

"""
order by sum() on columns of table "virtual_conference_group_video_call_durations"
"""
input virtual_conference_group_video_call_durations_sum_order_by {
  creator_id: order_by
}

"""
update columns of table "virtual_conference_group_video_call_durations"
"""
enum virtual_conference_group_video_call_durations_update_column {
  """column name"""
chat_group_id
  """column name"""
created_at
  """column name"""
creator_id
  """column name"""
ended_at
  """column name"""
id
}

input virtual_conference_group_video_call_durations_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_group_video_call_durations_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_group_video_call_durations_set_input
  where: virtual_conference_group_video_call_durations_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_group_video_call_durations_var_pop_fields {
   creator_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_group_video_call_durations"
"""
input virtual_conference_group_video_call_durations_var_pop_order_by {
  creator_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_group_video_call_durations_var_samp_fields {
   creator_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_group_video_call_durations"
"""
input virtual_conference_group_video_call_durations_var_samp_order_by {
  creator_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_group_video_call_durations_variance_fields {
   creator_id: Float
}

"""
order by variance() on columns of table "virtual_conference_group_video_call_durations"
"""
input virtual_conference_group_video_call_durations_variance_order_by {
  creator_id: order_by
}

"""
columns and relationships of "virtual_conference_group_video_call_joins"
"""
type virtual_conference_group_video_call_joins {
   browser_tab_uuid: String
   call_heartbeat: timestamptz
  """An object relationship"""
 chat_group: virtual_conference_chat_groups! 
   chat_group_id: uuid! 
   created_at: timestamptz! 
   device: String
  """An array relationship"""
 heartbeats("""distinct select on columns"""
distinct_on: [virtual_conference_user_heartbeats_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_heartbeats_order_by! ], """filter the rows returned"""
where: virtual_conference_user_heartbeats_bool_exp): [virtual_conference_user_heartbeats! ]! 
  """An aggregate relationship"""
 heartbeats_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_user_heartbeats_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_heartbeats_order_by! ], """filter the rows returned"""
where: virtual_conference_user_heartbeats_bool_exp): virtual_conference_user_heartbeats_aggregate! 
   id: Int! 
   left_at: timestamptz
   user_id: Int! 
}

"""
aggregated selection of "virtual_conference_group_video_call_joins"
"""
type virtual_conference_group_video_call_joins_aggregate {
   aggregate: virtual_conference_group_video_call_joins_aggregate_fields
   nodes: [virtual_conference_group_video_call_joins! ]! 
}

input virtual_conference_group_video_call_joins_aggregate_bool_exp {
  count: virtual_conference_group_video_call_joins_aggregate_bool_exp_count
}

input virtual_conference_group_video_call_joins_aggregate_bool_exp_count {
  arguments: [virtual_conference_group_video_call_joins_select_column! ]
  distinct: Boolean
  filter: virtual_conference_group_video_call_joins_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_group_video_call_joins"
"""
type virtual_conference_group_video_call_joins_aggregate_fields {
   avg: virtual_conference_group_video_call_joins_avg_fields
   count(columns: [virtual_conference_group_video_call_joins_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_group_video_call_joins_max_fields
   min: virtual_conference_group_video_call_joins_min_fields
   stddev: virtual_conference_group_video_call_joins_stddev_fields
   stddev_pop: virtual_conference_group_video_call_joins_stddev_pop_fields
   stddev_samp: virtual_conference_group_video_call_joins_stddev_samp_fields
   sum: virtual_conference_group_video_call_joins_sum_fields
   var_pop: virtual_conference_group_video_call_joins_var_pop_fields
   var_samp: virtual_conference_group_video_call_joins_var_samp_fields
   variance: virtual_conference_group_video_call_joins_variance_fields
}

"""
order by aggregate values of table "virtual_conference_group_video_call_joins"
"""
input virtual_conference_group_video_call_joins_aggregate_order_by {
  avg: virtual_conference_group_video_call_joins_avg_order_by
  count: order_by
  max: virtual_conference_group_video_call_joins_max_order_by
  min: virtual_conference_group_video_call_joins_min_order_by
  stddev: virtual_conference_group_video_call_joins_stddev_order_by
  stddev_pop: virtual_conference_group_video_call_joins_stddev_pop_order_by
  stddev_samp: virtual_conference_group_video_call_joins_stddev_samp_order_by
  sum: virtual_conference_group_video_call_joins_sum_order_by
  var_pop: virtual_conference_group_video_call_joins_var_pop_order_by
  var_samp: virtual_conference_group_video_call_joins_var_samp_order_by
  variance: virtual_conference_group_video_call_joins_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_group_video_call_joins"
"""
input virtual_conference_group_video_call_joins_arr_rel_insert_input {
  data: [virtual_conference_group_video_call_joins_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_group_video_call_joins_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_group_video_call_joins_avg_fields {
   id: Float
   user_id: Float
}

"""
order by avg() on columns of table "virtual_conference_group_video_call_joins"
"""
input virtual_conference_group_video_call_joins_avg_order_by {
  id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_group_video_call_joins". All fields are combined with a logical 'AND'.
"""
input virtual_conference_group_video_call_joins_bool_exp {
  _and: [virtual_conference_group_video_call_joins_bool_exp! ]
  _not: virtual_conference_group_video_call_joins_bool_exp
  _or: [virtual_conference_group_video_call_joins_bool_exp! ]
  browser_tab_uuid: String_comparison_exp
  call_heartbeat: timestamptz_comparison_exp
  chat_group: virtual_conference_chat_groups_bool_exp
  chat_group_id: uuid_comparison_exp
  created_at: timestamptz_comparison_exp
  device: String_comparison_exp
  heartbeats: virtual_conference_user_heartbeats_bool_exp
  heartbeats_aggregate: virtual_conference_user_heartbeats_aggregate_bool_exp
  id: Int_comparison_exp
  left_at: timestamptz_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_group_video_call_joins"
"""
enum virtual_conference_group_video_call_joins_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_group_video_call_joins_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_group_video_call_joins"
"""
input virtual_conference_group_video_call_joins_inc_input {
  id: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_group_video_call_joins"
"""
input virtual_conference_group_video_call_joins_insert_input {
  browser_tab_uuid: String
  call_heartbeat: timestamptz! 
  chat_group: virtual_conference_chat_groups_obj_rel_insert_input
  chat_group_id: uuid! 
  created_at: timestamptz! 
  device: String
  heartbeats: virtual_conference_user_heartbeats_arr_rel_insert_input
  id: Int! 
  left_at: timestamptz
  user_id: Int! 
}

"""aggregate max on columns"""
type virtual_conference_group_video_call_joins_max_fields {
   browser_tab_uuid: String
   call_heartbeat: timestamptz
   chat_group_id: uuid
   created_at: timestamptz
   device: String
   id: Int
   left_at: timestamptz
   user_id: Int
}

"""
order by max() on columns of table "virtual_conference_group_video_call_joins"
"""
input virtual_conference_group_video_call_joins_max_order_by {
  browser_tab_uuid: order_by
  call_heartbeat: order_by
  chat_group_id: order_by
  created_at: order_by
  device: order_by
  id: order_by
  left_at: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type virtual_conference_group_video_call_joins_min_fields {
   browser_tab_uuid: String
   call_heartbeat: timestamptz
   chat_group_id: uuid
   created_at: timestamptz
   device: String
   id: Int
   left_at: timestamptz
   user_id: Int
}

"""
order by min() on columns of table "virtual_conference_group_video_call_joins"
"""
input virtual_conference_group_video_call_joins_min_order_by {
  browser_tab_uuid: order_by
  call_heartbeat: order_by
  chat_group_id: order_by
  created_at: order_by
  device: order_by
  id: order_by
  left_at: order_by
  user_id: order_by
}

"""
response of any mutation on the table "virtual_conference_group_video_call_joins"
"""
type virtual_conference_group_video_call_joins_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_group_video_call_joins! ]! 
}

"""
on_conflict condition type for table "virtual_conference_group_video_call_joins"
"""
input virtual_conference_group_video_call_joins_on_conflict {
  constraint: virtual_conference_group_video_call_joins_constraint! 
  update_columns: [virtual_conference_group_video_call_joins_update_column! ]! 
  where: virtual_conference_group_video_call_joins_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_group_video_call_joins".
"""
input virtual_conference_group_video_call_joins_order_by {
  browser_tab_uuid: order_by
  call_heartbeat: order_by
  chat_group: virtual_conference_chat_groups_order_by
  chat_group_id: order_by
  created_at: order_by
  device: order_by
  heartbeats_aggregate: virtual_conference_user_heartbeats_aggregate_order_by
  id: order_by
  left_at: order_by
  user_id: order_by
}

"""
primary key columns input for table: virtual_conference_group_video_call_joins
"""
input virtual_conference_group_video_call_joins_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_group_video_call_joins"
"""
enum virtual_conference_group_video_call_joins_select_column {
  """column name"""
browser_tab_uuid
  """column name"""
call_heartbeat
  """column name"""
chat_group_id
  """column name"""
created_at
  """column name"""
device
  """column name"""
id
  """column name"""
left_at
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_group_video_call_joins"
"""
input virtual_conference_group_video_call_joins_set_input {
  browser_tab_uuid: String
  call_heartbeat: timestamptz
  chat_group_id: uuid
  created_at: timestamptz
  device: String
  id: Int
  left_at: timestamptz
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_group_video_call_joins_stddev_fields {
   id: Float
   user_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_group_video_call_joins"
"""
input virtual_conference_group_video_call_joins_stddev_order_by {
  id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_group_video_call_joins_stddev_pop_fields {
   id: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_group_video_call_joins"
"""
input virtual_conference_group_video_call_joins_stddev_pop_order_by {
  id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_group_video_call_joins_stddev_samp_fields {
   id: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_group_video_call_joins"
"""
input virtual_conference_group_video_call_joins_stddev_samp_order_by {
  id: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_group_video_call_joins"
"""
input virtual_conference_group_video_call_joins_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_group_video_call_joins_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_group_video_call_joins_stream_cursor_value_input {
  browser_tab_uuid: String
  call_heartbeat: timestamptz
  chat_group_id: uuid
  created_at: timestamptz
  device: String
  id: Int
  left_at: timestamptz
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_group_video_call_joins_sum_fields {
   id: Int
   user_id: Int
}

"""
order by sum() on columns of table "virtual_conference_group_video_call_joins"
"""
input virtual_conference_group_video_call_joins_sum_order_by {
  id: order_by
  user_id: order_by
}

"""
update columns of table "virtual_conference_group_video_call_joins"
"""
enum virtual_conference_group_video_call_joins_update_column {
  """column name"""
browser_tab_uuid
  """column name"""
call_heartbeat
  """column name"""
chat_group_id
  """column name"""
created_at
  """column name"""
device
  """column name"""
id
  """column name"""
left_at
  """column name"""
user_id
}

input virtual_conference_group_video_call_joins_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_group_video_call_joins_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_group_video_call_joins_set_input
  where: virtual_conference_group_video_call_joins_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_group_video_call_joins_var_pop_fields {
   id: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_group_video_call_joins"
"""
input virtual_conference_group_video_call_joins_var_pop_order_by {
  id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_group_video_call_joins_var_samp_fields {
   id: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_group_video_call_joins"
"""
input virtual_conference_group_video_call_joins_var_samp_order_by {
  id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_group_video_call_joins_variance_fields {
   id: Float
   user_id: Float
}

"""
order by variance() on columns of table "virtual_conference_group_video_call_joins"
"""
input virtual_conference_group_video_call_joins_variance_order_by {
  id: order_by
  user_id: order_by
}

"""
columns and relationships of "virtual_conference_group_video_call_notification_dismissals"
"""
type virtual_conference_group_video_call_notification_dismissals {
   created_at: timestamptz! 
   group_call_duration_id: uuid! 
   id: Int! 
   user_id: Int! 
}

"""
aggregated selection of "virtual_conference_group_video_call_notification_dismissals"
"""
type virtual_conference_group_video_call_notification_dismissals_aggregate {
   aggregate: virtual_conference_group_video_call_notification_dismissals_aggregate_fields
   nodes: [virtual_conference_group_video_call_notification_dismissals! ]! 
}

input virtual_conference_group_video_call_notification_dismissals_aggregate_bool_exp {
  count: virtual_conference_group_video_call_notification_dismissals_aggregate_bool_exp_count
}

input virtual_conference_group_video_call_notification_dismissals_aggregate_bool_exp_count {
  arguments: [virtual_conference_group_video_call_notification_dismissals_select_column! ]
  distinct: Boolean
  filter: virtual_conference_group_video_call_notification_dismissals_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_group_video_call_notification_dismissals"
"""
type virtual_conference_group_video_call_notification_dismissals_aggregate_fields {
   avg: virtual_conference_group_video_call_notification_dismissals_avg_fields
   count(columns: [virtual_conference_group_video_call_notification_dismissals_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_group_video_call_notification_dismissals_max_fields
   min: virtual_conference_group_video_call_notification_dismissals_min_fields
   stddev: virtual_conference_group_video_call_notification_dismissals_stddev_fields
   stddev_pop: virtual_conference_group_video_call_notification_dismissals_stddev_pop_fields
   stddev_samp: virtual_conference_group_video_call_notification_dismissals_stddev_samp_fields
   sum: virtual_conference_group_video_call_notification_dismissals_sum_fields
   var_pop: virtual_conference_group_video_call_notification_dismissals_var_pop_fields
   var_samp: virtual_conference_group_video_call_notification_dismissals_var_samp_fields
   variance: virtual_conference_group_video_call_notification_dismissals_variance_fields
}

"""
order by aggregate values of table "virtual_conference_group_video_call_notification_dismissals"
"""
input virtual_conference_group_video_call_notification_dismissals_aggregate_order_by {
  avg: virtual_conference_group_video_call_notification_dismissals_avg_order_by
  count: order_by
  max: virtual_conference_group_video_call_notification_dismissals_max_order_by
  min: virtual_conference_group_video_call_notification_dismissals_min_order_by
  stddev: virtual_conference_group_video_call_notification_dismissals_stddev_order_by
  stddev_pop: virtual_conference_group_video_call_notification_dismissals_stddev_pop_order_by
  stddev_samp: virtual_conference_group_video_call_notification_dismissals_stddev_samp_order_by
  sum: virtual_conference_group_video_call_notification_dismissals_sum_order_by
  var_pop: virtual_conference_group_video_call_notification_dismissals_var_pop_order_by
  var_samp: virtual_conference_group_video_call_notification_dismissals_var_samp_order_by
  variance: virtual_conference_group_video_call_notification_dismissals_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_group_video_call_notification_dismissals"
"""
input virtual_conference_group_video_call_notification_dismissals_arr_rel_insert_input {
  data: [virtual_conference_group_video_call_notification_dismissals_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_group_video_call_notification_dismissals_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_group_video_call_notification_dismissals_avg_fields {
   id: Float
   user_id: Float
}

"""
order by avg() on columns of table "virtual_conference_group_video_call_notification_dismissals"
"""
input virtual_conference_group_video_call_notification_dismissals_avg_order_by {
  id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_group_video_call_notification_dismissals". All fields are combined with a logical 'AND'.
"""
input virtual_conference_group_video_call_notification_dismissals_bool_exp {
  _and: [virtual_conference_group_video_call_notification_dismissals_bool_exp! ]
  _not: virtual_conference_group_video_call_notification_dismissals_bool_exp
  _or: [virtual_conference_group_video_call_notification_dismissals_bool_exp! ]
  created_at: timestamptz_comparison_exp
  group_call_duration_id: uuid_comparison_exp
  id: Int_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_group_video_call_notification_dismissals"
"""
enum virtual_conference_group_video_call_notification_dismissals_constraint {
  """
  unique or primary key constraint on columns "id"
  """
vc_group_video_call_chat_notification_dismissals_pkey
  """
  unique or primary key constraint on columns "user_id", "group_call_duration_id"
  """
vc_group_video_call_chat_notification_dismissals_user_id_group_
}

"""
input type for incrementing numeric columns in table "virtual_conference_group_video_call_notification_dismissals"
"""
input virtual_conference_group_video_call_notification_dismissals_inc_input {
  id: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_group_video_call_notification_dismissals"
"""
input virtual_conference_group_video_call_notification_dismissals_insert_input {
  created_at: timestamptz! 
  group_call_duration_id: uuid! 
  id: Int! 
  user_id: Int! 
}

"""aggregate max on columns"""
type virtual_conference_group_video_call_notification_dismissals_max_fields {
   created_at: timestamptz
   group_call_duration_id: uuid
   id: Int
   user_id: Int
}

"""
order by max() on columns of table "virtual_conference_group_video_call_notification_dismissals"
"""
input virtual_conference_group_video_call_notification_dismissals_max_order_by {
  created_at: order_by
  group_call_duration_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type virtual_conference_group_video_call_notification_dismissals_min_fields {
   created_at: timestamptz
   group_call_duration_id: uuid
   id: Int
   user_id: Int
}

"""
order by min() on columns of table "virtual_conference_group_video_call_notification_dismissals"
"""
input virtual_conference_group_video_call_notification_dismissals_min_order_by {
  created_at: order_by
  group_call_duration_id: order_by
  id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "virtual_conference_group_video_call_notification_dismissals"
"""
type virtual_conference_group_video_call_notification_dismissals_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_group_video_call_notification_dismissals! ]! 
}

"""
on_conflict condition type for table "virtual_conference_group_video_call_notification_dismissals"
"""
input virtual_conference_group_video_call_notification_dismissals_on_conflict {
  constraint: virtual_conference_group_video_call_notification_dismissals_constraint! 
  update_columns: [virtual_conference_group_video_call_notification_dismissals_update_column! ]! 
  where: virtual_conference_group_video_call_notification_dismissals_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_group_video_call_notification_dismissals".
"""
input virtual_conference_group_video_call_notification_dismissals_order_by {
  created_at: order_by
  group_call_duration_id: order_by
  id: order_by
  user_id: order_by
}

"""
primary key columns input for table: virtual_conference_group_video_call_notification_dismissals
"""
input virtual_conference_group_video_call_notification_dismissals_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_group_video_call_notification_dismissals"
"""
enum virtual_conference_group_video_call_notification_dismissals_select_column {
  """column name"""
created_at
  """column name"""
group_call_duration_id
  """column name"""
id
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_group_video_call_notification_dismissals"
"""
input virtual_conference_group_video_call_notification_dismissals_set_input {
  created_at: timestamptz
  group_call_duration_id: uuid
  id: Int
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_group_video_call_notification_dismissals_stddev_fields {
   id: Float
   user_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_group_video_call_notification_dismissals"
"""
input virtual_conference_group_video_call_notification_dismissals_stddev_order_by {
  id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_group_video_call_notification_dismissals_stddev_pop_fields {
   id: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_group_video_call_notification_dismissals"
"""
input virtual_conference_group_video_call_notification_dismissals_stddev_pop_order_by {
  id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_group_video_call_notification_dismissals_stddev_samp_fields {
   id: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_group_video_call_notification_dismissals"
"""
input virtual_conference_group_video_call_notification_dismissals_stddev_samp_order_by {
  id: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_group_video_call_notification_dismissals"
"""
input virtual_conference_group_video_call_notification_dismissals_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_group_video_call_notification_dismissals_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_group_video_call_notification_dismissals_stream_cursor_value_input {
  created_at: timestamptz
  group_call_duration_id: uuid
  id: Int
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_group_video_call_notification_dismissals_sum_fields {
   id: Int
   user_id: Int
}

"""
order by sum() on columns of table "virtual_conference_group_video_call_notification_dismissals"
"""
input virtual_conference_group_video_call_notification_dismissals_sum_order_by {
  id: order_by
  user_id: order_by
}

"""
update columns of table "virtual_conference_group_video_call_notification_dismissals"
"""
enum virtual_conference_group_video_call_notification_dismissals_update_column {
  """column name"""
created_at
  """column name"""
group_call_duration_id
  """column name"""
id
  """column name"""
user_id
}

input virtual_conference_group_video_call_notification_dismissals_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_group_video_call_notification_dismissals_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_group_video_call_notification_dismissals_set_input
  where: virtual_conference_group_video_call_notification_dismissals_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_group_video_call_notification_dismissals_var_pop_fields {
   id: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_group_video_call_notification_dismissals"
"""
input virtual_conference_group_video_call_notification_dismissals_var_pop_order_by {
  id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_group_video_call_notification_dismissals_var_samp_fields {
   id: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_group_video_call_notification_dismissals"
"""
input virtual_conference_group_video_call_notification_dismissals_var_samp_order_by {
  id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_group_video_call_notification_dismissals_variance_fields {
   id: Float
   user_id: Float
}

"""
order by variance() on columns of table "virtual_conference_group_video_call_notification_dismissals"
"""
input virtual_conference_group_video_call_notification_dismissals_variance_order_by {
  id: order_by
  user_id: order_by
}

"""
columns and relationships of "virtual_conference_name_badge"
"""
type virtual_conference_name_badge {
   allow_chat: Boolean! 
   avatar: String
  """An array relationship"""
 blocks("""distinct select on columns"""
distinct_on: [virtual_conference_event_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_event_chat_blocks_bool_exp): [virtual_conference_event_chat_blocks! ]! 
  """An aggregate relationship"""
 blocks_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_event_chat_blocks_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_event_chat_blocks_order_by! ], """filter the rows returned"""
where: virtual_conference_event_chat_blocks_bool_exp): virtual_conference_event_chat_blocks_aggregate! 
   created_at: timestamp! 
   email: String! 
  """An object relationship"""
 event: events! 
   event_id: Int! 
   facebook_url: String! 
   first_name: String! 
   has_been_welcomed: Boolean! 
  """An array relationship"""
 heartbeats("""distinct select on columns"""
distinct_on: [virtual_conference_user_heartbeats_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_heartbeats_order_by! ], """filter the rows returned"""
where: virtual_conference_user_heartbeats_bool_exp): [virtual_conference_user_heartbeats! ]! 
  """An aggregate relationship"""
 heartbeats_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_user_heartbeats_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_heartbeats_order_by! ], """filter the rows returned"""
where: virtual_conference_user_heartbeats_bool_exp): virtual_conference_user_heartbeats_aggregate! 
   id: Int! 
  """An array relationship"""
 incoming_direct_calls("""distinct select on columns"""
distinct_on: [virtual_conference_direct_video_calls_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_video_calls_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_video_calls_bool_exp): [virtual_conference_direct_video_calls! ]! 
  """An aggregate relationship"""
 incoming_direct_calls_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_direct_video_calls_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_video_calls_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_video_calls_bool_exp): virtual_conference_direct_video_calls_aggregate! 
   instagram_url: String! 
   institution: String! 
  """An array relationship"""
 interests("""distinct select on columns"""
distinct_on: [virtual_conference_user_interests_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_interests_order_by! ], """filter the rows returned"""
where: virtual_conference_user_interests_bool_exp): [virtual_conference_user_interests! ]! 
  """An aggregate relationship"""
 interests_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_user_interests_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_user_interests_order_by! ], """filter the rows returned"""
where: virtual_conference_user_interests_bool_exp): virtual_conference_user_interests_aggregate! 
   last_name: String! 
   linkedin_url: String! 
   location_timezone_last_acknowledged: String
   name: String
  """An array relationship"""
 received_messages("""distinct select on columns"""
distinct_on: [virtual_conference_direct_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_messages_bool_exp): [virtual_conference_direct_messages! ]! 
  """An aggregate relationship"""
 received_messages_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_direct_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_messages_bool_exp): virtual_conference_direct_messages_aggregate! 
   role: String! 
  """An array relationship"""
 sent_messages("""distinct select on columns"""
distinct_on: [virtual_conference_direct_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_messages_bool_exp): [virtual_conference_direct_messages! ]! 
  """An aggregate relationship"""
 sent_messages_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_direct_messages_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_direct_messages_order_by! ], """filter the rows returned"""
where: virtual_conference_direct_messages_bool_exp): virtual_conference_direct_messages_aggregate! 
   show_online: Boolean! 
   timezone: String
   twitter_url: String! 
  """An object relationship"""
 user: users! 
   user_id: Int! 
  """An array relationship"""
 virtual_conference_saved_badges("""distinct select on columns"""
distinct_on: [virtual_conference_saved_badges_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_saved_badges_order_by! ], """filter the rows returned"""
where: virtual_conference_saved_badges_bool_exp): [virtual_conference_saved_badges! ]! 
  """An aggregate relationship"""
 virtual_conference_saved_badges_aggregate("""distinct select on columns"""
distinct_on: [virtual_conference_saved_badges_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [virtual_conference_saved_badges_order_by! ], """filter the rows returned"""
where: virtual_conference_saved_badges_bool_exp): virtual_conference_saved_badges_aggregate! 
}

"""
aggregated selection of "virtual_conference_name_badge"
"""
type virtual_conference_name_badge_aggregate {
   aggregate: virtual_conference_name_badge_aggregate_fields
   nodes: [virtual_conference_name_badge! ]! 
}

input virtual_conference_name_badge_aggregate_bool_exp {
  bool_and: virtual_conference_name_badge_aggregate_bool_exp_bool_and
  bool_or: virtual_conference_name_badge_aggregate_bool_exp_bool_or
  count: virtual_conference_name_badge_aggregate_bool_exp_count
}

input virtual_conference_name_badge_aggregate_bool_exp_bool_and {
  arguments: virtual_conference_name_badge_select_column_virtual_conference_name_badge_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: virtual_conference_name_badge_bool_exp
  predicate: Boolean_comparison_exp! 
}

input virtual_conference_name_badge_aggregate_bool_exp_bool_or {
  arguments: virtual_conference_name_badge_select_column_virtual_conference_name_badge_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: virtual_conference_name_badge_bool_exp
  predicate: Boolean_comparison_exp! 
}

input virtual_conference_name_badge_aggregate_bool_exp_count {
  arguments: [virtual_conference_name_badge_select_column! ]
  distinct: Boolean
  filter: virtual_conference_name_badge_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_name_badge"
"""
type virtual_conference_name_badge_aggregate_fields {
   avg: virtual_conference_name_badge_avg_fields
   count(columns: [virtual_conference_name_badge_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_name_badge_max_fields
   min: virtual_conference_name_badge_min_fields
   stddev: virtual_conference_name_badge_stddev_fields
   stddev_pop: virtual_conference_name_badge_stddev_pop_fields
   stddev_samp: virtual_conference_name_badge_stddev_samp_fields
   sum: virtual_conference_name_badge_sum_fields
   var_pop: virtual_conference_name_badge_var_pop_fields
   var_samp: virtual_conference_name_badge_var_samp_fields
   variance: virtual_conference_name_badge_variance_fields
}

"""
order by aggregate values of table "virtual_conference_name_badge"
"""
input virtual_conference_name_badge_aggregate_order_by {
  avg: virtual_conference_name_badge_avg_order_by
  count: order_by
  max: virtual_conference_name_badge_max_order_by
  min: virtual_conference_name_badge_min_order_by
  stddev: virtual_conference_name_badge_stddev_order_by
  stddev_pop: virtual_conference_name_badge_stddev_pop_order_by
  stddev_samp: virtual_conference_name_badge_stddev_samp_order_by
  sum: virtual_conference_name_badge_sum_order_by
  var_pop: virtual_conference_name_badge_var_pop_order_by
  var_samp: virtual_conference_name_badge_var_samp_order_by
  variance: virtual_conference_name_badge_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_name_badge"
"""
input virtual_conference_name_badge_arr_rel_insert_input {
  data: [virtual_conference_name_badge_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_name_badge_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_name_badge_avg_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by avg() on columns of table "virtual_conference_name_badge"
"""
input virtual_conference_name_badge_avg_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_name_badge". All fields are combined with a logical 'AND'.
"""
input virtual_conference_name_badge_bool_exp {
  _and: [virtual_conference_name_badge_bool_exp! ]
  _not: virtual_conference_name_badge_bool_exp
  _or: [virtual_conference_name_badge_bool_exp! ]
  allow_chat: Boolean_comparison_exp
  avatar: String_comparison_exp
  blocks: virtual_conference_event_chat_blocks_bool_exp
  blocks_aggregate: virtual_conference_event_chat_blocks_aggregate_bool_exp
  created_at: timestamp_comparison_exp
  email: String_comparison_exp
  event: events_bool_exp
  event_id: Int_comparison_exp
  facebook_url: String_comparison_exp
  first_name: String_comparison_exp
  has_been_welcomed: Boolean_comparison_exp
  heartbeats: virtual_conference_user_heartbeats_bool_exp
  heartbeats_aggregate: virtual_conference_user_heartbeats_aggregate_bool_exp
  id: Int_comparison_exp
  incoming_direct_calls: virtual_conference_direct_video_calls_bool_exp
  incoming_direct_calls_aggregate: virtual_conference_direct_video_calls_aggregate_bool_exp
  instagram_url: String_comparison_exp
  institution: String_comparison_exp
  interests: virtual_conference_user_interests_bool_exp
  interests_aggregate: virtual_conference_user_interests_aggregate_bool_exp
  last_name: String_comparison_exp
  linkedin_url: String_comparison_exp
  location_timezone_last_acknowledged: String_comparison_exp
  name: String_comparison_exp
  received_messages: virtual_conference_direct_messages_bool_exp
  received_messages_aggregate: virtual_conference_direct_messages_aggregate_bool_exp
  role: String_comparison_exp
  sent_messages: virtual_conference_direct_messages_bool_exp
  sent_messages_aggregate: virtual_conference_direct_messages_aggregate_bool_exp
  show_online: Boolean_comparison_exp
  timezone: String_comparison_exp
  twitter_url: String_comparison_exp
  user: users_bool_exp
  user_id: Int_comparison_exp
  virtual_conference_saved_badges: virtual_conference_saved_badges_bool_exp
  virtual_conference_saved_badges_aggregate: virtual_conference_saved_badges_aggregate_bool_exp
}

"""
unique or primary key constraints on table "virtual_conference_name_badge"
"""
enum virtual_conference_name_badge_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_name_badge_pkey
  """
  unique or primary key constraint on columns "event_id", "user_id"
  """
virtual_conference_name_badge_user_id_event_id_key
}

"""
input type for incrementing numeric columns in table "virtual_conference_name_badge"
"""
input virtual_conference_name_badge_inc_input {
  event_id: Int
  id: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_name_badge"
"""
input virtual_conference_name_badge_insert_input {
  allow_chat: Boolean! 
  avatar: String
  blocks: virtual_conference_event_chat_blocks_arr_rel_insert_input
  created_at: timestamp! 
  email: String! 
  event: events_obj_rel_insert_input
  event_id: Int! 
  facebook_url: String! 
  first_name: String! 
  has_been_welcomed: Boolean! 
  heartbeats: virtual_conference_user_heartbeats_arr_rel_insert_input
  id: Int! 
  incoming_direct_calls: virtual_conference_direct_video_calls_arr_rel_insert_input
  instagram_url: String! 
  institution: String! 
  interests: virtual_conference_user_interests_arr_rel_insert_input
  last_name: String! 
  linkedin_url: String! 
  location_timezone_last_acknowledged: String
  received_messages: virtual_conference_direct_messages_arr_rel_insert_input
  role: String! 
  sent_messages: virtual_conference_direct_messages_arr_rel_insert_input
  show_online: Boolean! 
  timezone: String
  twitter_url: String! 
  user: users_obj_rel_insert_input
  user_id: Int! 
  virtual_conference_saved_badges: virtual_conference_saved_badges_arr_rel_insert_input
}

"""aggregate max on columns"""
type virtual_conference_name_badge_max_fields {
   avatar: String
   created_at: timestamp
   email: String
   event_id: Int
   facebook_url: String
   first_name: String
   id: Int
   instagram_url: String
   institution: String
   last_name: String
   linkedin_url: String
   location_timezone_last_acknowledged: String
   role: String
   timezone: String
   twitter_url: String
   user_id: Int
}

"""
order by max() on columns of table "virtual_conference_name_badge"
"""
input virtual_conference_name_badge_max_order_by {
  avatar: order_by
  created_at: order_by
  email: order_by
  event_id: order_by
  facebook_url: order_by
  first_name: order_by
  id: order_by
  instagram_url: order_by
  institution: order_by
  last_name: order_by
  linkedin_url: order_by
  location_timezone_last_acknowledged: order_by
  role: order_by
  timezone: order_by
  twitter_url: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type virtual_conference_name_badge_min_fields {
   avatar: String
   created_at: timestamp
   email: String
   event_id: Int
   facebook_url: String
   first_name: String
   id: Int
   instagram_url: String
   institution: String
   last_name: String
   linkedin_url: String
   location_timezone_last_acknowledged: String
   role: String
   timezone: String
   twitter_url: String
   user_id: Int
}

"""
order by min() on columns of table "virtual_conference_name_badge"
"""
input virtual_conference_name_badge_min_order_by {
  avatar: order_by
  created_at: order_by
  email: order_by
  event_id: order_by
  facebook_url: order_by
  first_name: order_by
  id: order_by
  instagram_url: order_by
  institution: order_by
  last_name: order_by
  linkedin_url: order_by
  location_timezone_last_acknowledged: order_by
  role: order_by
  timezone: order_by
  twitter_url: order_by
  user_id: order_by
}

"""
response of any mutation on the table "virtual_conference_name_badge"
"""
type virtual_conference_name_badge_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_name_badge! ]! 
}

"""
input type for inserting object relation for remote table "virtual_conference_name_badge"
"""
input virtual_conference_name_badge_obj_rel_insert_input {
  data: virtual_conference_name_badge_insert_input! 
  """upsert condition"""
on_conflict: virtual_conference_name_badge_on_conflict
}

"""
on_conflict condition type for table "virtual_conference_name_badge"
"""
input virtual_conference_name_badge_on_conflict {
  constraint: virtual_conference_name_badge_constraint! 
  update_columns: [virtual_conference_name_badge_update_column! ]! 
  where: virtual_conference_name_badge_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_name_badge".
"""
input virtual_conference_name_badge_order_by {
  allow_chat: order_by
  avatar: order_by
  blocks_aggregate: virtual_conference_event_chat_blocks_aggregate_order_by
  created_at: order_by
  email: order_by
  event: events_order_by
  event_id: order_by
  facebook_url: order_by
  first_name: order_by
  has_been_welcomed: order_by
  heartbeats_aggregate: virtual_conference_user_heartbeats_aggregate_order_by
  id: order_by
  incoming_direct_calls_aggregate: virtual_conference_direct_video_calls_aggregate_order_by
  instagram_url: order_by
  institution: order_by
  interests_aggregate: virtual_conference_user_interests_aggregate_order_by
  last_name: order_by
  linkedin_url: order_by
  location_timezone_last_acknowledged: order_by
  name: order_by
  received_messages_aggregate: virtual_conference_direct_messages_aggregate_order_by
  role: order_by
  sent_messages_aggregate: virtual_conference_direct_messages_aggregate_order_by
  show_online: order_by
  timezone: order_by
  twitter_url: order_by
  user: users_order_by
  user_id: order_by
  virtual_conference_saved_badges_aggregate: virtual_conference_saved_badges_aggregate_order_by
}

"""primary key columns input for table: virtual_conference_name_badge"""
input virtual_conference_name_badge_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_name_badge"
"""
enum virtual_conference_name_badge_select_column {
  """column name"""
allow_chat
  """column name"""
avatar
  """column name"""
created_at
  """column name"""
email
  """column name"""
event_id
  """column name"""
facebook_url
  """column name"""
first_name
  """column name"""
has_been_welcomed
  """column name"""
id
  """column name"""
instagram_url
  """column name"""
institution
  """column name"""
last_name
  """column name"""
linkedin_url
  """column name"""
location_timezone_last_acknowledged
  """column name"""
role
  """column name"""
show_online
  """column name"""
timezone
  """column name"""
twitter_url
  """column name"""
user_id
}

"""
select "virtual_conference_name_badge_aggregate_bool_exp_bool_and_arguments_columns" columns of table "virtual_conference_name_badge"
"""
enum virtual_conference_name_badge_select_column_virtual_conference_name_badge_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
allow_chat
  """column name"""
has_been_welcomed
  """column name"""
show_online
}

"""
select "virtual_conference_name_badge_aggregate_bool_exp_bool_or_arguments_columns" columns of table "virtual_conference_name_badge"
"""
enum virtual_conference_name_badge_select_column_virtual_conference_name_badge_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
allow_chat
  """column name"""
has_been_welcomed
  """column name"""
show_online
}

"""
input type for updating data in table "virtual_conference_name_badge"
"""
input virtual_conference_name_badge_set_input {
  allow_chat: Boolean
  avatar: String
  created_at: timestamp
  email: String
  event_id: Int
  facebook_url: String
  first_name: String
  has_been_welcomed: Boolean
  id: Int
  instagram_url: String
  institution: String
  last_name: String
  linkedin_url: String
  location_timezone_last_acknowledged: String
  role: String
  show_online: Boolean
  timezone: String
  twitter_url: String
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_name_badge_stddev_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_name_badge"
"""
input virtual_conference_name_badge_stddev_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_name_badge_stddev_pop_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_name_badge"
"""
input virtual_conference_name_badge_stddev_pop_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_name_badge_stddev_samp_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_name_badge"
"""
input virtual_conference_name_badge_stddev_samp_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_name_badge"
"""
input virtual_conference_name_badge_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_name_badge_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_name_badge_stream_cursor_value_input {
  allow_chat: Boolean
  avatar: String
  created_at: timestamp
  email: String
  event_id: Int
  facebook_url: String
  first_name: String
  has_been_welcomed: Boolean
  id: Int
  instagram_url: String
  institution: String
  last_name: String
  linkedin_url: String
  location_timezone_last_acknowledged: String
  role: String
  show_online: Boolean
  timezone: String
  twitter_url: String
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_name_badge_sum_fields {
   event_id: Int
   id: Int
   user_id: Int
}

"""
order by sum() on columns of table "virtual_conference_name_badge"
"""
input virtual_conference_name_badge_sum_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""
update columns of table "virtual_conference_name_badge"
"""
enum virtual_conference_name_badge_update_column {
  """column name"""
allow_chat
  """column name"""
avatar
  """column name"""
created_at
  """column name"""
email
  """column name"""
event_id
  """column name"""
facebook_url
  """column name"""
first_name
  """column name"""
has_been_welcomed
  """column name"""
id
  """column name"""
instagram_url
  """column name"""
institution
  """column name"""
last_name
  """column name"""
linkedin_url
  """column name"""
location_timezone_last_acknowledged
  """column name"""
role
  """column name"""
show_online
  """column name"""
timezone
  """column name"""
twitter_url
  """column name"""
user_id
}

input virtual_conference_name_badge_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_name_badge_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_name_badge_set_input
  where: virtual_conference_name_badge_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_name_badge_var_pop_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_name_badge"
"""
input virtual_conference_name_badge_var_pop_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_name_badge_var_samp_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_name_badge"
"""
input virtual_conference_name_badge_var_samp_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_name_badge_variance_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by variance() on columns of table "virtual_conference_name_badge"
"""
input virtual_conference_name_badge_variance_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""
columns and relationships of "virtual_conference_notification_preferences"
"""
type virtual_conference_notification_preferences {
   comment_replies: Boolean! 
   comment_threads: Boolean! 
   created_at: timestamptz! 
   event_chat: Boolean! 
   group_chat: Boolean! 
   id: Int! 
   notification_speed: virtual_conference_email_notification_speeds_enum! 
   private_chat: Boolean! 
   updated_at: timestamptz! 
   user_id: Int! 
}

"""
aggregated selection of "virtual_conference_notification_preferences"
"""
type virtual_conference_notification_preferences_aggregate {
   aggregate: virtual_conference_notification_preferences_aggregate_fields
   nodes: [virtual_conference_notification_preferences! ]! 
}

"""
aggregate fields of "virtual_conference_notification_preferences"
"""
type virtual_conference_notification_preferences_aggregate_fields {
   avg: virtual_conference_notification_preferences_avg_fields
   count(columns: [virtual_conference_notification_preferences_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_notification_preferences_max_fields
   min: virtual_conference_notification_preferences_min_fields
   stddev: virtual_conference_notification_preferences_stddev_fields
   stddev_pop: virtual_conference_notification_preferences_stddev_pop_fields
   stddev_samp: virtual_conference_notification_preferences_stddev_samp_fields
   sum: virtual_conference_notification_preferences_sum_fields
   var_pop: virtual_conference_notification_preferences_var_pop_fields
   var_samp: virtual_conference_notification_preferences_var_samp_fields
   variance: virtual_conference_notification_preferences_variance_fields
}

"""aggregate avg on columns"""
type virtual_conference_notification_preferences_avg_fields {
   id: Float
   user_id: Float
}

"""
Boolean expression to filter rows from the table "virtual_conference_notification_preferences". All fields are combined with a logical 'AND'.
"""
input virtual_conference_notification_preferences_bool_exp {
  _and: [virtual_conference_notification_preferences_bool_exp! ]
  _not: virtual_conference_notification_preferences_bool_exp
  _or: [virtual_conference_notification_preferences_bool_exp! ]
  comment_replies: Boolean_comparison_exp
  comment_threads: Boolean_comparison_exp
  created_at: timestamptz_comparison_exp
  event_chat: Boolean_comparison_exp
  group_chat: Boolean_comparison_exp
  id: Int_comparison_exp
  notification_speed: virtual_conference_email_notification_speeds_enum_comparison_exp
  private_chat: Boolean_comparison_exp
  updated_at: timestamptz_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_notification_preferences"
"""
enum virtual_conference_notification_preferences_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_notification_preferences_pkey
  """
  unique or primary key constraint on columns "user_id"
  """
virtual_conference_notification_preferences_user_id_key
}

"""
input type for incrementing numeric columns in table "virtual_conference_notification_preferences"
"""
input virtual_conference_notification_preferences_inc_input {
  id: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_notification_preferences"
"""
input virtual_conference_notification_preferences_insert_input {
  comment_replies: Boolean! 
  comment_threads: Boolean! 
  created_at: timestamptz! 
  event_chat: Boolean! 
  group_chat: Boolean! 
  id: Int! 
  notification_speed: virtual_conference_email_notification_speeds_enum! 
  private_chat: Boolean! 
  updated_at: timestamptz! 
  user_id: Int! 
}

"""aggregate max on columns"""
type virtual_conference_notification_preferences_max_fields {
   created_at: timestamptz
   id: Int
   updated_at: timestamptz
   user_id: Int
}

"""aggregate min on columns"""
type virtual_conference_notification_preferences_min_fields {
   created_at: timestamptz
   id: Int
   updated_at: timestamptz
   user_id: Int
}

"""
response of any mutation on the table "virtual_conference_notification_preferences"
"""
type virtual_conference_notification_preferences_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_notification_preferences! ]! 
}

"""
on_conflict condition type for table "virtual_conference_notification_preferences"
"""
input virtual_conference_notification_preferences_on_conflict {
  constraint: virtual_conference_notification_preferences_constraint! 
  update_columns: [virtual_conference_notification_preferences_update_column! ]! 
  where: virtual_conference_notification_preferences_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_notification_preferences".
"""
input virtual_conference_notification_preferences_order_by {
  comment_replies: order_by
  comment_threads: order_by
  created_at: order_by
  event_chat: order_by
  group_chat: order_by
  id: order_by
  notification_speed: order_by
  private_chat: order_by
  updated_at: order_by
  user_id: order_by
}

"""
primary key columns input for table: virtual_conference_notification_preferences
"""
input virtual_conference_notification_preferences_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_notification_preferences"
"""
enum virtual_conference_notification_preferences_select_column {
  """column name"""
comment_replies
  """column name"""
comment_threads
  """column name"""
created_at
  """column name"""
event_chat
  """column name"""
group_chat
  """column name"""
id
  """column name"""
notification_speed
  """column name"""
private_chat
  """column name"""
updated_at
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_notification_preferences"
"""
input virtual_conference_notification_preferences_set_input {
  comment_replies: Boolean
  comment_threads: Boolean
  created_at: timestamptz
  event_chat: Boolean
  group_chat: Boolean
  id: Int
  notification_speed: virtual_conference_email_notification_speeds_enum
  private_chat: Boolean
  updated_at: timestamptz
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_notification_preferences_stddev_fields {
   id: Float
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type virtual_conference_notification_preferences_stddev_pop_fields {
   id: Float
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type virtual_conference_notification_preferences_stddev_samp_fields {
   id: Float
   user_id: Float
}

"""
Streaming cursor of the table "virtual_conference_notification_preferences"
"""
input virtual_conference_notification_preferences_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_notification_preferences_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_notification_preferences_stream_cursor_value_input {
  comment_replies: Boolean
  comment_threads: Boolean
  created_at: timestamptz
  event_chat: Boolean
  group_chat: Boolean
  id: Int
  notification_speed: virtual_conference_email_notification_speeds_enum
  private_chat: Boolean
  updated_at: timestamptz
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_notification_preferences_sum_fields {
   id: Int
   user_id: Int
}

"""
update columns of table "virtual_conference_notification_preferences"
"""
enum virtual_conference_notification_preferences_update_column {
  """column name"""
comment_replies
  """column name"""
comment_threads
  """column name"""
created_at
  """column name"""
event_chat
  """column name"""
group_chat
  """column name"""
id
  """column name"""
notification_speed
  """column name"""
private_chat
  """column name"""
updated_at
  """column name"""
user_id
}

input virtual_conference_notification_preferences_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_notification_preferences_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_notification_preferences_set_input
  where: virtual_conference_notification_preferences_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_notification_preferences_var_pop_fields {
   id: Float
   user_id: Float
}

"""aggregate var_samp on columns"""
type virtual_conference_notification_preferences_var_samp_fields {
   id: Float
   user_id: Float
}

"""aggregate variance on columns"""
type virtual_conference_notification_preferences_variance_fields {
   id: Float
   user_id: Float
}

"""which """
type virtual_conference_page_views {
   anon_user_id: String
   created_at: timestamptz! 
   ended_at: timestamptz
   heartbeats: Int! 
   id: uuid! 
   route: String! 
   updated_at: timestamptz! 
   user_id: Int
}

"""
aggregated selection of "virtual_conference_page_views"
"""
type virtual_conference_page_views_aggregate {
   aggregate: virtual_conference_page_views_aggregate_fields
   nodes: [virtual_conference_page_views! ]! 
}

"""
aggregate fields of "virtual_conference_page_views"
"""
type virtual_conference_page_views_aggregate_fields {
   avg: virtual_conference_page_views_avg_fields
   count(columns: [virtual_conference_page_views_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_page_views_max_fields
   min: virtual_conference_page_views_min_fields
   stddev: virtual_conference_page_views_stddev_fields
   stddev_pop: virtual_conference_page_views_stddev_pop_fields
   stddev_samp: virtual_conference_page_views_stddev_samp_fields
   sum: virtual_conference_page_views_sum_fields
   var_pop: virtual_conference_page_views_var_pop_fields
   var_samp: virtual_conference_page_views_var_samp_fields
   variance: virtual_conference_page_views_variance_fields
}

"""aggregate avg on columns"""
type virtual_conference_page_views_avg_fields {
   heartbeats: Float
   user_id: Float
}

"""
Boolean expression to filter rows from the table "virtual_conference_page_views". All fields are combined with a logical 'AND'.
"""
input virtual_conference_page_views_bool_exp {
  _and: [virtual_conference_page_views_bool_exp! ]
  _not: virtual_conference_page_views_bool_exp
  _or: [virtual_conference_page_views_bool_exp! ]
  anon_user_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  ended_at: timestamptz_comparison_exp
  heartbeats: Int_comparison_exp
  id: uuid_comparison_exp
  route: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_page_views"
"""
enum virtual_conference_page_views_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_page_views_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_page_views"
"""
input virtual_conference_page_views_inc_input {
  heartbeats: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_page_views"
"""
input virtual_conference_page_views_insert_input {
  anon_user_id: String
  created_at: timestamptz! 
  ended_at: timestamptz
  heartbeats: Int! 
  id: uuid! 
  route: String! 
  updated_at: timestamptz! 
  user_id: Int
}

"""aggregate max on columns"""
type virtual_conference_page_views_max_fields {
   anon_user_id: String
   created_at: timestamptz
   ended_at: timestamptz
   heartbeats: Int
   id: uuid
   route: String
   updated_at: timestamptz
   user_id: Int
}

"""aggregate min on columns"""
type virtual_conference_page_views_min_fields {
   anon_user_id: String
   created_at: timestamptz
   ended_at: timestamptz
   heartbeats: Int
   id: uuid
   route: String
   updated_at: timestamptz
   user_id: Int
}

"""
response of any mutation on the table "virtual_conference_page_views"
"""
type virtual_conference_page_views_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_page_views! ]! 
}

"""
on_conflict condition type for table "virtual_conference_page_views"
"""
input virtual_conference_page_views_on_conflict {
  constraint: virtual_conference_page_views_constraint! 
  update_columns: [virtual_conference_page_views_update_column! ]! 
  where: virtual_conference_page_views_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_page_views".
"""
input virtual_conference_page_views_order_by {
  anon_user_id: order_by
  created_at: order_by
  ended_at: order_by
  heartbeats: order_by
  id: order_by
  route: order_by
  updated_at: order_by
  user_id: order_by
}

"""primary key columns input for table: virtual_conference_page_views"""
input virtual_conference_page_views_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "virtual_conference_page_views"
"""
enum virtual_conference_page_views_select_column {
  """column name"""
anon_user_id
  """column name"""
created_at
  """column name"""
ended_at
  """column name"""
heartbeats
  """column name"""
id
  """column name"""
route
  """column name"""
updated_at
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_page_views"
"""
input virtual_conference_page_views_set_input {
  anon_user_id: String
  created_at: timestamptz
  ended_at: timestamptz
  heartbeats: Int
  id: uuid
  route: String
  updated_at: timestamptz
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_page_views_stddev_fields {
   heartbeats: Float
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type virtual_conference_page_views_stddev_pop_fields {
   heartbeats: Float
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type virtual_conference_page_views_stddev_samp_fields {
   heartbeats: Float
   user_id: Float
}

"""
Streaming cursor of the table "virtual_conference_page_views"
"""
input virtual_conference_page_views_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_page_views_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_page_views_stream_cursor_value_input {
  anon_user_id: String
  created_at: timestamptz
  ended_at: timestamptz
  heartbeats: Int
  id: uuid
  route: String
  updated_at: timestamptz
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_page_views_sum_fields {
   heartbeats: Int
   user_id: Int
}

"""
update columns of table "virtual_conference_page_views"
"""
enum virtual_conference_page_views_update_column {
  """column name"""
anon_user_id
  """column name"""
created_at
  """column name"""
ended_at
  """column name"""
heartbeats
  """column name"""
id
  """column name"""
route
  """column name"""
updated_at
  """column name"""
user_id
}

input virtual_conference_page_views_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_page_views_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_page_views_set_input
  where: virtual_conference_page_views_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_page_views_var_pop_fields {
   heartbeats: Float
   user_id: Float
}

"""aggregate var_samp on columns"""
type virtual_conference_page_views_var_samp_fields {
   heartbeats: Float
   user_id: Float
}

"""aggregate variance on columns"""
type virtual_conference_page_views_variance_fields {
   heartbeats: Float
   user_id: Float
}

"""
columns and relationships of "virtual_conference_poster_views"
"""
type virtual_conference_poster_views {
   anon_user_id: String
   created_at: timestamptz! 
   id: Int! 
  """An array relationship"""
 poster("""distinct select on columns"""
distinct_on: [orderable_posters_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [orderable_posters_submissions_order_by! ], """filter the rows returned"""
where: orderable_posters_submissions_bool_exp): [orderable_posters_submissions! ]! 
  """An aggregate relationship"""
 poster_aggregate("""distinct select on columns"""
distinct_on: [orderable_posters_submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [orderable_posters_submissions_order_by! ], """filter the rows returned"""
where: orderable_posters_submissions_bool_exp): orderable_posters_submissions_aggregate! 
  """An array relationship"""
 program_submission("""distinct select on columns"""
distinct_on: [ordered_program_submissions_by_title_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_submissions_by_title_order_by! ], """filter the rows returned"""
where: ordered_program_submissions_by_title_bool_exp): [ordered_program_submissions_by_title! ]! 
  """An aggregate relationship"""
 program_submission_aggregate("""distinct select on columns"""
distinct_on: [ordered_program_submissions_by_title_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_submissions_by_title_order_by! ], """filter the rows returned"""
where: ordered_program_submissions_by_title_bool_exp): ordered_program_submissions_by_title_aggregate! 
   public_status: String
  """An array relationship"""
 submission("""distinct select on columns"""
distinct_on: [submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submissions_order_by! ], """filter the rows returned"""
where: submissions_bool_exp): [submissions! ]! 
  """An aggregate relationship"""
 submission_aggregate("""distinct select on columns"""
distinct_on: [submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submissions_order_by! ], """filter the rows returned"""
where: submissions_bool_exp): submissions_aggregate! 
   submission_id: Int! 
   user_id: Int
}

"""
aggregated selection of "virtual_conference_poster_views"
"""
type virtual_conference_poster_views_aggregate {
   aggregate: virtual_conference_poster_views_aggregate_fields
   nodes: [virtual_conference_poster_views! ]! 
}

"""
aggregate fields of "virtual_conference_poster_views"
"""
type virtual_conference_poster_views_aggregate_fields {
   avg: virtual_conference_poster_views_avg_fields
   count(columns: [virtual_conference_poster_views_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_poster_views_max_fields
   min: virtual_conference_poster_views_min_fields
   stddev: virtual_conference_poster_views_stddev_fields
   stddev_pop: virtual_conference_poster_views_stddev_pop_fields
   stddev_samp: virtual_conference_poster_views_stddev_samp_fields
   sum: virtual_conference_poster_views_sum_fields
   var_pop: virtual_conference_poster_views_var_pop_fields
   var_samp: virtual_conference_poster_views_var_samp_fields
   variance: virtual_conference_poster_views_variance_fields
}

"""aggregate avg on columns"""
type virtual_conference_poster_views_avg_fields {
   id: Float
   submission_id: Float
   user_id: Float
}

"""
Boolean expression to filter rows from the table "virtual_conference_poster_views". All fields are combined with a logical 'AND'.
"""
input virtual_conference_poster_views_bool_exp {
  _and: [virtual_conference_poster_views_bool_exp! ]
  _not: virtual_conference_poster_views_bool_exp
  _or: [virtual_conference_poster_views_bool_exp! ]
  anon_user_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  id: Int_comparison_exp
  poster: orderable_posters_submissions_bool_exp
  poster_aggregate: orderable_posters_submissions_aggregate_bool_exp
  program_submission: ordered_program_submissions_by_title_bool_exp
  program_submission_aggregate: ordered_program_submissions_by_title_aggregate_bool_exp
  public_status: String_comparison_exp
  submission: submissions_bool_exp
  submission_aggregate: submissions_aggregate_bool_exp
  submission_id: Int_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_poster_views"
"""
enum virtual_conference_poster_views_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_poster_views_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_poster_views"
"""
input virtual_conference_poster_views_inc_input {
  id: Int
  submission_id: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_poster_views"
"""
input virtual_conference_poster_views_insert_input {
  anon_user_id: String
  created_at: timestamptz! 
  id: Int! 
  poster: orderable_posters_submissions_arr_rel_insert_input
  program_submission: ordered_program_submissions_by_title_arr_rel_insert_input
  public_status: String
  submission: submissions_arr_rel_insert_input
  submission_id: Int! 
  user_id: Int
}

"""aggregate max on columns"""
type virtual_conference_poster_views_max_fields {
   anon_user_id: String
   created_at: timestamptz
   id: Int
   public_status: String
   submission_id: Int
   user_id: Int
}

"""aggregate min on columns"""
type virtual_conference_poster_views_min_fields {
   anon_user_id: String
   created_at: timestamptz
   id: Int
   public_status: String
   submission_id: Int
   user_id: Int
}

"""
response of any mutation on the table "virtual_conference_poster_views"
"""
type virtual_conference_poster_views_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_poster_views! ]! 
}

"""
on_conflict condition type for table "virtual_conference_poster_views"
"""
input virtual_conference_poster_views_on_conflict {
  constraint: virtual_conference_poster_views_constraint! 
  update_columns: [virtual_conference_poster_views_update_column! ]! 
  where: virtual_conference_poster_views_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_poster_views".
"""
input virtual_conference_poster_views_order_by {
  anon_user_id: order_by
  created_at: order_by
  id: order_by
  poster_aggregate: orderable_posters_submissions_aggregate_order_by
  program_submission_aggregate: ordered_program_submissions_by_title_aggregate_order_by
  public_status: order_by
  submission_aggregate: submissions_aggregate_order_by
  submission_id: order_by
  user_id: order_by
}

"""primary key columns input for table: virtual_conference_poster_views"""
input virtual_conference_poster_views_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_poster_views"
"""
enum virtual_conference_poster_views_select_column {
  """column name"""
anon_user_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
public_status
  """column name"""
submission_id
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_poster_views"
"""
input virtual_conference_poster_views_set_input {
  anon_user_id: String
  created_at: timestamptz
  id: Int
  public_status: String
  submission_id: Int
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_poster_views_stddev_fields {
   id: Float
   submission_id: Float
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type virtual_conference_poster_views_stddev_pop_fields {
   id: Float
   submission_id: Float
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type virtual_conference_poster_views_stddev_samp_fields {
   id: Float
   submission_id: Float
   user_id: Float
}

"""
Streaming cursor of the table "virtual_conference_poster_views"
"""
input virtual_conference_poster_views_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_poster_views_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_poster_views_stream_cursor_value_input {
  anon_user_id: String
  created_at: timestamptz
  id: Int
  public_status: String
  submission_id: Int
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_poster_views_sum_fields {
   id: Int
   submission_id: Int
   user_id: Int
}

"""
update columns of table "virtual_conference_poster_views"
"""
enum virtual_conference_poster_views_update_column {
  """column name"""
anon_user_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
public_status
  """column name"""
submission_id
  """column name"""
user_id
}

input virtual_conference_poster_views_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_poster_views_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_poster_views_set_input
  where: virtual_conference_poster_views_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_poster_views_var_pop_fields {
   id: Float
   submission_id: Float
   user_id: Float
}

"""aggregate var_samp on columns"""
type virtual_conference_poster_views_var_samp_fields {
   id: Float
   submission_id: Float
   user_id: Float
}

"""aggregate variance on columns"""
type virtual_conference_poster_views_variance_fields {
   id: Float
   submission_id: Float
   user_id: Float
}

"""
columns and relationships of "virtual_conference_requests"
"""
type virtual_conference_requests {
   authorization: String! 
   completed_at: timestamptz
   created_at: timestamptz! 
   id: Int! 
   method: String! 
   path: String! 
   query: String! 
   status_code: Int
   user_agent: String! 
   user_id: Int
   uuid: String! 
}

"""
aggregated selection of "virtual_conference_requests"
"""
type virtual_conference_requests_aggregate {
   aggregate: virtual_conference_requests_aggregate_fields
   nodes: [virtual_conference_requests! ]! 
}

"""
aggregate fields of "virtual_conference_requests"
"""
type virtual_conference_requests_aggregate_fields {
   avg: virtual_conference_requests_avg_fields
   count(columns: [virtual_conference_requests_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_requests_max_fields
   min: virtual_conference_requests_min_fields
   stddev: virtual_conference_requests_stddev_fields
   stddev_pop: virtual_conference_requests_stddev_pop_fields
   stddev_samp: virtual_conference_requests_stddev_samp_fields
   sum: virtual_conference_requests_sum_fields
   var_pop: virtual_conference_requests_var_pop_fields
   var_samp: virtual_conference_requests_var_samp_fields
   variance: virtual_conference_requests_variance_fields
}

"""aggregate avg on columns"""
type virtual_conference_requests_avg_fields {
   id: Float
   status_code: Float
   user_id: Float
}

"""
Boolean expression to filter rows from the table "virtual_conference_requests". All fields are combined with a logical 'AND'.
"""
input virtual_conference_requests_bool_exp {
  _and: [virtual_conference_requests_bool_exp! ]
  _not: virtual_conference_requests_bool_exp
  _or: [virtual_conference_requests_bool_exp! ]
  authorization: String_comparison_exp
  completed_at: timestamptz_comparison_exp
  created_at: timestamptz_comparison_exp
  id: Int_comparison_exp
  method: String_comparison_exp
  path: String_comparison_exp
  query: String_comparison_exp
  status_code: Int_comparison_exp
  user_agent: String_comparison_exp
  user_id: Int_comparison_exp
  uuid: String_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_requests"
"""
enum virtual_conference_requests_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_requests_pkey
  """
  unique or primary key constraint on columns "uuid"
  """
virtual_conference_requests_uuid_key
}

"""
input type for incrementing numeric columns in table "virtual_conference_requests"
"""
input virtual_conference_requests_inc_input {
  id: Int
  status_code: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_requests"
"""
input virtual_conference_requests_insert_input {
  authorization: String! 
  completed_at: timestamptz
  created_at: timestamptz! 
  id: Int! 
  method: String! 
  path: String! 
  query: String! 
  status_code: Int
  user_agent: String! 
  user_id: Int
  uuid: String! 
}

"""aggregate max on columns"""
type virtual_conference_requests_max_fields {
   authorization: String
   completed_at: timestamptz
   created_at: timestamptz
   id: Int
   method: String
   path: String
   query: String
   status_code: Int
   user_agent: String
   user_id: Int
   uuid: String
}

"""aggregate min on columns"""
type virtual_conference_requests_min_fields {
   authorization: String
   completed_at: timestamptz
   created_at: timestamptz
   id: Int
   method: String
   path: String
   query: String
   status_code: Int
   user_agent: String
   user_id: Int
   uuid: String
}

"""
response of any mutation on the table "virtual_conference_requests"
"""
type virtual_conference_requests_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_requests! ]! 
}

"""
on_conflict condition type for table "virtual_conference_requests"
"""
input virtual_conference_requests_on_conflict {
  constraint: virtual_conference_requests_constraint! 
  update_columns: [virtual_conference_requests_update_column! ]! 
  where: virtual_conference_requests_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_requests".
"""
input virtual_conference_requests_order_by {
  authorization: order_by
  completed_at: order_by
  created_at: order_by
  id: order_by
  method: order_by
  path: order_by
  query: order_by
  status_code: order_by
  user_agent: order_by
  user_id: order_by
  uuid: order_by
}

"""primary key columns input for table: virtual_conference_requests"""
input virtual_conference_requests_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_requests"
"""
enum virtual_conference_requests_select_column {
  """column name"""
authorization
  """column name"""
completed_at
  """column name"""
created_at
  """column name"""
id
  """column name"""
method
  """column name"""
path
  """column name"""
query
  """column name"""
status_code
  """column name"""
user_agent
  """column name"""
user_id
  """column name"""
uuid
}

"""
input type for updating data in table "virtual_conference_requests"
"""
input virtual_conference_requests_set_input {
  authorization: String
  completed_at: timestamptz
  created_at: timestamptz
  id: Int
  method: String
  path: String
  query: String
  status_code: Int
  user_agent: String
  user_id: Int
  uuid: String
}

"""aggregate stddev on columns"""
type virtual_conference_requests_stddev_fields {
   id: Float
   status_code: Float
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type virtual_conference_requests_stddev_pop_fields {
   id: Float
   status_code: Float
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type virtual_conference_requests_stddev_samp_fields {
   id: Float
   status_code: Float
   user_id: Float
}

"""
Streaming cursor of the table "virtual_conference_requests"
"""
input virtual_conference_requests_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_requests_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_requests_stream_cursor_value_input {
  authorization: String
  completed_at: timestamptz
  created_at: timestamptz
  id: Int
  method: String
  path: String
  query: String
  status_code: Int
  user_agent: String
  user_id: Int
  uuid: String
}

"""aggregate sum on columns"""
type virtual_conference_requests_sum_fields {
   id: Int
   status_code: Int
   user_id: Int
}

"""
update columns of table "virtual_conference_requests"
"""
enum virtual_conference_requests_update_column {
  """column name"""
authorization
  """column name"""
completed_at
  """column name"""
created_at
  """column name"""
id
  """column name"""
method
  """column name"""
path
  """column name"""
query
  """column name"""
status_code
  """column name"""
user_agent
  """column name"""
user_id
  """column name"""
uuid
}

input virtual_conference_requests_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_requests_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_requests_set_input
  where: virtual_conference_requests_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_requests_var_pop_fields {
   id: Float
   status_code: Float
   user_id: Float
}

"""aggregate var_samp on columns"""
type virtual_conference_requests_var_samp_fields {
   id: Float
   status_code: Float
   user_id: Float
}

"""aggregate variance on columns"""
type virtual_conference_requests_variance_fields {
   id: Float
   status_code: Float
   user_id: Float
}

"""
columns and relationships of "virtual_conference_saved_badges"
"""
type virtual_conference_saved_badges {
   badge_id: Int! 
   id: Int! 
  """An object relationship"""
 user: users! 
   user_id: Int! 
  """An object relationship"""
 virtual_conference_name_badge: virtual_conference_name_badge! 
}

"""
aggregated selection of "virtual_conference_saved_badges"
"""
type virtual_conference_saved_badges_aggregate {
   aggregate: virtual_conference_saved_badges_aggregate_fields
   nodes: [virtual_conference_saved_badges! ]! 
}

input virtual_conference_saved_badges_aggregate_bool_exp {
  count: virtual_conference_saved_badges_aggregate_bool_exp_count
}

input virtual_conference_saved_badges_aggregate_bool_exp_count {
  arguments: [virtual_conference_saved_badges_select_column! ]
  distinct: Boolean
  filter: virtual_conference_saved_badges_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_saved_badges"
"""
type virtual_conference_saved_badges_aggregate_fields {
   avg: virtual_conference_saved_badges_avg_fields
   count(columns: [virtual_conference_saved_badges_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_saved_badges_max_fields
   min: virtual_conference_saved_badges_min_fields
   stddev: virtual_conference_saved_badges_stddev_fields
   stddev_pop: virtual_conference_saved_badges_stddev_pop_fields
   stddev_samp: virtual_conference_saved_badges_stddev_samp_fields
   sum: virtual_conference_saved_badges_sum_fields
   var_pop: virtual_conference_saved_badges_var_pop_fields
   var_samp: virtual_conference_saved_badges_var_samp_fields
   variance: virtual_conference_saved_badges_variance_fields
}

"""
order by aggregate values of table "virtual_conference_saved_badges"
"""
input virtual_conference_saved_badges_aggregate_order_by {
  avg: virtual_conference_saved_badges_avg_order_by
  count: order_by
  max: virtual_conference_saved_badges_max_order_by
  min: virtual_conference_saved_badges_min_order_by
  stddev: virtual_conference_saved_badges_stddev_order_by
  stddev_pop: virtual_conference_saved_badges_stddev_pop_order_by
  stddev_samp: virtual_conference_saved_badges_stddev_samp_order_by
  sum: virtual_conference_saved_badges_sum_order_by
  var_pop: virtual_conference_saved_badges_var_pop_order_by
  var_samp: virtual_conference_saved_badges_var_samp_order_by
  variance: virtual_conference_saved_badges_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_saved_badges"
"""
input virtual_conference_saved_badges_arr_rel_insert_input {
  data: [virtual_conference_saved_badges_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_saved_badges_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_saved_badges_avg_fields {
   badge_id: Float
   id: Float
   user_id: Float
}

"""
order by avg() on columns of table "virtual_conference_saved_badges"
"""
input virtual_conference_saved_badges_avg_order_by {
  badge_id: order_by
  id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_saved_badges". All fields are combined with a logical 'AND'.
"""
input virtual_conference_saved_badges_bool_exp {
  _and: [virtual_conference_saved_badges_bool_exp! ]
  _not: virtual_conference_saved_badges_bool_exp
  _or: [virtual_conference_saved_badges_bool_exp! ]
  badge_id: Int_comparison_exp
  id: Int_comparison_exp
  user: users_bool_exp
  user_id: Int_comparison_exp
  virtual_conference_name_badge: virtual_conference_name_badge_bool_exp
}

"""
unique or primary key constraints on table "virtual_conference_saved_badges"
"""
enum virtual_conference_saved_badges_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_saved_badges_pkey
  """
  unique or primary key constraint on columns "badge_id", "user_id"
  """
virtual_conference_saved_badges_user_id_badge_id_key
}

"""
input type for incrementing numeric columns in table "virtual_conference_saved_badges"
"""
input virtual_conference_saved_badges_inc_input {
  badge_id: Int
  id: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_saved_badges"
"""
input virtual_conference_saved_badges_insert_input {
  badge_id: Int! 
  id: Int! 
  user: users_obj_rel_insert_input
  user_id: Int! 
  virtual_conference_name_badge: virtual_conference_name_badge_obj_rel_insert_input
}

"""aggregate max on columns"""
type virtual_conference_saved_badges_max_fields {
   badge_id: Int
   id: Int
   user_id: Int
}

"""
order by max() on columns of table "virtual_conference_saved_badges"
"""
input virtual_conference_saved_badges_max_order_by {
  badge_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type virtual_conference_saved_badges_min_fields {
   badge_id: Int
   id: Int
   user_id: Int
}

"""
order by min() on columns of table "virtual_conference_saved_badges"
"""
input virtual_conference_saved_badges_min_order_by {
  badge_id: order_by
  id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "virtual_conference_saved_badges"
"""
type virtual_conference_saved_badges_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_saved_badges! ]! 
}

"""
on_conflict condition type for table "virtual_conference_saved_badges"
"""
input virtual_conference_saved_badges_on_conflict {
  constraint: virtual_conference_saved_badges_constraint! 
  update_columns: [virtual_conference_saved_badges_update_column! ]! 
  where: virtual_conference_saved_badges_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_saved_badges".
"""
input virtual_conference_saved_badges_order_by {
  badge_id: order_by
  id: order_by
  user: users_order_by
  user_id: order_by
  virtual_conference_name_badge: virtual_conference_name_badge_order_by
}

"""primary key columns input for table: virtual_conference_saved_badges"""
input virtual_conference_saved_badges_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_saved_badges"
"""
enum virtual_conference_saved_badges_select_column {
  """column name"""
badge_id
  """column name"""
id
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_saved_badges"
"""
input virtual_conference_saved_badges_set_input {
  badge_id: Int
  id: Int
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_saved_badges_stddev_fields {
   badge_id: Float
   id: Float
   user_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_saved_badges"
"""
input virtual_conference_saved_badges_stddev_order_by {
  badge_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_saved_badges_stddev_pop_fields {
   badge_id: Float
   id: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_saved_badges"
"""
input virtual_conference_saved_badges_stddev_pop_order_by {
  badge_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_saved_badges_stddev_samp_fields {
   badge_id: Float
   id: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_saved_badges"
"""
input virtual_conference_saved_badges_stddev_samp_order_by {
  badge_id: order_by
  id: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_saved_badges"
"""
input virtual_conference_saved_badges_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_saved_badges_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_saved_badges_stream_cursor_value_input {
  badge_id: Int
  id: Int
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_saved_badges_sum_fields {
   badge_id: Int
   id: Int
   user_id: Int
}

"""
order by sum() on columns of table "virtual_conference_saved_badges"
"""
input virtual_conference_saved_badges_sum_order_by {
  badge_id: order_by
  id: order_by
  user_id: order_by
}

"""
update columns of table "virtual_conference_saved_badges"
"""
enum virtual_conference_saved_badges_update_column {
  """column name"""
badge_id
  """column name"""
id
  """column name"""
user_id
}

input virtual_conference_saved_badges_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_saved_badges_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_saved_badges_set_input
  where: virtual_conference_saved_badges_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_saved_badges_var_pop_fields {
   badge_id: Float
   id: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_saved_badges"
"""
input virtual_conference_saved_badges_var_pop_order_by {
  badge_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_saved_badges_var_samp_fields {
   badge_id: Float
   id: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_saved_badges"
"""
input virtual_conference_saved_badges_var_samp_order_by {
  badge_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_saved_badges_variance_fields {
   badge_id: Float
   id: Float
   user_id: Float
}

"""
order by variance() on columns of table "virtual_conference_saved_badges"
"""
input virtual_conference_saved_badges_variance_order_by {
  badge_id: order_by
  id: order_by
  user_id: order_by
}

"""
columns and relationships of "virtual_conference_session_bookmarks"
"""
type virtual_conference_session_bookmarks {
   created_at: timestamptz! 
   event_id: Int! 
   id: Int! 
   program_session_id: Int! 
   updated_at: timestamptz! 
   user_id: Int! 
}

"""
aggregated selection of "virtual_conference_session_bookmarks"
"""
type virtual_conference_session_bookmarks_aggregate {
   aggregate: virtual_conference_session_bookmarks_aggregate_fields
   nodes: [virtual_conference_session_bookmarks! ]! 
}

input virtual_conference_session_bookmarks_aggregate_bool_exp {
  count: virtual_conference_session_bookmarks_aggregate_bool_exp_count
}

input virtual_conference_session_bookmarks_aggregate_bool_exp_count {
  arguments: [virtual_conference_session_bookmarks_select_column! ]
  distinct: Boolean
  filter: virtual_conference_session_bookmarks_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_session_bookmarks"
"""
type virtual_conference_session_bookmarks_aggregate_fields {
   avg: virtual_conference_session_bookmarks_avg_fields
   count(columns: [virtual_conference_session_bookmarks_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_session_bookmarks_max_fields
   min: virtual_conference_session_bookmarks_min_fields
   stddev: virtual_conference_session_bookmarks_stddev_fields
   stddev_pop: virtual_conference_session_bookmarks_stddev_pop_fields
   stddev_samp: virtual_conference_session_bookmarks_stddev_samp_fields
   sum: virtual_conference_session_bookmarks_sum_fields
   var_pop: virtual_conference_session_bookmarks_var_pop_fields
   var_samp: virtual_conference_session_bookmarks_var_samp_fields
   variance: virtual_conference_session_bookmarks_variance_fields
}

"""
order by aggregate values of table "virtual_conference_session_bookmarks"
"""
input virtual_conference_session_bookmarks_aggregate_order_by {
  avg: virtual_conference_session_bookmarks_avg_order_by
  count: order_by
  max: virtual_conference_session_bookmarks_max_order_by
  min: virtual_conference_session_bookmarks_min_order_by
  stddev: virtual_conference_session_bookmarks_stddev_order_by
  stddev_pop: virtual_conference_session_bookmarks_stddev_pop_order_by
  stddev_samp: virtual_conference_session_bookmarks_stddev_samp_order_by
  sum: virtual_conference_session_bookmarks_sum_order_by
  var_pop: virtual_conference_session_bookmarks_var_pop_order_by
  var_samp: virtual_conference_session_bookmarks_var_samp_order_by
  variance: virtual_conference_session_bookmarks_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_session_bookmarks"
"""
input virtual_conference_session_bookmarks_arr_rel_insert_input {
  data: [virtual_conference_session_bookmarks_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_session_bookmarks_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_session_bookmarks_avg_fields {
   event_id: Float
   id: Float
   program_session_id: Float
   user_id: Float
}

"""
order by avg() on columns of table "virtual_conference_session_bookmarks"
"""
input virtual_conference_session_bookmarks_avg_order_by {
  event_id: order_by
  id: order_by
  program_session_id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_session_bookmarks". All fields are combined with a logical 'AND'.
"""
input virtual_conference_session_bookmarks_bool_exp {
  _and: [virtual_conference_session_bookmarks_bool_exp! ]
  _not: virtual_conference_session_bookmarks_bool_exp
  _or: [virtual_conference_session_bookmarks_bool_exp! ]
  created_at: timestamptz_comparison_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  program_session_id: Int_comparison_exp
  updated_at: timestamptz_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_session_bookmarks"
"""
enum virtual_conference_session_bookmarks_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_bookmarks_pkey
  """
  unique or primary key constraint on columns "user_id", "program_session_id"
  """
virtual_conference_bookmarks_user_id_program_session_id_key
}

"""
input type for incrementing numeric columns in table "virtual_conference_session_bookmarks"
"""
input virtual_conference_session_bookmarks_inc_input {
  event_id: Int
  id: Int
  program_session_id: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_session_bookmarks"
"""
input virtual_conference_session_bookmarks_insert_input {
  created_at: timestamptz! 
  event_id: Int! 
  id: Int! 
  program_session_id: Int! 
  updated_at: timestamptz! 
  user_id: Int! 
}

"""aggregate max on columns"""
type virtual_conference_session_bookmarks_max_fields {
   created_at: timestamptz
   event_id: Int
   id: Int
   program_session_id: Int
   updated_at: timestamptz
   user_id: Int
}

"""
order by max() on columns of table "virtual_conference_session_bookmarks"
"""
input virtual_conference_session_bookmarks_max_order_by {
  created_at: order_by
  event_id: order_by
  id: order_by
  program_session_id: order_by
  updated_at: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type virtual_conference_session_bookmarks_min_fields {
   created_at: timestamptz
   event_id: Int
   id: Int
   program_session_id: Int
   updated_at: timestamptz
   user_id: Int
}

"""
order by min() on columns of table "virtual_conference_session_bookmarks"
"""
input virtual_conference_session_bookmarks_min_order_by {
  created_at: order_by
  event_id: order_by
  id: order_by
  program_session_id: order_by
  updated_at: order_by
  user_id: order_by
}

"""
response of any mutation on the table "virtual_conference_session_bookmarks"
"""
type virtual_conference_session_bookmarks_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_session_bookmarks! ]! 
}

"""
on_conflict condition type for table "virtual_conference_session_bookmarks"
"""
input virtual_conference_session_bookmarks_on_conflict {
  constraint: virtual_conference_session_bookmarks_constraint! 
  update_columns: [virtual_conference_session_bookmarks_update_column! ]! 
  where: virtual_conference_session_bookmarks_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_session_bookmarks".
"""
input virtual_conference_session_bookmarks_order_by {
  created_at: order_by
  event_id: order_by
  id: order_by
  program_session_id: order_by
  updated_at: order_by
  user_id: order_by
}

"""
primary key columns input for table: virtual_conference_session_bookmarks
"""
input virtual_conference_session_bookmarks_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_session_bookmarks"
"""
enum virtual_conference_session_bookmarks_select_column {
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
id
  """column name"""
program_session_id
  """column name"""
updated_at
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_session_bookmarks"
"""
input virtual_conference_session_bookmarks_set_input {
  created_at: timestamptz
  event_id: Int
  id: Int
  program_session_id: Int
  updated_at: timestamptz
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_session_bookmarks_stddev_fields {
   event_id: Float
   id: Float
   program_session_id: Float
   user_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_session_bookmarks"
"""
input virtual_conference_session_bookmarks_stddev_order_by {
  event_id: order_by
  id: order_by
  program_session_id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_session_bookmarks_stddev_pop_fields {
   event_id: Float
   id: Float
   program_session_id: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_session_bookmarks"
"""
input virtual_conference_session_bookmarks_stddev_pop_order_by {
  event_id: order_by
  id: order_by
  program_session_id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_session_bookmarks_stddev_samp_fields {
   event_id: Float
   id: Float
   program_session_id: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_session_bookmarks"
"""
input virtual_conference_session_bookmarks_stddev_samp_order_by {
  event_id: order_by
  id: order_by
  program_session_id: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_session_bookmarks"
"""
input virtual_conference_session_bookmarks_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_session_bookmarks_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_session_bookmarks_stream_cursor_value_input {
  created_at: timestamptz
  event_id: Int
  id: Int
  program_session_id: Int
  updated_at: timestamptz
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_session_bookmarks_sum_fields {
   event_id: Int
   id: Int
   program_session_id: Int
   user_id: Int
}

"""
order by sum() on columns of table "virtual_conference_session_bookmarks"
"""
input virtual_conference_session_bookmarks_sum_order_by {
  event_id: order_by
  id: order_by
  program_session_id: order_by
  user_id: order_by
}

"""
update columns of table "virtual_conference_session_bookmarks"
"""
enum virtual_conference_session_bookmarks_update_column {
  """column name"""
created_at
  """column name"""
event_id
  """column name"""
id
  """column name"""
program_session_id
  """column name"""
updated_at
  """column name"""
user_id
}

input virtual_conference_session_bookmarks_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_session_bookmarks_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_session_bookmarks_set_input
  where: virtual_conference_session_bookmarks_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_session_bookmarks_var_pop_fields {
   event_id: Float
   id: Float
   program_session_id: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_session_bookmarks"
"""
input virtual_conference_session_bookmarks_var_pop_order_by {
  event_id: order_by
  id: order_by
  program_session_id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_session_bookmarks_var_samp_fields {
   event_id: Float
   id: Float
   program_session_id: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_session_bookmarks"
"""
input virtual_conference_session_bookmarks_var_samp_order_by {
  event_id: order_by
  id: order_by
  program_session_id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_session_bookmarks_variance_fields {
   event_id: Float
   id: Float
   program_session_id: Float
   user_id: Float
}

"""
order by variance() on columns of table "virtual_conference_session_bookmarks"
"""
input virtual_conference_session_bookmarks_variance_order_by {
  event_id: order_by
  id: order_by
  program_session_id: order_by
  user_id: order_by
}

"""
columns and relationships of "virtual_conference_session_views"
"""
type virtual_conference_session_views {
   anon_user_id: String
   created_at: timestamptz! 
   id: Int! 
  """An array relationship"""
 program_session("""distinct select on columns"""
distinct_on: [program_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_order_by! ], """filter the rows returned"""
where: program_sessions_bool_exp): [program_sessions! ]! 
  """An aggregate relationship"""
 program_session_aggregate("""distinct select on columns"""
distinct_on: [program_sessions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [program_sessions_order_by! ], """filter the rows returned"""
where: program_sessions_bool_exp): program_sessions_aggregate! 
   program_session_id: Int! 
   public_status: String
   user_id: Int! 
}

"""
aggregated selection of "virtual_conference_session_views"
"""
type virtual_conference_session_views_aggregate {
   aggregate: virtual_conference_session_views_aggregate_fields
   nodes: [virtual_conference_session_views! ]! 
}

input virtual_conference_session_views_aggregate_bool_exp {
  count: virtual_conference_session_views_aggregate_bool_exp_count
}

input virtual_conference_session_views_aggregate_bool_exp_count {
  arguments: [virtual_conference_session_views_select_column! ]
  distinct: Boolean
  filter: virtual_conference_session_views_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_session_views"
"""
type virtual_conference_session_views_aggregate_fields {
   avg: virtual_conference_session_views_avg_fields
   count(columns: [virtual_conference_session_views_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_session_views_max_fields
   min: virtual_conference_session_views_min_fields
   stddev: virtual_conference_session_views_stddev_fields
   stddev_pop: virtual_conference_session_views_stddev_pop_fields
   stddev_samp: virtual_conference_session_views_stddev_samp_fields
   sum: virtual_conference_session_views_sum_fields
   var_pop: virtual_conference_session_views_var_pop_fields
   var_samp: virtual_conference_session_views_var_samp_fields
   variance: virtual_conference_session_views_variance_fields
}

"""
order by aggregate values of table "virtual_conference_session_views"
"""
input virtual_conference_session_views_aggregate_order_by {
  avg: virtual_conference_session_views_avg_order_by
  count: order_by
  max: virtual_conference_session_views_max_order_by
  min: virtual_conference_session_views_min_order_by
  stddev: virtual_conference_session_views_stddev_order_by
  stddev_pop: virtual_conference_session_views_stddev_pop_order_by
  stddev_samp: virtual_conference_session_views_stddev_samp_order_by
  sum: virtual_conference_session_views_sum_order_by
  var_pop: virtual_conference_session_views_var_pop_order_by
  var_samp: virtual_conference_session_views_var_samp_order_by
  variance: virtual_conference_session_views_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_session_views"
"""
input virtual_conference_session_views_arr_rel_insert_input {
  data: [virtual_conference_session_views_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_session_views_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_session_views_avg_fields {
   id: Float
   program_session_id: Float
   user_id: Float
}

"""
order by avg() on columns of table "virtual_conference_session_views"
"""
input virtual_conference_session_views_avg_order_by {
  id: order_by
  program_session_id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_session_views". All fields are combined with a logical 'AND'.
"""
input virtual_conference_session_views_bool_exp {
  _and: [virtual_conference_session_views_bool_exp! ]
  _not: virtual_conference_session_views_bool_exp
  _or: [virtual_conference_session_views_bool_exp! ]
  anon_user_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  id: Int_comparison_exp
  program_session: program_sessions_bool_exp
  program_session_aggregate: program_sessions_aggregate_bool_exp
  program_session_id: Int_comparison_exp
  public_status: String_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_session_views"
"""
enum virtual_conference_session_views_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_session_views_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_session_views"
"""
input virtual_conference_session_views_inc_input {
  id: Int
  program_session_id: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_session_views"
"""
input virtual_conference_session_views_insert_input {
  anon_user_id: String
  created_at: timestamptz! 
  id: Int! 
  program_session: program_sessions_arr_rel_insert_input
  program_session_id: Int! 
  public_status: String
  user_id: Int! 
}

"""aggregate max on columns"""
type virtual_conference_session_views_max_fields {
   anon_user_id: String
   created_at: timestamptz
   id: Int
   program_session_id: Int
   public_status: String
   user_id: Int
}

"""
order by max() on columns of table "virtual_conference_session_views"
"""
input virtual_conference_session_views_max_order_by {
  anon_user_id: order_by
  created_at: order_by
  id: order_by
  program_session_id: order_by
  public_status: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type virtual_conference_session_views_min_fields {
   anon_user_id: String
   created_at: timestamptz
   id: Int
   program_session_id: Int
   public_status: String
   user_id: Int
}

"""
order by min() on columns of table "virtual_conference_session_views"
"""
input virtual_conference_session_views_min_order_by {
  anon_user_id: order_by
  created_at: order_by
  id: order_by
  program_session_id: order_by
  public_status: order_by
  user_id: order_by
}

"""
response of any mutation on the table "virtual_conference_session_views"
"""
type virtual_conference_session_views_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_session_views! ]! 
}

"""
on_conflict condition type for table "virtual_conference_session_views"
"""
input virtual_conference_session_views_on_conflict {
  constraint: virtual_conference_session_views_constraint! 
  update_columns: [virtual_conference_session_views_update_column! ]! 
  where: virtual_conference_session_views_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_session_views".
"""
input virtual_conference_session_views_order_by {
  anon_user_id: order_by
  created_at: order_by
  id: order_by
  program_session_aggregate: program_sessions_aggregate_order_by
  program_session_id: order_by
  public_status: order_by
  user_id: order_by
}

"""primary key columns input for table: virtual_conference_session_views"""
input virtual_conference_session_views_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_session_views"
"""
enum virtual_conference_session_views_select_column {
  """column name"""
anon_user_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
program_session_id
  """column name"""
public_status
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_session_views"
"""
input virtual_conference_session_views_set_input {
  anon_user_id: String
  created_at: timestamptz
  id: Int
  program_session_id: Int
  public_status: String
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_session_views_stddev_fields {
   id: Float
   program_session_id: Float
   user_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_session_views"
"""
input virtual_conference_session_views_stddev_order_by {
  id: order_by
  program_session_id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_session_views_stddev_pop_fields {
   id: Float
   program_session_id: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_session_views"
"""
input virtual_conference_session_views_stddev_pop_order_by {
  id: order_by
  program_session_id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_session_views_stddev_samp_fields {
   id: Float
   program_session_id: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_session_views"
"""
input virtual_conference_session_views_stddev_samp_order_by {
  id: order_by
  program_session_id: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_session_views"
"""
input virtual_conference_session_views_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_session_views_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_session_views_stream_cursor_value_input {
  anon_user_id: String
  created_at: timestamptz
  id: Int
  program_session_id: Int
  public_status: String
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_session_views_sum_fields {
   id: Int
   program_session_id: Int
   user_id: Int
}

"""
order by sum() on columns of table "virtual_conference_session_views"
"""
input virtual_conference_session_views_sum_order_by {
  id: order_by
  program_session_id: order_by
  user_id: order_by
}

"""
update columns of table "virtual_conference_session_views"
"""
enum virtual_conference_session_views_update_column {
  """column name"""
anon_user_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
program_session_id
  """column name"""
public_status
  """column name"""
user_id
}

input virtual_conference_session_views_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_session_views_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_session_views_set_input
  where: virtual_conference_session_views_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_session_views_var_pop_fields {
   id: Float
   program_session_id: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_session_views"
"""
input virtual_conference_session_views_var_pop_order_by {
  id: order_by
  program_session_id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_session_views_var_samp_fields {
   id: Float
   program_session_id: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_session_views"
"""
input virtual_conference_session_views_var_samp_order_by {
  id: order_by
  program_session_id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_session_views_variance_fields {
   id: Float
   program_session_id: Float
   user_id: Float
}

"""
order by variance() on columns of table "virtual_conference_session_views"
"""
input virtual_conference_session_views_variance_order_by {
  id: order_by
  program_session_id: order_by
  user_id: order_by
}

"""
columns and relationships of "virtual_conference_sessions"
"""
type virtual_conference_sessions {
   created_at: timestamptz! 
   id: uuid! 
   user_agent: String
   user_id: Int! 
}

"""
aggregated selection of "virtual_conference_sessions"
"""
type virtual_conference_sessions_aggregate {
   aggregate: virtual_conference_sessions_aggregate_fields
   nodes: [virtual_conference_sessions! ]! 
}

"""
aggregate fields of "virtual_conference_sessions"
"""
type virtual_conference_sessions_aggregate_fields {
   avg: virtual_conference_sessions_avg_fields
   count(columns: [virtual_conference_sessions_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_sessions_max_fields
   min: virtual_conference_sessions_min_fields
   stddev: virtual_conference_sessions_stddev_fields
   stddev_pop: virtual_conference_sessions_stddev_pop_fields
   stddev_samp: virtual_conference_sessions_stddev_samp_fields
   sum: virtual_conference_sessions_sum_fields
   var_pop: virtual_conference_sessions_var_pop_fields
   var_samp: virtual_conference_sessions_var_samp_fields
   variance: virtual_conference_sessions_variance_fields
}

"""aggregate avg on columns"""
type virtual_conference_sessions_avg_fields {
   user_id: Float
}

"""
Boolean expression to filter rows from the table "virtual_conference_sessions". All fields are combined with a logical 'AND'.
"""
input virtual_conference_sessions_bool_exp {
  _and: [virtual_conference_sessions_bool_exp! ]
  _not: virtual_conference_sessions_bool_exp
  _or: [virtual_conference_sessions_bool_exp! ]
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  user_agent: String_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_sessions"
"""
enum virtual_conference_sessions_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_sessions_pkey
  """
  unique or primary key constraint on columns "user_id"
  """
virtual_conference_sessions_user_id_key
}

"""
input type for incrementing numeric columns in table "virtual_conference_sessions"
"""
input virtual_conference_sessions_inc_input {
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_sessions"
"""
input virtual_conference_sessions_insert_input {
  created_at: timestamptz! 
  id: uuid! 
  user_agent: String
  user_id: Int! 
}

"""aggregate max on columns"""
type virtual_conference_sessions_max_fields {
   created_at: timestamptz
   id: uuid
   user_agent: String
   user_id: Int
}

"""aggregate min on columns"""
type virtual_conference_sessions_min_fields {
   created_at: timestamptz
   id: uuid
   user_agent: String
   user_id: Int
}

"""
response of any mutation on the table "virtual_conference_sessions"
"""
type virtual_conference_sessions_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_sessions! ]! 
}

"""
on_conflict condition type for table "virtual_conference_sessions"
"""
input virtual_conference_sessions_on_conflict {
  constraint: virtual_conference_sessions_constraint! 
  update_columns: [virtual_conference_sessions_update_column! ]! 
  where: virtual_conference_sessions_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_sessions".
"""
input virtual_conference_sessions_order_by {
  created_at: order_by
  id: order_by
  user_agent: order_by
  user_id: order_by
}

"""primary key columns input for table: virtual_conference_sessions"""
input virtual_conference_sessions_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "virtual_conference_sessions"
"""
enum virtual_conference_sessions_select_column {
  """column name"""
created_at
  """column name"""
id
  """column name"""
user_agent
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_sessions"
"""
input virtual_conference_sessions_set_input {
  created_at: timestamptz
  id: uuid
  user_agent: String
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_sessions_stddev_fields {
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type virtual_conference_sessions_stddev_pop_fields {
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type virtual_conference_sessions_stddev_samp_fields {
   user_id: Float
}

"""
Streaming cursor of the table "virtual_conference_sessions"
"""
input virtual_conference_sessions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_sessions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_sessions_stream_cursor_value_input {
  created_at: timestamptz
  id: uuid
  user_agent: String
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_sessions_sum_fields {
   user_id: Int
}

"""
update columns of table "virtual_conference_sessions"
"""
enum virtual_conference_sessions_update_column {
  """column name"""
created_at
  """column name"""
id
  """column name"""
user_agent
  """column name"""
user_id
}

input virtual_conference_sessions_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_sessions_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_sessions_set_input
  where: virtual_conference_sessions_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_sessions_var_pop_fields {
   user_id: Float
}

"""aggregate var_samp on columns"""
type virtual_conference_sessions_var_samp_fields {
   user_id: Float
}

"""aggregate variance on columns"""
type virtual_conference_sessions_variance_fields {
   user_id: Float
}

"""
columns and relationships of "virtual_conference_submission_bookmarks"
"""
type virtual_conference_submission_bookmarks {
   created_at: timestamptz! 
   id: uuid! 
  """An array relationship"""
 submission("""distinct select on columns"""
distinct_on: [submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submissions_order_by! ], """filter the rows returned"""
where: submissions_bool_exp): [submissions! ]! 
  """An aggregate relationship"""
 submission_aggregate("""distinct select on columns"""
distinct_on: [submissions_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [submissions_order_by! ], """filter the rows returned"""
where: submissions_bool_exp): submissions_aggregate! 
   submission_id: Int! 
   user_id: Int! 
}

"""
aggregated selection of "virtual_conference_submission_bookmarks"
"""
type virtual_conference_submission_bookmarks_aggregate {
   aggregate: virtual_conference_submission_bookmarks_aggregate_fields
   nodes: [virtual_conference_submission_bookmarks! ]! 
}

input virtual_conference_submission_bookmarks_aggregate_bool_exp {
  count: virtual_conference_submission_bookmarks_aggregate_bool_exp_count
}

input virtual_conference_submission_bookmarks_aggregate_bool_exp_count {
  arguments: [virtual_conference_submission_bookmarks_select_column! ]
  distinct: Boolean
  filter: virtual_conference_submission_bookmarks_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_submission_bookmarks"
"""
type virtual_conference_submission_bookmarks_aggregate_fields {
   avg: virtual_conference_submission_bookmarks_avg_fields
   count(columns: [virtual_conference_submission_bookmarks_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_submission_bookmarks_max_fields
   min: virtual_conference_submission_bookmarks_min_fields
   stddev: virtual_conference_submission_bookmarks_stddev_fields
   stddev_pop: virtual_conference_submission_bookmarks_stddev_pop_fields
   stddev_samp: virtual_conference_submission_bookmarks_stddev_samp_fields
   sum: virtual_conference_submission_bookmarks_sum_fields
   var_pop: virtual_conference_submission_bookmarks_var_pop_fields
   var_samp: virtual_conference_submission_bookmarks_var_samp_fields
   variance: virtual_conference_submission_bookmarks_variance_fields
}

"""
order by aggregate values of table "virtual_conference_submission_bookmarks"
"""
input virtual_conference_submission_bookmarks_aggregate_order_by {
  avg: virtual_conference_submission_bookmarks_avg_order_by
  count: order_by
  max: virtual_conference_submission_bookmarks_max_order_by
  min: virtual_conference_submission_bookmarks_min_order_by
  stddev: virtual_conference_submission_bookmarks_stddev_order_by
  stddev_pop: virtual_conference_submission_bookmarks_stddev_pop_order_by
  stddev_samp: virtual_conference_submission_bookmarks_stddev_samp_order_by
  sum: virtual_conference_submission_bookmarks_sum_order_by
  var_pop: virtual_conference_submission_bookmarks_var_pop_order_by
  var_samp: virtual_conference_submission_bookmarks_var_samp_order_by
  variance: virtual_conference_submission_bookmarks_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_submission_bookmarks"
"""
input virtual_conference_submission_bookmarks_arr_rel_insert_input {
  data: [virtual_conference_submission_bookmarks_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_submission_bookmarks_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_submission_bookmarks_avg_fields {
   submission_id: Float
   user_id: Float
}

"""
order by avg() on columns of table "virtual_conference_submission_bookmarks"
"""
input virtual_conference_submission_bookmarks_avg_order_by {
  submission_id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_submission_bookmarks". All fields are combined with a logical 'AND'.
"""
input virtual_conference_submission_bookmarks_bool_exp {
  _and: [virtual_conference_submission_bookmarks_bool_exp! ]
  _not: virtual_conference_submission_bookmarks_bool_exp
  _or: [virtual_conference_submission_bookmarks_bool_exp! ]
  created_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  submission: submissions_bool_exp
  submission_aggregate: submissions_aggregate_bool_exp
  submission_id: Int_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_submission_bookmarks"
"""
enum virtual_conference_submission_bookmarks_constraint {
  """
  unique or primary key constraint on columns "submission_id", "user_id"
  """
virtual_conference_submission_bookmar_submission_id_user_id_key
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_submission_bookmarks_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_submission_bookmarks"
"""
input virtual_conference_submission_bookmarks_inc_input {
  submission_id: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_submission_bookmarks"
"""
input virtual_conference_submission_bookmarks_insert_input {
  created_at: timestamptz! 
  id: uuid! 
  submission: submissions_arr_rel_insert_input
  submission_id: Int! 
  user_id: Int! 
}

"""aggregate max on columns"""
type virtual_conference_submission_bookmarks_max_fields {
   created_at: timestamptz
   id: uuid
   submission_id: Int
   user_id: Int
}

"""
order by max() on columns of table "virtual_conference_submission_bookmarks"
"""
input virtual_conference_submission_bookmarks_max_order_by {
  created_at: order_by
  id: order_by
  submission_id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type virtual_conference_submission_bookmarks_min_fields {
   created_at: timestamptz
   id: uuid
   submission_id: Int
   user_id: Int
}

"""
order by min() on columns of table "virtual_conference_submission_bookmarks"
"""
input virtual_conference_submission_bookmarks_min_order_by {
  created_at: order_by
  id: order_by
  submission_id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "virtual_conference_submission_bookmarks"
"""
type virtual_conference_submission_bookmarks_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_submission_bookmarks! ]! 
}

"""
on_conflict condition type for table "virtual_conference_submission_bookmarks"
"""
input virtual_conference_submission_bookmarks_on_conflict {
  constraint: virtual_conference_submission_bookmarks_constraint! 
  update_columns: [virtual_conference_submission_bookmarks_update_column! ]! 
  where: virtual_conference_submission_bookmarks_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_submission_bookmarks".
"""
input virtual_conference_submission_bookmarks_order_by {
  created_at: order_by
  id: order_by
  submission_aggregate: submissions_aggregate_order_by
  submission_id: order_by
  user_id: order_by
}

"""
primary key columns input for table: virtual_conference_submission_bookmarks
"""
input virtual_conference_submission_bookmarks_pk_columns_input {
  id: uuid! 
}

"""
select columns of table "virtual_conference_submission_bookmarks"
"""
enum virtual_conference_submission_bookmarks_select_column {
  """column name"""
created_at
  """column name"""
id
  """column name"""
submission_id
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_submission_bookmarks"
"""
input virtual_conference_submission_bookmarks_set_input {
  created_at: timestamptz
  id: uuid
  submission_id: Int
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_submission_bookmarks_stddev_fields {
   submission_id: Float
   user_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_submission_bookmarks"
"""
input virtual_conference_submission_bookmarks_stddev_order_by {
  submission_id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_submission_bookmarks_stddev_pop_fields {
   submission_id: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_submission_bookmarks"
"""
input virtual_conference_submission_bookmarks_stddev_pop_order_by {
  submission_id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_submission_bookmarks_stddev_samp_fields {
   submission_id: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_submission_bookmarks"
"""
input virtual_conference_submission_bookmarks_stddev_samp_order_by {
  submission_id: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_submission_bookmarks"
"""
input virtual_conference_submission_bookmarks_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_submission_bookmarks_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_submission_bookmarks_stream_cursor_value_input {
  created_at: timestamptz
  id: uuid
  submission_id: Int
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_submission_bookmarks_sum_fields {
   submission_id: Int
   user_id: Int
}

"""
order by sum() on columns of table "virtual_conference_submission_bookmarks"
"""
input virtual_conference_submission_bookmarks_sum_order_by {
  submission_id: order_by
  user_id: order_by
}

"""
update columns of table "virtual_conference_submission_bookmarks"
"""
enum virtual_conference_submission_bookmarks_update_column {
  """column name"""
created_at
  """column name"""
id
  """column name"""
submission_id
  """column name"""
user_id
}

input virtual_conference_submission_bookmarks_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_submission_bookmarks_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_submission_bookmarks_set_input
  where: virtual_conference_submission_bookmarks_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_submission_bookmarks_var_pop_fields {
   submission_id: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_submission_bookmarks"
"""
input virtual_conference_submission_bookmarks_var_pop_order_by {
  submission_id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_submission_bookmarks_var_samp_fields {
   submission_id: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_submission_bookmarks"
"""
input virtual_conference_submission_bookmarks_var_samp_order_by {
  submission_id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_submission_bookmarks_variance_fields {
   submission_id: Float
   user_id: Float
}

"""
order by variance() on columns of table "virtual_conference_submission_bookmarks"
"""
input virtual_conference_submission_bookmarks_variance_order_by {
  submission_id: order_by
  user_id: order_by
}

"""
columns and relationships of "virtual_conference_submission_views"
"""
type virtual_conference_submission_views {
   anon_user_id: String
   created_at: timestamptz! 
   id: Int! 
  """An array relationship"""
 program_submission("""distinct select on columns"""
distinct_on: [ordered_program_submissions_by_title_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_submissions_by_title_order_by! ], """filter the rows returned"""
where: ordered_program_submissions_by_title_bool_exp): [ordered_program_submissions_by_title! ]! 
  """An aggregate relationship"""
 program_submission_aggregate("""distinct select on columns"""
distinct_on: [ordered_program_submissions_by_title_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_submissions_by_title_order_by! ], """filter the rows returned"""
where: ordered_program_submissions_by_title_bool_exp): ordered_program_submissions_by_title_aggregate! 
   public_status: String
  """An object relationship"""
 submission: submissions
   submission_id: Int! 
   user_id: Int! 
}

"""
aggregated selection of "virtual_conference_submission_views"
"""
type virtual_conference_submission_views_aggregate {
   aggregate: virtual_conference_submission_views_aggregate_fields
   nodes: [virtual_conference_submission_views! ]! 
}

input virtual_conference_submission_views_aggregate_bool_exp {
  count: virtual_conference_submission_views_aggregate_bool_exp_count
}

input virtual_conference_submission_views_aggregate_bool_exp_count {
  arguments: [virtual_conference_submission_views_select_column! ]
  distinct: Boolean
  filter: virtual_conference_submission_views_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_submission_views"
"""
type virtual_conference_submission_views_aggregate_fields {
   avg: virtual_conference_submission_views_avg_fields
   count(columns: [virtual_conference_submission_views_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_submission_views_max_fields
   min: virtual_conference_submission_views_min_fields
   stddev: virtual_conference_submission_views_stddev_fields
   stddev_pop: virtual_conference_submission_views_stddev_pop_fields
   stddev_samp: virtual_conference_submission_views_stddev_samp_fields
   sum: virtual_conference_submission_views_sum_fields
   var_pop: virtual_conference_submission_views_var_pop_fields
   var_samp: virtual_conference_submission_views_var_samp_fields
   variance: virtual_conference_submission_views_variance_fields
}

"""
order by aggregate values of table "virtual_conference_submission_views"
"""
input virtual_conference_submission_views_aggregate_order_by {
  avg: virtual_conference_submission_views_avg_order_by
  count: order_by
  max: virtual_conference_submission_views_max_order_by
  min: virtual_conference_submission_views_min_order_by
  stddev: virtual_conference_submission_views_stddev_order_by
  stddev_pop: virtual_conference_submission_views_stddev_pop_order_by
  stddev_samp: virtual_conference_submission_views_stddev_samp_order_by
  sum: virtual_conference_submission_views_sum_order_by
  var_pop: virtual_conference_submission_views_var_pop_order_by
  var_samp: virtual_conference_submission_views_var_samp_order_by
  variance: virtual_conference_submission_views_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_submission_views"
"""
input virtual_conference_submission_views_arr_rel_insert_input {
  data: [virtual_conference_submission_views_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_submission_views_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_submission_views_avg_fields {
   id: Float
   submission_id: Float
   user_id: Float
}

"""
order by avg() on columns of table "virtual_conference_submission_views"
"""
input virtual_conference_submission_views_avg_order_by {
  id: order_by
  submission_id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_submission_views". All fields are combined with a logical 'AND'.
"""
input virtual_conference_submission_views_bool_exp {
  _and: [virtual_conference_submission_views_bool_exp! ]
  _not: virtual_conference_submission_views_bool_exp
  _or: [virtual_conference_submission_views_bool_exp! ]
  anon_user_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  id: Int_comparison_exp
  program_submission: ordered_program_submissions_by_title_bool_exp
  program_submission_aggregate: ordered_program_submissions_by_title_aggregate_bool_exp
  public_status: String_comparison_exp
  submission: submissions_bool_exp
  submission_id: Int_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_submission_views"
"""
enum virtual_conference_submission_views_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_submission_views_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_submission_views"
"""
input virtual_conference_submission_views_inc_input {
  id: Int
  submission_id: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_submission_views"
"""
input virtual_conference_submission_views_insert_input {
  anon_user_id: String
  created_at: timestamptz! 
  id: Int! 
  program_submission: ordered_program_submissions_by_title_arr_rel_insert_input
  public_status: String
  submission: submissions_obj_rel_insert_input
  submission_id: Int! 
  user_id: Int! 
}

"""aggregate max on columns"""
type virtual_conference_submission_views_max_fields {
   anon_user_id: String
   created_at: timestamptz
   id: Int
   public_status: String
   submission_id: Int
   user_id: Int
}

"""
order by max() on columns of table "virtual_conference_submission_views"
"""
input virtual_conference_submission_views_max_order_by {
  anon_user_id: order_by
  created_at: order_by
  id: order_by
  public_status: order_by
  submission_id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type virtual_conference_submission_views_min_fields {
   anon_user_id: String
   created_at: timestamptz
   id: Int
   public_status: String
   submission_id: Int
   user_id: Int
}

"""
order by min() on columns of table "virtual_conference_submission_views"
"""
input virtual_conference_submission_views_min_order_by {
  anon_user_id: order_by
  created_at: order_by
  id: order_by
  public_status: order_by
  submission_id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "virtual_conference_submission_views"
"""
type virtual_conference_submission_views_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_submission_views! ]! 
}

"""
input type for inserting object relation for remote table "virtual_conference_submission_views"
"""
input virtual_conference_submission_views_obj_rel_insert_input {
  data: virtual_conference_submission_views_insert_input! 
  """upsert condition"""
on_conflict: virtual_conference_submission_views_on_conflict
}

"""
on_conflict condition type for table "virtual_conference_submission_views"
"""
input virtual_conference_submission_views_on_conflict {
  constraint: virtual_conference_submission_views_constraint! 
  update_columns: [virtual_conference_submission_views_update_column! ]! 
  where: virtual_conference_submission_views_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_submission_views".
"""
input virtual_conference_submission_views_order_by {
  anon_user_id: order_by
  created_at: order_by
  id: order_by
  program_submission_aggregate: ordered_program_submissions_by_title_aggregate_order_by
  public_status: order_by
  submission: submissions_order_by
  submission_id: order_by
  user_id: order_by
}

"""
primary key columns input for table: virtual_conference_submission_views
"""
input virtual_conference_submission_views_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_submission_views"
"""
enum virtual_conference_submission_views_select_column {
  """column name"""
anon_user_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
public_status
  """column name"""
submission_id
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_submission_views"
"""
input virtual_conference_submission_views_set_input {
  anon_user_id: String
  created_at: timestamptz
  id: Int
  public_status: String
  submission_id: Int
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_submission_views_stddev_fields {
   id: Float
   submission_id: Float
   user_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_submission_views"
"""
input virtual_conference_submission_views_stddev_order_by {
  id: order_by
  submission_id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_submission_views_stddev_pop_fields {
   id: Float
   submission_id: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_submission_views"
"""
input virtual_conference_submission_views_stddev_pop_order_by {
  id: order_by
  submission_id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_submission_views_stddev_samp_fields {
   id: Float
   submission_id: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_submission_views"
"""
input virtual_conference_submission_views_stddev_samp_order_by {
  id: order_by
  submission_id: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_submission_views"
"""
input virtual_conference_submission_views_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_submission_views_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_submission_views_stream_cursor_value_input {
  anon_user_id: String
  created_at: timestamptz
  id: Int
  public_status: String
  submission_id: Int
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_submission_views_sum_fields {
   id: Int
   submission_id: Int
   user_id: Int
}

"""
order by sum() on columns of table "virtual_conference_submission_views"
"""
input virtual_conference_submission_views_sum_order_by {
  id: order_by
  submission_id: order_by
  user_id: order_by
}

"""
update columns of table "virtual_conference_submission_views"
"""
enum virtual_conference_submission_views_update_column {
  """column name"""
anon_user_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
public_status
  """column name"""
submission_id
  """column name"""
user_id
}

input virtual_conference_submission_views_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_submission_views_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_submission_views_set_input
  where: virtual_conference_submission_views_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_submission_views_var_pop_fields {
   id: Float
   submission_id: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_submission_views"
"""
input virtual_conference_submission_views_var_pop_order_by {
  id: order_by
  submission_id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_submission_views_var_samp_fields {
   id: Float
   submission_id: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_submission_views"
"""
input virtual_conference_submission_views_var_samp_order_by {
  id: order_by
  submission_id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_submission_views_variance_fields {
   id: Float
   submission_id: Float
   user_id: Float
}

"""
order by variance() on columns of table "virtual_conference_submission_views"
"""
input virtual_conference_submission_views_variance_order_by {
  id: order_by
  submission_id: order_by
  user_id: order_by
}

"""
columns and relationships of "virtual_conference_symposium_views"
"""
type virtual_conference_symposium_views {
   anon_user_id: String
   created_at: timestamptz! 
   id: Int! 
  """An array relationship"""
 program_symposium("""distinct select on columns"""
distinct_on: [ordered_program_symposia_by_title_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_symposia_by_title_order_by! ], """filter the rows returned"""
where: ordered_program_symposia_by_title_bool_exp): [ordered_program_symposia_by_title! ]! 
  """An aggregate relationship"""
 program_symposium_aggregate("""distinct select on columns"""
distinct_on: [ordered_program_symposia_by_title_select_column! ], """limit the number of rows returned"""
limit: Int, """skip the first n rows. Use only with order_by"""
offset: Int, """sort the rows by one or more columns"""
order_by: [ordered_program_symposia_by_title_order_by! ], """filter the rows returned"""
where: ordered_program_symposia_by_title_bool_exp): ordered_program_symposia_by_title_aggregate! 
   public_status: String
   symposium_id: Int! 
   user_id: Int! 
}

"""
aggregated selection of "virtual_conference_symposium_views"
"""
type virtual_conference_symposium_views_aggregate {
   aggregate: virtual_conference_symposium_views_aggregate_fields
   nodes: [virtual_conference_symposium_views! ]! 
}

input virtual_conference_symposium_views_aggregate_bool_exp {
  count: virtual_conference_symposium_views_aggregate_bool_exp_count
}

input virtual_conference_symposium_views_aggregate_bool_exp_count {
  arguments: [virtual_conference_symposium_views_select_column! ]
  distinct: Boolean
  filter: virtual_conference_symposium_views_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_symposium_views"
"""
type virtual_conference_symposium_views_aggregate_fields {
   avg: virtual_conference_symposium_views_avg_fields
   count(columns: [virtual_conference_symposium_views_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_symposium_views_max_fields
   min: virtual_conference_symposium_views_min_fields
   stddev: virtual_conference_symposium_views_stddev_fields
   stddev_pop: virtual_conference_symposium_views_stddev_pop_fields
   stddev_samp: virtual_conference_symposium_views_stddev_samp_fields
   sum: virtual_conference_symposium_views_sum_fields
   var_pop: virtual_conference_symposium_views_var_pop_fields
   var_samp: virtual_conference_symposium_views_var_samp_fields
   variance: virtual_conference_symposium_views_variance_fields
}

"""
order by aggregate values of table "virtual_conference_symposium_views"
"""
input virtual_conference_symposium_views_aggregate_order_by {
  avg: virtual_conference_symposium_views_avg_order_by
  count: order_by
  max: virtual_conference_symposium_views_max_order_by
  min: virtual_conference_symposium_views_min_order_by
  stddev: virtual_conference_symposium_views_stddev_order_by
  stddev_pop: virtual_conference_symposium_views_stddev_pop_order_by
  stddev_samp: virtual_conference_symposium_views_stddev_samp_order_by
  sum: virtual_conference_symposium_views_sum_order_by
  var_pop: virtual_conference_symposium_views_var_pop_order_by
  var_samp: virtual_conference_symposium_views_var_samp_order_by
  variance: virtual_conference_symposium_views_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_symposium_views"
"""
input virtual_conference_symposium_views_arr_rel_insert_input {
  data: [virtual_conference_symposium_views_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_symposium_views_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_symposium_views_avg_fields {
   id: Float
   symposium_id: Float
   user_id: Float
}

"""
order by avg() on columns of table "virtual_conference_symposium_views"
"""
input virtual_conference_symposium_views_avg_order_by {
  id: order_by
  symposium_id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_symposium_views". All fields are combined with a logical 'AND'.
"""
input virtual_conference_symposium_views_bool_exp {
  _and: [virtual_conference_symposium_views_bool_exp! ]
  _not: virtual_conference_symposium_views_bool_exp
  _or: [virtual_conference_symposium_views_bool_exp! ]
  anon_user_id: String_comparison_exp
  created_at: timestamptz_comparison_exp
  id: Int_comparison_exp
  program_symposium: ordered_program_symposia_by_title_bool_exp
  program_symposium_aggregate: ordered_program_symposia_by_title_aggregate_bool_exp
  public_status: String_comparison_exp
  symposium_id: Int_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_symposium_views"
"""
enum virtual_conference_symposium_views_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_symposium_views_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_symposium_views"
"""
input virtual_conference_symposium_views_inc_input {
  id: Int
  symposium_id: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_symposium_views"
"""
input virtual_conference_symposium_views_insert_input {
  anon_user_id: String
  created_at: timestamptz! 
  id: Int! 
  program_symposium: ordered_program_symposia_by_title_arr_rel_insert_input
  public_status: String
  symposium_id: Int! 
  user_id: Int! 
}

"""aggregate max on columns"""
type virtual_conference_symposium_views_max_fields {
   anon_user_id: String
   created_at: timestamptz
   id: Int
   public_status: String
   symposium_id: Int
   user_id: Int
}

"""
order by max() on columns of table "virtual_conference_symposium_views"
"""
input virtual_conference_symposium_views_max_order_by {
  anon_user_id: order_by
  created_at: order_by
  id: order_by
  public_status: order_by
  symposium_id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type virtual_conference_symposium_views_min_fields {
   anon_user_id: String
   created_at: timestamptz
   id: Int
   public_status: String
   symposium_id: Int
   user_id: Int
}

"""
order by min() on columns of table "virtual_conference_symposium_views"
"""
input virtual_conference_symposium_views_min_order_by {
  anon_user_id: order_by
  created_at: order_by
  id: order_by
  public_status: order_by
  symposium_id: order_by
  user_id: order_by
}

"""
response of any mutation on the table "virtual_conference_symposium_views"
"""
type virtual_conference_symposium_views_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_symposium_views! ]! 
}

"""
on_conflict condition type for table "virtual_conference_symposium_views"
"""
input virtual_conference_symposium_views_on_conflict {
  constraint: virtual_conference_symposium_views_constraint! 
  update_columns: [virtual_conference_symposium_views_update_column! ]! 
  where: virtual_conference_symposium_views_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_symposium_views".
"""
input virtual_conference_symposium_views_order_by {
  anon_user_id: order_by
  created_at: order_by
  id: order_by
  program_symposium_aggregate: ordered_program_symposia_by_title_aggregate_order_by
  public_status: order_by
  symposium_id: order_by
  user_id: order_by
}

"""
primary key columns input for table: virtual_conference_symposium_views
"""
input virtual_conference_symposium_views_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_symposium_views"
"""
enum virtual_conference_symposium_views_select_column {
  """column name"""
anon_user_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
public_status
  """column name"""
symposium_id
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_symposium_views"
"""
input virtual_conference_symposium_views_set_input {
  anon_user_id: String
  created_at: timestamptz
  id: Int
  public_status: String
  symposium_id: Int
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_symposium_views_stddev_fields {
   id: Float
   symposium_id: Float
   user_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_symposium_views"
"""
input virtual_conference_symposium_views_stddev_order_by {
  id: order_by
  symposium_id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_symposium_views_stddev_pop_fields {
   id: Float
   symposium_id: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_symposium_views"
"""
input virtual_conference_symposium_views_stddev_pop_order_by {
  id: order_by
  symposium_id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_symposium_views_stddev_samp_fields {
   id: Float
   symposium_id: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_symposium_views"
"""
input virtual_conference_symposium_views_stddev_samp_order_by {
  id: order_by
  symposium_id: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_symposium_views"
"""
input virtual_conference_symposium_views_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_symposium_views_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_symposium_views_stream_cursor_value_input {
  anon_user_id: String
  created_at: timestamptz
  id: Int
  public_status: String
  symposium_id: Int
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_symposium_views_sum_fields {
   id: Int
   symposium_id: Int
   user_id: Int
}

"""
order by sum() on columns of table "virtual_conference_symposium_views"
"""
input virtual_conference_symposium_views_sum_order_by {
  id: order_by
  symposium_id: order_by
  user_id: order_by
}

"""
update columns of table "virtual_conference_symposium_views"
"""
enum virtual_conference_symposium_views_update_column {
  """column name"""
anon_user_id
  """column name"""
created_at
  """column name"""
id
  """column name"""
public_status
  """column name"""
symposium_id
  """column name"""
user_id
}

input virtual_conference_symposium_views_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_symposium_views_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_symposium_views_set_input
  where: virtual_conference_symposium_views_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_symposium_views_var_pop_fields {
   id: Float
   symposium_id: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_symposium_views"
"""
input virtual_conference_symposium_views_var_pop_order_by {
  id: order_by
  symposium_id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_symposium_views_var_samp_fields {
   id: Float
   symposium_id: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_symposium_views"
"""
input virtual_conference_symposium_views_var_samp_order_by {
  id: order_by
  symposium_id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_symposium_views_variance_fields {
   id: Float
   symposium_id: Float
   user_id: Float
}

"""
order by variance() on columns of table "virtual_conference_symposium_views"
"""
input virtual_conference_symposium_views_variance_order_by {
  id: order_by
  symposium_id: order_by
  user_id: order_by
}

"""
columns and relationships of "virtual_conference_top_submission_category_views"
"""
type virtual_conference_top_submission_category_views {
   category: String
   count: bigint
   event_id: Int
}

"""
aggregated selection of "virtual_conference_top_submission_category_views"
"""
type virtual_conference_top_submission_category_views_aggregate {
   aggregate: virtual_conference_top_submission_category_views_aggregate_fields
   nodes: [virtual_conference_top_submission_category_views! ]! 
}

"""
aggregate fields of "virtual_conference_top_submission_category_views"
"""
type virtual_conference_top_submission_category_views_aggregate_fields {
   avg: virtual_conference_top_submission_category_views_avg_fields
   count(columns: [virtual_conference_top_submission_category_views_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_top_submission_category_views_max_fields
   min: virtual_conference_top_submission_category_views_min_fields
   stddev: virtual_conference_top_submission_category_views_stddev_fields
   stddev_pop: virtual_conference_top_submission_category_views_stddev_pop_fields
   stddev_samp: virtual_conference_top_submission_category_views_stddev_samp_fields
   sum: virtual_conference_top_submission_category_views_sum_fields
   var_pop: virtual_conference_top_submission_category_views_var_pop_fields
   var_samp: virtual_conference_top_submission_category_views_var_samp_fields
   variance: virtual_conference_top_submission_category_views_variance_fields
}

"""aggregate avg on columns"""
type virtual_conference_top_submission_category_views_avg_fields {
   count: Float
   event_id: Float
}

"""
Boolean expression to filter rows from the table "virtual_conference_top_submission_category_views". All fields are combined with a logical 'AND'.
"""
input virtual_conference_top_submission_category_views_bool_exp {
  _and: [virtual_conference_top_submission_category_views_bool_exp! ]
  _not: virtual_conference_top_submission_category_views_bool_exp
  _or: [virtual_conference_top_submission_category_views_bool_exp! ]
  category: String_comparison_exp
  count: bigint_comparison_exp
  event_id: Int_comparison_exp
}

"""aggregate max on columns"""
type virtual_conference_top_submission_category_views_max_fields {
   category: String
   count: bigint
   event_id: Int
}

"""aggregate min on columns"""
type virtual_conference_top_submission_category_views_min_fields {
   category: String
   count: bigint
   event_id: Int
}

"""
Ordering options when selecting data from "virtual_conference_top_submission_category_views".
"""
input virtual_conference_top_submission_category_views_order_by {
  category: order_by
  count: order_by
  event_id: order_by
}

"""
select columns of table "virtual_conference_top_submission_category_views"
"""
enum virtual_conference_top_submission_category_views_select_column {
  """column name"""
category
  """column name"""
count
  """column name"""
event_id
}

"""aggregate stddev on columns"""
type virtual_conference_top_submission_category_views_stddev_fields {
   count: Float
   event_id: Float
}

"""aggregate stddev_pop on columns"""
type virtual_conference_top_submission_category_views_stddev_pop_fields {
   count: Float
   event_id: Float
}

"""aggregate stddev_samp on columns"""
type virtual_conference_top_submission_category_views_stddev_samp_fields {
   count: Float
   event_id: Float
}

"""
Streaming cursor of the table "virtual_conference_top_submission_category_views"
"""
input virtual_conference_top_submission_category_views_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_top_submission_category_views_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_top_submission_category_views_stream_cursor_value_input {
  category: String
  count: bigint
  event_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_top_submission_category_views_sum_fields {
   count: bigint
   event_id: Int
}

"""aggregate var_pop on columns"""
type virtual_conference_top_submission_category_views_var_pop_fields {
   count: Float
   event_id: Float
}

"""aggregate var_samp on columns"""
type virtual_conference_top_submission_category_views_var_samp_fields {
   count: Float
   event_id: Float
}

"""aggregate variance on columns"""
type virtual_conference_top_submission_category_views_variance_fields {
   count: Float
   event_id: Float
}

"""
columns and relationships of "virtual_conference_top_ten_sessions_by_bookmarks"
"""
type virtual_conference_top_ten_sessions_by_bookmarks {
   bookmarks: bigint
   event_id: Int
  """An object relationship"""
 program_session: program_sessions
   program_session_id: Int
}

"""
aggregated selection of "virtual_conference_top_ten_sessions_by_bookmarks"
"""
type virtual_conference_top_ten_sessions_by_bookmarks_aggregate {
   aggregate: virtual_conference_top_ten_sessions_by_bookmarks_aggregate_fields
   nodes: [virtual_conference_top_ten_sessions_by_bookmarks! ]! 
}

"""
aggregate fields of "virtual_conference_top_ten_sessions_by_bookmarks"
"""
type virtual_conference_top_ten_sessions_by_bookmarks_aggregate_fields {
   avg: virtual_conference_top_ten_sessions_by_bookmarks_avg_fields
   count(columns: [virtual_conference_top_ten_sessions_by_bookmarks_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_top_ten_sessions_by_bookmarks_max_fields
   min: virtual_conference_top_ten_sessions_by_bookmarks_min_fields
   stddev: virtual_conference_top_ten_sessions_by_bookmarks_stddev_fields
   stddev_pop: virtual_conference_top_ten_sessions_by_bookmarks_stddev_pop_fields
   stddev_samp: virtual_conference_top_ten_sessions_by_bookmarks_stddev_samp_fields
   sum: virtual_conference_top_ten_sessions_by_bookmarks_sum_fields
   var_pop: virtual_conference_top_ten_sessions_by_bookmarks_var_pop_fields
   var_samp: virtual_conference_top_ten_sessions_by_bookmarks_var_samp_fields
   variance: virtual_conference_top_ten_sessions_by_bookmarks_variance_fields
}

"""aggregate avg on columns"""
type virtual_conference_top_ten_sessions_by_bookmarks_avg_fields {
   bookmarks: Float
   event_id: Float
   program_session_id: Float
}

"""
Boolean expression to filter rows from the table "virtual_conference_top_ten_sessions_by_bookmarks". All fields are combined with a logical 'AND'.
"""
input virtual_conference_top_ten_sessions_by_bookmarks_bool_exp {
  _and: [virtual_conference_top_ten_sessions_by_bookmarks_bool_exp! ]
  _not: virtual_conference_top_ten_sessions_by_bookmarks_bool_exp
  _or: [virtual_conference_top_ten_sessions_by_bookmarks_bool_exp! ]
  bookmarks: bigint_comparison_exp
  event_id: Int_comparison_exp
  program_session: program_sessions_bool_exp
  program_session_id: Int_comparison_exp
}

"""aggregate max on columns"""
type virtual_conference_top_ten_sessions_by_bookmarks_max_fields {
   bookmarks: bigint
   event_id: Int
   program_session_id: Int
}

"""aggregate min on columns"""
type virtual_conference_top_ten_sessions_by_bookmarks_min_fields {
   bookmarks: bigint
   event_id: Int
   program_session_id: Int
}

"""
Ordering options when selecting data from "virtual_conference_top_ten_sessions_by_bookmarks".
"""
input virtual_conference_top_ten_sessions_by_bookmarks_order_by {
  bookmarks: order_by
  event_id: order_by
  program_session: program_sessions_order_by
  program_session_id: order_by
}

"""
select columns of table "virtual_conference_top_ten_sessions_by_bookmarks"
"""
enum virtual_conference_top_ten_sessions_by_bookmarks_select_column {
  """column name"""
bookmarks
  """column name"""
event_id
  """column name"""
program_session_id
}

"""aggregate stddev on columns"""
type virtual_conference_top_ten_sessions_by_bookmarks_stddev_fields {
   bookmarks: Float
   event_id: Float
   program_session_id: Float
}

"""aggregate stddev_pop on columns"""
type virtual_conference_top_ten_sessions_by_bookmarks_stddev_pop_fields {
   bookmarks: Float
   event_id: Float
   program_session_id: Float
}

"""aggregate stddev_samp on columns"""
type virtual_conference_top_ten_sessions_by_bookmarks_stddev_samp_fields {
   bookmarks: Float
   event_id: Float
   program_session_id: Float
}

"""
Streaming cursor of the table "virtual_conference_top_ten_sessions_by_bookmarks"
"""
input virtual_conference_top_ten_sessions_by_bookmarks_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_top_ten_sessions_by_bookmarks_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_top_ten_sessions_by_bookmarks_stream_cursor_value_input {
  bookmarks: bigint
  event_id: Int
  program_session_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_top_ten_sessions_by_bookmarks_sum_fields {
   bookmarks: bigint
   event_id: Int
   program_session_id: Int
}

"""aggregate var_pop on columns"""
type virtual_conference_top_ten_sessions_by_bookmarks_var_pop_fields {
   bookmarks: Float
   event_id: Float
   program_session_id: Float
}

"""aggregate var_samp on columns"""
type virtual_conference_top_ten_sessions_by_bookmarks_var_samp_fields {
   bookmarks: Float
   event_id: Float
   program_session_id: Float
}

"""aggregate variance on columns"""
type virtual_conference_top_ten_sessions_by_bookmarks_variance_fields {
   bookmarks: Float
   event_id: Float
   program_session_id: Float
}

"""
columns and relationships of "virtual_conference_top_ten_sessions_by_views"
"""
type virtual_conference_top_ten_sessions_by_views {
   event_id: Int
  """An object relationship"""
 program_session: program_sessions
   program_session_id: Int
   views: bigint
}

"""
aggregated selection of "virtual_conference_top_ten_sessions_by_views"
"""
type virtual_conference_top_ten_sessions_by_views_aggregate {
   aggregate: virtual_conference_top_ten_sessions_by_views_aggregate_fields
   nodes: [virtual_conference_top_ten_sessions_by_views! ]! 
}

"""
aggregate fields of "virtual_conference_top_ten_sessions_by_views"
"""
type virtual_conference_top_ten_sessions_by_views_aggregate_fields {
   avg: virtual_conference_top_ten_sessions_by_views_avg_fields
   count(columns: [virtual_conference_top_ten_sessions_by_views_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_top_ten_sessions_by_views_max_fields
   min: virtual_conference_top_ten_sessions_by_views_min_fields
   stddev: virtual_conference_top_ten_sessions_by_views_stddev_fields
   stddev_pop: virtual_conference_top_ten_sessions_by_views_stddev_pop_fields
   stddev_samp: virtual_conference_top_ten_sessions_by_views_stddev_samp_fields
   sum: virtual_conference_top_ten_sessions_by_views_sum_fields
   var_pop: virtual_conference_top_ten_sessions_by_views_var_pop_fields
   var_samp: virtual_conference_top_ten_sessions_by_views_var_samp_fields
   variance: virtual_conference_top_ten_sessions_by_views_variance_fields
}

"""aggregate avg on columns"""
type virtual_conference_top_ten_sessions_by_views_avg_fields {
   event_id: Float
   program_session_id: Float
   views: Float
}

"""
Boolean expression to filter rows from the table "virtual_conference_top_ten_sessions_by_views". All fields are combined with a logical 'AND'.
"""
input virtual_conference_top_ten_sessions_by_views_bool_exp {
  _and: [virtual_conference_top_ten_sessions_by_views_bool_exp! ]
  _not: virtual_conference_top_ten_sessions_by_views_bool_exp
  _or: [virtual_conference_top_ten_sessions_by_views_bool_exp! ]
  event_id: Int_comparison_exp
  program_session: program_sessions_bool_exp
  program_session_id: Int_comparison_exp
  views: bigint_comparison_exp
}

"""aggregate max on columns"""
type virtual_conference_top_ten_sessions_by_views_max_fields {
   event_id: Int
   program_session_id: Int
   views: bigint
}

"""aggregate min on columns"""
type virtual_conference_top_ten_sessions_by_views_min_fields {
   event_id: Int
   program_session_id: Int
   views: bigint
}

"""
Ordering options when selecting data from "virtual_conference_top_ten_sessions_by_views".
"""
input virtual_conference_top_ten_sessions_by_views_order_by {
  event_id: order_by
  program_session: program_sessions_order_by
  program_session_id: order_by
  views: order_by
}

"""
select columns of table "virtual_conference_top_ten_sessions_by_views"
"""
enum virtual_conference_top_ten_sessions_by_views_select_column {
  """column name"""
event_id
  """column name"""
program_session_id
  """column name"""
views
}

"""aggregate stddev on columns"""
type virtual_conference_top_ten_sessions_by_views_stddev_fields {
   event_id: Float
   program_session_id: Float
   views: Float
}

"""aggregate stddev_pop on columns"""
type virtual_conference_top_ten_sessions_by_views_stddev_pop_fields {
   event_id: Float
   program_session_id: Float
   views: Float
}

"""aggregate stddev_samp on columns"""
type virtual_conference_top_ten_sessions_by_views_stddev_samp_fields {
   event_id: Float
   program_session_id: Float
   views: Float
}

"""
Streaming cursor of the table "virtual_conference_top_ten_sessions_by_views"
"""
input virtual_conference_top_ten_sessions_by_views_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_top_ten_sessions_by_views_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_top_ten_sessions_by_views_stream_cursor_value_input {
  event_id: Int
  program_session_id: Int
  views: bigint
}

"""aggregate sum on columns"""
type virtual_conference_top_ten_sessions_by_views_sum_fields {
   event_id: Int
   program_session_id: Int
   views: bigint
}

"""aggregate var_pop on columns"""
type virtual_conference_top_ten_sessions_by_views_var_pop_fields {
   event_id: Float
   program_session_id: Float
   views: Float
}

"""aggregate var_samp on columns"""
type virtual_conference_top_ten_sessions_by_views_var_samp_fields {
   event_id: Float
   program_session_id: Float
   views: Float
}

"""aggregate variance on columns"""
type virtual_conference_top_ten_sessions_by_views_variance_fields {
   event_id: Float
   program_session_id: Float
   views: Float
}

"""
columns and relationships of "virtual_conference_top_ten_submissions"
"""
type virtual_conference_top_ten_submissions {
   event_id: Int
   submission_id: Int
   views: bigint
}

"""
aggregated selection of "virtual_conference_top_ten_submissions"
"""
type virtual_conference_top_ten_submissions_aggregate {
   aggregate: virtual_conference_top_ten_submissions_aggregate_fields
   nodes: [virtual_conference_top_ten_submissions! ]! 
}

"""
aggregate fields of "virtual_conference_top_ten_submissions"
"""
type virtual_conference_top_ten_submissions_aggregate_fields {
   avg: virtual_conference_top_ten_submissions_avg_fields
   count(columns: [virtual_conference_top_ten_submissions_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_top_ten_submissions_max_fields
   min: virtual_conference_top_ten_submissions_min_fields
   stddev: virtual_conference_top_ten_submissions_stddev_fields
   stddev_pop: virtual_conference_top_ten_submissions_stddev_pop_fields
   stddev_samp: virtual_conference_top_ten_submissions_stddev_samp_fields
   sum: virtual_conference_top_ten_submissions_sum_fields
   var_pop: virtual_conference_top_ten_submissions_var_pop_fields
   var_samp: virtual_conference_top_ten_submissions_var_samp_fields
   variance: virtual_conference_top_ten_submissions_variance_fields
}

"""aggregate avg on columns"""
type virtual_conference_top_ten_submissions_avg_fields {
   event_id: Float
   submission_id: Float
   views: Float
}

"""
Boolean expression to filter rows from the table "virtual_conference_top_ten_submissions". All fields are combined with a logical 'AND'.
"""
input virtual_conference_top_ten_submissions_bool_exp {
  _and: [virtual_conference_top_ten_submissions_bool_exp! ]
  _not: virtual_conference_top_ten_submissions_bool_exp
  _or: [virtual_conference_top_ten_submissions_bool_exp! ]
  event_id: Int_comparison_exp
  submission_id: Int_comparison_exp
  views: bigint_comparison_exp
}

"""
columns and relationships of "virtual_conference_top_ten_submissions_by_bookmarks"
"""
type virtual_conference_top_ten_submissions_by_bookmarks {
   event_id: Int
   submission_id: Int
   views: bigint
}

"""
aggregated selection of "virtual_conference_top_ten_submissions_by_bookmarks"
"""
type virtual_conference_top_ten_submissions_by_bookmarks_aggregate {
   aggregate: virtual_conference_top_ten_submissions_by_bookmarks_aggregate_fields
   nodes: [virtual_conference_top_ten_submissions_by_bookmarks! ]! 
}

"""
aggregate fields of "virtual_conference_top_ten_submissions_by_bookmarks"
"""
type virtual_conference_top_ten_submissions_by_bookmarks_aggregate_fields {
   avg: virtual_conference_top_ten_submissions_by_bookmarks_avg_fields
   count(columns: [virtual_conference_top_ten_submissions_by_bookmarks_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_top_ten_submissions_by_bookmarks_max_fields
   min: virtual_conference_top_ten_submissions_by_bookmarks_min_fields
   stddev: virtual_conference_top_ten_submissions_by_bookmarks_stddev_fields
   stddev_pop: virtual_conference_top_ten_submissions_by_bookmarks_stddev_pop_fields
   stddev_samp: virtual_conference_top_ten_submissions_by_bookmarks_stddev_samp_fields
   sum: virtual_conference_top_ten_submissions_by_bookmarks_sum_fields
   var_pop: virtual_conference_top_ten_submissions_by_bookmarks_var_pop_fields
   var_samp: virtual_conference_top_ten_submissions_by_bookmarks_var_samp_fields
   variance: virtual_conference_top_ten_submissions_by_bookmarks_variance_fields
}

"""aggregate avg on columns"""
type virtual_conference_top_ten_submissions_by_bookmarks_avg_fields {
   event_id: Float
   submission_id: Float
   views: Float
}

"""
Boolean expression to filter rows from the table "virtual_conference_top_ten_submissions_by_bookmarks". All fields are combined with a logical 'AND'.
"""
input virtual_conference_top_ten_submissions_by_bookmarks_bool_exp {
  _and: [virtual_conference_top_ten_submissions_by_bookmarks_bool_exp! ]
  _not: virtual_conference_top_ten_submissions_by_bookmarks_bool_exp
  _or: [virtual_conference_top_ten_submissions_by_bookmarks_bool_exp! ]
  event_id: Int_comparison_exp
  submission_id: Int_comparison_exp
  views: bigint_comparison_exp
}

"""aggregate max on columns"""
type virtual_conference_top_ten_submissions_by_bookmarks_max_fields {
   event_id: Int
   submission_id: Int
   views: bigint
}

"""aggregate min on columns"""
type virtual_conference_top_ten_submissions_by_bookmarks_min_fields {
   event_id: Int
   submission_id: Int
   views: bigint
}

"""
Ordering options when selecting data from "virtual_conference_top_ten_submissions_by_bookmarks".
"""
input virtual_conference_top_ten_submissions_by_bookmarks_order_by {
  event_id: order_by
  submission_id: order_by
  views: order_by
}

"""
select columns of table "virtual_conference_top_ten_submissions_by_bookmarks"
"""
enum virtual_conference_top_ten_submissions_by_bookmarks_select_column {
  """column name"""
event_id
  """column name"""
submission_id
  """column name"""
views
}

"""aggregate stddev on columns"""
type virtual_conference_top_ten_submissions_by_bookmarks_stddev_fields {
   event_id: Float
   submission_id: Float
   views: Float
}

"""aggregate stddev_pop on columns"""
type virtual_conference_top_ten_submissions_by_bookmarks_stddev_pop_fields {
   event_id: Float
   submission_id: Float
   views: Float
}

"""aggregate stddev_samp on columns"""
type virtual_conference_top_ten_submissions_by_bookmarks_stddev_samp_fields {
   event_id: Float
   submission_id: Float
   views: Float
}

"""
Streaming cursor of the table "virtual_conference_top_ten_submissions_by_bookmarks"
"""
input virtual_conference_top_ten_submissions_by_bookmarks_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_top_ten_submissions_by_bookmarks_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_top_ten_submissions_by_bookmarks_stream_cursor_value_input {
  event_id: Int
  submission_id: Int
  views: bigint
}

"""aggregate sum on columns"""
type virtual_conference_top_ten_submissions_by_bookmarks_sum_fields {
   event_id: Int
   submission_id: Int
   views: bigint
}

"""aggregate var_pop on columns"""
type virtual_conference_top_ten_submissions_by_bookmarks_var_pop_fields {
   event_id: Float
   submission_id: Float
   views: Float
}

"""aggregate var_samp on columns"""
type virtual_conference_top_ten_submissions_by_bookmarks_var_samp_fields {
   event_id: Float
   submission_id: Float
   views: Float
}

"""aggregate variance on columns"""
type virtual_conference_top_ten_submissions_by_bookmarks_variance_fields {
   event_id: Float
   submission_id: Float
   views: Float
}

"""aggregate max on columns"""
type virtual_conference_top_ten_submissions_max_fields {
   event_id: Int
   submission_id: Int
   views: bigint
}

"""aggregate min on columns"""
type virtual_conference_top_ten_submissions_min_fields {
   event_id: Int
   submission_id: Int
   views: bigint
}

"""
Ordering options when selecting data from "virtual_conference_top_ten_submissions".
"""
input virtual_conference_top_ten_submissions_order_by {
  event_id: order_by
  submission_id: order_by
  views: order_by
}

"""
select columns of table "virtual_conference_top_ten_submissions"
"""
enum virtual_conference_top_ten_submissions_select_column {
  """column name"""
event_id
  """column name"""
submission_id
  """column name"""
views
}

"""aggregate stddev on columns"""
type virtual_conference_top_ten_submissions_stddev_fields {
   event_id: Float
   submission_id: Float
   views: Float
}

"""aggregate stddev_pop on columns"""
type virtual_conference_top_ten_submissions_stddev_pop_fields {
   event_id: Float
   submission_id: Float
   views: Float
}

"""aggregate stddev_samp on columns"""
type virtual_conference_top_ten_submissions_stddev_samp_fields {
   event_id: Float
   submission_id: Float
   views: Float
}

"""
Streaming cursor of the table "virtual_conference_top_ten_submissions"
"""
input virtual_conference_top_ten_submissions_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_top_ten_submissions_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_top_ten_submissions_stream_cursor_value_input {
  event_id: Int
  submission_id: Int
  views: bigint
}

"""aggregate sum on columns"""
type virtual_conference_top_ten_submissions_sum_fields {
   event_id: Int
   submission_id: Int
   views: bigint
}

"""aggregate var_pop on columns"""
type virtual_conference_top_ten_submissions_var_pop_fields {
   event_id: Float
   submission_id: Float
   views: Float
}

"""aggregate var_samp on columns"""
type virtual_conference_top_ten_submissions_var_samp_fields {
   event_id: Float
   submission_id: Float
   views: Float
}

"""aggregate variance on columns"""
type virtual_conference_top_ten_submissions_variance_fields {
   event_id: Float
   submission_id: Float
   views: Float
}

"""
columns and relationships of "virtual_conference_user_heartbeats"
"""
type virtual_conference_user_heartbeats {
  """An object relationship"""
 event: events! 
   event_id: Int! 
   id: Int! 
   online: Boolean! 
   updated_at: timestamptz! 
  """An object relationship"""
 user: users! 
   user_id: Int! 
}

"""
aggregated selection of "virtual_conference_user_heartbeats"
"""
type virtual_conference_user_heartbeats_aggregate {
   aggregate: virtual_conference_user_heartbeats_aggregate_fields
   nodes: [virtual_conference_user_heartbeats! ]! 
}

input virtual_conference_user_heartbeats_aggregate_bool_exp {
  bool_and: virtual_conference_user_heartbeats_aggregate_bool_exp_bool_and
  bool_or: virtual_conference_user_heartbeats_aggregate_bool_exp_bool_or
  count: virtual_conference_user_heartbeats_aggregate_bool_exp_count
}

input virtual_conference_user_heartbeats_aggregate_bool_exp_bool_and {
  arguments: virtual_conference_user_heartbeats_select_column_virtual_conference_user_heartbeats_aggregate_bool_exp_bool_and_arguments_columns! 
  distinct: Boolean
  filter: virtual_conference_user_heartbeats_bool_exp
  predicate: Boolean_comparison_exp! 
}

input virtual_conference_user_heartbeats_aggregate_bool_exp_bool_or {
  arguments: virtual_conference_user_heartbeats_select_column_virtual_conference_user_heartbeats_aggregate_bool_exp_bool_or_arguments_columns! 
  distinct: Boolean
  filter: virtual_conference_user_heartbeats_bool_exp
  predicate: Boolean_comparison_exp! 
}

input virtual_conference_user_heartbeats_aggregate_bool_exp_count {
  arguments: [virtual_conference_user_heartbeats_select_column! ]
  distinct: Boolean
  filter: virtual_conference_user_heartbeats_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_user_heartbeats"
"""
type virtual_conference_user_heartbeats_aggregate_fields {
   avg: virtual_conference_user_heartbeats_avg_fields
   count(columns: [virtual_conference_user_heartbeats_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_user_heartbeats_max_fields
   min: virtual_conference_user_heartbeats_min_fields
   stddev: virtual_conference_user_heartbeats_stddev_fields
   stddev_pop: virtual_conference_user_heartbeats_stddev_pop_fields
   stddev_samp: virtual_conference_user_heartbeats_stddev_samp_fields
   sum: virtual_conference_user_heartbeats_sum_fields
   var_pop: virtual_conference_user_heartbeats_var_pop_fields
   var_samp: virtual_conference_user_heartbeats_var_samp_fields
   variance: virtual_conference_user_heartbeats_variance_fields
}

"""
order by aggregate values of table "virtual_conference_user_heartbeats"
"""
input virtual_conference_user_heartbeats_aggregate_order_by {
  avg: virtual_conference_user_heartbeats_avg_order_by
  count: order_by
  max: virtual_conference_user_heartbeats_max_order_by
  min: virtual_conference_user_heartbeats_min_order_by
  stddev: virtual_conference_user_heartbeats_stddev_order_by
  stddev_pop: virtual_conference_user_heartbeats_stddev_pop_order_by
  stddev_samp: virtual_conference_user_heartbeats_stddev_samp_order_by
  sum: virtual_conference_user_heartbeats_sum_order_by
  var_pop: virtual_conference_user_heartbeats_var_pop_order_by
  var_samp: virtual_conference_user_heartbeats_var_samp_order_by
  variance: virtual_conference_user_heartbeats_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_user_heartbeats"
"""
input virtual_conference_user_heartbeats_arr_rel_insert_input {
  data: [virtual_conference_user_heartbeats_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_user_heartbeats_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_user_heartbeats_avg_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by avg() on columns of table "virtual_conference_user_heartbeats"
"""
input virtual_conference_user_heartbeats_avg_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_user_heartbeats". All fields are combined with a logical 'AND'.
"""
input virtual_conference_user_heartbeats_bool_exp {
  _and: [virtual_conference_user_heartbeats_bool_exp! ]
  _not: virtual_conference_user_heartbeats_bool_exp
  _or: [virtual_conference_user_heartbeats_bool_exp! ]
  event: events_bool_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  online: Boolean_comparison_exp
  updated_at: timestamptz_comparison_exp
  user: users_bool_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_user_heartbeats"
"""
enum virtual_conference_user_heartbeats_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_user_heartbeats_pkey
  """
  unique or primary key constraint on columns "event_id", "user_id"
  """
virtual_conference_user_heartbeats_user_id_event_id_key
}

"""
input type for incrementing numeric columns in table "virtual_conference_user_heartbeats"
"""
input virtual_conference_user_heartbeats_inc_input {
  event_id: Int
  id: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_user_heartbeats"
"""
input virtual_conference_user_heartbeats_insert_input {
  event: events_obj_rel_insert_input
  event_id: Int! 
  id: Int! 
  online: Boolean! 
  updated_at: timestamptz! 
  user: users_obj_rel_insert_input
  user_id: Int! 
}

"""aggregate max on columns"""
type virtual_conference_user_heartbeats_max_fields {
   event_id: Int
   id: Int
   updated_at: timestamptz
   user_id: Int
}

"""
order by max() on columns of table "virtual_conference_user_heartbeats"
"""
input virtual_conference_user_heartbeats_max_order_by {
  event_id: order_by
  id: order_by
  updated_at: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type virtual_conference_user_heartbeats_min_fields {
   event_id: Int
   id: Int
   updated_at: timestamptz
   user_id: Int
}

"""
order by min() on columns of table "virtual_conference_user_heartbeats"
"""
input virtual_conference_user_heartbeats_min_order_by {
  event_id: order_by
  id: order_by
  updated_at: order_by
  user_id: order_by
}

"""
response of any mutation on the table "virtual_conference_user_heartbeats"
"""
type virtual_conference_user_heartbeats_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_user_heartbeats! ]! 
}

"""
on_conflict condition type for table "virtual_conference_user_heartbeats"
"""
input virtual_conference_user_heartbeats_on_conflict {
  constraint: virtual_conference_user_heartbeats_constraint! 
  update_columns: [virtual_conference_user_heartbeats_update_column! ]! 
  where: virtual_conference_user_heartbeats_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_user_heartbeats".
"""
input virtual_conference_user_heartbeats_order_by {
  event: events_order_by
  event_id: order_by
  id: order_by
  online: order_by
  updated_at: order_by
  user: users_order_by
  user_id: order_by
}

"""
primary key columns input for table: virtual_conference_user_heartbeats
"""
input virtual_conference_user_heartbeats_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_user_heartbeats"
"""
enum virtual_conference_user_heartbeats_select_column {
  """column name"""
event_id
  """column name"""
id
  """column name"""
online
  """column name"""
updated_at
  """column name"""
user_id
}

"""
select "virtual_conference_user_heartbeats_aggregate_bool_exp_bool_and_arguments_columns" columns of table "virtual_conference_user_heartbeats"
"""
enum virtual_conference_user_heartbeats_select_column_virtual_conference_user_heartbeats_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
online
}

"""
select "virtual_conference_user_heartbeats_aggregate_bool_exp_bool_or_arguments_columns" columns of table "virtual_conference_user_heartbeats"
"""
enum virtual_conference_user_heartbeats_select_column_virtual_conference_user_heartbeats_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
online
}

"""
input type for updating data in table "virtual_conference_user_heartbeats"
"""
input virtual_conference_user_heartbeats_set_input {
  event_id: Int
  id: Int
  online: Boolean
  updated_at: timestamptz
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_user_heartbeats_stddev_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_user_heartbeats"
"""
input virtual_conference_user_heartbeats_stddev_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_user_heartbeats_stddev_pop_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_user_heartbeats"
"""
input virtual_conference_user_heartbeats_stddev_pop_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_user_heartbeats_stddev_samp_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_user_heartbeats"
"""
input virtual_conference_user_heartbeats_stddev_samp_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_user_heartbeats"
"""
input virtual_conference_user_heartbeats_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_user_heartbeats_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_user_heartbeats_stream_cursor_value_input {
  event_id: Int
  id: Int
  online: Boolean
  updated_at: timestamptz
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_user_heartbeats_sum_fields {
   event_id: Int
   id: Int
   user_id: Int
}

"""
order by sum() on columns of table "virtual_conference_user_heartbeats"
"""
input virtual_conference_user_heartbeats_sum_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""
update columns of table "virtual_conference_user_heartbeats"
"""
enum virtual_conference_user_heartbeats_update_column {
  """column name"""
event_id
  """column name"""
id
  """column name"""
online
  """column name"""
updated_at
  """column name"""
user_id
}

input virtual_conference_user_heartbeats_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_user_heartbeats_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_user_heartbeats_set_input
  where: virtual_conference_user_heartbeats_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_user_heartbeats_var_pop_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_user_heartbeats"
"""
input virtual_conference_user_heartbeats_var_pop_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_user_heartbeats_var_samp_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_user_heartbeats"
"""
input virtual_conference_user_heartbeats_var_samp_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_user_heartbeats_variance_fields {
   event_id: Float
   id: Float
   user_id: Float
}

"""
order by variance() on columns of table "virtual_conference_user_heartbeats"
"""
input virtual_conference_user_heartbeats_variance_order_by {
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""
columns and relationships of "virtual_conference_user_interests"
"""
type virtual_conference_user_interests {
   id: Int! 
   ordering: Int! 
  """An object relationship"""
 user: users! 
   user_id: Int! 
  """An object relationship"""
 virtual_conference_event_interest: virtual_conference_event_interests! 
   virtual_conference_event_interest_id: Int! 
}

"""
aggregated selection of "virtual_conference_user_interests"
"""
type virtual_conference_user_interests_aggregate {
   aggregate: virtual_conference_user_interests_aggregate_fields
   nodes: [virtual_conference_user_interests! ]! 
}

input virtual_conference_user_interests_aggregate_bool_exp {
  count: virtual_conference_user_interests_aggregate_bool_exp_count
}

input virtual_conference_user_interests_aggregate_bool_exp_count {
  arguments: [virtual_conference_user_interests_select_column! ]
  distinct: Boolean
  filter: virtual_conference_user_interests_bool_exp
  predicate: Int_comparison_exp! 
}

"""
aggregate fields of "virtual_conference_user_interests"
"""
type virtual_conference_user_interests_aggregate_fields {
   avg: virtual_conference_user_interests_avg_fields
   count(columns: [virtual_conference_user_interests_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_user_interests_max_fields
   min: virtual_conference_user_interests_min_fields
   stddev: virtual_conference_user_interests_stddev_fields
   stddev_pop: virtual_conference_user_interests_stddev_pop_fields
   stddev_samp: virtual_conference_user_interests_stddev_samp_fields
   sum: virtual_conference_user_interests_sum_fields
   var_pop: virtual_conference_user_interests_var_pop_fields
   var_samp: virtual_conference_user_interests_var_samp_fields
   variance: virtual_conference_user_interests_variance_fields
}

"""
order by aggregate values of table "virtual_conference_user_interests"
"""
input virtual_conference_user_interests_aggregate_order_by {
  avg: virtual_conference_user_interests_avg_order_by
  count: order_by
  max: virtual_conference_user_interests_max_order_by
  min: virtual_conference_user_interests_min_order_by
  stddev: virtual_conference_user_interests_stddev_order_by
  stddev_pop: virtual_conference_user_interests_stddev_pop_order_by
  stddev_samp: virtual_conference_user_interests_stddev_samp_order_by
  sum: virtual_conference_user_interests_sum_order_by
  var_pop: virtual_conference_user_interests_var_pop_order_by
  var_samp: virtual_conference_user_interests_var_samp_order_by
  variance: virtual_conference_user_interests_variance_order_by
}

"""
input type for inserting array relation for remote table "virtual_conference_user_interests"
"""
input virtual_conference_user_interests_arr_rel_insert_input {
  data: [virtual_conference_user_interests_insert_input! ]! 
  """upsert condition"""
on_conflict: virtual_conference_user_interests_on_conflict
}

"""aggregate avg on columns"""
type virtual_conference_user_interests_avg_fields {
   id: Float
   ordering: Float
   user_id: Float
   virtual_conference_event_interest_id: Float
}

"""
order by avg() on columns of table "virtual_conference_user_interests"
"""
input virtual_conference_user_interests_avg_order_by {
  id: order_by
  ordering: order_by
  user_id: order_by
  virtual_conference_event_interest_id: order_by
}

"""
Boolean expression to filter rows from the table "virtual_conference_user_interests". All fields are combined with a logical 'AND'.
"""
input virtual_conference_user_interests_bool_exp {
  _and: [virtual_conference_user_interests_bool_exp! ]
  _not: virtual_conference_user_interests_bool_exp
  _or: [virtual_conference_user_interests_bool_exp! ]
  id: Int_comparison_exp
  ordering: Int_comparison_exp
  user: users_bool_exp
  user_id: Int_comparison_exp
  virtual_conference_event_interest: virtual_conference_event_interests_bool_exp
  virtual_conference_event_interest_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_user_interests"
"""
enum virtual_conference_user_interests_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_user_interests_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_user_interests"
"""
input virtual_conference_user_interests_inc_input {
  id: Int
  ordering: Int
  user_id: Int
  virtual_conference_event_interest_id: Int
}

"""
input type for inserting data into table "virtual_conference_user_interests"
"""
input virtual_conference_user_interests_insert_input {
  id: Int! 
  ordering: Int! 
  user: users_obj_rel_insert_input
  user_id: Int! 
  virtual_conference_event_interest: virtual_conference_event_interests_obj_rel_insert_input
  virtual_conference_event_interest_id: Int! 
}

"""aggregate max on columns"""
type virtual_conference_user_interests_max_fields {
   id: Int
   ordering: Int
   user_id: Int
   virtual_conference_event_interest_id: Int
}

"""
order by max() on columns of table "virtual_conference_user_interests"
"""
input virtual_conference_user_interests_max_order_by {
  id: order_by
  ordering: order_by
  user_id: order_by
  virtual_conference_event_interest_id: order_by
}

"""aggregate min on columns"""
type virtual_conference_user_interests_min_fields {
   id: Int
   ordering: Int
   user_id: Int
   virtual_conference_event_interest_id: Int
}

"""
order by min() on columns of table "virtual_conference_user_interests"
"""
input virtual_conference_user_interests_min_order_by {
  id: order_by
  ordering: order_by
  user_id: order_by
  virtual_conference_event_interest_id: order_by
}

"""
response of any mutation on the table "virtual_conference_user_interests"
"""
type virtual_conference_user_interests_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_user_interests! ]! 
}

"""
on_conflict condition type for table "virtual_conference_user_interests"
"""
input virtual_conference_user_interests_on_conflict {
  constraint: virtual_conference_user_interests_constraint! 
  update_columns: [virtual_conference_user_interests_update_column! ]! 
  where: virtual_conference_user_interests_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_user_interests".
"""
input virtual_conference_user_interests_order_by {
  id: order_by
  ordering: order_by
  user: users_order_by
  user_id: order_by
  virtual_conference_event_interest: virtual_conference_event_interests_order_by
  virtual_conference_event_interest_id: order_by
}

"""primary key columns input for table: virtual_conference_user_interests"""
input virtual_conference_user_interests_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_user_interests"
"""
enum virtual_conference_user_interests_select_column {
  """column name"""
id
  """column name"""
ordering
  """column name"""
user_id
  """column name"""
virtual_conference_event_interest_id
}

"""
input type for updating data in table "virtual_conference_user_interests"
"""
input virtual_conference_user_interests_set_input {
  id: Int
  ordering: Int
  user_id: Int
  virtual_conference_event_interest_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_user_interests_stddev_fields {
   id: Float
   ordering: Float
   user_id: Float
   virtual_conference_event_interest_id: Float
}

"""
order by stddev() on columns of table "virtual_conference_user_interests"
"""
input virtual_conference_user_interests_stddev_order_by {
  id: order_by
  ordering: order_by
  user_id: order_by
  virtual_conference_event_interest_id: order_by
}

"""aggregate stddev_pop on columns"""
type virtual_conference_user_interests_stddev_pop_fields {
   id: Float
   ordering: Float
   user_id: Float
   virtual_conference_event_interest_id: Float
}

"""
order by stddev_pop() on columns of table "virtual_conference_user_interests"
"""
input virtual_conference_user_interests_stddev_pop_order_by {
  id: order_by
  ordering: order_by
  user_id: order_by
  virtual_conference_event_interest_id: order_by
}

"""aggregate stddev_samp on columns"""
type virtual_conference_user_interests_stddev_samp_fields {
   id: Float
   ordering: Float
   user_id: Float
   virtual_conference_event_interest_id: Float
}

"""
order by stddev_samp() on columns of table "virtual_conference_user_interests"
"""
input virtual_conference_user_interests_stddev_samp_order_by {
  id: order_by
  ordering: order_by
  user_id: order_by
  virtual_conference_event_interest_id: order_by
}

"""
Streaming cursor of the table "virtual_conference_user_interests"
"""
input virtual_conference_user_interests_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_user_interests_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_user_interests_stream_cursor_value_input {
  id: Int
  ordering: Int
  user_id: Int
  virtual_conference_event_interest_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_user_interests_sum_fields {
   id: Int
   ordering: Int
   user_id: Int
   virtual_conference_event_interest_id: Int
}

"""
order by sum() on columns of table "virtual_conference_user_interests"
"""
input virtual_conference_user_interests_sum_order_by {
  id: order_by
  ordering: order_by
  user_id: order_by
  virtual_conference_event_interest_id: order_by
}

"""
update columns of table "virtual_conference_user_interests"
"""
enum virtual_conference_user_interests_update_column {
  """column name"""
id
  """column name"""
ordering
  """column name"""
user_id
  """column name"""
virtual_conference_event_interest_id
}

input virtual_conference_user_interests_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_user_interests_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_user_interests_set_input
  where: virtual_conference_user_interests_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_user_interests_var_pop_fields {
   id: Float
   ordering: Float
   user_id: Float
   virtual_conference_event_interest_id: Float
}

"""
order by var_pop() on columns of table "virtual_conference_user_interests"
"""
input virtual_conference_user_interests_var_pop_order_by {
  id: order_by
  ordering: order_by
  user_id: order_by
  virtual_conference_event_interest_id: order_by
}

"""aggregate var_samp on columns"""
type virtual_conference_user_interests_var_samp_fields {
   id: Float
   ordering: Float
   user_id: Float
   virtual_conference_event_interest_id: Float
}

"""
order by var_samp() on columns of table "virtual_conference_user_interests"
"""
input virtual_conference_user_interests_var_samp_order_by {
  id: order_by
  ordering: order_by
  user_id: order_by
  virtual_conference_event_interest_id: order_by
}

"""aggregate variance on columns"""
type virtual_conference_user_interests_variance_fields {
   id: Float
   ordering: Float
   user_id: Float
   virtual_conference_event_interest_id: Float
}

"""
order by variance() on columns of table "virtual_conference_user_interests"
"""
input virtual_conference_user_interests_variance_order_by {
  id: order_by
  ordering: order_by
  user_id: order_by
  virtual_conference_event_interest_id: order_by
}

"""
columns and relationships of "virtual_conference_user_notifications_last_emailed"
"""
type virtual_conference_user_notifications_last_emailed {
   id: Int! 
   updated_at: timestamptz! 
   user_id: Int! 
}

"""
aggregated selection of "virtual_conference_user_notifications_last_emailed"
"""
type virtual_conference_user_notifications_last_emailed_aggregate {
   aggregate: virtual_conference_user_notifications_last_emailed_aggregate_fields
   nodes: [virtual_conference_user_notifications_last_emailed! ]! 
}

"""
aggregate fields of "virtual_conference_user_notifications_last_emailed"
"""
type virtual_conference_user_notifications_last_emailed_aggregate_fields {
   avg: virtual_conference_user_notifications_last_emailed_avg_fields
   count(columns: [virtual_conference_user_notifications_last_emailed_select_column! ], distinct: Boolean): Int! 
   max: virtual_conference_user_notifications_last_emailed_max_fields
   min: virtual_conference_user_notifications_last_emailed_min_fields
   stddev: virtual_conference_user_notifications_last_emailed_stddev_fields
   stddev_pop: virtual_conference_user_notifications_last_emailed_stddev_pop_fields
   stddev_samp: virtual_conference_user_notifications_last_emailed_stddev_samp_fields
   sum: virtual_conference_user_notifications_last_emailed_sum_fields
   var_pop: virtual_conference_user_notifications_last_emailed_var_pop_fields
   var_samp: virtual_conference_user_notifications_last_emailed_var_samp_fields
   variance: virtual_conference_user_notifications_last_emailed_variance_fields
}

"""aggregate avg on columns"""
type virtual_conference_user_notifications_last_emailed_avg_fields {
   id: Float
   user_id: Float
}

"""
Boolean expression to filter rows from the table "virtual_conference_user_notifications_last_emailed". All fields are combined with a logical 'AND'.
"""
input virtual_conference_user_notifications_last_emailed_bool_exp {
  _and: [virtual_conference_user_notifications_last_emailed_bool_exp! ]
  _not: virtual_conference_user_notifications_last_emailed_bool_exp
  _or: [virtual_conference_user_notifications_last_emailed_bool_exp! ]
  id: Int_comparison_exp
  updated_at: timestamptz_comparison_exp
  user_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "virtual_conference_user_notifications_last_emailed"
"""
enum virtual_conference_user_notifications_last_emailed_constraint {
  """
  unique or primary key constraint on columns "id"
  """
virtual_conference_user_notifications_last_emailed_pkey
}

"""
input type for incrementing numeric columns in table "virtual_conference_user_notifications_last_emailed"
"""
input virtual_conference_user_notifications_last_emailed_inc_input {
  id: Int
  user_id: Int
}

"""
input type for inserting data into table "virtual_conference_user_notifications_last_emailed"
"""
input virtual_conference_user_notifications_last_emailed_insert_input {
  id: Int! 
  updated_at: timestamptz! 
  user_id: Int! 
}

"""aggregate max on columns"""
type virtual_conference_user_notifications_last_emailed_max_fields {
   id: Int
   updated_at: timestamptz
   user_id: Int
}

"""aggregate min on columns"""
type virtual_conference_user_notifications_last_emailed_min_fields {
   id: Int
   updated_at: timestamptz
   user_id: Int
}

"""
response of any mutation on the table "virtual_conference_user_notifications_last_emailed"
"""
type virtual_conference_user_notifications_last_emailed_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [virtual_conference_user_notifications_last_emailed! ]! 
}

"""
on_conflict condition type for table "virtual_conference_user_notifications_last_emailed"
"""
input virtual_conference_user_notifications_last_emailed_on_conflict {
  constraint: virtual_conference_user_notifications_last_emailed_constraint! 
  update_columns: [virtual_conference_user_notifications_last_emailed_update_column! ]! 
  where: virtual_conference_user_notifications_last_emailed_bool_exp
}

"""
Ordering options when selecting data from "virtual_conference_user_notifications_last_emailed".
"""
input virtual_conference_user_notifications_last_emailed_order_by {
  id: order_by
  updated_at: order_by
  user_id: order_by
}

"""
primary key columns input for table: virtual_conference_user_notifications_last_emailed
"""
input virtual_conference_user_notifications_last_emailed_pk_columns_input {
  id: Int! 
}

"""
select columns of table "virtual_conference_user_notifications_last_emailed"
"""
enum virtual_conference_user_notifications_last_emailed_select_column {
  """column name"""
id
  """column name"""
updated_at
  """column name"""
user_id
}

"""
input type for updating data in table "virtual_conference_user_notifications_last_emailed"
"""
input virtual_conference_user_notifications_last_emailed_set_input {
  id: Int
  updated_at: timestamptz
  user_id: Int
}

"""aggregate stddev on columns"""
type virtual_conference_user_notifications_last_emailed_stddev_fields {
   id: Float
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type virtual_conference_user_notifications_last_emailed_stddev_pop_fields {
   id: Float
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type virtual_conference_user_notifications_last_emailed_stddev_samp_fields {
   id: Float
   user_id: Float
}

"""
Streaming cursor of the table "virtual_conference_user_notifications_last_emailed"
"""
input virtual_conference_user_notifications_last_emailed_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: virtual_conference_user_notifications_last_emailed_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input virtual_conference_user_notifications_last_emailed_stream_cursor_value_input {
  id: Int
  updated_at: timestamptz
  user_id: Int
}

"""aggregate sum on columns"""
type virtual_conference_user_notifications_last_emailed_sum_fields {
   id: Int
   user_id: Int
}

"""
update columns of table "virtual_conference_user_notifications_last_emailed"
"""
enum virtual_conference_user_notifications_last_emailed_update_column {
  """column name"""
id
  """column name"""
updated_at
  """column name"""
user_id
}

input virtual_conference_user_notifications_last_emailed_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: virtual_conference_user_notifications_last_emailed_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: virtual_conference_user_notifications_last_emailed_set_input
  where: virtual_conference_user_notifications_last_emailed_bool_exp! 
}

"""aggregate var_pop on columns"""
type virtual_conference_user_notifications_last_emailed_var_pop_fields {
   id: Float
   user_id: Float
}

"""aggregate var_samp on columns"""
type virtual_conference_user_notifications_last_emailed_var_samp_fields {
   id: Float
   user_id: Float
}

"""aggregate variance on columns"""
type virtual_conference_user_notifications_last_emailed_variance_fields {
   id: Float
   user_id: Float
}

"""
columns and relationships of "walkthrough_metrics"
"""
type walkthrough_metrics {
   complete: Boolean! 
   created_at: timestamptz! 
   id: Int! 
   seen_inline: Boolean! 
   skipped_on_page: Int
   user_id: Int! 
   walthrough_type: String! 
}

"""
aggregated selection of "walkthrough_metrics"
"""
type walkthrough_metrics_aggregate {
   aggregate: walkthrough_metrics_aggregate_fields
   nodes: [walkthrough_metrics! ]! 
}

"""
aggregate fields of "walkthrough_metrics"
"""
type walkthrough_metrics_aggregate_fields {
   avg: walkthrough_metrics_avg_fields
   count(columns: [walkthrough_metrics_select_column! ], distinct: Boolean): Int! 
   max: walkthrough_metrics_max_fields
   min: walkthrough_metrics_min_fields
   stddev: walkthrough_metrics_stddev_fields
   stddev_pop: walkthrough_metrics_stddev_pop_fields
   stddev_samp: walkthrough_metrics_stddev_samp_fields
   sum: walkthrough_metrics_sum_fields
   var_pop: walkthrough_metrics_var_pop_fields
   var_samp: walkthrough_metrics_var_samp_fields
   variance: walkthrough_metrics_variance_fields
}

"""aggregate avg on columns"""
type walkthrough_metrics_avg_fields {
   id: Float
   skipped_on_page: Float
   user_id: Float
}

"""
Boolean expression to filter rows from the table "walkthrough_metrics". All fields are combined with a logical 'AND'.
"""
input walkthrough_metrics_bool_exp {
  _and: [walkthrough_metrics_bool_exp! ]
  _not: walkthrough_metrics_bool_exp
  _or: [walkthrough_metrics_bool_exp! ]
  complete: Boolean_comparison_exp
  created_at: timestamptz_comparison_exp
  id: Int_comparison_exp
  seen_inline: Boolean_comparison_exp
  skipped_on_page: Int_comparison_exp
  user_id: Int_comparison_exp
  walthrough_type: String_comparison_exp
}

"""
unique or primary key constraints on table "walkthrough_metrics"
"""
enum walkthrough_metrics_constraint {
  """
  unique or primary key constraint on columns "id"
  """
walkthrough_metrics_pkey
  """
  unique or primary key constraint on columns "walthrough_type", "user_id"
  """
walkthrough_metrics_walthrough_type_user_id_key
}

"""
input type for incrementing numeric columns in table "walkthrough_metrics"
"""
input walkthrough_metrics_inc_input {
  id: Int
  skipped_on_page: Int
  user_id: Int
}

"""
input type for inserting data into table "walkthrough_metrics"
"""
input walkthrough_metrics_insert_input {
  complete: Boolean! 
  created_at: timestamptz! 
  id: Int! 
  seen_inline: Boolean! 
  skipped_on_page: Int
  user_id: Int! 
  walthrough_type: String! 
}

"""aggregate max on columns"""
type walkthrough_metrics_max_fields {
   created_at: timestamptz
   id: Int
   skipped_on_page: Int
   user_id: Int
   walthrough_type: String
}

"""aggregate min on columns"""
type walkthrough_metrics_min_fields {
   created_at: timestamptz
   id: Int
   skipped_on_page: Int
   user_id: Int
   walthrough_type: String
}

"""
response of any mutation on the table "walkthrough_metrics"
"""
type walkthrough_metrics_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [walkthrough_metrics! ]! 
}

"""
on_conflict condition type for table "walkthrough_metrics"
"""
input walkthrough_metrics_on_conflict {
  constraint: walkthrough_metrics_constraint! 
  update_columns: [walkthrough_metrics_update_column! ]! 
  where: walkthrough_metrics_bool_exp
}

"""Ordering options when selecting data from "walkthrough_metrics"."""
input walkthrough_metrics_order_by {
  complete: order_by
  created_at: order_by
  id: order_by
  seen_inline: order_by
  skipped_on_page: order_by
  user_id: order_by
  walthrough_type: order_by
}

"""primary key columns input for table: walkthrough_metrics"""
input walkthrough_metrics_pk_columns_input {
  id: Int! 
}

"""
select columns of table "walkthrough_metrics"
"""
enum walkthrough_metrics_select_column {
  """column name"""
complete
  """column name"""
created_at
  """column name"""
id
  """column name"""
seen_inline
  """column name"""
skipped_on_page
  """column name"""
user_id
  """column name"""
walthrough_type
}

"""
input type for updating data in table "walkthrough_metrics"
"""
input walkthrough_metrics_set_input {
  complete: Boolean
  created_at: timestamptz
  id: Int
  seen_inline: Boolean
  skipped_on_page: Int
  user_id: Int
  walthrough_type: String
}

"""aggregate stddev on columns"""
type walkthrough_metrics_stddev_fields {
   id: Float
   skipped_on_page: Float
   user_id: Float
}

"""aggregate stddev_pop on columns"""
type walkthrough_metrics_stddev_pop_fields {
   id: Float
   skipped_on_page: Float
   user_id: Float
}

"""aggregate stddev_samp on columns"""
type walkthrough_metrics_stddev_samp_fields {
   id: Float
   skipped_on_page: Float
   user_id: Float
}

"""
Streaming cursor of the table "walkthrough_metrics"
"""
input walkthrough_metrics_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: walkthrough_metrics_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input walkthrough_metrics_stream_cursor_value_input {
  complete: Boolean
  created_at: timestamptz
  id: Int
  seen_inline: Boolean
  skipped_on_page: Int
  user_id: Int
  walthrough_type: String
}

"""aggregate sum on columns"""
type walkthrough_metrics_sum_fields {
   id: Int
   skipped_on_page: Int
   user_id: Int
}

"""
update columns of table "walkthrough_metrics"
"""
enum walkthrough_metrics_update_column {
  """column name"""
complete
  """column name"""
created_at
  """column name"""
id
  """column name"""
seen_inline
  """column name"""
skipped_on_page
  """column name"""
user_id
  """column name"""
walthrough_type
}

input walkthrough_metrics_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: walkthrough_metrics_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: walkthrough_metrics_set_input
  where: walkthrough_metrics_bool_exp! 
}

"""aggregate var_pop on columns"""
type walkthrough_metrics_var_pop_fields {
   id: Float
   skipped_on_page: Float
   user_id: Float
}

"""aggregate var_samp on columns"""
type walkthrough_metrics_var_samp_fields {
   id: Float
   skipped_on_page: Float
   user_id: Float
}

"""aggregate variance on columns"""
type walkthrough_metrics_variance_fields {
   id: Float
   skipped_on_page: Float
   user_id: Float
}

"""
columns and relationships of "zoom_users_cache"
"""
type zoom_users_cache {
   email: String! 
   event_id: Int! 
   first_name: String! 
   id: Int! 
   last_name: String! 
   updated_at: timestamptz
   zoom_user_id: String! 
   zoom_user_type: Int! 
}

"""
aggregated selection of "zoom_users_cache"
"""
type zoom_users_cache_aggregate {
   aggregate: zoom_users_cache_aggregate_fields
   nodes: [zoom_users_cache! ]! 
}

"""
aggregate fields of "zoom_users_cache"
"""
type zoom_users_cache_aggregate_fields {
   avg: zoom_users_cache_avg_fields
   count(columns: [zoom_users_cache_select_column! ], distinct: Boolean): Int! 
   max: zoom_users_cache_max_fields
   min: zoom_users_cache_min_fields
   stddev: zoom_users_cache_stddev_fields
   stddev_pop: zoom_users_cache_stddev_pop_fields
   stddev_samp: zoom_users_cache_stddev_samp_fields
   sum: zoom_users_cache_sum_fields
   var_pop: zoom_users_cache_var_pop_fields
   var_samp: zoom_users_cache_var_samp_fields
   variance: zoom_users_cache_variance_fields
}

"""aggregate avg on columns"""
type zoom_users_cache_avg_fields {
   event_id: Float
   id: Float
   zoom_user_type: Float
}

"""
Boolean expression to filter rows from the table "zoom_users_cache". All fields are combined with a logical 'AND'.
"""
input zoom_users_cache_bool_exp {
  _and: [zoom_users_cache_bool_exp! ]
  _not: zoom_users_cache_bool_exp
  _or: [zoom_users_cache_bool_exp! ]
  email: String_comparison_exp
  event_id: Int_comparison_exp
  first_name: String_comparison_exp
  id: Int_comparison_exp
  last_name: String_comparison_exp
  updated_at: timestamptz_comparison_exp
  zoom_user_id: String_comparison_exp
  zoom_user_type: Int_comparison_exp
}

"""
unique or primary key constraints on table "zoom_users_cache"
"""
enum zoom_users_cache_constraint {
  """
  unique or primary key constraint on columns "id"
  """
zoom_users_cache_pkey
  """
  unique or primary key constraint on columns "event_id", "zoom_user_id"
  """
zoom_users_cache_zoom_user_id_event_id_key
}

"""
input type for incrementing numeric columns in table "zoom_users_cache"
"""
input zoom_users_cache_inc_input {
  event_id: Int
  id: Int
  zoom_user_type: Int
}

"""
input type for inserting data into table "zoom_users_cache"
"""
input zoom_users_cache_insert_input {
  email: String! 
  event_id: Int! 
  first_name: String! 
  id: Int! 
  last_name: String! 
  updated_at: timestamptz! 
  zoom_user_id: String! 
  zoom_user_type: Int! 
}

"""aggregate max on columns"""
type zoom_users_cache_max_fields {
   email: String
   event_id: Int
   first_name: String
   id: Int
   last_name: String
   updated_at: timestamptz
   zoom_user_id: String
   zoom_user_type: Int
}

"""aggregate min on columns"""
type zoom_users_cache_min_fields {
   email: String
   event_id: Int
   first_name: String
   id: Int
   last_name: String
   updated_at: timestamptz
   zoom_user_id: String
   zoom_user_type: Int
}

"""
response of any mutation on the table "zoom_users_cache"
"""
type zoom_users_cache_mutation_response {
  """number of rows affected by the mutation"""
 affected_rows: Int! 
  """data from the rows affected by the mutation"""
 returning: [zoom_users_cache! ]! 
}

"""
on_conflict condition type for table "zoom_users_cache"
"""
input zoom_users_cache_on_conflict {
  constraint: zoom_users_cache_constraint! 
  update_columns: [zoom_users_cache_update_column! ]! 
  where: zoom_users_cache_bool_exp
}

"""Ordering options when selecting data from "zoom_users_cache"."""
input zoom_users_cache_order_by {
  email: order_by
  event_id: order_by
  first_name: order_by
  id: order_by
  last_name: order_by
  updated_at: order_by
  zoom_user_id: order_by
  zoom_user_type: order_by
}

"""primary key columns input for table: zoom_users_cache"""
input zoom_users_cache_pk_columns_input {
  id: Int! 
}

"""
select columns of table "zoom_users_cache"
"""
enum zoom_users_cache_select_column {
  """column name"""
email
  """column name"""
event_id
  """column name"""
first_name
  """column name"""
id
  """column name"""
last_name
  """column name"""
updated_at
  """column name"""
zoom_user_id
  """column name"""
zoom_user_type
}

"""
input type for updating data in table "zoom_users_cache"
"""
input zoom_users_cache_set_input {
  email: String
  event_id: Int
  first_name: String
  id: Int
  last_name: String
  updated_at: timestamptz
  zoom_user_id: String
  zoom_user_type: Int
}

"""aggregate stddev on columns"""
type zoom_users_cache_stddev_fields {
   event_id: Float
   id: Float
   zoom_user_type: Float
}

"""aggregate stddev_pop on columns"""
type zoom_users_cache_stddev_pop_fields {
   event_id: Float
   id: Float
   zoom_user_type: Float
}

"""aggregate stddev_samp on columns"""
type zoom_users_cache_stddev_samp_fields {
   event_id: Float
   id: Float
   zoom_user_type: Float
}

"""
Streaming cursor of the table "zoom_users_cache"
"""
input zoom_users_cache_stream_cursor_input {
  """Stream column input with initial value"""
initial_value: zoom_users_cache_stream_cursor_value_input! 
  """cursor ordering"""
ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input zoom_users_cache_stream_cursor_value_input {
  email: String
  event_id: Int
  first_name: String
  id: Int
  last_name: String
  updated_at: timestamptz
  zoom_user_id: String
  zoom_user_type: Int
}

"""aggregate sum on columns"""
type zoom_users_cache_sum_fields {
   event_id: Int
   id: Int
   zoom_user_type: Int
}

"""
update columns of table "zoom_users_cache"
"""
enum zoom_users_cache_update_column {
  """column name"""
email
  """column name"""
event_id
  """column name"""
first_name
  """column name"""
id
  """column name"""
last_name
  """column name"""
updated_at
  """column name"""
zoom_user_id
  """column name"""
zoom_user_type
}

input zoom_users_cache_updates {
  """increments the numeric columns with given value of the filtered values"""
_inc: zoom_users_cache_inc_input
  """sets the columns of the filtered rows to the given values"""
_set: zoom_users_cache_set_input
  where: zoom_users_cache_bool_exp! 
}

"""aggregate var_pop on columns"""
type zoom_users_cache_var_pop_fields {
   event_id: Float
   id: Float
   zoom_user_type: Float
}

"""aggregate var_samp on columns"""
type zoom_users_cache_var_samp_fields {
   event_id: Float
   id: Float
   zoom_user_type: Float
}

"""aggregate variance on columns"""
type zoom_users_cache_variance_fields {
   event_id: Float
   id: Float
   zoom_user_type: Float
}