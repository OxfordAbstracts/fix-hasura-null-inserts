// Generated by purs version 0.15.7
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Monad_Error_Class from "../Control.Monad.Error.Class/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_GraphQL_AST_Print from "../Data.GraphQL.AST.Print/index.js";
import * as Data_GraphQL_Parser from "../Data.GraphQL.Parser/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Data_Unit from "../Data.Unit/index.js";
import * as Effect_Aff from "../Effect.Aff/index.js";
import * as Effect_Exception from "../Effect.Exception/index.js";
import * as Hasura_FixNullInserts from "../Hasura.FixNullInserts/index.js";
import * as Node_Encoding from "../Node.Encoding/index.js";
import * as Node_FS_Aff from "../Node.FS.Aff/index.js";
import * as Parsing from "../Parsing/index.js";
import * as Pg_GetTables from "../Pg.GetTables/index.js";
var bind = /* #__PURE__ */ Control_Bind.bind(Effect_Aff.bindAff);
var discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff);
var printAst = /* #__PURE__ */ Data_GraphQL_AST_Print.printAst(Data_GraphQL_AST_Print.printAstDocument);
var pure = /* #__PURE__ */ Control_Applicative.pure(Effect_Aff.applicativeAff);
var testTables = /* #__PURE__ */ Pg_GetTables.keyTables([ {
    name: "submissions_with_archived",
    columns: [ {
        name: "event_id",
        nullable: false
    } ]
} ]);
var rethrow = function (dictMonadThrow) {
    var throwError = Control_Monad_Error_Class.throwError(dictMonadThrow);
    var pure1 = Control_Applicative.pure((dictMonadThrow.Monad0()).Applicative0());
    return function (dictShow) {
        var show = Data_Show.show(dictShow);
        return function (v) {
            if (v instanceof Data_Either.Left) {
                return throwError(Effect_Exception.error(show(v.value0)));
            };
            if (v instanceof Data_Either.Right) {
                return pure1(v.value0);
            };
            throw new Error("Failed pattern match at Test.Main (line 53, column 11 - line 55, column 20): " + [ v.constructor.name ]);
        };
    };
};
var rethrow1 = /* #__PURE__ */ rethrow(Effect_Aff.monadThrowAff)(Parsing.showParseError);
var main = /* #__PURE__ */ (function () {
    return Effect_Aff.launchAff_(bind(Node_FS_Aff.readTextFile(Node_Encoding.UTF8.value)("./test/schema.graphql"))(function (schemaSrc) {
        return bind(rethrow1(Parsing.runParser(schemaSrc)(Data_GraphQL_Parser.document)))(function (doc) {
            var transformed = Hasura_FixNullInserts.fixNullInsertsOnAst(testTables)(doc);
            return discard(Node_FS_Aff.writeTextFile(Node_Encoding.UTF8.value)("./test/transformed.graphql")(printAst(transformed)))(function () {
                return pure(Data_Unit.unit);
            });
        });
    }));
})();
export {
    main
};
