// Generated by purs version 0.15.7
import * as Control_Category from "../Control.Category/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Unit from "../Data.Unit/index.js";
import * as Effect_Aff from "../Effect.Aff/index.js";
import * as Effect_Class from "../Effect.Class/index.js";
import * as Node_Process from "../Node.Process/index.js";
import * as Run from "../Run/index.js";
import * as Type_Proxy from "../Type.Proxy/index.js";
var liftEffect = /* #__PURE__ */ Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
var map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorFn);
var identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);
var LookupEnv = /* #__PURE__ */ (function () {
    function LookupEnv(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    LookupEnv.create = function (value0) {
        return function (value1) {
            return new LookupEnv(value0, value1);
        };
    };
    return LookupEnv;
})();
var SetEnv = /* #__PURE__ */ (function () {
    function SetEnv(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    SetEnv.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new SetEnv(value0, value1, value2);
            };
        };
    };
    return SetEnv;
})();
var handleEnvironment = function (op) {
    return liftEffect((function () {
        if (op instanceof LookupEnv) {
            return function __do() {
                var value = Node_Process.lookupEnv(op.value0)();
                return op.value1(value);
            };
        };
        if (op instanceof SetEnv) {
            return function __do() {
                Node_Process.setEnv(op.value0)(op.value1)();
                return op.value2;
            };
        };
        throw new Error("Failed pattern match at Dotenv.Internal.Environment (line 35, column 3 - line 41, column 16): " + [ op.constructor.name ]);
    })());
};
var functorEnvironmentF = {
    map: function (f) {
        return function (m) {
            if (m instanceof LookupEnv) {
                return new LookupEnv(m.value0, map(f)(m.value1));
            };
            if (m instanceof SetEnv) {
                return new SetEnv(m.value0, m.value1, f(m.value2));
            };
            throw new Error("Failed pattern match at Dotenv.Internal.Environment (line 0, column 0 - line 0, column 0): " + [ m.constructor.name ]);
        };
    }
};
var lift = /* #__PURE__ */ Run.lift()({
    reflectSymbol: function () {
        return "environment";
    }
})(functorEnvironmentF);
var _environment = /* #__PURE__ */ (function () {
    return Type_Proxy["Proxy"].value;
})();
var lookupEnv = function (name) {
    return lift(_environment)(new LookupEnv(name, identity));
};
var setEnv = function (name) {
    return function (value) {
        return lift(_environment)(new SetEnv(name, value, Data_Unit.unit));
    };
};
export {
    LookupEnv,
    SetEnv,
    _environment,
    handleEnvironment,
    lookupEnv,
    setEnv,
    functorEnvironmentF
};
