// Generated by purs version 0.15.7
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_GraphQL_AST from "../Data.GraphQL.AST/index.js";
import * as Data_GraphQL_AST_Print from "../Data.GraphQL.AST.Print/index.js";
import * as Data_Lens_Internal_Wander from "../Data.Lens.Internal.Wander/index.js";
import * as Data_Lens_Iso_Newtype from "../Data.Lens.Iso.Newtype/index.js";
import * as Data_Lens_Setter from "../Data.Lens.Setter/index.js";
import * as Data_Map_Internal from "../Data.Map.Internal/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Ord from "../Data.Ord/index.js";
import * as Data_Profunctor from "../Data.Profunctor/index.js";
import * as Data_Profunctor_Choice from "../Data.Profunctor.Choice/index.js";
import * as Data_String_CodeUnits from "../Data.String.CodeUnits/index.js";
import * as Data_String_Common from "../Data.String.Common/index.js";
import * as Data_Traversable from "../Data.Traversable/index.js";
import * as Effect_Aff from "../Effect.Aff/index.js";
import * as Gql_Lens from "../Gql.Lens/index.js";
import * as Hasura_GetSchema from "../Hasura.GetSchema/index.js";
import * as Pg_GetTables from "../Pg.GetTables/index.js";
var lookup = /* #__PURE__ */ Data_Map_Internal.lookup(Data_Ord.ordString);
var mapFlipped = /* #__PURE__ */ Data_Functor.mapFlipped(Data_Maybe.functorMaybe);
var bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(Data_Maybe.bindMaybe);
var inputFieldsLens = /* #__PURE__ */ Gql_Lens.inputFieldsLens(Data_Traversable.traversableMaybe)(Data_Lens_Internal_Wander.wanderFunction);
var _Newtype = /* #__PURE__ */ Data_Lens_Iso_Newtype["_Newtype"]()()(Data_Profunctor.profunctorFn);
var inputObjectTypeDefinitionLens = /* #__PURE__ */ Gql_Lens.inputObjectTypeDefinitionLens(Data_Profunctor_Choice.choiceFn)(Data_Lens_Internal_Wander.wanderFunction);
var bind = /* #__PURE__ */ Control_Bind.bind(Effect_Aff.bindAff);
var pure = /* #__PURE__ */ Control_Applicative.pure(Effect_Aff.applicativeAff);
var printAst = /* #__PURE__ */ Data_GraphQL_AST_Print.printAst(Data_GraphQL_AST_Print.printAstDocument);
var fixNullInsertsOnAst = function (tables) {
    var setNullable = function (v) {
        return function (v1) {
            if (!v && v1 instanceof Data_GraphQL_AST.Type_NamedType) {
                return new Data_GraphQL_AST.Type_NonNullType(new Data_GraphQL_AST.NonNullType_NamedType(v1.value0));
            };
            if (!v && v1 instanceof Data_GraphQL_AST.Type_ListType) {
                return new Data_GraphQL_AST.Type_NonNullType(new Data_GraphQL_AST.NonNullType_ListType(v1.value0));
            };
            return v1;
        };
    };
    var transformInputFieldDefinition = function (pgTable) {
        return function (v) {
            var v1 = function (v2) {
                return v;
            };
            var $33 = lookup(v.name)(pgTable.columns);
            if ($33 instanceof Data_Maybe.Just) {
                return {
                    description: v.description,
                    name: v.name,
                    type: setNullable($33.value0.nullable)(v.type),
                    defaultValue: v.defaultValue,
                    directives: v.directives
                };
            };
            return v1(true);
        };
    };
    var lookupTable = function (name) {
        return lookup(name)(tables);
    };
    var getPgTableName = function (description) {
        return mapFlipped(Data_String_CodeUnits.stripPrefix("input type for inserting data into table \"")(Data_String_Common.trim(description)))(Data_String_CodeUnits.takeWhile(function (v) {
            return v !== "\"";
        }));
    };
    var transformInputObjectTypeDefinition = function (v) {
        var v1 = function (v2) {
            return v;
        };
        if (v.description instanceof Data_Maybe.Just) {
            var $39 = bindFlipped(lookupTable)(getPgTableName(v.description.value0));
            if ($39 instanceof Data_Maybe.Just) {
                return {
                    description: v.description,
                    name: v.name,
                    directives: v.directives,
                    inputFieldsDefinition: Data_Lens_Setter.over(function ($47) {
                        return inputFieldsLens(_Newtype($47));
                    })(transformInputFieldDefinition($39.value0))(v.inputFieldsDefinition)
                };
            };
            return v1(true);
        };
        return v1(true);
    };
    return Data_Lens_Setter.over(function ($48) {
        return inputObjectTypeDefinitionLens(_Newtype($48));
    })(transformInputObjectTypeDefinition);
};
var fixNullInserts = function (v) {
    return bind(Pg_GetTables.getTablesKeyed({
        url: v.database_url
    }))(function (tables) {
        return bind(Hasura_GetSchema.getGqlDoc(v.gql_url)(v.gql_headers))(function (doc) {
            var transformedDoc = fixNullInsertsOnAst(tables)(doc);
            return pure(printAst(transformedDoc));
        });
    });
};
export {
    fixNullInserts,
    fixNullInsertsOnAst
};
