// Generated by purs version 0.15.7
import * as $foreign from "./foreign.js";
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Monad_Error_Class from "../Control.Monad.Error.Class/index.js";
import * as Control_Promise from "../Control.Promise/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_GraphQL_Parser from "../Data.GraphQL.Parser/index.js";
import * as Effect_Aff from "../Effect.Aff/index.js";
import * as Effect_Exception from "../Effect.Exception/index.js";
import * as Parsing from "../Parsing/index.js";
var bind = /* #__PURE__ */ Control_Bind.bind(Effect_Aff.bindAff);
var pure = /* #__PURE__ */ Control_Applicative.pure(Effect_Aff.applicativeAff);
var rethrow = function (dictMonadThrow) {
    var throwError = Control_Monad_Error_Class.throwError(dictMonadThrow);
    var pure1 = Control_Applicative.pure((dictMonadThrow.Monad0()).Applicative0());
    return function (fn) {
        return function (v) {
            if (v instanceof Data_Either.Left) {
                return throwError(Effect_Exception.error(fn(v.value0)));
            };
            if (v instanceof Data_Either.Right) {
                return pure1(v.value0);
            };
            throw new Error("Failed pattern match at Hasura.GetSchema (line 30, column 14 - line 32, column 30): " + [ v.constructor.name ]);
        };
    };
};
var rethrow1 = /* #__PURE__ */ rethrow(Effect_Aff.monadThrowAff);
var getGqlDoc = function (url) {
    return function (headers) {
        return bind(Control_Promise.toAffE($foreign.getGqlSchemaImpl({
            url: url,
            headers: headers
        })))(function (schema) {
            return bind(rethrow1(Parsing.parseErrorMessage)(Parsing.runParser(schema)(Data_GraphQL_Parser.document)))(function (res) {
                return pure(res);
            });
        });
    };
};
export {
    getGqlDoc
};
