// Generated by purs version 0.15.7
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Monad_Error_Class from "../Control.Monad.Error.Class/index.js";
import * as Data_Argonaut_Decode_Class from "../Data.Argonaut.Decode.Class/index.js";
import * as Data_Argonaut_Decode_Error from "../Data.Argonaut.Decode.Error/index.js";
import * as Data_Argonaut_Decode_Parser from "../Data.Argonaut.Decode.Parser/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Dotenv from "../Dotenv/index.js";
import * as Effect from "../Effect/index.js";
import * as Effect_Aff from "../Effect.Aff/index.js";
import * as Effect_Class from "../Effect.Class/index.js";
import * as Effect_Exception from "../Effect.Exception/index.js";
import * as Foreign_Object from "../Foreign.Object/index.js";
import * as Hasura_FixNullInserts from "../Hasura.FixNullInserts/index.js";
import * as Node_Encoding from "../Node.Encoding/index.js";
import * as Node_FS_Aff from "../Node.FS.Aff/index.js";
import * as Node_Process from "../Node.Process/index.js";
var bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(Data_Either.bindEither);
var throwError = /* #__PURE__ */ Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEffect);
var liftEffect = /* #__PURE__ */ Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
var bind1 = /* #__PURE__ */ Control_Bind.bind(Effect_Aff.bindAff);
var map = /* #__PURE__ */ Data_Functor.map(Effect_Aff.functorAff);
var map1 = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);
var rethrow = function (dictMonadThrow) {
    var throwError1 = Control_Monad_Error_Class.throwError(dictMonadThrow);
    var pure1 = Control_Applicative.pure((dictMonadThrow.Monad0()).Applicative0());
    return function (dictShow) {
        var show = Data_Show.show(dictShow);
        return function (v) {
            if (v instanceof Data_Either.Left) {
                return throwError1(Effect_Exception.error(show(v.value0)));
            };
            if (v instanceof Data_Either.Right) {
                return pure1(v.value0);
            };
            throw new Error("Failed pattern match at Main (line 43, column 11 - line 45, column 20): " + [ v.constructor.name ]);
        };
    };
};
var getEnvMbDecode = function (dictMonadEffect) {
    var liftEffect1 = Effect_Class.liftEffect(dictMonadEffect);
    return function (dictDecodeJson) {
        var decodeJson = Data_Argonaut_Decode_Class.decodeJson(dictDecodeJson);
        return function (key) {
            return liftEffect1(function __do() {
                var valueMb = Node_Process.lookupEnv(key)();
                if (valueMb instanceof Data_Maybe.Nothing) {
                    return Data_Maybe.Nothing.value;
                };
                if (valueMb instanceof Data_Maybe.Just) {
                    var v = bindFlipped(decodeJson)(Data_Argonaut_Decode_Parser.parseJson(valueMb.value0));
                    if (v instanceof Data_Either.Left) {
                        return throwError(Effect_Exception.error(Data_Argonaut_Decode_Error.printJsonDecodeError(v.value0)))();
                    };
                    if (v instanceof Data_Either.Right) {
                        return new Data_Maybe.Just(v.value0);
                    };
                    throw new Error("Failed pattern match at Main (line 38, column 19 - line 40, column 31): " + [ v.constructor.name ]);
                };
                throw new Error("Failed pattern match at Main (line 36, column 3 - line 40, column 31): " + [ valueMb.constructor.name ]);
            });
        };
    };
};
var getEnvMbDecode1 = /* #__PURE__ */ getEnvMbDecode(Effect_Aff.monadEffectAff)(/* #__PURE__ */ Data_Argonaut_Decode_Class.decodeForeignObject(Data_Argonaut_Decode_Class.decodeJsonString));
var main = /* #__PURE__ */ (function () {
    var getEnv = function (key) {
        return liftEffect(function __do() {
            var v = Node_Process.lookupEnv(key)();
            if (v instanceof Data_Maybe.Just) {
                return v.value0;
            };
            if (v instanceof Data_Maybe.Nothing) {
                return throwError(Effect_Exception.error("Environment variable \"" + (key + "\" not found")))();
            };
            throw new Error("Failed pattern match at Main (line 29, column 47 - line 31, column 87): " + [ v.constructor.name ]);
        });
    };
    return Effect_Aff.launchAff_(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Functor["void"](Effect_Aff.functorAff)(Dotenv.loadFile))(function () {
        return bind1(getEnv("DATABASE_URL"))(function (database_url) {
            return bind1(getEnv("GQL_URL"))(function (gql_url) {
                return bind1(map(Data_Maybe.fromMaybe(Foreign_Object.empty))(getEnvMbDecode1("GQL_HEADERS")))(function (gql_headers) {
                    return bind1(liftEffect(map1(Data_Maybe.fromMaybe("./transformed.gql"))(Node_Process.lookupEnv("OUT_PATH"))))(function (out_path) {
                        return bind1(Hasura_FixNullInserts.fixNullInserts({
                            database_url: database_url,
                            gql_url: gql_url,
                            gql_headers: gql_headers
                        }))(function (transformed) {
                            return Node_FS_Aff.writeTextFile(Node_Encoding.UTF8.value)(out_path)(transformed);
                        });
                    });
                });
            });
        });
    }));
})();
export {
    main,
    getEnvMbDecode,
    rethrow
};
